{"version":3,"file":"app/main.5cde1fd61812e5dceba1.js","mappings":"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","sources":["webpack://@bitwarden/web-vault/webpack/runtime/chunk loaded","webpack://@bitwarden/web-vault/webpack/runtime/load script","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-create.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/guards/org-permissions.guard.ts","webpack://@bitwarden/web-vault/./src/app/shared/loose-components.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/async-actions/async-actions.module.ts","webpack://@bitwarden/web-vault/./src/app/shared/locales.ts","webpack://@bitwarden/web-vault/./src/app/shared/shared.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-badge.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/vault-filter-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/vault-filter.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/injection-tokens.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/abstractEncrypt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/account-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/account.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/anonymousHub.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/config-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/folder/folder-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/messaging.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization/organization-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy/policy-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/storage.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/sync/syncNotifier.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/twoFactor.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/userVerification/userVerification-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/vaultTimeout/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/vaultTimeout/vaultTimeoutSettings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/accountFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/globalStateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/stateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/server-config.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/environmentUrls.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/stateVersion.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/themeType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/account.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/windowState.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/globalState.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/notificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/notificationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/deviceType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/anonymousHub.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/deviceRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/tokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/apiTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/tokenRequestTwoFactor.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/apiKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/attachmentResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/passwordHistoryResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/cipherResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/attachmentUploadDataResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/authRequestResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/authentication/registerResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billingResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billingHistoryResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billingPaymentResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/breachAccountResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/selectionReadOnlyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/collectionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/deviceVerificationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/globalDomainResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/domainsResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/emergencyAccessResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/eventResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/groupResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identityCaptchaResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identityTokenResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identityTwoFactorResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/keyConnectorUserKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/listResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationConnectionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationExportResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationSponsorshipSyncStatusResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationUserBulkResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/permissionsApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationUserResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileOrganizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileProviderOrganizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileProviderResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/paymentResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/planResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/policyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/preloginResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerOrganizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerUserBulkResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerUserResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/sendFileApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/sendTextApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendAccessResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendFileDownloadDataResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendFileUploadDataResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/ssoPreValidateResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/subscriptionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/folderResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/syncResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/taxInfoResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/taxRateResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorDuoResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorEmailResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorProviderResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorRescoverResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/userKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/htmlStorageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/throttle.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authenticationStatus.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authenticationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/keySuffixOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/twoFactorProviderType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/authResult.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/keysRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/logIn.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/hashPurpose.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/apiLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/passwordTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/passwordlessLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/ssoTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/preloginRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/sequentialize.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encArrayBuffer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sortedCiphersCache.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkDeleteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkMoveRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkRestoreRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherWithIdRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkShareRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherCollectionsRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherCreateRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherShareRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/server-config-response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/server-config.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/wordlist.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encryptedOrganizationKey.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encryptedObject.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/eventData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/eventRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/eventExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fileUploadType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/azureFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/bitwardenFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/folderData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/account/setKeyConnectorKeyRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/keyConnectorUserKeyRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/ssoEnums.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/ssoConfigApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization/organizationSsoResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationApiKeyInformationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationAutoEnrollStatusResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/keysResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationKeysResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationSubscriptionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/organizationData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/organization.ts","webpack://@bitwarden/web-vault/../../libs/common/src/types/syncEventArgs.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/generatedPasswordHistory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/policyData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/policy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/provider.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/sendType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/sendFileData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/sendTextData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/sendData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendFileView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendTextView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sendFile.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sendText.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/sendRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/storageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/providerData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/sync/sync.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/twoFactor.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/account/verifyOTPRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/secretVerificationRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/anonAddyForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/duckDuckGoForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/fastmailForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/firefoxRelayForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/forwarderOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/simpleLoginForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/decryptParameters.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/auth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/lock.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/unauth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/themeBuilder.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/jslib-services.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/folder/folder.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/folder/folder-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/account-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/account.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/vaultTimeout/vaultTimeoutSettings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/vaultTimeout/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/webCryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/encrypt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/event.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy/policy.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy/policy-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/keyConnector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/userVerification/userVerification.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization/organization.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/userVerification/userVerification-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization/organization-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/sync/syncNotifier.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/config.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/config/config.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/config/config-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/validation.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/memoryStorage.service.ts","webpack://@bitwarden/web-vault/./src/app/core/broadcaster-messaging.service.ts","webpack://@bitwarden/web-vault/./src/app/core/event.service.ts","webpack://@bitwarden/web-vault/./src/app/core/html-storage.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/container.service.ts","webpack://@bitwarden/web-vault/./src/app/core/init.service.ts","webpack://@bitwarden/web-vault/./src/app/core/modal.service.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.html","webpack://@bitwarden/web-vault/./src/app/core/password-reprompt.service.ts","webpack://@bitwarden/web-vault/./src/app/core/policy-list.service.ts","webpack://@bitwarden/web-vault/./src/app/core/router.service.ts","webpack://@bitwarden/web-vault/./src/app/core/state/account.ts","webpack://@bitwarden/web-vault/./src/app/core/state/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownloadBuilder.ts","webpack://@bitwarden/web-vault/./src/app/core/web-file-download.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/clientType.ts","webpack://@bitwarden/web-vault/./src/app/core/web-platform-utils.service.ts","webpack://@bitwarden/web-vault/./src/app/core/core.module.ts","webpack://@bitwarden/web-vault/./src/app/core/state/global-state.ts","webpack://@bitwarden/web-vault/./src/app/core/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/i18n.service.ts","webpack://@bitwarden/web-vault/./src/app/core/state-migration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/flags.ts","webpack://@bitwarden/web-vault/./src/utils/flags.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessAcceptRequest.ts","webpack://@bitwarden/web-vault/./src/app/common/base.accept.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserAcceptRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/passwordHintRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/hint.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/misc/captcha_iframe.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/iframe_component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authRequestType.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/captchaProtected.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/logInCredentials.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/passwordlessCreateAuthRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login/login-with-device.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/login/login-with-device.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/login.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login/login.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/login/login.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/deleteRecoverRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/twoFactorRecoveryRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/registerRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/inputsFieldMatch.validator.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/register.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/referenceEventRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/shared/components/password-strength/password-strength.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/shared/components/password-strength/password-strength.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error-summary.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/register.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/remove-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserResetPasswordEnrollmentRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/setPasswordRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/set-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/sso.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/productType.ts","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-information.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-information.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-forbes.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-forbes.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-us-news.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-us-news.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/confirmation-details.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/paymentMethodType.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/confirmation-details.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationCreateRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationKeysRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUpgradeRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerOrganizationCreateRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.ts","webpack://@bitwarden/web-vault/./src/scss/export.module.scss","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/taxInfoUpdateRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationTaxInfoUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.html","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.html","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/billing.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/billing.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/default-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/default-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise1-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise1-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise2-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise2-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams1-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams1-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams2-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams2-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-cnet.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-cnet.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-individual-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-individual-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/webauthn_iframe.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/twoFactorEmailRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/passwordRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/update-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserResetPasswordRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTempPasswordRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/update-temp-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verifyEmailRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verifyDeleteRecoverRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.html","webpack://@bitwarden/web-vault/./src/app/guards/home.guard.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/avatar.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-prop.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-item.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-trigger-for.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.html","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.html","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/selectionReadOnlyRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collection-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collection-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.directive.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/eventView.ts","webpack://@bitwarden/web-vault/./src/app/common/base.events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/events.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/groupRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserBulkRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserConfirmRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/common/base.people.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserBulkConfirmRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-restore-revoke.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-restore-revoke.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserInviteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.html","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserUpdateGroupsRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/policyRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/base-policy.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policy-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policy-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policies.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policies.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.html","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/transactionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verifyBankRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/bitPayInvoiceRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/paymentRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-billing.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-billing.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationApiKeyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationConnectionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/billingSyncConfigApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/billingSyncConfigRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationConnectionRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-sync-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-sync-key.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationApiKeyRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/billing-sync-api-key.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/billing-sync-api-key.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/storageRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.html","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationSubscriptionUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/adjust-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/adjust-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/change-plan.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/change-plan.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/download-license.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/download-license.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/image-subscription-hidden.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/image-subscription-hidden.component.svg","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorDuoRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/twoFactorProviderRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-base.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/deviceVerificationRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorAuthenticatorRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorEmailRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorWebAuthnDeleteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorWebAuthnRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorYubioOtpRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/not-premium.directive.ts","webpack://@bitwarden/web-vault/./src/app/components/premium-badge.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/true-false-value.directive.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.html","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/cipher-report.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/fallback-src.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/icon.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/icon.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/pipes/pipes.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/vault.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/vault-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/models/vault-filter.model.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.html","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/attachments.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/ciphers.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/ellipsis.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-name-badge.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-name-badge.component.html","webpack://@bitwarden/web-vault/./src/app/vault/shared/pipes/get-organization-name.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/ciphers.component.html","webpack://@bitwarden/web-vault/./src/app/vault/ciphers.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/ciphers.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.html","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/collections.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/vault-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/collection-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/collection-filter/collection-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/collection-filter/collection-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/folder-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/folder-filter/folder-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/folder-filter/folder-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/status-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/status-filter/status-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/status-filter/status-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/type-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/type-filter/type-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/type-filter/type-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/organization-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/enroll-master-password-reset.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/enroll-master-password-reset.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/link-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/link-sso.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-options.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-options.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-filter/vault-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/types/checkable.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/organization-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planSponsorshipType.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organizationSponsorshipRedeemRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/shared/guards/has-premium.guard.ts","webpack://@bitwarden/web-vault/./src/app/reports/models/report-variant.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/breach-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/breach-report.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-breach.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-exposed-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-inactive-two-factor.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-reused-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-unsecured-websites.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-weak-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/report-card/report-card.component.html","webpack://@bitwarden/web-vault/./src/app/reports/report-card/report-card.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/report-list/report-list.component.html","webpack://@bitwarden/web-vault/./src/app/reports/report-list/report-list.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reports-home.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports-layout.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/reports-home.component.html","webpack://@bitwarden/web-vault/./src/app/reports/reports-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendAccessView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sendAccess.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/sendAccessRequest.ts","webpack://@bitwarden/web-vault/./src/app/send/access.component.html","webpack://@bitwarden/web-vault/./src/app/send/access.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/send.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.html","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/send.component.html","webpack://@bitwarden/web-vault/./src/app/send/send.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.html","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emailTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emailRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateProfileRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.html","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateDomainsRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.html","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/emergencyAccessStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/emergencyAccessType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessConfirmRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessInviteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessPasswordRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.html","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.html","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/folderWithIdRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/sendWithIdRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateKeyRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/kdfRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/notAllowedValueAsync.validator.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.html","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-billing-history.component.html","webpack://@bitwarden/web-vault/./src/app/settings/user-billing-history.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/generator.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/password-generator-history.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/select-copy.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/color-password.pipe.ts","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.html","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.html","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/share.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault.module.ts","webpack://@bitwarden/web-vault/./src/app/oss-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login/login.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/organization-manage.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/organization-user.module.ts","webpack://@bitwarden/web-vault/./src/app/oss.module.ts","webpack://@bitwarden/web-vault/./src/app/wildcard-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerAddOrganizationRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/services/webProvider.service.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/add-organization.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/add-organization.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/guards/provider-permissions.guard.ts","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.html","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/clients.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/clients.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/create-organization.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserAcceptRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/accept-provider.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/accept-provider.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/events.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/events.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/manage.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/manage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserBulkRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserConfirmRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserBulkConfirmRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserInviteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserUpdateRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/people.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/people.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-layout.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-layout.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUpdateRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/account.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/account.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/settings.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup-provider.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup-provider.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerSetupRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-routing.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.html","webpack://@bitwarden/web-vault/./src/app/app.component.ts","webpack://@bitwarden/web-vault/./src/app/app.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/disable-personal-vault-export.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/disable-personal-vault-export.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/maximum-vault-timeout.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/maximum-vault-timeout.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/scimConfigApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/scimConfigRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/scim.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/scim.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/dirty.validator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organizationSsoRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/ssoConfigView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/view.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/a11y-invalid.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-strip-spaces.directive.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/base-cva.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-checkbox.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-checkbox.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text-readonly.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text-readonly.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/select.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/select.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/sso.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/sso.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/organizations-routing.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/organizations.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/main.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal.ref.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/user-verification.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/user-verification.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/a11y-title.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/api-action.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/autofocus.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-verbatim.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-click.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/toastr.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/credit-card-number.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/jslib.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/i18n.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/search.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/user-name.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/dynamic-modal.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal-injector.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/modal.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/models/dynamic-tree-node.model.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/services/vault-filter.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/event.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/folder/folder.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/keyConnector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/log.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization/organization.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/platformUtils.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy/policy.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/sync/sync.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/userVerification/userVerification.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/validation.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/cipherRepromptType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/cipherType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/encryptionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/eventType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fieldType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/kdfType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/linkedIdType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/policyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/secureNoteType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/uriMatchType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/verificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/linkedFieldOption.decorator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/treeNode.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/serviceUtils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/tldjs.noop.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/utils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/cardApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/fieldApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/identityApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/loginApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/loginUriApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/secureNoteApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/attachmentData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/cardData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/cipherData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/collectionData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/fieldData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/identityData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/loginData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/loginUriData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/passwordHistoryData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/secureNoteData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/attachment.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/card.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/cipher.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/collection.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/domainBase.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encString.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/field.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/folder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/identity.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/login.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/loginUri.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/password.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/secureNote.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/symmetricCryptoKey.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cardExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/fieldExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/identityExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/loginUriExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/loginExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/secureNoteExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipherExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipherWithIdsExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collectionExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collectionWithIdExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folderExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folderWithIdExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/attachmentRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/collectionRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/folderRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/baseResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/errorResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/attachmentView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/cardView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/cipherView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/collectionView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/fieldView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/folderView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/identityView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/itemView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/loginUriView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/loginView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/passwordHistoryView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/secureNoteView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/logLevelType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/consoleLog.service.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/button-like.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field-control.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/multi-select/multi-select.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/hint.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/label.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/prefix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/suffix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/i18n.pipe.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/shared.module.ts","webpack://@bitwarden/web-vault/webpack/bootstrap","webpack://@bitwarden/web-vault/webpack/runtime/compat get default export","webpack://@bitwarden/web-vault/webpack/runtime/define property getters","webpack://@bitwarden/web-vault/webpack/runtime/ensure chunk","webpack://@bitwarden/web-vault/webpack/runtime/get javascript chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/get mini-css chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/global","webpack://@bitwarden/web-vault/webpack/runtime/hasOwnProperty shorthand","webpack://@bitwarden/web-vault/webpack/runtime/make namespace object","webpack://@bitwarden/web-vault/webpack/runtime/node module decorator","webpack://@bitwarden/web-vault/webpack/runtime/publicPath","webpack://@bitwarden/web-vault/webpack/runtime/jsonp chunk loading","webpack://@bitwarden/web-vault/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"@bitwarden/web-vault:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { RegisterFormComponent } from \"./register-form.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [RegisterFormComponent],\n  exports: [RegisterFormComponent],\n})\nexport class RegisterFormModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { OrganizationInformationComponent } from \"./organization-information.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationInformationComponent],\n  exports: [OrganizationInformationComponent],\n})\nexport class OrganizationCreateModule {}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport {\n  canAccessOrgAdmin,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OrganizationPermissionsGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private syncService: SyncService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    // TODO: We need to fix this issue once and for all.\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n\n    const org = this.organizationService.get(route.params.organizationId);\n    if (org == null) {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    if (!org.isOwner && !org.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"organizationIsDisabled\")\n      );\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    const permissionsCallback: (organization: Organization) => boolean =\n      route.data?.organizationPermissions;\n    const hasPermissions = permissionsCallback == null || permissionsCallback(org);\n\n    if (!hasPermissions) {\n      // Handle linkable ciphers for organizations the user only has view access to\n      // https://bitwarden.atlassian.net/browse/EC-203\n      const cipherId =\n        state.root.queryParamMap.get(\"itemId\") || state.root.queryParamMap.get(\"cipherId\");\n      if (cipherId) {\n        return this.router.createUrlTree([\"/vault\"], {\n          queryParams: {\n            itemId: cipherId,\n          },\n        });\n      }\n\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"accessDenied\"));\n      return canAccessOrgAdmin(org)\n        ? this.router.createUrlTree([\"/organizations\", org.id])\n        : this.router.createUrlTree([\"/\"]);\n    }\n\n    return true;\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { UserVerificationComponent } from \"@bitwarden/angular/components/user-verification.component\";\n\nimport { AcceptEmergencyComponent } from \"../accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"../accounts/accept-organization.component\";\nimport { HintComponent } from \"../accounts/hint.component\";\nimport { LockComponent } from \"../accounts/lock.component\";\nimport { RecoverDeleteComponent } from \"../accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"../accounts/recover-two-factor.component\";\nimport { RegisterFormModule } from \"../accounts/register-form/register-form.module\";\nimport { RegisterComponent } from \"../accounts/register.component\";\nimport { RemovePasswordComponent } from \"../accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"../accounts/set-password.component\";\nimport { SsoComponent } from \"../accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"../accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"../accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"../accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"../accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"../accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"../accounts/verify-recover-delete.component\";\nimport { NestedCheckboxComponent } from \"../components/nested-checkbox.component\";\nimport { OrganizationSwitcherComponent } from \"../components/organization-switcher.component\";\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\nimport { PremiumBadgeComponent } from \"../components/premium-badge.component\";\nimport { UserVerificationPromptComponent } from \"../components/user-verification-prompt.component\";\nimport { FooterComponent } from \"../layouts/footer.component\";\nimport { FrontendLayoutComponent } from \"../layouts/frontend-layout.component\";\nimport { NavbarComponent } from \"../layouts/navbar.component\";\nimport { UserLayoutComponent } from \"../layouts/user-layout.component\";\nimport { OrganizationCreateModule } from \"../organizations/create/organization-create.module\";\nimport { OrganizationLayoutComponent } from \"../organizations/layouts/organization-layout.component\";\nimport { BulkConfirmComponent as OrgBulkConfirmComponent } from \"../organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent as OrgBulkRemoveComponent } from \"../organizations/manage/bulk/bulk-remove.component\";\nimport { BulkRestoreRevokeComponent as OrgBulkRestoreRevokeComponent } from \"../organizations/manage/bulk/bulk-restore-revoke.component\";\nimport { BulkStatusComponent as OrgBulkStatusComponent } from \"../organizations/manage/bulk/bulk-status.component\";\nimport { CollectionAddEditComponent as OrgCollectionAddEditComponent } from \"../organizations/manage/collection-add-edit.component\";\nimport { CollectionsComponent as OrgManageCollectionsComponent } from \"../organizations/manage/collections.component\";\nimport { EntityEventsComponent as OrgEntityEventsComponent } from \"../organizations/manage/entity-events.component\";\nimport { EventsComponent as OrgEventsComponent } from \"../organizations/manage/events.component\";\nimport { GroupAddEditComponent as OrgGroupAddEditComponent } from \"../organizations/manage/group-add-edit.component\";\nimport { GroupsComponent as OrgGroupsComponent } from \"../organizations/manage/groups.component\";\nimport { ManageComponent as OrgManageComponent } from \"../organizations/manage/manage.component\";\nimport { PeopleComponent as OrgPeopleComponent } from \"../organizations/manage/people.component\";\nimport { PoliciesComponent as OrgPoliciesComponent } from \"../organizations/manage/policies.component\";\nimport { PolicyEditComponent as OrgPolicyEditComponent } from \"../organizations/manage/policy-edit.component\";\nimport { ResetPasswordComponent as OrgResetPasswordComponent } from \"../organizations/manage/reset-password.component\";\nimport { UserAddEditComponent as OrgUserAddEditComponent } from \"../organizations/manage/user-add-edit.component\";\nimport { UserConfirmComponent as OrgUserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\nimport { UserGroupsComponent as OrgUserGroupsComponent } from \"../organizations/manage/user-groups.component\";\nimport { DisableSendPolicyComponent } from \"../organizations/policies/disable-send.component\";\nimport { MasterPasswordPolicyComponent } from \"../organizations/policies/master-password.component\";\nimport { PasswordGeneratorPolicyComponent } from \"../organizations/policies/password-generator.component\";\nimport { PersonalOwnershipPolicyComponent } from \"../organizations/policies/personal-ownership.component\";\nimport { RequireSsoPolicyComponent } from \"../organizations/policies/require-sso.component\";\nimport { ResetPasswordPolicyComponent } from \"../organizations/policies/reset-password.component\";\nimport { SendOptionsPolicyComponent } from \"../organizations/policies/send-options.component\";\nimport { SingleOrgPolicyComponent } from \"../organizations/policies/single-org.component\";\nimport { TwoFactorAuthenticationPolicyComponent } from \"../organizations/policies/two-factor-authentication.component\";\nimport { AccountComponent as OrgAccountComponent } from \"../organizations/settings/account.component\";\nimport { AdjustSubscription } from \"../organizations/settings/adjust-subscription.component\";\nimport { BillingSyncApiKeyComponent } from \"../organizations/settings/billing-sync-api-key.component\";\nimport { ChangePlanComponent } from \"../organizations/settings/change-plan.component\";\nimport { DeleteOrganizationComponent } from \"../organizations/settings/delete-organization.component\";\nimport { DownloadLicenseComponent } from \"../organizations/settings/download-license.component\";\nimport { ImageSubscriptionHiddenComponent as OrgSubscriptionHiddenComponent } from \"../organizations/settings/image-subscription-hidden.component\";\nimport { OrganizationBillingComponent } from \"../organizations/settings/organization-billing.component\";\nimport { OrganizationSubscriptionComponent } from \"../organizations/settings/organization-subscription.component\";\nimport { SettingsComponent as OrgSettingComponent } from \"../organizations/settings/settings.component\";\nimport { TwoFactorSetupComponent as OrgTwoFactorSetupComponent } from \"../organizations/settings/two-factor-setup.component\";\nimport { AcceptFamilySponsorshipComponent } from \"../organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"../organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent } from \"../organizations/tools/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent } from \"../organizations/tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent } from \"../organizations/tools/reused-passwords-report.component\";\nimport { ToolsComponent as OrgToolsComponent } from \"../organizations/tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent } from \"../organizations/tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent } from \"../organizations/tools/weak-passwords-report.component\";\nimport { AddEditComponent as OrgAddEditComponent } from \"../organizations/vault/add-edit.component\";\nimport { AttachmentsComponent as OrgAttachmentsComponent } from \"../organizations/vault/attachments.component\";\nimport { CollectionsComponent as OrgCollectionsComponent } from \"../organizations/vault/collections.component\";\nimport { ProvidersComponent } from \"../providers/providers.component\";\nimport { AccessComponent } from \"../send/access.component\";\nimport { AddEditComponent as SendAddEditComponent } from \"../send/add-edit.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"../send/efflux-dates.component\";\nimport { SendComponent } from \"../send/send.component\";\nimport { AccountComponent } from \"../settings/account.component\";\nimport { AddCreditComponent } from \"../settings/add-credit.component\";\nimport { AdjustPaymentComponent } from \"../settings/adjust-payment.component\";\nimport { AdjustStorageComponent } from \"../settings/adjust-storage.component\";\nimport { ApiKeyComponent } from \"../settings/api-key.component\";\nimport { BillingSyncKeyComponent } from \"../settings/billing-sync-key.component\";\nimport { ChangeEmailComponent } from \"../settings/change-email.component\";\nimport { ChangeKdfComponent } from \"../settings/change-kdf.component\";\nimport { ChangePasswordComponent } from \"../settings/change-password.component\";\nimport { CreateOrganizationComponent } from \"../settings/create-organization.component\";\nimport { DeauthorizeSessionsComponent } from \"../settings/deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"../settings/delete-account.component\";\nimport { DomainRulesComponent } from \"../settings/domain-rules.component\";\nimport { EmergencyAccessAddEditComponent } from \"../settings/emergency-access-add-edit.component\";\nimport { EmergencyAccessAttachmentsComponent } from \"../settings/emergency-access-attachments.component\";\nimport { EmergencyAccessConfirmComponent } from \"../settings/emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"../settings/emergency-access-takeover.component\";\nimport { EmergencyAccessViewComponent } from \"../settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"../settings/emergency-access.component\";\nimport { EmergencyAddEditComponent } from \"../settings/emergency-add-edit.component\";\nimport { OrganizationPlansComponent } from \"../settings/organization-plans.component\";\nimport { PaymentMethodComponent } from \"../settings/payment-method.component\";\nimport { PaymentComponent } from \"../settings/payment.component\";\nimport { PreferencesComponent } from \"../settings/preferences.component\";\nimport { PremiumComponent } from \"../settings/premium.component\";\nimport { ProfileComponent } from \"../settings/profile.component\";\nimport { PurgeVaultComponent } from \"../settings/purge-vault.component\";\nimport { SecurityKeysComponent } from \"../settings/security-keys.component\";\nimport { SecurityComponent } from \"../settings/security.component\";\nimport { SettingsComponent } from \"../settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"../settings/sponsored-families.component\";\nimport { SponsoringOrgRowComponent } from \"../settings/sponsoring-org-row.component\";\nimport { SubscriptionComponent } from \"../settings/subscription.component\";\nimport { TaxInfoComponent } from \"../settings/tax-info.component\";\nimport { TwoFactorAuthenticatorComponent } from \"../settings/two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"../settings/two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"../settings/two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"../settings/two-factor-recovery.component\";\nimport { TwoFactorSetupComponent } from \"../settings/two-factor-setup.component\";\nimport { TwoFactorVerifyComponent } from \"../settings/two-factor-verify.component\";\nimport { TwoFactorWebAuthnComponent } from \"../settings/two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"../settings/two-factor-yubikey.component\";\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\nimport { UpdateLicenseComponent } from \"../settings/update-license.component\";\nimport { UserBillingHistoryComponent } from \"../settings/user-billing-history.component\";\nimport { UserSubscriptionComponent } from \"../settings/user-subscription.component\";\nimport { VaultTimeoutInputComponent } from \"../settings/vault-timeout-input.component\";\nimport { VerifyEmailComponent } from \"../settings/verify-email.component\";\nimport { GeneratorComponent } from \"../tools/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"../tools/password-generator-history.component\";\nimport { ToolsComponent } from \"../tools/tools.component\";\nimport { AddEditCustomFieldsComponent } from \"../vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"../vault/add-edit.component\";\nimport { AttachmentsComponent } from \"../vault/attachments.component\";\nimport { BulkActionsComponent } from \"../vault/bulk-actions.component\";\nimport { BulkDeleteComponent } from \"../vault/bulk-delete.component\";\nimport { BulkMoveComponent } from \"../vault/bulk-move.component\";\nimport { BulkRestoreComponent } from \"../vault/bulk-restore.component\";\nimport { BulkShareComponent } from \"../vault/bulk-share.component\";\nimport { CollectionsComponent } from \"../vault/collections.component\";\nimport { FolderAddEditComponent } from \"../vault/folder-add-edit.component\";\nimport { OrganizationBadgeModule } from \"../vault/organization-badge/organization-badge.module\";\nimport { ShareComponent } from \"../vault/share.component\";\nimport { VaultFilterModule } from \"../vault/vault-filter/vault-filter.module\";\n\nimport { SharedModule } from \".\";\n\n// Please do not add to this list of declarations - we should refactor these into modules when doing so makes sense until there are none left.\n// If you are building new functionality, please create or extend a feature module instead.\n@NgModule({\n  imports: [\n    SharedModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    OrganizationCreateModule,\n    RegisterFormModule,\n  ],\n  declarations: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptFamilySponsorshipComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    AdjustSubscription,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    BillingSyncApiKeyComponent,\n    BillingSyncKeyComponent,\n    BulkActionsComponent,\n    BulkDeleteComponent,\n    BulkMoveComponent,\n    BulkRestoreComponent,\n    BulkShareComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    ChangePlanComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DeleteOrganizationComponent,\n    DisableSendPolicyComponent,\n    DomainRulesComponent,\n    DownloadLicenseComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    LockComponent,\n    MasterPasswordPolicyComponent,\n    NavbarComponent,\n    NestedCheckboxComponent,\n    OrganizationSwitcherComponent,\n    OrgAccountComponent,\n    OrgAddEditComponent,\n    OrganizationBillingComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrganizationSubscriptionComponent,\n    OrgAttachmentsComponent,\n    OrgBulkConfirmComponent,\n    OrgBulkRestoreRevokeComponent,\n    OrgBulkRemoveComponent,\n    OrgBulkStatusComponent,\n    OrgCollectionAddEditComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgGroupAddEditComponent,\n    OrgGroupsComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgPeopleComponent,\n    OrgPoliciesComponent,\n    OrgPolicyEditComponent,\n    OrgResetPasswordComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgSettingComponent,\n    OrgToolsComponent,\n    OrgTwoFactorSetupComponent,\n    OrgSubscriptionHiddenComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserAddEditComponent,\n    OrgUserConfirmComponent,\n    OrgUserGroupsComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordGeneratorPolicyComponent,\n    PasswordRepromptComponent,\n    UserVerificationPromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PersonalOwnershipPolicyComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RegisterComponent,\n    RemovePasswordComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SendOptionsPolicyComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SingleOrgPolicyComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    UserBillingHistoryComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n  ],\n  exports: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    AdjustSubscription,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    BulkActionsComponent,\n    BulkDeleteComponent,\n    BulkMoveComponent,\n    BulkRestoreComponent,\n    BulkShareComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    ChangePlanComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DeleteOrganizationComponent,\n    DisableSendPolicyComponent,\n    DomainRulesComponent,\n    DownloadLicenseComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    LockComponent,\n    MasterPasswordPolicyComponent,\n    NavbarComponent,\n    NestedCheckboxComponent,\n    OrganizationSwitcherComponent,\n    OrgAccountComponent,\n    OrgAddEditComponent,\n    OrganizationBillingComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrganizationSubscriptionComponent,\n    OrgAttachmentsComponent,\n    OrgBulkConfirmComponent,\n    OrgBulkRestoreRevokeComponent,\n    OrgBulkRemoveComponent,\n    OrgBulkStatusComponent,\n    OrgCollectionAddEditComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgGroupAddEditComponent,\n    OrgGroupsComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgPeopleComponent,\n    OrgPoliciesComponent,\n    OrgPolicyEditComponent,\n    OrgResetPasswordComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgSettingComponent,\n    OrgToolsComponent,\n    OrgTwoFactorSetupComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserAddEditComponent,\n    OrgUserConfirmComponent,\n    OrgUserGroupsComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordGeneratorPolicyComponent,\n    PasswordRepromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PersonalOwnershipPolicyComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RegisterComponent,\n    RemovePasswordComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SendOptionsPolicyComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SingleOrgPolicyComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    UserBillingHistoryComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n  ],\n})\nexport class LooseComponentsModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ButtonComponent } from \"./button.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ButtonComponent],\n  declarations: [ButtonComponent],\n})\nexport class ButtonModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { CalloutComponent } from \"./callout.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [CalloutComponent],\n  declarations: [CalloutComponent],\n})\nexport class CalloutModule {}\n","import { OverlayModule } from \"@angular/cdk/overlay\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { MenuDividerComponent } from \"./menu-divider.component\";\nimport { MenuItemDirective } from \"./menu-item.directive\";\nimport { MenuTriggerForDirective } from \"./menu-trigger-for.directive\";\nimport { MenuComponent } from \"./menu.component\";\n\n@NgModule({\n  imports: [CommonModule, OverlayModule],\n  declarations: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n  exports: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n})\nexport class MenuModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitIconComponent } from \"./icon.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitIconComponent],\n  exports: [BitIconComponent],\n})\nexport class IconModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { BitActionDirective } from \"./bit-action.directive\";\nimport { BitSubmitDirective } from \"./bit-submit.directive\";\nimport { BitFormButtonDirective } from \"./form-button.directive\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [BitActionDirective, BitFormButtonDirective, BitSubmitDirective],\n  exports: [BitActionDirective, BitFormButtonDirective, BitSubmitDirective],\n})\nexport class AsyncActionsModule {}\n","import { registerLocaleData } from \"@angular/common\";\nimport localeAf from \"@angular/common/locales/af\";\nimport localeAr from \"@angular/common/locales/ar\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEo from \"@angular/common/locales/eo\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeEu from \"@angular/common/locales/eu\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\n\nregisterLocaleData(localeAf, \"af\");\nregisterLocaleData(localeAr, \"ar\");\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEo, \"eo\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeEu, \"eu\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { DatePipe, CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\nimport { ToastrModule } from \"ngx-toastr\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport {\n  BadgeModule,\n  ButtonModule,\n  CalloutModule,\n  FormFieldModule,\n  MenuModule,\n  IconModule,\n  AsyncActionsModule,\n} from \"@bitwarden/components\";\n\n// Register the locales for the application\nimport \"./locales\";\n\n/**\n * This NgModule should contain the most basic shared directives, pipes, and components. They\n * should be widely used by other modules to be considered for adding to this module. If in doubt\n * do not add to this module.\n *\n * See: https://angular.io/guide/module-types#shared-ngmodules\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    InfiniteScrollModule,\n    JslibModule,\n    ReactiveFormsModule,\n    RouterModule,\n    BadgeModule,\n    ButtonModule,\n    CalloutModule,\n    ToastrModule,\n    BadgeModule,\n    ButtonModule,\n    MenuModule,\n    FormFieldModule,\n    IconModule,\n  ],\n  exports: [\n    CommonModule,\n    AsyncActionsModule,\n    DragDropModule,\n    FormsModule,\n    InfiniteScrollModule,\n    JslibModule,\n    ReactiveFormsModule,\n    RouterModule,\n    BadgeModule,\n    ButtonModule,\n    CalloutModule,\n    ToastrModule,\n    BadgeModule,\n    ButtonModule,\n    MenuModule,\n    FormFieldModule,\n    IconModule,\n  ],\n  providers: [DatePipe],\n  bootstrap: [],\n})\nexport class SharedModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { OrganizationNameBadgeComponent } from \"./organization-name-badge.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationNameBadgeComponent],\n  exports: [OrganizationNameBadgeComponent],\n})\nexport class OrganizationBadgeModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { CollectionFilterComponent } from \"./collection-filter/collection-filter.component\";\nimport { FolderFilterComponent } from \"./folder-filter/folder-filter.component\";\nimport { StatusFilterComponent } from \"./status-filter/status-filter.component\";\nimport { TypeFilterComponent } from \"./type-filter/type-filter.component\";\nimport { VaultFilterService } from \"./vault-filter.service\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [\n    CollectionFilterComponent,\n    FolderFilterComponent,\n    StatusFilterComponent,\n    TypeFilterComponent,\n  ],\n  exports: [\n    SharedModule,\n    CollectionFilterComponent,\n    FolderFilterComponent,\n    StatusFilterComponent,\n    TypeFilterComponent,\n  ],\n  providers: [VaultFilterService],\n})\nexport class VaultFilterSharedModule {}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { DynamicTreeNode } from \"@bitwarden/angular/vault/vault-filter/models/dynamic-tree-node.model\";\nimport { VaultFilterService as BaseVaultFilterService } from \"@bitwarden/angular/vault/vault-filter/services/vault-filter.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collectionResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Injectable()\nexport class VaultFilterService extends BaseVaultFilterService {\n  private _collapsedFilterNodes = new BehaviorSubject<Set<string>>(null);\n  collapsedFilterNodes$: Observable<Set<string>> = this._collapsedFilterNodes.asObservable();\n\n  constructor(\n    stateService: StateService,\n    organizationService: OrganizationService,\n    folderService: FolderService,\n    cipherService: CipherService,\n    collectionService: CollectionService,\n    policyService: PolicyService,\n    private i18nService: I18nService,\n    protected apiService: ApiService\n  ) {\n    super(\n      stateService,\n      organizationService,\n      folderService,\n      cipherService,\n      collectionService,\n      policyService\n    );\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    const nodes = await super.buildCollapsedFilterNodes();\n    this._collapsedFilterNodes.next(nodes);\n    return nodes;\n  }\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await super.storeCollapsedFilterNodes(collapsedFilterNodes);\n    this._collapsedFilterNodes.next(collapsedFilterNodes);\n  }\n\n  async ensureVaultFiltersAreExpanded() {\n    const collapsedFilterNodes = await super.buildCollapsedFilterNodes();\n    if (!collapsedFilterNodes.has(\"vaults\")) {\n      return;\n    }\n    collapsedFilterNodes.delete(\"vaults\");\n    await this.storeCollapsedFilterNodes(collapsedFilterNodes);\n  }\n\n  async buildAdminCollections(organizationId: string) {\n    let result: CollectionView[] = [];\n    const collectionResponse = await this.apiService.getCollections(organizationId);\n    if (collectionResponse?.data != null && collectionResponse.data.length) {\n      const collectionDomains = collectionResponse.data.map(\n        (r: CollectionDetailsResponse) => new Collection(new CollectionData(r))\n      );\n      result = await this.collectionService.decryptMany(collectionDomains);\n    }\n\n    const noneCollection = new CollectionView();\n    noneCollection.name = this.i18nService.t(\"unassigned\");\n    noneCollection.organizationId = organizationId;\n    result.push(noneCollection);\n\n    const nestedCollections = await this.collectionService.getAllNested(result);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: result,\n      nestedList: nestedCollections,\n    });\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { LinkSsoComponent } from \"./organization-filter/link-sso.component\";\nimport { OrganizationFilterComponent } from \"./organization-filter/organization-filter.component\";\nimport { OrganizationOptionsComponent } from \"./organization-filter/organization-options.component\";\nimport { VaultFilterSharedModule } from \"./shared/vault-filter-shared.module\";\nimport { VaultFilterComponent } from \"./vault-filter.component\";\n\n@NgModule({\n  imports: [VaultFilterSharedModule],\n  declarations: [\n    VaultFilterComponent,\n    OrganizationFilterComponent,\n    OrganizationOptionsComponent,\n    LinkSsoComponent,\n  ],\n  exports: [VaultFilterComponent],\n})\nexport class VaultFilterModule {}\n","import { InjectionToken } from \"@angular/core\";\n\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\n\nexport const WINDOW = new InjectionToken<Window>(\"WINDOW\");\nexport const MEMORY_STORAGE = new InjectionToken<AbstractStorageService>(\"MEMORY_STORAGE\");\nexport const SECURE_STORAGE = new InjectionToken<AbstractStorageService>(\"SECURE_STORAGE\");\nexport const STATE_FACTORY = new InjectionToken<StateFactory>(\"STATE_FACTORY\");\nexport const STATE_SERVICE_USE_CACHE = new InjectionToken<boolean>(\"STATE_SERVICE_USE_CACHE\");\nexport const LOGOUT_CALLBACK = new InjectionToken<(expired: boolean, userId?: string) => void>(\n  \"LOGOUT_CALLBACK\"\n);\nexport const LOCKED_CALLBACK = new InjectionToken<() => void>(\"LOCKED_CALLBACK\");\nexport const CLIENT_TYPE = new InjectionToken<boolean>(\"CLIENT_TYPE\");\nexport const LOCALES_DIRECTORY = new InjectionToken<string>(\"LOCALES_DIRECTORY\");\nexport const SYSTEM_LANGUAGE = new InjectionToken<string>(\"SYSTEM_LANGUAGE\");\nexport const LOG_MAC_FAILURES = new InjectionToken<string>(\"LOG_MAC_FAILURES\");\n","import { IEncrypted } from \"../interfaces/IEncrypted\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport abstract class AbstractEncryptService {\n  abstract encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString>;\n  abstract encryptToBytes: (\n    plainValue: ArrayBuffer,\n    key?: SymmetricCryptoKey\n  ) => Promise<EncArrayBuffer>;\n  abstract decryptToUtf8: (encString: EncString, key: SymmetricCryptoKey) => Promise<string>;\n  abstract decryptToBytes: (encThing: IEncrypted, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  abstract resolveLegacyKey: (key: SymmetricCryptoKey, encThing: IEncrypted) => SymmetricCryptoKey;\n}\n","import { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\n\nexport abstract class AccountApiService {\n  abstract deleteAccount(request: SecretVerificationRequest): Promise<void>;\n}\n","import { Verification } from \"../../types/verification\";\n\nexport abstract class AccountService {\n  abstract delete(verification: Verification): Promise<any>;\n}\n","export abstract class AnonymousHubService {\n  createHubConnection: (token: string) => void;\n  stopHubConnection: () => void;\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { AuthRequestPushNotification } from \"../models/response/notificationResponse\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  logIn: (\n    credentials:\n      | ApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n  getAuthStatus: (userId?: string) => Promise<AuthenticationStatus>;\n  authResponsePushNotifiction: (notification: AuthRequestPushNotification) => Promise<any>;\n\n  getPushNotifcationObs$: () => Observable<any>;\n}\n","export interface MessageBase {\n  command: string;\n}\n\nexport abstract class BroadcasterService {\n  send: (message: MessageBase, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: MessageBase) => void) => void;\n  unsubscribe: (id: string) => void;\n}\n","import { ServerConfigResponse } from \"../../models/response/server-config-response\";\n\nexport abstract class ConfigApiServiceAbstraction {\n  get: () => Promise<ServerConfigResponse>;\n}\n","import { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n  scim?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  getScimUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n  isCloud: () => boolean;\n}\n","import { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","import { Folder } from \"../../models/domain/folder\";\nimport { FolderResponse } from \"../../models/response/folderResponse\";\n\nexport class FolderApiServiceAbstraction {\n  save: (folder: Folder) => Promise<any>;\n  delete: (id: string) => Promise<any>;\n  get: (id: string) => Promise<FolderResponse>;\n}\n","import { AbstractControl } from \"@angular/forms\";\nexport interface AllValidationErrors {\n  controlName: string;\n  errorName: string;\n}\n\nexport interface FormGroupControls {\n  [key: string]: AbstractControl;\n}\n\nexport abstract class FormValidationErrorsService {\n  getFormValidationErrors: (controls: FormGroupControls) => AllValidationErrors[];\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/importDirectoryRequest\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organizationSsoRequest\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organizationApiKeyRequest\";\nimport { OrganizationCreateRequest } from \"../../models/request/organizationCreateRequest\";\nimport { OrganizationKeysRequest } from \"../../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organizationUpgradeRequest\";\nimport { PaymentRequest } from \"../../models/request/paymentRequest\";\nimport { SeatRequest } from \"../../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\nimport { StorageRequest } from \"../../models/request/storageRequest\";\nimport { VerifyBankRequest } from \"../../models/request/verifyBankRequest\";\nimport { ApiKeyResponse } from \"../../models/response/apiKeyResponse\";\nimport { BillingResponse } from \"../../models/response/billingResponse\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organizationSsoResponse\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organizationApiKeyInformationResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organizationSubscriptionResponse\";\nimport { PaymentResponse } from \"../../models/response/paymentResponse\";\nimport { TaxInfoResponse } from \"../../models/response/taxInfoResponse\";\n\nexport class OrganizationApiServiceAbstraction {\n  get: (id: string) => Promise<OrganizationResponse>;\n  getBilling: (id: string) => Promise<BillingResponse>;\n  getSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getLicense: (id: string, installationId: string) => Promise<unknown>;\n  getAutoEnrollStatus: (identifier: string) => Promise<OrganizationAutoEnrollStatusResponse>;\n  create: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  createLicense: (data: FormData) => Promise<OrganizationResponse>;\n  save: (id: string, request: OrganizationUpdateRequest) => Promise<OrganizationResponse>;\n  updatePayment: (id: string, request: PaymentRequest) => Promise<void>;\n  upgrade: (id: string, request: OrganizationUpgradeRequest) => Promise<PaymentResponse>;\n  updateSubscription: (id: string, request: OrganizationSubscriptionUpdateRequest) => Promise<void>;\n  updateSeats: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  updateStorage: (id: string, request: StorageRequest) => Promise<PaymentResponse>;\n  verifyBank: (id: string, request: VerifyBankRequest) => Promise<void>;\n  cancel: (id: string) => Promise<void>;\n  reinstate: (id: string) => Promise<void>;\n  leave: (id: string) => Promise<void>;\n  delete: (id: string, request: SecretVerificationRequest) => Promise<void>;\n  updateLicense: (id: string, data: FormData) => Promise<void>;\n  importDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<void>;\n  getOrCreateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getApiKeyInformation: (\n    id: string,\n    organizationApiKeyType?: OrganizationApiKeyType\n  ) => Promise<ListResponse<OrganizationApiKeyInformationResponse>>;\n  rotateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  updateTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<void>;\n  getKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  updateKeys: (id: string, request: OrganizationKeysRequest) => Promise<OrganizationKeysResponse>;\n  getSso: (id: string) => Promise<OrganizationSsoResponse>;\n  updateSso: (id: string, request: OrganizationSsoRequest) => Promise<OrganizationSsoResponse>;\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: any) => Promise<string>;\n  generatePassphrase: (options: any) => Promise<string>;\n  getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: any\n  ) => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: any) => Promise<any>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/masterPasswordPolicyOptions\";\nimport { PolicyRequest } from \"../../models/request/policyRequest\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { PolicyResponse } from \"../../models/response/policyResponse\";\n\nexport class PolicyApiServiceAbstraction {\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  putPolicy: (organizationId: string, type: PolicyType, request: PolicyRequest) => Promise<any>;\n}\n","import { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","import { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport abstract class SettingsService {\n  settings$: Observable<AccountSettingsSettings>;\n\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { MemoryStorageOptions, StorageOptions } from \"../models/domain/storageOptions\";\n\nexport abstract class AbstractStorageService {\n  abstract get<T>(key: string, options?: StorageOptions): Promise<T>;\n  abstract has(key: string, options?: StorageOptions): Promise<boolean>;\n  abstract save<T>(key: string, obj: T, options?: StorageOptions): Promise<void>;\n  abstract remove(key: string, options?: StorageOptions): Promise<void>;\n}\n\nexport abstract class AbstractCachedStorageService extends AbstractStorageService {\n  abstract getBypassCache<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T>;\n}\n\nexport interface MemoryStorageServiceInterface {\n  get<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { SyncEventArgs } from \"../../types/syncEventArgs\";\n\nexport abstract class SyncNotifierService {\n  sync$: Observable<SyncEventArgs>;\n  next: (event: SyncEventArgs) => void;\n}\n","import { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","import { VerifyOTPRequest } from \"../../models/request/account/verifyOTPRequest\";\n\nexport abstract class UserVerificationApiServiceAbstraction {\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postAccountRequestOTP: () => Promise<void>;\n}\n","export abstract class UsernameGenerationService {\n  generateUsername: (options: any) => Promise<string>;\n  generateWord: (options: any) => Promise<string>;\n  generateSubaddress: (options: any) => Promise<string>;\n  generateCatchall: (options: any) => Promise<string>;\n  generateForwarded: (options: any) => Promise<string>;\n  getOptions: () => Promise<any>;\n  saveOptions: (options: any) => Promise<void>;\n}\n","export abstract class VaultTimeoutService {\n  checkVaultTimeout: () => Promise<void>;\n  lock: (userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n}\n","export abstract class VaultTimeoutSettingsService {\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: (userId?: string) => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<void>;\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/globalState\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/globalState\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport {\n  ServerConfigResponse,\n  ThirdPartyServerConfigResponse,\n  EnvironmentServerConfigResponse,\n} from \"../response/server-config-response\";\n\nexport class ServerConfigData {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: string;\n\n  constructor(serverConfigResponse: Partial<ServerConfigResponse>) {\n    this.version = serverConfigResponse?.version;\n    this.gitHash = serverConfigResponse?.gitHash;\n    this.server = serverConfigResponse?.server\n      ? new ThirdPartyServerConfigData(serverConfigResponse.server)\n      : null;\n    this.utcDate = new Date().toISOString();\n    this.environment = serverConfigResponse?.environment\n      ? new EnvironmentServerConfigData(serverConfigResponse.environment)\n      : null;\n  }\n\n  static fromJSON(obj: Jsonify<ServerConfigData>): ServerConfigData {\n    return Object.assign(new ServerConfigData({}), obj, {\n      server: obj?.server ? ThirdPartyServerConfigData.fromJSON(obj.server) : null,\n      environment: obj?.environment ? EnvironmentServerConfigData.fromJSON(obj.environment) : null,\n    });\n  }\n}\n\nexport class ThirdPartyServerConfigData {\n  name: string;\n  url: string;\n\n  constructor(response: Partial<ThirdPartyServerConfigResponse>) {\n    this.name = response.name;\n    this.url = response.url;\n  }\n\n  static fromJSON(obj: Jsonify<ThirdPartyServerConfigData>): ThirdPartyServerConfigData {\n    return Object.assign(new ThirdPartyServerConfigData({}), obj);\n  }\n}\n\nexport class EnvironmentServerConfigData {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(response: Partial<EnvironmentServerConfigResponse>) {\n    this.vault = response.vault;\n    this.api = response.api;\n    this.identity = response.identity;\n    this.notifications = response.notifications;\n    this.sso = response.sso;\n  }\n\n  static fromJSON(obj: Jsonify<EnvironmentServerConfigData>): EnvironmentServerConfigData {\n    return Object.assign(new EnvironmentServerConfigData({}), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nexport class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n\n  static fromJSON(obj: Jsonify<EnvironmentUrls>): EnvironmentUrls {\n    return Object.assign(new EnvironmentUrls(), obj);\n  }\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Five = 5, // Migrate to new storage of encrypted organization keys\n  Six = 6, // Delete account.keys.legacyEtmKey property\n  Latest = Six,\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","import { Except, Jsonify } from \"type-fest\";\n\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CollectionData } from \"../data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../data/eventData\";\nimport { FolderData } from \"../data/folderData\";\nimport { OrganizationData } from \"../data/organizationData\";\nimport { PolicyData } from \"../data/policyData\";\nimport { ProviderData } from \"../data/providerData\";\nimport { SendData } from \"../data/sendData\";\nimport { ServerConfigData } from \"../data/server-config.data\";\nimport { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { SendView } from \"../view/sendView\";\n\nimport { EncString } from \"./encString\";\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { GeneratedPasswordHistory } from \"./generatedPasswordHistory\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n\n  toJSON() {\n    return {\n      encrypted: this.encrypted,\n      decrypted:\n        this.decrypted instanceof ArrayBuffer\n          ? Utils.fromBufferToByteString(this.decrypted)\n          : this.decrypted,\n    };\n  }\n\n  static fromJSON<TEncrypted, TDecrypted>(\n    obj: Jsonify<EncryptionPair<Jsonify<TEncrypted>, Jsonify<TDecrypted>>>,\n    decryptedFromJson?: (decObj: Jsonify<TDecrypted> | string) => TDecrypted,\n    encryptedFromJson?: (encObj: Jsonify<TEncrypted>) => TEncrypted\n  ) {\n    if (obj == null) {\n      return null;\n    }\n\n    const pair = new EncryptionPair<TEncrypted, TDecrypted>();\n    if (obj?.encrypted != null) {\n      pair.encrypted = encryptedFromJson\n        ? encryptedFromJson(obj.encrypted)\n        : (obj.encrypted as TEncrypted);\n    }\n    if (obj?.decrypted != null) {\n      pair.decrypted = decryptedFromJson\n        ? decryptedFromJson(obj.decrypted)\n        : (obj.decrypted as TDecrypted);\n    }\n    return pair;\n  }\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\n// This is a temporary structure to handle migrated `DataEncryptionPair` to\n//  avoid needing a data migration at this stage. It should be replaced with\n//  proper data migrations when `DataEncryptionPair` is deprecated.\nexport class TemporaryDataEncryption<TEncrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders? = new TemporaryDataEncryption<FolderData>();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Record<string, SymmetricCryptoKey>\n  > = new EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Record<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Record<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Record<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  publicKey?: ArrayBuffer;\n  apiKeyClientSecret?: string;\n\n  toJSON() {\n    return Object.assign(this as Except<AccountKeys, \"publicKey\">, {\n      publicKey: Utils.fromBufferToByteString(this.publicKey),\n    });\n  }\n\n  static fromJSON(obj: DeepJsonify<AccountKeys>): AccountKeys {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(\n      new AccountKeys(),\n      { cryptoMasterKey: SymmetricCryptoKey.fromJSON(obj?.cryptoMasterKey) },\n      {\n        cryptoSymmetricKey: EncryptionPair.fromJSON(\n          obj?.cryptoSymmetricKey,\n          SymmetricCryptoKey.fromJSON\n        ),\n      },\n      { organizationKeys: AccountKeys.initRecordEncryptionPairsFromJSON(obj?.organizationKeys) },\n      { providerKeys: AccountKeys.initRecordEncryptionPairsFromJSON(obj?.providerKeys) },\n      {\n        privateKey: EncryptionPair.fromJSON<string, ArrayBuffer>(\n          obj?.privateKey,\n          (decObj: string) => Utils.fromByteStringToArray(decObj).buffer\n        ),\n      },\n      {\n        publicKey: Utils.fromByteStringToArray(obj?.publicKey)?.buffer,\n      }\n    );\n  }\n\n  static initRecordEncryptionPairsFromJSON(obj: any) {\n    return EncryptionPair.fromJSON(obj, (decObj: any) => {\n      if (obj == null) {\n        return null;\n      }\n\n      const record: Record<string, SymmetricCryptoKey> = {};\n      for (const id in decObj) {\n        record[id] = SymmetricCryptoKey.fromJSON(decObj[id]);\n      }\n      return record;\n    });\n  }\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  hasPremiumFromOrganization?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n\n  static fromJSON(obj: Jsonify<AccountProfile>): AccountProfile {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountProfile(), obj);\n  }\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  enableGravitars?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: AccountSettingsSettings; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n  serverConfig?: ServerConfigData;\n\n  static fromJSON(obj: Jsonify<AccountSettings>): AccountSettings {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountSettings(), obj, {\n      environmentUrls: EnvironmentUrls.fromJSON(obj?.environmentUrls),\n      pinProtected: EncryptionPair.fromJSON<string, EncString>(\n        obj?.pinProtected,\n        EncString.fromJSON\n      ),\n      serverConfig: ServerConfigData.fromJSON(obj?.serverConfig),\n    });\n  }\n}\n\nexport type AccountSettingsSettings = {\n  equivalentDomains?: { [id: string]: any };\n};\n\nexport class AccountTokens {\n  accessToken?: string;\n  refreshToken?: string;\n  securityStamp?: string;\n\n  static fromJSON(obj: Jsonify<AccountTokens>): AccountTokens {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountTokens(), obj);\n  }\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n\n  static fromJSON(json: Jsonify<Account>): Account {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new Account({}), json, {\n      keys: AccountKeys.fromJSON(json?.keys),\n      profile: AccountProfile.fromJSON(json?.profile),\n      settings: AccountSettings.fromJSON(json?.settings),\n      tokens: AccountTokens.fromJSON(json?.tokens),\n    });\n  }\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { WindowState } from \"./windowState\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string;\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n  enableDuckDuckGoBrowserIntegration?: boolean;\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n\n  AuthRequest = 15,\n  AuthRequestResponse = 16,\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      case NotificationType.AuthRequest:\n      case NotificationType.AuthRequestResponse:\n        this.payload = new AuthRequestPushNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class AuthRequestPushNotification extends BaseResponse {\n  id: string;\n  userId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n  }\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  HttpTransportType,\n  HubConnection,\n  HubConnectionBuilder,\n  IHubProtocol,\n} from \"@microsoft/signalr\";\nimport { MessagePackHubProtocol } from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { AnonymousHubService as AnonymousHubServiceAbstraction } from \"../abstractions/anonymousHub.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\n\nimport {\n  AuthRequestPushNotification,\n  NotificationResponse,\n} from \"./../models/response/notificationResponse\";\n\n@Injectable()\nexport class AnonymousHubService implements AnonymousHubServiceAbstraction {\n  private anonHubConnection: HubConnection;\n  private url: string;\n\n  constructor(\n    private environmentService: EnvironmentService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async createHubConnection(token: string) {\n    this.url = this.environmentService.getNotificationsUrl();\n\n    this.anonHubConnection = new HubConnectionBuilder()\n      .withUrl(this.url + \"/anonymous-hub?Token=\" + token, {\n        skipNegotiation: true,\n        transport: HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new MessagePackHubProtocol() as IHubProtocol)\n      .build();\n\n    this.anonHubConnection.start().catch((error) => this.logService.error(error));\n\n    this.anonHubConnection.on(\"AuthRequestResponseRecieved\", (data: any) => {\n      this.ProcessNotification(new NotificationResponse(data));\n    });\n  }\n\n  stopHubConnection() {\n    if (this.anonHubConnection) {\n      this.anonHubConnection.stop();\n    }\n  }\n\n  private async ProcessNotification(notification: NotificationResponse) {\n    await this.authService.authResponsePushNotifiction(\n      notification.payload as AuthRequestPushNotification\n    );\n  }\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n  protected passwordlessAuthRequest: string;\n\n  constructor(protected twoFactor: TokenRequestTwoFactor, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenRequestTwoFactor) {\n    this.twoFactor = twoFactor;\n  }\n\n  setPasswordlessAccessCode(accessCode: string) {\n    this.passwordlessAuthRequest = accessCode;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    //passswordless login\n    if (this.passwordlessAuthRequest) {\n      obj.authRequest = this.passwordlessAuthRequest;\n    }\n\n    if (this.twoFactor.token && this.twoFactor.provider != null) {\n      obj.twoFactorToken = this.twoFactor.token;\n      obj.twoFactorProvider = this.twoFactor.provider;\n      obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n    }\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class ApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { TwoFactorProviderType } from \"../../../enums/twoFactorProviderType\";\n\nexport class TokenRequestTwoFactor {\n  constructor(\n    public provider: TwoFactorProviderType = null,\n    public token: string = null,\n    public remember: boolean = false\n  ) {}\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nimport { AttachmentResponse } from \"./attachmentResponse\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { PasswordHistoryResponse } from \"./passwordHistoryResponse\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  creationDate: string;\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class AuthRequestResponse extends BaseResponse {\n  id: string;\n  publicKey: string;\n  requestDeviceType: DeviceType;\n  requestIpAddress: string;\n  key: string;\n  masterPasswordHash: string;\n  creationDate: string;\n  requestApproved: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n    this.requestDeviceType = this.getResponseProperty(\"RequestDeviceType\");\n    this.requestIpAddress = this.getResponseProperty(\"RequestIpAddress\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.masterPasswordHash = this.getResponseProperty(\"MasterPasswordHash\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.requestApproved = this.getResponseProperty(\"RequestApproved\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nimport { ICaptchaProtectedResponse } from \"./ICaptchaProtectedResponse\";\n\nexport class RegisterResponse extends BaseResponse implements ICaptchaProtectedResponse {\n  captchaBypassToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaBypassToken = this.getResponseProperty(\"CaptchaBypassToken\");\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { BillingInvoiceResponse, BillingTransactionResponse } from \"./billingResponse\";\n\nexport class BillingHistoryResponse extends BaseResponse {\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { BillingSourceResponse } from \"./billingResponse\";\n\nexport class BillingPaymentResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class DeviceVerificationResponse extends BaseResponse {\n  isDeviceVerificationSectionEnabled: boolean;\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.isDeviceVerificationSectionEnabled = this.getResponseProperty(\n      \"IsDeviceVerificationSectionEnabled\"\n    );\n    this.unknownDeviceVerificationEnabled = this.getResponseProperty(\n      \"UnknownDeviceVerificationEnabled\"\n    );\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { GlobalDomainResponse } from \"./globalDomainResponse\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n  installationId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n    this.installationId = this.getResponseProperty(\"InstallationId\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"../api/billingSyncConfigApi\";\nimport { ScimConfigApi } from \"../api/scimConfigApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\n/**API response config types for OrganizationConnectionResponse */\nexport type OrganizationConnectionConfigApis = BillingSyncConfigApi | ScimConfigApi;\n\nexport class OrganizationConnectionResponse<\n  TConfig extends OrganizationConnectionConfigApis\n> extends BaseResponse {\n  id: string;\n  type: OrganizationConnectionType;\n  organizationId: string;\n  enabled: boolean;\n  config: TConfig;\n\n  constructor(response: any, configType: { new (response: any): TConfig }) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const rawConfig = this.getResponseProperty(\"Config\");\n    this.config = rawConfig == null ? null : new configType(rawConfig);\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionResponse } from \"./collectionResponse\";\nimport { ListResponse } from \"./listResponse\";\n\nexport class OrganizationExportResponse extends BaseResponse {\n  collections: ListResponse<CollectionResponse>;\n  ciphers: ListResponse<CipherResponse>;\n\n  constructor(response: any) {\n    super(response);\n    this.collections = this.getResponseProperty(\"Collections\");\n    this.ciphers = this.getResponseProperty(\"Ciphers\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationSponsorshipSyncStatusResponse extends BaseResponse {\n  lastSyncDate?: Date;\n\n  constructor(response: any) {\n    super(response);\n    const lastSyncDate = this.getResponseProperty(\"LastSyncDate\");\n    if (lastSyncDate) {\n      this.lastSyncDate = new Date(lastSyncDate);\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n  manageScim: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n    this.manageScim = this.getResponseProperty(\"ManageScim\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useScim = this.getResponseProperty(\"UseScim\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n    const familySponsorshipLastSyncDateString = this.getResponseProperty(\n      \"FamilySponsorshipLastSyncDate\"\n    );\n    if (familySponsorshipLastSyncDateString) {\n      this.familySponsorshipLastSyncDate = new Date(familySponsorshipLastSyncDateString);\n    }\n    const familySponsorshipValidUntilString = this.getResponseProperty(\n      \"FamilySponsorshipValidUntil\"\n    );\n    if (familySponsorshipValidUntilString) {\n      this.familySponsorshipValidUntil = new Date(familySponsorshipValidUntilString);\n    }\n    this.familySponsorshipToDelete = this.getResponseProperty(\"FamilySponsorshipToDelete\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"./profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"./profileProviderResponse\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premiumPersonally: boolean;\n  premiumFromOrganization: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premiumPersonally = this.getResponseProperty(\"Premium\");\n    this.premiumFromOrganization = this.getResponseProperty(\"PremiumFromOrganization\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n  userCount: number;\n  seats?: number;\n  plan?: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.userCount = this.getResponseProperty(\"UserCount\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.plan = this.getResponseProperty(\"Plan\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../organizationUserBulkPublicKeyResponse\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissionsApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SsoPreValidateResponse extends BaseResponse {\n  token: string;\n\n  constructor(response: any) {\n    super(response);\n    this.token = this.getResponseProperty(\"Token\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionDetailsResponse } from \"./collectionResponse\";\nimport { DomainsResponse } from \"./domainsResponse\";\nimport { FolderResponse } from \"./folderResponse\";\nimport { PolicyResponse } from \"./policyResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","export enum AuthenticationStatus {\n  LoggedOut = 0,\n  Locked = 1,\n  Unlocked = 2,\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  Api = 2,\n  Passwordless = 3,\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../../models/domain/logInCredentials\";\nimport { DeviceRequest } from \"../../models/request/deviceRequest\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\nimport { KeysRequest } from \"../../models/request/keysRequest\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identityTwoFactorResponse\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials:\n      | ApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ): Promise<AuthResult>;\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected onSuccessfulLogin(response: IdentityTokenResponse): Promise<void> {\n    // Implemented in subclass if required\n    return null;\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenRequestTwoFactor) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return new TokenRequestTwoFactor(TwoFactorProviderType.Remember, storedTwoFactorToken, false);\n    }\n\n    return new TokenRequestTwoFactor();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    await this.onSuccessfulLogin(response);\n\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { ApiLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class ApiLogInStrategy extends LogInStrategy {\n  tokenRequest: ApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: ApiLogInCredentials) {\n    this.tokenRequest = new ApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captchaProtectedRequest\";\nimport { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport { PasswordlessLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordlessLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordlessLogInCredentials) {\n    this.localHashedPassword = credentials.localPasswordHash;\n    this.key = credentials.decKey;\n\n    this.tokenRequest = new PasswordTokenRequest(\n      credentials.email,\n      credentials.accessCode,\n      null,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    this.tokenRequest.setPasswordlessAccessCode(credentials.authRequestId);\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Utils } from \"../../misc/utils\";\n\nconst ENC_TYPE_LENGTH = 1;\nconst IV_LENGTH = 16;\nconst MAC_LENGTH = 32;\nconst MIN_DATA_LENGTH = 1;\n\nexport class EncArrayBuffer implements IEncrypted {\n  readonly encryptionType: EncryptionType = null;\n  readonly dataBytes: ArrayBuffer = null;\n  readonly ivBytes: ArrayBuffer = null;\n  readonly macBytes: ArrayBuffer = null;\n\n  constructor(readonly buffer: ArrayBuffer) {\n    const encBytes = new Uint8Array(buffer);\n    const encType = encBytes[0];\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.macBytes = encBytes.slice(\n          ENC_TYPE_LENGTH + IV_LENGTH,\n          ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH\n        ).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH).buffer;\n        break;\n      }\n      case EncryptionType.AesCbc256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        break;\n      }\n      default:\n        this.throwDecryptionError();\n    }\n\n    this.encryptionType = encType;\n  }\n\n  private throwDecryptionError() {\n    throw new Error(\n      \"Error parsing encrypted ArrayBuffer: data is corrupted or has an invalid format.\"\n    );\n  }\n\n  static async fromResponse(response: {\n    arrayBuffer: () => Promise<ArrayBuffer>;\n  }): Promise<EncArrayBuffer> {\n    const buffer = await response.arrayBuffer();\n    if (buffer == null) {\n      throw new Error(\"Cannot create EncArrayBuffer from Response - Response is empty\");\n    }\n    return new EncArrayBuffer(buffer);\n  }\n\n  static fromB64(b64: string) {\n    const buffer = Utils.fromB64ToArray(b64).buffer;\n    return new EncArrayBuffer(buffer);\n  }\n}\n","import { CipherView } from \"../view/cipherView\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipherWithIdRequest\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domainBase\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/loginUri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secureNote\";\nimport { SortedCiphersCache } from \"../models/domain/sortedCiphersCache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { AttachmentView } from \"../models/view/attachmentView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { PasswordHistoryView } from \"../models/view/passwordHistoryView\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    const userId = await this.stateService.getUserId();\n    if ((await this.getDecryptedCipherCache()) != null) {\n      if (\n        this.searchService != null &&\n        (this.searchService().indexedEntityId ?? userId) !== userId\n      ) {\n        await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n      }\n      return await this.getDecryptedCipherCache();\n    }\n\n    const decCiphers: CipherView[] = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<number>[] = [];\n    const ciphers = await this.getAll();\n    ciphers.forEach(async (cipher) => {\n      promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.getLocaleSortingFunction());\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : firstValueFrom(this.settingsService.settings$).then(\n            (settings: AccountSettingsSettings) => {\n              let matches: any[] = [];\n              settings.equivalentDomains?.forEach((eqDomain: any) => {\n                if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                  matches = matches.concat(eqDomain);\n                }\n              });\n\n              if (!matches.length) {\n                matches.push(domain);\n              }\n\n              return matches;\n            }\n          );\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n    if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n      const decCiphers: CipherView[] = [];\n      const promises: any[] = [];\n      ciphers.data.forEach((r) => {\n        const data = new CipherData(r);\n        const cipher = new Cipher(data);\n        promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n      });\n      await Promise.all(promises);\n      decCiphers.sort(this.getLocaleSortingFunction());\n      return decCiphers;\n    } else {\n      return [];\n    }\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async saveWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.id == null) {\n      if (cipher.collectionIds != null) {\n        const request = new CipherCreateRequest(cipher);\n        response = await this.apiService.postCipherCreate(request);\n      } else {\n        const request = new CipherRequest(cipher);\n        response = await this.apiService.postCipher(request);\n      }\n      cipher.id = response.id;\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    await this.upsert(encCiphers.map((c) => c.toCipherData()));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(response, cipher.collectionIds);\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData();\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const encBuf = await EncArrayBuffer.fromResponse(attachmentResponse);\n    const decBuf = await this.cryptoService.decryptFromBytes(encBuf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ServerConfigResponse extends BaseResponse {\n  version: string;\n  gitHash: string;\n  server: ThirdPartyServerConfigResponse;\n  environment: EnvironmentServerConfigResponse;\n\n  constructor(response: any) {\n    super(response);\n\n    if (response == null) {\n      return;\n    }\n\n    this.version = this.getResponseProperty(\"Version\");\n    this.gitHash = this.getResponseProperty(\"GitHash\");\n    this.server = new ThirdPartyServerConfigResponse(this.getResponseProperty(\"Server\"));\n    this.environment = new EnvironmentServerConfigResponse(this.getResponseProperty(\"Environment\"));\n  }\n}\n\nexport class EnvironmentServerConfigResponse extends BaseResponse {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.vault = this.getResponseProperty(\"Vault\");\n    this.api = this.getResponseProperty(\"Api\");\n    this.identity = this.getResponseProperty(\"Identity\");\n    this.notifications = this.getResponseProperty(\"Notifications\");\n    this.sso = this.getResponseProperty(\"Sso\");\n  }\n}\n\nexport class ThirdPartyServerConfigResponse extends BaseResponse {\n  name: string;\n  url: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.name = this.getResponseProperty(\"Name\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import {\n  ServerConfigData,\n  ThirdPartyServerConfigData,\n  EnvironmentServerConfigData,\n} from \"../../models/data/server-config.data\";\n\nconst dayInMilliseconds = 24 * 3600 * 1000;\nconst eighteenHoursInMilliseconds = 18 * 3600 * 1000;\n\nexport class ServerConfig {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: Date;\n\n  constructor(serverConfigData: ServerConfigData) {\n    this.version = serverConfigData.version;\n    this.gitHash = serverConfigData.gitHash;\n    this.server = serverConfigData.server;\n    this.utcDate = new Date(serverConfigData.utcDate);\n    this.environment = serverConfigData.environment;\n\n    if (this.server?.name == null && this.server?.url == null) {\n      this.server = null;\n    }\n  }\n\n  private getAgeInMilliseconds(): number {\n    return new Date().getTime() - this.utcDate?.getTime();\n  }\n\n  isValid(): boolean {\n    return this.getAgeInMilliseconds() <= dayInMilliseconds;\n  }\n\n  expiresSoon(): boolean {\n    return this.getAgeInMilliseconds() >= eighteenHoursInMilliseconds;\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptedOrganizationKeyData } from \"../../models/data/encryptedOrganizationKeyData\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport abstract class BaseEncryptedOrganizationKey {\n  decrypt: (cryptoService: CryptoService) => Promise<SymmetricCryptoKey>;\n\n  static fromData(data: EncryptedOrganizationKeyData) {\n    switch (data.type) {\n      case \"organization\":\n        return new EncryptedOrganizationKey(data.key);\n\n      case \"provider\":\n        return new ProviderEncryptedOrganizationKey(data.key, data.providerId);\n\n      default:\n        return null;\n    }\n  }\n}\n\nexport class EncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const decValue = await cryptoService.rsaDecrypt(this.key);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"organization\",\n      key: this.key,\n    };\n  }\n}\n\nexport class ProviderEncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string, private providerId: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const providerKey = await cryptoService.getProviderKey(this.providerId);\n    const decValue = await cryptoService.decryptToBytes(new EncString(this.key), providerKey);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"provider\",\n      key: this.key,\n      providerId: this.providerId,\n    };\n  }\n}\n","import * as bigInt from \"big-integer\";\n\nimport { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { BaseEncryptedOrganizationKey } from \"../models/domain/encryptedOrganizationKey\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private encryptService: AbstractEncryptService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[] = [],\n    providerOrgs: ProfileProviderOrganizationResponse[] = []\n  ): Promise<void> {\n    const encOrgKeyData: { [orgId: string]: EncryptedOrganizationKeyData } = {};\n\n    orgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"organization\",\n        key: org.key,\n      };\n    });\n\n    providerOrgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"provider\",\n        providerId: org.providerId,\n        key: org.key,\n      };\n    });\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(encOrgKeyData);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const result: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeyData = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeyData == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId of Object.keys(encOrgKeyData)) {\n      if (result.has(orgId)) {\n        continue;\n      }\n\n      const encOrgKey = BaseEncryptedOrganizationKey.fromData(encOrgKeyData[orgId]);\n      const decOrgKey = await encOrgKey.decrypt(this);\n      result.set(orgId, decOrgKey);\n\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(result);\n    }\n\n    return result;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForUserEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encrypt\n   */\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.encrypt(plainValue, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encryptToBytes\n   */\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    key = await this.getKeyForUserEncryption(key);\n    return this.encryptService.encryptToBytes(plainValue, key);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForUserEncryption(key);\n    return this.encryptService.decryptToBytes(encString, keyForEnc);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToUtf8\n   */\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.decryptToUtf8(encString, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptFromBytes(encBuffer: EncArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuffer == null) {\n      throw new Error(\"No buffer provided for decryption.\");\n    }\n\n    key = await this.getKeyForUserEncryption(key);\n\n    return this.encryptService.decryptToBytes(encBuffer, key);\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // ---HELPERS---\n\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  async getKeyForUserEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    // Legacy support: encryption used to be done with the user key (derived from master password).\n    // Users who have not migrated will have a null encKey and must use the user key instead.\n    return await this.getKey();\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EEFLongWordList.length);\n      hashNumber = hashNumber.divide(EEFLongWordList.length);\n      phrase.push(EEFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/eventView\";\n\nexport class EventExport {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n  installationId: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n    this.installationId = event.installationId;\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class BitwardenFileUploadService {\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { FolderResponse } from \"../response/folderResponse\";\n\nexport class FolderData {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse) {\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keysRequest\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/baseResponse\";\nimport { SsoConfigView } from \"../view/ssoConfigView\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: boolean;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationApiKeyInformationResponse extends BaseResponse {\n  keyType: OrganizationApiKeyType;\n\n  constructor(response: any) {\n    super(response);\n    this.keyType = this.getResponseProperty(\"KeyType\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keysResponse\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { PlanResponse } from \"./planResponse\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { OrganizationResponse } from \"./organizationResponse\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscriptionResponse\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1,\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { ProfileOrganizationResponse } from \"../response/profileOrganizationResponse\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useScim = response.useScim;\n    this.useResetPassword = response.useResetPassword;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = response.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = response.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = response.familySponsorshipToDelete;\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { OrganizationData } from \"../data/organizationData\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useScim = obj.useScim;\n    this.useResetPassword = obj.useResetPassword;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = obj.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = obj.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = obj.familySponsorshipToDelete;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return (this.isAdmin || this.permissions.accessEventLogs) && this.useEvents;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return (this.isAdmin || this.permissions.manageGroups) && this.useGroups;\n  }\n\n  get canManageSso() {\n    return (this.isAdmin || this.permissions.manageSso) && this.useSso;\n  }\n\n  get canManageScim() {\n    return (this.isAdmin || this.permissions.manageScim) && this.useScim;\n  }\n\n  get canManagePolicies() {\n    return (this.isAdmin || this.permissions.managePolicies) && this.usePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n\n  get canManageBilling() {\n    return this.isOwner && (this.isProviderUser || !this.hasProvider);\n  }\n\n  get hasProvider() {\n    return this.providerId != null || this.providerName != null;\n  }\n}\n","import { SyncResponse } from \"../models/response/syncResponse\";\n\ntype SyncStatus = \"Started\" | \"Completed\";\n\ntype SyncEventArgsBase<T extends SyncStatus> = {\n  status: T;\n};\n\ntype SyncCompletedEventArgsBase<T extends boolean> = SyncEventArgsBase<\"Completed\"> & {\n  successfully: T;\n};\n\ntype SyncSuccessfullyCompletedEventArgs = SyncCompletedEventArgsBase<true> & {\n  data: SyncResponse;\n};\n\nexport type SyncEventArgs =\n  | SyncSuccessfullyCompletedEventArgs\n  | SyncCompletedEventArgsBase<false>\n  | SyncEventArgsBase<\"Started\">;\n\n/**\n * Helper function to filter only on successfully completed syncs\n * @returns a function that can be used in a `.pipe(filter(...))` from an observable\n * @example\n * ```\n * of<SyncEventArgs>({ status: \"Completed\", successfully: true, data: new SyncResponse() })\n *  .pipe(filter(isSuccessfullyCompleted))\n *  .subscribe(event => {\n *    console.log(event.data);\n *  });\n * ```\n */\nexport function isSuccessfullyCompleted(\n  syncEvent: SyncEventArgs\n): syncEvent is SyncSuccessfullyCompletedEventArgs {\n  return syncEvent.status === \"Completed\" && syncEvent.successfully;\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import { firstValueFrom, map } from \"rxjs\";\nimport * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\n\nconst DefaultOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: any): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EEFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EEFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: any\n  ): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies: Policy[] =\n      this.policyService == null\n        ? null\n        : await firstValueFrom(\n            this.policyService.policies$.pipe(\n              map((p) => p.filter((policy) => policy.type === PolicyType.PasswordGenerator))\n            )\n          );\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<any> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    await this.stateService.setDecryptedPasswordGenerationHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policyResponse\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policyData\";\n\nimport Domain from \"./domainBase\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1, // Not used, compile-time support only\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/providerData\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  private static registeredPipeline = false;\n\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private readonly immediateSearchLocales: string[] = [\"zh-CN\", \"zh-TW\", \"ja\", \"ko\", \"vi\"];\n  private readonly defaultSearchableMinLength: number = 2;\n  private searchableMinLength: number = this.defaultSearchableMinLength;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    this.i18nService.locale$.subscribe((locale) => {\n      if (this.immediateSearchLocales.indexOf(locale) !== -1) {\n        this.searchableMinLength = 1;\n      } else {\n        this.searchableMinLength = this.defaultSearchableMinLength;\n      }\n    });\n\n    // Currently have to ensure this is only done a single time. Lunr allows you to register a function\n    // multiple times but they will add a warning message to the console. The way they do that breaks when ran on a service worker.\n    if (!SearchService.registeredPipeline) {\n      SearchService.registeredPipeline = true;\n      //register lunr pipeline function\n      lunr.Pipeline.registerFunction(this.normalizeAccentsPipelineFunction, \"normalizeAccents\");\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    query = SearchService.normalizeSearchQuery(query);\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.pipeline.add(this.normalizeAccentsPipelineFunction);\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", {\n      boost: 10,\n    });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.info(\"Finished search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        c.login &&\n        c.login.hasUris &&\n        c.login.uris.some((loginUri) => loginUri?.uri?.toLowerCase().indexOf(query) > -1)\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLocaleLowerCase());\n    if (query === null) {\n      return sends;\n    }\n    const sendsMatched: SendView[] = [];\n    const lowPriorityMatched: SendView[] = [];\n    sends.forEach((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        sendsMatched.push(s);\n      } else if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        lowPriorityMatched.push(s);\n      } else if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      }\n    });\n    return sendsMatched.concat(lowPriorityMatched);\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n\n  private normalizeAccentsPipelineFunction(token: lunr.Token): any {\n    const searchableFields = [\"name\", \"login.username\", \"subtitle\", \"notes\"];\n    const fields = (token as any).metadata[\"fields\"];\n    const checkFields = fields.every((i: any) => searchableFields.includes(i));\n\n    if (checkFields) {\n      return SearchService.normalizeSearchQuery(token.toString());\n    }\n\n    return token;\n  }\n\n  // Remove accents/diacritics characters from text. This regex is equivalent to the Diacritic unicode property escape, i.e. it will match all diacritic characters.\n  static normalizeSearchQuery(query: string): string {\n    return query?.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n}\n","import { SendFileApi } from \"../api/sendFileApi\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/sendResponse\";\n\nimport { SendFileData } from \"./sendFileData\";\nimport { SendTextData } from \"./sendTextData\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendFile } from \"../domain/sendFile\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { SendText } from \"../domain/sendText\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n}\n","import { SendFileData } from \"../data/sendFileData\";\nimport { SendFileView } from \"../view/sendFileView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/sendTextData\";\nimport { SendTextView } from \"../view/sendTextView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/sendData\";\nimport { SendView } from \"../view/sendView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      [\"id\", \"accessId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    const cryptoService = Utils.getContainerService().getCryptoService();\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profileProviderResponse\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Account } from \"./account\";\nimport { GlobalState } from \"./globalState\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n\n  // TODO, make Jsonify<State,TGlobalState,TAccount> work. It currently doesn't because Globals doesn't implement Jsonify.\n  static fromJSON<TGlobalState extends GlobalState, TAccount extends Account>(\n    obj: any\n  ): State<TGlobalState, TAccount> {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new State(null), obj, {\n      accounts: State.buildAccountMapFromJSON(obj?.accounts),\n    });\n  }\n\n  private static buildAccountMapFromJSON(\n    jsonAccounts: Jsonify<{ [userId: string]: Jsonify<Account> }>\n  ) {\n    if (!jsonAccounts) {\n      return {};\n    }\n    const accounts: { [userId: string]: Account } = {};\n    for (const userId in jsonAccounts) {\n      accounts[userId] = Account.fromJSON(jsonAccounts[userId]);\n    }\n    return accounts;\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport {\n  MemoryStorageServiceInterface,\n  AbstractStorageService,\n} from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { LocalData } from \"../models/data/localData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport {\n  Account,\n  AccountData,\n  AccountSettings,\n  AccountSettingsSettings,\n} from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { SendView } from \"../models/view/sendView\";\n\nconst keys = {\n  state: \"state\",\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nconst DDG_SHARED_KEY = \"DuckDuckGoSharedKey\";\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  accounts = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  private activeAccountSubject = new BehaviorSubject<string>(null);\n  activeAccount$ = this.activeAccountSubject.asObservable();\n\n  private activeAccountUnlockedSubject = new BehaviorSubject<boolean>(false);\n  activeAccountUnlocked$ = this.activeAccountUnlockedSubject.asObservable();\n\n  private hasBeenInited = false;\n  private isRecoveredSession = false;\n\n  private accountDiskCache = new Map<string, TAccount>();\n\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected memoryStorageService: AbstractStorageService & MemoryStorageServiceInterface,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    // If the account gets changed, verify the new account is unlocked\n    this.activeAccountSubject\n      .pipe(\n        concatMap(async (userId) => {\n          if (userId == null && this.activeAccountUnlockedSubject.getValue() == false) {\n            return;\n          } else if (userId == null) {\n            this.activeAccountUnlockedSubject.next(false);\n          }\n\n          // FIXME: This should be refactored into AuthService or a similar service,\n          //  as checking for the existance of the crypto key is a low level\n          //  implementation detail.\n          this.activeAccountUnlockedSubject.next((await this.getCryptoMasterKey()) != null);\n        })\n      )\n      .subscribe();\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.state().then(async (state) => {\n      if (state == null) {\n        await this.setState(new State<TGlobalState, TAccount>(this.createGlobals()));\n      } else {\n        this.isRecoveredSession = true;\n      }\n    });\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    if (this.isRecoveredSession) {\n      return;\n    }\n\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts =\n        (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n      for (const i in state.authenticatedAccounts) {\n        if (i != null) {\n          await this.syncAccountFromDisk(state.authenticatedAccounts[i]);\n        }\n      }\n      const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n      if (storedActiveUser != null) {\n        state.activeUserId = storedActiveUser;\n      }\n      await this.pushAccounts();\n      this.activeAccountSubject.next(state.activeUserId);\n\n      return state;\n    });\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    await this.updateState(async (state) => {\n      if (state.accounts == null) {\n        state.accounts = {};\n      }\n      state.accounts[userId] = this.createAccount();\n      const diskAccount = await this.getAccountFromDisk({ userId: userId });\n      state.accounts[userId].profile = diskAccount.profile;\n      return state;\n    });\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts.push(account.profile.userId);\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n      state.accounts[account.profile.userId] = account;\n      return state;\n    });\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccountSubject.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    await this.updateState(async (state) => {\n      state.activeUserId = userId;\n      await this.storageService.save(keys.activeUserId, userId);\n      this.activeAccountSubject.next(state.activeUserId);\n      return state;\n    });\n\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === (await this.state())?.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    return (\n      (await this.getHasPremiumPersonally(options)) ||\n      (await this.getHasPremiumFromOrganization(options))\n    );\n  }\n\n  async getHasPremiumPersonally(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.profile?.hasPremiumPersonally;\n  }\n\n  async setHasPremiumPersonally(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumPersonally = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getHasPremiumFromOrganization(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    if (account.profile?.hasPremiumFromOrganization) {\n      return true;\n    }\n\n    // TODO: older server versions won't send the hasPremiumFromOrganization flag, so we're keeping the old logic\n    // for backwards compatibility. It can be removed after everyone has upgraded.\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async setHasPremiumFromOrganization(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumFromOrganization = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n\n    if (options.userId == this.activeAccountSubject.getValue()) {\n      const nextValue = value != null;\n\n      // Avoid emitting if we are already unlocked\n      if (this.activeAccountUnlockedSubject.getValue() != nextValue) {\n        this.activeAccountUnlockedSubject.next(nextValue);\n      }\n    }\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.autoKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  @withPrototypeForArrayMembers(CipherView, CipherView.fromJSON)\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CollectionView)\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return this.recordToMap(account?.keys?.organizationKeys?.decrypted);\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.organizationKeys.decrypted = this.mapToRecord(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(Policy)\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.privateKey.decrypted;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.privateKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return this.recordToMap(account?.keys?.providerKeys?.decrypted);\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.providerKeys.decrypted = this.mapToRecord(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(SendView)\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDuckDuckGoSharedKey(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(DDG_SHARED_KEY, options);\n  }\n\n  async setDuckDuckGoSharedKey(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    value == null\n      ? await this.secureStorageService.remove(DDG_SHARED_KEY, options)\n      : await this.secureStorageService.save(DDG_SHARED_KEY, value, options);\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.email = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableDuckDuckGoBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableDuckDuckGoBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableDuckDuckGoBrowserIntegration(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableDuckDuckGoBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableGravitars(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableGravitars ?? false\n    );\n  }\n\n  async setEnableGravitars(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableGravitars = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CipherData)\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CollectionData)\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(FolderData)\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<{ [orgId: string]: EncryptedOrganizationKeyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(PolicyData)\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(SendData)\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if ((await this.state())?.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(EventData)\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<{ [cipherId: string]: LocalData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n\n  async setLocalData(\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(ProviderData)\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const keys = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys;\n    return keys?.publicKey;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.publicKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getSettings(options?: StorageOptions): Promise<AccountSettingsSettings> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: AccountSettingsSettings, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async setServerConfig(value: ServerConfigData, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.serverConfig = value;\n    return await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getServerConfig(options: StorageOptions): Promise<ServerConfigData> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.serverConfig;\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = await this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected async getGlobalsFromMemory(): Promise<TGlobalState> {\n    return (await this.state()).globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected async saveGlobalsToMemory(globals: TGlobalState): Promise<void> {\n    await this.updateState(async (state) => {\n      state.globals = globals;\n      return state;\n    });\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = await this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async getAccountFromMemory(options: StorageOptions): Promise<TAccount> {\n    return await this.state().then(async (state) => {\n      if (state.accounts == null) {\n        return null;\n      }\n      return state.accounts[await this.getUserIdFromMemory(options)];\n    });\n  }\n\n  protected async getUserIdFromMemory(options: StorageOptions): Promise<string> {\n    return await this.state().then((state) => {\n      return options?.userId != null\n        ? state.accounts[options.userId]?.profile?.userId\n        : state.activeUserId;\n    });\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && (await this.state())?.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.get(options.userId);\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.set(options.userId, account);\n    }\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(options.userId);\n    }\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      await this.updateState((state) => {\n        return new Promise((resolve) => {\n          state.accounts[account.profile.userId] = account;\n          resolve(state);\n        });\n      });\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<AccountSettings>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    await this.state().then((state) => {\n      if (state.accounts == null || Object.keys(state.accounts).length < 1) {\n        this.accounts.next(null);\n        return;\n      }\n\n      this.accounts.next(state.accounts);\n    });\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected async defaultInMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Memory,\n      userId: (await this.state()).activeUserId,\n    };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: (await this.state())?.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected async removeAccountFromMemory(userId: string = null): Promise<void> {\n    await this.updateState(async (state) => {\n      userId = userId ?? state.activeUserId;\n      delete state.accounts[userId];\n\n      if (this.useAccountCache) {\n        this.accountDiskCache.delete(userId);\n      }\n\n      return state;\n    });\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in (await this.state())?.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        await this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected async clearDecryptedDataForActiveUser(): Promise<void> {\n    await this.updateState(async (state) => {\n      const userId = state?.activeUserId;\n      if (userId != null && state?.accounts[userId]?.data != null) {\n        state.accounts[userId].data = new AccountData();\n      }\n\n      return state;\n    });\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string): Promise<void> {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts = state.authenticatedAccounts.filter((id) => id !== userId);\n\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n\n      return state;\n    });\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    const accounts = (await this.state())?.accounts;\n    if (accounts == null || Object.keys(accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? await this.defaultInMemoryOptions()\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n\n  protected async state(): Promise<State<TGlobalState, TAccount>> {\n    const state = await this.memoryStorageService.get<State<TGlobalState, TAccount>>(keys.state, {\n      deserializer: (s) => State.fromJSON(s),\n    });\n    return state;\n  }\n\n  private async setState(state: State<TGlobalState, TAccount>): Promise<void> {\n    await this.memoryStorageService.save(keys.state, state);\n  }\n\n  protected async updateState(\n    stateUpdater: (state: State<TGlobalState, TAccount>) => Promise<State<TGlobalState, TAccount>>\n  ) {\n    await this.state().then(async (state) => {\n      const updatedState = await stateUpdater(state);\n      if (updatedState == null) {\n        throw new Error(\"Attempted to update state to null value\");\n      }\n\n      await this.setState(updatedState);\n    });\n  }\n\n  private mapToRecord<V>(map: Map<string, V>): Record<string, V> {\n    return map == null ? null : Object.fromEntries(map);\n  }\n\n  private recordToMap<V>(record: Record<string, V>): Map<string, V> {\n    return record == null ? null : new Map(Object.entries(record));\n  }\n}\n\nexport function withPrototype<T>(\n  constructor: new (...args: any[]) => T,\n  converter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<T> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          return result == null ||\n            result.constructor.name === constructor.prototype.constructor.name\n            ? converter(result as T)\n            : converter(\n                Object.create(constructor.prototype, Object.getOwnPropertyDescriptors(result)) as T\n              );\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForArrayMembers<T>(\n  memberConstructor: new (...args: any[]) => T,\n  memberConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T[]> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any[]> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (!(result instanceof Array)) {\n            throw new Error(\n              `Attempted to retrieve non array type from state as an array for method ${String(\n                propertyKey\n              )}`\n            );\n          } else {\n            return result.map((r) => {\n              return r == null ||\n                r.constructor.name === memberConstructor.prototype.constructor.name\n                ? memberConverter(r)\n                : memberConverter(\n                    Object.create(memberConstructor.prototype, Object.getOwnPropertyDescriptors(r))\n                  );\n            });\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForObjectValues<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<{ [key: string]: T }> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<{ [key: string]: T }> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else {\n            for (const [key, val] of Object.entries(result)) {\n              result[key] =\n                val == null || val.constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(val)\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(val)\n                      )\n                    );\n            }\n\n            return result as { [key: string]: T };\n          }\n        });\n      },\n    };\n  };\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport {\n  Account,\n  AccountSettings,\n  AccountSettingsSettings,\n  EncryptionPair,\n} from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableGravatars: \"enableGravatars\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n        case StateVersion.Four: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom4To5(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Five);\n          break;\n        }\n        case StateVersion.Five: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom5To6(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Six);\n          break;\n        }\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      enableGravitars:\n        (await this.get<boolean>(v1Keys.enableGravatars)) ??\n        defaultAccount.settings.enableGravitars,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: Object.assign(new EncryptionPair<string, EncString>(), {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      }),\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings:\n        userId == null\n          ? null\n          : await this.get<AccountSettingsSettings>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateAccountFrom4To5(account: TAccount): Promise<TAccount> {\n    const encryptedOrgKeys = account.keys?.organizationKeys?.encrypted;\n    if (encryptedOrgKeys != null) {\n      for (const [orgId, encKey] of Object.entries(encryptedOrgKeys)) {\n        encryptedOrgKeys[orgId] = {\n          type: \"organization\",\n          key: encKey as unknown as string, // Account v4 does not reflect the current account model so we have to cast\n        };\n      }\n    }\n\n    return account;\n  }\n\n  protected async migrateAccountFrom5To6(account: TAccount): Promise<TAccount> {\n    delete (account as any).keys?.legacyEtmKey;\n    return account;\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n\n  protected async setCurrentStateVersion(newVersion: StateVersion): Promise<void> {\n    const globals = await this.getGlobals();\n    globals.stateVersion = newVersion;\n    await this.set(keys.global, globals);\n  }\n\n  protected async getAuthenticatedAccounts(): Promise<TAccount[]> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    return Promise.all(authenticatedUserIds.map((id) => this.get<TAccount>(id)));\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderApiServiceAbstraction } from \"../../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { InternalPolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { ProviderService } from \"../../abstractions/provider.service\";\nimport { SendService } from \"../../abstractions/send.service\";\nimport { SettingsService } from \"../../abstractions/settings.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../../abstractions/sync/sync.service.abstraction\";\nimport { SyncNotifierService } from \"../../abstractions/sync/syncNotifier.service.abstraction\";\nimport { sequentialize } from \"../../misc/sequentialize\";\nimport { CipherData } from \"../../models/data/cipherData\";\nimport { CollectionData } from \"../../models/data/collectionData\";\nimport { FolderData } from \"../../models/data/folderData\";\nimport { PolicyData } from \"../../models/data/policyData\";\nimport { ProviderData } from \"../../models/data/providerData\";\nimport { SendData } from \"../../models/data/sendData\";\nimport { CipherResponse } from \"../../models/response/cipherResponse\";\nimport { CollectionDetailsResponse } from \"../../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../../models/response/domainsResponse\";\nimport { FolderResponse } from \"../../models/response/folderResponse\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../models/response/notificationResponse\";\nimport { PolicyResponse } from \"../../models/response/policyResponse\";\nimport { ProfileResponse } from \"../../models/response/profileResponse\";\nimport { SendResponse } from \"../../models/response/sendResponse\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: InternalFolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: InternalPolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private providerService: ProviderService,\n    private folderApiService: FolderApiServiceAbstraction,\n    private syncNotifierService: SyncNotifierService,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    this.syncNotifierService.next({ status: \"Started\" });\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      this.syncNotifierService.next({ status: \"Completed\", successfully: false });\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      this.syncNotifierService.next({ status: \"Completed\", successfully: false });\n      return this.syncCompleted(false);\n    }\n\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(response.ciphers);\n      await this.syncSends(response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      this.syncNotifierService.next({ status: \"Completed\", successfully: true, data: response });\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        this.syncNotifierService.next({ status: \"Completed\", successfully: false });\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.folderApiService.get(notification.id);\n          if (remoteFolder != null) {\n            await this.folderService.upsert(new FolderData(remoteFolder));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getFullCipherDetails(notification.id);\n          if (remoteCipher != null) {\n            await this.cipherService.upsert(new CipherData(remoteCipher));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            await this.sendService.upsert(new SendData(remoteSend));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setHasPremiumPersonally(response.premiumPersonally);\n    await this.stateService.setHasPremiumFromOrganization(response.premiumFromOrganization);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class AnonAddyForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    if (options.anonaddy?.domain == null || options.anonaddy.domain === \"\") {\n      throw \"Invalid AnonAddy domain.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://app.anonaddy.com/api/v1/aliases\";\n    requestInit.body = JSON.stringify({\n      domain: options.anonaddy.domain,\n      description:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.data?.email;\n    }\n    if (response.status === 401) {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    throw \"Unknown AnonAddy error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class DuckDuckGoForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://quack.duckduckgo.com/api/email/addresses\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      if (json.address) {\n        return `${json.address}@duck.com`;\n      }\n    } else if (response.status === 401) {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    throw \"Unknown DuckDuckGo error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class FastmailForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Fastmail API token.\";\n    }\n\n    const accountId = await this.getAccountId(apiService, options);\n    if (accountId == null || accountId === \"\") {\n      throw \"Unable to obtain Fastmail masked email account ID.\";\n    }\n\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://api.fastmail.com/jmap/api/\";\n    requestInit.body = JSON.stringify({\n      using: [\"https://www.fastmail.com/dev/maskedemail\", \"urn:ietf:params:jmap:core\"],\n      methodCalls: [\n        [\n          \"MaskedEmail/set\",\n          {\n            accountId: accountId,\n            create: {\n              \"new-masked-email\": {\n                state: \"enabled\",\n                description: \"\",\n                url: options.website,\n                emailPrefix: options.fastmail.prefix,\n              },\n            },\n          },\n          \"0\",\n        ],\n      ],\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (\n        json.methodResponses != null &&\n        json.methodResponses.length > 0 &&\n        json.methodResponses[0].length > 0\n      ) {\n        if (json.methodResponses[0][0] === \"MaskedEmail/set\") {\n          if (json.methodResponses[0][1]?.created?.[\"new-masked-email\"] != null) {\n            return json.methodResponses[0][1]?.created?.[\"new-masked-email\"]?.email;\n          }\n          if (json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"] != null) {\n            throw (\n              \"Fastmail error: \" +\n              json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"]?.description\n            );\n          }\n        } else if (json.methodResponses[0][0] === \"error\") {\n          throw \"Fastmail error: \" + json.methodResponses[0][1]?.description;\n        }\n      }\n    }\n    if (response.status === 401 || response.status === 403) {\n      throw \"Invalid Fastmail API token.\";\n    }\n    throw \"Unknown Fastmail error occurred.\";\n  }\n\n  private async getAccountId(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      method: \"GET\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n      }),\n    };\n    const url = \"https://api.fastmail.com/.well-known/jmap\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (json.primaryAccounts != null) {\n        return json.primaryAccounts[\"https://www.fastmail.com/dev/maskedemail\"];\n      }\n    }\n    return null;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class FirefoxRelayForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Token \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://relay.firefox.com/api/v1/relayaddresses/\";\n    requestInit.body = JSON.stringify({\n      enabled: true,\n      generated_for: options.website,\n      description:\n        (options.website != null ? options.website + \" - \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.full_address;\n    }\n    if (response.status === 401) {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    throw \"Unknown Firefox Relay error occurred.\";\n  }\n}\n","export class ForwarderOptions {\n  apiKey: string;\n  website: string;\n  fastmail = new FastmailForwarderOptions();\n  anonaddy = new AnonAddyForwarderOptions();\n}\n\nexport class FastmailForwarderOptions {\n  prefix: string;\n}\n\nexport class AnonAddyForwarderOptions {\n  domain: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class SimpleLoginForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authentication: options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    let url = \"https://app.simplelogin.io/api/alias/random/new\";\n    if (options.website != null) {\n      url += \"?hostname=\" + options.website;\n    }\n    requestInit.body = JSON.stringify({\n      note:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json.alias;\n    }\n    if (response.status === 401) {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    try {\n      const json = await response.json();\n      if (json?.error != null) {\n        throw \"SimpleLogin error:\" + json.error;\n      }\n    } catch {\n      // Do nothing...\n    }\n    throw \"Unknown SimpleLogin error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { UsernameGenerationService as BaseUsernameGenerationService } from \"../abstractions/usernameGeneration.service\";\nimport { AnonAddyForwarder } from \"../emailForwarders/anonAddyForwarder\";\nimport { DuckDuckGoForwarder } from \"../emailForwarders/duckDuckGoForwarder\";\nimport { FastmailForwarder } from \"../emailForwarders/fastmailForwarder\";\nimport { FirefoxRelayForwarder } from \"../emailForwarders/firefoxRelayForwarder\";\nimport { Forwarder } from \"../emailForwarders/forwarder\";\nimport { ForwarderOptions } from \"../emailForwarders/forwarderOptions\";\nimport { SimpleLoginForwarder } from \"../emailForwarders/simpleLoginForwarder\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\n\nconst DefaultOptions = {\n  type: \"word\",\n  wordCapitalize: true,\n  wordIncludeNumber: true,\n  subaddressType: \"random\",\n  catchallType: \"random\",\n  forwardedService: \"simplelogin\",\n  forwardedAnonAddyDomain: \"anonaddy.me\",\n};\n\nexport class UsernameGenerationService implements BaseUsernameGenerationService {\n  constructor(\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  generateUsername(options: any): Promise<string> {\n    if (options.type === \"catchall\") {\n      return this.generateCatchall(options);\n    } else if (options.type === \"subaddress\") {\n      return this.generateSubaddress(options);\n    } else if (options.type === \"forwarded\") {\n      return this.generateForwarded(options);\n    } else {\n      return this.generateWord(options);\n    }\n  }\n\n  async generateWord(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.wordCapitalize == null) {\n      o.wordCapitalize = true;\n    }\n    if (o.wordIncludeNumber == null) {\n      o.wordIncludeNumber = true;\n    }\n\n    const wordIndex = await this.cryptoService.randomNumber(0, EEFLongWordList.length - 1);\n    let word = EEFLongWordList[wordIndex];\n    if (o.wordCapitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    if (o.wordIncludeNumber) {\n      const num = await this.cryptoService.randomNumber(1, 9999);\n      word = word + this.zeroPad(num.toString(), 4);\n    }\n    return word;\n  }\n\n  async generateSubaddress(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    const subaddressEmail = o.subaddressEmail;\n    if (subaddressEmail == null || subaddressEmail.length < 3) {\n      return o.subaddressEmail;\n    }\n    const atIndex = subaddressEmail.indexOf(\"@\");\n    if (atIndex < 1 || atIndex >= subaddressEmail.length - 1) {\n      return subaddressEmail;\n    }\n    if (o.subaddressType == null) {\n      o.subaddressType = \"random\";\n    }\n\n    const emailBeginning = subaddressEmail.substr(0, atIndex);\n    const emailEnding = subaddressEmail.substr(atIndex + 1, subaddressEmail.length);\n\n    let subaddressString = \"\";\n    if (o.subaddressType === \"random\") {\n      subaddressString = await this.randomString(8);\n    } else if (o.subaddressType === \"website-name\") {\n      subaddressString = o.website;\n    }\n    return emailBeginning + \"+\" + subaddressString + \"@\" + emailEnding;\n  }\n\n  async generateCatchall(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.catchallDomain == null || o.catchallDomain === \"\") {\n      return null;\n    }\n    if (o.catchallType == null) {\n      o.catchallType = \"random\";\n    }\n\n    let startString = \"\";\n    if (o.catchallType === \"random\") {\n      startString = await this.randomString(8);\n    } else if (o.catchallType === \"website-name\") {\n      startString = o.website;\n    }\n    return startString + \"@\" + o.catchallDomain;\n  }\n\n  async generateForwarded(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.forwardedService == null) {\n      return null;\n    }\n\n    let forwarder: Forwarder = null;\n    const forwarderOptions = new ForwarderOptions();\n    forwarderOptions.website = o.website;\n    if (o.forwardedService === \"simplelogin\") {\n      forwarder = new SimpleLoginForwarder();\n      forwarderOptions.apiKey = o.forwardedSimpleLoginApiKey;\n    } else if (o.forwardedService === \"anonaddy\") {\n      forwarder = new AnonAddyForwarder();\n      forwarderOptions.apiKey = o.forwardedAnonAddyApiToken;\n      forwarderOptions.anonaddy.domain = o.forwardedAnonAddyDomain;\n    } else if (o.forwardedService === \"firefoxrelay\") {\n      forwarder = new FirefoxRelayForwarder();\n      forwarderOptions.apiKey = o.forwardedFirefoxApiToken;\n    } else if (o.forwardedService === \"fastmail\") {\n      forwarder = new FastmailForwarder();\n      forwarderOptions.apiKey = o.forwardedFastmailApiToken;\n    } else if (o.forwardedService === \"duckduckgo\") {\n      forwarder = new DuckDuckGoForwarder();\n      forwarderOptions.apiKey = o.forwardedDuckDuckGoToken;\n    }\n\n    if (forwarder == null) {\n      return null;\n    }\n\n    return forwarder.generate(this.apiService, forwarderOptions);\n  }\n\n  async getOptions(): Promise<any> {\n    let options = await this.stateService.getUsernameGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setUsernameGenerationOptions(options);\n    return options;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setUsernameGenerationOptions(options);\n  }\n\n  private async randomString(length: number) {\n    let str = \"\";\n    const charSet = \"abcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < length; i++) {\n      const randomCharIndex = await this.cryptoService.randomNumber(0, charSet.length - 1);\n      str += charSet.charAt(randomCharIndex);\n    }\n    return str;\n  }\n\n  // ref: https://stackoverflow.com/a/10073788\n  private zeroPad(number: string, width: number) {\n    return number.length >= width\n      ? number\n      : new Array(width - number.length + 1).join(\"0\") + number;\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      this.messagingService.send(\"authBlocked\", { url: routerState.url });\n      return false;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      return this.router.createUrlTree([\"lock\"], { queryParams: { promptBiometric: true } });\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      return this.router.createUrlTree([\"/remove-password\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class LockGuard implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return true;\n    }\n\n    const redirectUrl =\n      authStatus === AuthenticationStatus.LoggedOut ? this.loginpage : this.homepage;\n\n    return this.router.createUrlTree([redirectUrl]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class UnauthGuard implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return true;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"lock\"]);\n    }\n\n    return this.router.createUrlTree([this.homepage]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"@bitwarden/common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import {\n  BroadcasterService as BroadcasterServiceAbstraction,\n  MessageBase,\n} from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: MessageBase) => void> = new Map<\n    string,\n    (message: MessageBase) => void\n  >();\n\n  send(message: MessageBase, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: MessageBase) => void) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationComponent for any other situation where you need to verify the user's identity.\n */\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\nimport { ModalService } from \"./modal.service\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationService for any other situation where you need to verify the user's identity.\n */\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport class ThemeBuilder implements Theme {\n  get effectiveTheme(): ThemeType {\n    return this.configuredTheme != ThemeType.System ? this.configuredTheme : this.systemTheme;\n  }\n\n  constructor(readonly configuredTheme: ThemeType, readonly systemTheme: ThemeType) {}\n\n  updateSystemTheme(systemTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(this.configuredTheme, systemTheme);\n  }\n\n  updateConfiguredTheme(configuredTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(configuredTheme, this.systemTheme);\n  }\n}\n","import { DOCUMENT } from \"@angular/common\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, filter, fromEvent, Observable } from \"rxjs\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { WINDOW } from \"../injection-tokens\";\n\nimport { Theme } from \"./theme\";\nimport { ThemeBuilder } from \"./themeBuilder\";\nimport { AbstractThemingService } from \"./theming.service.abstraction\";\n\n@Injectable()\nexport class ThemingService implements AbstractThemingService {\n  private _theme = new BehaviorSubject<ThemeBuilder | null>(null);\n  theme$: Observable<Theme> = this._theme.pipe(filter((x) => x !== null));\n\n  constructor(\n    private stateService: StateService,\n    @Inject(WINDOW) private window: Window,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.monitorThemeChanges();\n  }\n\n  async monitorThemeChanges(): Promise<void> {\n    this._theme.next(\n      new ThemeBuilder(await this.stateService.getTheme(), await this.getSystemTheme())\n    );\n    this.monitorConfiguredThemeChanges();\n    this.monitorSystemThemeChanges();\n  }\n\n  updateSystemTheme(systemTheme: ThemeType): void {\n    this._theme.next(this._theme.getValue().updateSystemTheme(systemTheme));\n  }\n\n  async updateConfiguredTheme(theme: ThemeType): Promise<void> {\n    await this.stateService.setTheme(theme);\n    this._theme.next(this._theme.getValue().updateConfiguredTheme(theme));\n  }\n\n  protected monitorConfiguredThemeChanges(): void {\n    this.theme$.subscribe((theme: Theme) => {\n      this.document.documentElement.classList.remove(\n        \"theme_\" + ThemeType.Light,\n        \"theme_\" + ThemeType.Dark,\n        \"theme_\" + ThemeType.Nord,\n        \"theme_\" + ThemeType.SolarizedDark\n      );\n      this.document.documentElement.classList.add(\"theme_\" + theme.effectiveTheme);\n    });\n  }\n\n  // We use a media match query for monitoring the system theme on web and browser, but this doesn't work for electron apps on Linux.\n  // In desktop we override these methods to track systemTheme with the electron renderer instead, which works for all OSs.\n  protected async getSystemTheme(): Promise<ThemeType> {\n    return this.window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? ThemeType.Dark\n      : ThemeType.Light;\n  }\n\n  protected monitorSystemThemeChanges(): void {\n    fromEvent<MediaQueryListEvent>(\n      this.window.matchMedia(\"(prefers-color-scheme: dark)\"),\n      \"change\"\n    ).subscribe((event) => {\n      this.updateSystemTheme(event.matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport abstract class AbstractThemingService {\n  theme$: Observable<Theme>;\n  monitorThemeChanges: () => Promise<void>;\n  updateSystemTheme: (systemTheme: ThemeType) => void;\n  updateConfiguredTheme: (theme: ThemeType) => Promise<void>;\n}\n","import { Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { AbstractEncryptService } from \"@bitwarden/common/abstractions/abstractEncrypt.service\";\nimport { AccountApiService as AccountApiServiceAbstraction } from \"@bitwarden/common/abstractions/account/account-api.service.abstraction\";\nimport { AccountService as AccountServiceAbstraction } from \"@bitwarden/common/abstractions/account/account.service.abstraction\";\nimport { AnonymousHubService as AnonymousHubServiceAbstraction } from \"@bitwarden/common/abstractions/anonymousHub.service\";\nimport { ApiService as ApiServiceAbstraction } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"@bitwarden/common/abstractions/collection.service\";\nimport { ConfigApiServiceAbstraction } from \"@bitwarden/common/abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"@bitwarden/common/abstractions/config/config.service.abstraction\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport {\n  FolderService as FolderServiceAbstraction,\n  InternalFolderService,\n} from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FormValidationErrorsService as FormValidationErrorsServiceAbstraction } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport {\n  PolicyService as PolicyServiceAbstraction,\n  InternalPolicyService,\n} from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService as ProviderServiceAbstraction } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { SyncNotifierService as SyncNotifierServiceAbstraction } from \"@bitwarden/common/abstractions/sync/syncNotifier.service.abstraction\";\nimport { TokenService as TokenServiceAbstraction } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationApiServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { ValidationService as ValidationServiceAbstraction } from \"@bitwarden/common/abstractions/validation.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { Account } from \"@bitwarden/common/models/domain/account\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/globalState\";\nimport { AccountApiService } from \"@bitwarden/common/services/account/account-api.service\";\nimport { AccountService } from \"@bitwarden/common/services/account/account.service\";\nimport { AnonymousHubService } from \"@bitwarden/common/services/anonymousHub.service\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\nimport { AuditService } from \"@bitwarden/common/services/audit.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/services/collection.service\";\nimport { ConfigApiService } from \"@bitwarden/common/services/config/config-api.service\";\nimport { ConfigService } from \"@bitwarden/common/services/config/config.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { CryptoService } from \"@bitwarden/common/services/crypto.service\";\nimport { EncryptService } from \"@bitwarden/common/services/encrypt.service\";\nimport { EnvironmentService } from \"@bitwarden/common/services/environment.service\";\nimport { EventService } from \"@bitwarden/common/services/event.service\";\nimport { ExportService } from \"@bitwarden/common/services/export.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\nimport { FolderApiService } from \"@bitwarden/common/services/folder/folder-api.service\";\nimport { FolderService } from \"@bitwarden/common/services/folder/folder.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/services/formValidationErrors.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\nimport { NotificationsService } from \"@bitwarden/common/services/notifications.service\";\nimport { OrganizationApiService } from \"@bitwarden/common/services/organization/organization-api.service\";\nimport { OrganizationService } from \"@bitwarden/common/services/organization/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/services/passwordGeneration.service\";\nimport { PolicyApiService } from \"@bitwarden/common/services/policy/policy-api.service\";\nimport { PolicyService } from \"@bitwarden/common/services/policy/policy.service\";\nimport { ProviderService } from \"@bitwarden/common/services/provider.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\nimport { SendService } from \"@bitwarden/common/services/send.service\";\nimport { SettingsService } from \"@bitwarden/common/services/settings.service\";\nimport { StateService } from \"@bitwarden/common/services/state.service\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\nimport { SyncService } from \"@bitwarden/common/services/sync/sync.service\";\nimport { SyncNotifierService } from \"@bitwarden/common/services/sync/syncNotifier.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\nimport { TotpService } from \"@bitwarden/common/services/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\nimport { UserVerificationApiService } from \"@bitwarden/common/services/userVerification/userVerification-api.service\";\nimport { UserVerificationService } from \"@bitwarden/common/services/userVerification/userVerification.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/services/usernameGeneration.service\";\nimport { ValidationService } from \"@bitwarden/common/services/validation.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeoutSettings.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { LockGuard } from \"../guards/lock.guard\";\nimport { UnauthGuard } from \"../guards/unauth.guard\";\n\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport {\n  WINDOW,\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  LOGOUT_CALLBACK,\n  LOCKED_CALLBACK,\n  LOCALES_DIRECTORY,\n  SYSTEM_LANGUAGE,\n  LOG_MAC_FAILURES,\n} from \"./injection-tokens\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { ThemingService } from \"./theming/theming.service\";\nimport { AbstractThemingService } from \"./theming/theming.service.abstraction\";\n\n@NgModule({\n  declarations: [],\n  providers: [\n    AuthGuard,\n    UnauthGuard,\n    LockGuard,\n    ModalService,\n    { provide: WINDOW, useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    {\n      provide: LOCALES_DIRECTORY,\n      useValue: \"./locales\",\n    },\n    {\n      provide: SYSTEM_LANGUAGE,\n      useFactory: (window: Window) => window.navigator.language,\n      deps: [WINDOW],\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: true,\n    },\n    {\n      provide: LOGOUT_CALLBACK,\n      useFactory:\n        (messagingService: MessagingServiceAbstraction) => (expired: boolean, userId?: string) =>\n          messagingService.send(\"logout\", { expired: expired, userId: userId }),\n      deps: [MessagingServiceAbstraction],\n    },\n    {\n      provide: LOCKED_CALLBACK,\n      useValue: null,\n    },\n    {\n      provide: LOG_MAC_FAILURES,\n      useValue: true,\n    },\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [AbstractStorageService],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: InternalFolderService,\n      useExisting: FolderServiceAbstraction,\n    },\n    {\n      provide: FolderApiServiceAbstraction,\n      useClass: FolderApiService,\n      deps: [FolderServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AccountApiServiceAbstraction,\n      useClass: AccountApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: AccountServiceAbstraction,\n      useClass: AccountService,\n      deps: [\n        AccountApiServiceAbstraction,\n        UserVerificationServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n      ],\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        AbstractEncryptService,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: UsernameGenerationServiceAbstraction,\n      useClass: UsernameGenerationService,\n      deps: [CryptoServiceAbstraction, StateServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useClass: ApiService,\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        AppIdServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useClass: SyncService,\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        ProviderServiceAbstraction,\n        FolderApiServiceAbstraction,\n        SyncNotifierServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutSettingsServiceAbstraction,\n      useClass: VaultTimeoutSettingsService,\n      deps: [\n        CryptoServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useClass: VaultTimeoutService,\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n        VaultTimeoutSettingsServiceAbstraction,\n        LOCKED_CALLBACK,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useClass: StateService,\n      deps: [\n        AbstractStorageService,\n        SECURE_STORAGE,\n        MEMORY_STORAGE,\n        LogService,\n        StateMigrationServiceAbstraction,\n        STATE_FACTORY,\n        STATE_SERVICE_USE_CACHE,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useClass: NotificationsService,\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        LOGOUT_CALLBACK,\n        LogService,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [WINDOW],\n    },\n    {\n      provide: AbstractEncryptService,\n      useClass: EncryptService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, LOG_MAC_FAILURES],\n    },\n    {\n      provide: EventServiceAbstraction,\n      useClass: EventService,\n      deps: [\n        ApiServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction],\n    },\n    {\n      provide: InternalPolicyService,\n      useExisting: PolicyServiceAbstraction,\n    },\n    {\n      provide: PolicyApiServiceAbstraction,\n      useClass: PolicyApiService,\n      deps: [\n        PolicyServiceAbstraction,\n        ApiServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        UserVerificationApiServiceAbstraction,\n      ],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction, SyncNotifierServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: AbstractThemingService,\n      useClass: ThemingService,\n    },\n    {\n      provide: FormValidationErrorsServiceAbstraction,\n      useClass: FormValidationErrorsService,\n    },\n    {\n      provide: UserVerificationApiServiceAbstraction,\n      useClass: UserVerificationApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: OrganizationApiServiceAbstraction,\n      useClass: OrganizationApiService,\n      // This is a slightly odd dependency tree for a specialized api service\n      // it depends on SyncService so that new data can be retrieved through the sync\n      // rather than updating the OrganizationService directly. Instead OrganizationService\n      // subscribes to sync notifications and will update itself based on that.\n      deps: [ApiServiceAbstraction, SyncServiceAbstraction],\n    },\n    {\n      provide: SyncNotifierServiceAbstraction,\n      useClass: SyncNotifierService,\n    },\n    {\n      provide: ConfigServiceAbstraction,\n      useClass: ConfigService,\n      deps: [StateServiceAbstraction, ConfigApiServiceAbstraction],\n    },\n    {\n      provide: ConfigApiServiceAbstraction,\n      useClass: ConfigApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: AnonymousHubServiceAbstraction,\n      useClass: AnonymousHubService,\n      deps: [EnvironmentServiceAbstraction, AuthServiceAbstraction, LogService],\n    },\n    {\n      provide: ValidationServiceAbstraction,\n      useClass: ValidationService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n  ],\n})\nexport class JslibServicesModule {}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: AbstractStorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { ApiLogInStrategy } from \"../misc/logInStrategies/apiLogin.strategy\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { PasswordlessLogInStrategy } from \"../misc/logInStrategies/passwordlessLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { AuthRequestPushNotification } from \"../models/response/notificationResponse\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy ? this.logInStrategy.email : null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  private logInStrategy:\n    | ApiLogInStrategy\n    | PasswordLogInStrategy\n    | SsoLogInStrategy\n    | PasswordlessLogInStrategy;\n  private sessionTimeout: any;\n\n  private pushNotificationSubject = new Subject<string>();\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials:\n      | ApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy:\n      | ApiLogInStrategy\n      | PasswordLogInStrategy\n      | SsoLogInStrategy\n      | PasswordlessLogInStrategy;\n\n    switch (credentials.type) {\n      case AuthenticationType.Password:\n        strategy = new PasswordLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this\n        );\n        break;\n      case AuthenticationType.Sso:\n        strategy = new SsoLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this.keyConnectorService\n        );\n        break;\n      case AuthenticationType.Api:\n        strategy = new ApiLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this.environmentService,\n          this.keyConnectorService\n        );\n        break;\n      case AuthenticationType.Passwordless:\n        strategy = new PasswordlessLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this\n        );\n        break;\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithApiKey(): boolean {\n    return this.logInStrategy instanceof ApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  async getAuthStatus(userId?: string): Promise<AuthenticationStatus> {\n    const isAuthenticated = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!isAuthenticated) {\n      return AuthenticationStatus.LoggedOut;\n    }\n\n    // Keys aren't stored for a device that is locked or logged out\n    // Make sure we're logged in before checking this, otherwise we could mix up those states\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    const hasKeyInMemory = await this.cryptoService.hasKeyInMemory(userId);\n    if (!hasKeyInMemory) {\n      return AuthenticationStatus.Locked;\n    }\n\n    return AuthenticationStatus.Unlocked;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  async authResponsePushNotifiction(notification: AuthRequestPushNotification): Promise<any> {\n    this.pushNotificationSubject.next(notification.id);\n  }\n\n  getPushNotifcationObs$(): Observable<any> {\n    return this.pushNotificationSubject.asObservable();\n  }\n\n  private saveState(\n    strategy:\n      | ApiLogInStrategy\n      | PasswordLogInStrategy\n      | SsoLogInStrategy\n      | PasswordlessLogInStrategy\n  ) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { InternalFolderService as InternalFolderServiceAbstraction } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { CipherData } from \"../../models/data/cipherData\";\nimport { FolderData } from \"../../models/data/folderData\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { FolderView } from \"../../models/view/folderView\";\n\nexport class FolderService implements InternalFolderServiceAbstraction {\n  protected _folders: BehaviorSubject<Folder[]> = new BehaviorSubject([]);\n  protected _folderViews: BehaviorSubject<FolderView[]> = new BehaviorSubject([]);\n\n  folders$ = this._folders.asObservable();\n  folderViews$ = this._folderViews.asObservable();\n\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._folders.next([]);\n            this._folderViews.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getEncryptedFolders();\n\n          await this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async clearCache(): Promise<void> {\n    this._folderViews.next([]);\n  }\n\n  // TODO: This should be moved to EncryptService or something\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = this._folders.getValue();\n\n    return folders.find((folder) => folder.id === id);\n  }\n\n  /**\n   * @deprecated Only use in CLI!\n   */\n  async getAllDecryptedFromState(): Promise<FolderView[]> {\n    const data = await this.stateService.getEncryptedFolders();\n    const folders = Object.values(data || {}).map((f) => new Folder(f));\n\n    return this.decryptFolders(folders);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<void> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<void> {\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._folders.next([]);\n      this._folderViews.next([]);\n    }\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  private async updateObservables(foldersMap: { [id: string]: FolderData }) {\n    const folders = Object.values(foldersMap || {}).map((f) => new Folder(f));\n\n    this._folders.next(folders);\n\n    if (await this.cryptoService.hasKey()) {\n      this._folderViews.next(await this.decryptFolders(folders));\n    }\n  }\n\n  private async decryptFolders(folders: Folder[]) {\n    const decryptFolderPromises = folders.map((f) => f.decrypt());\n    const decryptedFolders = await Promise.all(decryptFolderPromises);\n\n    decryptedFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decryptedFolders.push(noneFolder);\n\n    return decryptedFolders;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { FolderApiServiceAbstraction } from \"../../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { FolderData } from \"../../models/data/folderData\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { FolderRequest } from \"../../models/request/folderRequest\";\nimport { FolderResponse } from \"../../models/response/folderResponse\";\n\nexport class FolderApiService implements FolderApiServiceAbstraction {\n  constructor(private folderService: InternalFolderService, private apiService: ApiService) {}\n\n  async save(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.putFolder(folder.id, request);\n    }\n\n    const data = new FolderData(response);\n    await this.folderService.upsert(data);\n  }\n\n  async delete(id: string): Promise<any> {\n    await this.deleteFolder(id);\n    await this.folderService.delete(id);\n  }\n\n  async get(id: string): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  private async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  private deleteFolder(id: string): Promise<any> {\n    return this.apiService.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n}\n","import { AccountApiService as AccountApiServiceAbstraction } from \"../../abstractions/account/account-api.service.abstraction\";\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\n\nexport class AccountApiService implements AccountApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  deleteAccount(request: SecretVerificationRequest): Promise<void> {\n    return this.apiService.send(\"DELETE\", \"/accounts\", request, true, false);\n  }\n}\n","import { AccountApiService } from \"../../abstractions/account/account-api.service.abstraction\";\nimport { AccountService as AccountServiceAbstraction } from \"../../abstractions/account/account.service.abstraction\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { UserVerificationService } from \"../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"../../types/verification\";\n\nexport class AccountService implements AccountServiceAbstraction {\n  constructor(\n    private accountApiService: AccountApiService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async delete(verification: Verification): Promise<void> {\n    try {\n      const verificationRequest = await this.userVerificationService.buildRequest(verification);\n      await this.accountApiService.deleteAccount(verificationRequest);\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","import { concatMap, Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  protected baseUrl: string;\n  protected webVaultUrl: string;\n  protected apiUrl: string;\n  protected identityUrl: string;\n  protected iconsUrl: string;\n  protected notificationsUrl: string;\n  protected eventsUrl: string;\n  private keyConnectorUrl: string;\n  private scimUrl: string = null;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount$\n      .pipe(\n        concatMap(async () => {\n          await this.setUrlsFromStorage();\n        })\n      )\n      .subscribe();\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  getScimUrl() {\n    if (this.scimUrl != null) {\n      return this.scimUrl + \"/v2\";\n    }\n\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://scim.bitwarden.com/v2\"\n      : this.getWebVaultUrl() + \"/scim/v2\";\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    // scimUrl is not saved to storage\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    // scimUrl cannot be cleared\n    urls.scim = this.formatUrl(urls.scim) ?? this.scimUrl;\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n      // scimUrl is not saved to storage\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    this.scimUrl = urls.scim;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n      scim: this.scimUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n\n  isCloud(): boolean {\n    return [\"https://api.bitwarden.com\", \"https://vault.bitwarden.com/api\"].includes(\n      this.getApiUrl()\n    );\n  }\n}\n","import { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { DeviceRequest } from \"../models/request/deviceRequest\";\nimport { DeviceVerificationRequest } from \"../models/request/deviceVerificationRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationConnectionRequest } from \"../models/request/organizationConnectionRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PasswordlessCreateAuthRequest } from \"../models/request/passwordlessCreateAuthRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { AuthRequestResponse } from \"../models/response/authRequestResponse\";\nimport { RegisterResponse } from \"../models/response/authentication/registerResponse\";\nimport { BillingHistoryResponse } from \"../models/response/billingHistoryResponse\";\nimport { BillingPaymentResponse } from \"../models/response/billingPaymentResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DeviceVerificationResponse } from \"../models/response/deviceVerificationResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organizationConnectionResponse\";\nimport { OrganizationExportResponse } from \"../models/response/organizationExportResponse\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organizationSponsorshipSyncStatusResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SsoPreValidateResponse } from \"../models/response/ssoPreValidateResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  TwoFactorWebAuthnResponse,\n  ChallengeResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport class ApiService implements ApiServiceAbstraction {\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private appIdService: AppIdService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof ApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  async postAuthRequest(request: PasswordlessCreateAuthRequest): Promise<AuthRequestResponse> {\n    const r = await this.send(\"POST\", \"/auth-requests/\", request, false, true);\n    return new AuthRequestResponse(r);\n  }\n\n  async getAuthResponse(id: string, accessCode: string): Promise<AuthRequestResponse> {\n    const path = `/auth-requests/${id}/response?code=${accessCode}`;\n    const r = await this.send(\"GET\", path, null, false, true);\n    return new AuthRequestResponse(r);\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  async postRegister(request: RegisterRequest): Promise<RegisterResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      true,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n    return new RegisterResponse(r);\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<void> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Account Billing APIs\n\n  async getUserBillingHistory(): Promise<BillingHistoryResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/history\", null, true, true);\n    return new BillingHistoryResponse(r);\n  }\n\n  async getUserBillingPayment(): Promise<BillingPaymentResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/payment-method\", null, true, true);\n    return new BillingPaymentResponse(r);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getFullCipherDetails(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/details\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Organization User APIs\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getOrganizationUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<void> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  revokeOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/revoke\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async revokeManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/revoke\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  restoreOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/restore\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async restoreManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/restore\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, false, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  async getDeviceVerificationSettings(): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/two-factor/get-device-verification-settings\",\n      null,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async putDeviceVerificationSettings(\n    request: DeviceVerificationRequest\n  ): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/two-factor/device-verification-settings\",\n      request,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getCloudCommunicationsEnabled(): Promise<boolean> {\n    const r = await this.send(\"GET\", \"/organizations/connections/enabled\", null, true, true);\n    return r as boolean;\n  }\n\n  async getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"GET\", `/organizations/connections/${id}/${type}`, null, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"POST\", \"/organizations/connections/\", request, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId?: string\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/connections/\" + organizationConnectionId,\n      request,\n      true,\n      true\n    );\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async deleteOrganizationConnection(id: string): Promise<void> {\n    return this.send(\"DELETE\", \"/organizations/connections/\" + id, null, true, false);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getOrganizationExport(organizationId: string): Promise<OrganizationExportResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/export\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationExportResponse(r);\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersion()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<SsoPreValidateResponse> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      const body = await response.json();\n      return new SsoPreValidateResponse(body);\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoredOrgId +\n        \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getSponsorshipSyncStatus(\n    sponsoredOrgId: string\n  ): Promise<OrganizationSponsorshipSyncStatusResponse> {\n    const response = await this.send(\n      \"GET\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/sync-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSponsorshipSyncStatusResponse(response);\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n    const tokenRequest = new ApiTokenRequest(\n      clientId,\n      clientSecret,\n      new TokenRequestTwoFactor(),\n      deviceRequest\n    );\n\n    const response = await this.postIdentityToken(tokenRequest);\n    if (!(response instanceof IdentityTokenResponse)) {\n      throw new Error(\"Invalid response received when refreshing api token\");\n    }\n\n    await this.tokenService.setToken(response.accessToken);\n  }\n\n  async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    const responseType = response.headers.get(\"content-type\");\n    const responseIsJson = responseType != null && responseType.indexOf(\"application/json\") !== -1;\n    if (hasResponse && response.status === 200 && responseIsJson) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    if (\n      authed &&\n      ((tokenError && response.status === 400) ||\n        response.status === 401 ||\n        response.status === 403)\n    ) {\n      await this.logoutCallback(true);\n      return null;\n    }\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService();\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { Utils } from \"../misc/utils\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  private _settings: BehaviorSubject<AccountSettingsSettings> = new BehaviorSubject({});\n\n  settings$ = this._settings.asObservable();\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._settings.next({});\n            return;\n          }\n\n          const data = await this.stateService.getSettings();\n\n          this._settings.next(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    const settings = this._settings.getValue() ?? {};\n\n    settings.equivalentDomains = equivalentDomains;\n\n    this._settings.next(settings);\n    await this.stateService.setSettings(settings);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._settings.next({});\n    }\n\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { PolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { PolicyType } from \"../../enums/policyType\";\n\nexport class VaultTimeoutSettingsService implements VaultTimeoutSettingsServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n}\n","import { AuthService } from \"../../abstractions/auth.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { SearchService } from \"../../abstractions/search.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private authService: AuthService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (expired: boolean, userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    for (const userId in this.stateService.accounts.getValue()) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.vaultTimeoutSettingsService.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      await this.folderService.clearCache();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(false, userId);\n    }\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    const authStatus = await this.authService.getAuthStatus(userId);\n    if (\n      authStatus === AuthenticationStatus.Locked ||\n      authStatus === AuthenticationStatus.LoggedOut\n    ) {\n      return false;\n    }\n\n    const vaultTimeout = await this.vaultTimeoutSettingsService.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(userId);\n  }\n}\n","import * as papa from \"papaparse\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIdExport as CipherExport } from \"../models/export/cipherWithIdsExport\";\nimport { CollectionWithIdExport as CollectionExport } from \"../models/export/collectionWithIdExport\";\nimport { EventExport } from \"../models/export/eventExport\";\nimport { FolderWithIdExport as FolderExport } from \"../models/export/folderWithIdExport\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { EventView } from \"../models/view/eventView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new EventExport(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      firstValueFrom(this.folderService.folderViews$).then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      firstValueFrom(this.folderService.folders$).then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getOrganizationExport(organizationId).then((exportData) => {\n        const exportPromises: any = [];\n        if (exportData != null) {\n          if (\n            exportData.collections != null &&\n            exportData.collections.data != null &&\n            exportData.collections.data.length > 0\n          ) {\n            exportData.collections.data.forEach((c) => {\n              const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n              exportPromises.push(\n                collection.decrypt().then((decCol) => {\n                  decCollections.push(decCol);\n                })\n              );\n            });\n          }\n          if (\n            exportData.ciphers != null &&\n            exportData.ciphers.data != null &&\n            exportData.ciphers.data.length > 0\n          ) {\n            exportData.ciphers.data\n              .filter((c) => c.deletedDate === null)\n              .forEach((c) => {\n                const cipher = new Cipher(new CipherData(c));\n                exportPromises.push(\n                  cipher.decrypt().then((decCipher) => {\n                    decCiphers.push(decCipher);\n                  })\n                );\n              });\n          }\n        }\n        return Promise.all(exportPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync/sync.service.abstraction\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService,\n    private authService: AuthService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback(true);\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    const authStatus = await this.authService.getAuthStatus();\n    return authStatus >= AuthenticationStatus.Unlocked;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n\n  constructor(win: Window | typeof global) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { IEncrypted } from \"../interfaces/IEncrypted\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EncryptedObject } from \"../models/domain/encryptedObject\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport class EncryptService implements AbstractEncryptService {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService,\n    private logMacFailures: boolean\n  ) {}\n\n  async encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async decryptToUtf8(encString: EncString, key: SymmetricCryptoKey): Promise<string> {\n    if (key == null) {\n      throw new Error(\"No key provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encString);\n\n    if (key.macKey != null && encString?.mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (key.encType !== encString.encryptionType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  async decryptToBytes(encThing: IEncrypted, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (encThing == null) {\n      throw new Error(\"Nothing provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encThing);\n\n    if (key.macKey != null && encThing.macBytes == null) {\n      return null;\n    }\n\n    if (key.encType !== encThing.encryptionType) {\n      return null;\n    }\n\n    if (key.macKey != null && encThing.macBytes != null) {\n      const macData = new Uint8Array(encThing.ivBytes.byteLength + encThing.dataBytes.byteLength);\n      macData.set(new Uint8Array(encThing.ivBytes), 0);\n      macData.set(new Uint8Array(encThing.dataBytes), encThing.ivBytes.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        key.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(encThing.macBytes, computedMac);\n      if (!macsMatch) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    const result = await this.cryptoFunctionService.aesDecrypt(\n      encThing.dataBytes,\n      encThing.ivBytes,\n      key.encKey\n    );\n\n    return result ?? null;\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = key;\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private logMacFailed(msg: string) {\n    if (this.logMacFailures) {\n      this.logService.error(msg);\n    }\n  }\n\n  /**\n   * Transform into new key for the old encrypt-then-mac scheme if required, otherwise return the current key unchanged\n   * @param encThing The encrypted object (e.g. encString or encArrayBuffer) that you want to decrypt\n   */\n  resolveLegacyKey(key: SymmetricCryptoKey, encThing: IEncrypted): SymmetricCryptoKey {\n    if (\n      encThing.encryptionType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      return new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n    }\n\n    return key;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { EventService as EventServiceAbstraction } from \"../abstractions/event.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EventType } from \"../enums/eventType\";\nimport { EventData } from \"../models/data/eventData\";\nimport { EventRequest } from \"../models/request/eventRequest\";\n\nexport class EventService implements EventServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private apiService: ApiService,\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false,\n    organizationId: string = null\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    if (organizationId != null) {\n      if (!orgIds.has(organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    event.organizationId = organizationId;\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.uploadEvents();\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      req.organizationId = e.organizationId;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import { of, concatMap, BehaviorSubject, Observable, map } from \"rxjs\";\n\nimport { OrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { InternalPolicyService as InternalPolicyServiceAbstraction } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { Utils } from \"../../misc/utils\";\nimport { PolicyData } from \"../../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/masterPasswordPolicyOptions\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { PolicyResponse } from \"../../models/response/policyResponse\";\n\nexport class PolicyService implements InternalPolicyServiceAbstraction {\n  private _policies: BehaviorSubject<Policy[]> = new BehaviorSubject([]);\n\n  policies$ = this._policies.asObservable();\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._policies.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getEncryptedPolicies();\n\n          await this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  /**\n   * @deprecated Do not call this, use the policies$ observable collection\n   */\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        if (Object.prototype.hasOwnProperty.call(diskPolicies, id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  masterPasswordPolicyOptions$(policies?: Policy[]): Observable<MasterPasswordPolicyOptions> {\n    const observable = policies ? of(policies) : this.policies$;\n    return observable.pipe(\n      map((obsPolicies) => {\n        let enforcedOptions: MasterPasswordPolicyOptions = null;\n        const filteredPolicies = obsPolicies.filter((p) => p.type === PolicyType.MasterPassword);\n\n        if (filteredPolicies == null || filteredPolicies.length === 0) {\n          return enforcedOptions;\n        }\n\n        filteredPolicies.forEach((currentPolicy) => {\n          if (!currentPolicy.enabled || currentPolicy.data == null) {\n            return;\n          }\n\n          if (enforcedOptions == null) {\n            enforcedOptions = new MasterPasswordPolicyOptions();\n          }\n\n          if (\n            currentPolicy.data.minComplexity != null &&\n            currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n          ) {\n            enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n          }\n\n          if (\n            currentPolicy.data.minLength != null &&\n            currentPolicy.data.minLength > enforcedOptions.minLength\n          ) {\n            enforcedOptions.minLength = currentPolicy.data.minLength;\n          }\n\n          if (currentPolicy.data.requireUpper) {\n            enforcedOptions.requireUpper = true;\n          }\n\n          if (currentPolicy.data.requireLower) {\n            enforcedOptions.requireLower = true;\n          }\n\n          if (currentPolicy.data.requireNumbers) {\n            enforcedOptions.requireNumbers = true;\n          }\n\n          if (currentPolicy.data.requireSpecial) {\n            enforcedOptions.requireSpecial = true;\n          }\n        });\n\n        return enforcedOptions;\n      })\n    );\n  }\n\n  policyAppliesToActiveUser$(\n    policyType: PolicyType,\n    policyFilter: (policy: Policy) => boolean = (p) => true\n  ) {\n    return this.policies$.pipe(\n      concatMap(async (policies) => {\n        const userId = await this.stateService.getUserId();\n        return await this.checkPoliciesThatApplyToUser(policies, policyType, policyFilter, userId);\n      })\n    );\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n\n    return this.checkPoliciesThatApplyToUser(policies, policyType, policyFilter, userId);\n  }\n\n  async upsert(policy: PolicyData): Promise<any> {\n    let policies = await this.stateService.getEncryptedPolicies();\n    if (policies == null) {\n      policies = {};\n    }\n\n    policies[policy.id] = policy;\n\n    await this.updateObservables(policies);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<void> {\n    await this.updateObservables(policies);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._policies.next([]);\n    }\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n\n  private async updateObservables(policiesMap: { [id: string]: PolicyData }) {\n    const policies = Object.values(policiesMap || {}).map((f) => new Policy(f));\n\n    this._policies.next(policies);\n  }\n\n  private async checkPoliciesThatApplyToUser(\n    policies: Policy[],\n    policyType: PolicyType,\n    policyFilter: (policy: Policy) => boolean = (p) => true,\n    userId?: string\n  ) {\n    const organizations = await this.organizationService.getAll(userId);\n    const filteredPolicies = policies.filter(\n      (p) => p.type === policyType && p.enabled && policyFilter(p)\n    );\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.enabled &&\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        policySet.has(o.id) &&\n        !this.isExcemptFromPolicies(o, policyType)\n    );\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { PolicyApiServiceAbstraction } from \"../../abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/masterPasswordPolicyOptions\";\nimport { PolicyRequest } from \"../../models/request/policyRequest\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { PolicyResponse } from \"../../models/response/policyResponse\";\n\nexport class PolicyApiService implements PolicyApiServiceAbstraction {\n  constructor(\n    private policyService: InternalPolicyService,\n    private apiService: ApiService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.policyService.mapPoliciesFromToken(response);\n    return await firstValueFrom(this.policyService.masterPasswordPolicyOptions$(policies));\n  }\n\n  async putPolicy(organizationId: string, type: PolicyType, request: PolicyRequest): Promise<any> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    const response = new PolicyResponse(r);\n    const data = new PolicyData(response);\n    await this.policyService.upsert(data);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/sendFile\";\nimport { SendText } from \"../models/domain/sendText\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private logoutCallback: (expired: boolean, userId?: string) => void\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n\n  private handleKeyConnectorError(e: any) {\n    this.logService.error(e);\n    if (this.logoutCallback != null) {\n      this.logoutCallback(false);\n    }\n    throw new Error(\"Key Connector error\");\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"../../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verifyOTPRequest\";\nimport { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\nimport { Verification } from \"../../types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Use it to verify the input collected by UserVerificationComponent.\n */\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private userVerificationApiService: UserVerificationApiServiceAbstraction\n  ) {}\n\n  /**\n   * Create a new request model to be used for server-side verification\n   * @param verification User-supplied verification data (Master Password or OTP)\n   * @param requestClass The request model to create\n   * @param alreadyHashed Whether the master password is already hashed\n   */\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  /**\n   * Used to verify the Master Password client-side, or send the OTP to the server for verification (with no other data)\n   * Generally used for client-side verification only.\n   * @param verification User-supplied verification data (Master Password or OTP)\n   */\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.userVerificationApiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.userVerificationApiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPasswordRequired\"));\n      }\n    }\n  }\n}\n","import { BehaviorSubject, concatMap, filter } from \"rxjs\";\n\nimport { OrganizationService as OrganizationServiceAbstraction } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { SyncNotifierService } from \"../../abstractions/sync/syncNotifier.service.abstraction\";\nimport { OrganizationData } from \"../../models/data/organizationData\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { isSuccessfullyCompleted } from \"../../types/syncEventArgs\";\n\nexport class OrganizationService implements OrganizationServiceAbstraction {\n  private _organizations = new BehaviorSubject<Organization[]>([]);\n\n  organizations$ = this._organizations.asObservable();\n\n  constructor(\n    private stateService: StateService,\n    private syncNotifierService: SyncNotifierService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (!unlocked) {\n            this._organizations.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getOrganizations();\n          this.updateObservables(data);\n        })\n      )\n      .subscribe();\n\n    this.syncNotifierService.sync$\n      .pipe(\n        filter(isSuccessfullyCompleted),\n        concatMap(async ({ data }) => {\n          const { profile } = data;\n          const organizations: { [id: string]: OrganizationData } = {};\n          profile.organizations.forEach((o) => {\n            organizations[o.id] = new OrganizationData(o);\n          });\n\n          profile.providerOrganizations.forEach((o) => {\n            if (organizations[o.id] == null) {\n              organizations[o.id] = new OrganizationData(o);\n              organizations[o.id].isProviderUser = true;\n            }\n          });\n\n          await this.updateStateAndObservables(organizations);\n        })\n      )\n      .subscribe();\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizationsMap = await this.stateService.getOrganizations({ userId: userId });\n    return Object.values(organizationsMap || {}).map((o) => new Organization(o));\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const organizations = this._organizations.getValue();\n    return organizations.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  hasOrganizations(): boolean {\n    const organizations = this._organizations.getValue();\n    return organizations.length > 0;\n  }\n\n  async upsert(organization: OrganizationData): Promise<void> {\n    let organizations = await this.stateService.getOrganizations();\n    if (organizations == null) {\n      organizations = {};\n    }\n\n    organizations[organization.id] = organization;\n\n    await this.updateStateAndObservables(organizations);\n  }\n\n  async delete(id: string): Promise<void> {\n    const organizations = await this.stateService.getOrganizations();\n    if (organizations == null) {\n      return;\n    }\n\n    if (organizations[id] == null) {\n      return;\n    }\n\n    delete organizations[id];\n    await this.updateStateAndObservables(organizations);\n  }\n\n  get(id: string): Organization {\n    const organizations = this._organizations.getValue();\n\n    return organizations.find((organization) => organization.id === id);\n  }\n\n  getByIdentifier(identifier: string): Organization {\n    const organizations = this._organizations.getValue();\n\n    return organizations.find((organization) => organization.identifier === identifier);\n  }\n\n  private async updateStateAndObservables(organizationsMap: { [id: string]: OrganizationData }) {\n    await this.stateService.setOrganizations(organizationsMap);\n    this.updateObservables(organizationsMap);\n  }\n\n  private updateObservables(organizationsMap: { [id: string]: OrganizationData }) {\n    const organizations = Object.values(organizationsMap || {}).map((o) => new Organization(o));\n    this._organizations.next(organizations);\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import { UntypedFormGroup, ValidationErrors } from \"@angular/forms\";\n\nimport {\n  FormGroupControls,\n  FormValidationErrorsService as FormValidationErrorsAbstraction,\n  AllValidationErrors,\n} from \"../abstractions/formValidationErrors.service\";\n\nexport class FormValidationErrorsService implements FormValidationErrorsAbstraction {\n  getFormValidationErrors(controls: FormGroupControls): AllValidationErrors[] {\n    let errors: AllValidationErrors[] = [];\n    Object.keys(controls).forEach((key) => {\n      const control = controls[key];\n      if (control instanceof UntypedFormGroup) {\n        errors = errors.concat(this.getFormValidationErrors(control.controls));\n      }\n\n      const controlErrors: ValidationErrors = controls[key].errors;\n      if (controlErrors !== null) {\n        Object.keys(controlErrors).forEach((keyError) => {\n          errors.push({\n            controlName: key,\n            errorName: keyError,\n          });\n        });\n      }\n    });\n\n    return errors;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verifyOTPRequest\";\n\nexport class UserVerificationApiService implements UserVerificationApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n  async postAccountRequestOTP(): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"../../abstractions/organization/organization-api.service.abstraction\";\nimport { SyncService } from \"../../abstractions/sync/sync.service.abstraction\";\nimport { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/importDirectoryRequest\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organizationSsoRequest\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organizationApiKeyRequest\";\nimport { OrganizationCreateRequest } from \"../../models/request/organizationCreateRequest\";\nimport { OrganizationKeysRequest } from \"../../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organizationUpgradeRequest\";\nimport { PaymentRequest } from \"../../models/request/paymentRequest\";\nimport { SeatRequest } from \"../../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\nimport { StorageRequest } from \"../../models/request/storageRequest\";\nimport { VerifyBankRequest } from \"../../models/request/verifyBankRequest\";\nimport { ApiKeyResponse } from \"../../models/response/apiKeyResponse\";\nimport { BillingResponse } from \"../../models/response/billingResponse\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organizationSsoResponse\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organizationApiKeyInformationResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organizationSubscriptionResponse\";\nimport { PaymentResponse } from \"../../models/response/paymentResponse\";\nimport { TaxInfoResponse } from \"../../models/response/taxInfoResponse\";\n\nexport class OrganizationApiService implements OrganizationApiServiceAbstraction {\n  constructor(private apiService: ApiService, private syncService: SyncService) {}\n\n  async get(id: string): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getBilling(id: string): Promise<BillingResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/billing\",\n      null,\n      true,\n      true\n    );\n    return new BillingResponse(r);\n  }\n\n  async getSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/subscription\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getLicense(id: string, installationId: string): Promise<unknown> {\n    return this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getAutoEnrollStatus(identifier: string): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  async create(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations\", request, true, true);\n    // Forcing a sync will notify organization service that they need to repull\n    await this.syncService.fullSync(true);\n    return new OrganizationResponse(r);\n  }\n\n  async createLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async save(id: string, request: OrganizationUpdateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    const data = new OrganizationResponse(r);\n    await this.syncService.fullSync(true);\n    return data;\n  }\n\n  async updatePayment(id: string, request: PaymentRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  async upgrade(id: string, request: OrganizationUpgradeRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/upgrade\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/subscription\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async updateSeats(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/seat\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/storage\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async verifyBank(id: string, request: VerifyBankRequest): Promise<void> {\n    await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/verify-bank\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async cancel(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  async reinstate(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  async leave(id: string): Promise<void> {\n    await this.apiService.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n    await this.syncService.fullSync(true);\n  }\n\n  async delete(id: string, request: SecretVerificationRequest): Promise<void> {\n    await this.apiService.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n    await this.syncService.fullSync(true);\n  }\n\n  async updateLicense(id: string, data: FormData): Promise<void> {\n    await this.apiService.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async importDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/import\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getOrCreateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getApiKeyInformation(\n    id: string,\n    organizationApiKeyType: OrganizationApiKeyType = null\n  ): Promise<ListResponse<OrganizationApiKeyInformationResponse>> {\n    const uri =\n      organizationApiKeyType === null\n        ? \"/organizations/\" + id + \"/api-key-information\"\n        : \"/organizations/\" + id + \"/api-key-information/\" + organizationApiKeyType;\n    const r = await this.apiService.send(\"GET\", uri, null, true, true);\n    return new ListResponse(r, OrganizationApiKeyInformationResponse);\n  }\n\n  async rotateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async updateTaxInfo(id: string, request: OrganizationTaxInfoUpdateRequest): Promise<void> {\n    // Can't broadcast anything because the response doesn't have content\n    return this.apiService.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  async getKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async updateKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/keys\",\n      request,\n      true,\n      true\n    );\n    // Not broadcasting anything because data on this response doesn't correspond to `Organization`\n    return new OrganizationKeysResponse(r);\n  }\n\n  async getSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async updateSso(id: string, request: OrganizationSsoRequest): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/sso\",\n      request,\n      true,\n      true\n    );\n    // Not broadcasting anything because data on this response doesn't correspond to `Organization`\n    return new OrganizationSsoResponse(r);\n  }\n}\n","import { Subject } from \"rxjs\";\n\nimport { SyncNotifierService as SyncNotifierServiceAbstraction } from \"../../abstractions/sync/syncNotifier.service.abstraction\";\nimport { SyncEventArgs } from \"../../types/syncEventArgs\";\n\n/**\n * This class should most likely have 0 dependencies because it will hopefully\n * be rolled into SyncService once upon a time.\n */\nexport class SyncNotifierService implements SyncNotifierServiceAbstraction {\n  private _sync = new Subject<SyncEventArgs>();\n\n  sync$ = this._sync.asObservable();\n\n  next(event: SyncEventArgs): void {\n    this._sync.next(event);\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { ServerConfig } from \"./server-config\";\n\nexport abstract class ConfigServiceAbstraction {\n  serverConfig$: Observable<ServerConfig | null>;\n}\n","import { BehaviorSubject, concatMap, map, switchMap, timer, EMPTY } from \"rxjs\";\n\nimport { ConfigApiServiceAbstraction } from \"../../abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"../../abstractions/config/config.service.abstraction\";\nimport { ServerConfig } from \"../../abstractions/config/server-config\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { ServerConfigData } from \"../../models/data/server-config.data\";\n\nexport class ConfigService implements ConfigServiceAbstraction {\n  private _serverConfig = new BehaviorSubject<ServerConfig | null>(null);\n  serverConfig$ = this._serverConfig.asObservable();\n\n  constructor(\n    private stateService: StateService,\n    private configApiService: ConfigApiServiceAbstraction\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        switchMap((unlocked) => {\n          if (!unlocked) {\n            this._serverConfig.next(null);\n            return EMPTY;\n          }\n\n          // Re-fetch the server config every hour\n          return timer(0, 3600 * 1000).pipe(map(() => unlocked));\n        }),\n        concatMap(async (unlocked) => {\n          return unlocked ? await this.buildServerConfig() : null;\n        })\n      )\n      .subscribe((serverConfig) => {\n        this._serverConfig.next(serverConfig);\n      });\n  }\n\n  private async buildServerConfig(): Promise<ServerConfig> {\n    const data = await this.stateService.getServerConfig();\n    const domain = data ? new ServerConfig(data) : null;\n\n    if (domain == null || !domain.isValid() || domain.expiresSoon()) {\n      const value = await this.fetchServerConfig();\n      return value ?? domain;\n    }\n\n    return domain;\n  }\n\n  private async fetchServerConfig(): Promise<ServerConfig> {\n    try {\n      const response = await this.configApiService.get();\n\n      if (response != null) {\n        const data = new ServerConfigData(response);\n        await this.stateService.setServerConfig(data);\n        return new ServerConfig(data);\n      }\n    } catch {\n      return null;\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { ConfigApiServiceAbstraction as ConfigApiServiceAbstraction } from \"../../abstractions/config/config-api.service.abstraction\";\nimport { ServerConfigResponse } from \"../../models/response/server-config-response\";\n\nexport class ConfigApiService implements ConfigApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  async get(): Promise<ServerConfigResponse> {\n    const r = await this.apiService.send(\"GET\", \"/config\", null, true, true);\n    return new ServerConfigResponse(r);\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { ValidationService as ValidationServiceAbstraction } from \"../abstractions/validation.service\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nexport class ValidationService implements ValidationServiceAbstraction {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import {\n  AbstractStorageService,\n  MemoryStorageServiceInterface,\n} from \"../abstractions/storage.service\";\n\nexport class MemoryStorageService\n  extends AbstractStorageService\n  implements MemoryStorageServiceInterface\n{\n  private store = new Map<string, any>();\n\n  get<T>(key: string): Promise<T> {\n    if (this.store.has(key)) {\n      const obj = this.store.get(key);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string): Promise<boolean> {\n    return this.get(key) != null;\n  }\n\n  save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      return this.remove(key);\n    }\n    this.store.set(key, obj);\n    return Promise.resolve();\n  }\n\n  remove(key: string): Promise<any> {\n    this.store.delete(key);\n    return Promise.resolve();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Injectable()\nexport class BroadcasterMessagingService implements MessagingService {\n  constructor(private broadcasterService: BroadcasterService) {}\n\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    this.broadcasterService.send(message);\n  }\n}\n","import { Injectable, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\n\n@Injectable()\nexport class EventService implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n  private policies: Policy[];\n\n  constructor(private i18nService: I18nService, private policyService: PolicyService) {}\n\n  ngOnInit(): void {\n    this.policyService.policies$.pipe(takeUntil(this.destroy$)).subscribe((policies) => {\n      this.policies = policies;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  getDefaultDateFilters() {\n    const d = new Date();\n    const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\n    d.setDate(d.getDate() - 30);\n    const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\n    return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\n  }\n\n  formatDateFilters(filterStart: string, filterEnd: string) {\n    const start: Date = new Date(filterStart);\n    const end: Date = new Date(filterEnd + \":59.999\");\n    if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\n      throw new Error(\"Invalid date range.\");\n    }\n    return [start.toISOString(), end.toISOString()];\n  }\n\n  async getEventInfo(ev: EventResponse, options = new EventOptions()): Promise<EventInfo> {\n    const appInfo = this.getAppInfo(ev.deviceType);\n    const { message, humanReadableMessage } = await this.getEventMessage(ev, options);\n    return {\n      message: message,\n      humanReadableMessage: humanReadableMessage,\n      appIcon: appInfo[0],\n      appName: appInfo[1],\n    };\n  }\n\n  private async getEventMessage(ev: EventResponse, options: EventOptions) {\n    let msg = \"\";\n    let humanReadableMsg = \"\";\n    switch (ev.type) {\n      // User\n      case EventType.User_LoggedIn:\n        msg = humanReadableMsg = this.i18nService.t(\"loggedIn\");\n        break;\n      case EventType.User_ChangedPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"changedPassword\");\n        break;\n      case EventType.User_Updated2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledUpdated2fa\");\n        break;\n      case EventType.User_Disabled2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"disabled2fa\");\n        break;\n      case EventType.User_Recovered2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"recovered2fa\");\n        break;\n      case EventType.User_FailedLogIn:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin\");\n        break;\n      case EventType.User_FailedLogIn2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin2fa\");\n        break;\n      case EventType.User_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedVault\");\n        break;\n      case EventType.User_UpdatedTempPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"updatedMasterPassword\");\n        break;\n      case EventType.User_MigratedKeyToKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"migratedKeyConnector\");\n        break;\n      // Cipher\n      case EventType.Cipher_Created:\n        msg = this.i18nService.t(\"createdItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"createdItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Updated:\n        msg = this.i18nService.t(\"editedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"editedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Deleted:\n        msg = this.i18nService.t(\"permanentlyDeletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"permanentlyDeletedItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_SoftDeleted:\n        msg = this.i18nService.t(\"deletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"deletedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Restored:\n        msg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        break;\n      case EventType.Cipher_AttachmentCreated:\n        msg = this.i18nService.t(\"createdAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"createdAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_AttachmentDeleted:\n        msg = this.i18nService.t(\"deletedAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_Shared:\n        msg = this.i18nService.t(\"movedItemIdToOrg\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"movedItemIdToOrg\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientViewed:\n        msg = this.i18nService.t(\"viewedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledPasswordVisible:\n        msg = this.i18nService.t(\"viewedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledHiddenFieldVisible:\n        msg = this.i18nService.t(\"viewedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientToggledCardCodeVisible:\n        msg = this.i18nService.t(\"viewedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedHiddenField:\n        msg = this.i18nService.t(\"copiedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedPassword:\n        msg = this.i18nService.t(\"copiedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"copiedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientCopiedCardCode:\n        msg = this.i18nService.t(\"copiedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientAutofilled:\n        msg = this.i18nService.t(\"autofilledItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"autofilledItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_UpdatedCollections:\n        msg = this.i18nService.t(\"editedCollectionsForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionsForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      // Collection\n      case EventType.Collection_Created:\n        msg = this.i18nService.t(\"createdCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Updated:\n        msg = this.i18nService.t(\"editedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Deleted:\n        msg = this.i18nService.t(\"deletedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      // Group\n      case EventType.Group_Created:\n        msg = this.i18nService.t(\"createdGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"createdGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Updated:\n        msg = this.i18nService.t(\"editedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Deleted:\n        msg = this.i18nService.t(\"deletedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"deletedGroupId\", this.getShortId(ev.groupId));\n        break;\n      // Org user\n      case EventType.OrganizationUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"invitedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UpdatedGroups:\n        msg = this.i18nService.t(\"editedGroupsForUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedGroupsForUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UnlinkedSso:\n        msg = this.i18nService.t(\"unlinkedSsoUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"unlinkedSsoUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Enroll:\n        msg = this.i18nService.t(\"eventEnrollPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventEnrollPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Withdraw:\n        msg = this.i18nService.t(\"eventWithdrawPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventWithdrawPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_AdminResetPassword:\n        msg = this.i18nService.t(\"eventAdminPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventAdminPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetSsoLink:\n        msg = this.i18nService.t(\"eventResetSsoLink\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventResetSsoLink\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_FirstSsoLogin:\n        msg = this.i18nService.t(\"firstSsoLogin\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"firstSsoLogin\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Revoked:\n        msg = this.i18nService.t(\"revokedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"revokedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Restored:\n        msg = this.i18nService.t(\"restoredUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"restoredUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      // Org\n      case EventType.Organization_Updated:\n        msg = humanReadableMsg = this.i18nService.t(\"editedOrgSettings\");\n        break;\n      case EventType.Organization_PurgedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"purgedOrganizationVault\");\n        break;\n      case EventType.Organization_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedOrganizationVault\");\n        break;\n      case EventType.Organization_VaultAccessed:\n        msg = humanReadableMsg = this.i18nService.t(\"vaultAccessedByProvider\");\n        break;\n      case EventType.Organization_EnabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledSso\");\n        break;\n      case EventType.Organization_DisabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledSso\");\n        break;\n      case EventType.Organization_EnabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledKeyConnector\");\n        break;\n      case EventType.Organization_DisabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledKeyConnector\");\n        break;\n      case EventType.Organization_SponsorshipsSynced:\n        msg = humanReadableMsg = this.i18nService.t(\"sponsorshipsSynced\");\n        break;\n      // Policies\n      case EventType.Policy_Updated: {\n        msg = this.i18nService.t(\"modifiedPolicyId\", this.formatPolicyId(ev));\n\n        const policy = this.policies.filter((p) => p.id === ev.policyId)[0];\n        let p1 = this.getShortId(ev.policyId);\n        if (policy != null) {\n          p1 = PolicyType[policy.type];\n        }\n\n        humanReadableMsg = this.i18nService.t(\"modifiedPolicyId\", p1);\n        break;\n      }\n      // Provider users:\n      case EventType.ProviderUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"invitedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.providerUserId)\n        );\n        break;\n      case EventType.ProviderUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"removedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderOrganization_Created:\n        msg = this.i18nService.t(\"createdOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Added:\n        msg = this.i18nService.t(\"addedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"addedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Removed:\n        msg = this.i18nService.t(\"removedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_VaultAccessed:\n        msg = this.i18nService.t(\"accessedClientVault\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"accessedClientVault\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      default:\n        break;\n    }\n    return {\n      message: msg === \"\" ? null : msg,\n      humanReadableMessage: humanReadableMsg === \"\" ? null : humanReadableMsg,\n    };\n  }\n\n  private getAppInfo(deviceType: DeviceType): [string, string] {\n    switch (deviceType) {\n      case DeviceType.Android:\n        return [\"bwi-android\", this.i18nService.t(\"mobile\") + \" - Android\"];\n      case DeviceType.iOS:\n        return [\"bwi-apple\", this.i18nService.t(\"mobile\") + \" - iOS\"];\n      case DeviceType.UWP:\n        return [\"bwi-windows\", this.i18nService.t(\"mobile\") + \" - Windows\"];\n      case DeviceType.ChromeExtension:\n        return [\"bwi-chrome\", this.i18nService.t(\"extension\") + \" - Chrome\"];\n      case DeviceType.FirefoxExtension:\n        return [\"bwi-firefox\", this.i18nService.t(\"extension\") + \" - Firefox\"];\n      case DeviceType.OperaExtension:\n        return [\"bwi-opera\", this.i18nService.t(\"extension\") + \" - Opera\"];\n      case DeviceType.EdgeExtension:\n        return [\"bwi-edge\", this.i18nService.t(\"extension\") + \" - Edge\"];\n      case DeviceType.VivaldiExtension:\n        return [\"bwi-puzzle\", this.i18nService.t(\"extension\") + \" - Vivaldi\"];\n      case DeviceType.SafariExtension:\n        return [\"bwi-safari\", this.i18nService.t(\"extension\") + \" - Safari\"];\n      case DeviceType.WindowsDesktop:\n        return [\"bwi-windows\", this.i18nService.t(\"desktop\") + \" - Windows\"];\n      case DeviceType.MacOsDesktop:\n        return [\"bwi-apple\", this.i18nService.t(\"desktop\") + \" - macOS\"];\n      case DeviceType.LinuxDesktop:\n        return [\"bwi-linux\", this.i18nService.t(\"desktop\") + \" - Linux\"];\n      case DeviceType.ChromeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Chrome\"];\n      case DeviceType.FirefoxBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Firefox\"];\n      case DeviceType.OperaBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Opera\"];\n      case DeviceType.SafariBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Safari\"];\n      case DeviceType.VivaldiBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Vivaldi\"];\n      case DeviceType.EdgeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Edge\"];\n      case DeviceType.IEBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - IE\"];\n      case DeviceType.UnknownBrowser:\n        return [\n          \"bwi-globe\",\n          this.i18nService.t(\"webVault\") + \" - \" + this.i18nService.t(\"unknown\"),\n        ];\n      default:\n        return [\"bwi-globe\", this.i18nService.t(\"unknown\")];\n    }\n  }\n\n  private formatCipherId(ev: EventResponse, options: EventOptions) {\n    const shortId = this.getShortId(ev.cipherId);\n    if (ev.organizationId == null || !options.cipherInfo) {\n      return \"<code>\" + shortId + \"</code>\";\n    }\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/vault?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.cipherId\n    );\n    return a.outerHTML;\n  }\n\n  private formatGroupId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.groupId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/groups?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatCollectionId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.collectionId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/collections?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatOrgUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.organizationUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.organizationUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/providers/\" +\n        ev.providerId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.providerUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderOrganizationId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerOrganizationId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\"href\", \"#/providers/\" + ev.providerId + \"/clients?search=\" + shortId);\n    return a.outerHTML;\n  }\n\n  private formatPolicyId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.policyId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/policies?policyId=\" + ev.policyId\n    );\n    return a.outerHTML;\n  }\n\n  private makeAnchor(shortId: string) {\n    const a = document.createElement(\"a\");\n    a.title = this.i18nService.t(\"view\");\n    a.innerHTML = \"<code>\" + shortId + \"</code>\";\n    return a;\n  }\n\n  private getShortId(id: string) {\n    return id?.substring(0, 8);\n  }\n\n  private toDateTimeLocalString(date: Date) {\n    return (\n      date.getFullYear() +\n      \"-\" +\n      this.pad(date.getMonth() + 1) +\n      \"-\" +\n      this.pad(date.getDate()) +\n      \"T\" +\n      this.pad(date.getHours()) +\n      \":\" +\n      this.pad(date.getMinutes())\n    );\n  }\n\n  private pad(num: number) {\n    const norm = Math.floor(Math.abs(num));\n    return (norm < 10 ? \"0\" : \"\") + norm;\n  }\n}\n\nexport class EventInfo {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n}\n\nexport class EventOptions {\n  cipherInfo = true;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"@bitwarden/common/enums/htmlStorageLocation\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storageOptions\";\n\n@Injectable()\nexport class HtmlStorageService implements AbstractStorageService {\n  get defaultOptions(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Session };\n  }\n\n  get<T>(key: string, options: StorageOptions = this.defaultOptions): Promise<T> {\n    let json: string = null;\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        json = window.localStorage.getItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        json = window.sessionStorage.getItem(key);\n        break;\n    }\n\n    if (json != null) {\n      const obj = JSON.parse(json);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string, options: StorageOptions = this.defaultOptions): Promise<boolean> {\n    return (await this.get(key, options)) != null;\n  }\n\n  save(key: string, obj: any, options: StorageOptions = this.defaultOptions): Promise<any> {\n    if (obj == null) {\n      return this.remove(key, options);\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const json = JSON.stringify(obj);\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.setItem(key, json);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.setItem(key, json);\n        break;\n    }\n    return Promise.resolve();\n  }\n\n  remove(key: string, options: StorageOptions = this.defaultOptions): Promise<any> {\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.removeItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.removeItem(key);\n        break;\n    }\n    return Promise.resolve();\n  }\n}\n","import { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\n\nexport class ContainerService {\n  constructor(\n    private cryptoService: CryptoService,\n    private encryptService: AbstractEncryptService\n  ) {}\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  /**\n   * @throws Will throw if CryptoService was not instantiated and provided to the ContainerService constructor\n   */\n  getCryptoService(): CryptoService {\n    if (this.cryptoService == null) {\n      throw new Error(\"ContainerService.cryptoService not initialized.\");\n    }\n    return this.cryptoService;\n  }\n\n  /**\n   * @throws Will throw if EncryptService was not instantiated and provided to the ContainerService constructor\n   */\n  getEncryptService(): AbstractEncryptService {\n    if (this.encryptService == null) {\n      throw new Error(\"ContainerService.encryptService not initialized.\");\n    }\n    return this.encryptService;\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport { WINDOW } from \"@bitwarden/angular/services/injection-tokens\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { AbstractEncryptService } from \"@bitwarden/common/abstractions/abstractEncrypt.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService as EventLoggingServiceAbstraction } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { ContainerService } from \"@bitwarden/common/services/container.service\";\nimport { EventService as EventLoggingService } from \"@bitwarden/common/services/event.service\";\nimport { VaultTimeoutService as VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\n\nimport { I18nService } from \"./i18n.service\";\n\n@Injectable()\nexport class InitService {\n  constructor(\n    @Inject(WINDOW) private win: Window,\n    private environmentService: EnvironmentServiceAbstraction,\n    private notificationsService: NotificationsServiceAbstraction,\n    private vaultTimeoutService: VaultTimeoutServiceAbstraction,\n    private i18nService: I18nServiceAbstraction,\n    private eventLoggingService: EventLoggingServiceAbstraction,\n    private twoFactorService: TwoFactorServiceAbstraction,\n    private stateService: StateServiceAbstraction,\n    private cryptoService: CryptoServiceAbstraction,\n    private themingService: AbstractThemingService,\n    private encryptService: AbstractEncryptService\n  ) {}\n\n  init() {\n    return async () => {\n      await this.stateService.init();\n\n      const urls = process.env.URLS as Urls;\n      urls.base ??= this.win.location.origin;\n      this.environmentService.setUrls(urls);\n\n      setTimeout(() => this.notificationsService.init(), 3000);\n      (this.vaultTimeoutService as VaultTimeoutService).init(true);\n      const locale = await this.stateService.getLocale();\n      await (this.i18nService as I18nService).init(locale);\n      (this.eventLoggingService as EventLoggingService).init(true);\n      this.twoFactorService.init();\n      const htmlEl = this.win.document.documentElement;\n      htmlEl.classList.add(\"locale_\" + this.i18nService.translationLocale);\n      await this.themingService.monitorThemeChanges();\n      const containerService = new ContainerService(this.cryptoService, this.encryptService);\n      containerService.attachToGlobal(this.win);\n    };\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector } from \"@angular/core\";\nimport * as jq from \"jquery\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService as BaseModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Injectable()\nexport class ModalService extends BaseModalService {\n  el: any = null;\n  modalOpen = false;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    applicationRef: ApplicationRef,\n    injector: Injector,\n    private messagingService: MessagingService\n  ) {\n    super(componentFactoryResolver, applicationRef, injector);\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    modalRef.onCreated.pipe(first()).subscribe(() => {\n      const modals = Array.from(document.querySelectorAll(\".modal\"));\n      if (modals.length > 0) {\n        this.el = jq(modals[0]);\n        this.el.modal(\"show\");\n\n        this.el.on(\"show.bs.modal\", () => {\n          modalRef.show();\n          this.messagingService.send(\"modalShow\");\n        });\n        this.el.on(\"shown.bs.modal\", () => {\n          modalRef.shown();\n          this.messagingService.send(\"modalShown\");\n          if (!Utils.isMobileBrowser) {\n            this.el.find(\"*[appAutoFocus]\").focus();\n          }\n        });\n        this.el.on(\"hide.bs.modal\", () => {\n          this.messagingService.send(\"modalClose\");\n        });\n        this.el.on(\"hidden.bs.modal\", () => {\n          modalRef.closed();\n          this.messagingService.send(\"modalClosed\");\n        });\n      }\n    });\n\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      if (this.el != null) {\n        this.el.modal(\"hide\");\n      }\n    });\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"@bitwarden/angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"passwordConfirmation\" | i18n }}\n        </h1>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"passwordConfirmationDesc\" | i18n }}\n\n        <div class=\"form-group\">\n          <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n          <div class=\"d-flex\">\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n            <button\n              type=\"button\"\n              class=\"ml-1 btn btn-link\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\">\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"@bitwarden/angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { BasePolicy } from \"../organizations/policies/base-policy.component\";\n\nexport class PolicyListService {\n  private policies: BasePolicy[] = [];\n\n  addPolicies(policies: BasePolicy[]) {\n    this.policies.push(...policies);\n  }\n\n  getPolicies(): BasePolicy[] {\n    return this.policies;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { ActivatedRoute, NavigationEnd, Router } from \"@angular/router\";\nimport { filter } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Injectable()\nexport class RouterService {\n  private previousUrl: string = undefined;\n  private currentUrl: string = undefined;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    i18nService: I18nService\n  ) {\n    this.currentUrl = this.router.url;\n\n    router.events\n      .pipe(filter((e) => e instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => {\n        this.currentUrl = event.url;\n\n        let title = i18nService.t(\"pageTitle\", \"Bitwarden\");\n        let child = this.activatedRoute.firstChild;\n        while (child.firstChild) {\n          child = child.firstChild;\n        }\n\n        const titleId: string = child?.snapshot?.data?.titleId;\n        const rawTitle: string = child?.snapshot?.data?.title;\n        const updateUrl = !child?.snapshot?.data?.doNotSaveUrl ?? true;\n\n        if (titleId != null || rawTitle != null) {\n          const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\n          if (newTitle != null && newTitle !== \"\") {\n            title = newTitle + \" | \" + title;\n          }\n        }\n        this.titleService.setTitle(title);\n        if (updateUrl) {\n          this.setPreviousUrl(this.currentUrl);\n        }\n      });\n  }\n\n  getPreviousUrl() {\n    return this.previousUrl;\n  }\n\n  setPreviousUrl(url: string) {\n    this.previousUrl = url;\n  }\n}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"@bitwarden/common/models/domain/account\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout: number = process.env.NODE_ENV === \"development\" ? null : 15;\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport {\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n} from \"@bitwarden/angular/services/injection-tokens\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateMigrationService } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { FolderData } from \"@bitwarden/common/models/data/folderData\";\nimport { SendData } from \"@bitwarden/common/models/data/sendData\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storageOptions\";\nimport { StateService as BaseStateService } from \"@bitwarden/common/services/state.service\";\n\nimport { Account } from \"./account\";\nimport { GlobalState } from \"./global-state\";\n\n@Injectable()\nexport class StateService extends BaseStateService<GlobalState, Account> {\n  constructor(\n    storageService: AbstractStorageService,\n    @Inject(SECURE_STORAGE) secureStorageService: AbstractStorageService,\n    @Inject(MEMORY_STORAGE) memoryStorageService: AbstractStorageService,\n    logService: LogService,\n    stateMigrationService: StateMigrationService,\n    @Inject(STATE_FACTORY) stateFactory: StateFactory<GlobalState, Account>,\n    @Inject(STATE_SERVICE_USE_CACHE) useAccountCache = true\n  ) {\n    super(\n      storageService,\n      secureStorageService,\n      memoryStorageService,\n      logService,\n      stateMigrationService,\n      stateFactory,\n      useAccountCache\n    );\n  }\n\n  async addAccount(account: Account) {\n    // Apply web overrides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getRememberEmail(options?: StorageOptions) {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberEmail;\n  }\n\n  async setRememberEmail(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCiphers(options);\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCiphers(value, options);\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCollections(options);\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCollections(value, options);\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedFolders(options);\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedFolders(value, options);\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedSends(options);\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedSends(value, options);\n  }\n\n  override async getLastSync(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getLastSync(options);\n  }\n\n  override async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setLastSync(value, options);\n  }\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport class FileDownloadBuilder {\n  get blobOptions(): any {\n    const options = this._request.blobOptions ?? {};\n    if (options.type == null) {\n      options.type = this.fileType;\n    }\n    return options;\n  }\n\n  get blob(): Blob {\n    if (this.blobOptions != null) {\n      return new Blob([this._request.blobData], this.blobOptions);\n    } else {\n      return new Blob([this._request.blobData]);\n    }\n  }\n\n  get downloadMethod(): \"save\" | \"open\" {\n    if (this._request.downloadMethod != null) {\n      return this._request.downloadMethod;\n    }\n    return this.fileType != \"application/pdf\" ? \"save\" : \"open\";\n  }\n\n  private get fileType() {\n    const fileNameLower = this._request.fileName.toLowerCase();\n    if (fileNameLower.endsWith(\".pdf\")) {\n      return \"application/pdf\";\n    } else if (fileNameLower.endsWith(\".xlsx\")) {\n      return \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    } else if (fileNameLower.endsWith(\".docx\")) {\n      return \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n    } else if (fileNameLower.endsWith(\".pptx\")) {\n      return \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\n    } else if (fileNameLower.endsWith(\".csv\")) {\n      return \"text/csv\";\n    } else if (fileNameLower.endsWith(\".png\")) {\n      return \"image/png\";\n    } else if (fileNameLower.endsWith(\".jpg\") || fileNameLower.endsWith(\".jpeg\")) {\n      return \"image/jpeg\";\n    } else if (fileNameLower.endsWith(\".gif\")) {\n      return \"image/gif\";\n    }\n    return null;\n  }\n\n  constructor(private readonly _request: FileDownloadRequest) {}\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FileDownloadBuilder } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadBuilder\";\nimport { FileDownloadRequest } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadRequest\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Injectable()\nexport class WebFileDownloadService implements FileDownloadService {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  download(request: FileDownloadRequest): void {\n    const builder = new FileDownloadBuilder(request);\n    const a = window.document.createElement(\"a\");\n    if (builder.downloadMethod === \"save\") {\n      a.download = request.fileName;\n    } else if (!this.platformUtilsService.isSafari()) {\n      a.target = \"_blank\";\n    }\n    a.href = URL.createObjectURL(builder.blob);\n    a.style.position = \"fixed\";\n    window.document.body.appendChild(a);\n    a.click();\n    window.document.body.removeChild(a);\n  }\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","import { Injectable } from \"@angular/core\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ClientType } from \"@bitwarden/common/enums/clientType\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\n@Injectable()\nexport class WebPlatformUtilsService implements PlatformUtilsService {\n  private browserCache: DeviceType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.browserCache != null) {\n      return this.browserCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.browserCache = DeviceType.FirefoxBrowser;\n    } else if (navigator.userAgent.indexOf(\" OPR/\") >= 0) {\n      this.browserCache = DeviceType.OperaBrowser;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.browserCache = DeviceType.EdgeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.browserCache = DeviceType.VivaldiBrowser;\n    } else if (\n      navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n      navigator.userAgent.indexOf(\"Chrome\") === -1\n    ) {\n      this.browserCache = DeviceType.SafariBrowser;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.browserCache = DeviceType.ChromeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Trident/\") !== -1) {\n      this.browserCache = DeviceType.IEBrowser;\n    } else {\n      this.browserCache = DeviceType.UnknownBrowser;\n    }\n\n    return this.browserCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"browser\", \"\");\n  }\n\n  getClientType() {\n    return ClientType.Web;\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxBrowser;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeBrowser;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeBrowser;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaBrowser;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiBrowser;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariBrowser;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  isViewOpen(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  launchUri(uri: string, options?: any): void {\n    const a = document.createElement(\"a\");\n    a.href = uri;\n    if (options == null || !options.sameWindow) {\n      a.target = \"_blank\";\n      a.rel = \"noreferrer noopener\";\n    }\n    a.classList.add(\"d-none\");\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(process.env.APPLICATION_VERSION || \"-\");\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  async showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false\n  ) {\n    let iconClasses: string = null;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const bootstrapModal = document.querySelector(\"div.modal\");\n    if (bootstrapModal != null) {\n      bootstrapModal.removeAttribute(\"tabindex\");\n    }\n\n    const iconHtmlStr =\n      iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml: iconHtmlStr,\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      titleText: title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n    });\n\n    if (bootstrapModal != null) {\n      bootstrapModal.setAttribute(\"tabindex\", \"-1\");\n    }\n\n    return confirmed.value;\n  }\n\n  isDev(): boolean {\n    return process.env.NODE_ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return process.env.ENV.toString() === \"selfhosted\";\n  }\n\n  copyToClipboard(text: string, options?: any): void | boolean {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      let copyEl = doc.body;\n      // For some reason copy command won't work when modal is open if appending to body\n      if (doc.body.classList.contains(\"modal-open\")) {\n        copyEl = doc.body.querySelector<HTMLElement>(\".modal\");\n      }\n      copyEl.appendChild(textarea);\n      textarea.select();\n      let success = false;\n      try {\n        // Security exception may be thrown by some browsers.\n        success = doc.execCommand(\"copy\");\n        if (!success) {\n          this.logService.debug(\"Copy command unsupported or disabled.\");\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        copyEl.removeChild(textarea);\n      }\n      return success;\n    }\n  }\n\n  readFromClipboard(options?: any): Promise<string> {\n    throw new Error(\"Cannot read from clipboard on web.\");\n  }\n\n  supportsBiometric() {\n    return Promise.resolve(false);\n  }\n\n  authenticateBiometric() {\n    return Promise.resolve(false);\n  }\n\n  supportsSecureStorage() {\n    return false;\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { APP_INITIALIZER, NgModule, Optional, SkipSelf } from \"@angular/core\";\n\nimport {\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  LOCALES_DIRECTORY,\n  SYSTEM_LANGUAGE,\n  MEMORY_STORAGE,\n} from \"@bitwarden/angular/services/injection-tokens\";\nimport { JslibServicesModule } from \"@bitwarden/angular/services/jslib-services.module\";\nimport { ModalService as ModalServiceAbstraction } from \"@bitwarden/angular/services/modal.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { MemoryStorageService } from \"@bitwarden/common/services/memoryStorage.service\";\n\nimport { BroadcasterMessagingService } from \"./broadcaster-messaging.service\";\nimport { EventService } from \"./event.service\";\nimport { HtmlStorageService } from \"./html-storage.service\";\nimport { I18nService } from \"./i18n.service\";\nimport { InitService } from \"./init.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./password-reprompt.service\";\nimport { PolicyListService } from \"./policy-list.service\";\nimport { RouterService } from \"./router.service\";\nimport { Account, GlobalState, StateService } from \"./state\";\nimport { StateMigrationService } from \"./state-migration.service\";\nimport { WebFileDownloadService } from \"./web-file-download.service\";\nimport { WebPlatformUtilsService } from \"./web-platform-utils.service\";\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, JslibServicesModule],\n  providers: [\n    InitService,\n    RouterService,\n    EventService,\n    PolicyListService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (initService: InitService) => initService.init(),\n      deps: [InitService],\n      multi: true,\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: false,\n    },\n    {\n      provide: I18nServiceAbstraction,\n      useClass: I18nService,\n      deps: [SYSTEM_LANGUAGE, LOCALES_DIRECTORY],\n    },\n    { provide: AbstractStorageService, useClass: HtmlStorageService },\n    {\n      provide: SECURE_STORAGE,\n      // TODO: platformUtilsService.isDev has a helper for this, but using that service here results in a circular dependency.\n      // We have a tech debt item in the backlog to break up platformUtilsService, but in the meantime simply checking the environement here is less cumbersome.\n      useClass: process.env.NODE_ENV === \"development\" ? HtmlStorageService : MemoryStorageService,\n    },\n    {\n      provide: MEMORY_STORAGE,\n      useClass: MemoryStorageService,\n    },\n    {\n      provide: PlatformUtilsServiceAbstraction,\n      useClass: WebPlatformUtilsService,\n    },\n    { provide: MessagingServiceAbstraction, useClass: BroadcasterMessagingService },\n    { provide: ModalServiceAbstraction, useClass: ModalService },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    StateService,\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateService,\n    },\n    {\n      provide: PasswordRepromptServiceAbstraction,\n      useClass: PasswordRepromptService,\n    },\n    {\n      provide: FileDownloadService,\n      useClass: WebFileDownloadService,\n    },\n  ],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule?: CoreModule) {\n    if (parentModule) {\n      throw new Error(\"CoreModule is already loaded. Import it in the AppModule only\");\n    }\n  }\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { GlobalState as BaseGlobalState } from \"@bitwarden/common/models/domain/globalState\";\n\nexport class GlobalState extends BaseGlobalState {\n  theme?: ThemeType = ThemeType.Light;\n  rememberEmail = true;\n}\n","import { I18nService as BaseI18nService } from \"@bitwarden/common/services/i18n.service\";\n\nexport class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string, localesDirectory: string) {\n    super(systemLanguage || \"en-US\", localesDirectory, async (formattedLocale: string) => {\n      const filePath =\n        this.localesDirectory +\n        \"/\" +\n        formattedLocale +\n        \"/messages.json?cache=\" +\n        process.env.CACHE_TAG;\n      const localesResult = await fetch(filePath);\n      const locales = await localesResult.json();\n      return locales;\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"af\",\n      \"ar\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"eo\",\n      \"es\",\n      \"et\",\n      \"eu\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-PT\",\n      \"pt-BR\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n}\n","import { Observable, ReplaySubject } from \"rxjs\";\n\nimport { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  private _locale = new ReplaySubject<string>(1);\n  locale$: Observable<string> = this._locale.asObservable();\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"ar\", \"العربية الفصحى\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"eu\", \"euskara\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.translationLocale = locale != null ? locale : this.systemLanguage;\n    this._locale.next(this.translationLocale);\n\n    try {\n      this.collator = new Intl.Collator(this.translationLocale, {\n        numeric: true,\n        sensitivity: \"base\",\n      });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1);\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2);\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3);\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { StateMigrationService as BaseStateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\n\nimport { Account } from \"./state/account\";\nimport { GlobalState } from \"./state/global-state\";\n\nexport class StateMigrationService extends BaseStateMigrationService<GlobalState, Account> {\n  protected async migrationStateFrom1To2(): Promise<void> {\n    await super.migrateStateFrom1To2();\n    const globals = (await this.get<GlobalState>(\"global\")) ?? this.stateFactory.createGlobal(null);\n    globals.rememberEmail = (await this.get<boolean>(\"rememberEmail\")) ?? globals.rememberEmail;\n    await this.set(\"global\", globals);\n  }\n}\n","// required to avoid linting errors when there are no flags\n/* eslint-disable @typescript-eslint/ban-types */\nexport type SharedFlags = {};\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable @typescript-eslint/ban-types */\nexport type SharedDevFlags = {};\n\nfunction getFlags<T>(envFlags: string | T): T {\n  if (typeof envFlags === \"string\") {\n    return JSON.parse(envFlags) as T;\n  } else {\n    return envFlags as T;\n  }\n}\n\n/**\n * Gets the value of a feature flag from environment.\n * All flags default to \"on\" (true).\n * Only use for shared code in `libs`, otherwise use the client-specific function.\n * @param flag The name of the feature flag to check\n * @returns The value of the flag\n */\nexport function flagEnabled<Flags extends SharedFlags>(flag: keyof Flags): boolean {\n  const flags = getFlags<Flags>(process.env.FLAGS);\n  return flags[flag] == null || !!flags[flag];\n}\n\n/**\n * Gets the value of a dev flag from environment.\n * Will always return false unless in development.\n * Only use for shared code in `libs`, otherwise use the client-specific function.\n * @param flag The name of the dev flag to check\n * @returns The value of the flag\n */\nexport function devFlagEnabled<DevFlags extends SharedDevFlags>(flag: keyof DevFlags): boolean {\n  if (process.env.ENV !== \"development\") {\n    return false;\n  }\n\n  const devFlags = getFlags<DevFlags>(process.env.DEV_FLAGS);\n  return devFlags[flag] == null || !!devFlags[flag];\n}\n\n/**\n * Gets the value of a dev flag from environment.\n * Will always return false unless in development.\n * @param flag The name of the dev flag to check\n * @returns The value of the flag\n * @throws Error if the flag is not enabled\n */\nexport function devFlagValue<DevFlags extends SharedDevFlags>(\n  flag: keyof DevFlags\n): DevFlags[keyof DevFlags] {\n  if (!devFlagEnabled(flag)) {\n    throw new Error(`This method should not be called, it is protected by a disabled dev flag.`);\n  }\n\n  const devFlags = getFlags<DevFlags>(process.env.DEV_FLAGS);\n  return devFlags[flag];\n}\n","import {\n  flagEnabled as baseFlagEnabled,\n  devFlagEnabled as baseDevFlagEnabled,\n  devFlagValue as baseDevFlagValue,\n  SharedFlags,\n  SharedDevFlags,\n} from \"@bitwarden/common/misc/flags\";\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport type Flags = {\n  showTrial?: boolean;\n  showPasswordless?: boolean;\n} & SharedFlags;\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport type DevFlags = {} & SharedDevFlags;\n\nexport function flagEnabled(flag: keyof Flags): boolean {\n  return baseFlagEnabled<Flags>(flag);\n}\n\nexport function devFlagEnabled(flag: keyof DevFlags) {\n  return baseDevFlagEnabled<DevFlags>(flag);\n}\n\nexport function devFlagValue(flag: keyof DevFlags) {\n  return baseDevFlagValue(flag);\n}\n","export class EmergencyAccessAcceptRequest {\n  token: string;\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Directive()\nexport abstract class BaseAcceptComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  actionPromise: Promise<any>;\n\n  protected requiredParameters: string[] = [];\n  protected failedShortMessage = \"inviteAcceptFailedShort\";\n  protected failedMessage = \"inviteAcceptFailed\";\n\n  constructor(\n    protected router: Router,\n    protected platformUtilService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService\n  ) {}\n\n  abstract authedHandler(qParams: Params): Promise<void>;\n  abstract unauthedHandler(qParams: Params): Promise<void>;\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      let error = this.requiredParameters.some((e) => qParams?.[e] == null || qParams[e] === \"\");\n      let errorMessage: string = null;\n      if (!error) {\n        this.authed = await this.stateService.getIsAuthenticated();\n\n        if (this.authed) {\n          try {\n            await this.authedHandler(qParams);\n          } catch (e) {\n            error = true;\n            errorMessage = e.message;\n          }\n        } else {\n          this.email = qParams.email;\n          await this.unauthedHandler(qParams);\n        }\n      }\n\n      if (error) {\n        const message =\n          errorMessage != null\n            ? this.i18nService.t(this.failedShortMessage, errorMessage)\n            : this.i18nService.t(this.failedMessage);\n        this.platformUtilService.showToast(\"error\", null, message, { timeout: 10000 });\n        this.router.navigate([\"/\"]);\n      }\n\n      this.loading = false;\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"emergencyAccess\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ name }}\n          </p>\n          <p>{{ \"acceptEmergencyAccess\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessAcceptRequest } from \"@bitwarden/common/models/request/emergencyAccessAcceptRequest\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-emergency\",\n  templateUrl: \"accept-emergency.component.html\",\n})\nexport class AcceptEmergencyComponent extends BaseAcceptComponent {\n  name: string;\n\n  protected requiredParameters: string[] = [\"id\", \"name\", \"email\", \"token\"];\n  protected failedShortMessage = \"emergencyInviteAcceptFailedShort\";\n  protected failedMessage = \"emergencyInviteAcceptFailed\";\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    const request = new EmergencyAccessAcceptRequest();\n    request.token = qParams.token;\n    this.actionPromise = this.apiService.postEmergencyAccessAccept(qParams.id, request);\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"emergencyInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    this.name = qParams.name;\n    if (this.name != null) {\n      // Fix URL encoding of space issue with Angular\n      this.name = this.name.replace(/\\+/g, \" \");\n    }\n  }\n}\n","export class OrganizationUserAcceptRequest {\n  token: string;\n  // Used to auto-enroll in master password reset\n  resetPasswordKey: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img src=\"../../images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinOrganization\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ orgName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinOrganizationDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { OrganizationUserAcceptRequest } from \"@bitwarden/common/models/request/organizationUserAcceptRequest\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-organization\",\n  templateUrl: \"accept-organization.component.html\",\n})\nexport class AcceptOrganizationComponent extends BaseAcceptComponent {\n  orgName: string;\n\n  protected requiredParameters: string[] = [\"organizationId\", \"organizationUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService,\n    private cryptoService: CryptoService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    this.actionPromise = this.prepareAcceptRequest(qParams).then(async (request) => {\n      await this.apiService.postOrganizationUserAccept(\n        qParams.organizationId,\n        qParams.organizationUserId,\n        request\n      );\n    });\n\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"inviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    this.orgName = qParams.organizationName;\n    if (this.orgName != null) {\n      // Fix URL encoding of space issue with Angular\n      this.orgName = this.orgName.replace(/\\+/g, \" \");\n    }\n    await this.stateService.setOrganizationInvitation(qParams);\n  }\n\n  private async prepareAcceptRequest(qParams: Params): Promise<OrganizationUserAcceptRequest> {\n    const request = new OrganizationUserAcceptRequest();\n    request.token = qParams.token;\n\n    if (await this.performResetPasswordAutoEnroll(qParams)) {\n      const response = await this.organizationApiService.getKeys(qParams.organizationId);\n\n      if (response == null) {\n        throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n      }\n\n      const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n      // RSA Encrypt user's encKey.key with organization public key\n      const encKey = await this.cryptoService.getEncKey();\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Add reset password key to accept request\n      request.resetPasswordKey = encryptedKey.encryptedString;\n    }\n    return request;\n  }\n\n  private async performResetPasswordAutoEnroll(qParams: Params): Promise<boolean> {\n    let policyList: Policy[] = null;\n    try {\n      const policies = await this.policyApiService.getPoliciesByToken(\n        qParams.organizationId,\n        qParams.token,\n        qParams.email,\n        qParams.organizationUserId\n      );\n      policyList = this.policyService.mapPoliciesFromToken(policies);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (policyList != null) {\n      const result = this.policyService.getResetPasswordPolicyOptions(\n        policyList,\n        qParams.organizationId\n      );\n      // Return true if policy enabled and auto-enroll enabled\n      return result[1] && result[0].autoEnrollEnabled;\n    }\n\n    return false;\n  }\n}\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"@bitwarden/angular/components/hint.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService);\n  }\n}\n","import { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PasswordHintRequest } from \"@bitwarden/common/models/request/passwordHintRequest\";\n\nexport class HintComponent {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"passwordHint\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n            <small class=\"form-text text-muted\">{{ \"enterEmailToGetHint\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subject } from \"rxjs\";\nimport { concatMap, take, takeUntil } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"@bitwarden/common/enums/keySuffixOptions\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\n\n@Directive()\nexport class LockComponent implements OnInit, OnDestroy {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    this.stateService.activeAccount$\n      .pipe(\n        concatMap(async () => {\n          await this.load();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async submit() {\n    if (this.pinLock) {\n      return await this.handlePinRequiredUnlock();\n    }\n\n    await this.handleMasterPasswordRequiredUnlock();\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async handlePinRequiredUnlock() {\n    if (this.pin == null || this.pin === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n\n    return await this.doUnlockWithPin();\n  }\n\n  private async doUnlockWithPin() {\n    let failed = true;\n    try {\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      if (this.pinSet[0]) {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations,\n          await this.stateService.getDecryptedPinProtected()\n        );\n        const encKey = await this.cryptoService.getEncKey(key);\n        const protectedPin = await this.stateService.getProtectedPin();\n        const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n        failed = decPin !== this.pin;\n        if (!failed) {\n          await this.setKeyAndContinue(key);\n        }\n      } else {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations\n        );\n        failed = false;\n        await this.setKeyAndContinue(key);\n      }\n    } catch {\n      failed = true;\n    }\n\n    if (failed) {\n      this.invalidPinAttempts++;\n      if (this.invalidPinAttempts >= 5) {\n        this.messagingService.send(\"logout\");\n        return;\n      }\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidPin\")\n      );\n    }\n  }\n\n  private async handleMasterPasswordRequiredUnlock() {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return;\n    }\n    await this.doUnlockWithMasterPassword();\n  }\n\n  private async doUnlockWithMasterPassword() {\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      kdf,\n      kdfIterations\n    );\n    const storedKeyHash = await this.cryptoService.getKeyHash();\n\n    let passwordValid = false;\n\n    if (storedKeyHash != null) {\n      passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n    } else {\n      const request = new SecretVerificationRequest();\n      const serverKeyHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      request.masterPasswordHash = serverKeyHash;\n      try {\n        this.formPromise = this.apiService.postAccountVerifyPassword(request);\n        await this.formPromise;\n        passwordValid = true;\n        const localKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.LocalAuthorization\n        );\n        await this.cryptoService.setKeyHash(localKeyHash);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (!passwordValid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    if (this.pinSet[0]) {\n      const protectedPin = await this.stateService.getProtectedPin();\n      const encKey = await this.cryptoService.getEncKey(key);\n      const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n      const pinKey = await this.cryptoService.makePinKey(decPin, this.email, kdf, kdfIterations);\n      await this.stateService.setDecryptedPinProtected(\n        await this.cryptoService.encrypt(key.key, pinKey)\n      );\n    }\n    await this.setKeyAndContinue(key);\n  }\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutSettingsService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LockComponent as BaseLockComponent } from \"@bitwarden/angular/components/lock.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\n\nimport { RouterService } from \"../core\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    environmentService: EnvironmentService,\n    private routerService: RouterService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      vaultTimeoutSettingsService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.onSuccessfulSubmit = async () => {\n      const previousUrl = this.routerService.getPreviousUrl();\n      if (previousUrl && previousUrl !== \"/\" && previousUrl.indexOf(\"lock\") === -1) {\n        this.successRoute = previousUrl;\n      }\n      this.router.navigateByUrl(this.successRoute);\n    };\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"text-center mb-4\">\n        <i class=\"bwi bwi-lock bwi-4x text-muted\" aria-hidden=\"true\"></i>\n      </p>\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"yourVaultIsLocked\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appAutofocus\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"text-muted form-text\">\n              {{ \"loggedInAsEmailOn\" | i18n: email:webVaultHostname }}\n            </small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-unlock\" aria-hidden=\"true\"></i> {{ \"unlock\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","export enum AuthRequestType {\n  AuthenticateAndUnlock = 0,\n  Unlock = 1,\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"@bitwarden/common/misc/captcha_iframe\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import { AuthenticationType } from \"../../enums/authenticationType\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../request/identityToken/tokenRequestTwoFactor\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class ApiLogInCredentials {\n  readonly type = AuthenticationType.Api;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n\nexport class PasswordlessLogInCredentials {\n  readonly type = AuthenticationType.Passwordless;\n\n  constructor(\n    public email: string,\n    public accessCode: string,\n    public authRequestId: string,\n    public decKey: SymmetricCryptoKey,\n    public localPasswordHash: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n","import { AuthRequestType } from \"../../enums/authRequestType\";\n\nexport class PasswordlessCreateAuthRequest {\n  constructor(\n    readonly email: string,\n    readonly deviceIdentifier: string,\n    readonly publicKey: string,\n    readonly type: AuthRequestType,\n    readonly accessCode: string,\n    readonly fingerprintPhrase: string\n  ) {}\n}\n","<div\n  class=\"tw-mx-auto tw-mt-5 tw-flex tw-max-w-lg tw-flex-col tw-items-center tw-justify-center tw-p-8\"\n>\n  <div>\n    <img class=\"logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"tw-mx-4 tw-mt-3 tw-mb-4 tw-text-center tw-text-xl\">\n      {{ \"loginOrCreateNewAccount\" | i18n }}\n    </p>\n\n    <div\n      class=\"tw-mt-3 tw-rounded-md tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-6\"\n    >\n      <h2 class=\"tw-mb-6 tw-text-xl tw-font-semibold\">{{ \"logInInitiated\" | i18n }}</h2>\n\n      <div class=\"tw-text-light\">\n        <p class=\"tw-mb-6\">{{ \"notificationSentDevice\" | i18n }}</p>\n\n        <p class=\"tw-mb-6\">\n          {{ \"fingerprintMatchInfo\" | i18n }}\n        </p>\n      </div>\n\n      <div class=\"tw-mb-6\">\n        <h4 class=\"tw-font-semibold\">{{ \"fingerprintPhraseHeader\" | i18n }}</h4>\n        <p>\n          <code>{{ passwordlessRequest?.fingerprintPhrase }}</code>\n        </p>\n      </div>\n\n      <div class=\"tw-my-10\" *ngIf=\"showResendNotification\">\n        <a [routerLink]=\"[]\" disabled=\"true\" (click)=\"startPasswordlessLogin()\">{{\n          \"resendNotification\" | i18n\n        }}</a>\n      </div>\n\n      <hr />\n\n      <div class=\"tw-text-light tw-mt-3\">\n        {{ \"loginWithDeviceEnabledInfo\" | i18n }}\n        <a routerLink=\"/login\">{{ \"viewAllLoginOptions\" | i18n }}</a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { CaptchaProtectedComponent } from \"@bitwarden/angular/components/captchaProtected.component\";\nimport { AnonymousHubService } from \"@bitwarden/common/abstractions/anonymousHub.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AuthRequestType } from \"@bitwarden/common/enums/authRequestType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { PasswordlessLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { PasswordlessCreateAuthRequest } from \"@bitwarden/common/models/request/passwordlessCreateAuthRequest\";\nimport { AuthRequestResponse } from \"@bitwarden/common/models/response/authRequestResponse\";\n\n@Component({\n  selector: \"app-login-with-device\",\n  templateUrl: \"login-with-device.component.html\",\n})\nexport class LoginWithDeviceComponent\n  extends CaptchaProtectedComponent\n  implements OnInit, OnDestroy\n{\n  private destroy$ = new Subject<void>();\n  email: string;\n  showResendNotification = false;\n  passwordlessRequest: PasswordlessCreateAuthRequest;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  private authRequestKeyPair: [publicKey: ArrayBuffer, privateKey: ArrayBuffer];\n\n  constructor(\n    private router: Router,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private appIdService: AppIdService,\n    private passwordGenerationService: PasswordGenerationService,\n    private apiService: ApiService,\n    private authService: AuthService,\n    private logService: LogService,\n    private stateService: StateService,\n    environmentService: EnvironmentService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private anonymousHubService: AnonymousHubService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n\n    const navigation = this.router.getCurrentNavigation();\n    if (navigation) {\n      this.email = navigation.extras?.state?.email;\n    }\n\n    //gets signalR push notification\n    this.authService\n      .getPushNotifcationObs$()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((id) => {\n        this.confirmResponse(id);\n      });\n  }\n\n  async ngOnInit() {\n    if (!this.email) {\n      this.router.navigate([\"/login\"]);\n      return;\n    }\n\n    this.startPasswordlessLogin();\n  }\n\n  async startPasswordlessLogin() {\n    this.showResendNotification = false;\n\n    try {\n      await this.buildAuthRequest();\n      const reqResponse = await this.apiService.postAuthRequest(this.passwordlessRequest);\n\n      if (reqResponse.id) {\n        this.anonymousHubService.createHubConnection(reqResponse.id);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    setTimeout(() => {\n      this.showResendNotification = true;\n    }, 12000);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.anonymousHubService.stopHubConnection();\n  }\n\n  private async confirmResponse(requestId: string) {\n    try {\n      const response = await this.apiService.getAuthResponse(\n        requestId,\n        this.passwordlessRequest.accessCode\n      );\n\n      if (!response.requestApproved) {\n        return;\n      }\n\n      const credentials = await this.buildLoginCredntials(requestId, response);\n      const loginResponse = await this.authService.logIn(credentials);\n\n      if (loginResponse.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (loginResponse.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (error) {\n      this.logService.error(error);\n    }\n  }\n\n  private async buildAuthRequest() {\n    this.authRequestKeyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const fingerprint = await (\n      await this.cryptoService.getFingerprint(this.email, this.authRequestKeyPair[0])\n    ).join(\"-\");\n    const deviceIdentifier = await this.appIdService.getAppId();\n    const publicKey = Utils.fromBufferToB64(this.authRequestKeyPair[0]);\n    const accessCode = await this.passwordGenerationService.generatePassword({ length: 25 });\n\n    this.passwordlessRequest = new PasswordlessCreateAuthRequest(\n      this.email,\n      deviceIdentifier,\n      publicKey,\n      AuthRequestType.AuthenticateAndUnlock,\n      accessCode,\n      fingerprint\n    );\n  }\n\n  private async buildLoginCredntials(\n    requestId: string,\n    response: AuthRequestResponse\n  ): Promise<PasswordlessLogInCredentials> {\n    const decKey = await this.cryptoService.rsaDecrypt(response.key, this.authRequestKeyPair[1]);\n    const decMasterPasswordHash = await this.cryptoService.rsaDecrypt(\n      response.masterPasswordHash,\n      this.authRequestKeyPair[1]\n    );\n    const key = new SymmetricCryptoKey(decKey);\n    const localHashedPassword = Utils.fromBufferToUtf8(decMasterPasswordHash);\n\n    return new PasswordlessLogInCredentials(\n      this.email,\n      this.passwordlessRequest.accessCode,\n      requestId,\n      key,\n      localHashedPassword\n    );\n  }\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n  selfHosted = false;\n\n  formGroup = this.formBuilder.group({\n    email: [\"\", [Validators.required, Validators.email]],\n    masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n    rememberEmail: [true],\n  });\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected alwaysRememberEmail = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone,\n    protected formBuilder: FormBuilder,\n    protected formValidationErrorService: FormValidationErrorsService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  get selfHostedDomain() {\n    return this.environmentService.hasBaseUrl() ? this.environmentService.getWebVaultUrl() : null;\n  }\n\n  async ngOnInit() {\n    let email = this.formGroup.value.email;\n    if (email == null || email === \"\") {\n      email = await this.stateService.getRememberedEmail();\n      this.formGroup.get(\"email\")?.setValue(email);\n\n      if (email == null) {\n        this.formGroup.get(\"email\")?.setValue(\"\");\n      }\n    }\n    if (!this.alwaysRememberEmail) {\n      const rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n      this.formGroup.get(\"rememberEmail\")?.setValue(rememberEmail);\n    }\n  }\n\n  async submit(showToast = true) {\n    const data = this.formGroup.value;\n\n    await this.setupCaptcha();\n\n    this.formGroup.markAllAsTouched();\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return;\n    }\n\n    //desktop, browser; This should be removed once all clients use reactive forms\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        data.email,\n        data.masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (data.rememberEmail || this.alwaysRememberEmail) {\n        await this.stateService.setRememberedEmail(data.email);\n      } else {\n        await this.stateService.setRememberedEmail(null);\n      }\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  protected focusInput() {\n    const email = this.formGroup.value.email;\n    document.getElementById(email == null || email === \"\" ? \"email\" : \"masterPassword\").focus();\n  }\n}\n","<div\n  class=\"tw-mb-4 tw-box-border tw-rounded tw-border tw-border-l-8 tw-border-solid tw-border-secondary-300 tw-bg-background-alt tw-py-3 tw-px-5 tw-leading-5 tw-text-main\"\n  [ngClass]=\"calloutClass\"\n>\n  <h3\n    class=\"tw-mt-0 tw-mb-2 tw-text-base tw-font-bold tw-uppercase\"\n    [ngClass]=\"headerClass\"\n    *ngIf=\"title\"\n  >\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\ntype CalloutTypes = \"success\" | \"info\" | \"warning\" | \"danger\";\n\nconst defaultIcon: Record<CalloutTypes, string> = {\n  success: \"bwi-check\",\n  info: \"bwi-info-circle\",\n  warning: \"bwi-exclamation-triangle\",\n  danger: \"bwi-error\",\n};\n\nconst defaultI18n: Partial<Record<CalloutTypes, string>> = {\n  warning: \"warning\",\n  danger: \"error\",\n};\n\n@Component({\n  selector: \"bit-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type: CalloutTypes = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() useAlertRole = false;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.icon ??= defaultIcon[this.type];\n    if (this.title == null && defaultI18n[this.type] != null) {\n      this.title = this.i18nService.t(defaultI18n[this.type]);\n    }\n  }\n\n  get calloutClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"tw-border-l-danger-500\";\n      case \"info\":\n        return \"tw-border-l-info-500\";\n      case \"success\":\n        return \"tw-border-l-success-500\";\n      case \"warning\":\n        return \"tw-border-l-warning-500\";\n    }\n  }\n\n  get headerClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"!tw-text-danger\";\n      case \"info\":\n        return \"!tw-text-info\";\n      case \"success\":\n        return \"!tw-text-success\";\n      case \"warning\":\n        return \"!tw-text-warning\";\n    }\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"tw-container tw-mx-auto\"\n  [formGroup]=\"formGroup\"\n>\n  <div\n    class=\"tw-mx-auto tw-mt-5 tw-flex tw-max-w-lg tw-flex-col tw-items-center tw-justify-center tw-p-8\"\n  >\n    <div>\n      <img class=\"logo logo-themed\" alt=\"Bitwarden\" />\n      <p class=\"tw-mx-4 tw-mt-3 tw-mb-4 tw-text-center tw-text-xl\">\n        {{ \"loginOrCreateNewAccount\" | i18n }}\n      </p>\n      <div\n        class=\"tw-mt-3 tw-rounded-md tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-6\"\n      >\n        <bit-callout\n          type=\"warning\"\n          title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n          *ngIf=\"showResetPasswordAutoEnrollWarning\"\n        >\n          {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n        </bit-callout>\n\n        <div class=\"tw-mb-3\">\n          <bit-form-field>\n            <bit-label>{{ \"emailAddress\" | i18n }}</bit-label>\n            <input id=\"login_input_email\" bitInput type=\"email\" formControlName=\"email\" />\n          </bit-form-field>\n        </div>\n\n        <div class=\"tw-mb-3\">\n          <bit-form-field>\n            <bit-label>{{ \"masterPass\" | i18n }}</bit-label>\n            <input\n              id=\"login_input_master-password\"\n              bitInput\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              formControlName=\"masterPassword\"\n            />\n            <button type=\"button\" bitSuffix bitButton (click)=\"togglePassword()\">\n              <i\n                aria-hidden=\"true\"\n                class=\"bwi bwi-lg bwi-eye\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n            <bit-hint>\n              <a routerLink=\"/hint\">{{ \"getMasterPasswordHint\" | i18n }}</a>\n            </bit-hint>\n          </bit-form-field>\n        </div>\n\n        <div class=\"tw-mb-3 tw-flex tw-items-start\">\n          <div class=\"tw-flex tw-h-6 tw-items-center\">\n            <input\n              id=\"login_input_remember-email\"\n              class=\"tw-w-4 tw-rounded tw-border\"\n              bitInput\n              type=\"checkbox\"\n              formControlName=\"rememberEmail\"\n            />\n          </div>\n          <bit-label class=\"ml-2\">\n            {{ \"rememberEmail\" | i18n }}\n          </bit-label>\n        </div>\n\n        <hr />\n\n        <div [hidden]=\"!showCaptcha()\">\n          <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n        </div>\n\n        <div class=\"tw-mb-3 tw-flex tw-space-x-4\">\n          <button\n            bitButton\n            buttonType=\"primary\"\n            type=\"submit\"\n            [block]=\"true\"\n            [loading]=\"form.loading\"\n            [disabled]=\"form.loading\"\n          >\n            <span> <i class=\"bwi bwi-sign-in\"></i> {{ \"logIn\" | i18n }} </span>\n          </button>\n\n          <a bitButton buttonType=\"secondary\" routerLink=\"/register\" [block]=\"true\">\n            <i class=\"bwi bwi-pencil-square\"></i>\n            {{ \"createAccount\" | i18n }}\n          </a>\n        </div>\n\n        <div class=\"tw-mb-3\" *ngIf=\"!selfHosted && showPasswordless\">\n          <button\n            bitButton\n            type=\"button\"\n            buttonType=\"secondary\"\n            class=\"tw-w-full\"\n            (click)=\"startPasswordlessLogin()\"\n            [disabled]=\"form.loading\"\n          >\n            <span> <i class=\"bwi bwi-mobile\"></i> {{ \"loginWithDevice\" | i18n }} </span>\n          </button>\n        </div>\n\n        <div class=\"tw-mb-3\">\n          <a routerLink=\"/sso\" bitButton buttonType=\"secondary\" class=\"tw-w-full\">\n            <i class=\"bwi bwi-provider tw-mr-2\"></i>\n            {{ \"enterpriseSingleSignOn\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nimport { LoginComponent as BaseLoginComponent } from \"@bitwarden/angular/components/login.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nimport { flagEnabled } from \"../../../utils/flags\";\nimport { RouterService, StateService } from \"../../core\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent implements OnInit, OnDestroy {\n  showResetPasswordAutoEnrollWarning = false;\n  enforcedPasswordPolicyOptions: MasterPasswordPolicyOptions;\n  policies: ListResponse<PolicyResponse>;\n  showPasswordless = false;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    private route: ActivatedRoute,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: InternalPolicyService,\n    logService: LogService,\n    ngZone: NgZone,\n    protected stateService: StateService,\n    private messagingService: MessagingService,\n    private routerService: RouterService,\n    formBuilder: FormBuilder,\n    formValidationErrorService: FormValidationErrorsService\n  ) {\n    super(\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone,\n      formBuilder,\n      formValidationErrorService\n    );\n    this.onSuccessfulLogin = async () => {\n      this.messagingService.send(\"setFullWidth\");\n    };\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n    this.showPasswordless = flagEnabled(\"showPasswordless\");\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.formGroup.get(\"email\")?.setValue(qParams.email);\n      }\n      if (qParams.premium != null) {\n        this.routerService.setPreviousUrl(\"/settings/premium\");\n      } else if (qParams.org != null) {\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n          queryParams: { token: qParams.sponsorshipToken },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      await super.ngOnInit();\n      const rememberEmail = await this.stateService.getRememberEmail();\n      this.formGroup.get(\"rememberEmail\")?.setValue(rememberEmail);\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      let policyList: Policy[] = null;\n      try {\n        this.policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        policyList = this.policyService.mapPoliciesFromToken(this.policies);\n      } catch (e) {\n        this.logService.error(e);\n      }\n\n      if (policyList != null) {\n        const resetPasswordPolicy = this.policyService.getResetPasswordPolicyOptions(\n          policyList,\n          invite.organizationId\n        );\n        // Set to true if policy enabled and auto-enroll enabled\n        this.showResetPasswordAutoEnrollWarning =\n          resetPasswordPolicy[1] && resetPasswordPolicy[0].autoEnrollEnabled;\n\n        this.policyService\n          .masterPasswordPolicyOptions$(policyList)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((enforcedPasswordPolicyOptions) => {\n            this.enforcedPasswordPolicyOptions = enforcedPasswordPolicyOptions;\n          });\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async goAfterLogIn() {\n    const masterPassword = this.formGroup.value.masterPassword;\n\n    // Check master password against policy\n    if (this.enforcedPasswordPolicyOptions != null) {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      const masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n\n      // If invalid, save policies and require update\n      if (\n        !this.policyService.evaluateMasterPassword(\n          masterPasswordScore,\n          masterPassword,\n          this.enforcedPasswordPolicyOptions\n        )\n      ) {\n        const policiesData: { [id: string]: PolicyData } = {};\n        this.policies.data.map((p) => (policiesData[p.id] = new PolicyData(p)));\n        await this.policyService.replace(policiesData);\n        this.router.navigate([\"update-password\"]);\n        return;\n      }\n    }\n\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  async submit() {\n    const rememberEmail = this.formGroup.value.rememberEmail;\n\n    await this.stateService.setRememberEmail(rememberEmail);\n    if (!rememberEmail) {\n      await this.stateService.setRememberedEmail(null);\n    }\n    await super.submit(false);\n  }\n\n  async startPasswordlessLogin() {\n    this.formGroup.get(\"masterPassword\")?.clearValidators();\n    this.formGroup.get(\"masterPassword\")?.updateValueAndValidity();\n\n    if (!this.formGroup.valid) {\n      return;\n    }\n\n    const email = this.formGroup.get(\"email\").value;\n    this.router.navigate([\"/login-with-device\"], { state: { email: email } });\n  }\n\n  private getPasswordStrengthUserInput() {\n    const email = this.formGroup.value.email;\n    let userInput: string[] = [];\n    const atPosition = email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","export class DeleteRecoverRequest {\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { DeleteRecoverRequest } from \"@bitwarden/common/models/request/deleteRecoverRequest\";\n\n@Component({\n  selector: \"app-recover-delete\",\n  templateUrl: \"recover-delete.component.html\",\n})\nexport class RecoverDeleteComponent {\n  email: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new DeleteRecoverRequest();\n      request.email = this.email.trim().toLowerCase();\n      this.formPromise = this.apiService.postAccountRecoverDelete(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deleteRecoverEmailSent\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>{{ \"deleteRecoverDesc\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorRecoveryRequest extends SecretVerificationRequest {\n  recoveryCode: string;\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorRecoveryRequest } from \"@bitwarden/common/models/request/twoFactorRecoveryRequest\";\n\n@Component({\n  selector: \"app-recover-two-factor\",\n  templateUrl: \"recover-two-factor.component.html\",\n})\nexport class RecoverTwoFactorComponent {\n  email: string;\n  masterPassword: string;\n  recoveryCode: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new TwoFactorRecoveryRequest();\n      request.recoveryCode = this.recoveryCode.replace(/\\s/g, \"\").toLowerCase();\n      request.email = this.email.trim().toLowerCase();\n      const key = await this.authService.makePreloginKey(this.masterPassword, request.email);\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n      this.formPromise = this.apiService.postTwoFactorRecover(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"twoStepRecoverDisabled\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"recoverAccountTwoStep\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>\n            {{ \"recoverAccountTwoStepDesc\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/lost-two-step-device/\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              >{{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"password\"\n              name=\"MasterPassword\"\n              class=\"form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"recoveryCode\">{{ \"recoveryCodeTitle\" | i18n }}</label>\n            <input\n              id=\"recoveryCode\"\n              class=\"text-monospace form-control\"\n              type=\"text\"\n              name=\"RecoveryCode\"\n              [(ngModel)]=\"recoveryCode\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captchaProtectedRequest\";\nimport { KeysRequest } from \"./keysRequest\";\nimport { ReferenceEventRequest } from \"./referenceEventRequest\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { AbstractControl, UntypedFormGroup, ValidatorFn } from \"@angular/forms\";\n\nimport { FormGroupControls } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\n\nexport class InputsFieldMatch {\n  //check to ensure two fields do not have the same value\n  static validateInputsDoesntMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? {\n              inputsMatchError: {\n                message: errorMessage,\n              },\n            }\n          : null;\n      }\n\n      return null;\n    };\n  }\n\n  //check to ensure two fields have the same value\n  static validateInputsMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? null\n          : {\n              inputsDoesntMatchError: {\n                message: errorMessage,\n              },\n            };\n      }\n\n      return null;\n    };\n  }\n\n  //checks the formGroup if two fields have the same value and validation is controlled from either field\n  static validateFormInputsMatch(field: string, fieldMatchTo: string, errorMessage: string) {\n    return (formGroup: UntypedFormGroup) => {\n      const fieldCtrl = formGroup.controls[field];\n      const fieldMatchToCtrl = formGroup.controls[fieldMatchTo];\n\n      if (fieldCtrl.value !== fieldMatchToCtrl.value) {\n        fieldMatchToCtrl.setErrors({\n          inputsDoesntMatchError: {\n            message: errorMessage,\n          },\n        });\n      } else {\n        fieldMatchToCtrl.setErrors(null);\n      }\n    };\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { AbstractControl, UntypedFormBuilder, ValidatorFn, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keysRequest\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\nimport { RegisterRequest } from \"@bitwarden/common/models/request/registerRequest\";\nimport { RegisterResponse } from \"@bitwarden/common/models/response/authentication/registerResponse\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\nimport { InputsFieldMatch } from \"../validators/inputsFieldMatch.validator\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() isInTrialFlow = false;\n  @Output() createdAccount = new EventEmitter<string>();\n\n  showPassword = false;\n  formPromise: Promise<RegisterResponse>;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  showErrorSummary = false;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  formGroup = this.formBuilder.group(\n    {\n      email: [\"\", [Validators.required, Validators.email]],\n      name: [\"\"],\n      masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      confirmMasterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      hint: [\n        null,\n        [\n          InputsFieldMatch.validateInputsDoesntMatch(\n            \"masterPassword\",\n            this.i18nService.t(\"hintEqualsPassword\")\n          ),\n        ],\n      ],\n      acceptPolicies: [false, [this.acceptPoliciesValidation()]],\n    },\n    {\n      validator: InputsFieldMatch.validateFormInputsMatch(\n        \"masterPassword\",\n        \"confirmMasterPassword\",\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      ),\n    }\n  );\n\n  protected successRoute = \"login\";\n\n  protected accountCreated = false;\n\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected formBuilder: UntypedFormBuilder,\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  async submit(showToast = true) {\n    let email = this.formGroup.value.email;\n    email = email.trim().toLowerCase();\n    let name = this.formGroup.value.name;\n    name = name === \"\" ? null : name; // Why do we do this?\n    const masterPassword = this.formGroup.value.masterPassword;\n    try {\n      if (!this.accountCreated) {\n        const registerResponse = await this.registerAccount(\n          await this.buildRegisterRequest(email, masterPassword, name),\n          showToast\n        );\n        if (!registerResponse.successful) {\n          return;\n        }\n        this.captchaBypassToken = registerResponse.captchaBypassToken;\n        this.accountCreated = true;\n      }\n      if (this.isInTrialFlow) {\n        if (!this.accountCreated) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"trialAccountCreated\")\n          );\n        }\n        const loginResponse = await this.logIn(email, masterPassword, this.captchaBypassToken);\n        if (loginResponse.captchaRequired) {\n          return;\n        }\n        this.createdAccount.emit(this.formGroup.value.email);\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"newAccountCreated\")\n        );\n        this.router.navigate([this.successRoute], { queryParams: { email: email } });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        case \"inputsDoesntMatchError\":\n          return this.i18nService.t(\"masterPassDoesntMatch\");\n        case \"inputsMatchError\":\n          return this.i18nService.t(\"hintEqualsPassword\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  //validation would be ignored on selfhosted\n  private acceptPoliciesValidation(): ValidatorFn {\n    return (control: AbstractControl) => {\n      const ctrlValue = control.value;\n\n      return !ctrlValue && this.showTerms ? { required: true } : null;\n    };\n  }\n\n  private async validateRegistration(showToast: boolean): Promise<{ isValid: boolean }> {\n    this.formGroup.markAllAsTouched();\n    this.showErrorSummary = true;\n\n    if (this.formGroup.get(\"acceptPolicies\").hasError(\"required\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesRequired\")\n      );\n      return { isValid: false };\n    }\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return { isValid: false };\n    }\n\n    //desktop, browser\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return { isValid: false };\n    }\n\n    if (this.passwordStrengthResult != null && this.passwordStrengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return { isValid: false };\n      }\n    }\n    return { isValid: true };\n  }\n\n  private async buildRegisterRequest(\n    email: string,\n    masterPassword: string,\n    name: string\n  ): Promise<RegisterRequest> {\n    const hint = this.formGroup.value.hint;\n    const kdf = DEFAULT_KDF_TYPE;\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      email,\n      name,\n      hashedPassword,\n      hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n    return request;\n  }\n\n  private async registerAccount(\n    request: RegisterRequest,\n    showToast: boolean\n  ): Promise<{ successful: boolean; captchaBypassToken?: string }> {\n    if (!(await this.validateRegistration(showToast)).isValid) {\n      return { successful: false };\n    }\n    this.formPromise = this.apiService.postRegister(request);\n    try {\n      const response = await this.formPromise;\n      return { successful: true, captchaBypassToken: response.captchaBypassToken };\n    } catch (e) {\n      if (this.handleCaptchaRequired(e)) {\n        return { successful: false };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  private async logIn(\n    email: string,\n    masterPassword: string,\n    captchaBypassToken: string\n  ): Promise<{ captchaRequired: boolean }> {\n    const credentials = new PasswordLogInCredentials(\n      email,\n      masterPassword,\n      captchaBypassToken,\n      null\n    );\n    const loginResponse = await this.authService.logIn(credentials);\n    if (this.handleCaptchaRequired(loginResponse)) {\n      return { captchaRequired: true };\n    }\n    return { captchaRequired: false };\n  }\n}\n","export class ReferenceEventRequest {\n  id: string;\n  layout: string;\n  flow: string;\n}\n","<div class=\"progress\">\n  <div\n    class=\"progress-bar {{ color }}\"\n    role=\"progressbar\"\n    [ngStyle]=\"{ width: scoreWidth + '%' }\"\n    attr.aria-valuenow=\"{{ scoreWidth }}\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n  >\n    <ng-container *ngIf=\"showText && text\">\n      {{ text }}\n    </ng-container>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\n\nexport interface PasswordColorText {\n  color: string;\n  text: string;\n}\n\n@Component({\n  selector: \"app-password-strength\",\n  templateUrl: \"password-strength.component.html\",\n})\nexport class PasswordStrengthComponent implements OnChanges {\n  @Input() showText = false;\n  @Input() email: string;\n  @Input() name: string;\n  @Input() set password(value: string) {\n    this.updatePasswordStrength(value);\n  }\n  @Output() passwordStrengthResult = new EventEmitter<any>();\n  @Output() passwordScoreColor = new EventEmitter<PasswordColorText>();\n\n  masterPasswordScore: number;\n  scoreWidth = 0;\n  color = \"bg-danger\";\n  text: string;\n\n  private masterPasswordStrengthTimeout: any;\n\n  //used by desktop and browser to display strength text color\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  //used by desktop and browser to display strength text\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  constructor(\n    private i18nService: I18nService,\n    private passwordGenerationService: PasswordGenerationService\n  ) {}\n\n  ngOnChanges(): void {\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      this.scoreWidth = this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n\n      switch (this.masterPasswordScore) {\n        case 4:\n          this.color = \"bg-success\";\n          this.text = this.i18nService.t(\"strong\");\n          break;\n        case 3:\n          this.color = \"bg-primary\";\n          this.text = this.i18nService.t(\"good\");\n          break;\n        case 2:\n          this.color = \"bg-warning\";\n          this.text = this.i18nService.t(\"weak\");\n          break;\n        default:\n          this.color = \"bg-danger\";\n          this.text = this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n          break;\n      }\n\n      this.setPasswordScoreText(this.color, this.text);\n    }, 300);\n  }\n\n  updatePasswordStrength(password: string) {\n    const masterPassword = password;\n\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    this.passwordStrengthResult.emit(strengthResult);\n    this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n  }\n\n  getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const email = this.email;\n    const name = this.name;\n    const atPosition = email?.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (name != null && name !== \"\") {\n      userInput = userInput.concat(name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n\n  setPasswordScoreText(color: string, text: string) {\n    color = color.slice(3);\n    this.passwordScoreColor.emit({ color: color, text: text });\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { AbstractControl, UntypedFormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"bit-error-summary\",\n  template: ` <ng-container *ngIf=\"errorCount > 0\">\n    <i class=\"bwi bwi-error\"></i> {{ \"fieldsNeedAttention\" | i18n: errorString }}\n  </ng-container>`,\n  host: {\n    class: \"tw-block tw-text-danger tw-mt-2\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorSummary {\n  @Input()\n  formGroup: UntypedFormGroup;\n\n  get errorCount(): number {\n    return this.getErrorCount(this.formGroup);\n  }\n\n  get errorString() {\n    return this.errorCount.toString();\n  }\n\n  private getErrorCount(form: UntypedFormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof UntypedFormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"tw-container tw-mx-auto\"\n  [formGroup]=\"formGroup\"\n>\n  <div>\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"emailAddress\" | i18n }}</bit-label>\n        <input id=\"register-form_input_email\" bitInput type=\"email\" formControlName=\"email\" />\n        <bit-hint>{{ \"emailAddressDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"name\" | i18n }}</bit-label>\n        <input id=\"register-form_input_name\" bitInput type=\"text\" formControlName=\"name\" />\n        <bit-hint>{{ \"yourNameDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <app-callout\n        type=\"info\"\n        [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n        *ngIf=\"enforcedPolicyOptions\"\n      >\n      </app-callout>\n      <bit-form-field>\n        <bit-label>{{ \"masterPass\" | i18n }}</bit-label>\n        <input\n          id=\"register-form_input_master-password\"\n          bitInput\n          type=\"{{ showPassword ? 'text' : 'password' }}\"\n          formControlName=\"masterPassword\"\n        />\n        <button type=\"button\" bitSuffix bitButton (click)=\"togglePassword()\">\n          <i\n            aria-hidden=\"true\"\n            class=\"bwi bwi-lg bwi-eye\"\n            [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n          ></i>\n        </button>\n        <bit-hint>\n          <span class=\"tw-font-semibold\">Important:</span>\n          {{ \"masterPassImportant\" | i18n }}\n        </bit-hint>\n      </bit-form-field>\n      <app-password-strength\n        [password]=\"formGroup.get('masterPassword')?.value\"\n        [email]=\"formGroup.get('email')?.value\"\n        [name]=\"formGroup.get('name')?.value\"\n        [showText]=\"true\"\n        (passwordStrengthResult)=\"getStrengthResult($event)\"\n      >\n      </app-password-strength>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"reTypeMasterPass\" | i18n }}</bit-label>\n        <input\n          id=\"register-form_input_confirm-master-password\"\n          bitInput\n          type=\"{{ showPassword ? 'text' : 'password' }}\"\n          formControlName=\"confirmMasterPassword\"\n        />\n        <button type=\"button\" bitSuffix bitButton (click)=\"togglePassword()\">\n          <i\n            aria-hidden=\"true\"\n            class=\"bwi bwi-lg bwi-eye\"\n            [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n          ></i>\n        </button>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"masterPassHint\" | i18n }}</bit-label>\n        <input id=\"register-form_input_hint\" bitInput type=\"text\" formControlName=\"hint\" />\n        <bit-hint>{{ \"masterPassHintDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div [hidden]=\"!showCaptcha()\">\n      <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n    </div>\n\n    <div class=\"tw-mb-3 tw-flex tw-items-start\" *ngIf=\"showTerms\">\n      <div class=\"tw-flex tw-h-6 tw-items-center\">\n        <input\n          id=\"register-form_input_accept-policies\"\n          class=\"tw-border-gray-300 tw-w-4 tw-rounded tw-border\"\n          bitInput\n          type=\"checkbox\"\n          formControlName=\"acceptPolicies\"\n        />\n      </div>\n      <bit-label class=\"ml-2\">\n        {{ \"acceptPolicies\" | i18n }}<br />\n        <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n          \"termsOfService\" | i18n\n        }}</a\n        >,\n        <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n          \"privacyPolicy\" | i18n\n        }}</a>\n      </bit-label>\n    </div>\n\n    <div class=\"tw-mb-3 tw-flex\">\n      <ng-container *ngIf=\"!accountCreated\">\n        <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n          {{ \"createAccount\" | i18n }}\n        </button>\n        <a\n          bitButton\n          buttonType=\"secondary\"\n          routerLink=\"/login\"\n          class=\"tw-ml-3 tw-inline-flex tw-items-center tw-px-3\"\n        >\n          <i class=\"bwi bwi-sign-in tw-mr-2\"></i>\n          {{ \"logIn\" | i18n }}\n        </a>\n      </ng-container>\n      <ng-container *ngIf=\"accountCreated\">\n        <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n          {{ \"logIn\" | i18n }}\n        </button>\n      </ng-container>\n    </div>\n    <bit-error-summary *ngIf=\"showErrorSummary\" [formGroup]=\"formGroup\"></bit-error-summary>\n  </div>\n</form>\n","import { Component, Input } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\n\n@Component({\n  selector: \"app-register-form\",\n  templateUrl: \"./register-form.component.html\",\n})\nexport class RegisterFormComponent extends BaseRegisterComponent {\n  @Input() queryParamEmail: string;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() referenceDataValue: ReferenceEventRequest;\n\n  showErrorSummary = false;\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: UntypedFormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.referenceData = this.referenceDataValue;\n\n    if (this.queryParamEmail) {\n      this.formGroup.get(\"email\")?.setValue(this.queryParamEmail);\n    }\n  }\n\n  async submit() {\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.passwordStrengthResult.score,\n        this.formGroup.value.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    await super.submit(false);\n  }\n}\n","<div class=\"layout\" [ngClass]=\"['layout', layout]\">\n  <!-- TEAMS 1 Header -->\n  <header\n    class=\"header\"\n    *ngIf=\"\n      layout === 'default' ||\n      layout === 'teams' ||\n      layout === 'teams1' ||\n      layout === 'teams2' ||\n      layout === 'enterprise' ||\n      layout === 'enterprise1' ||\n      layout === 'enterprise2' ||\n      layout === 'cnetcmpgnent' ||\n      layout === 'cnetcmpgnteams' ||\n      layout === 'cnetcmpgnind'\n    \"\n  >\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-7\">\n          <img\n            alt=\"Bitwarden\"\n            class=\"logo mb-2\"\n            src=\"../../images/register-layout/logo-horizontal-white.svg\"\n          />\n        </div>\n      </div>\n    </div>\n  </header>\n\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-7\" *ngIf=\"layout\">\n        <div class=\"mt-5\">\n          <!-- Default Body -->\n          <div\n            *ngIf=\"\n              layout === 'teams' ||\n              layout === 'enterprise' ||\n              layout === 'enterprise1' ||\n              layout === 'default'\n            \"\n          >\n            <h1>The Bitwarden Password Manager</h1>\n            <h2>\n              Trusted by millions of individuals, teams, and organizations worldwide for secure\n              password storage and sharing.\n            </h2>\n            <p>Store logins, secure notes, and more</p>\n            <p>Collaborate and share securely</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- Teams & Enterprise Body -->\n          <div *ngIf=\"layout === 'teams1' || layout === 'teams2' || layout === 'enterprise2'\">\n            <h1>\n              Start Your <span *ngIf=\"layout === 'teams1' || layout === 'teams1'\">Teams<br /></span\n              ><span *ngIf=\"layout === 'enterprise2'\">Enterprise</span> Free Trial Now\n            </h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Collaborate and share securely</p>\n            <p>Deploy and manage quickly and easily</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- CNET Campaign Teams & Enterprise Body -->\n          <div *ngIf=\"layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnent'\">\n            <h1>\n              Start Your <span *ngIf=\"layout === 'cnetcmpgnteams'\">Teams<br /></span\n              ><span *ngIf=\"layout === 'cnetcmpgnent'\">Enterprise</span> Free Trial Now\n            </h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Collaborate and share securely</p>\n            <p>Deploy and manage quickly and easily</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- CNET Campaign Premium Body -->\n          <div *ngIf=\"layout === 'cnetcmpgnind'\">\n            <h1>Start Your Premium Account Now</h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Store logins, secure notes, and more</p>\n            <p>Secure your account with advanced two-step login</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n        </div>\n      </div>\n      <div [ngClass]=\"{ 'col-5': layout, 'col-12': !layout }\">\n        <div class=\"row justify-content-md-center mt-5\">\n          <div [ngClass]=\"{ 'col-5': !layout, 'col-12': layout }\">\n            <h1 class=\"lead text-center mb-4\" *ngIf=\"!layout\">{{ \"createAccount\" | i18n }}</h1>\n            <div class=\"card d-block\">\n              <div class=\"card-body\">\n                <app-callout\n                  title=\"{{ 'createOrganizationStep1' | i18n }}\"\n                  type=\"info\"\n                  icon=\"bwi bwi-thumb-tack\"\n                  *ngIf=\"showCreateOrgMessage\"\n                >\n                  {{ \"createOrganizationCreatePersonalAccount\" | i18n }}\n                </app-callout>\n                <app-register-form\n                  [queryParamEmail]=\"email\"\n                  [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n                  [referenceDataValue]=\"referenceData\"\n                ></app-register-form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-7 d-flex align-items-center\">\n        <div\n          *ngIf=\"\n            layout === 'cnetcmpgnent' || layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnind'\n          \"\n        >\n          <figure>\n            <figcaption>\n              <cite>\n                <img\n                  src=\"../../images/register-layout/cnet-logo.svg\"\n                  class=\"w-25 d-block mx-auto\"\n                  alt=\"cnet logo\"\n                />\n              </cite>\n            </figcaption>\n            <blockquote class=\"mx-auto text-center px-4\">\n              \"No more excuses; start using Bitwarden today. The identity you save could be your\n              own. The money definitely will be.\"\n            </blockquote>\n          </figure>\n        </div>\n\n        <div\n          *ngIf=\"\n            layout === 'teams' ||\n            layout === 'teams1' ||\n            layout === 'teams2' ||\n            layout === 'enterprise' ||\n            layout === 'enterprise1' ||\n            layout === 'enterprise2' ||\n            layout === 'default'\n          \"\n        >\n          <figure>\n            <figcaption>\n              <cite>\n                <img\n                  src=\"../../images/register-layout/forbes-logo.svg\"\n                  class=\"w-25 d-block mx-auto\"\n                  alt=\"Forbes Logo\"\n                />\n              </cite>\n            </figcaption>\n            <blockquote class=\"mx-auto text-center px-4\">\n              “Bitwarden boasts the backing of some of the world's best security experts and an\n              attractive, easy-to-use interface”\n            </blockquote>\n          </figure>\n        </div>\n      </div>\n      <div\n        *ngIf=\"\n          layout === 'cnetcmpgnent' || layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnind'\n        \"\n        class=\"col-5 d-flex align-items-center justify-content-center\"\n      >\n        <img\n          src=\"../../images/register-layout/usnews-360-badge.svg\"\n          class=\"w-50 d-block\"\n          alt=\"US News 360 Reviews Best Password Manager\"\n        />\n      </div>\n      <div\n        *ngIf=\"\n          layout === 'teams' ||\n          layout === 'teams1' ||\n          layout === 'teams2' ||\n          layout === 'enterprise' ||\n          layout === 'enterprise1' ||\n          layout === 'enterprise2' ||\n          layout === 'default'\n        \"\n        class=\"col-5 d-flex align-items-center justify-content-center\"\n      >\n        <img\n          src=\"../../images/register-layout/usnews-360-badge.svg\"\n          class=\"w-50 d-block\"\n          alt=\"US News 360 Reviews Best Password Manager\"\n        />\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\n\nimport { RouterService } from \"../core\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"register.component.html\",\n})\nexport class RegisterComponent extends BaseRegisterComponent implements OnInit, OnDestroy {\n  email = \"\";\n  showCreateOrgMessage = false;\n  layout = \"\";\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n  private policies: Policy[];\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: UntypedFormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    environmentService: EnvironmentService,\n    logService: LogService,\n    private routerService: RouterService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      this.referenceData = new ReferenceEventRequest();\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n      if (qParams.premium != null) {\n        this.routerService.setPreviousUrl(\"/settings/premium\");\n      } else if (qParams.org != null) {\n        this.showCreateOrgMessage = true;\n        this.referenceData.flow = qParams.org;\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      if (qParams.layout != null) {\n        this.layout = this.referenceData.layout = qParams.layout;\n      }\n      if (qParams.reference != null) {\n        this.referenceData.id = qParams.reference;\n      } else {\n        this.referenceData.id = (\"; \" + document.cookie)\n          .split(\"; reference=\")\n          .pop()\n          .split(\";\")\n          .shift();\n      }\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        // After logging in redirect them to setup the families sponsorship\n        const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n          queryParams: { plan: qParams.sponsorshipToken },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      if (this.referenceData.id === \"\") {\n        this.referenceData.id = null;\n      }\n    });\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      try {\n        const policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        if (policies.data != null) {\n          const policiesData = policies.data.map((p) => new PolicyData(p));\n          this.policies = policiesData.map((p) => new Policy(p));\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (this.policies != null) {\n      this.policyService\n        .masterPasswordPolicyOptions$(this.policies)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((enforcedPasswordPolicyOptions) => {\n          this.enforcedPolicyOptions = enforcedPasswordPolicyOptions;\n        });\n    }\n\n    await super.ngOnInit();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<void | boolean>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.organizationApiService.leave(this.organization.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"removeMasterPassword\" | i18n }}</p>\n      <hr />\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-block\"\n            (click)=\"convert()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"continuing\"\n            ></i>\n            {{ \"removeMasterPassword\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-block\"\n            (click)=\"leave()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"leaving\"\n            ></i>\n            {{ \"leaveOrganization\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"@bitwarden/angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class OrganizationUserResetPasswordEnrollmentRequest extends SecretVerificationRequest {\n  resetPasswordKey: string;\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keysRequest\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit, OnDestroy {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  protected destroy$ = new Subject<void>();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.policyService\n      .masterPasswordPolicyOptions$()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (enforcedPasswordPolicyOptions) =>\n          (this.enforcedPolicyOptions ??= enforcedPasswordPolicyOptions)\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordMinlength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordStrengthResult;\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keysRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { SetPasswordRequest } from \"@bitwarden/common/models/request/setPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.organizationApiService.getAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyApiService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = DEFAULT_KDF_TYPE;\n    this.kdfIterations = DEFAULT_KDF_ITERATIONS;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.organizationApiService.getKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.masterPasswordHash = masterPasswordHash;\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.apiService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body text-center\" *ngIf=\"syncLoading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!syncLoading\">\n          <app-callout type=\"info\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"resetPasswordAutoEnroll\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength\n                  [password]=\"masterPassword\"\n                  [email]=\"email\"\n                  [showText]=\"true\"\n                  (passwordStrengthResult)=\"getStrengthResult($event)\"\n                >\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n            <small class=\"form-text text-muted\">{{ \"masterPassDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"@bitwarden/angular/components/set-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyApiService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService,\n      organizationApiService\n    );\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { SsoLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\nimport { SsoPreValidateResponse } from \"@bitwarden/common/models/response/ssoPreValidateResponse\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<SsoPreValidateResponse>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return;\n    }\n\n    this.initiateSsoFormPromise = this.apiService.preValidateSso(this.identifier);\n    const response = await this.initiateSsoFormPromise;\n\n    const authorizeUrl = await this.buildAuthorizeUrl(\n      returnUri,\n      includeUserIdentifier,\n      response.token\n    );\n    this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean,\n    token?: string\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier) +\n      \"&ssoToken=\" +\n      encodeURIComponent(token);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n\n      // TODO: Key Connector Service should pass this error message to the logout callback instead of displaying here\n      if (e.message === \"Key Connector error\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorError\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","export enum PlanType {\n  Free = 0,\n  FamiliesAnnually2019 = 1,\n  TeamsMonthly2019 = 2,\n  TeamsAnnually2019 = 3,\n  EnterpriseMonthly2019 = 4,\n  EnterpriseAnnually2019 = 5,\n  Custom = 6,\n  FamiliesAnnually = 7,\n  TeamsMonthly = 8,\n  TeamsAnnually = 9,\n  EnterpriseMonthly = 10,\n  EnterpriseAnnually = 11,\n}\n","export enum ProductType {\n  Free = 0,\n  Families = 1,\n  Teams = 2,\n  Enterprise = 3,\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  class=\"container\"\n  [appApiAction]=\"initiateSsoFormPromise\"\n  ngNativeValidate\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"logo mb-2 logo-themed\" alt=\"Bitwarden\" />\n      <div class=\"card d-block mt-4\">\n        <div class=\"card-body\" *ngIf=\"loggingIn\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loggingIn\">\n          <p>{{ \"ssoLogInWithOrgIdentifier\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"identifier\">{{ \"organizationIdentifier\" | i18n }}</label>\n            <input\n              id=\"identifier\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Identifier\"\n              [(ngModel)]=\"identifier\"\n              required\n              appAutofocus\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SsoComponent as BaseSsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      } else {\n        const storedIdentifier = await this.stateService.getSsoOrgIdentifier();\n        if (storedIdentifier != null) {\n          this.identifier = storedIdentifier;\n        }\n      }\n    });\n  }\n\n  async submit() {\n    await this.stateService.setSsoOrganizationIdentifier(this.identifier);\n    if (this.clientId === \"browser\") {\n      document.cookie = `ssoHandOffMessage=${this.i18nService.t(\"ssoHandOff\")};SameSite=strict`;\n    }\n    super.submit();\n  }\n}\n","<ng-template>\n  <div\n    class=\"tw-inline-block tw-w-11/12 tw-pl-7\"\n    [ngClass]=\"{ 'tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300': applyBorder }\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { CdkStep } from \"@angular/cdk/stepper\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-vertical-step\",\n  templateUrl: \"vertical-step.component.html\",\n  providers: [{ provide: CdkStep, useExisting: VerticalStep }],\n})\nexport class VerticalStep extends CdkStep {\n  @Input() subLabel = \"\";\n  @Input() applyBorder = true;\n}\n","<div class=\"tw-m-2.5 tw-h-16 tw-text-center\">\n  <button\n    (click)=\"selectStep()\"\n    [disabled]=\"disabled\"\n    class=\"tw-flex tw-w-full tw-items-center tw-border-none tw-bg-transparent\"\n    [ngClass]=\"{\n      'hover:tw-bg-secondary-100': !disabled && step.editable\n    }\"\n    [attr.aria-expanded]=\"selected\"\n  >\n    <span\n      class=\"tw-mr-3.5 tw-w-9 tw-rounded-full tw-font-bold tw-leading-9\"\n      *ngIf=\"!step.completed\"\n      [ngClass]=\"{\n        'tw-bg-primary-500 tw-text-contrast': selected,\n        'tw-bg-secondary-300 tw-text-main': !selected && !disabled && step.editable,\n        'tw-bg-transparent tw-text-muted': disabled\n      }\"\n    >\n      {{ stepNumber }}\n    </span>\n    <span\n      class=\"tw-mr-3.5 tw-w-9 tw-rounded-full tw-bg-primary-500 tw-font-bold tw-leading-9 tw-text-contrast\"\n      *ngIf=\"step.completed\"\n    >\n      <i class=\"bwi bwi-fw bwi-check tw-p-1\" aria-hidden=\"true\"></i>\n    </span>\n    <div\n      class=\"tw-txt-main tw-mt-3.5 tw-h-12 tw-text-left tw-leading-snug\"\n      [ngClass]=\"{\n        'tw-font-bold': selected\n      }\"\n    >\n      <p\n        class=\"main-label text tw-mb-1 tw-text-main\"\n        [ngClass]=\"{\n          'tw-mt-1': !step.subLabel\n        }\"\n      >\n        {{ step.label }}\n      </p>\n      <p class=\"sub-label small tw-text-muted\">{{ step.subLabel }}</p>\n    </div>\n  </button>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { VerticalStep } from \"./vertical-step.component\";\n\n@Component({\n  selector: \"app-vertical-step-content\",\n  templateUrl: \"vertical-step-content.component.html\",\n})\nexport class VerticalStepContentComponent {\n  @Output() onSelectStep = new EventEmitter<void>();\n\n  @Input() disabled = false;\n  @Input() selected = false;\n  @Input() step: VerticalStep;\n  @Input() stepNumber: number;\n\n  selectStep() {\n    this.onSelectStep.emit();\n  }\n}\n","<div>\n  <ul class=\"tw-flex tw-list-none tw-flex-col tw-flex-wrap tw-p-5\">\n    <li *ngFor=\"let step of steps; let i = index; let isLast = last\">\n      <app-vertical-step-content\n        [disabled]=\"isStepDisabled(i)\"\n        [selected]=\"selectedIndex === i\"\n        [step]=\"step\"\n        [stepNumber]=\"i + 1\"\n        (onSelectStep)=\"selectStepByIndex(i)\"\n      ></app-vertical-step-content>\n      <div\n        class=\"tw-inline-block tw-pl-7\"\n        *ngIf=\"selectedIndex === i\"\n        [ngTemplateOutlet]=\"selected ? selected.content : null\"\n      ></div>\n      <div\n        class=\"tw-ml-8 tw-h-6 tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300\"\n        *ngIf=\"!isLast && !(selectedIndex === i)\"\n      ></div>\n    </li>\n  </ul>\n</div>\n","import { CdkStepper } from \"@angular/cdk/stepper\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-vertical-stepper\",\n  templateUrl: \"vertical-stepper.component.html\",\n  providers: [{ provide: CdkStepper, useExisting: VerticalStepperComponent }],\n})\nexport class VerticalStepperComponent extends CdkStepper {\n  @Input()\n  activeClass = \"active\";\n\n  isNextButtonHidden() {\n    return !(this.steps.length === this.selectedIndex + 1);\n  }\n\n  isStepDisabled(index: number) {\n    if (this.selectedIndex !== index) {\n      return this.selectedIndex === index - 1\n        ? !this.steps.find((_, i) => i == index - 1)?.completed\n        : true;\n    }\n    return false;\n  }\n\n  selectStepByIndex(index: number): void {\n    this.selectedIndex = index;\n  }\n}\n","<form #form [formGroup]=\"formGroup\" *ngIf=\"nameOnly\">\n  <bit-form-field>\n    <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"name\" />\n  </bit-form-field>\n</form>\n<form #form [formGroup]=\"formGroup\" *ngIf=\"!nameOnly\">\n  <h2>{{ \"generalInformation\" | i18n }}</h2>\n  <div class=\"tw-flex tw-w-full tw-space-x-4\" *ngIf=\"createOrganization\">\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n      <input bitInput type=\"text\" formControlName=\"name\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"billingEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"billingEmail\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\" *ngIf=\"isProvider\">\n      <bit-label>{{ \"clientOwnerEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"clientOwnerEmail\" />\n    </bit-form-field>\n  </div>\n  <div *ngIf=\"!isProvider && !acceptingSponsorship\">\n    <input\n      type=\"checkbox\"\n      name=\"businessOwned\"\n      formControlName=\"businessOwned\"\n      (change)=\"changedBusinessOwned.emit()\"\n    />\n    <bit-label for=\"businessOwned\" class=\"tw-mb-3\">{{ \"accountOwnedBusiness\" | i18n }}</bit-label>\n    <div class=\"tw-mt-4\" *ngIf=\"formGroup.controls['businessOwned'].value\">\n      <bit-form-field class=\"tw-w-1/2\">\n        <bit-label>{{ \"businessName\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"businessName\" />\n      </bit-form-field>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UntypedFormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-org-info\",\n  templateUrl: \"organization-information.component.html\",\n})\nexport class OrganizationInformationComponent {\n  @Input() nameOnly = false;\n  @Input() createOrganization = true;\n  @Input() isProvider = false;\n  @Input() acceptingSponsorship = false;\n  @Input() formGroup: UntypedFormGroup;\n  @Output() changedBusinessOwned = new EventEmitter<void>();\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-forbes\",\n  templateUrl: \"logo-forbes.component.html\",\n})\nexport class LogoForbesComponent {}\n","<figure>\n  <figcaption>\n    <cite>\n      <img\n        src=\"../../images/register-layout/forbes-logo.svg\"\n        class=\"tw-mx-auto tw-block tw-w-40\"\n        alt=\"Forbes Logo\"\n      />\n    </cite>\n  </figcaption>\n  <blockquote class=\"tw-mx-auto tw-mt-2 tw-max-w-xl tw-px-4 tw-text-center\">\n    “Bitwarden boasts the backing of some of the world's best security experts and an attractive,\n    easy-to-use interface”\n  </blockquote>\n</figure>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-us-news\",\n  templateUrl: \"logo-us-news.component.html\",\n})\nexport class LogoUSNewsComponent {}\n","<img\n  src=\"../../images/register-layout/usnews-360-badge.svg\"\n  class=\"tw-mx-auto tw-block tw-w-48\"\n  alt=\"US News 360 Reviews Best Password Manager\"\n/>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise-content\",\n  templateUrl: \"enterprise-content.component.html\",\n})\nexport class EnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams-content\",\n  templateUrl: \"teams-content.component.html\",\n})\nexport class TeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-trial-confirmation-details\",\n  templateUrl: \"confirmation-details.component.html\",\n})\nexport class ConfirmationDetailsComponent {\n  @Input() email: string;\n  @Input() orgLabel: string;\n}\n","export enum PaymentMethodType {\n  Card = 0,\n  BankAccount = 1,\n  PayPal = 2,\n  BitPay = 3,\n  Credit = 4,\n  WireTransfer = 5,\n  AppleInApp = 6,\n  GoogleInApp = 7,\n  Check = 8,\n}\n","<div class=\"tw-pl-6 tw-pb-6\">\n  <p class=\"tw-text-xl\">{{ \"trialThankYou\" | i18n: orgLabel }}</p>\n  <ul class=\"tw-list-disc\">\n    <li>\n      <p>\n        {{ \"trialConfirmationEmail\" | i18n }}\n        <span class=\"tw-font-bold\">{{ email }}</span\n        >.\n      </p>\n    </li>\n    <li>\n      <p>\n        {{ \"trialPaidInfoMessage\" | i18n: orgLabel }}\n      </p>\n    </li>\n  </ul>\n</div>\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationCreateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  planType: PlanType;\n  key: string;\n  keys: OrganizationKeysRequest;\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n  additionalSeats: number;\n  maxAutoscaleSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  collectionName: string;\n  taxIdNumber: string;\n  billingAddressLine1: string;\n  billingAddressLine2: string;\n  billingAddressCity: string;\n  billingAddressState: string;\n  billingAddressPostalCode: string;\n  billingAddressCountry: string;\n}\n","import { KeysRequest } from \"./keysRequest\";\n\nexport class OrganizationKeysRequest extends KeysRequest {\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    super(publicKey, encryptedPrivateKey);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationUpgradeRequest {\n  businessName: string;\n  planType: PlanType;\n  additionalSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  billingAddressCountry: string;\n  billingAddressPostalCode: string;\n  keys: OrganizationKeysRequest;\n}\n","import { OrganizationCreateRequest } from \"../organizationCreateRequest\";\n\nexport class ProviderOrganizationCreateRequest {\n  constructor(\n    public clientOwnerEmail: string,\n    public organizationCreateRequest: OrganizationCreateRequest\n  ) {}\n}\n","<div class=\"mb-4 text-lg\" *ngIf=\"showOptions && showMethods\">\n  <div class=\"form-check form-check-inline mr-4\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-card\"\n      [value]=\"paymentMethodType.Card\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-card\">\n      <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i> {{ \"creditCard\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline mr-4\" *ngIf=\"!hideBank\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-bank\"\n      [value]=\"paymentMethodType.BankAccount\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-bank\">\n      <i class=\"bwi bwi-fw bwi-bank\" aria-hidden=\"true\"></i> {{ \"bankAccount\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hidePaypal\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-paypal\"\n      [value]=\"paymentMethodType.PayPal\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-paypal\">\n      <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hideCredit\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-credit\"\n      [value]=\"paymentMethodType.Credit\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-credit\">\n      <i class=\"bwi bwi-fw bwi-dollar\" aria-hidden=\"true\"></i> {{ \"accountCredit\" | i18n }}</label\n    >\n  </div>\n</div>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Card\">\n  <div class=\"row\">\n    <div [ngClass]=\"trialFlow ? 'col-5' : 'col-4'\" class=\"form-group\">\n      <label for=\"stripe-card-number-element\">{{ \"number\" | i18n }}</label>\n      <div id=\"stripe-card-number-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div *ngIf=\"!trialFlow\" class=\"form-group col-8 d-flex align-items-end\">\n      <img\n        src=\"../../images/cards.png\"\n        alt=\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\"\n        width=\"323\"\n        height=\"32\"\n      />\n    </div>\n    <div [ngClass]=\"trialFlow ? 'col-3' : 'col-4'\" class=\"form-group\">\n      <label for=\"stripe-card-expiry-element\">{{ \"expiration\" | i18n }}</label>\n      <div id=\"stripe-card-expiry-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div class=\"form-group col-4\">\n      <div class=\"d-flex\">\n        <label for=\"stripe-card-cvc-element\">\n          {{ \"securityCode\" | i18n }}\n        </label>\n        <a\n          href=\"https://www.cvvnumber.com/cvv.html\"\n          tabindex=\"-1\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          class=\"ml-auto\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n      <div id=\"stripe-card-cvc-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.BankAccount\">\n  <app-callout type=\"warning\" title=\"{{ 'verifyBankAccount' | i18n }}\">\n    {{ \"verifyBankAccountInitialDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"routing_number\">{{ \"routingNumber\" | i18n }}</label>\n      <input\n        id=\"routing_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"routing_number\"\n        [(ngModel)]=\"bank.routing_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_number\">{{ \"accountNumber\" | i18n }}</label>\n      <input\n        id=\"account_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_number\"\n        [(ngModel)]=\"bank.account_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_name\">{{ \"accountHolderName\" | i18n }}</label>\n      <input\n        id=\"account_holder_name\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_holder_name\"\n        [(ngModel)]=\"bank.account_holder_name\"\n        required\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_type\">{{ \"bankAccountType\" | i18n }}</label>\n      <select\n        id=\"account_holder_type\"\n        class=\"form-control\"\n        name=\"account_holder_type\"\n        [(ngModel)]=\"bank.account_holder_type\"\n        required\n      >\n        <option value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option value=\"company\">{{ \"bankAccountTypeCompany\" | i18n }}</option>\n        <option value=\"individual\">{{ \"bankAccountTypeIndividual\" | i18n }}</option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.PayPal\">\n  <div class=\"mb-3\">\n    <div id=\"bt-dropin-container\" class=\"mb-1\"></div>\n    <small class=\"text-muted\">{{ \"paypalClickSubmit\" | i18n }}</small>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Credit\">\n  <app-callout type=\"note\">\n    {{ \"makeSureEnoughCredit\" | i18n }}\n  </app-callout>\n</ng-container>\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport ThemeVariables from \"../../scss/export.module.scss\";\n\nconst lightInputColor = ThemeVariables.lightInputColor;\nconst lightInputPlaceholderColor = ThemeVariables.lightInputPlaceholderColor;\nconst darkInputColor = ThemeVariables.darkInputColor;\nconst darkInputPlaceholderColor = ThemeVariables.darkInputPlaceholderColor;\n\n@Component({\n  selector: \"app-payment\",\n  templateUrl: \"payment.component.html\",\n})\nexport class PaymentComponent implements OnInit, OnDestroy {\n  @Input() showMethods = true;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.Card;\n  @Input() hideBank = false;\n  @Input() hidePaypal = false;\n  @Input() hideCredit = false;\n  @Input() trialFlow = false;\n\n  private destroy$ = new Subject<void>();\n\n  bank: any = {\n    routing_number: null,\n    account_number: null,\n    account_holder_name: null,\n    account_holder_type: \"\",\n    currency: \"USD\",\n    country: \"US\",\n  };\n\n  paymentMethodType = PaymentMethodType;\n\n  private btScript: HTMLScriptElement;\n  private btInstance: any = null;\n  private stripeScript: HTMLScriptElement;\n  private stripe: any = null;\n  private stripeElements: any = null;\n  private stripeCardNumberElement: any = null;\n  private stripeCardExpiryElement: any = null;\n  private stripeCardCvcElement: any = null;\n  private StripeElementStyle: any;\n  private StripeElementClasses: any;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private themingService: AbstractThemingService\n  ) {\n    this.stripeScript = window.document.createElement(\"script\");\n    this.stripeScript.src = \"https://js.stripe.com/v3/\";\n    this.stripeScript.async = true;\n    this.stripeScript.onload = () => {\n      this.stripe = (window as any).Stripe(process.env.STRIPE_KEY);\n      this.stripeElements = this.stripe.elements();\n      this.setStripeElement();\n    };\n    this.btScript = window.document.createElement(\"script\");\n    this.btScript.src = `scripts/dropin.js?cache=${process.env.CACHE_TAG}`;\n    this.btScript.async = true;\n    this.StripeElementStyle = {\n      base: {\n        color: null,\n        fontFamily:\n          '\"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, ' +\n          '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n        fontSize: \"14px\",\n        fontSmoothing: \"antialiased\",\n        \"::placeholder\": {\n          color: null,\n        },\n      },\n      invalid: {\n        color: null,\n      },\n    };\n    this.StripeElementClasses = {\n      focus: \"is-focused\",\n      empty: \"is-empty\",\n      invalid: \"is-invalid\",\n    };\n  }\n\n  async ngOnInit() {\n    if (!this.showOptions) {\n      this.hidePaypal = this.method !== PaymentMethodType.PayPal;\n      this.hideBank = this.method !== PaymentMethodType.BankAccount;\n      this.hideCredit = this.method !== PaymentMethodType.Credit;\n    }\n    await this.setTheme();\n    window.document.head.appendChild(this.stripeScript);\n    if (!this.hidePaypal) {\n      window.document.head.appendChild(this.btScript);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    window.document.head.removeChild(this.stripeScript);\n    window.setTimeout(() => {\n      Array.from(window.document.querySelectorAll(\"iframe\")).forEach((el) => {\n        if (el.src != null && el.src.indexOf(\"stripe\") > -1) {\n          try {\n            window.document.body.removeChild(el);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      });\n    }, 500);\n    if (!this.hidePaypal) {\n      window.document.head.removeChild(this.btScript);\n      window.setTimeout(() => {\n        Array.from(window.document.head.querySelectorAll(\"script\")).forEach((el) => {\n          if (el.src != null && el.src.indexOf(\"paypal\") > -1) {\n            try {\n              window.document.head.removeChild(el);\n            } catch (e) {\n              this.logService.error(e);\n            }\n          }\n        });\n        const btStylesheet = window.document.head.querySelector(\"#braintree-dropin-stylesheet\");\n        if (btStylesheet != null) {\n          try {\n            window.document.head.removeChild(btStylesheet);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      }, 500);\n    }\n  }\n\n  changeMethod() {\n    this.btInstance = null;\n\n    if (this.method === PaymentMethodType.PayPal) {\n      window.setTimeout(() => {\n        (window as any).braintree.dropin.create(\n          {\n            authorization: process.env.BRAINTREE_KEY,\n            container: \"#bt-dropin-container\",\n            paymentOptionPriority: [\"paypal\"],\n            paypal: {\n              flow: \"vault\",\n              buttonStyle: {\n                label: \"pay\",\n                size: \"medium\",\n                shape: \"pill\",\n                color: \"blue\",\n                tagline: \"false\",\n              },\n            },\n          },\n          (createErr: any, instance: any) => {\n            if (createErr != null) {\n              // eslint-disable-next-line\n              console.error(createErr);\n              return;\n            }\n            this.btInstance = instance;\n          }\n        );\n      }, 250);\n    } else {\n      this.setStripeElement();\n    }\n  }\n\n  createPaymentToken(): Promise<[string, PaymentMethodType]> {\n    return new Promise((resolve, reject) => {\n      if (this.method === PaymentMethodType.Credit) {\n        resolve([null, this.method]);\n      } else if (this.method === PaymentMethodType.PayPal) {\n        this.btInstance\n          .requestPaymentMethod()\n          .then((payload: any) => {\n            resolve([payload.nonce, this.method]);\n          })\n          .catch((err: any) => {\n            reject(err.message);\n          });\n      } else if (\n        this.method === PaymentMethodType.Card ||\n        this.method === PaymentMethodType.BankAccount\n      ) {\n        if (this.method === PaymentMethodType.Card) {\n          this.apiService\n            .postSetupPayment()\n            .then((clientSecret) =>\n              this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n            )\n            .then((result: any) => {\n              if (result.error) {\n                reject(result.error.message);\n              } else if (result.setupIntent && result.setupIntent.status === \"succeeded\") {\n                resolve([result.setupIntent.payment_method, this.method]);\n              } else {\n                reject();\n              }\n            });\n        } else {\n          this.stripe.createToken(\"bank_account\", this.bank).then((result: any) => {\n            if (result.error) {\n              reject(result.error.message);\n            } else if (result.token && result.token.id != null) {\n              resolve([result.token.id, this.method]);\n            } else {\n              reject();\n            }\n          });\n        }\n      }\n    });\n  }\n\n  handleStripeCardPayment(clientSecret: string, successCallback: () => Promise<any>): Promise<any> {\n    return new Promise<void>((resolve, reject) => {\n      if (this.showMethods && this.stripeCardNumberElement == null) {\n        reject();\n        return;\n      }\n      const handleCardPayment = () =>\n        this.showMethods\n          ? this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n          : this.stripe.handleCardSetup(clientSecret);\n      return handleCardPayment().then(async (result: any) => {\n        if (result.error) {\n          reject(result.error.message);\n        } else if (result.paymentIntent && result.paymentIntent.status === \"succeeded\") {\n          if (successCallback != null) {\n            await successCallback();\n          }\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  private setStripeElement() {\n    window.setTimeout(() => {\n      if (this.showMethods && this.method === PaymentMethodType.Card) {\n        if (this.stripeCardNumberElement == null) {\n          this.stripeCardNumberElement = this.stripeElements.create(\"cardNumber\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        if (this.stripeCardExpiryElement == null) {\n          this.stripeCardExpiryElement = this.stripeElements.create(\"cardExpiry\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n          });\n        }\n        if (this.stripeCardCvcElement == null) {\n          this.stripeCardCvcElement = this.stripeElements.create(\"cardCvc\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        this.stripeCardNumberElement.mount(\"#stripe-card-number-element\");\n        this.stripeCardExpiryElement.mount(\"#stripe-card-expiry-element\");\n        this.stripeCardCvcElement.mount(\"#stripe-card-cvc-element\");\n      }\n    }, 50);\n  }\n\n  private async setTheme() {\n    this.themingService.theme$.pipe(takeUntil(this.destroy$)).subscribe((theme) => {\n      if (theme.effectiveTheme === ThemeType.Dark) {\n        this.StripeElementStyle.base.color = darkInputColor;\n        this.StripeElementStyle.base[\"::placeholder\"].color = darkInputPlaceholderColor;\n        this.StripeElementStyle.invalid.color = darkInputColor;\n      } else {\n        this.StripeElementStyle.base.color = lightInputColor;\n        this.StripeElementStyle.base[\"::placeholder\"].color = lightInputPlaceholderColor;\n        this.StripeElementStyle.invalid.color = lightInputColor;\n      }\n    });\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"darkInputColor\":\"#fff\",\"darkInputPlaceholderColor\":\"#bac0ce\",\"lightInputColor\":\"#465057\",\"lightInputPlaceholderColor\":\"#b6b8b8\"};","export class TaxInfoUpdateRequest {\n  country: string;\n  postalCode: string;\n}\n","import { TaxInfoUpdateRequest } from \"./taxInfoUpdateRequest\";\n\nexport class OrganizationTaxInfoUpdateRequest extends TaxInfoUpdateRequest {\n  taxId: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n}\n","<div class=\"row\">\n  <div [ngClass]=\"trialFlow ? 'col-7' : 'col-6'\">\n    <div class=\"form-group\">\n      <label for=\"addressCountry\">{{ \"country\" | i18n }}</label>\n      <select\n        id=\"addressCountry\"\n        class=\"form-control\"\n        [(ngModel)]=\"taxInfo.country\"\n        required\n        name=\"addressCountry\"\n        autocomplete=\"country\"\n        (change)=\"changeCountry()\"\n      >\n        <option value=\"\">-- Select --</option>\n        <option value=\"US\">United States</option>\n        <option value=\"CN\">China</option>\n        <option value=\"FR\">France</option>\n        <option value=\"DE\">Germany</option>\n        <option value=\"CA\">Canada</option>\n        <option value=\"GB\">United Kingdom</option>\n        <option value=\"AU\">Australia</option>\n        <option value=\"IN\">India</option>\n        <option value=\"-\" disabled></option>\n        <option value=\"AF\">Afghanistan</option>\n        <option value=\"AX\">Åland Islands</option>\n        <option value=\"AL\">Albania</option>\n        <option value=\"DZ\">Algeria</option>\n        <option value=\"AS\">American Samoa</option>\n        <option value=\"AD\">Andorra</option>\n        <option value=\"AO\">Angola</option>\n        <option value=\"AI\">Anguilla</option>\n        <option value=\"AQ\">Antarctica</option>\n        <option value=\"AG\">Antigua and Barbuda</option>\n        <option value=\"AR\">Argentina</option>\n        <option value=\"AM\">Armenia</option>\n        <option value=\"AW\">Aruba</option>\n        <option value=\"AT\">Austria</option>\n        <option value=\"AZ\">Azerbaijan</option>\n        <option value=\"BS\">Bahamas</option>\n        <option value=\"BH\">Bahrain</option>\n        <option value=\"BD\">Bangladesh</option>\n        <option value=\"BB\">Barbados</option>\n        <option value=\"BY\">Belarus</option>\n        <option value=\"BE\">Belgium</option>\n        <option value=\"BZ\">Belize</option>\n        <option value=\"BJ\">Benin</option>\n        <option value=\"BM\">Bermuda</option>\n        <option value=\"BT\">Bhutan</option>\n        <option value=\"BO\">Bolivia, Plurinational State of</option>\n        <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\n        <option value=\"BA\">Bosnia and Herzegovina</option>\n        <option value=\"BW\">Botswana</option>\n        <option value=\"BV\">Bouvet Island</option>\n        <option value=\"BR\">Brazil</option>\n        <option value=\"IO\">British Indian Ocean Territory</option>\n        <option value=\"BN\">Brunei Darussalam</option>\n        <option value=\"BG\">Bulgaria</option>\n        <option value=\"BF\">Burkina Faso</option>\n        <option value=\"BI\">Burundi</option>\n        <option value=\"KH\">Cambodia</option>\n        <option value=\"CM\">Cameroon</option>\n        <option value=\"CV\">Cape Verde</option>\n        <option value=\"KY\">Cayman Islands</option>\n        <option value=\"CF\">Central African Republic</option>\n        <option value=\"TD\">Chad</option>\n        <option value=\"CL\">Chile</option>\n        <option value=\"CX\">Christmas Island</option>\n        <option value=\"CC\">Cocos (Keeling) Islands</option>\n        <option value=\"CO\">Colombia</option>\n        <option value=\"KM\">Comoros</option>\n        <option value=\"CG\">Congo</option>\n        <option value=\"CD\">Congo, the Democratic Republic of the</option>\n        <option value=\"CK\">Cook Islands</option>\n        <option value=\"CR\">Costa Rica</option>\n        <option value=\"CI\">Côte d'Ivoire</option>\n        <option value=\"HR\">Croatia</option>\n        <option value=\"CU\">Cuba</option>\n        <option value=\"CW\">Curaçao</option>\n        <option value=\"CY\">Cyprus</option>\n        <option value=\"CZ\">Czech Republic</option>\n        <option value=\"DK\">Denmark</option>\n        <option value=\"DJ\">Djibouti</option>\n        <option value=\"DM\">Dominica</option>\n        <option value=\"DO\">Dominican Republic</option>\n        <option value=\"EC\">Ecuador</option>\n        <option value=\"EG\">Egypt</option>\n        <option value=\"SV\">El Salvador</option>\n        <option value=\"GQ\">Equatorial Guinea</option>\n        <option value=\"ER\">Eritrea</option>\n        <option value=\"EE\">Estonia</option>\n        <option value=\"ET\">Ethiopia</option>\n        <option value=\"FK\">Falkland Islands (Malvinas)</option>\n        <option value=\"FO\">Faroe Islands</option>\n        <option value=\"FJ\">Fiji</option>\n        <option value=\"FI\">Finland</option>\n        <option value=\"GF\">French Guiana</option>\n        <option value=\"PF\">French Polynesia</option>\n        <option value=\"TF\">French Southern Territories</option>\n        <option value=\"GA\">Gabon</option>\n        <option value=\"GM\">Gambia</option>\n        <option value=\"GE\">Georgia</option>\n        <option value=\"GH\">Ghana</option>\n        <option value=\"GI\">Gibraltar</option>\n        <option value=\"GR\">Greece</option>\n        <option value=\"GL\">Greenland</option>\n        <option value=\"GD\">Grenada</option>\n        <option value=\"GP\">Guadeloupe</option>\n        <option value=\"GU\">Guam</option>\n        <option value=\"GT\">Guatemala</option>\n        <option value=\"GG\">Guernsey</option>\n        <option value=\"GN\">Guinea</option>\n        <option value=\"GW\">Guinea-Bissau</option>\n        <option value=\"GY\">Guyana</option>\n        <option value=\"HT\">Haiti</option>\n        <option value=\"HM\">Heard Island and McDonald Islands</option>\n        <option value=\"VA\">Holy See (Vatican City State)</option>\n        <option value=\"HN\">Honduras</option>\n        <option value=\"HK\">Hong Kong</option>\n        <option value=\"HU\">Hungary</option>\n        <option value=\"IS\">Iceland</option>\n        <option value=\"ID\">Indonesia</option>\n        <option value=\"IR\">Iran, Islamic Republic of</option>\n        <option value=\"IQ\">Iraq</option>\n        <option value=\"IE\">Ireland</option>\n        <option value=\"IM\">Isle of Man</option>\n        <option value=\"IL\">Israel</option>\n        <option value=\"IT\">Italy</option>\n        <option value=\"JM\">Jamaica</option>\n        <option value=\"JP\">Japan</option>\n        <option value=\"JE\">Jersey</option>\n        <option value=\"JO\">Jordan</option>\n        <option value=\"KZ\">Kazakhstan</option>\n        <option value=\"KE\">Kenya</option>\n        <option value=\"KI\">Kiribati</option>\n        <option value=\"KP\">Korea, Democratic People's Republic of</option>\n        <option value=\"KR\">Korea, Republic of</option>\n        <option value=\"KW\">Kuwait</option>\n        <option value=\"KG\">Kyrgyzstan</option>\n        <option value=\"LA\">Lao People's Democratic Republic</option>\n        <option value=\"LV\">Latvia</option>\n        <option value=\"LB\">Lebanon</option>\n        <option value=\"LS\">Lesotho</option>\n        <option value=\"LR\">Liberia</option>\n        <option value=\"LY\">Libya</option>\n        <option value=\"LI\">Liechtenstein</option>\n        <option value=\"LT\">Lithuania</option>\n        <option value=\"LU\">Luxembourg</option>\n        <option value=\"MO\">Macao</option>\n        <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option>\n        <option value=\"MG\">Madagascar</option>\n        <option value=\"MW\">Malawi</option>\n        <option value=\"MY\">Malaysia</option>\n        <option value=\"MV\">Maldives</option>\n        <option value=\"ML\">Mali</option>\n        <option value=\"MT\">Malta</option>\n        <option value=\"MH\">Marshall Islands</option>\n        <option value=\"MQ\">Martinique</option>\n        <option value=\"MR\">Mauritania</option>\n        <option value=\"MU\">Mauritius</option>\n        <option value=\"YT\">Mayotte</option>\n        <option value=\"MX\">Mexico</option>\n        <option value=\"FM\">Micronesia, Federated States of</option>\n        <option value=\"MD\">Moldova, Republic of</option>\n        <option value=\"MC\">Monaco</option>\n        <option value=\"MN\">Mongolia</option>\n        <option value=\"ME\">Montenegro</option>\n        <option value=\"MS\">Montserrat</option>\n        <option value=\"MA\">Morocco</option>\n        <option value=\"MZ\">Mozambique</option>\n        <option value=\"MM\">Myanmar</option>\n        <option value=\"NA\">Namibia</option>\n        <option value=\"NR\">Nauru</option>\n        <option value=\"NP\">Nepal</option>\n        <option value=\"NL\">Netherlands</option>\n        <option value=\"NC\">New Caledonia</option>\n        <option value=\"NZ\">New Zealand</option>\n        <option value=\"NI\">Nicaragua</option>\n        <option value=\"NE\">Niger</option>\n        <option value=\"NG\">Nigeria</option>\n        <option value=\"NU\">Niue</option>\n        <option value=\"NF\">Norfolk Island</option>\n        <option value=\"MP\">Northern Mariana Islands</option>\n        <option value=\"NO\">Norway</option>\n        <option value=\"OM\">Oman</option>\n        <option value=\"PK\">Pakistan</option>\n        <option value=\"PW\">Palau</option>\n        <option value=\"PS\">Palestinian Territory, Occupied</option>\n        <option value=\"PA\">Panama</option>\n        <option value=\"PG\">Papua New Guinea</option>\n        <option value=\"PY\">Paraguay</option>\n        <option value=\"PE\">Peru</option>\n        <option value=\"PH\">Philippines</option>\n        <option value=\"PN\">Pitcairn</option>\n        <option value=\"PL\">Poland</option>\n        <option value=\"PT\">Portugal</option>\n        <option value=\"PR\">Puerto Rico</option>\n        <option value=\"QA\">Qatar</option>\n        <option value=\"RE\">Réunion</option>\n        <option value=\"RO\">Romania</option>\n        <option value=\"RU\">Russian Federation</option>\n        <option value=\"RW\">Rwanda</option>\n        <option value=\"BL\">Saint Barthélemy</option>\n        <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option>\n        <option value=\"KN\">Saint Kitts and Nevis</option>\n        <option value=\"LC\">Saint Lucia</option>\n        <option value=\"MF\">Saint Martin (French part)</option>\n        <option value=\"PM\">Saint Pierre and Miquelon</option>\n        <option value=\"VC\">Saint Vincent and the Grenadines</option>\n        <option value=\"WS\">Samoa</option>\n        <option value=\"SM\">San Marino</option>\n        <option value=\"ST\">Sao Tome and Principe</option>\n        <option value=\"SA\">Saudi Arabia</option>\n        <option value=\"SN\">Senegal</option>\n        <option value=\"RS\">Serbia</option>\n        <option value=\"SC\">Seychelles</option>\n        <option value=\"SL\">Sierra Leone</option>\n        <option value=\"SG\">Singapore</option>\n        <option value=\"SX\">Sint Maarten (Dutch part)</option>\n        <option value=\"SK\">Slovakia</option>\n        <option value=\"SI\">Slovenia</option>\n        <option value=\"SB\">Solomon Islands</option>\n        <option value=\"SO\">Somalia</option>\n        <option value=\"ZA\">South Africa</option>\n        <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\n        <option value=\"SS\">South Sudan</option>\n        <option value=\"ES\">Spain</option>\n        <option value=\"LK\">Sri Lanka</option>\n        <option value=\"SD\">Sudan</option>\n        <option value=\"SR\">Suriname</option>\n        <option value=\"SJ\">Svalbard and Jan Mayen</option>\n        <option value=\"SZ\">Swaziland</option>\n        <option value=\"SE\">Sweden</option>\n        <option value=\"CH\">Switzerland</option>\n        <option value=\"SY\">Syrian Arab Republic</option>\n        <option value=\"TW\">Taiwan</option>\n        <option value=\"TJ\">Tajikistan</option>\n        <option value=\"TZ\">Tanzania, United Republic of</option>\n        <option value=\"TH\">Thailand</option>\n        <option value=\"TL\">Timor-Leste</option>\n        <option value=\"TG\">Togo</option>\n        <option value=\"TK\">Tokelau</option>\n        <option value=\"TO\">Tonga</option>\n        <option value=\"TT\">Trinidad and Tobago</option>\n        <option value=\"TN\">Tunisia</option>\n        <option value=\"TR\">Turkey</option>\n        <option value=\"TM\">Turkmenistan</option>\n        <option value=\"TC\">Turks and Caicos Islands</option>\n        <option value=\"TV\">Tuvalu</option>\n        <option value=\"UG\">Uganda</option>\n        <option value=\"UA\">Ukraine</option>\n        <option value=\"AE\">United Arab Emirates</option>\n        <option value=\"UM\">United States Minor Outlying Islands</option>\n        <option value=\"UY\">Uruguay</option>\n        <option value=\"UZ\">Uzbekistan</option>\n        <option value=\"VU\">Vanuatu</option>\n        <option value=\"VE\">Venezuela, Bolivarian Republic of</option>\n        <option value=\"VN\">Viet Nam</option>\n        <option value=\"VG\">Virgin Islands, British</option>\n        <option value=\"VI\">Virgin Islands, U.S.</option>\n        <option value=\"WF\">Wallis and Futuna</option>\n        <option value=\"EH\">Western Sahara</option>\n        <option value=\"YE\">Yemen</option>\n        <option value=\"ZM\">Zambia</option>\n        <option value=\"ZW\">Zimbabwe</option>\n      </select>\n    </div>\n  </div>\n  <div [ngClass]=\"trialFlow ? 'col-5' : 'col-3'\">\n    <div class=\"form-group\">\n      <label for=\"addressPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n      <input\n        id=\"addressPostalCode\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressPostalCode\"\n        [(ngModel)]=\"taxInfo.postalCode\"\n        [required]=\"taxInfo.country === 'US'\"\n        autocomplete=\"postal-code\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\" *ngIf=\"organizationId && taxInfo.country !== 'US'\">\n    <div class=\"form-group form-check\">\n      <input\n        class=\"form-check-input\"\n        id=\"addressIncludeTaxId\"\n        name=\"addressIncludeTaxId\"\n        type=\"checkbox\"\n        [(ngModel)]=\"taxInfo.includeTaxId\"\n      />\n      <label class=\"form-check-label\" for=\"addressIncludeTaxId\">{{ \"includeVAT\" | i18n }}</label>\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"taxId\">{{ \"taxIdNumber\" | i18n }}</label>\n      <input id=\"taxId\" class=\"form-control\" type=\"text\" name=\"taxId\" [(ngModel)]=\"taxInfo.taxId\" />\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine1\">{{ \"address1\" | i18n }}</label>\n      <input\n        id=\"addressLine1\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine1\"\n        [(ngModel)]=\"taxInfo.line1\"\n        autocomplete=\"address-line1\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine2\">{{ \"address2\" | i18n }}</label>\n      <input\n        id=\"addressLine2\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine2\"\n        [(ngModel)]=\"taxInfo.line2\"\n        autocomplete=\"address-line2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressCity\">{{ \"cityTown\" | i18n }}</label>\n      <input\n        id=\"addressCity\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressCity\"\n        [(ngModel)]=\"taxInfo.city\"\n        autocomplete=\"address-level2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressState\">{{ \"stateProvince\" | i18n }}</label>\n      <input\n        id=\"addressState\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressState\"\n        [(ngModel)]=\"taxInfo.state\"\n        autocomplete=\"address-level1\"\n      />\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationTaxInfoUpdateRequest } from \"@bitwarden/common/models/request/organizationTaxInfoUpdateRequest\";\nimport { TaxInfoUpdateRequest } from \"@bitwarden/common/models/request/taxInfoUpdateRequest\";\nimport { TaxInfoResponse } from \"@bitwarden/common/models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"@bitwarden/common/models/response/taxRateResponse\";\n\ntype TaxInfoView = Omit<TaxInfoResponse, \"taxIdType\"> & {\n  includeTaxId: boolean;\n  [key: string]: unknown;\n};\n\n@Component({\n  selector: \"app-tax-info\",\n  templateUrl: \"tax-info.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TaxInfoComponent {\n  @Input() trialFlow = false;\n  @Output() onCountryChanged = new EventEmitter();\n\n  loading = true;\n  organizationId: string;\n  taxInfo: TaxInfoView = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  taxRates: TaxRateResponse[];\n\n  private pristine: TaxInfoView = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      if (this.organizationId) {\n        try {\n          const taxInfo = await this.organizationApiService.getTaxInfo(this.organizationId);\n          if (taxInfo) {\n            this.taxInfo.taxId = taxInfo.taxId;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.line1 = taxInfo.line1;\n            this.taxInfo.line2 = taxInfo.line2;\n            this.taxInfo.city = taxInfo.city;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n            this.taxInfo.includeTaxId =\n              this.taxInfo.country !== \"US\" &&\n              (!!taxInfo.taxId ||\n                !!taxInfo.line1 ||\n                !!taxInfo.line2 ||\n                !!taxInfo.city ||\n                !!taxInfo.state);\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      } else {\n        try {\n          const taxInfo = await this.apiService.getTaxInfo();\n          if (taxInfo) {\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.pristine = Object.assign({}, this.taxInfo);\n      // If not the default (US) then trigger onCountryChanged\n      if (this.taxInfo.country !== \"US\") {\n        this.onCountryChanged.emit();\n      }\n    });\n\n    try {\n      const taxRates = await this.apiService.getTaxRates();\n      if (taxRates) {\n        this.taxRates = taxRates.data;\n      }\n    } catch (e) {\n      this.logService.error(e);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  get taxRate() {\n    if (this.taxRates != null) {\n      const localTaxRate = this.taxRates.find(\n        (x) => x.country === this.taxInfo.country && x.postalCode === this.taxInfo.postalCode\n      );\n      return localTaxRate?.rate ?? null;\n    }\n  }\n\n  getTaxInfoRequest(): TaxInfoUpdateRequest {\n    if (this.organizationId) {\n      const request = new OrganizationTaxInfoUpdateRequest();\n      request.taxId = this.taxInfo.taxId;\n      request.state = this.taxInfo.state;\n      request.line1 = this.taxInfo.line1;\n      request.line2 = this.taxInfo.line2;\n      request.city = this.taxInfo.city;\n      request.state = this.taxInfo.state;\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    } else {\n      const request = new TaxInfoUpdateRequest();\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    }\n  }\n\n  submitTaxInfo(): Promise<any> {\n    if (!this.hasChanged()) {\n      return new Promise<void>((resolve) => {\n        resolve();\n      });\n    }\n    const request = this.getTaxInfoRequest();\n    return this.organizationId\n      ? this.organizationApiService.updateTaxInfo(\n          this.organizationId,\n          request as OrganizationTaxInfoUpdateRequest\n        )\n      : this.apiService.putTaxInfo(request);\n  }\n\n  changeCountry() {\n    if (this.taxInfo.country === \"US\") {\n      this.taxInfo.includeTaxId = false;\n      this.taxInfo.taxId = null;\n      this.taxInfo.line1 = null;\n      this.taxInfo.line2 = null;\n      this.taxInfo.city = null;\n      this.taxInfo.state = null;\n    }\n    this.onCountryChanged.emit();\n  }\n\n  private hasChanged(): boolean {\n    for (const key in this.taxInfo) {\n      // eslint-disable-next-line\n      if (this.pristine.hasOwnProperty(key) && this.pristine[key] !== this.taxInfo[key]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"createOrganization && selfHosted\">\n  <p>{{ \"uploadLicenseFileOrg\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_organization_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n  </form>\n</ng-container>\n<form\n  #form\n  [formGroup]=\"formGroup\"\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n  *ngIf=\"!loading && !selfHosted && this.plans\"\n  class=\"tw-pt-6\"\n>\n  <app-org-info\n    (changedBusinessOwned)=\"changedOwnedBusiness()\"\n    [formGroup]=\"formGroup\"\n    [createOrganization]=\"createOrganization\"\n    [isProvider]=\"!!providerId\"\n    [acceptingSponsorship]=\"acceptingSponsorship\"\n  ></app-org-info>\n  <h2 class=\"mt-5\">{{ \"chooseYourPlan\" | i18n }}</h2>\n  <div *ngFor=\"let selectableProduct of selectableProducts\" class=\"form-check form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"product\"\n      id=\"product{{ selectableProduct.product }}\"\n      [value]=\"selectableProduct.product\"\n      formControlName=\"product\"\n      (change)=\"changedProduct()\"\n    />\n    <label class=\"form-check-label\" for=\"product{{ selectableProduct.product }}\">\n      {{ selectableProduct.nameLocalizationKey | i18n }}\n      <small class=\"mb-1\">{{ selectableProduct.descriptionLocalizationKey | i18n: \"1\" }}</small>\n      <ng-container\n        *ngIf=\"selectableProduct.product === productTypes.Enterprise; else fullFeatureList\"\n      >\n        <small>• {{ \"includeAllTeamsFeatures\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSso\">• {{ \"includeSsoAuthentication\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasPolicies\"\n          >• {{ \"includeEnterprisePolicies\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-container>\n      <ng-template #fullFeatureList>\n        <small *ngIf=\"selectableProduct.product == productTypes.Free\"\n          >• {{ \"limitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"selectableProduct.product != productTypes.Free && selectableProduct.maxUsers\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxUsers\">• {{ \"addShareUnlimitedUsers\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.maxCollections\"\n          >• {{ \"limitedCollections\" | i18n: selectableProduct.maxCollections }}</small\n        >\n        <small *ngIf=\"selectableProduct.maxAdditionalSeats\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxAdditionalSeats }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxCollections\"\n          >• {{ \"createUnlimitedCollections\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.baseStorageGb\"\n          >• {{ \"gbEncryptedFileStorage\" | i18n: selectableProduct.baseStorageGb + \"GB\" }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasGroups\">• {{ \"controlAccessWithGroups\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasApi\">• {{ \"trackAuditLogs\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasDirectory\"\n          >• {{ \"syncUsersFromDirectory\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.usersGetPremium\">• {{ \"usersGetPremium\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.product != productTypes.Free\"\n          >• {{ \"priorityCustomerSupport\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-template>\n      <span *ngIf=\"selectableProduct.product != productTypes.Free\">\n        <ng-container *ngIf=\"selectableProduct.basePrice && !acceptingSponsorship\">\n          {{ selectableProduct.basePrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }},\n          {{ \"includesXUsers\" | i18n: selectableProduct.baseSeats }}\n          <ng-container *ngIf=\"selectableProduct.hasAdditionalSeatsOption\">\n            {{ (\"additionalUsers\" | i18n).toLowerCase() }}\n            {{ selectableProduct.seatPrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </ng-container>\n        </ng-container>\n      </span>\n      <span *ngIf=\"!selectableProduct.basePrice && selectableProduct.hasAdditionalSeatsOption\">\n        {{ \"costPerUser\" | i18n: (selectableProduct.seatPrice / 12 | currency: \"$\") }} /{{\n          \"month\" | i18n\n        }}\n      </span>\n      <span *ngIf=\"selectableProduct.product == productTypes.Free\">{{ \"freeForever\" | i18n }}</span>\n    </label>\n  </div>\n  <div *ngIf=\"formGroup.controls['product'].value !== productTypes.Free\">\n    <ng-container *ngIf=\"selectedPlan.hasAdditionalSeatsOption && !selectedPlan.baseSeats\">\n      <h2 class=\"mt-5\">{{ \"users\" | i18n }}</h2>\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <label for=\"additionalSeats\">{{ \"userSeats\" | i18n }}</label>\n          <input\n            id=\"additionalSeats\"\n            class=\"form-control\"\n            type=\"number\"\n            name=\"additionalSeats\"\n            formControlName=\"additionalSeats\"\n            placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n            required\n          />\n          <small class=\"text-muted form-text\">{{ \"userSeatsHowManyDesc\" | i18n }}</small>\n        </div>\n      </div>\n    </ng-container>\n    <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n    <div class=\"row\" *ngIf=\"selectedPlan.hasAdditionalSeatsOption && selectedPlan.baseSeats\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalSeats\">{{ \"additionalUserSeats\" | i18n }}</label>\n        <input\n          id=\"additionalSeats\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalSeats\"\n          formControlName=\"additionalSeats\"\n          placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"userSeatsAdditionalDesc\"\n            | i18n: selectedPlan.baseSeats:(seatPriceMonthly(selectedPlan) | currency: \"$\")\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n        <input\n          id=\"additionalStorage\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalStorageGb\"\n          formControlName=\"additionalStorage\"\n          step=\"1\"\n          placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"additionalStorageIntervalDesc\"\n            | i18n\n              : \"1 GB\"\n              : (additionalStoragePriceMonthly(selectedPlan) | currency: \"$\")\n              : (\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\" *ngIf=\"selectedPlan.hasPremiumAccessOption\">\n        <div class=\"form-check\">\n          <input\n            id=\"premiumAccess\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"premiumAccessAddon\"\n            formControlName=\"premiumAccessAddon\"\n          />\n          <label for=\"premiumAccess\" class=\"form-check-label bold\">{{\n            \"premiumAccess\" | i18n\n          }}</label>\n        </div>\n        <small class=\"text-muted form-text\">{{\n          \"premiumAccessDesc\" | i18n: (3.33 | currency: \"$\"):(\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n    <div class=\"form-check form-check-block\" *ngFor=\"let selectablePlan of selectablePlans\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"plan\"\n        id=\"interval{{ selectablePlan.type }}\"\n        [value]=\"selectablePlan.type\"\n        formControlName=\"plan\"\n      />\n      <label class=\"form-check-label\" for=\"interval{{ selectablePlan.type }}\">\n        <ng-container *ngIf=\"selectablePlan.isAnnual\">\n          {{ \"annually\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            <ng-container *ngIf=\"acceptingSponsorship; else notAcceptingSponsorship\">\n              <span style=\"text-decoration: line-through\">{{\n                selectablePlan.basePrice | currency: \"$\"\n              }}</span>\n              {{ \"freeWithSponsorship\" | i18n }}\n            </ng-container>\n            <ng-template #notAcceptingSponsorship>\n              {{ selectablePlan.basePrice | currency: \"$\" }}\n              /{{ \"year\" | i18n }}\n            </ng-template>\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} = {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{\n              \"year\" | i18n\n            }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"year\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\">\n            {{ \"premiumAccess\" | i18n }}:\n            {{ selectablePlan.premiumAccessOptionCost / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ 40 | currency: \"$\" }}\n            /{{ \"year\" | i18n }}\n          </small>\n        </ng-container>\n        <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n          {{ \"monthly\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ selectablePlan.basePrice | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice | currency: \"$\" }} {{ \"monthAbbr\" | i18n }} =\n            {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n          <small\n            *ngIf=\"\n              selectablePlan.hasPremiumAccessOption &&\n              formGroup.controls['premiumAccessAddon'].value\n            \"\n          >\n            {{ \"premiumAccess\" | i18n }}:\n            {{ selectablePlan.premiumAccessOptionCost | currency: \"$\" }} {{ \"monthAbbr\" | i18n }} =\n            {{ 40 | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n        </ng-container>\n      </label>\n    </div>\n    <hr class=\"my-3\" />\n    <h2 class=\"spaced-header mb-4\">\n      {{ (createOrganization ? \"paymentInformation\" : \"billingInformation\") | i18n }}\n    </h2>\n    <small class=\"text-muted font-italic mb-3 d-block\">\n      {{ paymentDesc }}\n    </small>\n    <app-payment *ngIf=\"createOrganization\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    <div id=\"price\" class=\"my-4\">\n      <div class=\"text-muted text-sm\">\n        {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n        <br />\n        <ng-container>\n          {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n        </ng-container>\n      </div>\n      <hr class=\"my-1 col-3 ml-0\" />\n      <p class=\"text-lg\">\n        <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{\n          selectedPlanInterval | i18n\n        }}\n      </p>\n    </div>\n    <ng-container *ngIf=\"!createOrganization\">\n      <app-payment [showMethods]=\"false\"></app-payment>\n    </ng-container>\n  </div>\n  <div *ngIf=\"singleOrgPolicyBlock\" class=\"mt-4\">\n    <app-callout [type]=\"'error'\">{{ \"singleOrgBlockCreateMessage\" | i18n }}</app-callout>\n  </div>\n  <div class=\"mt-4\">\n    <button\n      type=\"submit\"\n      buttonType=\"primary\"\n      bitButton\n      [loading]=\"form.loading\"\n      [disabled]=\"!formGroup.valid\"\n    >\n      {{ \"submit\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { OrganizationCreateRequest } from \"@bitwarden/common/models/request/organizationCreateRequest\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organizationKeysRequest\";\nimport { OrganizationUpgradeRequest } from \"@bitwarden/common/models/request/organizationUpgradeRequest\";\nimport { ProviderOrganizationCreateRequest } from \"@bitwarden/common/models/request/provider/providerOrganizationCreateRequest\";\nimport { PlanResponse } from \"@bitwarden/common/models/response/planResponse\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\ninterface OnSuccessArgs {\n  organizationId: string;\n}\n\n@Component({\n  selector: \"app-organization-plans\",\n  templateUrl: \"organization-plans.component.html\",\n})\nexport class OrganizationPlansComponent implements OnInit, OnDestroy {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxComponent: TaxInfoComponent;\n\n  @Input() organizationId: string;\n  @Input() showFree = true;\n  @Input() showCancel = false;\n  @Input() acceptingSponsorship = false;\n  @Input() product: ProductType = ProductType.Free;\n  @Input() plan: PlanType = PlanType.Free;\n  @Input() providerId: string;\n  @Output() onSuccess = new EventEmitter<OnSuccessArgs>();\n  @Output() onCanceled = new EventEmitter<void>();\n  @Output() onTrialBillingSuccess = new EventEmitter();\n\n  loading = true;\n  selfHosted = false;\n  productTypes = ProductType;\n  formPromise: Promise<string>;\n  singleOrgPolicyBlock = false;\n  isInTrialFlow = false;\n  discount = 0;\n\n  formGroup = this.formBuilder.group({\n    name: [\"\"],\n    billingEmail: [\"\", [Validators.email]],\n    businessOwned: [false],\n    premiumAccessAddon: [false],\n    additionalStorage: [0, [Validators.min(0), Validators.max(99)]],\n    additionalSeats: [0, [Validators.min(0), Validators.max(100000)]],\n    clientOwnerEmail: [\"\", [Validators.email]],\n    businessName: [\"\"],\n    plan: [this.plan],\n    product: [this.product],\n  });\n\n  plans: PlanResponse[];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private router: Router,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private organizationService: OrganizationService,\n    private logService: LogService,\n    private messagingService: MessagingService,\n    private formBuilder: UntypedFormBuilder,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    if (!this.selfHosted) {\n      const plans = await this.apiService.getPlans();\n      this.plans = plans.data;\n      if (this.product === ProductType.Enterprise || this.product === ProductType.Teams) {\n        this.formGroup.controls.businessOwned.setValue(true);\n      }\n    }\n\n    if (this.providerId) {\n      this.formGroup.controls.businessOwned.setValue(true);\n      this.changedOwnedBusiness();\n    }\n\n    if (!this.createOrganization || this.acceptingSponsorship) {\n      this.formGroup.controls.product.setValue(ProductType.Families);\n      this.changedProduct();\n    }\n\n    if (this.createOrganization) {\n      this.formGroup.controls.name.addValidators(Validators.required);\n      this.formGroup.controls.billingEmail.addValidators(Validators.required);\n    }\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.SingleOrg)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.singleOrgPolicyBlock = policyAppliesToActiveUser;\n      });\n\n    this.loading = false;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get createOrganization() {\n    return this.organizationId == null;\n  }\n\n  get selectedPlan() {\n    return this.plans.find((plan) => plan.type === this.formGroup.controls.plan.value);\n  }\n\n  get selectedPlanInterval() {\n    return this.selectedPlan.isAnnual ? \"year\" : \"month\";\n  }\n\n  get selectableProducts() {\n    let validPlans = this.plans.filter((plan) => plan.type !== PlanType.Custom);\n\n    if (this.formGroup.controls.businessOwned.value) {\n      validPlans = validPlans.filter((plan) => plan.canBeUsedByBusiness);\n    }\n\n    if (!this.showFree) {\n      validPlans = validPlans.filter((plan) => plan.product !== ProductType.Free);\n    }\n\n    validPlans = validPlans.filter(\n      (plan) =>\n        !plan.legacyYear &&\n        !plan.disabled &&\n        (plan.isAnnual || plan.product === this.productTypes.Free)\n    );\n\n    if (this.acceptingSponsorship) {\n      const familyPlan = this.plans.find((plan) => plan.type === PlanType.FamiliesAnnually);\n      this.discount = familyPlan.basePrice;\n      validPlans = [familyPlan];\n    }\n\n    return validPlans;\n  }\n\n  get selectablePlans() {\n    return this.plans?.filter(\n      (plan) =>\n        !plan.legacyYear && !plan.disabled && plan.product === this.formGroup.controls.product.value\n    );\n  }\n\n  additionalStoragePriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.additionalStoragePricePerGb;\n    }\n    return selectedPlan.additionalStoragePricePerGb / 12;\n  }\n\n  seatPriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.seatPrice;\n    }\n    return selectedPlan.seatPrice / 12;\n  }\n\n  additionalStorageTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalStorageOption) {\n      return 0;\n    }\n\n    return (\n      plan.additionalStoragePricePerGb *\n      Math.abs(this.formGroup.controls.additionalStorage.value || 0)\n    );\n  }\n\n  seatTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalSeatsOption) {\n      return 0;\n    }\n\n    return plan.seatPrice * Math.abs(this.formGroup.controls.additionalSeats.value || 0);\n  }\n\n  get subtotal() {\n    let subTotal = this.selectedPlan.basePrice;\n    if (\n      this.selectedPlan.hasAdditionalSeatsOption &&\n      this.formGroup.controls.additionalSeats.value\n    ) {\n      subTotal += this.seatTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasAdditionalStorageOption &&\n      this.formGroup.controls.additionalStorage.value\n    ) {\n      subTotal += this.additionalStorageTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasPremiumAccessOption &&\n      this.formGroup.controls.premiumAccessAddon.value\n    ) {\n      subTotal += this.selectedPlan.premiumAccessOptionPrice;\n    }\n    return subTotal - this.discount;\n  }\n\n  get freeTrial() {\n    return this.selectedPlan.trialPeriodDays != null;\n  }\n\n  get taxCharges() {\n    return this.taxComponent != null && this.taxComponent.taxRate != null\n      ? (this.taxComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total() {\n    return this.subtotal + this.taxCharges || 0;\n  }\n\n  get paymentDesc() {\n    if (this.acceptingSponsorship) {\n      return this.i18nService.t(\"paymentSponsored\");\n    } else if (this.freeTrial && this.createOrganization) {\n      return this.i18nService.t(\"paymentChargedWithTrial\");\n    } else {\n      return this.i18nService.t(\"paymentCharged\", this.i18nService.t(this.selectedPlanInterval));\n    }\n  }\n\n  changedProduct() {\n    this.formGroup.controls.plan.setValue(this.selectablePlans[0].type);\n    if (!this.selectedPlan.hasPremiumAccessOption) {\n      this.formGroup.controls.premiumAccessAddon.setValue(false);\n    }\n    if (!this.selectedPlan.hasAdditionalStorageOption) {\n      this.formGroup.controls.additionalStorage.setValue(0);\n    }\n    if (!this.selectedPlan.hasAdditionalSeatsOption) {\n      this.formGroup.controls.additionalSeats.setValue(0);\n    } else if (\n      !this.formGroup.controls.additionalSeats.value &&\n      !this.selectedPlan.baseSeats &&\n      this.selectedPlan.hasAdditionalSeatsOption\n    ) {\n      this.formGroup.controls.additionalSeats.setValue(1);\n    }\n  }\n\n  changedOwnedBusiness() {\n    if (!this.formGroup.controls.businessOwned.value || this.selectedPlan.canBeUsedByBusiness) {\n      return;\n    }\n    this.formGroup.controls.product.setValue(ProductType.Teams);\n    this.formGroup.controls.plan.setValue(PlanType.TeamsAnnually);\n    this.changedProduct();\n  }\n\n  changedCountry() {\n    this.paymentComponent.hideBank = this.taxComponent.taxInfo.country !== \"US\";\n    // Bank Account payments are only available for US customers\n    if (\n      this.paymentComponent.hideBank &&\n      this.paymentComponent.method === PaymentMethodType.BankAccount\n    ) {\n      this.paymentComponent.method = PaymentMethodType.Card;\n      this.paymentComponent.changeMethod();\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  async submit() {\n    if (this.singleOrgPolicyBlock) {\n      return;\n    }\n\n    try {\n      const doSubmit = async (): Promise<string> => {\n        let orgId: string = null;\n        if (this.createOrganization) {\n          const shareKey = await this.cryptoService.makeShareKey();\n          const key = shareKey[0].encryptedString;\n          const collection = await this.cryptoService.encrypt(\n            this.i18nService.t(\"defaultCollection\"),\n            shareKey[1]\n          );\n          const collectionCt = collection.encryptedString;\n          const orgKeys = await this.cryptoService.makeKeyPair(shareKey[1]);\n\n          if (this.selfHosted) {\n            orgId = await this.createSelfHosted(key, collectionCt, orgKeys);\n          } else {\n            orgId = await this.createCloudHosted(key, collectionCt, orgKeys, shareKey[1]);\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            this.i18nService.t(\"organizationCreated\"),\n            this.i18nService.t(\"organizationReadyToGo\")\n          );\n        } else {\n          orgId = await this.updateOrganization(orgId);\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"organizationUpgraded\")\n          );\n        }\n\n        await this.apiService.refreshIdentityToken();\n        await this.syncService.fullSync(true);\n\n        if (!this.acceptingSponsorship && !this.isInTrialFlow) {\n          this.router.navigate([\"/organizations/\" + orgId]);\n        }\n\n        if (this.isInTrialFlow) {\n          this.onTrialBillingSuccess.emit({\n            orgId: orgId,\n            subLabelText: this.billingSubLabelText(),\n          });\n        }\n\n        return orgId;\n      };\n\n      this.formPromise = doSubmit();\n      const organizationId = await this.formPromise;\n      this.onSuccess.emit({ organizationId: organizationId });\n      this.messagingService.send(\"organizationCreated\", organizationId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async updateOrganization(orgId: string) {\n    const request = new OrganizationUpgradeRequest();\n    request.businessName = this.formGroup.controls.businessOwned.value\n      ? this.formGroup.controls.businessName.value\n      : null;\n    request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n    request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n    request.premiumAccessAddon =\n      this.selectedPlan.hasPremiumAccessOption && this.formGroup.controls.premiumAccessAddon.value;\n    request.planType = this.selectedPlan.type;\n    request.billingAddressCountry = this.taxComponent.taxInfo.country;\n    request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n\n    // Retrieve org info to backfill pub/priv key if necessary\n    const org = await this.organizationService.get(this.organizationId);\n    if (!org.hasPublicAndPrivateKeys) {\n      const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n      const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n      request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    }\n\n    const result = await this.organizationApiService.upgrade(this.organizationId, request);\n    if (!result.success && result.paymentIntentClientSecret != null) {\n      await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n    }\n    return this.organizationId;\n  }\n\n  private async createCloudHosted(\n    key: string,\n    collectionCt: string,\n    orgKeys: [string, EncString],\n    orgKey: SymmetricCryptoKey\n  ) {\n    const request = new OrganizationCreateRequest();\n    request.key = key;\n    request.collectionName = collectionCt;\n    request.name = this.formGroup.controls.name.value;\n    request.billingEmail = this.formGroup.controls.billingEmail.value;\n    request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n\n    if (this.selectedPlan.type === PlanType.Free) {\n      request.planType = PlanType.Free;\n    } else {\n      const tokenResult = await this.paymentComponent.createPaymentToken();\n\n      request.paymentToken = tokenResult[0];\n      request.paymentMethodType = tokenResult[1];\n      request.businessName = this.formGroup.controls.businessOwned.value\n        ? this.formGroup.controls.businessName.value\n        : null;\n      request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n      request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n      request.premiumAccessAddon =\n        this.selectedPlan.hasPremiumAccessOption &&\n        this.formGroup.controls.premiumAccessAddon.value;\n      request.planType = this.selectedPlan.type;\n      request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n      request.billingAddressCountry = this.taxComponent.taxInfo.country;\n      if (this.taxComponent.taxInfo.includeTaxId) {\n        request.taxIdNumber = this.taxComponent.taxInfo.taxId;\n        request.billingAddressLine1 = this.taxComponent.taxInfo.line1;\n        request.billingAddressLine2 = this.taxComponent.taxInfo.line2;\n        request.billingAddressCity = this.taxComponent.taxInfo.city;\n        request.billingAddressState = this.taxComponent.taxInfo.state;\n      }\n    }\n\n    if (this.providerId) {\n      const providerRequest = new ProviderOrganizationCreateRequest(\n        this.formGroup.controls.clientOwnerEmail.value,\n        request\n      );\n      const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n      providerRequest.organizationCreateRequest.key = (\n        await this.cryptoService.encrypt(orgKey.key, providerKey)\n      ).encryptedString;\n      const orgId = (\n        await this.apiService.postProviderCreateOrganization(this.providerId, providerRequest)\n      ).organizationId;\n\n      return orgId;\n    } else {\n      return (await this.organizationApiService.create(request)).id;\n    }\n  }\n\n  private async createSelfHosted(key: string, collectionCt: string, orgKeys: [string, EncString]) {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      throw new Error(this.i18nService.t(\"selectFile\"));\n    }\n\n    const fd = new FormData();\n    fd.append(\"license\", files[0]);\n    fd.append(\"key\", key);\n    fd.append(\"collectionName\", collectionCt);\n    const response = await this.organizationApiService.createLicense(fd);\n    const orgId = response.id;\n\n    await this.apiService.refreshIdentityToken();\n\n    // Org Keys live outside of the OrganizationLicense - add the keys to the org here\n    const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    await this.organizationApiService.updateKeys(orgId, request);\n\n    return orgId;\n  }\n\n  private billingSubLabelText(): string {\n    const selectedPlan = this.selectedPlan;\n    const price = selectedPlan.basePrice === 0 ? selectedPlan.seatPrice : selectedPlan.basePrice;\n    let text = \"\";\n\n    if (selectedPlan.isAnnual) {\n      text += `${this.i18nService.t(\"annual\")} ($${price}/${this.i18nService.t(\"yr\")})`;\n    } else {\n      text += `${this.i18nService.t(\"monthly\")} ($${price}/${this.i18nService.t(\"monthAbbr\")})`;\n    }\n\n    return text;\n  }\n}\n","<form #form [formGroup]=\"formGroup\" [appApiAction]=\"formPromise\" (ngSubmit)=\"submit()\">\n  <div class=\"tw-container tw-mb-3\">\n    <div class=\"tw-mb-6\">\n      <h2 class=\"tw-mb-3 tw-text-base tw-font-semibold\">{{ \"billingPlanLabel\" | i18n }}</h2>\n      <div class=\"tw-mb-1 tw-items-center\" *ngFor=\"let selectablePlan of selectablePlans\">\n        <label class=\"tw- tw-block tw-text-main\" for=\"interval{{ selectablePlan.type }}\">\n          <input\n            checked\n            class=\"tw-h-4 tw-w-4 tw-align-middle\"\n            id=\"interval{{ selectablePlan.type }}\"\n            name=\"plan\"\n            type=\"radio\"\n            [value]=\"selectablePlan.type\"\n            formControlName=\"plan\"\n          />\n          <ng-container *ngIf=\"selectablePlan.isAnnual\">\n            {{ \"annual\" | i18n }} -\n            {{\n              (selectablePlan.basePrice === 0 ? selectablePlan.seatPrice : selectablePlan.basePrice)\n                | currency: \"$\"\n            }}\n            /{{ \"yr\" | i18n }}\n          </ng-container>\n          <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n            {{ \"monthly\" | i18n }} -\n            {{\n              (selectablePlan.basePrice === 0 ? selectablePlan.seatPrice : selectablePlan.basePrice)\n                | currency: \"$\"\n            }}\n            /{{ \"monthAbbr\" | i18n }}\n          </ng-container>\n        </label>\n      </div>\n    </div>\n\n    <div class=\"tw-mb-4\">\n      <h2 class=\"tw-mb-3 tw-text-base tw-font-semibold\">{{ \"paymentType\" | i18n }}</h2>\n      <app-payment [hideCredit]=\"true\" [trialFlow]=\"true\"></app-payment>\n      <app-tax-info [trialFlow]=\"true\" (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    </div>\n\n    <div class=\"tw-flex tw-space-x-2\">\n      <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n        {{ \"startTrial\" | i18n }}\n      </button>\n\n      <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"stepBack()\">Back</button>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UntypedFormBuilder, FormGroup } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"../../settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-billing\",\n  templateUrl: \"./billing.component.html\",\n})\nexport class BillingComponent extends OrganizationPlansComponent {\n  @Input() orgInfoForm: FormGroup;\n  @Output() previousStep = new EventEmitter();\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    router: Router,\n    syncService: SyncService,\n    policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    messagingService: MessagingService,\n    formBuilder: UntypedFormBuilder,\n    organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      apiService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      router,\n      syncService,\n      policyService,\n      organizationService,\n      logService,\n      messagingService,\n      formBuilder,\n      organizationApiService\n    );\n  }\n\n  async ngOnInit() {\n    const additionalSeats = this.product == ProductType.Families ? 0 : 1;\n    this.formGroup.patchValue({\n      name: this.orgInfoForm.value.name,\n      billingEmail: this.orgInfoForm.value.email,\n      additionalSeats: additionalSeats,\n      plan: this.plan,\n      product: this.product,\n    });\n    this.isInTrialFlow = true;\n    await super.ngOnInit();\n  }\n\n  stepBack() {\n    this.previousStep.emit();\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-default-content\",\n  templateUrl: \"default-content.component.html\",\n})\nexport class DefaultContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise1-content\",\n  templateUrl: \"enterprise1-content.component.html\",\n})\nexport class Enterprise1ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise2-content\",\n  templateUrl: \"enterprise2-content.component.html\",\n})\nexport class Enterprise2ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Enterprise Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams1-content\",\n  templateUrl: \"teams1-content.component.html\",\n})\nexport class Teams1ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Teams Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams2-content\",\n  templateUrl: \"teams2-content.component.html\",\n})\nexport class Teams2ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-cnet\",\n  templateUrl: \"logo-cnet.component.html\",\n})\nexport class LogoCnetComponent {}\n","<figure>\n  <figcaption>\n    <cite>\n      <img\n        src=\"../../images/register-layout/cnet-logo.svg\"\n        class=\"tw-mx-auto tw-block tw-w-40\"\n        alt=\"CNET Logo\"\n      />\n    </cite>\n  </figcaption>\n  <blockquote class=\"tw-mx-auto tw-mt-2 tw-max-w-xl tw-px-4 tw-text-center\">\n    \"No more excuses; start using Bitwarden today. The identity you save could be your own. The\n    money definitely will be.\"\n  </blockquote>\n</figure>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-enterprise-content\",\n  templateUrl: \"cnet-enterprise-content.component.html\",\n})\nexport class CnetEnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Enterprise Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-individual-content\",\n  templateUrl: \"cnet-individual-content.component.html\",\n})\nexport class CnetIndividualContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Premium Account Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Secure your account with advanced two-step login</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-teams-content\",\n  templateUrl: \"cnet-teams-content.component.html\",\n})\nexport class CnetTeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Teams Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-abm-enterprise-content\",\n  templateUrl: \"abm-enterprise-content.component.html\",\n})\nexport class AbmEnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-abm-teams-content\",\n  templateUrl: \"abm-teams-content.component.html\",\n})\nexport class AbmTeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","<div *ngIf=\"accountCreateOnly\" class=\"\">\n  <h1 class=\"tw-mt-12 tw-text-center tw-text-xl\">{{ \"createAccount\" | i18n }}</h1>\n  <div\n    class=\"tw-min-w-xl tw-m-auto tw-max-w-xl tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-8\"\n  >\n    <app-register-form\n      [queryParamEmail]=\"email\"\n      [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n      [referenceDataValue]=\"referenceData\"\n    ></app-register-form>\n  </div>\n</div>\n<div *ngIf=\"!accountCreateOnly\">\n  <div class=\"tw-absolute tw--z-10 tw--mt-48 tw-h-[28rem] tw-w-full tw-bg-background-alt2\"></div>\n  <div class=\"tw-min-w-4xl tw-mx-auto tw-flex tw-max-w-screen-xl tw-gap-12 tw-px-4\">\n    <div class=\"tw-w-1/2\">\n      <img\n        alt=\"Bitwarden\"\n        style=\"height: 50px; width: 335px\"\n        class=\"tw-mt-6\"\n        src=\"../../images/register-layout/logo-horizontal-white.svg\"\n      />\n\n      <div class=\"tw-pt-12\">\n        <!-- Layout params are used by marketing to determine left-hand content -->\n        <app-default-content *ngIf=\"layout === 'default'\"></app-default-content>\n        <app-teams-content *ngIf=\"layout === 'teams'\"></app-teams-content>\n        <app-teams1-content *ngIf=\"layout === 'teams1'\"></app-teams1-content>\n        <app-teams2-content *ngIf=\"layout === 'teams2'\"></app-teams2-content>\n        <app-enterprise-content *ngIf=\"layout === 'enterprise'\"></app-enterprise-content>\n        <app-enterprise1-content *ngIf=\"layout === 'enterprise1'\"></app-enterprise1-content>\n        <app-enterprise2-content *ngIf=\"layout === 'enterprise2'\"></app-enterprise2-content>\n        <app-cnet-enterprise-content\n          *ngIf=\"layout === 'cnetcmpgnent'\"\n        ></app-cnet-enterprise-content>\n        <app-cnet-individual-content\n          *ngIf=\"layout === 'cnetcmpgnind'\"\n        ></app-cnet-individual-content>\n        <app-cnet-teams-content *ngIf=\"layout === 'cnetcmpgnteams'\"></app-cnet-teams-content>\n        <app-abm-enterprise-content *ngIf=\"layout === 'abmenterprise'\"></app-abm-enterprise-content>\n        <app-abm-teams-content *ngIf=\"layout === 'abmteams'\"></app-abm-teams-content>\n      </div>\n    </div>\n    <div class=\"tw-w-1/2\">\n      <div class=\"tw-pt-56\">\n        <div class=\"tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background\">\n          <div class=\"tw-flex tw-h-12 tw-w-full tw-items-center tw-rounded-t tw-bg-secondary-100\">\n            <h2 class=\"tw-mb-0 tw-pl-4 tw-text-base tw-font-bold tw-uppercase\">\n              Start your 7-Day free trial of Bitwarden for {{ org }}\n            </h2>\n          </div>\n          <app-vertical-stepper #stepper linear (selectionChange)=\"stepSelectionChange($event)\">\n            <app-vertical-step label=\"Create Account\" [editable]=\"false\" [subLabel]=\"email\">\n              <app-register-form\n                [isInTrialFlow]=\"true\"\n                (createdAccount)=\"createdAccount($event)\"\n                [referenceDataValue]=\"referenceData\"\n              ></app-register-form>\n            </app-vertical-step>\n            <app-vertical-step label=\"Organization Information\" [subLabel]=\"orgInfoSubLabel\">\n              <app-org-info [nameOnly]=\"true\" [formGroup]=\"orgInfoFormGroup\"></app-org-info>\n              <button\n                bitButton\n                buttonType=\"primary\"\n                [disabled]=\"orgInfoFormGroup.get('name').hasError('required')\"\n                cdkStepperNext\n              >\n                Next\n              </button>\n            </app-vertical-step>\n            <app-vertical-step label=\"Billing\" [subLabel]=\"billingSubLabel\">\n              <app-billing\n                *ngIf=\"stepper.selectedIndex === 2\"\n                [plan]=\"plan\"\n                [product]=\"product\"\n                [orgInfoForm]=\"orgInfoFormGroup\"\n                (previousStep)=\"previousStep()\"\n                (onTrialBillingSuccess)=\"billingSuccess($event)\"\n              ></app-billing>\n            </app-vertical-step>\n            <app-vertical-step label=\"Confirmation Details\" [applyBorder]=\"false\">\n              <app-trial-confirmation-details\n                [email]=\"email\"\n                [orgLabel]=\"orgLabel\"\n              ></app-trial-confirmation-details>\n              <div class=\"tw-mb-3 tw-flex\">\n                <button bitButton buttonType=\"primary\" (click)=\"navigateToOrgVault()\">\n                  Get Started\n                </button>\n                <button\n                  bitButton\n                  buttonType=\"secondary\"\n                  (click)=\"navigateToOrgInvite()\"\n                  class=\"tw-ml-3 tw-inline-flex tw-items-center tw-px-3\"\n                >\n                  Invite Users\n                </button>\n              </div>\n            </app-vertical-step>\n          </app-vertical-stepper>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { StepperSelectionEvent } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { Component, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first, Subject, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\n\nimport { RouterService } from \"./../../core/router.service\";\nimport { VerticalStepperComponent } from \"./vertical-stepper/vertical-stepper.component\";\n\n@Component({\n  selector: \"app-trial\",\n  templateUrl: \"trial-initiation.component.html\",\n})\nexport class TrialInitiationComponent implements OnInit, OnDestroy {\n  email = \"\";\n  org = \"\";\n  orgInfoSubLabel = \"\";\n  orgId = \"\";\n  orgLabel = \"\";\n  billingSubLabel = \"\";\n  layout = \"default\";\n  plan: PlanType;\n  product: ProductType;\n  accountCreateOnly = true;\n  policies: Policy[];\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  validOrgs: string[] = [\"teams\", \"enterprise\", \"families\"];\n  referenceData: ReferenceEventRequest;\n  @ViewChild(\"stepper\", { static: false }) verticalStepper: VerticalStepperComponent;\n\n  orgInfoFormGroup = this.formBuilder.group({\n    name: [\"\", [Validators.required]],\n    email: [\"\"],\n  });\n\n  private set referenceDataId(referenceId: string) {\n    if (referenceId != null) {\n      this.referenceData.id = referenceId;\n    } else {\n      this.referenceData.id = (\"; \" + document.cookie)\n        .split(\"; reference=\")\n        .pop()\n        .split(\";\")\n        .shift();\n    }\n\n    if (this.referenceData.id === \"\") {\n      this.referenceData.id = null;\n    }\n  }\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private route: ActivatedRoute,\n    protected router: Router,\n    private formBuilder: UntypedFormBuilder,\n    private titleCasePipe: TitleCasePipe,\n    private stateService: StateService,\n    private logService: LogService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    private i18nService: I18nService,\n    private routerService: RouterService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      this.referenceData = new ReferenceEventRequest();\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n\n      this.referenceDataId = qParams.reference;\n\n      if (!qParams.org) {\n        return;\n      }\n\n      if (qParams.layout) {\n        this.layout = qParams.layout;\n      }\n\n      if (this.validOrgs.includes(qParams.org)) {\n        this.org = qParams.org;\n      } else {\n        this.org = \"families\";\n      }\n\n      this.referenceData.flow = qParams.org;\n\n      // Are they coming from an email for sponsoring a families organization\n      // After logging in redirect them to setup the families sponsorship\n      this.setupFamilySponsorship(qParams.sponsorshipToken);\n\n      this.orgLabel = this.titleCasePipe.transform(this.org);\n      this.accountCreateOnly = false;\n\n      if (this.org === \"families\") {\n        this.plan = PlanType.FamiliesAnnually;\n        this.product = ProductType.Families;\n      } else if (this.org === \"teams\") {\n        this.plan = PlanType.TeamsAnnually;\n        this.product = ProductType.Teams;\n      } else if (this.org === \"enterprise\") {\n        this.plan = PlanType.EnterpriseAnnually;\n        this.product = ProductType.Enterprise;\n      }\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      try {\n        const policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        if (policies.data != null) {\n          const policiesData = policies.data.map((p) => new PolicyData(p));\n          this.policies = policiesData.map((p) => new Policy(p));\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (this.policies != null) {\n      this.policyService\n        .masterPasswordPolicyOptions$(this.policies)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((enforcedPasswordPolicyOptions) => {\n          this.enforcedPolicyOptions = enforcedPasswordPolicyOptions;\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  stepSelectionChange(event: StepperSelectionEvent) {\n    // Set org info sub label\n    if (event.selectedIndex === 1 && this.orgInfoFormGroup.controls.name.value === \"\") {\n      this.orgInfoSubLabel =\n        \"Enter your \" + this.titleCasePipe.transform(this.org) + \" organization information\";\n    } else if (event.previouslySelectedIndex === 1) {\n      this.orgInfoSubLabel = this.orgInfoFormGroup.controls.name.value;\n    }\n\n    //set billing sub label\n    if (event.selectedIndex === 2) {\n      this.billingSubLabel = this.i18nService.t(\"billingTrialSubLabel\");\n    }\n  }\n\n  createdAccount(email: string) {\n    this.email = email;\n    this.orgInfoFormGroup.get(\"email\")?.setValue(email);\n    this.verticalStepper.next();\n  }\n\n  billingSuccess(event: any) {\n    this.orgId = event?.orgId;\n    this.billingSubLabel = event?.subLabelText;\n    this.verticalStepper.next();\n  }\n\n  navigateToOrgVault() {\n    this.router.navigate([\"organizations\", this.orgId, \"vault\"]);\n  }\n\n  navigateToOrgInvite() {\n    this.router.navigate([\"organizations\", this.orgId, \"manage\", \"people\"]);\n  }\n\n  previousStep() {\n    this.verticalStepper.previous();\n  }\n\n  private setupFamilySponsorship(sponsorshipToken: string) {\n    if (sponsorshipToken != null) {\n      const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n        queryParams: { plan: sponsorshipToken },\n      });\n      this.routerService.setPreviousUrl(route.toString());\n    }\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n  deviceIdentifier: string;\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { WebAuthnIFrame } from \"@bitwarden/common/misc/webauthn_iframe\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { TokenRequestTwoFactor } from \"@bitwarden/common/models/request/identityToken/tokenRequestTwoFactor\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService,\n    protected appIdService: AppIdService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      new TokenRequestTwoFactor(this.selectedProviderType, this.token, this.remember),\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      request.deviceIdentifier = await this.appIdService.getAppId();\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithApiKey()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n  }\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"twoStepOptionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"twoStepOptionsTitle\">{{ \"twoStepOptions\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"list-group list-group-flush-2fa\">\n          <div *ngFor=\"let p of providers\" class=\"list-group-item list-group-item-action\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ p.name }}</h3>\n                {{ p.description }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-describedby]=\"p.name\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"choose(p)\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"list-group-item list-group-item-action\" (click)=\"recover()\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img class=\"recovery-code-img\" alt=\"rc logo\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ \"recoveryCodeTitle\" | i18n }}</h3>\n                {{ \"recoveryCodeDesc\" | i18n }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-descibedby]=\"'recoveryCodeTitle' | i18n\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"recover()\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"@bitwarden/angular/components/two-factor-options.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"container\"\n  ngNativeValidate\n  autocomplete=\"off\"\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div\n      class=\"col-5\"\n      [ngClass]=\"{\n        'col-9':\n          selectedProviderType === providerType.Duo ||\n          selectedProviderType === providerType.OrganizationDuo\n      }\"\n    >\n      <p class=\"lead text-center mb-4\">{{ title }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Email ||\n              selectedProviderType === providerType.Authenticator\n            \"\n          >\n            <p *ngIf=\"selectedProviderType === providerType.Authenticator\">\n              {{ \"enterVerificationCodeApp\" | i18n }}\n            </p>\n            <p *ngIf=\"selectedProviderType === providerType.Email\">\n              {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n            </p>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"text\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                inputmode=\"tel\"\n                appInputVerbatim\n              />\n              <small class=\"form-text\" *ngIf=\"selectedProviderType === providerType.Email\">\n                <a\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"sendEmail(true)\"\n                  [appApiAction]=\"emailPromise\"\n                  *ngIf=\"selectedProviderType === providerType.Email\"\n                >\n                  {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n                </a>\n              </small>\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n            <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n            <picture>\n              <source srcset=\"../../images/yubikey.avif\" type=\"image/avif\" />\n              <source srcset=\"../../images/yubikey.webp\" type=\"image/webp\" />\n              <img src=\"../../images/yubikey.jpg\" class=\"rounded img-fluid mb-3\" alt=\"\" />\n            </picture>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"password\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn\">\n            <div id=\"web-authn-frame\" class=\"mb-3\">\n              <iframe id=\"webauthn_iframe\" [allow]=\"webAuthnAllow\"></iframe>\n            </div>\n          </ng-container>\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Duo ||\n              selectedProviderType === providerType.OrganizationDuo\n            \"\n          >\n            <div id=\"duo-frame\" class=\"mb-3\">\n              <iframe id=\"duo_iframe\"></iframe>\n            </div>\n          </ng-container>\n          <i\n            class=\"bwi bwi-spinner text-muted bwi-spin pull-right\"\n            title=\"{{ 'loading' | i18n }}\"\n            *ngIf=\"form.loading && selectedProviderType === providerType.WebAuthn\"\n            aria-hidden=\"true\"\n          ></i>\n          <div class=\"form-check\" *ngIf=\"selectedProviderType != null\">\n            <input\n              id=\"remember\"\n              type=\"checkbox\"\n              name=\"Remember\"\n              class=\"form-check-input\"\n              [(ngModel)]=\"remember\"\n            />\n            <label for=\"remember\" class=\"form-check-label\">{{ \"rememberMe\" | i18n }}</label>\n          </div>\n          <ng-container *ngIf=\"selectedProviderType == null\">\n            <p>{{ \"noTwoStepProviders\" | i18n }}</p>\n            <p>{{ \"noTwoStepProviders2\" | i18n }}</p>\n          </ng-container>\n          <hr />\n          <div [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n          <div class=\"d-flex mb-3\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n              *ngIf=\"\n                selectedProviderType != null &&\n                selectedProviderType !== providerType.Duo &&\n                selectedProviderType !== providerType.OrganizationDuo &&\n                selectedProviderType !== providerType.WebAuthn\n              \"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n          <div class=\"text-center\">\n            <a href=\"#\" appStopClick (click)=\"anotherMethod()\">{{\n              \"useAnotherTwoStepMethod\" | i18n\n            }}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<ng-template #twoFactorOptions></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"@bitwarden/angular/components/two-factor.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { RouterService } from \"../core\";\n\nimport { TwoFactorOptionsComponent } from \"./two-factor-options.component\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  @ViewChild(\"twoFactorOptions\", { read: ViewContainerRef, static: true })\n  twoFactorOptionsModal: ViewContainerRef;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    private modalService: ModalService,\n    route: ActivatedRoute,\n    logService: LogService,\n    twoFactorService: TwoFactorService,\n    appIdService: AppIdService,\n    private routerService: RouterService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService,\n      appIdService\n    );\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async anotherMethod() {\n    const [modal] = await this.modalService.openViewRef(\n      TwoFactorOptionsComponent,\n      this.twoFactorOptionsModal,\n      (comp) => {\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\n          modal.close();\n          this.selectedProviderType = provider;\n          await this.init();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onRecoverSelected.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async goAfterLogIn() {\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class PasswordRequest extends SecretVerificationRequest {\n  newMasterPasswordHash: string;\n  masterPasswordHint: string;\n  key: string;\n}\n","import { Directive } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { PasswordRequest } from \"@bitwarden/common/models/request/passwordRequest\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdatePasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n  currentMasterPassword: string;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n\n  constructor(\n    protected router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async cancel() {\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n\n    const secret: Verification = {\n      type: VerificationType.MasterPassword,\n      secret: this.currentMasterPassword,\n    };\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return false;\n    }\n\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create Request\n      const request = new PasswordRequest();\n      request.masterPasswordHash = await this.cryptoService.hashPassword(\n        this.currentMasterPassword,\n        null\n      );\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.key = encKey[1].encryptedString;\n\n      // Update user's password\n      this.apiService.postPassword(request);\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"masterPasswordInvalidWarning\" | i18n }} </app-callout>\n          <app-callout\n            type=\"info\"\n            [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n            *ngIf=\"enforcedPolicyOptions\"\n          ></app-callout>\n\n          <form\n            #form\n            (ngSubmit)=\"submit()\"\n            [appApiAction]=\"formPromise\"\n            ngNativeValidate\n            autocomplete=\"off\"\n          >\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"currentMasterPassword\"\n                    type=\"password\"\n                    name=\"MasterPasswordHash\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"currentMasterPassword\"\n                    required\n                    appInputVerbatim\n                  />\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"newMasterPassword\"\n                    type=\"password\"\n                    name=\"NewMasterPasswordHash\"\n                    class=\"form-control mb-1\"\n                    [(ngModel)]=\"masterPassword\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                  <app-password-strength\n                    [password]=\"masterPassword\"\n                    [email]=\"email\"\n                    [showText]=\"true\"\n                  ></app-password-strength>\n                </div>\n              </div>\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"masterPasswordRetype\"\n                    type=\"password\"\n                    name=\"MasterPasswordRetype\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"masterPasswordRetype\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n              <i\n                class=\"fa fa-spinner fa-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"changeMasterPassword\" | i18n }}</span>\n            </button>\n            <button (click)=\"cancel()\" type=\"button\" class=\"btn btn-outline-secondary\">\n              <span>{{ \"cancel\" | i18n }}</span>\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { UpdatePasswordComponent as BaseUpdatePasswordComponent } from \"@bitwarden/angular/components/update-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\n\n@Component({\n  selector: \"app-update-password\",\n  templateUrl: \"update-password.component.html\",\n})\nexport class UpdatePasswordComponent extends BaseUpdatePasswordComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      userVerificationService,\n      logService\n    );\n  }\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { OrganizationUserResetPasswordRequest } from \"./organizationUserResetPasswordRequest\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { UpdateTempPasswordRequest } from \"@bitwarden/common/models/request/updateTempPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"updateMasterPasswordWarning\" | i18n }} </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength\n                  [password]=\"masterPassword\"\n                  [email]=\"email\"\n                  [showText]=\"true\"\n                  (passwordStrengthResult)=\"getStrengthResult($event)\"\n                >\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"@bitwarden/angular/components/update-temp-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    syncService: SyncService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","export class VerifyEmailRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VerifyEmailRequest } from \"@bitwarden/common/models/request/verifyEmailRequest\";\n\n@Component({\n  selector: \"app-verify-email-token\",\n  templateUrl: \"verify-email-token.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VerifyEmailTokenComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null) {\n        try {\n          await this.apiService.postAccountVerifyEmailToken(\n            new VerifyEmailRequest(qParams.userId, qParams.token)\n          );\n          if (await this.stateService.getIsAuthenticated()) {\n            await this.apiService.refreshIdentityToken();\n          }\n          this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailVerified\"));\n          this.router.navigate([\"/\"]);\n          return;\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"emailVerifiedFailed\"));\n      this.router.navigate([\"/\"]);\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","export class VerifyDeleteRecoverRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { VerifyDeleteRecoverRequest } from \"@bitwarden/common/models/request/verifyDeleteRecoverRequest\";\n\n@Component({\n  selector: \"app-verify-recover-delete\",\n  templateUrl: \"verify-recover-delete.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VerifyRecoverDeleteComponent implements OnInit {\n  email: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private token: string;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null && qParams.email != null) {\n        this.userId = qParams.userId;\n        this.token = qParams.token;\n        this.email = qParams.email;\n      } else {\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    try {\n      const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\n      this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n          <p class=\"text-center\">\n            <strong>{{ email }}</strong>\n          </p>\n          <p>{{ \"deleteRecoverConfirmDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-danger btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"deleteAccount\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HomeGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return this.router.createUrlTree([\"/login\"], { queryParams: route.queryParams });\n    }\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"/lock\"], { queryParams: route.queryParams });\n    }\n    return this.router.createUrlTree([\"/vault\"], { queryParams: route.queryParams });\n  }\n}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-frontend-layout\",\n  templateUrl: \"frontend-layout.component.html\",\n})\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n    document.body.classList.add(\"layout_frontend\");\n  }\n\n  ngOnDestroy() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<router-outlet></router-outlet>\n<div class=\"container my-5 text-muted text-center\">\n  &copy; {{ year }} Bitwarden Inc. <br />\n  {{ \"versionNumber\" | i18n: version }}\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-footer\",\n  templateUrl: \"footer.component.html\",\n})\nexport class FooterComponent implements OnInit {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n  }\n}\n","<div class=\"container footer text-muted\">\n  <div class=\"row\">\n    <div class=\"col\">&copy; {{ year }} Bitwarden Inc.</div>\n    <div class=\"col text-center\"></div>\n    <div class=\"col text-right\">\n      {{ \"versionNumber\" | i18n: version }}\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-avatar\",\n  template:\n    '<img *ngIf=\"src\" [src]=\"sanitizer.bypassSecurityTrustResourceUrl(src)\" title=\"{{data}}\" ' +\n    \"[ngClass]=\\\"{'rounded-circle': circle}\\\">\",\n})\nexport class AvatarComponent implements OnChanges, OnInit {\n  @Input() data: string;\n  @Input() email: string;\n  @Input() size = 45;\n  @Input() charCount = 2;\n  @Input() textColor = \"#ffffff\";\n  @Input() fontSize = 20;\n  @Input() fontWeight = 300;\n  @Input() dynamic = false;\n  @Input() circle = false;\n\n  src: string;\n\n  constructor(\n    public sanitizer: DomSanitizer,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    if (!this.dynamic) {\n      this.generate();\n    }\n  }\n\n  ngOnChanges() {\n    if (this.dynamic) {\n      this.generate();\n    }\n  }\n\n  private async generate() {\n    const enableGravatars = await this.stateService.getEnableGravitars();\n    if (enableGravatars && this.email != null) {\n      const hashBytes = await this.cryptoFunctionService.hash(\n        this.email.toLowerCase().trim(),\n        \"md5\"\n      );\n      const hash = Utils.fromBufferToHex(hashBytes).toLowerCase();\n      this.src = \"https://www.gravatar.com/avatar/\" + hash + \"?s=\" + this.size + \"&r=pg&d=retro\";\n    } else {\n      let chars: string = null;\n      const upperData = this.data.toUpperCase();\n\n      if (this.charCount > 1) {\n        chars = this.getFirstLetters(upperData, this.charCount);\n      }\n      if (chars == null) {\n        chars = this.unicodeSafeSubstring(upperData, this.charCount);\n      }\n\n      // If the chars contain an emoji, only show it.\n      if (chars.match(Utils.regexpEmojiPresentation)) {\n        chars = chars.match(Utils.regexpEmojiPresentation)[0];\n      }\n\n      const charObj = this.getCharText(chars);\n      const color = Utils.stringToColor(upperData);\n      const svg = this.getSvg(this.size, color);\n      svg.appendChild(charObj);\n      const html = window.document.createElement(\"div\").appendChild(svg).outerHTML;\n      const svgHtml = window.btoa(unescape(encodeURIComponent(html)));\n      this.src = \"data:image/svg+xml;base64,\" + svgHtml;\n    }\n  }\n\n  private getFirstLetters(data: string, count: number): string {\n    const parts = data.split(\" \");\n    if (parts.length > 1) {\n      let text = \"\";\n      for (let i = 0; i < count; i++) {\n        text += this.unicodeSafeSubstring(parts[i], 1);\n      }\n      return text;\n    }\n    return null;\n  }\n\n  private getSvg(size: number, color: string): HTMLElement {\n    const svgTag = window.document.createElement(\"svg\");\n    svgTag.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    svgTag.setAttribute(\"pointer-events\", \"none\");\n    svgTag.setAttribute(\"width\", size.toString());\n    svgTag.setAttribute(\"height\", size.toString());\n    svgTag.style.backgroundColor = color;\n    svgTag.style.width = size + \"px\";\n    svgTag.style.height = size + \"px\";\n    return svgTag;\n  }\n\n  private getCharText(character: string): HTMLElement {\n    const textTag = window.document.createElement(\"text\");\n    textTag.setAttribute(\"text-anchor\", \"middle\");\n    textTag.setAttribute(\"y\", \"50%\");\n    textTag.setAttribute(\"x\", \"50%\");\n    textTag.setAttribute(\"dy\", \"0.35em\");\n    textTag.setAttribute(\"pointer-events\", \"auto\");\n    textTag.setAttribute(\"fill\", this.textColor);\n    textTag.setAttribute(\n      \"font-family\",\n      '\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,' +\n        'sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"'\n    );\n    textTag.textContent = character;\n    textTag.style.fontWeight = this.fontWeight.toString();\n    textTag.style.fontSize = this.fontSize + \"px\";\n    return textTag;\n  }\n\n  private unicodeSafeSubstring(str: string, count: number) {\n    const characters = str.match(/./gu);\n    return characters != null ? characters.slice(0, count).join(\"\") : \"\";\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","import { FocusableOption } from \"@angular/cdk/a11y\";\nimport { Directive, ElementRef, HostBinding } from \"@angular/core\";\n\n@Directive({\n  selector: \"[bitMenuItem]\",\n})\nexport class MenuItemDirective implements FocusableOption {\n  @HostBinding(\"class\") classList = [\n    \"tw-block\",\n    \"tw-py-1\",\n    \"tw-px-4\",\n    \"!tw-text-main\",\n    \"!tw-no-underline\",\n    \"tw-cursor-pointer\",\n    \"tw-border-none\",\n    \"tw-bg-background\",\n    \"tw-text-left\",\n    \"hover:tw-bg-secondary-100\",\n    \"focus:tw-bg-secondary-100\",\n    \"focus:tw-z-50\",\n    \"focus:tw-outline-none\",\n    \"focus:tw-ring\",\n    \"focus:tw-ring-offset-2\",\n    \"focus:tw-ring-primary-700\",\n    \"active:!tw-ring-0\",\n    \"active:!tw-ring-offset-0\",\n  ];\n  @HostBinding(\"attr.role\") role = \"menuitem\";\n  @HostBinding(\"tabIndex\") tabIndex = \"-1\";\n\n  constructor(private elementRef: ElementRef) {}\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n}\n","<ng-template>\n  <div\n    (click)=\"closed.emit()\"\n    class=\"tw-flex tw-shrink-0 tw-flex-col tw-rounded tw-border tw-border-solid tw-border-secondary-500 tw-bg-background tw-bg-clip-padding tw-py-2\"\n    role=\"menu\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport {\n  Component,\n  Output,\n  TemplateRef,\n  ViewChild,\n  EventEmitter,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n} from \"@angular/core\";\n\nimport { MenuItemDirective } from \"./menu-item.directive\";\n\n@Component({\n  selector: \"bit-menu\",\n  templateUrl: \"./menu.component.html\",\n  exportAs: \"menuComponent\",\n})\nexport class MenuComponent implements AfterContentInit {\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n  @Output() closed = new EventEmitter<void>();\n  @ContentChildren(MenuItemDirective, { descendants: true })\n  menuItems: QueryList<MenuItemDirective>;\n  keyManager: FocusKeyManager<MenuItemDirective>;\n\n  ngAfterContentInit() {\n    this.keyManager = new FocusKeyManager(this.menuItems).withWrap();\n  }\n}\n","import { Overlay, OverlayConfig, OverlayRef } from \"@angular/cdk/overlay\";\nimport { TemplatePortal } from \"@angular/cdk/portal\";\nimport {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { filter, mergeWith } from \"rxjs/operators\";\n\nimport { MenuComponent } from \"./menu.component\";\n\n@Directive({\n  selector: \"[bitMenuTriggerFor]\",\n})\nexport class MenuTriggerForDirective implements OnDestroy {\n  @HostBinding(\"attr.aria-expanded\") isOpen = false;\n  @HostBinding(\"attr.aria-haspopup\") hasPopup = \"menu\";\n  @HostBinding(\"attr.role\") role = \"button\";\n\n  @Input(\"bitMenuTriggerFor\") menu: MenuComponent;\n\n  private overlayRef: OverlayRef;\n  private defaultMenuConfig: OverlayConfig = {\n    panelClass: \"bit-menu-panel\",\n    hasBackdrop: true,\n    backdropClass: \"cdk-overlay-transparent-backdrop\",\n    scrollStrategy: this.overlay.scrollStrategies.reposition(),\n    positionStrategy: this.overlay\n      .position()\n      .flexibleConnectedTo(this.elementRef)\n      .withPositions([\n        {\n          originX: \"start\",\n          originY: \"bottom\",\n          overlayX: \"start\",\n          overlayY: \"top\",\n        },\n        {\n          originX: \"end\",\n          originY: \"bottom\",\n          overlayX: \"end\",\n          overlayY: \"top\",\n        },\n      ])\n      .withLockedPosition(true)\n      .withFlexibleDimensions(false)\n      .withPush(false),\n  };\n  private closedEventsSub: Subscription;\n  private keyDownEventsSub: Subscription;\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private viewContainerRef: ViewContainerRef,\n    private overlay: Overlay\n  ) {}\n\n  @HostListener(\"click\") toggleMenu() {\n    this.isOpen ? this.destroyMenu() : this.openMenu();\n  }\n\n  ngOnDestroy() {\n    this.disposeAll();\n  }\n\n  private openMenu() {\n    if (this.menu == null) {\n      throw new Error(\"Cannot find bit-menu element\");\n    }\n\n    this.isOpen = true;\n    this.overlayRef = this.overlay.create(this.defaultMenuConfig);\n\n    const templatePortal = new TemplatePortal(this.menu.templateRef, this.viewContainerRef);\n    this.overlayRef.attach(templatePortal);\n\n    this.closedEventsSub = this.getClosedEvents().subscribe((event: KeyboardEvent | undefined) => {\n      if (event?.key === \"Tab\") {\n        // Required to ensure tab order resumes correctly\n        this.elementRef.nativeElement.focus();\n      }\n      this.destroyMenu();\n    });\n    this.keyDownEventsSub = this.overlayRef\n      .keydownEvents()\n      .subscribe((event: KeyboardEvent) => this.menu.keyManager.onKeydown(event));\n  }\n\n  private destroyMenu() {\n    if (this.overlayRef == null || !this.isOpen) {\n      return;\n    }\n\n    this.isOpen = false;\n    this.disposeAll();\n  }\n\n  private getClosedEvents(): Observable<any> {\n    const detachments = this.overlayRef.detachments();\n    const escKey = this.overlayRef\n      .keydownEvents()\n      .pipe(filter((event: KeyboardEvent) => event.key === \"Escape\" || event.key === \"Tab\"));\n    const backdrop = this.overlayRef.backdropClick();\n    const menuClosed = this.menu.closed;\n\n    return detachments.pipe(mergeWith(escKey, backdrop, menuClosed));\n  }\n\n  private disposeAll() {\n    this.closedEventsSub?.unsubscribe();\n    this.overlayRef?.dispose();\n    this.keyDownEventsSub?.unsubscribe();\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-menu-divider\",\n  templateUrl: \"./menu-divider.component.html\",\n})\nexport class MenuDividerComponent {}\n","<div\n  class=\"tw-my-2 tw-border-0 tw-border-t tw-border-solid tw-border-t-secondary-500\"\n  role=\"separator\"\n></div>\n","<nav class=\"navbar navbar-expand navbar-dark\" [ngClass]=\"{ 'nav-background-alt': selfHosted }\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\" appA11yTitle=\"{{ 'pageTitle' | i18n: 'Bitwarden' }}\">\n      <i class=\"bwi bwi-shield\" aria-hidden=\"true\"></i>\n    </a>\n    <div class=\"collapse navbar-collapse\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/vault\">{{ \"vaults\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/sends\">{{ \"send\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/tools\">{{ \"tools\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/reports\">{{ \"reports\" | i18n }}</a>\n        </li>\n        <li\n          *ngIf=\"(organizations$ | async)?.length >= 1\"\n          class=\"nav-item\"\n          routerLinkActive=\"active\"\n        >\n          <a class=\"nav-link\" [routerLink]=\"['/organizations', (organizations$ | async)[0].id]\">{{\n            \"organizations\" | i18n\n          }}</a>\n        </li>\n        <ng-container *ngIf=\"providers.length >= 1\">\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length == 1\">\n            <a class=\"nav-link\" [routerLink]=\"['/providers', providers[0].id]\">{{\n              \"provider\" | i18n\n            }}</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length > 1\">\n            <a class=\"nav-link\" routerLink=\"/providers\">{{ \"provider\" | i18n }}</a>\n          </li>\n        </ng-container>\n      </ul>\n    </div>\n    <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\">\n      <li>\n        <button\n          [bitMenuTriggerFor]=\"accountMenu\"\n          class=\"tw-border-0 tw-bg-transparent tw-text-alt2 tw-opacity-70 hover:tw-opacity-90\"\n        >\n          <i class=\"bwi bwi-user-circle bwi-lg\" aria-hidden=\"true\"></i>\n          <i class=\"bwi bwi-caret-down bwi-sm\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu class=\"dropdown-menu\" #accountMenu>\n          <div class=\"tw-flex tw-min-w-[200px] tw-max-w-[300px] tw-flex-col\">\n            <div\n              class=\"tw-flex tw-items-center tw-py-1 tw-px-4 tw-leading-tight tw-text-info\"\n              *ngIf=\"name\"\n              appStopProp\n            >\n              <app-avatar\n                [data]=\"name\"\n                [email]=\"email\"\n                size=\"25\"\n                fontSize=\"14\"\n                [circle]=\"true\"\n              ></app-avatar>\n              <div class=\"tw-ml-2 tw-block tw-overflow-hidden tw-whitespace-nowrap\">\n                <span>{{ \"loggedInAs\" | i18n }}</span>\n                <small class=\"tw-block tw-overflow-hidden tw-whitespace-nowrap tw-text-muted\">{{\n                  name\n                }}</small>\n              </div>\n            </div>\n            <bit-menu-divider></bit-menu-divider>\n            <a bitMenuItem routerLink=\"/settings/account\">\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"accountSettings\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/help/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-question-circle\" aria-hidden=\"true\"></i>\n              {{ \"getHelp\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/download/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"getApps\" | i18n }}\n            </a>\n            <bit-menu-divider></bit-menu-divider>\n            <button bitMenuItem type=\"button\" (click)=\"lock()\">\n              <i class=\"bwi bwi-fw bwi-lock\" aria-hidden=\"true\"></i>\n              {{ \"lockNow\" | i18n }}\n            </button>\n            <button bitMenuItem type=\"button\" (click)=\"logOut()\">\n              <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </bit-menu>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport {\n  canAccessAdmin,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"navbar.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class NavbarComponent implements OnInit {\n  selfHosted = false;\n  name: string;\n  email: string;\n  providers: Provider[] = [];\n  organizations$: Observable<Organization[]>;\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private providerService: ProviderService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private i18nService: I18nService\n  ) {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.name = await this.tokenService.getName();\n    this.email = await this.tokenService.getEmail();\n    if (this.name == null || this.name.trim() === \"\") {\n      this.name = this.email;\n    }\n\n    // Ensure providers and organizations are loaded\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n    this.providers = await this.providerService.getAll();\n\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      canAccessAdmin(this.i18nService)\n    );\n  }\n\n  lock() {\n    this.messagingService.send(\"lockVault\");\n  }\n\n  logOut() {\n    this.messagingService.send(\"logout\");\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-user-layout\",\n  templateUrl: \"user-layout.component.html\",\n})\nexport class UserLayoutComponent implements OnInit {\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","<div *ngIf=\"loaded && activeOrganization != null\" class=\"tw-flex\">\n  <button\n    class=\"tw-flex tw-items-center tw-border-none tw-bg-background-alt\"\n    type=\"button\"\n    id=\"pickerButton\"\n    [appA11yTitle]=\"'organizationPicker' | i18n\"\n    [bitMenuTriggerFor]=\"orgPickerMenu\"\n  >\n    <app-avatar\n      [data]=\"activeOrganization.name\"\n      size=\"45\"\n      [circle]=\"true\"\n      [dynamic]=\"true\"\n    ></app-avatar>\n    <div class=\"tw-flex\">\n      <div class=\"org-name tw-ml-3\">\n        <span>{{ activeOrganization.name }}</span>\n        <small class=\"tw-text-muted\">{{ \"organization\" | i18n }}</small>\n      </div>\n      <div class=\"tw-ml-3\">\n        <i class=\"bwi bwi-angle-down tw-text-main\" aria-hidden=\"true\"></i>\n      </div>\n    </div>\n  </button>\n  <div>\n    <div\n      class=\"tw-ml-3 tw-rounded tw-border tw-border-solid tw-border-danger-500 tw-text-danger\"\n      *ngIf=\"!activeOrganization.enabled\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"organizationIsDisabled\" | i18n }}\n      </div>\n    </div>\n    <div\n      class=\"tw-ml-3 tw-rounded tw-border tw-border-solid tw-border-info-500 tw-text-info\"\n      *ngIf=\"activeOrganization.isProviderUser\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"accessingUsingProvider\" | i18n: activeOrganization.providerName }}\n      </div>\n    </div>\n  </div>\n\n  <bit-menu #orgPickerMenu>\n    <ul aria-labelledby=\"pickerButton\" class=\"tw-m-0 tw-p-0\">\n      <li\n        *ngFor=\"let org of organizations$ | async\"\n        class=\"tw-flex tw-list-none tw-flex-col\"\n        role=\"none\"\n      >\n        <a bitMenuItem [routerLink]=\"['/organizations', org.id]\">\n          <i\n            class=\"bwi bwi-check mr-2\"\n            [ngClass]=\"org.id === activeOrganization.id ? 'visible' : 'invisible'\"\n          >\n            <span class=\"tw-sr-only\">{{ \"currentOrganization\" | i18n }}</span>\n          </i>\n          {{ org.name }}\n        </a>\n      </li>\n      <bit-menu-divider></bit-menu-divider>\n      <li class=\"tw-list-none\" role=\"none\">\n        <a bitMenuItem routerLink=\"/create-organization\">\n          <i class=\"bwi bwi-plus mr-2\"></i>\n          {{ \"newOrganization\" | i18n }}</a\n        >\n      </li>\n    </ul>\n  </bit-menu>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport {\n  canAccessAdmin,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-switcher\",\n  templateUrl: \"organization-switcher.component.html\",\n})\nexport class OrganizationSwitcherComponent implements OnInit {\n  constructor(private organizationService: OrganizationService, private i18nService: I18nService) {}\n\n  @Input() activeOrganization: Organization = null;\n  organizations$: Observable<Organization[]>;\n\n  loaded = false;\n\n  async ngOnInit() {\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      canAccessAdmin(this.i18nService)\n    );\n\n    this.loaded = true;\n  }\n}\n","<app-navbar></app-navbar>\n<ng-container *ngIf=\"organization$ | async as organization\">\n  <div class=\"org-nav\" *ngIf=\"organization\">\n    <div class=\"container d-flex\">\n      <div class=\"d-flex flex-column\">\n        <app-organization-switcher\n          class=\"my-auto pl-1\"\n          [activeOrganization]=\"organization\"\n        ></app-organization-switcher>\n        <ul class=\"nav nav-tabs\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"vault\" routerLinkActive=\"active\">\n              <i class=\"bwi bwi-lock\" aria-hidden=\"true\"></i>\n              {{ \"vault\" | i18n }}\n            </a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"canShowManageTab(organization)\">\n            <a\n              class=\"nav-link\"\n              [routerLink]=\"getManageRoute(organization)\"\n              routerLinkActive=\"active\"\n            >\n              <i class=\"bwi bwi-sliders\" aria-hidden=\"true\"></i>\n              {{ \"manage\" | i18n }}\n            </a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"canShowToolsTab(organization)\">\n            <a\n              class=\"nav-link\"\n              [routerLink]=\"getToolsRoute(organization)\"\n              routerLinkActive=\"active\"\n            >\n              <i class=\"bwi bwi-wrench\" aria-hidden=\"true\"></i>\n              {{ \"tools\" | i18n }}\n            </a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"canShowSettingsTab(organization)\">\n            <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n              <i class=\"bwi bwi-cogs\" aria-hidden=\"true\"></i>\n              {{ \"settings\" | i18n }}\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</ng-container>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { map, mergeMap, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport {\n  OrganizationService,\n  getOrganizationById,\n  canAccessManageTab,\n  canAccessSettingsTab,\n  canAccessToolsTab,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-layout\",\n  templateUrl: \"organization-layout.component.html\",\n})\nexport class OrganizationLayoutComponent implements OnInit, OnDestroy {\n  organization$: Observable<Organization>;\n  businessTokenPromise: Promise<void>;\n\n  private _destroy = new Subject<void>();\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n\n    this.organization$ = this.route.params\n      .pipe(takeUntil(this._destroy))\n      .pipe<string>(map((p) => p.organizationId))\n      .pipe(\n        mergeMap((id) => {\n          return this.organizationService.organizations$\n            .pipe(takeUntil(this._destroy))\n            .pipe(getOrganizationById(id));\n        })\n      );\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  canShowManageTab(organization: Organization): boolean {\n    return canAccessManageTab(organization);\n  }\n\n  canShowToolsTab(organization: Organization): boolean {\n    return canAccessToolsTab(organization);\n  }\n\n  canShowSettingsTab(organization: Organization): boolean {\n    return canAccessSettingsTab(organization);\n  }\n\n  getToolsRoute(organization: Organization): string {\n    return organization.canAccessImportExport ? \"tools/import\" : \"tools/exposed-passwords-report\";\n  }\n\n  getManageRoute(organization: Organization): string {\n    let route: string;\n    switch (true) {\n      case organization.canManageUsers:\n        route = \"manage/people\";\n        break;\n      case organization.canViewAssignedCollections || organization.canViewAllCollections:\n        route = \"manage/collections\";\n        break;\n      case organization.canManageGroups:\n        route = \"manage/groups\";\n        break;\n      case organization.canManagePolicies:\n        route = \"manage/policies\";\n        break;\n      case organization.canManageSso:\n        route = \"manage/sso\";\n        break;\n      case organization.canManageScim:\n        route = \"manage/scim\";\n        break;\n      case organization.canAccessEventLogs:\n        route = \"manage/events\";\n        break;\n    }\n    return route;\n  }\n}\n","export class SelectionReadOnlyRequest {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\n    this.id = id;\n    this.readOnly = readOnly;\n    this.hidePasswords = hidePasswords;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"collectionAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n            appAutofocus\n            [disabled]=\"!this.canSave\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n            [disabled]=\"!this.canSave\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <ng-container *ngIf=\"accessGroups\">\n          <h3 class=\"mt-4 d-flex mb-0\">\n            {{ \"groupAccess\" | i18n }}\n            <div class=\"ml-auto\" *ngIf=\"groups && groups.length && this.canSave\">\n              <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"selectAll\" | i18n }}\n              </button>\n              <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"unselectAll\" | i18n }}\n              </button>\n            </div>\n          </h3>\n          <div *ngIf=\"!groups || !groups.length\">\n            {{ \"noGroupsInList\" | i18n }}\n          </div>\n          <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let g of groups; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.checked\"\n                    name=\"Groups[{{ i }}].Checked\"\n                    [disabled]=\"g.accessAll || !this.canSave\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(g)\">\n                  {{ g.name }}\n                  <ng-container *ngIf=\"g.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter text-muted bwi-fw\"\n                      title=\"{{ 'groupAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"groupAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.hidePasswords\"\n                    name=\"Groups[{{ i }}].HidePasswords\"\n                    [disabled]=\"!g.checked || g.accessAll || !this.canSave\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.readOnly\"\n                    name=\"Groups[{{ i }}].ReadOnly\"\n                    [disabled]=\"!g.checked || g.accessAll || !this.canSave\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"this.canSave\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"this.canDelete\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { CollectionRequest } from \"@bitwarden/common/models/request/collectionRequest\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/groupResponse\";\n\n@Component({\n  selector: \"app-collection-add-edit\",\n  templateUrl: \"collection-add-edit.component.html\",\n})\nexport class CollectionAddEditComponent implements OnInit {\n  @Input() collectionId: string;\n  @Input() organizationId: string;\n  @Input() canSave: boolean;\n  @Input() canDelete: boolean;\n  @Output() onSavedCollection = new EventEmitter();\n  @Output() onDeletedCollection = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  accessGroups = false;\n  title: string;\n  name: string;\n  externalId: string;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  private orgKey: SymmetricCryptoKey;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    const organization = await this.organizationService.get(this.organizationId);\n    this.accessGroups = organization.useGroups;\n    this.editMode = this.loading = this.collectionId != null;\n    if (this.accessGroups) {\n      const groupsResponse = await this.apiService.getGroups(this.organizationId);\n      this.groups = groupsResponse.data\n        .map((r) => r)\n        .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    }\n    this.orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editCollection\");\n      try {\n        const collection = await this.apiService.getCollectionDetails(\n          this.organizationId,\n          this.collectionId\n        );\n        this.name = await this.cryptoService.decryptToUtf8(\n          new EncString(collection.name),\n          this.orgKey\n        );\n        this.externalId = collection.externalId;\n        if (collection.groups != null && this.groups.length > 0) {\n          collection.groups.forEach((s) => {\n            const group = this.groups.filter((g) => !g.accessAll && g.id === s.id);\n            if (group != null && group.length > 0) {\n              (group[0] as any).checked = true;\n              (group[0] as any).readOnly = s.readOnly;\n              (group[0] as any).hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addCollection\");\n    }\n\n    this.groups.forEach((g) => {\n      if (g.accessAll) {\n        (g as any).checked = true;\n      }\n    });\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    if (g.accessAll) {\n      return;\n    }\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n      (g as any).hidePasswords = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    if (this.orgKey == null) {\n      throw new Error(\"No encryption key for this organization.\");\n    }\n\n    const request = new CollectionRequest();\n    request.name = (await this.cryptoService.encrypt(this.name, this.orgKey)).encryptedString;\n    request.externalId = this.externalId;\n    request.groups = this.groups\n      .filter((g) => (g as any).checked && !g.accessAll)\n      .map(\n        (g) => new SelectionReadOnlyRequest(g.id, !!(g as any).readOnly, !!(g as any).hidePasswords)\n      );\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putCollection(\n          this.organizationId,\n          this.collectionId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.postCollection(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedCollectionId\" : \"createdCollectionId\", this.name)\n      );\n      this.onSavedCollection.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteCollection(this.organizationId, this.collectionId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", this.name)\n      );\n      this.onDeletedCollection.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Directive, ElementRef, HostBinding, Input } from \"@angular/core\";\n\ntype BadgeTypes = \"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\";\n\nconst styles: Record<BadgeTypes, string[]> = {\n  primary: [\"tw-bg-primary-500\"],\n  secondary: [\"tw-bg-text-muted\"],\n  success: [\"tw-bg-success-500\"],\n  danger: [\"tw-bg-danger-500\"],\n  warning: [\"tw-bg-warning-500\"],\n  info: [\"tw-bg-info-500\"],\n};\n\nconst hoverStyles: Record<BadgeTypes, string[]> = {\n  primary: [\"hover:tw-bg-primary-700\"],\n  secondary: [\"hover:tw-bg-secondary-700\"],\n  success: [\"hover:tw-bg-success-700\"],\n  danger: [\"hover:tw-bg-danger-700\"],\n  warning: [\"hover:tw-bg-warning-700\"],\n  info: [\"hover:tw-bg-info-700\"],\n};\n\n@Directive({\n  selector: \"span[bitBadge], a[bitBadge], button[bitBadge]\",\n})\nexport class BadgeDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-inline\",\n      \"tw-py-0.5\",\n      \"tw-px-1.5\",\n      \"tw-font-bold\",\n      \"tw-text-center\",\n      \"!tw-text-contrast\",\n      \"tw-rounded\",\n      \"tw-border-none\",\n      \"tw-box-border\",\n      \"tw-whitespace-no-wrap\",\n      \"tw-text-xs\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n      \"focus:tw-ring\",\n      \"focus:tw-ring-offset-2\",\n      \"focus:tw-ring-primary-700\",\n    ]\n      .concat(styles[this.badgeType])\n      .concat(this.hasHoverEffects ? hoverStyles[this.badgeType] : []);\n  }\n\n  @Input() badgeType: BadgeTypes = \"primary\";\n\n  private hasHoverEffects = false;\n\n  constructor(el: ElementRef<Element>) {\n    this.hasHoverEffects = el?.nativeElement?.nodeName != \"SPAN\";\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAccessTitle\">\n          {{ \"userAccess\" | i18n }}\n          <small>{{ entityName }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading || !users\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <cdk-virtual-scroll-viewport\n        itemSize=\"46\"\n        minBufferPx=\"600\"\n        maxBufferPx=\"1200\"\n        [style]=\"scrollViewportStyle\"\n      >\n        <div class=\"modal-body\" *ngIf=\"!loading && users && searchedUsers\">\n          <div class=\"d-flex\">\n            <div class=\"mr-3\">\n              <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n              <input\n                type=\"search\"\n                class=\"form-control form-control-sm\"\n                id=\"search\"\n                placeholder=\"{{ 'search' | i18n }}\"\n                name=\"SearchText\"\n                [(ngModel)]=\"searchText\"\n              />\n            </div>\n            <div class=\"btn-group btn-group-sm\" role=\"group\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: !showSelected }\"\n                (click)=\"filterSelected(false)\"\n              >\n                {{ \"all\" | i18n }}\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: showSelected }\"\n                (click)=\"filterSelected(true)\"\n              >\n                {{ \"selected\" | i18n }}\n                <span bitBadge badgeType=\"info\" *ngIf=\"selectedCount\">{{ selectedCount }}</span>\n              </button>\n            </div>\n          </div>\n          <ng-container *ngIf=\"!searchedUsers.length\">\n            <hr />\n            {{ \"noUsersInList\" | i18n }}\n          </ng-container>\n          <table class=\"table table-hover table-list mb-0\" [hidden]=\"!searchedUsers.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th *ngIf=\"entity === 'collection'\">&nbsp;</th>\n                <th>{{ \"userType\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"hidePasswords\" | i18n }}\n                </th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"readOnly\" | i18n }}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *cdkVirtualFor=\"let u of searchedUsers\" class=\"\">\n                <td class=\"table-list-checkbox\" (click)=\"check(u)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.checked\"\n                    name=\"{{ u.id.substr(0, 8) }}_Checked\"\n                    [disabled]=\"entity === 'collection' && u.accessAll\"\n                    (change)=\"selectedChanged(u)\"\n                    appStopProp\n                  />\n                </td>\n                <td width=\"30\" (click)=\"check(u)\">\n                  <app-avatar\n                    [data]=\"u | userName\"\n                    [email]=\"u.email\"\n                    size=\"25\"\n                    [circle]=\"true\"\n                    [fontSize]=\"14\"\n                  >\n                  </app-avatar>\n                </td>\n                <td>\n                  {{ u.email }}\n                  <span\n                    bitBadge\n                    badgeType=\"secondary\"\n                    *ngIf=\"u.status === organizationUserStatusType.Invited\"\n                    >{{ \"invited\" | i18n }}</span\n                  >\n                  <span\n                    bitBadge\n                    badgeType=\"warning\"\n                    *ngIf=\"u.status === organizationUserStatusType.Accepted\"\n                    >{{ \"accepted\" | i18n }}</span\n                  >\n                  <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n                </td>\n                <td *ngIf=\"entity === 'collection'\">\n                  <ng-container *ngIf=\"u.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter\"\n                      title=\"{{ 'userAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"userAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td>\n                  <span *ngIf=\"u.type === organizationUserType.Owner\">{{ \"owner\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Admin\">{{ \"admin\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Manager\">{{\n                    \"manager\" | i18n\n                  }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.User\">{{ \"user\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Custom\">{{ \"custom\" | i18n }}</span>\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.hidePasswords\"\n                    name=\"{{ u.id.substr(0, 8) }}_HidePasswords\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.readOnly\"\n                    name=\"{{ u.id.substr(0, 8) }}_ReadOnly\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </cdk-virtual-scroll-viewport>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/models/response/organizationUserResponse\";\n\n@Component({\n  selector: \"app-entity-users\",\n  templateUrl: \"entity-users.component.html\",\n  providers: [SearchPipe],\n})\nexport class EntityUsersComponent implements OnInit {\n  @Input() entity: \"group\" | \"collection\";\n  @Input() entityId: string;\n  @Input() entityName: string;\n  @Input() organizationId: string;\n  @Output() onEditedUsers = new EventEmitter();\n\n  organizationUserType = OrganizationUserType;\n  organizationUserStatusType = OrganizationUserStatusType;\n\n  showSelected = false;\n  loading = true;\n  formPromise: Promise<any>;\n  selectedCount = 0;\n  searchText: string;\n\n  private allUsers: OrganizationUserUserDetailsResponse[] = [];\n\n  constructor(\n    private search: SearchPipe,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadUsers();\n    this.loading = false;\n  }\n\n  get users() {\n    if (this.showSelected) {\n      return this.allUsers.filter((u) => (u as any).checked);\n    } else {\n      return this.allUsers;\n    }\n  }\n\n  get searchedUsers() {\n    return this.search.transform(this.users, this.searchText, \"name\", \"email\", \"id\");\n  }\n\n  get scrollViewportStyle() {\n    return `min-height: 120px; height: ${120 + this.searchedUsers.length * 46}px`;\n  }\n\n  async loadUsers() {\n    const users = await this.apiService.getOrganizationUsers(this.organizationId);\n    this.allUsers = users.data.map((r) => r).sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    if (this.entity === \"group\") {\n      const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => u.id === s);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n          }\n        });\n      }\n    } else if (this.entity === \"collection\") {\n      const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => !u.accessAll && u.id === s.id);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n            (user[0] as any).readOnly = s.readOnly;\n            (user[0] as any).hidePasswords = s.hidePasswords;\n          }\n        });\n      }\n    }\n\n    this.allUsers.forEach((u) => {\n      if (this.entity === \"collection\" && u.accessAll) {\n        (u as any).checked = true;\n      }\n      if ((u as any).checked) {\n        this.selectedCount++;\n      }\n    });\n  }\n\n  check(u: OrganizationUserUserDetailsResponse) {\n    if (this.entity === \"collection\" && u.accessAll) {\n      return;\n    }\n    (u as any).checked = !(u as any).checked;\n    this.selectedChanged(u);\n  }\n\n  selectedChanged(u: OrganizationUserUserDetailsResponse) {\n    if ((u as any).checked) {\n      this.selectedCount++;\n    } else {\n      if (this.entity === \"collection\") {\n        (u as any).readOnly = false;\n        (u as any).hidePasswords = false;\n      }\n      this.selectedCount--;\n    }\n  }\n\n  filterSelected(showSelected: boolean) {\n    this.showSelected = showSelected;\n  }\n\n  async submit() {\n    try {\n      if (this.entity === \"group\") {\n        const selections = this.users.filter((u) => (u as any).checked).map((u) => u.id);\n        this.formPromise = this.apiService.putGroupUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      } else {\n        const selections = this.users\n          .filter((u) => (u as any).checked && !u.accessAll)\n          .map(\n            (u) =>\n              new SelectionReadOnlyRequest(u.id, !!(u as any).readOnly, !!(u as any).hidePasswords)\n          );\n        this.formPromise = this.apiService.putCollectionUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedUsers\"));\n      this.onEditedUsers.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"collections\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button\n      type=\"button\"\n      *ngIf=\"this.canCreate\"\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"add()\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newCollection\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging()\n      ? pagedCollections\n      : (collections | search: searchText:'name':'id')) as searchedCollections\n  \"\n>\n  <p *ngIf=\"!searchedCollections.length\">{{ \"noCollectionsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedCollections.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of searchedCollections\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown *ngIf=\"this.canEdit(c) || this.canDelete(c)\">\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canEdit(c)\"\n                (click)=\"users(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item text-danger\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canDelete(c)\"\n                (click)=\"delete(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport {\n  CollectionDetailsResponse,\n  CollectionResponse,\n} from \"@bitwarden/common/models/response/collectionResponse\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\nimport { CollectionAddEditComponent } from \"./collection-add-edit.component\";\nimport { EntityUsersComponent } from \"./entity-users.component\";\n\n@Component({\n  selector: \"app-org-manage-collections\",\n  templateUrl: \"collections.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CollectionsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organization: Organization;\n  canCreate = false;\n  organizationId: string;\n  collections: CollectionView[];\n  assignedCollections: CollectionView[];\n  pagedCollections: CollectionView[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedCollectionsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private collectionService: CollectionService,\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    this.canCreate = this.organization.canCreateNewCollections;\n\n    const decryptCollections = async (r: ListResponse<CollectionResponse>) => {\n      const collections = r.data\n        .filter((c) => c.organizationId === this.organizationId)\n        .map((d) => new Collection(new CollectionData(d as CollectionDetailsResponse)));\n      return await this.collectionService.decryptMany(collections);\n    };\n\n    if (this.organization.canViewAssignedCollections) {\n      const response = await this.apiService.getUserCollections();\n      this.assignedCollections = await decryptCollections(response);\n    }\n\n    if (this.organization.canViewAllCollections) {\n      const response = await this.apiService.getCollections(this.organizationId);\n      this.collections = await decryptCollections(response);\n    } else {\n      this.collections = this.assignedCollections;\n    }\n\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.collections || this.collections.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCollections.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedCollectionsCount > this.pageSize) {\n      pagedSize = this.pagedCollectionsCount;\n    }\n    if (this.collections.length > pagedLength) {\n      this.pagedCollections = this.pagedCollections.concat(\n        this.collections.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCollectionsCount = this.pagedCollections.length;\n    this.didScroll = this.pagedCollections.length > this.pageSize;\n  }\n\n  async edit(collection: CollectionView) {\n    const canCreate = collection == null && this.canCreate;\n    const canEdit = collection != null && this.canEdit(collection);\n    const canDelete = collection != null && this.canDelete(collection);\n\n    if (!(canCreate || canEdit || canDelete)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      CollectionAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.collectionId = collection != null ? collection.id : null;\n        comp.canSave = canCreate || canEdit;\n        comp.canDelete = canDelete;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedCollection.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedCollection.subscribe(() => {\n          modal.close();\n          this.removeCollection(collection);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(collection: CollectionView) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      collection.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteCollection(this.organizationId, collection.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", collection.name)\n      );\n      this.removeCollection(collection);\n    } catch (e) {\n      this.logService.error(e);\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n    }\n  }\n\n  async users(collection: CollectionView) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"collection\";\n        comp.entityId = collection.id;\n        comp.entityName = collection.name;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onEditedUsers.subscribe(() => {\n          this.load();\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedCollections = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.collections && this.collections.length > this.pageSize;\n  }\n\n  canEdit(collection: CollectionView) {\n    if (this.organization.canEditAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canEditAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  canDelete(collection: CollectionView) {\n    if (this.organization.canDeleteAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canDeleteAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  private removeCollection(collection: CollectionView) {\n    const index = this.collections.indexOf(collection);\n    if (index > -1) {\n      this.collections.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventView {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: EventType;\n  installationId: string;\n\n  constructor(data: Required<EventView>) {\n    this.message = data.message;\n    this.humanReadableMessage = data.humanReadableMessage;\n    this.appIcon = data.appIcon;\n    this.appName = data.appName;\n    this.userId = data.userId;\n    this.userName = data.userName;\n    this.userEmail = data.userEmail;\n    this.date = data.date;\n    this.ip = data.ip;\n    this.type = data.type;\n    this.installationId = data.installationId;\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { EventView } from \"@bitwarden/common/models/view/eventView\";\n\nimport { EventService } from \"../core\";\n\n@Directive()\nexport abstract class BaseEventsComponent {\n  loading = true;\n  loaded = false;\n  events: EventView[];\n  start: string;\n  end: string;\n  dirtyDates = true;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  exportPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  abstract readonly exportFileName: string;\n\n  constructor(\n    protected eventService: EventService,\n    protected i18nService: I18nService,\n    protected exportService: ExportService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected fileDownloadService: FileDownloadService\n  ) {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n  }\n\n  async exportEvents() {\n    if (this.appApiPromiseUnfulfilled() || this.dirtyDates) {\n      return;\n    }\n\n    this.loading = true;\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    try {\n      this.exportPromise = this.export(dates[0], dates[1]);\n\n      await this.exportPromise;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    this.exportPromise = null;\n    this.loading = false;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.appApiPromiseUnfulfilled()) {\n      return;\n    }\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    this.loading = true;\n    let events: EventView[] = [];\n    try {\n      const promise = this.loadAndParseEvents(\n        dates[0],\n        dates[1],\n        clearExisting ? null : this.continuationToken\n      );\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      const result = await promise;\n      this.continuationToken = result.continuationToken;\n      events = result.events;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.dirtyDates = false;\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n\n  protected abstract requestEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ): Promise<ListResponse<EventResponse>>;\n  protected abstract getUserName(r: EventResponse, userId: string): { name: string; email: string };\n\n  protected async loadAndParseEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ) {\n    const response = await this.requestEvents(startDate, endDate, continuationToken);\n\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user = this.getUserName(r, userId);\n        const userName = user != null ? user.name : this.i18nService.t(\"unknown\");\n\n        return new EventView({\n          message: eventInfo.message,\n          humanReadableMessage: eventInfo.humanReadableMessage,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: r.installationId != null ? `Installation: ${r.installationId}` : userName,\n          userEmail: user != null ? user.email : \"\",\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n          installationId: r.installationId,\n        });\n      })\n    );\n    return { continuationToken: response.continuationToken, events: events };\n  }\n\n  protected parseDates() {\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return null;\n    }\n    return dates;\n  }\n\n  protected appApiPromiseUnfulfilled() {\n    return this.refreshPromise != null || this.morePromise != null || this.exportPromise != null;\n  }\n\n  private async export(start: string, end: string) {\n    let continuationToken = this.continuationToken;\n    let events = [].concat(this.events);\n\n    while (continuationToken != null) {\n      const result = await this.loadAndParseEvents(start, end, continuationToken);\n      continuationToken = result.continuationToken;\n      events = events.concat(result.events);\n    }\n\n    const data = await this.exportService.getEventExport(events);\n    const fileName = this.exportService.getFileName(this.exportFileName, \"csv\");\n    this.fileDownloadService.download({\n      fileName,\n      blobData: data,\n      blobOptions: { type: \"text/plain\" },\n    });\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"form-inline\">\n      <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"start\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n      <span class=\"mx-2\">-</span>\n      <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"end\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n    </div>\n    <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary ml-3\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        <i\n          class=\"bwi bwi-refresh bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-spin': loaded && refreshForm.loading }\"\n        ></i>\n        {{ \"refresh\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\"\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i>\n        <span>{{ \"export\" | i18n }}</span>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n    <thead>\n      <tr>\n        <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n        <th class=\"border-top-0\" width=\"40\">\n          <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n        </th>\n        <th class=\"border-top-0\" width=\"150\">{{ \"user\" | i18n }}</th>\n        <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of events\">\n        <td>{{ e.date | date: \"medium\" }}</td>\n        <td>\n          <i\n            class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n            title=\"{{ e.appName }}, {{ e.ip }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n        </td>\n        <td>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td [innerHTML]=\"e.message\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    class=\"btn btn-block btn-link btn-submit\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && moreBtn.loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\n\nimport { BaseEventsComponent } from \"../../common/base.events.component\";\nimport { EventService } from \"../../core\";\n\n@Component({\n  selector: \"app-org-events\",\n  templateUrl: \"events.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n  exportFileName = \"org-events\";\n  organizationId: string;\n  organization: Organization;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      eventService,\n      i18nService,\n      exportService,\n      platformUtilsService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      if (this.organization == null || !this.organization.useEvents) {\n        this.router.navigate([\"/organizations\", this.organizationId]);\n        return;\n      }\n\n      await this.load();\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getOrganizationUsers(this.organizationId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n\n    if (this.organization.providerId != null) {\n      try {\n        const provider = await this.providerService.get(this.organization.providerId);\n        if (\n          provider != null &&\n          (await this.providerService.get(this.organization.providerId)).canManageUsers\n        ) {\n          const providerUsersResponse = await this.apiService.getProviderUsers(\n            this.organization.providerId\n          );\n          providerUsersResponse.data.forEach((u) => {\n            const name = this.userNamePipe.transform(u);\n            this.orgUsersUserIdMap.set(u.userId, {\n              name: `${name} (${this.organization.providerName})`,\n              email: u.email,\n            });\n          });\n        }\n      } catch (e) {\n        this.logService.warning(e);\n      }\n    }\n\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsOrganization(\n      this.organizationId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    if (userId == null) {\n      return null;\n    }\n\n    if (this.orgUsersUserIdMap.has(userId)) {\n      return this.orgUsersUserIdMap.get(userId);\n    }\n\n    if (r.providerId != null && r.providerId === this.organization.providerId) {\n      return {\n        name: this.organization.providerName,\n      };\n    }\n\n    return null;\n  }\n}\n","import { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class GroupRequest {\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n  collections: SelectionReadOnlyRequest[] = [];\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"groupAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-2\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"groupAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"groupAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              aria-hidden=\"true\"\n              title=\"{{ 'loading' | i18n }}\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { GroupRequest } from \"@bitwarden/common/models/request/groupRequest\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collectionResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-group-add-edit\",\n  templateUrl: \"group-add-edit.component.html\",\n})\nexport class GroupAddEditComponent implements OnInit {\n  @Input() groupId: string;\n  @Input() organizationId: string;\n  @Output() onSavedGroup = new EventEmitter();\n  @Output() onDeletedGroup = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  name: string;\n  externalId: string;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.groupId != null;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editGroup\");\n      try {\n        const group = await this.apiService.getGroupDetails(this.organizationId, this.groupId);\n        this.access = group.accessAll ? \"all\" : \"selected\";\n        this.name = group.name;\n        this.externalId = group.externalId;\n        if (group.collections != null && this.collections != null) {\n          group.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addGroup\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  async submit() {\n    const request = new GroupRequest();\n    request.name = this.name;\n    request.externalId = this.externalId;\n    request.accessAll = this.access === \"all\";\n    if (!request.accessAll) {\n      request.collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putGroup(this.organizationId, this.groupId, request);\n      } else {\n        this.formPromise = this.apiService.postGroup(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedGroupId\" : \"createdGroupId\", this.name)\n      );\n      this.onSavedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteGroup(this.organizationId, this.groupId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", this.name)\n      );\n      this.onDeletedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"groups\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newGroup\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedGroups : (groups | search: searchText:'name':'id')) as searchedGroups\n  \"\n>\n  <p *ngIf=\"!searchedGroups.length\">{{ \"noGroupsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedGroups.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let g of searchedGroups\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(g)\">{{ g.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(g)\">\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(g)\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/groupResponse\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\nimport { GroupAddEditComponent } from \"./group-add-edit.component\";\n\n@Component({\n  selector: \"app-org-groups\",\n  templateUrl: \"groups.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class GroupsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  groups: GroupResponse[];\n  pagedGroups: GroupResponse[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedGroupsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getGroups(this.organizationId);\n    const groups = response.data != null && response.data.length > 0 ? response.data : [];\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.groups || this.groups.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedGroups.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedGroupsCount > this.pageSize) {\n      pagedSize = this.pagedGroupsCount;\n    }\n    if (this.groups.length > pagedLength) {\n      this.pagedGroups = this.pagedGroups.concat(\n        this.groups.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedGroupsCount = this.pagedGroups.length;\n    this.didScroll = this.pagedGroups.length > this.pageSize;\n  }\n\n  async edit(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      GroupAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.groupId = group != null ? group.id : null;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedGroup.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedGroup.subscribe(() => {\n          modal.close();\n          this.removeGroup(group);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(group: GroupResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      group.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteGroup(this.organizationId, group.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", group.name)\n      );\n      this.removeGroup(group);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async users(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"group\";\n        comp.entityId = group.id;\n        comp.entityName = group.name;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onEditedUsers.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedGroups = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.groups && this.groups.length > this.pageSize;\n  }\n\n  private removeGroup(group: GroupResponse) {\n    const index = this.groups.indexOf(group);\n    if (index > -1) {\n      this.groups.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"organization\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"people\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageUsers\"\n          >\n            {{ \"people\" | i18n }}\n          </a>\n          <a\n            routerLink=\"collections\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canViewAllCollections || organization.canViewAssignedCollections\"\n          >\n            {{ \"collections\" | i18n }}\n          </a>\n          <a\n            routerLink=\"groups\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageGroups\"\n          >\n            {{ \"groups\" | i18n }}\n          </a>\n          <a\n            routerLink=\"policies\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManagePolicies\"\n          >\n            {{ \"policies\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sso\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageSso\"\n          >\n            {{ \"singleSignOn\" | i18n }}\n          </a>\n          <a\n            routerLink=\"scim\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageScim\"\n          >\n            {{ \"scim\" | i18n }}\n          </a>\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canAccessEventLogs\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-manage\",\n  templateUrl: \"manage.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ManageComponent implements OnInit {\n  organization: Organization;\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n    });\n  }\n}\n","export class OrganizationUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class OrganizationUserConfirmRequest {\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-user-confirm\",\n  templateUrl: \"user-confirm.component.html\",\n})\nexport class UserConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() publicKey: Uint8Array;\n  @Output() onConfirmedUser = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      if (this.publicKey != null) {\n        const fingerprint = await this.cryptoService.getFingerprint(\n          this.userId,\n          this.publicKey.buffer\n        );\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    this.onConfirmedUser.emit();\n  }\n}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/models/response/organizationUserResponse\";\nimport { ProviderUserUserDetailsResponse } from \"@bitwarden/common/models/response/provider/providerUserResponse\";\n\nimport { UserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\n\ntype StatusType = OrganizationUserStatusType | ProviderUserStatusType;\n\nconst MaxCheckedCount = 500;\n\n@Directive()\nexport abstract class BasePeopleComponent<\n  UserType extends ProviderUserUserDetailsResponse | OrganizationUserUserDetailsResponse\n> {\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  get allCount() {\n    return this.activeUsers != null ? this.activeUsers.length : 0;\n  }\n\n  get invitedCount() {\n    return this.statusMap.has(this.userStatusType.Invited)\n      ? this.statusMap.get(this.userStatusType.Invited).length\n      : 0;\n  }\n\n  get acceptedCount() {\n    return this.statusMap.has(this.userStatusType.Accepted)\n      ? this.statusMap.get(this.userStatusType.Accepted).length\n      : 0;\n  }\n\n  get confirmedCount() {\n    return this.statusMap.has(this.userStatusType.Confirmed)\n      ? this.statusMap.get(this.userStatusType.Confirmed).length\n      : 0;\n  }\n\n  get revokedCount() {\n    return this.statusMap.has(this.userStatusType.Revoked)\n      ? this.statusMap.get(this.userStatusType.Revoked).length\n      : 0;\n  }\n\n  get showConfirmUsers(): boolean {\n    return (\n      this.activeUsers != null &&\n      this.statusMap != null &&\n      this.activeUsers.length > 1 &&\n      this.confirmedCount > 0 &&\n      this.confirmedCount < 3 &&\n      this.acceptedCount > 0\n    );\n  }\n\n  get showBulkConfirmUsers(): boolean {\n    return this.acceptedCount > 0;\n  }\n\n  abstract userType: typeof OrganizationUserType | typeof ProviderUserType;\n  abstract userStatusType: typeof OrganizationUserStatusType | typeof ProviderUserStatusType;\n\n  loading = true;\n  statusMap = new Map<StatusType, UserType[]>();\n  status: StatusType;\n  users: UserType[] = [];\n  pagedUsers: UserType[] = [];\n  searchText: string;\n  actionPromise: Promise<void>;\n\n  protected allUsers: UserType[] = [];\n  protected activeUsers: UserType[] = [];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedUsersCount = 0;\n\n  constructor(\n    protected apiService: ApiService,\n    private searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cryptoService: CryptoService,\n    protected validationService: ValidationService,\n    protected modalService: ModalService,\n    private logService: LogService,\n    private searchPipe: SearchPipe,\n    protected userNamePipe: UserNamePipe,\n    protected stateService: StateService\n  ) {}\n\n  abstract edit(user: UserType): void;\n  abstract getUsers(): Promise<ListResponse<UserType>>;\n  abstract deleteUser(id: string): Promise<void>;\n  abstract revokeUser(id: string): Promise<void>;\n  abstract restoreUser(id: string): Promise<void>;\n  abstract reinviteUser(id: string): Promise<void>;\n  abstract confirmUser(user: UserType, publicKey: Uint8Array): Promise<void>;\n\n  async load() {\n    const response = await this.getUsers();\n    this.statusMap.clear();\n    this.activeUsers = [];\n    for (const status of Utils.iterateEnum(this.userStatusType)) {\n      this.statusMap.set(status, []);\n    }\n\n    this.allUsers = response.data != null && response.data.length > 0 ? response.data : [];\n    this.allUsers.sort(\n      Utils.getSortFunction<ProviderUserUserDetailsResponse | OrganizationUserUserDetailsResponse>(\n        this.i18nService,\n        \"email\"\n      )\n    );\n    this.allUsers.forEach((u) => {\n      if (!this.statusMap.has(u.status)) {\n        this.statusMap.set(u.status, [u]);\n      } else {\n        this.statusMap.get(u.status).push(u);\n      }\n      if (u.status !== this.userStatusType.Revoked) {\n        this.activeUsers.push(u);\n      }\n    });\n    this.filter(this.status);\n    this.loading = false;\n  }\n\n  filter(status: StatusType) {\n    this.status = status;\n    if (this.status != null) {\n      this.users = this.statusMap.get(this.status);\n    } else {\n      this.users = this.activeUsers;\n    }\n    // Reset checkbox selecton\n    this.selectAll(false);\n    this.resetPaging();\n  }\n\n  loadMore() {\n    if (!this.users || this.users.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedUsers.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedUsersCount > this.pageSize) {\n      pagedSize = this.pagedUsersCount;\n    }\n    if (this.users.length > pagedLength) {\n      this.pagedUsers = this.pagedUsers.concat(\n        this.users.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedUsersCount = this.pagedUsers.length;\n    this.didScroll = this.pagedUsers.length > this.pageSize;\n  }\n\n  checkUser(user: OrganizationUserUserDetailsResponse, select?: boolean) {\n    (user as any).checked = select == null ? !(user as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n\n    const filteredUsers = this.searchPipe.transform(\n      this.users,\n      this.searchText,\n      \"name\",\n      \"email\",\n      \"id\"\n    );\n\n    const selectCount =\n      select && filteredUsers.length > MaxCheckedCount ? MaxCheckedCount : filteredUsers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkUser(filteredUsers[i], select);\n    }\n  }\n\n  async resetPaging() {\n    this.pagedUsers = [];\n    this.loadMore();\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  protected async removeUserConfirmationDialog(user: UserType) {\n    return this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(user),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n  }\n\n  async remove(user: UserType) {\n    const confirmed = await this.removeUserConfirmationDialog(user);\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.deleteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(user))\n      );\n      this.removeUser(user);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async revoke(user: UserType) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.revokeWarningMessage(),\n      this.i18nService.t(\"revokeUserId\", this.userNamePipe.transform(user)),\n      this.i18nService.t(\"revokeAccess\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.revokeUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"revokedUserId\", this.userNamePipe.transform(user))\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async restore(user: UserType) {\n    this.actionPromise = this.restoreUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"restoredUserId\", this.userNamePipe.transform(user))\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async reinvite(user: UserType) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    this.actionPromise = this.reinviteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"hasBeenReinvited\", this.userNamePipe.transform(user))\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async confirm(user: UserType) {\n    function updateUser(self: BasePeopleComponent<UserType>) {\n      user.status = self.userStatusType.Confirmed;\n      const mapIndex = self.statusMap.get(self.userStatusType.Accepted).indexOf(user);\n      if (mapIndex > -1) {\n        self.statusMap.get(self.userStatusType.Accepted).splice(mapIndex, 1);\n        self.statusMap.get(self.userStatusType.Confirmed).push(user);\n      }\n    }\n\n    const confirmUser = async (publicKey: Uint8Array) => {\n      try {\n        this.actionPromise = this.confirmUser(user, publicKey);\n        await this.actionPromise;\n        updateUser(this);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(user))\n        );\n      } catch (e) {\n        this.validationService.showError(e);\n        throw e;\n      } finally {\n        this.actionPromise = null;\n      }\n    };\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(user.userId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n      if (autoConfirm == null || !autoConfirm) {\n        const [modal] = await this.modalService.openViewRef(\n          UserConfirmComponent,\n          this.confirmModalRef,\n          (comp) => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.userId = user != null ? user.userId : null;\n            comp.publicKey = publicKey;\n            // eslint-disable-next-line rxjs/no-async-subscribe\n            comp.onConfirmedUser.subscribe(async () => {\n              try {\n                comp.formPromise = confirmUser(publicKey);\n                await comp.formPromise;\n                modal.close();\n              } catch (e) {\n                this.logService.error(e);\n              }\n            });\n          }\n        );\n        return;\n      }\n\n      try {\n        const fingerprint = await this.cryptoService.getFingerprint(user.userId, publicKey.buffer);\n        this.logService.info(`User's fingerprint: ${fingerprint.join(\"-\")}`);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      await confirmUser(publicKey);\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.users && this.users.length > this.pageSize;\n  }\n\n  protected revokeWarningMessage(): string {\n    return this.i18nService.t(\"revokeUserConfirmation\");\n  }\n\n  protected getCheckedUsers() {\n    return this.users.filter((u) => (u as any).checked);\n  }\n\n  protected removeUser(user: UserType) {\n    let index = this.users.indexOf(user);\n    if (index > -1) {\n      this.users.splice(index, 1);\n      this.resetPaging();\n    }\n    if (this.statusMap.has(user.status)) {\n      index = this.statusMap.get(user.status).indexOf(user);\n      if (index > -1) {\n        this.statusMap.get(user.status).splice(index, 1);\n      }\n    }\n  }\n}\n","type OrganizationUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class OrganizationUserBulkConfirmRequest {\n  keys: OrganizationUserBulkRequestEntry[];\n\n  constructor(keys: OrganizationUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"confirmUsers\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <app-callout type=\"danger\" *ngIf=\"filteredUsers.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!loading && !done\">\n          <p>\n            {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n            <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n              {{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"fingerprint\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ fingerprints.get(user.id) }}\n              </td>\n            </tr>\n            <tr *ngFor=\"let user of excludedUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"!loading && done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { OrganizationUserBulkConfirmRequest } from \"@bitwarden/common/models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-confirm\",\n  templateUrl: \"bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent implements OnInit {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  excludedUsers: BulkUserDetails[];\n  filteredUsers: BulkUserDetails[];\n  publicKeys: Map<string, Uint8Array> = new Map();\n  fingerprints: Map<string, string> = new Map();\n  statuses: Map<string, string> = new Map();\n\n  loading = true;\n  done = false;\n  error: string;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.excludedUsers = this.users.filter((u) => !this.isAccepted(u));\n    this.filteredUsers = this.users.filter((u) => this.isAccepted(u));\n\n    if (this.filteredUsers.length <= 0) {\n      this.done = true;\n    }\n\n    const response = await this.getPublicKeys();\n\n    for (const entry of response.data) {\n      const publicKey = Utils.fromB64ToArray(entry.key);\n      const fingerprint = await this.cryptoService.getFingerprint(entry.userId, publicKey.buffer);\n      if (fingerprint != null) {\n        this.publicKeys.set(entry.id, publicKey);\n        this.fingerprints.set(entry.id, fingerprint.join(\"-\"));\n      }\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const key = await this.getCryptoKey();\n      const userIdsWithKeys: any[] = [];\n      for (const user of this.filteredUsers) {\n        const publicKey = this.publicKeys.get(user.id);\n        if (publicKey == null) {\n          continue;\n        }\n        const encryptedKey = await this.cryptoService.rsaEncrypt(key.key, publicKey.buffer);\n        userIdsWithKeys.push({\n          id: user.id,\n          key: encryptedKey.encryptedString,\n        });\n      }\n      const response = await this.postConfirmRequest(userIdsWithKeys);\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkConfirmMessage\");\n        this.statuses.set(entry.id, error);\n      });\n\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n    this.loading = false;\n  }\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === OrganizationUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new OrganizationUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postOrganizationUsersPublicKey(this.organizationId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getOrgKey(this.organizationId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new OrganizationUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postOrganizationUserBulkConfirm(this.organizationId, request);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"removeUsers\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error\">\n            {{ removeUsersWarning }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"removeUsers\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-remove\",\n  templateUrl: \"bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading = false;\n  done = false;\n  error: string;\n\n  constructor(protected apiService: ApiService, protected i18nService: I18nService) {}\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.deleteUsers();\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkRemovedMessage\");\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n  }\n\n  protected async deleteUsers() {\n    const request = new OrganizationUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyOrganizationUsers(this.organizationId, request);\n  }\n\n  protected get removeUsersWarning() {\n    return this.i18nService.t(\"removeOrgUsersConfirmation\");\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"bulkTitle\">\n          {{ bulkTitle }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error && isRevoking\">\n            {{ \"revokeUsersWarning\" | i18n }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ bulkTitle }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ModalConfig } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-restore-revoke\",\n  templateUrl: \"bulk-restore-revoke.component.html\",\n})\nexport class BulkRestoreRevokeComponent {\n  isRevoking: boolean;\n  organizationId: string;\n  users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading = false;\n  done = false;\n  error: string;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    config: ModalConfig\n  ) {\n    this.isRevoking = config.data.isRevoking;\n    this.organizationId = config.data.organizationId;\n    this.users = config.data.users;\n  }\n\n  get bulkTitle() {\n    const titleKey = this.isRevoking ? \"revokeUsers\" : \"restoreUsers\";\n    return this.i18nService.t(titleKey);\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.performBulkUserAction();\n\n      const bulkMessage = this.isRevoking ? \"bulkRevokedMessage\" : \"bulkRestoredMessage\";\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(bulkMessage);\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n  }\n\n  protected async performBulkUserAction() {\n    const request = new OrganizationUserBulkRequest(this.users.map((user) => user.id));\n    if (this.isRevoking) {\n      return await this.apiService.revokeManyOrganizationUsers(this.organizationId, request);\n    } else {\n      return await this.apiService.restoreManyOrganizationUsers(this.organizationId, request);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"bulkConfirmStatus\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              <th>{{ \"status\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tr *ngFor=\"let item of users\">\n            <td width=\"30\">\n              <app-avatar\n                [data]=\"item.user | userName\"\n                [email]=\"item.user.email\"\n                size=\"25\"\n                [circle]=\"true\"\n                [fontSize]=\"14\"\n              ></app-avatar>\n            </td>\n            <td>\n              {{ item.user.email }}\n              <small class=\"text-muted d-block\" *ngIf=\"item.user.name\">{{ item.user.name }}</small>\n            </td>\n            <td class=\"text-danger\" *ngIf=\"item.error\">\n              {{ item.message }}\n            </td>\n            <td *ngIf=\"!item.error\">\n              {{ item.message }}\n            </td>\n          </tr>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\n\nexport interface BulkUserDetails {\n  id: string;\n  name: string;\n  email: string;\n  status: OrganizationUserStatusType | ProviderUserStatusType;\n}\n\ntype BulkStatusEntry = {\n  user: BulkUserDetails;\n  error: boolean;\n  message: string;\n};\n\n@Component({\n  selector: \"app-bulk-status\",\n  templateUrl: \"bulk-status.component.html\",\n})\nexport class BulkStatusComponent {\n  users: BulkStatusEntry[];\n  loading = false;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"eventLogsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"eventLogsTitle\">\n          {{ \"eventLogs\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loaded\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loaded\">\n        <div class=\"d-flex\">\n          <div class=\"form-inline\">\n            <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"start\"\n              placeholder=\"{{ 'startDate' | i18n }}\"\n              [(ngModel)]=\"start\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n            <span class=\"mx-2\">-</span>\n            <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"end\"\n              placeholder=\"{{ 'endDate' | i18n }}\"\n              [(ngModel)]=\"end\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n          </div>\n          <button\n            #refreshBtn\n            [appApiAction]=\"refreshPromise\"\n            type=\"button\"\n            class=\"btn btn-sm btn-outline-primary ml-3\"\n            (click)=\"loadEvents(true)\"\n            [disabled]=\"loaded && refreshBtn.loading\"\n          >\n            <i\n              class=\"bwi bwi-refresh bwi-fw\"\n              [ngClass]=\"{ 'bwi-spin': loaded && refreshBtn.loading }\"\n              aria-hidden=\"true\"\n            ></i>\n            {{ \"refresh\" | i18n }}\n          </button>\n        </div>\n        <hr />\n        <div *ngIf=\"!events || !events.length\">\n          {{ \"noEventsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover mb-0\" *ngIf=\"events && events.length\">\n          <thead>\n            <tr>\n              <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n              <th class=\"border-top-0\" width=\"40\">\n                <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n              </th>\n              <th class=\"border-top-0\" width=\"150\" *ngIf=\"showUser\">{{ \"user\" | i18n }}</th>\n              <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let e of events\">\n              <td>{{ e.date | date: \"medium\" }}</td>\n              <td>\n                <i\n                  class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n                  title=\"{{ e.appName }}, {{ e.ip }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n              </td>\n              <td *ngIf=\"showUser\">\n                <span appA11yTitle=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n              </td>\n              <td [innerHTML]=\"e.message\"></td>\n            </tr>\n          </tbody>\n        </table>\n        <button\n          #moreBtn\n          [appApiAction]=\"morePromise\"\n          type=\"button\"\n          class=\"btn btn-block btn-link btn-submit\"\n          (click)=\"loadEvents(false)\"\n          [disabled]=\"loaded && moreBtn.loading\"\n          *ngIf=\"continuationToken\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"loadMore\" | i18n }}</span>\n        </button>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\n\nimport { EventService } from \"../../core\";\n\n@Component({\n  selector: \"app-entity-events\",\n  templateUrl: \"entity-events.component.html\",\n})\nexport class EntityEventsComponent implements OnInit {\n  @Input() name: string;\n  @Input() entity: \"user\" | \"cipher\";\n  @Input() entityId: string;\n  @Input() organizationId: string;\n  @Input() providerId: string;\n  @Input() showUser = false;\n\n  loading = true;\n  loaded = false;\n  events: any[];\n  start: string;\n  end: string;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n  private orgUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private eventService: EventService,\n    private platformUtilsService: PlatformUtilsService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n    await this.load();\n  }\n\n  async load() {\n    if (this.showUser) {\n      const response = await this.apiService.getOrganizationUsers(this.organizationId);\n      response.data.forEach((u) => {\n        const name = this.userNamePipe.transform(u);\n        this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n        this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n      });\n    }\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.refreshPromise != null || this.morePromise != null) {\n      return;\n    }\n\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return;\n    }\n\n    this.loading = true;\n    let response: ListResponse<EventResponse>;\n    try {\n      let promise: Promise<any>;\n      if (this.entity === \"user\" && this.providerId) {\n        promise = this.apiService.getEventsProviderUser(\n          this.providerId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else if (this.entity === \"user\") {\n        promise = this.apiService.getEventsOrganizationUser(\n          this.organizationId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else {\n        promise = this.apiService.getEventsCipher(\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      }\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      response = await promise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.continuationToken = response.continuationToken;\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user =\n          this.showUser && userId != null && this.orgUsersUserIdMap.has(userId)\n            ? this.orgUsersUserIdMap.get(userId)\n            : null;\n        return {\n          message: eventInfo.message,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: user != null ? user.name : this.showUser ? this.i18nService.t(\"unknown\") : null,\n          userEmail: user != null ? user.email : this.showUser ? \"\" : null,\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n        };\n      })\n    );\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"resetPasswordTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"resetPasswordTitle\">\n          {{ \"resetPassword\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\"\n          >{{ \"resetPasswordLoggedOutWarning\" | i18n: loggedOutWarningName }}\n        </app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          enforcedPolicyMessage=\"{{ 'resetPasswordMasterPasswordPolicyInEffect' | i18n }}\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col form-group\">\n            <div class=\"d-flex\">\n              <label for=\"newPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"ml-auto d-flex\">\n                <a\n                  href=\"#\"\n                  class=\"d-block mr-2 bwi-icon-above-input\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                  (click)=\"generatePassword()\"\n                >\n                  <i class=\"bwi bwi-lg bwi-fw bwi-refresh\" aria-hidden=\"true\"></i>\n                </a>\n              </div>\n            </div>\n            <div class=\"input-group mb-1\">\n              <input\n                id=\"newPassword\"\n                class=\"form-control text-monospace\"\n                appAutofocus\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"NewPassword\"\n                [(ngModel)]=\"newPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"input-group-append\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword()\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                  (click)=\"copy(newPassword)\"\n                >\n                  <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n            <app-password-strength\n              [password]=\"newPassword\"\n              [email]=\"email\"\n              [showText]=\"true\"\n              (passwordStrengthResult)=\"getStrengthResult($event)\"\n            >\n            </app-password-strength>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport zxcvbn from \"zxcvbn\";\n\nimport { PasswordStrengthComponent } from \"@bitwarden/angular/shared/components/password-strength/password-strength.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { OrganizationUserResetPasswordRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordRequest\";\n\n@Component({\n  selector: \"app-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\n  @Input() name: string;\n  @Input() email: string;\n  @Input() id: string;\n  @Input() organizationId: string;\n  @Output() onPasswordReset = new EventEmitter();\n  @ViewChild(PasswordStrengthComponent) passwordStrengthComponent: PasswordStrengthComponent;\n\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  newPassword: string = null;\n  showPassword = false;\n  passwordStrengthResult: zxcvbn.ZXCVBNResult;\n  formPromise: Promise<any>;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    private cryptoService: CryptoService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .masterPasswordPolicyOptions$()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (enforcedPasswordPolicyOptions) =>\n          (this.enforcedPolicyOptions = enforcedPasswordPolicyOptions)\n      );\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get loggedOutWarningName() {\n    return this.name != null ? this.name : this.i18nService.t(\"thisUser\");\n  }\n\n  async generatePassword() {\n    const options = (await this.passwordGenerationService.getOptions())?.[0] ?? {};\n    this.newPassword = await this.passwordGenerationService.generatePassword(options);\n    this.passwordStrengthComponent.updatePasswordStrength(this.newPassword);\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"newPassword\").focus();\n  }\n\n  copy(value: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  async submit() {\n    // Validation\n    if (this.newPassword == null || this.newPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n\n    if (this.newPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordMinlength\")\n      );\n      return false;\n    }\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.passwordStrengthResult.score,\n        this.newPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    if (this.passwordStrengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    // Get user Information (kdf type, kdf iterations, resetPasswordKey, private key) and change password\n    try {\n      this.formPromise = this.apiService\n        .getOrganizationUserResetPasswordDetails(this.organizationId, this.id)\n        .then(async (response) => {\n          if (response == null) {\n            throw new Error(this.i18nService.t(\"resetPasswordDetailsError\"));\n          }\n\n          const kdfType = response.kdf;\n          const kdfIterations = response.kdfIterations;\n          const resetPasswordKey = response.resetPasswordKey;\n          const encryptedPrivateKey = response.encryptedPrivateKey;\n\n          // Decrypt Organization's encrypted Private Key with org key\n          const orgSymKey = await this.cryptoService.getOrgKey(this.organizationId);\n          const decPrivateKey = await this.cryptoService.decryptToBytes(\n            new EncString(encryptedPrivateKey),\n            orgSymKey\n          );\n\n          // Decrypt User's Reset Password Key to get EncKey\n          const decValue = await this.cryptoService.rsaDecrypt(resetPasswordKey, decPrivateKey);\n          const userEncKey = new SymmetricCryptoKey(decValue);\n\n          // Create new key and hash new password\n          const newKey = await this.cryptoService.makeKey(\n            this.newPassword,\n            this.email.trim().toLowerCase(),\n            kdfType,\n            kdfIterations\n          );\n          const newPasswordHash = await this.cryptoService.hashPassword(this.newPassword, newKey);\n\n          // Create new encKey for the User\n          const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n          // Create request\n          const request = new OrganizationUserResetPasswordRequest();\n          request.key = newEncKey[1].encryptedString;\n          request.newMasterPasswordHash = newPasswordHash;\n\n          // Change user's password\n          return this.apiService.putOrganizationUserResetPassword(\n            this.organizationId,\n            this.id,\n            request\n          );\n        });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"resetPasswordSuccess\")\n      );\n      this.onPasswordReset.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  getStrengthResult(result: zxcvbn.ZXCVBNResult) {\n    this.passwordStrengthResult = result;\n  }\n}\n","import { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class OrganizationUserInviteRequest {\n  emails: string[] = [];\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","import { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class OrganizationUserUpdateRequest {\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","<div class=\"form-group mb-0\">\n  <div class=\"form-check mt-1 form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [name]=\"pascalize(parentId)\"\n      [id]=\"parentId\"\n      [(ngModel)]=\"parentChecked\"\n      [indeterminate]=\"parentIndeterminate\"\n    />\n    <label class=\"form-check-label font-weight-normal\" [for]=\"parentId\">\n      {{ parentId | i18n }}\n    </label>\n  </div>\n  <div class=\"form-group form-group-child-check mb-0\">\n    <div class=\"form-check mt-1\" *ngFor=\"let c of checkboxes\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        [name]=\"pascalize(c.id)\"\n        [id]=\"c.id\"\n        [ngModel]=\"c.get()\"\n        (ngModelChange)=\"c.set($event)\"\n      />\n      <label class=\"form-check-label font-weight-normal\" [for]=\"c.id\">\n        {{ c.id | i18n }}\n      </label>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-nested-checkbox\",\n  templateUrl: \"nested-checkbox.component.html\",\n})\nexport class NestedCheckboxComponent {\n  @Input() parentId: string;\n  @Input() checkboxes: { id: string; get: () => boolean; set: (v: boolean) => void }[];\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  get parentIndeterminate() {\n    return !this.parentChecked && this.checkboxes.some((c) => c.get());\n  }\n\n  get parentChecked() {\n    return this.checkboxes.every((c) => c.get());\n  }\n\n  set parentChecked(value: boolean) {\n    this.checkboxes.forEach((c) => {\n      c.set(value);\n    });\n  }\n\n  pascalize(s: string) {\n    return Utils.camelToPascalCase(s);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n          <span bitBadge badgeType=\"secondary\" *ngIf=\"isRevoked\">{{ \"revoked\" | i18n }}</span>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/user-types-access-control/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeUser\"\n            [value]=\"organizationUserType.User\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeUser\">\n            {{ \"user\" | i18n }}\n            <small>{{ \"userDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeManager\"\n            [value]=\"organizationUserType.Manager\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeManager\">\n            {{ \"manager\" | i18n }}\n            <small>{{ \"managerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeAdmin\"\n            [value]=\"organizationUserType.Admin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeAdmin\">\n            {{ \"admin\" | i18n }}\n            <small>{{ \"adminDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeOwner\"\n            [value]=\"organizationUserType.Owner\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeOwner\">\n            {{ \"owner\" | i18n }}\n            <small>{{ \"ownerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeCustom\"\n            [value]=\"organizationUserType.Custom\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeCustom\">\n            {{ \"custom\" | i18n }}\n            <small>{{ \"customDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <ng-container *ngIf=\"customUserTypeSelected\">\n          <h3 class=\"mt-4 d-flex\">\n            {{ \"permissions\" | i18n }}\n          </h3>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">{{ \"managerPermissions\" | i18n }}</label>\n                <hr class=\"my-0 mr-2\" />\n                <app-nested-checkbox\n                  parentId=\"manageAssignedCollections\"\n                  [checkboxes]=\"manageAssignedCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n              </div>\n            </div>\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">{{ \"adminPermissions\" | i18n }}</label>\n                <hr class=\"my-0 mr-2\" />\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessEventLogs\"\n                      id=\"accessEventLogs\"\n                      [(ngModel)]=\"permissions.accessEventLogs\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessEventLogs\">\n                      {{ \"accessEventLogs\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessImportExport\"\n                      id=\"accessImportExport\"\n                      [(ngModel)]=\"permissions.accessImportExport\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessImportExport\">\n                      {{ \"accessImportExport\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessReports\"\n                      id=\"accessReports\"\n                      [(ngModel)]=\"permissions.accessReports\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessReports\">\n                      {{ \"accessReports\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <app-nested-checkbox\n                  parentId=\"manageAllCollections\"\n                  [checkboxes]=\"manageAllCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageGroups\"\n                      id=\"manageGroups\"\n                      [(ngModel)]=\"permissions.manageGroups\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageGroups\">\n                      {{ \"manageGroups\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageSso\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.manageSso\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageSso\">\n                      {{ \"manageSso\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"managePolicies\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.managePolicies\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"managePolicies\">\n                      {{ \"managePolicies\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageUsers\"\n                      id=\"manageUsers\"\n                      [(ngModel)]=\"permissions.manageUsers\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageUsers\">\n                      {{ \"manageUsers\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageResetPassword\"\n                      id=\"manageResetPassword\"\n                      [(ngModel)]=\"permissions.manageResetPassword\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageResetPassword\">\n                      {{ \"manageResetPassword\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-3\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"userAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"userAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"restore()\"\n            class=\"btn btn-outline-secondary\"\n            *ngIf=\"editMode && isRevoked\"\n            [disabled]=\"form.loading\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"restoreAccess\" | i18n }}</span>\n          </button>\n          <button\n            type=\"button\"\n            (click)=\"revoke()\"\n            class=\"btn btn-outline-secondary\"\n            *ngIf=\"editMode && !isRevoked\"\n            [disabled]=\"form.loading\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"revokeAccess\" | i18n }}</span>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissionsApi\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { OrganizationUserInviteRequest } from \"@bitwarden/common/models/request/organizationUserInviteRequest\";\nimport { OrganizationUserUpdateRequest } from \"@bitwarden/common/models/request/organizationUserUpdateRequest\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collectionResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Input() usesKeyConnector = false;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n  @Output() onRevokedUser = new EventEmitter();\n  @Output() onRestoredUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  isRevoked = false;\n  title: string;\n  emails: string;\n  type: OrganizationUserType = OrganizationUserType.User;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  organizationUserType = OrganizationUserType;\n\n  manageAllCollectionsCheckboxes = [\n    {\n      id: \"createNewCollections\",\n      get: () => this.permissions.createNewCollections,\n      set: (v: boolean) => (this.permissions.createNewCollections = v),\n    },\n    {\n      id: \"editAnyCollection\",\n      get: () => this.permissions.editAnyCollection,\n      set: (v: boolean) => (this.permissions.editAnyCollection = v),\n    },\n    {\n      id: \"deleteAnyCollection\",\n      get: () => this.permissions.deleteAnyCollection,\n      set: (v: boolean) => (this.permissions.deleteAnyCollection = v),\n    },\n  ];\n\n  manageAssignedCollectionsCheckboxes = [\n    {\n      id: \"editAssignedCollections\",\n      get: () => this.permissions.editAssignedCollections,\n      set: (v: boolean) => (this.permissions.editAssignedCollections = v),\n    },\n    {\n      id: \"deleteAssignedCollections\",\n      get: () => this.permissions.deleteAssignedCollections,\n      set: (v: boolean) => (this.permissions.deleteAssignedCollections = v),\n    },\n  ];\n\n  get customUserTypeSelected(): boolean {\n    return this.type === OrganizationUserType.Custom;\n  }\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.organizationUserId != null;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getOrganizationUser(\n          this.organizationId,\n          this.organizationUserId\n        );\n        this.access = user.accessAll ? \"all\" : \"selected\";\n        this.type = user.type;\n        this.isRevoked = user.status === OrganizationUserStatusType.Revoked;\n        if (user.type === OrganizationUserType.Custom) {\n          this.permissions = user.permissions;\n        }\n        if (user.collections != null && this.collections != null) {\n          user.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  setRequestPermissions(p: PermissionsApi, clearPermissions: boolean) {\n    Object.assign(p, clearPermissions ? new PermissionsApi() : this.permissions);\n    return p;\n  }\n\n  handleDependentPermissions() {\n    // Manage Password Reset must have Manage Users enabled\n    if (this.permissions.manageResetPassword && !this.permissions.manageUsers) {\n      this.permissions.manageUsers = true;\n      (document.getElementById(\"manageUsers\") as HTMLInputElement).checked = true;\n      this.platformUtilsService.showToast(\n        \"info\",\n        null,\n        this.i18nService.t(\"resetPasswordManageUsers\")\n      );\n    }\n  }\n\n  async submit() {\n    let collections: SelectionReadOnlyRequest[] = null;\n    if (this.access !== \"all\") {\n      collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        const request = new OrganizationUserUpdateRequest();\n        request.accessAll = this.access === \"all\";\n        request.type = this.type;\n        request.collections = collections;\n        request.permissions = this.setRequestPermissions(\n          request.permissions ?? new PermissionsApi(),\n          request.type !== OrganizationUserType.Custom\n        );\n        this.formPromise = this.apiService.putOrganizationUser(\n          this.organizationId,\n          this.organizationUserId,\n          request\n        );\n      } else {\n        const request = new OrganizationUserInviteRequest();\n        request.emails = [...new Set(this.emails.trim().split(/\\s*,\\s*/))];\n        request.accessAll = this.access === \"all\";\n        request.type = this.type;\n        request.permissions = this.setRequestPermissions(\n          request.permissions ?? new PermissionsApi(),\n          request.type !== OrganizationUserType.Custom\n        );\n        request.collections = collections;\n        this.formPromise = this.apiService.postOrganizationUserInvite(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const message = this.usesKeyConnector\n      ? \"removeUserConfirmationKeyConnector\"\n      : \"removeOrgUserConfirmation\";\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(message),\n      this.i18nService.t(\"removeUserIdAccess\", this.name),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async revoke() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeUserConfirmation\"),\n      this.i18nService.t(\"revokeUserId\", this.name),\n      this.i18nService.t(\"revokeAccess\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.apiService.revokeOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"revokedUserId\", this.name)\n      );\n      this.isRevoked = true;\n      this.onRevokedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async restore() {\n    if (!this.editMode) {\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.restoreOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"restoredUserId\", this.name)\n      );\n      this.isRevoked = false;\n      this.onRestoredUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export class OrganizationUserUpdateGroupsRequest {\n  groupIds: string[] = [];\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"groupAccessTitle\">\n          {{ \"groupAccess\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <p>{{ \"groupAccessUserDesc\" | i18n }}</p>\n        <div *ngIf=\"!groups || !groups.length\">\n          {{ \"noGroupsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n          <tbody>\n            <tr *ngFor=\"let g of groups; let i = index\">\n              <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"g.checked\"\n                  name=\"Groups[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td (click)=\"check(g)\">\n                {{ g.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { OrganizationUserUpdateGroupsRequest } from \"@bitwarden/common/models/request/organizationUserUpdateGroupsRequest\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/groupResponse\";\n\n@Component({\n  selector: \"app-user-groups\",\n  templateUrl: \"user-groups.component.html\",\n})\nexport class UserGroupsComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Output() onSavedUser = new EventEmitter();\n\n  loading = true;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const groupsResponse = await this.apiService.getGroups(this.organizationId);\n    const groups = groupsResponse.data.map((r) => r);\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n\n    try {\n      const userGroups = await this.apiService.getOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId\n      );\n      if (userGroups != null && this.groups != null) {\n        userGroups.forEach((ug) => {\n          const group = this.groups.filter((g) => g.id === ug);\n          if (group != null && group.length > 0) {\n            (group[0] as any).checked = true;\n          }\n        });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    const request = new OrganizationUserUpdateGroupsRequest();\n    request.groupIds = this.groups.filter((g) => (g as any).checked).map((g) => g.id);\n\n    try {\n      this.formPromise = this.apiService.putOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedGroupsForUser\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"people\" | i18n }}</h1>\n  <div class=\"mt-2 d-flex\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span bitBadge badgeType=\"warning\" *ngIf=\"acceptedCount\">{{ acceptedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Revoked }\"\n        (click)=\"filter(userStatusType.Revoked)\"\n      >\n        {{ \"revoked\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"revokedCount\">{{ revokedCount }}</span>\n      </button>\n    </div>\n    <div class=\"ml-3\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown ml-3\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkRestore()\">\n          <i class=\"bwi bwi-fw bwi-plus-circle\" aria-hidden=\"true\"></i>\n          {{ \"restoreAccess\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkRevoke()\">\n          <i class=\"bwi bwi-fw bwi-minus-circle\" aria-hidden=\"true\"></i>\n          {{ \"revokeAccess\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"usersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"u | userName\"\n              [email]=\"u.email\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            >\n            </app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Revoked\">{{\n              \"revoked\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"u.twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"showEnrolledStatus(u)\">\n              <i\n                class=\"bwi bwi-key\"\n                title=\"{{ 'enrolledPasswordReset' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"enrolledPasswordReset\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.Owner\">{{ \"owner\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Admin\">{{ \"admin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Manager\">{{ \"manager\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.User\">{{ \"user\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Custom\">{{ \"custom\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"groups(u)\"\n                  *ngIf=\"accessGroups\"\n                >\n                  <i class=\"bwi bwi-fw bwi-sitemap\" aria-hidden=\"true\"></i>\n                  {{ \"groups\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"resetPassword(u)\"\n                  *ngIf=\"allowResetPassword(u)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n                  {{ \"resetPassword\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"restore(u)\"\n                  *ngIf=\"u.status === userStatusType.Revoked\"\n                >\n                  <i class=\"bwi bwi-fw bwi-plus-circle\" aria-hidden=\"true\"></i>\n                  {{ \"restoreAccess\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"revoke(u)\"\n                  *ngIf=\"u.status !== userStatusType.Revoked\"\n                >\n                  <i class=\"bwi bwi-fw bwi-minus-circle\" aria-hidden=\"true\"></i>\n                  {{ \"revokeAccess\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #groupsTemplate></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #resetPasswordTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { combineLatest, concatMap, Subject, takeUntil } from \"rxjs\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organizationKeysRequest\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"@bitwarden/common/models/request/organizationUserConfirmRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { OrganizationUserBulkResponse } from \"@bitwarden/common/models/response/organizationUserBulkResponse\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/models/response/organizationUserResponse\";\n\nimport { BasePeopleComponent } from \"../../common/base.people.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { BulkRestoreRevokeComponent } from \"./bulk/bulk-restore-revoke.component\";\nimport { BulkStatusComponent } from \"./bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"./entity-events.component\";\nimport { ResetPasswordComponent } from \"./reset-password.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\nimport { UserGroupsComponent } from \"./user-groups.component\";\n\n@Component({\n  selector: \"app-org-people\",\n  templateUrl: \"people.component.html\",\n})\nexport class PeopleComponent\n  extends BasePeopleComponent<OrganizationUserUserDetailsResponse>\n  implements OnInit, OnDestroy\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n  @ViewChild(\"resetPasswordTemplate\", { read: ViewContainerRef, static: true })\n  resetPasswordModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = OrganizationUserType;\n  userStatusType = OrganizationUserStatusType;\n\n  organizationId: string;\n  status: OrganizationUserStatusType = null;\n  accessEvents = false;\n  accessGroups = false;\n  canResetPassword = false; // User permission (admin/custom)\n  orgUseResetPassword = false; // Org plan ability\n  orgHasKeys = false; // Org public/private keys\n  orgResetPasswordPolicyEnabled = false;\n  callingUserType: OrganizationUserType = null;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    searchService: SearchService,\n    validationService: ValidationService,\n    private policyService: PolicyService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    private syncService: SyncService,\n    stateService: StateService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    combineLatest([this.route.params, this.route.queryParams, this.policyService.policies$])\n      .pipe(\n        concatMap(async ([params, qParams, policies]) => {\n          this.organizationId = params.organizationId;\n          const organization = await this.organizationService.get(this.organizationId);\n          this.accessEvents = organization.useEvents;\n          this.accessGroups = organization.useGroups;\n          this.canResetPassword = organization.canManageUsersPassword;\n          this.orgUseResetPassword = organization.useResetPassword;\n          this.callingUserType = organization.type;\n          this.orgHasKeys = organization.hasPublicAndPrivateKeys;\n\n          // Backfill pub/priv key if necessary\n          if (this.canResetPassword && !this.orgHasKeys) {\n            const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n            const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n            const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n            const response = await this.organizationApiService.updateKeys(\n              this.organizationId,\n              request\n            );\n            if (response != null) {\n              this.orgHasKeys = response.publicKey != null && response.privateKey != null;\n              await this.syncService.fullSync(true); // Replace oganizations with new data\n            } else {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n          }\n\n          const resetPasswordPolicy = policies\n            .filter((policy) => policy.type === PolicyType.ResetPassword)\n            .find((p) => p.organizationId === this.organizationId);\n          this.orgResetPasswordPolicyEnabled = resetPasswordPolicy?.enabled;\n\n          await this.load();\n\n          this.searchText = qParams.search;\n          if (qParams.viewEvents != null) {\n            const user = this.users.filter((u) => u.id === qParams.viewEvents);\n            if (user.length > 0 && user[0].status === OrganizationUserStatusType.Confirmed) {\n              this.events(user[0]);\n            }\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load() {\n    super.load();\n    await super.load();\n  }\n\n  getUsers(): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    return this.apiService.getOrganizationUsers(this.organizationId);\n  }\n\n  deleteUser(id: string): Promise<void> {\n    return this.apiService.deleteOrganizationUser(this.organizationId, id);\n  }\n\n  revokeUser(id: string): Promise<void> {\n    return this.apiService.revokeOrganizationUser(this.organizationId, id);\n  }\n\n  restoreUser(id: string): Promise<void> {\n    return this.apiService.restoreOrganizationUser(this.organizationId, id);\n  }\n\n  reinviteUser(id: string): Promise<void> {\n    return this.apiService.postOrganizationUserReinvite(this.organizationId, id);\n  }\n\n  async confirmUser(\n    user: OrganizationUserUserDetailsResponse,\n    publicKey: Uint8Array\n  ): Promise<void> {\n    const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n    const key = await this.cryptoService.rsaEncrypt(orgKey.key, publicKey.buffer);\n    const request = new OrganizationUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postOrganizationUserConfirm(this.organizationId, user.id, request);\n  }\n\n  allowResetPassword(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    // Hierarchy check\n    let callingUserHasPermission = false;\n\n    switch (this.callingUserType) {\n      case OrganizationUserType.Owner:\n        callingUserHasPermission = true;\n        break;\n      case OrganizationUserType.Admin:\n        callingUserHasPermission = orgUser.type !== OrganizationUserType.Owner;\n        break;\n      case OrganizationUserType.Custom:\n        callingUserHasPermission =\n          orgUser.type !== OrganizationUserType.Owner &&\n          orgUser.type !== OrganizationUserType.Admin;\n        break;\n    }\n\n    // Final\n    return (\n      this.canResetPassword &&\n      callingUserHasPermission &&\n      this.orgUseResetPassword &&\n      this.orgHasKeys &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled &&\n      orgUser.status === OrganizationUserStatusType.Confirmed\n    );\n  }\n\n  showEnrolledStatus(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    return (\n      this.orgUseResetPassword &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled\n    );\n  }\n\n  async edit(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organizationId;\n        comp.organizationUserId = user != null ? user.id : null;\n        comp.usesKeyConnector = user?.usesKeyConnector;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onRevokedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onRestoredUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n\n  async groups(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserGroupsComponent,\n      this.groupsModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organizationId;\n        comp.organizationUserId = user != null ? user.id : null;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkRevoke() {\n    await this.bulkRevokeOrRestore(true);\n  }\n\n  async bulkRestore() {\n    await this.bulkRevokeOrRestore(false);\n  }\n\n  async bulkRevokeOrRestore(isRevoking: boolean) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const ref = this.modalService.open(BulkRestoreRevokeComponent, {\n      allowMultipleModals: true,\n      data: {\n        organizationId: this.organizationId,\n        users: this.getCheckedUsers(),\n        isRevoking: isRevoking,\n      },\n    });\n\n    await ref.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === OrganizationUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new OrganizationUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyOrganizationUserReinvite(\n        this.organizationId,\n        request\n      );\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async events(user: OrganizationUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.organizationId = this.organizationId;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async resetPassword(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      ResetPasswordComponent,\n      this.resetPasswordModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.email = user != null ? user.email : null;\n        comp.organizationId = this.organizationId;\n        comp.id = user != null ? user.id : null;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onPasswordReset.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n\n  protected async removeUserConfirmationDialog(user: OrganizationUserUserDetailsResponse) {\n    const warningMessage = user.usesKeyConnector\n      ? this.i18nService.t(\"removeUserConfirmationKeyConnector\")\n      : this.i18nService.t(\"removeOrgUserConfirmation\");\n\n    return this.platformUtilsService.showDialog(\n      warningMessage,\n      this.i18nService.t(\"removeUserIdAccess\", this.userNamePipe.transform(user)),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n  }\n\n  private async showBulkStatus(\n    users: OrganizationUserUserDetailsResponse[],\n    filteredUsers: OrganizationUserUserDetailsResponse[],\n    request: Promise<ListResponse<OrganizationUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nexport class PolicyRequest {\n  type: PolicyType;\n  enabled: boolean;\n  data: any;\n}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nexport abstract class BasePolicy {\n  abstract name: string;\n  abstract description: string;\n  abstract type: PolicyType;\n  abstract component: any;\n\n  display(organization: Organization) {\n    return true;\n  }\n}\n\n@Directive()\nexport abstract class BasePolicyComponent implements OnInit {\n  @Input() policyResponse: PolicyResponse;\n  @Input() policy: BasePolicy;\n\n  enabled = new UntypedFormControl(false);\n  data: UntypedFormGroup = null;\n\n  ngOnInit(): void {\n    this.enabled.setValue(this.policyResponse.enabled);\n\n    if (this.policyResponse.data != null) {\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    this.data.patchValue(this.policyResponse.data ?? {});\n  }\n\n  buildRequestData() {\n    if (this.data != null) {\n      return this.data.value;\n    }\n\n    return null;\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>) {\n    const request = new PolicyRequest();\n    request.enabled = this.enabled.value;\n    request.type = this.policy.type;\n    request.data = this.buildRequestData();\n\n    return Promise.resolve(request);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"policiesEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"policiesEditTitle\">\n          {{ \"editPolicy\" | i18n }} - {{ policy.name | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n\n      <div class=\"modal-body\">\n        <div class=\"modal-body\" *ngIf=\"loading\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div [hidden]=\"loading\">\n          <p>{{ policy.description | i18n }}</p>\n          <ng-template #policyForm></ng-template>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nimport { BasePolicy, BasePolicyComponent } from \"../policies/base-policy.component\";\n\n@Component({\n  selector: \"app-policy-edit\",\n  templateUrl: \"policy-edit.component.html\",\n})\nexport class PolicyEditComponent {\n  @Input() policy: BasePolicy;\n  @Input() organizationId: string;\n  @Input() policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n  @Output() onSavedPolicy = new EventEmitter();\n\n  @ViewChild(\"policyForm\", { read: ViewContainerRef, static: true })\n  policyFormRef: ViewContainerRef;\n\n  policyType = PolicyType;\n  loading = true;\n  enabled = false;\n  formPromise: Promise<any>;\n  defaultTypes: any[];\n  policyComponent: BasePolicyComponent;\n\n  private policyResponse: PolicyResponse;\n\n  constructor(\n    private policyApiService: PolicyApiServiceAbstraction,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef,\n    private logService: LogService\n  ) {}\n\n  async ngAfterViewInit() {\n    await this.load();\n    this.loading = false;\n\n    const factory = this.componentFactoryResolver.resolveComponentFactory(this.policy.component);\n    this.policyComponent = this.policyFormRef.createComponent(factory)\n      .instance as BasePolicyComponent;\n    this.policyComponent.policy = this.policy;\n    this.policyComponent.policyResponse = this.policyResponse;\n\n    this.cdr.detectChanges();\n  }\n\n  async load() {\n    try {\n      this.policyResponse = await this.policyApiService.getPolicy(\n        this.organizationId,\n        this.policy.type\n      );\n    } catch (e) {\n      if (e.statusCode === 404) {\n        this.policyResponse = new PolicyResponse({ Enabled: false });\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  async submit() {\n    let request: PolicyRequest;\n    try {\n      request = await this.policyComponent.buildRequest(this.policiesEnabledMap);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.policyApiService.putPolicy(\n        this.organizationId,\n        this.policy.type,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedPolicyId\", this.i18nService.t(this.policy.name))\n      );\n      this.onSavedPolicy.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"policies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n  <tbody>\n    <tr *ngFor=\"let p of policies\">\n      <td *ngIf=\"p.display(organization)\">\n        <a href=\"#\" appStopClick (click)=\"edit(p)\">{{ p.name | i18n }}</a>\n        <span bitBadge badgeType=\"success\" *ngIf=\"policiesEnabledMap.get(p.type)\">{{\n          \"on\" | i18n\n        }}</span>\n        <small class=\"text-muted d-block\">{{ p.description | i18n }}</small>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<ng-template #editTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nimport { PolicyListService } from \"../../core\";\nimport { BasePolicy } from \"../policies/base-policy.component\";\n\nimport { PolicyEditComponent } from \"./policy-edit.component\";\n\n@Component({\n  selector: \"app-org-policies\",\n  templateUrl: \"policies.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PoliciesComponent implements OnInit {\n  @ViewChild(\"editTemplate\", { read: ViewContainerRef, static: true })\n  editModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  policies: BasePolicy[];\n  organization: Organization;\n\n  private orgPolicies: PolicyResponse[];\n  private policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n\n  constructor(\n    private route: ActivatedRoute,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyListService: PolicyListService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      this.policies = this.policyListService.getPolicies();\n\n      await this.load();\n\n      // Handle policies component launch from Event message\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        if (qParams.policyId != null) {\n          const policyIdFromEvents: string = qParams.policyId;\n          for (const orgPolicy of this.orgPolicies) {\n            if (orgPolicy.id === policyIdFromEvents) {\n              for (let i = 0; i < this.policies.length; i++) {\n                if (this.policies[i].type === orgPolicy.type) {\n                  this.edit(this.policies[i]);\n                  break;\n                }\n              }\n              break;\n            }\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.policyApiService.getPolicies(this.organizationId);\n    this.orgPolicies = response.data != null && response.data.length > 0 ? response.data : [];\n    this.orgPolicies.forEach((op) => {\n      this.policiesEnabledMap.set(op.type, op.enabled);\n    });\n\n    this.loading = false;\n  }\n\n  async edit(policy: BasePolicy) {\n    const [modal] = await this.modalService.openViewRef(\n      PolicyEditComponent,\n      this.editModalRef,\n      (comp) => {\n        comp.policy = policy;\n        comp.organizationId = this.organizationId;\n        comp.policiesEnabledMap = this.policiesEnabledMap;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedPolicy.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n}\n","import { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationUpdateRequest {\n  name: string;\n  identifier: string;\n  businessName: string;\n  billingEmail: string;\n  keys: OrganizationKeysRequest;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"apiKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"apiKeyTitle\">{{ apiKeyTitle | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ apiKeyDescription | i18n }}</p>\n        <app-user-verification\n          [(ngModel)]=\"masterPassword\"\n          ngDefaultControl\n          name=\"secret\"\n          *ngIf=\"!clientSecret\"\n        >\n        </app-user-verification>\n\n        <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{ apiKeyWarning | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          title=\"{{ 'oauth2ClientCredentials' | i18n }}\"\n          icon=\"bwi bwi-key\"\n          *ngIf=\"clientSecret\"\n        >\n          <p class=\"mb-1\">\n            <strong>client_id:</strong><br />\n            <code>{{ clientId }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>client_secret:</strong><br />\n            <code>{{ clientSecret }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>scope:</strong><br />\n            <code>{{ scope }}</code>\n          </p>\n          <p class=\"mb-0\">\n            <strong>grant_type:</strong><br />\n            <code>{{ grantType }}</code>\n          </p>\n        </app-callout>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!clientSecret\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (isRotation ? \"rotateApiKey\" : \"viewApiKey\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/apiKeyResponse\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-api-key\",\n  templateUrl: \"api-key.component.html\",\n})\nexport class ApiKeyComponent {\n  keyType: string;\n  isRotation: boolean;\n  postKey: (entityId: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  entityId: string;\n  scope: string;\n  grantType: string;\n  apiKeyTitle: string;\n  apiKeyWarning: string;\n  apiKeyDescription: string;\n\n  masterPassword: Verification;\n  formPromise: Promise<ApiKeyResponse>;\n  clientId: string;\n  clientSecret: string;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.postKey(this.entityId, request));\n      const response = await this.formPromise;\n      this.clientSecret = response.apiKey;\n      this.clientId = `${this.keyType}.${this.entityId}`;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-purge-vault\",\n  templateUrl: \"purge-vault.component.html\",\n})\nexport class PurgeVaultComponent {\n  @Input() organizationId?: string = null;\n\n  masterPassword: Verification;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private router: Router,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postPurgeCiphers(request, this.organizationId));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"vaultPurged\"));\n      if (this.organizationId != null) {\n        this.router.navigate([\"organizations\", this.organizationId, \"vault\"]);\n      } else {\n        this.router.navigate([\"vault\"]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"purgeVaultTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"purgeVaultTitle\">{{ \"purgeVault\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ (organizationId ? \"purgeOrgVaultDesc\" : \"purgeVaultDesc\") | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"purgeVaultWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"purgeVault\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteOrganizationTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      *ngIf=\"loaded\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deleteOrganizationTitle\">{{ \"deleteOrganization\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{\n          \"deletingOrganizationIsPermanentWarning\" | i18n: organizationName\n        }}</app-callout>\n        <p id=\"organizationDeleteDescription\">\n          <ng-container\n            *ngIf=\"\n              deleteOrganizationRequestType === 'InvalidFamiliesForEnterprise';\n              else regularDelete\n            \"\n          >\n            {{ \"orgCreatedSponsorshipInvalid\" | i18n }}\n          </ng-container>\n          <ng-template #regularDelete>\n            <ng-container *ngIf=\"organizationContentSummary.totalItemCount > 0\">\n              {{ \"deletingOrganizationContentWarning\" | i18n: organizationName }}\n              <ul>\n                <li *ngFor=\"let type of organizationContentSummary.itemCountByType\">\n                  {{ type.count }} {{ type.localizationKey | i18n }}\n                </li>\n              </ul>\n              {{ \"deletingOrganizationActiveUserAccountsWarning\" | i18n }}\n            </ng-container>\n          </ng-template>\n        </p>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteOrganization\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nclass CountBasedLocalizationKey {\n  singular: string;\n  plural: string;\n\n  getKey(count: number) {\n    return count == 1 ? this.singular : this.plural;\n  }\n\n  constructor(singular: string, plural: string) {\n    this.singular = singular;\n    this.plural = plural;\n  }\n}\n\nclass OrganizationContentSummaryItem {\n  count: number;\n  get localizationKey(): string {\n    return this.localizationKeyOptions.getKey(this.count);\n  }\n  private localizationKeyOptions: CountBasedLocalizationKey;\n  constructor(count: number, localizationKeyOptions: CountBasedLocalizationKey) {\n    this.count = count;\n    this.localizationKeyOptions = localizationKeyOptions;\n  }\n}\n\nclass OrganizationContentSummary {\n  totalItemCount = 0;\n  itemCountByType: OrganizationContentSummaryItem[] = [];\n}\n\n@Component({\n  selector: \"app-delete-organization\",\n  templateUrl: \"delete-organization.component.html\",\n})\nexport class DeleteOrganizationComponent implements OnInit {\n  organizationId: string;\n  loaded: boolean;\n  deleteOrganizationRequestType: \"InvalidFamiliesForEnterprise\" | \"RegularDelete\" = \"RegularDelete\";\n  organizationName: string;\n  organizationContentSummary: OrganizationContentSummary = new OrganizationContentSummary();\n  @Output() onSuccess: EventEmitter<void> = new EventEmitter();\n\n  masterPassword: Verification;\n  formPromise: Promise<void>;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService,\n    private cipherService: CipherService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    await this.load();\n  }\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.organizationApiService.delete(this.organizationId, request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"organizationDeleted\"),\n        this.i18nService.t(\"organizationDeletedDesc\")\n      );\n      this.onSuccess.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async load() {\n    this.organizationName = (await this.organizationService.get(this.organizationId)).name;\n    this.organizationContentSummary = await this.buildOrganizationContentSummary();\n    this.loaded = true;\n  }\n\n  private async buildOrganizationContentSummary(): Promise<OrganizationContentSummary> {\n    const organizationContentSummary = new OrganizationContentSummary();\n    const organizationItems = (\n      await this.cipherService.getAllFromApiForOrganization(this.organizationId)\n    ).filter((item) => item.deletedDate == null);\n\n    if (organizationItems.length < 1) {\n      return organizationContentSummary;\n    }\n\n    organizationContentSummary.totalItemCount = organizationItems.length;\n    for (const cipherType of Utils.iterateEnum(CipherType)) {\n      const count = this.getOrganizationItemCountByType(organizationItems, cipherType);\n      if (count > 0) {\n        organizationContentSummary.itemCountByType.push(\n          new OrganizationContentSummaryItem(\n            count,\n            this.getOrganizationItemLocalizationKeysByType(CipherType[cipherType])\n          )\n        );\n      }\n    }\n\n    return organizationContentSummary;\n  }\n\n  private getOrganizationItemCountByType(items: CipherView[], type: CipherType) {\n    return items.filter((item) => item.type == type).length;\n  }\n\n  private getOrganizationItemLocalizationKeysByType(type: string): CountBasedLocalizationKey {\n    return new CountBasedLocalizationKey(`type${type}`, `type${type}Plural`);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myOrganization\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"organizationName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"org.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"org.billingEmail\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"businessName\">{{ \"businessName\" | i18n }}</label>\n        <input\n          id=\"businessName\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BusinessName\"\n          [(ngModel)]=\"org.businessName\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"identifier\">{{ \"identifier\" | i18n }}</label>\n        <input\n          id=\"identifier\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Identifier\"\n          [(ngModel)]=\"org.identifier\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <app-avatar data=\"{{ org.name }}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n<ng-container *ngIf=\"canUseApi\">\n  <div class=\"secondary-header border-0 mb-0\">\n    <h1>{{ \"apiKey\" | i18n }}</h1>\n  </div>\n  <p>\n    {{ \"apiKeyDesc\" | i18n }}\n    <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\n      {{ \"learnMore\" | i18n }}\n    </a>\n  </p>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">\n    {{ \"viewApiKey\" | i18n }}\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">\n    {{ \"rotateApiKey\" | i18n }}\n  </button>\n</ng-container>\n<div class=\"secondary-header border-0 mb-0\">\n  <h1>{{ \"taxInformation\" | i18n }}</h1>\n</div>\n<p>{{ \"taxInformationDesc\" | i18n }}</p>\n<div *ngIf=\"!org || loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #formTax\n  (ngSubmit)=\"submitTaxInfo()\"\n  [appApiAction]=\"taxFormPromise\"\n  ngNativeValidate\n>\n  <app-tax-info></app-tax-info>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"formTax.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteOrganization()\">\n      {{ \"deleteOrganization\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n<ng-template #purgeOrganizationTemplate></ng-template>\n<ng-template #apiKeyTemplate></ng-template>\n<ng-template #rotateApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organizationKeysRequest\";\nimport { OrganizationUpdateRequest } from \"@bitwarden/common/models/request/organizationUpdateRequest\";\nimport { OrganizationResponse } from \"@bitwarden/common/models/response/organizationResponse\";\n\nimport { ApiKeyComponent } from \"../../settings/api-key.component\";\nimport { PurgeVaultComponent } from \"../../settings/purge-vault.component\";\nimport { TaxInfoComponent } from \"../../settings/tax-info.component\";\n\nimport { DeleteOrganizationComponent } from \"./delete-organization.component\";\n\n@Component({\n  selector: \"app-org-account\",\n  templateUrl: \"account.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccountComponent {\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n  @ViewChild(\"purgeOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"apiKeyTemplate\", { read: ViewContainerRef, static: true })\n  apiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateApiKeyModalRef: ViewContainerRef;\n  @ViewChild(TaxInfoComponent) taxInfo: TaxInfoComponent;\n\n  selfHosted = false;\n  canManageBilling = true;\n  loading = true;\n  canUseApi = false;\n  org: OrganizationResponse;\n  formPromise: Promise<OrganizationResponse>;\n  taxFormPromise: Promise<unknown>;\n\n  private organizationId: string;\n\n  constructor(\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private router: Router,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.canManageBilling = this.organizationService.get(this.organizationId).canManageBilling;\n      try {\n        this.org = await this.organizationApiService.get(this.organizationId);\n        this.canUseApi = this.org.useApi;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationUpdateRequest();\n      request.name = this.org.name;\n      request.businessName = this.org.businessName;\n      request.billingEmail = this.org.billingEmail;\n      request.identifier = this.org.identifier;\n\n      // Backfill pub/priv key if necessary\n      if (!this.org.hasPublicAndPrivateKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n      }\n\n      this.formPromise = this.organizationApiService.save(this.organizationId, request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"organizationUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async submitTaxInfo() {\n    this.taxFormPromise = this.taxInfo.submitTaxInfo();\n    await this.taxFormPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"taxInfoUpdated\"));\n  }\n\n  async deleteOrganization() {\n    await this.modalService.openViewRef(\n      DeleteOrganizationComponent,\n      this.deleteModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSuccess.subscribe(() => {\n          this.router.navigate([\"/\"]);\n        });\n      }\n    );\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef, (comp) => {\n      comp.organizationId = this.organizationId;\n    });\n  }\n\n  async viewApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.apiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.getOrCreateApiKey.bind(\n        this.organizationApiService\n      );\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyDesc\";\n    });\n  }\n\n  async rotateApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateApiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.isRotation = true;\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.rotateApiKey.bind(this.organizationApiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","export enum TransactionType {\n  Charge = 0,\n  Credit = 1,\n  PromotionalCredit = 2,\n  ReferralCredit = 3,\n  Refund = 4,\n}\n","export class VerifyBankRequest {\n  amount1: number;\n  amount2: number;\n}\n","export class BitPayInvoiceRequest {\n  userId: string;\n  organizationId: string;\n  credit: boolean;\n  amount: number;\n  returnUrl: string;\n  name: string;\n  email: string;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"addCredit\" | i18n }}</h3>\n    <div class=\"mb-4 text-lg\" *ngIf=\"showOptions\">\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-paypal\"\n          [value]=\"paymentMethodType.PayPal\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-paypal\">\n          <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n        >\n      </div>\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-bitcoin\"\n          [value]=\"paymentMethodType.BitPay\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-bitcoin\">\n          <i class=\"bwi bwi-fw bwi-bitcoin\" aria-hidden=\"true\"></i> Bitcoin</label\n        >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"row\">\n        <div class=\"col-4\">\n          <label for=\"creditAmount\">{{ \"amount\" | i18n }}</label>\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\"><span class=\"input-group-text\">$USD</span></div>\n            <input\n              id=\"creditAmount\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"CreditAmount\"\n              [(ngModel)]=\"creditAmount\"\n              (blur)=\"formatAmount()\"\n              required\n            />\n          </div>\n        </div>\n      </div>\n      <small class=\"form-text text-muted\">{{ \"creditDelayed\" | i18n }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading || ppLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n<form #ppButtonForm action=\"{{ ppButtonFormAction }}\" method=\"post\" target=\"_top\">\n  <input type=\"hidden\" name=\"cmd\" value=\"_xclick\" />\n  <input type=\"hidden\" name=\"business\" value=\"{{ ppButtonBusinessId }}\" />\n  <input type=\"hidden\" name=\"button_subtype\" value=\"services\" />\n  <input type=\"hidden\" name=\"no_note\" value=\"1\" />\n  <input type=\"hidden\" name=\"no_shipping\" value=\"1\" />\n  <input type=\"hidden\" name=\"rm\" value=\"1\" />\n  <input type=\"hidden\" name=\"return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"cancel_return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\n  <input type=\"hidden\" name=\"image_url\" value=\"https://bitwarden.com/images/paypal-banner.png\" />\n  <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF:btn_buynow_LG.gif:NonHosted\" />\n  <input type=\"hidden\" name=\"amount\" value=\"{{ creditAmount }}\" />\n  <input type=\"hidden\" name=\"custom\" value=\"{{ ppButtonCustomField }}\" />\n  <input type=\"hidden\" name=\"item_name\" value=\"Bitwarden Account Credit\" />\n  <input type=\"hidden\" name=\"item_number\" value=\"{{ subject }}\" />\n</form>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { PayPalConfig } from \"@bitwarden/common/abstractions/environment.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { BitPayInvoiceRequest } from \"@bitwarden/common/models/request/bitPayInvoiceRequest\";\n\n@Component({\n  selector: \"app-add-credit\",\n  templateUrl: \"add-credit.component.html\",\n})\nexport class AddCreditComponent implements OnInit {\n  @Input() creditAmount: string;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.PayPal;\n  @Input() organizationId: string;\n  @Output() onAdded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(\"ppButtonForm\", { read: ElementRef, static: true }) ppButtonFormRef: ElementRef;\n\n  paymentMethodType = PaymentMethodType;\n  ppButtonFormAction: string;\n  ppButtonBusinessId: string;\n  ppButtonCustomField: string;\n  ppLoading = false;\n  subject: string;\n  returnUrl: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private name: string;\n  private email: string;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    const payPalConfig = process.env.PAYPAL_CONFIG as PayPalConfig;\n    this.ppButtonFormAction = payPalConfig.buttonAction;\n    this.ppButtonBusinessId = payPalConfig.businessId;\n  }\n\n  async ngOnInit() {\n    if (this.organizationId != null) {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"20.00\";\n      }\n      this.ppButtonCustomField = \"organization_id:\" + this.organizationId;\n      const org = await this.organizationService.get(this.organizationId);\n      if (org != null) {\n        this.subject = org.name;\n        this.name = org.name;\n      }\n    } else {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"10.00\";\n      }\n      this.userId = await this.stateService.getUserId();\n      this.subject = await this.stateService.getEmail();\n      this.email = this.subject;\n      this.ppButtonCustomField = \"user_id:\" + this.userId;\n    }\n    this.ppButtonCustomField += \",account_credit:1\";\n    this.returnUrl = window.location.href;\n  }\n\n  async submit() {\n    if (this.creditAmount == null || this.creditAmount === \"\") {\n      return;\n    }\n\n    if (this.method === PaymentMethodType.PayPal) {\n      this.ppButtonFormRef.nativeElement.submit();\n      this.ppLoading = true;\n      return;\n    }\n    if (this.method === PaymentMethodType.BitPay) {\n      try {\n        const req = new BitPayInvoiceRequest();\n        req.email = this.email;\n        req.name = this.name;\n        req.credit = true;\n        req.amount = this.creditAmountNumber;\n        req.organizationId = this.organizationId;\n        req.userId = this.userId;\n        req.returnUrl = this.returnUrl;\n        this.formPromise = this.apiService.postBitPayInvoice(req);\n        const bitPayUrl: string = await this.formPromise;\n        this.platformUtilsService.launchUri(bitPayUrl);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      return;\n    }\n    try {\n      this.onAdded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  formatAmount() {\n    try {\n      if (this.creditAmount != null && this.creditAmount !== \"\") {\n        const floatAmount = Math.abs(parseFloat(this.creditAmount));\n        if (floatAmount > 0) {\n          this.creditAmount = parseFloat((Math.round(floatAmount * 100) / 100).toString())\n            .toFixed(2)\n            .toString();\n          return;\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.creditAmount = \"\";\n  }\n\n  get creditAmountNumber(): number {\n    if (this.creditAmount != null && this.creditAmount !== \"\") {\n      try {\n        return parseFloat(this.creditAmount);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return null;\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../request/organizationTaxInfoUpdateRequest\";\n\nexport class PaymentRequest extends OrganizationTaxInfoUpdateRequest {\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n}\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PaymentRequest } from \"@bitwarden/common/models/request/paymentRequest\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-adjust-payment\",\n  templateUrl: \"adjust-payment.component.html\",\n})\nexport class AdjustPaymentComponent {\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent, { static: true }) taxInfoComponent: TaxInfoComponent;\n\n  @Input() currentType?: PaymentMethodType;\n  @Input() organizationId: string;\n  @Output() onAdjusted = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  paymentMethodType = PaymentMethodType;\n  formPromise: Promise<void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    try {\n      const request = new PaymentRequest();\n      this.formPromise = this.paymentComponent.createPaymentToken().then((result) => {\n        request.paymentToken = result[0];\n        request.paymentMethodType = result[1];\n        request.postalCode = this.taxInfoComponent.taxInfo.postalCode;\n        request.country = this.taxInfoComponent.taxInfo.country;\n        if (this.organizationId == null) {\n          return this.apiService.postAccountPayment(request);\n        } else {\n          request.taxId = this.taxInfoComponent.taxInfo.taxId;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          request.line1 = this.taxInfoComponent.taxInfo.line1;\n          request.line2 = this.taxInfoComponent.taxInfo.line2;\n          request.city = this.taxInfoComponent.taxInfo.city;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          return this.organizationApiService.updatePayment(this.organizationId, request);\n        }\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedPaymentMethod\")\n      );\n      this.onAdjusted.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  changeCountry() {\n    if (this.taxInfoComponent.taxInfo.country === \"US\") {\n      this.paymentComponent.hideBank = !this.organizationId;\n    } else {\n      this.paymentComponent.hideBank = true;\n      if (this.paymentComponent.method === PaymentMethodType.BankAccount) {\n        this.paymentComponent.method = PaymentMethodType.Card;\n        this.paymentComponent.changeMethod();\n      }\n    }\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">\n      {{ (currentType != null ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n    </h3>\n    <app-payment [hideBank]=\"!organizationId\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changeCountry()\"></app-tax-info>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","<div class=\"page-header d-flex\">\n  <h1>\n    {{ \"billing\" | i18n }}\n  </h1>\n  <button\n    (click)=\"load()\"\n    class=\"btn btn-sm btn-outline-primary ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ (isCreditBalance ? \"accountCredit\" : \"accountBalance\") | i18n }}</h2>\n  <p class=\"text-lg\">\n    <strong>{{ creditOrBalance | currency: \"$\" }}</strong>\n  </p>\n  <p>{{ \"creditAppliedDesc\" | i18n }}</p>\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-secondary\"\n    (click)=\"addCredit()\"\n    *ngIf=\"!showAddCredit\"\n  >\n    {{ \"addCredit\" | i18n }}\n  </button>\n  <app-add-credit\n    [organizationId]=\"organizationId\"\n    (onAdded)=\"closeAddCredit(true)\"\n    (onCanceled)=\"closeAddCredit(false)\"\n    *ngIf=\"showAddCredit\"\n  >\n  </app-add-credit>\n  <h2 class=\"spaced-header\">{{ \"paymentMethod\" | i18n }}</h2>\n  <p *ngIf=\"!paymentSource\">{{ \"noPaymentMethod\" | i18n }}</p>\n  <ng-container *ngIf=\"paymentSource\">\n    <app-callout\n      type=\"warning\"\n      title=\"{{ 'verifyBankAccount' | i18n }}\"\n      *ngIf=\"\n        paymentSource.type === paymentMethodType.BankAccount && paymentSource.needsVerification\n      \"\n    >\n      <p>{{ \"verifyBankAccountDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}</p>\n      <form\n        #verifyForm\n        class=\"form-inline\"\n        (ngSubmit)=\"verifyBank()\"\n        [appApiAction]=\"verifyBankPromise\"\n        ngNativeValidate\n      >\n        <label class=\"sr-only\" for=\"verifyAmount1\">{{ \"amount\" | i18n: \"1\" }}</label>\n        <div class=\"input-group mr-2\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">$0.</div>\n          </div>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"verifyAmount1\"\n            placeholder=\"xx\"\n            name=\"Amount1\"\n            [(ngModel)]=\"verifyAmount1\"\n            min=\"1\"\n            max=\"99\"\n            step=\"1\"\n            required\n          />\n        </div>\n        <label class=\"sr-only\" for=\"verifyAmount2\">{{ \"amount\" | i18n: \"2\" }}</label>\n        <div class=\"input-group mr-2\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">$0.</div>\n          </div>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"verifyAmount2\"\n            placeholder=\"xx\"\n            name=\"Amount2\"\n            [(ngModel)]=\"verifyAmount2\"\n            min=\"1\"\n            max=\"99\"\n            step=\"1\"\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          class=\"btn btn-outline-primary btn-submit\"\n          [disabled]=\"verifyForm.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"verifyBankAccount\" | i18n }}</span>\n        </button>\n      </form>\n    </app-callout>\n    <p>\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-credit-card': paymentSource.type === paymentMethodType.Card,\n          'bwi-bank': paymentSource.type === paymentMethodType.BankAccount,\n          'bwi-money': paymentSource.type === paymentMethodType.Check,\n          'bwi-paypal text-primary': paymentSource.type === paymentMethodType.PayPal,\n          'bwi-apple text-muted': paymentSource.type === paymentMethodType.AppleInApp,\n          'bwi-google text-muted': paymentSource.type === paymentMethodType.GoogleInApp\n        }\"\n      ></i>\n      <span *ngIf=\"paymentSourceInApp\">{{ \"inAppPurchase\" | i18n }}</span>\n      {{ paymentSource.description }}\n    </p>\n  </ng-container>\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-secondary\"\n    (click)=\"changePayment()\"\n    *ngIf=\"!showAdjustPayment\"\n  >\n    {{ (paymentSource ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n  </button>\n  <app-adjust-payment\n    [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n    [organizationId]=\"organizationId\"\n    (onAdjusted)=\"closePayment(true)\"\n    (onCanceled)=\"closePayment(false)\"\n    *ngIf=\"showAdjustPayment\"\n  >\n  </app-adjust-payment>\n  <h2 class=\"spaced-header\">{{ \"invoices\" | i18n }}</h2>\n  <p *ngIf=\"!invoices || !invoices.length\">{{ \"noInvoices\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n    <tbody>\n      <tr *ngFor=\"let i of invoices\">\n        <td>{{ i.date | date: \"mediumDate\" }}</td>\n        <td>\n          <a\n            href=\"{{ i.pdfUrl }}\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            class=\"mr-2\"\n            appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n          >\n            <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n          ></a>\n          <a href=\"{{ i.url }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ 'viewInvoice' | i18n }}\">\n            {{ \"invoiceNumber\" | i18n: i.number }}</a\n          >\n        </td>\n        <td>{{ i.amount | currency: \"$\" }}</td>\n        <td>\n          <span *ngIf=\"i.paid\">\n            <i class=\"bwi bwi-check text-success\" aria-hidden=\"true\"></i>\n            {{ \"paid\" | i18n }}\n          </span>\n          <span *ngIf=\"!i.paid\">\n            <i class=\"bwi bwi-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n            {{ \"unpaid\" | i18n }}\n          </span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <h2 class=\"spaced-header\">{{ \"transactions\" | i18n }}</h2>\n  <p *ngIf=\"!transactions || !transactions.length\">{{ \"noTransactions\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n    <tbody>\n      <tr *ngFor=\"let t of transactions\">\n        <td>{{ t.createdDate | date: \"mediumDate\" }}</td>\n        <td>\n          <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n            {{ \"chargeNoun\" | i18n }}\n          </span>\n          <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n        </td>\n        <td>\n          <i\n            class=\"bwi bwi-fw\"\n            *ngIf=\"t.paymentMethodType\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-credit-card': t.paymentMethodType === paymentMethodType.Card,\n              'bwi-bank':\n                t.paymentMethodType === paymentMethodType.BankAccount ||\n                t.paymentMethodType === paymentMethodType.WireTransfer,\n              'bwi-bitcoin text-warning': t.paymentMethodType === paymentMethodType.BitPay,\n              'bwi-paypal text-primary': t.paymentMethodType === paymentMethodType.PayPal\n            }\"\n          ></i>\n          {{ t.details }}\n        </td>\n        <td\n          [ngClass]=\"{ 'text-strike': t.refunded }\"\n          title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n        >\n          {{ t.amount | currency: \"$\" }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <small class=\"text-muted\">* {{ \"chargesStatement\" | i18n: \"BITWARDEN\" }}</small>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { TransactionType } from \"@bitwarden/common/enums/transactionType\";\nimport { VerifyBankRequest } from \"@bitwarden/common/models/request/verifyBankRequest\";\nimport { BillingResponse } from \"@bitwarden/common/models/response/billingResponse\";\n\n@Component({\n  selector: \"app-org-billing\",\n  templateUrl: \"./organization-billing.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class OrganizationBillingComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  showAdjustPayment = false;\n  showAddCredit = false;\n  billing: BillingResponse;\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n  organizationId: string;\n  verifyAmount1: number;\n  verifyAmount2: number;\n\n  verifyBankPromise: Promise<void>;\n\n  // TODO - Make sure to properly split out the billing/invoice and payment method/account during org admin refresh\n\n  constructor(\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    if (this.organizationId != null) {\n      this.billing = await this.organizationApiService.getBilling(this.organizationId);\n    }\n    this.loading = false;\n  }\n\n  async verifyBank() {\n    if (this.loading) {\n      return;\n    }\n\n    try {\n      const request = new VerifyBankRequest();\n      request.amount1 = this.verifyAmount1;\n      request.amount2 = this.verifyAmount2;\n      this.verifyBankPromise = this.organizationApiService.verifyBank(this.organizationId, request);\n      await this.verifyBankPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"verifiedBankAccount\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  addCredit() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"addCredit\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAddCredit = true;\n  }\n\n  closeAddCredit(load: boolean) {\n    this.showAddCredit = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  changePayment() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"changePaymentMethod\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAdjustPayment = true;\n  }\n\n  closePayment(load: boolean) {\n    this.showAdjustPayment = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get isCreditBalance() {\n    return this.billing == null || this.billing.balance <= 0;\n  }\n\n  get creditOrBalance() {\n    return Math.abs(this.billing != null ? this.billing.balance : 0);\n  }\n\n  get paymentSource() {\n    return this.billing != null ? this.billing.paymentSource : null;\n  }\n\n  get paymentSourceInApp() {\n    return (\n      this.paymentSource != null &&\n      (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n        this.paymentSource.type === PaymentMethodType.GoogleInApp)\n    );\n  }\n\n  get invoices() {\n    return this.billing != null ? this.billing.invoices : null;\n  }\n\n  get transactions() {\n    return this.billing != null ? this.billing.transactions : null;\n  }\n}\n","export enum OrganizationApiKeyType {\n  Default = 0,\n  BillingSync = 1,\n  Scim = 2,\n}\n","export enum OrganizationConnectionType {\n  CloudBillingSync = 1,\n  Scim = 2,\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class BillingSyncConfigApi extends BaseResponse {\n  billingSyncKey: string;\n\n  constructor(data: any) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.billingSyncKey = this.getResponseProperty(\"BillingSyncKey\");\n  }\n}\n","export class BillingSyncConfigRequest {\n  constructor(private billingSyncKey: string) {}\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\n\nimport { BillingSyncConfigRequest } from \"./billingSyncConfigRequest\";\nimport { ScimConfigRequest } from \"./scimConfigRequest\";\n\n/**API request config types for OrganizationConnectionRequest */\nexport type OrganizationConnectionRequestConfigs = BillingSyncConfigRequest | ScimConfigRequest;\n\nexport class OrganizationConnectionRequest {\n  constructor(\n    public organizationId: string,\n    public type: OrganizationConnectionType,\n    public enabled: boolean,\n    public config: OrganizationConnectionRequestConfigs\n  ) {}\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"@bitwarden/common/models/api/billingSyncConfigApi\";\nimport { BillingSyncConfigRequest } from \"@bitwarden/common/models/request/billingSyncConfigRequest\";\nimport { OrganizationConnectionRequest } from \"@bitwarden/common/models/request/organizationConnectionRequest\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/models/response/organizationConnectionResponse\";\n\n@Component({\n  selector: \"app-billing-sync-key\",\n  templateUrl: \"billing-sync-key.component.html\",\n})\nexport class BillingSyncKeyComponent {\n  entityId: string;\n  existingConnectionId: string;\n  billingSyncKey: string;\n  setParentConnection: (connection: OrganizationConnectionResponse<BillingSyncConfigApi>) => void;\n\n  formPromise: Promise<OrganizationConnectionResponse<BillingSyncConfigApi>> | Promise<void>;\n\n  constructor(private apiService: ApiService, private logService: LogService) {}\n\n  async submit() {\n    try {\n      const request = new OrganizationConnectionRequest(\n        this.entityId,\n        OrganizationConnectionType.CloudBillingSync,\n        true,\n        new BillingSyncConfigRequest(this.billingSyncKey)\n      );\n      if (this.existingConnectionId == null) {\n        this.formPromise = this.apiService.createOrganizationConnection(\n          request,\n          BillingSyncConfigApi\n        );\n      } else {\n        this.formPromise = this.apiService.updateOrganizationConnection(\n          request,\n          BillingSyncConfigApi,\n          this.existingConnectionId\n        );\n      }\n      const response = (await this\n        .formPromise) as OrganizationConnectionResponse<BillingSyncConfigApi>;\n      this.existingConnectionId = response?.id;\n      this.billingSyncKey = response?.config?.billingSyncKey;\n      this.setParentConnection(response);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async deleteConnection() {\n    this.formPromise = this.apiService.deleteOrganizationConnection(this.existingConnectionId);\n    await this.formPromise;\n    this.setParentConnection(null);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"billingSyncTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"billingSyncTitle\">{{ \"manageBillingSync\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"billingSyncKeyDesc\" | i18n }}</p>\n        <div class=\"form-group\">\n          <label for=\"billingSyncKey\"\n            >{{ \"billingSyncKey\" | i18n }} <small>(</small><small>{{ \"required\" | i18n }}</small\n            ><small>)</small></label\n          >\n          <input\n            id=\"billingSyncKey\"\n            type=\"input\"\n            name=\"billingSyncKey\"\n            class=\"form-control\"\n            [(ngModel)]=\"billingSyncKey\"\n            required\n            appAutofocus\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"deleteConnection()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            [disabled]=\"form.loading\"\n          >\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"form.loading\" aria-hidden=\"true\"></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class OrganizationApiKeyRequest extends SecretVerificationRequest {\n  type: OrganizationApiKeyType = OrganizationApiKeyType.Default;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"billingSyncApiKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"billingSyncApiKeyTitle\">\n          {{ (hasBillingToken ? \"viewBillingSyncToken\" : \"generateBillingSyncToken\") | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-user-verification\n          [(ngModel)]=\"masterPassword\"\n          ngDefaultControl\n          name=\"secret\"\n          *ngIf=\"!clientSecret\"\n        >\n        </app-user-verification>\n        <ng-container *ngIf=\"clientSecret && showRotateScreen\">\n          <p>{{ \"rotateBillingSyncTokenTitle\" | i18n }}</p>\n          <app-callout type=\"warning\">\n            {{ \"rotateBillingSyncTokenWarning\" | i18n }}\n          </app-callout>\n        </ng-container>\n\n        <div *ngIf=\"clientSecret && !showRotateScreen\">\n          <p>{{ \"copyPasteBillingSync\" | i18n }}</p>\n          <label for=\"clientSecret\">Billing Sync Key</label>\n          <div class=\"input-group\">\n            <input\n              id=\"clientSecret\"\n              class=\"form-control text-monospace\"\n              type=\"text\"\n              [(ngModel)]=\"clientSecret\"\n              name=\"clientSecret\"\n              disabled\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                (click)=\"copy()\"\n                [appA11yTitle]=\"'copy' | i18n\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"small text-muted mt-2\" *ngIf=\"showLastSyncText\">\n            <b class=\"font-weight-semibold\">{{ \"lastSync\" | i18n }}:</b>\n            {{ lastSyncDate | date: \"medium\" }}\n          </div>\n          <div class=\"small text-danger mt-2\" *ngIf=\"showAwaitingSyncText\">\n            <i class=\"bwi bwi-error\"></i>\n            {{\n              (daysBetween === 1 ? \"awaitingSyncSingular\" : \"awaitingSyncPlural\")\n                | i18n: daysBetween\n            }}\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!clientSecret || showRotateScreen\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            *ngIf=\"form.loading\"\n          ></i>\n          <span>\n            {{ submitButtonText }}\n          </span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary\"\n          data-dismiss=\"modal\"\n          *ngIf=\"!showRotateScreen\"\n        >\n          {{ \"close\" | i18n }}\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary\"\n          *ngIf=\"showRotateScreen\"\n          (click)=\"cancelRotate()\"\n        >\n          {{ \"cancel\" | i18n }}\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary\"\n          *ngIf=\"clientSecret && !showRotateScreen\"\n          (click)=\"rotateToken()\"\n        >\n          {{ \"rotateToken\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/enums/organizationApiKeyType\";\nimport { OrganizationApiKeyRequest } from \"@bitwarden/common/models/request/organizationApiKeyRequest\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/apiKeyResponse\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-billing-sync-api-key\",\n  templateUrl: \"billing-sync-api-key.component.html\",\n})\nexport class BillingSyncApiKeyComponent {\n  organizationId: string;\n  hasBillingToken: boolean;\n\n  showRotateScreen: boolean;\n  masterPassword: Verification;\n  formPromise: Promise<ApiKeyResponse>;\n  clientSecret?: string;\n  keyRevisionDate?: Date;\n  lastSyncDate?: Date = null;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  copy() {\n    this.platformUtilsService.copyToClipboard(this.clientSecret);\n  }\n\n  async submit() {\n    if (this.showRotateScreen) {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword, OrganizationApiKeyRequest)\n        .then((request) => {\n          request.type = OrganizationApiKeyType.BillingSync;\n          return this.organizationApiService.rotateApiKey(this.organizationId, request);\n        });\n      const response = await this.formPromise;\n      await this.load(response);\n      this.showRotateScreen = false;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"billingSyncApiKeyRotated\")\n      );\n    } else {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword, OrganizationApiKeyRequest)\n        .then((request) => {\n          request.type = OrganizationApiKeyType.BillingSync;\n          return this.organizationApiService.getOrCreateApiKey(this.organizationId, request);\n        });\n      const response = await this.formPromise;\n      await this.load(response);\n    }\n  }\n\n  async load(response: ApiKeyResponse) {\n    this.clientSecret = response.apiKey;\n    this.keyRevisionDate = response.revisionDate;\n    this.hasBillingToken = true;\n    const syncStatus = await this.apiService.getSponsorshipSyncStatus(this.organizationId);\n    this.lastSyncDate = syncStatus.lastSyncDate;\n  }\n\n  cancelRotate() {\n    this.showRotateScreen = false;\n  }\n\n  rotateToken() {\n    this.showRotateScreen = true;\n  }\n\n  private dayDiff(date1: Date, date2: Date): number {\n    const diffTime = Math.abs(date2.getTime() - date1.getTime());\n    return Math.round(diffTime / (1000 * 60 * 60 * 24));\n  }\n\n  get submitButtonText(): string {\n    if (this.showRotateScreen) {\n      return this.i18nService.t(\"rotateToken\");\n    }\n\n    return this.i18nService.t(this.hasBillingToken ? \"continue\" : \"generateToken\");\n  }\n\n  get showLastSyncText(): boolean {\n    // If the keyRevisionDate is later than the lastSyncDate we need to show\n    // a warning that they need to put the billing sync key in their self hosted install\n    return this.lastSyncDate && this.lastSyncDate > this.keyRevisionDate;\n  }\n\n  get showAwaitingSyncText(): boolean {\n    return this.lastSyncDate && this.lastSyncDate <= this.keyRevisionDate;\n  }\n\n  get daysBetween(): number {\n    return this.dayDiff(this.keyRevisionDate, new Date());\n  }\n}\n","export class StorageRequest {\n  storageGbAdjustment: number;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ (add ? \"addStorage\" : \"removeStorage\") | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"storageAdjustment\">{{\n          (add ? \"gbStorageAdd\" : \"gbStorageRemove\") | i18n\n        }}</label>\n        <input\n          id=\"storageAdjustment\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"StroageGbAdjustment\"\n          [(ngModel)]=\"storageAdjustment\"\n          min=\"0\"\n          max=\"99\"\n          step=\"1\"\n          required\n        />\n      </div>\n    </div>\n    <div *ngIf=\"add\" class=\"mb-3\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ storageAdjustment || 0 }} GB &times;\n      {{ storageGbPrice | currency: \"$\" }} = {{ adjustedStorageTotal | currency: \"$\" }} /{{\n        interval | i18n\n      }}\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n    <small class=\"d-block text-muted mt-3\">\n      {{ (add ? \"storageAddNote\" : \"storageRemoveNote\") | i18n }}\n    </small>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StorageRequest } from \"@bitwarden/common/models/request/storageRequest\";\nimport { PaymentResponse } from \"@bitwarden/common/models/response/paymentResponse\";\n\nimport { PaymentComponent } from \"./payment.component\";\n\n@Component({\n  selector: \"app-adjust-storage\",\n  templateUrl: \"adjust-storage.component.html\",\n})\nexport class AdjustStorageComponent {\n  @Input() storageGbPrice = 0;\n  @Input() add = true;\n  @Input() organizationId: string;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter<number>();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n  storageAdjustment = 0;\n  formPromise: Promise<PaymentResponse | void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    try {\n      const request = new StorageRequest();\n      request.storageGbAdjustment = this.storageAdjustment;\n      if (!this.add) {\n        request.storageGbAdjustment *= -1;\n      }\n\n      let paymentFailed = false;\n      const action = async () => {\n        let response: Promise<PaymentResponse>;\n        if (this.organizationId == null) {\n          response = this.formPromise = this.apiService.postAccountStorage(request);\n        } else {\n          response = this.formPromise = this.organizationApiService.updateStorage(\n            this.organizationId,\n            request\n          );\n        }\n        const result = await response;\n        if (result != null && result.paymentIntentClientSecret != null) {\n          try {\n            await this.paymentComponent.handleStripeCardPayment(\n              result.paymentIntentClientSecret,\n              null\n            );\n          } catch {\n            paymentFailed = true;\n          }\n        }\n      };\n      this.formPromise = action();\n      await this.formPromise;\n      this.onAdjusted.emit(this.storageAdjustment);\n      if (paymentFailed) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          null,\n          this.i18nService.t(\"couldNotChargeCardPayInvoice\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"../billing\"], { relativeTo: this.activatedRoute });\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"adjustedStorage\", request.storageGbAdjustment.toString())\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  get adjustedStorageTotal(): number {\n    return this.storageGbPrice * this.storageAdjustment;\n  }\n}\n","export class OrganizationSubscriptionUpdateRequest {\n  constructor(public seatAdjustment: number, public maxAutoscaleSeats?: number) {}\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationSubscriptionUpdateRequest } from \"@bitwarden/common/models/request/organizationSubscriptionUpdateRequest\";\n\n@Component({\n  selector: \"app-adjust-subscription\",\n  templateUrl: \"adjust-subscription.component.html\",\n})\nexport class AdjustSubscription {\n  @Input() organizationId: string;\n  @Input() maxAutoscaleSeats: number;\n  @Input() currentSeatCount: number;\n  @Input() seatPrice = 0;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter();\n\n  formPromise: Promise<void>;\n  limitSubscription: boolean;\n  newSeatCount: number;\n  newMaxSeats: number;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  ngOnInit() {\n    this.limitSubscription = this.maxAutoscaleSeats != null;\n    this.newSeatCount = this.currentSeatCount;\n    this.newMaxSeats = this.maxAutoscaleSeats;\n  }\n\n  async submit() {\n    try {\n      const seatAdjustment = this.newSeatCount - this.currentSeatCount;\n      const request = new OrganizationSubscriptionUpdateRequest(seatAdjustment, this.newMaxSeats);\n      this.formPromise = this.organizationApiService.updateSubscription(\n        this.organizationId,\n        request\n      );\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"subscriptionUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.onAdjusted.emit();\n  }\n\n  limitSubscriptionChanged() {\n    if (!this.limitSubscription) {\n      this.newMaxSeats = null;\n    }\n  }\n\n  get adjustedSeatTotal(): number {\n    return this.newSeatCount * this.seatPrice;\n  }\n\n  get maxSeatTotal(): number {\n    return this.newMaxSeats * this.seatPrice;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"newSeatCount\">{{ \"subscriptionSeats\" | i18n }}</label>\n        <input\n          id=\"newSeatCount\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"NewSeatCount\"\n          [(ngModel)]=\"newSeatCount\"\n          min=\"0\"\n          step=\"1\"\n          required\n        />\n        <small class=\"d-block text-muted mb-4\">\n          <strong>{{ \"total\" | i18n }}:</strong> {{ newSeatCount || 0 }} &times;\n          {{ seatPrice | currency: \"$\" }} = {{ adjustedSeatTotal | currency: \"$\" }} /\n          {{ interval | i18n }}\n        </small>\n      </div>\n    </div>\n    <div class=\"row mb-4\">\n      <div class=\"form-group col-sm\">\n        <div class=\"form-check\">\n          <input\n            id=\"limitSubscription\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"LimitSubscription\"\n            [(ngModel)]=\"limitSubscription\"\n            (change)=\"limitSubscriptionChanged()\"\n          />\n          <label for=\"limitSubscription\">{{ \"limitSubscription\" | i18n }}</label>\n        </div>\n        <small class=\"d-block text-muted\">{{ \"limitSubscriptionDesc\" | i18n }}</small>\n      </div>\n    </div>\n    <div class=\"row mb-4\" [hidden]=\"!limitSubscription\">\n      <div class=\"form-group col-sm\">\n        <label for=\"maxAutoscaleSeats\">{{ \"maxSeatLimit\" | i18n }}</label>\n        <input\n          id=\"maxAutoscaleSeats\"\n          class=\"form-control col-6\"\n          type=\"number\"\n          name=\"MaxAutoscaleSeats\"\n          [(ngModel)]=\"newMaxSeats\"\n          [min]=\"newSeatCount == null ? 1 : newSeatCount\"\n          step=\"1\"\n          [required]=\"limitSubscription\"\n        />\n        <small class=\"d-block text-muted\">\n          <strong>{{ \"maxSeatCost\" | i18n }}:</strong> {{ newMaxSeats || 0 }} &times;\n          {{ seatPrice | currency: \"$\" }} = {{ maxSeatTotal | currency: \"$\" }} /\n          {{ interval | i18n }}\n        </small>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"save\" | i18n }}</span>\n    </button>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\n@Component({\n  selector: \"app-change-plan\",\n  templateUrl: \"change-plan.component.html\",\n})\nexport class ChangePlanComponent {\n  @Input() organizationId: string;\n  @Output() onChanged = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<any>;\n  defaultUpgradePlan: PlanType = PlanType.FamiliesAnnually;\n  defaultUpgradeProduct: ProductType = ProductType.Families;\n\n  constructor(private logService: LogService) {}\n\n  async submit() {\n    try {\n      this.onChanged.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<div class=\"card card-org-plans\">\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h2 class=\"card-body-header\">{{ \"changeBillingPlan\" | i18n }}</h2>\n    <p class=\"mb-0\">{{ \"changeBillingPlanUpgrade\" | i18n }}</p>\n    <app-organization-plans\n      [showFree]=\"false\"\n      [showCancel]=\"true\"\n      [plan]=\"defaultUpgradePlan\"\n      [product]=\"defaultUpgradeProduct\"\n      [organizationId]=\"organizationId\"\n      (onCanceled)=\"cancel()\"\n    >\n    </app-organization-plans>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\n\n@Component({\n  selector: \"app-download-license\",\n  templateUrl: \"download-license.component.html\",\n})\nexport class DownloadLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onDownloaded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  installationId: string;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private fileDownloadService: FileDownloadService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    if (this.installationId == null || this.installationId === \"\") {\n      return;\n    }\n\n    try {\n      this.formPromise = this.organizationApiService.getLicense(\n        this.organizationId,\n        this.installationId\n      );\n      const license = await this.formPromise;\n      const licenseString = JSON.stringify(license, null, 2);\n      this.fileDownloadService.download({\n        fileName: \"bitwarden_organization_license.json\",\n        blobData: licenseString,\n      });\n      this.onDownloaded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"downloadLicense\" | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <div class=\"d-flex\">\n          <label for=\"installationId\">{{ \"enterInstallationId\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/licensing-on-premise/#organization-account-sharing\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"installationId\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"InstallationId\"\n          [(ngModel)]=\"installationId\"\n          required\n        />\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\n\n// Component is used so that the SVG can embed CSS color variables\n@Component({\n  selector: \"app-image-org-subscription-hidden\",\n  templateUrl: \"image-subscription-hidden.component.svg\",\n})\nexport class ImageSubscriptionHiddenComponent {}\n","<svg width=\"216\" height=\"231\" viewBox=\"0 0 216 231\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M133.356 85.6618C133.136 85.43 132.871 85.2457 132.577 85.1198C132.283 84.9939 131.968 84.93 131.648 84.9318H87.8482C87.5289 84.93 87.2113 84.9939 86.9175 85.1198C86.6237 85.2457 86.359 85.43 86.14 85.6618C85.9083 85.8808 85.7239 86.1473 85.598 86.4411C85.4721 86.7349 85.4082 87.0506 85.41 87.37V116.57C85.4192 118.793 85.8499 120.994 86.6802 123.056C87.4705 125.091 88.5326 127.011 89.8375 128.761C91.1789 130.515 92.6808 132.137 94.3233 133.612C95.8472 135.01 97.4532 136.318 99.1304 137.528C100.59 138.565 102.123 139.547 103.729 140.474C105.335 141.401 106.469 142.027 107.131 142.354C107.799 142.682 108.339 142.941 108.741 143.113C109.055 143.264 109.4 143.339 109.748 143.332C110.091 143.337 110.431 143.257 110.737 143.102C111.146 142.923 111.679 142.671 112.354 142.343C113.03 142.014 114.179 141.386 115.756 140.463C117.333 139.539 118.884 138.554 120.355 137.517C122.034 136.306 123.642 134.999 125.169 133.601C126.814 132.128 128.316 130.504 129.655 128.75C130.958 126.998 132.021 125.08 132.813 123.045C133.645 120.983 134.075 118.782 134.083 116.559V87.3591C134.085 87.0415 134.021 86.7276 133.895 86.4356C133.769 86.1436 133.586 85.8808 133.356 85.6618ZM127.71 116.836C127.71 127.421 109.748 136.514 109.748 136.514V91.1879H127.71V116.836Z\" fill=\"var(--color-secondary-700)\"/>\n  <path d=\"M24.6216 122.3C24.7144 123.4 25.6819 124.217 26.7825 124.125C27.8832 124.032 28.7002 123.064 28.6074 121.964L24.6216 122.3ZM151.501 45.7445C152.57 45.4679 153.213 44.3768 152.936 43.3074L148.429 25.8809C148.152 24.8115 147.061 24.1688 145.992 24.4454C144.922 24.722 144.28 25.8131 144.556 26.8825L148.563 42.3728L133.073 46.3793C132.003 46.6559 131.361 47.747 131.637 48.8164C131.914 49.8858 133.005 50.5285 134.074 50.2519L151.501 45.7445ZM28.6074 121.964C26.6788 99.0874 34.4658 75.5543 51.9661 58.054L49.1377 55.2256C30.7695 73.5938 22.5982 98.2999 24.6216 122.3L28.6074 121.964ZM51.9661 58.054C78.5404 31.4797 119.036 27.3026 149.985 45.5315L152.015 42.0849C119.534 22.9534 77.0327 27.3306 49.1377 55.2256L51.9661 58.054Z\" fill=\"var(--color-secondary-700)\"/>\n  <path d=\"M67.4747 185.062C66.4089 185.352 65.7801 186.451 66.0701 187.517L70.797 204.885C71.0871 205.951 72.1862 206.58 73.252 206.29C74.3179 205.999 74.9467 204.9 74.6567 203.834L70.455 188.396L85.8934 184.194C86.9592 183.904 87.5881 182.805 87.298 181.739C87.008 180.674 85.9088 180.045 84.843 180.335L67.4747 185.062ZM192.478 100.283C192.286 99.1952 191.248 98.4697 190.16 98.6625C189.072 98.8552 188.347 99.8931 188.54 100.981L192.478 100.283ZM166.138 172.225C139.813 198.55 99.8271 202.897 68.9932 185.255L67.0068 188.727C99.3669 207.242 141.333 202.687 168.966 175.054L166.138 172.225ZM188.54 100.981C192.985 126.07 185.516 152.847 166.138 172.225L168.966 175.054C189.307 154.713 197.142 126.603 192.478 100.283L188.54 100.981Z\" fill=\"var(--color-secondary-700)\"/>\n  <path d=\"M37.726 108.132C39.283 92.1931 46.1655 76.6765 58.3734 64.4686C75.2893 47.5527 98.5583 40.8618 120.5 44.396\" stroke=\"var(--color-secondary-700)\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n  <path d=\"M180.595 119.132C179.653 136.119 172.693 152.834 159.717 165.811C144.44 181.088 123.982 188.025 104 186.623\" stroke=\"var(--color-secondary-700)\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n  <rect x=\"153.5\" y=\"56.1317\" width=\"49\" height=\"34\" rx=\"2.5\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <path d=\"M153.5 63.6317V63.6317C153.5 66.9454 156.186 69.6317 159.5 69.6317H172.509M202.5 63.6317V63.6317C202.5 66.9454 199.814 69.6317 196.5 69.6317H183.491\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <mask id=\"path-8-inside-1_1000_26057\" fill=\"white\">\n    <rect x=\"172\" y=\"65.6317\" width=\"12\" height=\"9\" rx=\"1.25\"/>\n  </mask>\n  <rect x=\"172\" y=\"65.6317\" width=\"12\" height=\"9\" rx=\"1.25\" stroke=\"var(--color-secondary-700)\" stroke-width=\"6\" mask=\"url(#path-8-inside-1_1000_26057)\"/>\n  <path d=\"M187 54.6317C187 54.6317 187 53.6317 187 52.6317C187 51.6317 186.053 50.6317 185.105 50.6317C184.158 50.6317 171.842 50.6317 170.895 50.6317C169.947 50.6317 169 51.6317 169 52.6317C169 53.6317 169 54.6317 169 54.6317\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <circle cx=\"48\" cy=\"141\" r=\"10.5\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <path d=\"M64.9935 168.5H64.9126H64.8318H64.7512H64.6708H64.5905H64.5104H64.4304H64.3506H64.2709H64.1914H64.1121H64.0329H63.9538H63.8749H63.7962H63.7176H63.6392H63.5609H63.4828H63.4048H63.3269H63.2492H63.1717H63.0943H63.017H62.9399H62.8629H62.7861H62.7094H62.6329H62.5565H62.4802H62.4041H62.3281H62.2523H62.1766H62.101H62.0256H61.9503H61.8751H61.8001H61.7252H61.6504H61.5758H61.5013H61.4269H61.3527H61.2786H61.2046H61.1308H61.0571H60.9835H60.91H60.8367H60.7635H60.6904H60.6175H60.5446H60.4719H60.3993H60.3269H60.2545H60.1823H60.1102H60.0382H59.9664H59.8946H59.823H59.7515H59.6801H59.6088H59.5376H59.4666H59.3956H59.3248H59.2541H59.1835H59.113H59.0426H58.9724H58.9022H58.8322H58.7622H58.6924H58.6226H58.553H58.4835H58.4141H58.3448H58.2756H58.2065H58.1375H58.0686H57.9998H57.9311H57.8625H57.794H57.7256H57.6572H57.589H57.5209H57.4529H57.385H57.3172H57.2494H57.1818H57.1142H57.0468H56.9794H56.9121H56.8449H56.7779H56.7108H56.6439H56.5771H56.5103H56.4437H56.3771H56.3106H56.2442H56.1779H56.1117H56.0455H55.9794H55.9134H55.8475H55.7817H55.7159H55.6502H55.5846H55.5191H55.4537H55.3883H55.323H55.2578H55.1926H55.1275H55.0625H54.9976H54.9328H54.868H54.8032H54.7386H54.674H54.6095H54.5451H54.4807H54.4164H54.3521H54.2879H54.2238H54.1598H54.0958H54.0318H53.968H53.9042H53.8404H53.7767H53.7131H53.6495H53.586H53.5226H53.4592H53.3958H53.3325H53.2693H53.2061H53.143H53.0799H53.0169H52.9539H52.891H52.8281H52.7653H52.7025H52.6398H52.5771H52.5145H52.4519H52.3894H52.3269H52.2645H52.202H52.1397H52.0774H52.0151H51.9528H51.8907H51.8285H51.7664H51.7043H51.6423H51.5803H51.5183H51.4564H51.3945H51.3326H51.2708H51.209H51.1472H51.0855H51.0238H50.9621H50.9005H50.8389H50.7773H50.7157H50.6542H50.5927H50.5312H50.4698H50.4084H50.347H50.2856H50.2243H50.1629H50.1016H50.0404H49.9791H49.9178H49.8566H49.7954H49.7342H49.6731H49.6119H49.5508H49.4896H49.4285H49.3674H49.3064H49.2453H49.1842H49.1232H49.0622H49.0011H48.9401H48.8791H48.8181H48.7571H48.6962H48.6352H48.5742H48.5133H48.4523H48.3913H48.3304H48.2694H48.2085H48.1475H48.0866H48.0257H47.9647H47.9038H47.8428H47.7819H47.7209H47.6599H47.599H47.538H47.477H47.416H47.3551H47.2941H47.2331H47.172H47.111H47.05H46.9889H46.9279H46.8668H46.8057H46.7446H46.6835H46.6224H46.5612H46.5001H46.4389H46.3777H46.3165H46.2553H46.194H46.1328H46.0715H46.0102H45.9489H45.8875H45.8261H45.7647H45.7033H45.6418H45.5804H45.5189H45.4573H45.3958H45.3342H45.2726H45.2109H45.1493H45.0876H45.0258H44.9641H44.9023H44.8404H44.7786H44.7166H44.6547H44.5927H44.5307H44.4687H44.4066H44.3445H44.2823H44.2201H44.1578H44.0956H44.0332H43.9709H43.9084H43.846H43.7835H43.7209H43.6583H43.5957H43.533H43.4703H43.4075H43.3447H43.2818H43.2189H43.1559H43.0929H43.0298H42.9666H42.9034H42.8402H42.7769H42.7135H42.6501H42.5867H42.5231H42.4596H42.3959H42.3322H42.2685H42.2046H42.1408H42.0768H42.0128H41.9487H41.8846H41.8204H41.7562H41.6918H41.6274H41.563H41.4985H41.4339H41.3692H41.3045H41.2397H41.1748H41.1098H41.0448H40.9797H40.9146H40.8493H40.784H40.7186H40.6532H40.5876H40.522H40.4563H40.3905H40.3247H40.2588H40.1928H40.1267H40.0605H39.9942H39.9279H39.8615H39.795H39.7284H39.6617H39.5949H39.5281H39.4611H39.3941H39.327H39.2598H39.1925H39.1251H39.0576H38.9901H38.9224H38.8547H38.7868H38.7189H38.6508H38.5827H38.5145H38.4461H38.3777H38.3092H38.2406H38.1719H38.103H38.0341H37.9651H37.896H37.8267H37.7574H37.688H37.6184H37.5488H37.479H37.4092H37.3392H37.2691H37.199H37.1287H37.0583H36.9878H36.9171H36.8464H36.7755H36.7046H36.6335H36.5623H36.491H36.4196H36.3481H36.2764H36.2046H36.1328H36.0607H35.9886H35.9164H35.844H35.7715H35.6989H35.6262H35.5533H35.4803H35.4072H35.334H35.2606H35.1872H35.1135H35.0398H34.9659H34.8919H34.8178H34.7436H34.6692H34.5947H34.52H34.4452H34.3703H34.2952H34.2201H34.1447H34.0693H33.9937H33.9179H33.8421H33.7661H33.6899H33.6136H33.5372H33.4606H33.3839H33.3071H33.2301H33.1529H33.0756H32.9982H32.9206H32.8429H32.765H32.687H32.6088H32.5305H32.452H32.3734H32.2946H32.2157H32.1367H32.0574H31.978H31.8985H31.8188H31.739H31.659H31.5788H31.4985H31.418H31.3374H31.2566H31.1757H31.0946H31.0133H30.9318H30.8503H30.7685H30.6866H30.6045H30.5222H30.4398H30.3572H30.2745H30.1915C30.0489 168.5 29.9693 168.466 29.9164 168.433C29.8553 168.394 29.7779 168.322 29.702 168.192C29.5361 167.906 29.4608 167.48 29.5197 167.111C30.9235 158.322 38.6474 151.574 47.9925 151.574C57.3375 151.574 65.0615 158.322 66.4652 167.111C66.5751 167.799 66.4037 168.054 66.3124 168.149C66.1888 168.278 65.8364 168.5 64.9935 168.5Z\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <circle cx=\"20\" cy=\"141\" r=\"10.5\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <path d=\"M36.9935 168.5H36.9126H36.8318H36.7512H36.6708H36.5905H36.5104H36.4304H36.3506H36.2709H36.1914H36.1121H36.0329H35.9538H35.8749H35.7962H35.7176H35.6392H35.5609H35.4828H35.4048H35.3269H35.2492H35.1717H35.0943H35.017H34.9399H34.8629H34.7861H34.7094H34.6329H34.5565H34.4802H34.4041H34.3281H34.2523H34.1766H34.101H34.0256H33.9503H33.8751H33.8001H33.7252H33.6504H33.5758H33.5013H33.4269H33.3527H33.2786H33.2046H33.1308H33.0571H32.9835H32.91H32.8367H32.7635H32.6904H32.6175H32.5446H32.4719H32.3993H32.3269H32.2545H32.1823H32.1102H32.0382H31.9664H31.8946H31.823H31.7515H31.6801H31.6088H31.5376H31.4666H31.3956H31.3248H31.2541H31.1835H31.113H31.0426H30.9724H30.9022H30.8322H30.7622H30.6924H30.6226H30.553H30.4835H30.4141H30.3448H30.2756H30.2065H30.1375H30.0686H29.9998H29.9311H29.8625H29.794H29.7256H29.6572H29.589H29.5209H29.4529H29.385H29.3172H29.2494H29.1818H29.1142H29.0468H28.9794H28.9121H28.8449H28.7779H28.7108H28.6439H28.5771H28.5103H28.4437H28.3771H28.3106H28.2442H28.1779H28.1117H28.0455H27.9794H27.9134H27.8475H27.7817H27.7159H27.6502H27.5846H27.5191H27.4537H27.3883H27.323H27.2578H27.1926H27.1275H27.0625H26.9976H26.9328H26.868H26.8032H26.7386H26.674H26.6095H26.5451H26.4807H26.4164H26.3521H26.2879H26.2238H26.1598H26.0958H26.0318H25.968H25.9042H25.8404H25.7767H25.7131H25.6495H25.586H25.5226H25.4592H25.3958H25.3325H25.2693H25.2061H25.143H25.0799H25.0169H24.9539H24.891H24.8281H24.7653H24.7025H24.6398H24.5771H24.5145H24.4519H24.3894H24.3269H24.2645H24.202H24.1397H24.0774H24.0151H23.9528H23.8907H23.8285H23.7664H23.7043H23.6423H23.5803H23.5183H23.4564H23.3945H23.3326H23.2708H23.209H23.1472H23.0855H23.0238H22.9621H22.9005H22.8389H22.7773H22.7157H22.6542H22.5927H22.5312H22.4698H22.4084H22.347H22.2856H22.2243H22.1629H22.1016H22.0404H21.9791H21.9178H21.8566H21.7954H21.7342H21.6731H21.6119H21.5508H21.4896H21.4285H21.3674H21.3064H21.2453H21.1842H21.1232H21.0622H21.0011H20.9401H20.8791H20.8181H20.7571H20.6962H20.6352H20.5742H20.5133H20.4523H20.3913H20.3304H20.2694H20.2085H20.1475H20.0866H20.0257H19.9647H19.9038H19.8428H19.7819H19.7209H19.6599H19.599H19.538H19.477H19.416H19.3551H19.2941H19.2331H19.172H19.111H19.05H18.9889H18.9279H18.8668H18.8057H18.7446H18.6835H18.6224H18.5612H18.5001H18.4389H18.3777H18.3165H18.2553H18.194H18.1328H18.0715H18.0102H17.9489H17.8875H17.8261H17.7647H17.7033H17.6418H17.5804H17.5189H17.4573H17.3958H17.3342H17.2726H17.2109H17.1493H17.0876H17.0258H16.9641H16.9023H16.8404H16.7786H16.7166H16.6547H16.5927H16.5307H16.4687H16.4066H16.3445H16.2823H16.2201H16.1578H16.0956H16.0332H15.9709H15.9084H15.846H15.7835H15.7209H15.6583H15.5957H15.533H15.4703H15.4075H15.3447H15.2818H15.2189H15.1559H15.0929H15.0298H14.9666H14.9034H14.8402H14.7769H14.7135H14.6501H14.5867H14.5231H14.4596H14.3959H14.3322H14.2685H14.2046H14.1408H14.0768H14.0128H13.9487H13.8846H13.8204H13.7562H13.6918H13.6274H13.563H13.4985H13.4339H13.3692H13.3045H13.2397H13.1748H13.1098H13.0448H12.9797H12.9146H12.8493H12.784H12.7186H12.6532H12.5876H12.522H12.4563H12.3905H12.3247H12.2588H12.1928H12.1267H12.0605H11.9942H11.9279H11.8615H11.795H11.7284H11.6617H11.5949H11.5281H11.4611H11.3941H11.327H11.2598H11.1925H11.1251H11.0576H10.9901H10.9224H10.8547H10.7868H10.7189H10.6508H10.5827H10.5145H10.4461H10.3777H10.3092H10.2406H10.1719H10.103H10.0341H9.9651H9.89597H9.82674H9.75741H9.68798H9.61843H9.54879H9.47904H9.40918H9.33921H9.26914H9.19896H9.12867H9.05826H8.98775H8.91713H8.8464H8.77555H8.70459H8.63351H8.56232H8.49102H8.4196H8.34807H8.27641H8.20464H8.13276H8.06075H7.98862H7.91638H7.84401H7.77152H7.69891H7.62617H7.55332H7.48034H7.40723H7.334H7.26064H7.18716H7.11355H7.03981H6.96594H6.89195H6.81782H6.74356H6.66918H6.59466H6.52H6.44522H6.3703H6.29525H6.22006H6.14474H6.06928H5.99368H5.91795H5.84208H5.76607H5.68992H5.61363H5.5372H5.46062H5.38391H5.30705H5.23005H5.15291H5.07562H4.99819H4.92061H4.84288H4.76501H4.68699H4.60882H4.5305H4.45203H4.37342H4.29465H4.21573H4.13665H4.05743H3.97805H3.89851H3.81882H3.73898H3.65898H3.57882H3.49851H3.41804H3.33741H3.25662H3.17566H3.09455H3.01328H2.93185H2.85025H2.76849H2.68657H2.60448H2.52223H2.43981H2.35722H2.27447H2.19155C2.04893 168.5 1.96927 168.466 1.91645 168.433C1.85532 168.394 1.77792 168.322 1.702 168.192C1.53613 167.906 1.46078 167.48 1.51975 167.111C2.92347 158.322 10.6474 151.574 19.9925 151.574C29.3375 151.574 37.0615 158.322 38.4652 167.111C38.5751 167.799 38.4037 168.054 38.3124 168.149C38.1888 168.278 37.8364 168.5 36.9935 168.5Z\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <circle cx=\"34\" cy=\"154\" r=\"10.5\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <path d=\"M50.9935 181.5H50.9126H50.8318H50.7512H50.6708H50.5905H50.5104H50.4304H50.3506H50.2709H50.1914H50.1121H50.0329H49.9538H49.8749H49.7962H49.7176H49.6392H49.5609H49.4828H49.4048H49.3269H49.2492H49.1717H49.0943H49.017H48.9399H48.8629H48.7861H48.7094H48.6329H48.5565H48.4802H48.4041H48.3281H48.2523H48.1766H48.101H48.0256H47.9503H47.8751H47.8001H47.7252H47.6504H47.5758H47.5013H47.4269H47.3527H47.2786H47.2046H47.1308H47.0571H46.9835H46.91H46.8367H46.7635H46.6904H46.6175H46.5446H46.4719H46.3993H46.3269H46.2545H46.1823H46.1102H46.0382H45.9664H45.8946H45.823H45.7515H45.6801H45.6088H45.5376H45.4666H45.3956H45.3248H45.2541H45.1835H45.113H45.0426H44.9724H44.9022H44.8322H44.7622H44.6924H44.6226H44.553H44.4835H44.4141H44.3448H44.2756H44.2065H44.1375H44.0686H43.9998H43.9311H43.8625H43.794H43.7256H43.6572H43.589H43.5209H43.4529H43.385H43.3172H43.2494H43.1818H43.1142H43.0468H42.9794H42.9121H42.8449H42.7779H42.7108H42.6439H42.5771H42.5103H42.4437H42.3771H42.3106H42.2442H42.1779H42.1117H42.0455H41.9794H41.9134H41.8475H41.7817H41.7159H41.6502H41.5846H41.5191H41.4537H41.3883H41.323H41.2578H41.1926H41.1275H41.0625H40.9976H40.9328H40.868H40.8032H40.7386H40.674H40.6095H40.5451H40.4807H40.4164H40.3521H40.2879H40.2238H40.1598H40.0958H40.0318H39.968H39.9042H39.8404H39.7767H39.7131H39.6495H39.586H39.5226H39.4592H39.3958H39.3325H39.2693H39.2061H39.143H39.0799H39.0169H38.9539H38.891H38.8281H38.7653H38.7025H38.6398H38.5771H38.5145H38.4519H38.3894H38.3269H38.2645H38.202H38.1397H38.0774H38.0151H37.9528H37.8907H37.8285H37.7664H37.7043H37.6423H37.5803H37.5183H37.4564H37.3945H37.3326H37.2708H37.209H37.1472H37.0855H37.0238H36.9621H36.9005H36.8389H36.7773H36.7157H36.6542H36.5927H36.5312H36.4698H36.4084H36.347H36.2856H36.2243H36.1629H36.1016H36.0404H35.9791H35.9178H35.8566H35.7954H35.7342H35.6731H35.6119H35.5508H35.4896H35.4285H35.3674H35.3064H35.2453H35.1842H35.1232H35.0622H35.0011H34.9401H34.8791H34.8181H34.7571H34.6962H34.6352H34.5742H34.5133H34.4523H34.3913H34.3304H34.2694H34.2085H34.1475H34.0866H34.0257H33.9647H33.9038H33.8428H33.7819H33.7209H33.6599H33.599H33.538H33.477H33.416H33.3551H33.2941H33.2331H33.172H33.111H33.05H32.9889H32.9279H32.8668H32.8057H32.7446H32.6835H32.6224H32.5612H32.5001H32.4389H32.3777H32.3165H32.2553H32.194H32.1328H32.0715H32.0102H31.9489H31.8875H31.8261H31.7647H31.7033H31.6418H31.5804H31.5189H31.4573H31.3958H31.3342H31.2726H31.2109H31.1493H31.0876H31.0258H30.9641H30.9023H30.8404H30.7786H30.7166H30.6547H30.5927H30.5307H30.4687H30.4066H30.3445H30.2823H30.2201H30.1578H30.0956H30.0332H29.9709H29.9084H29.846H29.7835H29.7209H29.6583H29.5957H29.533H29.4703H29.4075H29.3447H29.2818H29.2189H29.1559H29.0929H29.0298H28.9666H28.9034H28.8402H28.7769H28.7135H28.6501H28.5867H28.5231H28.4596H28.3959H28.3322H28.2685H28.2046H28.1408H28.0768H28.0128H27.9487H27.8846H27.8204H27.7562H27.6918H27.6274H27.563H27.4985H27.4339H27.3692H27.3045H27.2397H27.1748H27.1098H27.0448H26.9797H26.9146H26.8493H26.784H26.7186H26.6532H26.5876H26.522H26.4563H26.3905H26.3247H26.2588H26.1928H26.1267H26.0605H25.9942H25.9279H25.8615H25.795H25.7284H25.6617H25.5949H25.5281H25.4611H25.3941H25.327H25.2598H25.1925H25.1251H25.0576H24.9901H24.9224H24.8547H24.7868H24.7189H24.6508H24.5827H24.5145H24.4461H24.3777H24.3092H24.2406H24.1719H24.103H24.0341H23.9651H23.896H23.8267H23.7574H23.688H23.6184H23.5488H23.479H23.4092H23.3392H23.2691H23.199H23.1287H23.0583H22.9878H22.9171H22.8464H22.7755H22.7046H22.6335H22.5623H22.491H22.4196H22.3481H22.2764H22.2046H22.1328H22.0607H21.9886H21.9164H21.844H21.7715H21.6989H21.6262H21.5533H21.4803H21.4072H21.334H21.2606H21.1872H21.1135H21.0398H20.9659H20.8919H20.8178H20.7436H20.6692H20.5947H20.52H20.4452H20.3703H20.2952H20.2201H20.1447H20.0693H19.9937H19.9179H19.8421H19.7661H19.6899H19.6136H19.5372H19.4606H19.3839H19.3071H19.2301H19.1529H19.0756H18.9982H18.9206H18.8429H18.765H18.687H18.6088H18.5305H18.452H18.3734H18.2946H18.2157H18.1367H18.0574H17.978H17.8985H17.8188H17.739H17.659H17.5788H17.4985H17.418H17.3374H17.2566H17.1757H17.0946H17.0133H16.9318H16.8503H16.7685H16.6866H16.6045H16.5222H16.4398H16.3572H16.2745H16.1915C16.045 181.5 15.9628 181.465 15.9092 181.432C15.8479 181.394 15.772 181.324 15.6978 181.198C15.5354 180.922 15.4617 180.509 15.5193 180.153C16.9196 171.496 24.6325 164.823 33.9925 164.823C43.3524 164.823 51.0654 171.496 52.4657 180.153C52.574 180.823 52.4052 181.064 52.319 181.152C52.1962 181.279 51.8413 181.5 50.9935 181.5Z\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n</svg>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-update-license\",\n  templateUrl: \"update-license.component.html\",\n})\nexport class UpdateLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onUpdated = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    try {\n      const fd = new FormData();\n      fd.append(\"license\", files[0]);\n\n      let updatePromise: Promise<void | unknown> = null;\n      if (this.organizationId == null) {\n        updatePromise = this.apiService.postAccountLicense(fd);\n      } else {\n        updatePromise = this.organizationApiService.updateLicense(this.organizationId, fd);\n      }\n\n      this.formPromise = updatePromise.then(() => {\n        return this.apiService.refreshIdentityToken();\n      });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedLicense\"));\n      this.onUpdated.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"form-group\">\n    <label for=\"file\" class=\"sr-only\">{{ \"licenseFile\" | i18n }}</label>\n    <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n    <small class=\"form-text text-muted\">{{\n      \"licenseFileDesc\"\n        | i18n\n          : (!organizationId\n              ? \"bitwarden_premium_license.json\"\n              : \"bitwarden_organization_license.json\")\n    }}</small>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"submit\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","<div class=\"page-header\">\n  <h1>\n    {{ \"subscription\" | i18n }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<ng-container *ngIf=\"firstLoaded && !userOrg.canManageBilling\">\n  <div class=\"tw-flex tw-flex-col tw-items-center tw-text-info\">\n    <app-image-org-subscription-hidden></app-image-org-subscription-hidden>\n    <p class=\"tw-font-bold\">{{ \"billingManagedByProvider\" | i18n: this.userOrg.providerName }}</p>\n    <p>{{ \"billingContactProviderForAssistance\" | i18n }}</p>\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"sub\">\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</app-callout\n  >\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      #reinstateBtn\n      type=\"button\"\n      class=\"btn btn-outline-secondary btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"reinstateBtn.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </app-callout>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <dl>\n          <dt>{{ \"billingPlan\" | i18n }}</dt>\n          <dd>{{ sub.plan.name }}</dd>\n          <ng-container *ngIf=\"subscription\">\n            <dt>{{ \"status\" | i18n }}</dt>\n            <dd>\n              <span class=\"text-capitalize\">{{\n                isSponsoredSubscription ? \"sponsored\" : subscription.status || \"-\"\n              }}</span>\n              <span bitBadge badgeType=\"warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n                \"pendingCancellation\" | i18n\n              }}</span>\n            </dd>\n            <dt>{{ \"nextCharge\" | i18n }}</dt>\n            <dd>\n              {{\n                nextInvoice\n                  ? (nextInvoice.date | date: \"mediumDate\") +\n                    \", \" +\n                    (nextInvoice.amount | currency: \"$\")\n                  : \"-\"\n              }}\n            </dd>\n          </ng-container>\n        </dl>\n      </div>\n      <div class=\"col-8\" *ngIf=\"subscription\">\n        <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n        <table class=\"table\">\n          <tbody>\n            <tr *ngFor=\"let i of subscription.items\">\n              <td>\n                {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n                {{ i.amount | currency: \"$\" }}\n              </td>\n              <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <ng-container *ngIf=\"userOrg?.providerId != null\">\n        <div class=\"col-sm\">\n          <dl>\n            <dt>{{ \"provider\" | i18n }}</dt>\n            <dd>{{ \"yourProviderIs\" | i18n: userOrg.providerName }}</dd>\n          </dl>\n        </div>\n      </ng-container>\n    </div>\n    <ng-container>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"changePlan()\"\n        *ngIf=\"showChangePlanButton\"\n      >\n        {{ \"changeBillingPlan\" | i18n }}\n      </button>\n      <app-change-plan\n        [organizationId]=\"organizationId\"\n        (onChanged)=\"closeChangePlan(true)\"\n        (onCanceled)=\"closeChangePlan(false)\"\n        *ngIf=\"showChangePlan\"\n      ></app-change-plan>\n    </ng-container>\n    <h2 class=\"spaced-header\">{{ \"manageSubscription\" | i18n }}</h2>\n    <p class=\"mb-4\">{{ subscriptionDesc }}</p>\n    <ng-container\n      *ngIf=\"\n        subscription && canAdjustSeats && !subscription.cancelled && !subscriptionMarkedForCancel\n      \"\n    >\n      <div class=\"mt-3\">\n        <app-adjust-subscription\n          [seatPrice]=\"seatPrice\"\n          [organizationId]=\"organizationId\"\n          [interval]=\"billingInterval\"\n          [currentSeatCount]=\"seats\"\n          [maxAutoscaleSeats]=\"maxAutoscaleSeats\"\n          (onAdjusted)=\"subscriptionAdjusted()\"\n        >\n        </app-adjust-subscription>\n      </div>\n    </ng-container>\n    <button\n      #removeSponsorshipBtn\n      type=\"button\"\n      class=\"btn btn-outline-danger btn-submit\"\n      (click)=\"removeSponsorship()\"\n      [appApiAction]=\"removeSponsorshipPromise\"\n      [disabled]=\"removeSponsorshipBtn.loading\"\n      *ngIf=\"isSponsoredSubscription\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"removeSponsorship\" | i18n }}</span>\n    </button>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary ml-1\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"storageGbPrice\"\n          [add]=\"adjustStorageAdd\"\n          [organizationId]=\"organizationId\"\n          [interval]=\"billingInterval\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n    <!--Switch to i18n-->\n    <h2 class=\"spaced-header\">{{ \"selfHostingTitle\" | i18n }}</h2>\n    <p class=\"mb-4\">\n      {{ \"selfHostingEnterpriseOrganizationSectionCopy\" | i18n }}\n    </p>\n    <div class=\"d-flex\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"canDownloadLicense\"\n        [disabled]=\"showDownloadLicense\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary ml-1\"\n        (click)=\"manageBillingSync()\"\n        *ngIf=\"canManageBillingSync\"\n      >\n        {{ (hasBillingSyncToken ? \"manageBillingSync\" : \"setUpBillingSync\") | i18n }}\n      </button>\n    </div>\n    <div class=\"mt-3\" *ngIf=\"showDownloadLicense\">\n      <app-download-license\n        [organizationId]=\"organizationId\"\n        (onDownloaded)=\"closeDownloadLicense()\"\n        (onCanceled)=\"closeDownloadLicense()\"\n      ></app-download-license>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"additionalOptions\" | i18n }}</h2>\n    <p class=\"mb-4\">\n      {{ \"additionalOptionsDesc\" | i18n }}\n    </p>\n    <div class=\"d-flex\">\n      <button\n        #cancelBtn\n        type=\"button\"\n        class=\"btn btn-outline-danger btn-submit ml-1\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"cancelBtn.loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"selfHosted\">\n    <dl>\n      <dt>{{ \"billingPlan\" | i18n }}</dt>\n      <dd>{{ sub.plan.name }}</dd>\n      <dt>{{ \"expiration\" | i18n }}</dt>\n      <dd *ngIf=\"sub.expiration\">\n        {{ sub.expiration | date: \"mediumDate\" }}\n        <span *ngIf=\"isExpired\" class=\"text-danger ml-2\">\n          <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n          {{ \"licenseIsExpired\" | i18n }}\n        </span>\n      </dd>\n      <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n    </dl>\n    <div>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        href=\"https://vault.bitwarden.com\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        class=\"btn btn-outline-secondary\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          [organizationId]=\"organizationId\"\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        ></app-update-license>\n      </div>\n    </div>\n    <div *ngIf=\"showBillingSyncKey\">\n      <h2 class=\"mt-5\">\n        {{ \"billingSync\" | i18n }}\n      </h2>\n      <p>\n        {{ \"billingSyncDesc\" | i18n }}\n      </p>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"manageBillingSyncSelfHosted()\"\n      >\n        {{ \"manageBillingSync\" | i18n }}\n      </button>\n      <small class=\"form-text text-muted\" *ngIf=\"billingSyncSetUp\">\n        {{ \"lastSync\" | i18n }}:\n        <span *ngIf=\"userOrg.familySponsorshipLastSyncDate != null\">\n          {{ userOrg.familySponsorshipLastSyncDate | date: \"medium\" }}\n        </span>\n        <span *ngIf=\"userOrg.familySponsorshipLastSyncDate == null\">\n          {{ \"never\" | i18n | lowercase }}\n        </span>\n      </small>\n    </div>\n  </ng-container>\n</ng-container>\n<ng-template #setupBillingSyncTemplate></ng-template>\n<ng-template #rotateBillingSyncKeyTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/enums/organizationApiKeyType\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/enums/organizationConnectionType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { BillingSyncConfigApi } from \"@bitwarden/common/models/api/billingSyncConfigApi\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/models/response/organizationConnectionResponse\";\nimport { OrganizationSubscriptionResponse } from \"@bitwarden/common/models/response/organizationSubscriptionResponse\";\n\nimport { BillingSyncKeyComponent } from \"../../settings/billing-sync-key.component\";\n\nimport { BillingSyncApiKeyComponent } from \"./billing-sync-api-key.component\";\n\n@Component({\n  selector: \"app-org-subscription\",\n  templateUrl: \"organization-subscription.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class OrganizationSubscriptionComponent implements OnInit {\n  @ViewChild(\"setupBillingSyncTemplate\", { read: ViewContainerRef, static: true })\n  setupBillingSyncModalRef: ViewContainerRef;\n\n  loading = false;\n  firstLoaded = false;\n  organizationId: string;\n  adjustSeatsAdd = true;\n  showAdjustSeats = false;\n  showAdjustSeatAutoscale = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  showBillingSyncKey = false;\n  showDownloadLicense = false;\n  showChangePlan = false;\n  sub: OrganizationSubscriptionResponse;\n  selfHosted = false;\n  hasBillingSyncToken: boolean;\n\n  userOrg: Organization;\n  existingBillingSyncConnection: OrganizationConnectionResponse<BillingSyncConfigApi>;\n\n  removeSponsorshipPromise: Promise<void>;\n  cancelPromise: Promise<void>;\n  reinstatePromise: Promise<void>;\n\n  @ViewChild(\"rotateBillingSyncKeyTemplate\", { read: ViewContainerRef, static: true })\n  billingSyncKeyViewContainerRef: ViewContainerRef;\n  billingSyncKeyRef: [ModalRef, BillingSyncKeyComponent];\n\n  constructor(\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private logService: LogService,\n    private modalService: ModalService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    this.loading = true;\n    this.userOrg = this.organizationService.get(this.organizationId);\n    if (this.userOrg.canManageBilling) {\n      this.sub = await this.organizationApiService.getSubscription(this.organizationId);\n    }\n    const apiKeyResponse = await this.organizationApiService.getApiKeyInformation(\n      this.organizationId\n    );\n    this.hasBillingSyncToken = apiKeyResponse.data.some(\n      (i) => i.keyType === OrganizationApiKeyType.BillingSync\n    );\n\n    if (this.selfHosted) {\n      this.showBillingSyncKey = await this.apiService.getCloudCommunicationsEnabled();\n    }\n\n    if (this.showBillingSyncKey) {\n      this.existingBillingSyncConnection = await this.apiService.getOrganizationConnection(\n        this.organizationId,\n        OrganizationConnectionType.CloudBillingSync,\n        BillingSyncConfigApi\n      );\n    }\n\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.organizationApiService.reinstate(this.organizationId);\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.organizationApiService.cancel(this.organizationId);\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async changePlan() {\n    this.showChangePlan = !this.showChangePlan;\n  }\n\n  closeChangePlan(changed: boolean) {\n    this.showChangePlan = false;\n  }\n\n  downloadLicense() {\n    this.showDownloadLicense = !this.showDownloadLicense;\n  }\n\n  async manageBillingSync() {\n    const [ref] = await this.modalService.openViewRef(\n      BillingSyncApiKeyComponent,\n      this.setupBillingSyncModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.hasBillingToken = this.hasBillingSyncToken;\n      }\n    );\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    ref.onClosed.subscribe(async () => {\n      await this.load();\n    });\n  }\n\n  closeDownloadLicense() {\n    this.showDownloadLicense = false;\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(updated: boolean) {\n    this.showUpdateLicense = false;\n    if (updated) {\n      this.load();\n      this.messagingService.send(\"updatedOrgLicense\");\n    }\n  }\n\n  subscriptionAdjusted() {\n    this.load();\n  }\n\n  adjustStorage(add: boolean) {\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  async removeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeSponsorshipConfirmation\"),\n      this.i18nService.t(\"removeSponsorship\"),\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    try {\n      this.removeSponsorshipPromise = this.apiService.deleteRemoveSponsorship(this.organizationId);\n      await this.removeSponsorshipPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removeSponsorshipSuccess\")\n      );\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async manageBillingSyncSelfHosted() {\n    this.billingSyncKeyRef = await this.modalService.openViewRef(\n      BillingSyncKeyComponent,\n      this.billingSyncKeyViewContainerRef,\n      (comp) => {\n        comp.entityId = this.organizationId;\n        comp.existingConnectionId = this.existingBillingSyncConnection?.id;\n        comp.billingSyncKey = this.existingBillingSyncConnection?.config?.billingSyncKey;\n        comp.setParentConnection = (\n          connection: OrganizationConnectionResponse<BillingSyncConfigApi>\n        ) => {\n          this.existingBillingSyncConnection = connection;\n          this.billingSyncKeyRef[0].close();\n        };\n      }\n    );\n  }\n\n  get isExpired() {\n    return (\n      this.sub != null && this.sub.expiration != null && new Date(this.sub.expiration) < new Date()\n    );\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get billingInterval() {\n    const monthly = !this.sub.plan.isAnnual;\n    return monthly ? \"month\" : \"year\";\n  }\n\n  get storageGbPrice() {\n    return this.sub.plan.additionalStoragePricePerGb;\n  }\n\n  get seatPrice() {\n    return this.sub.plan.seatPrice;\n  }\n\n  get seats() {\n    return this.sub.seats;\n  }\n\n  get maxAutoscaleSeats() {\n    return this.sub.maxAutoscaleSeats;\n  }\n\n  get canAdjustSeats() {\n    return this.sub.plan.hasAdditionalSeatsOption;\n  }\n\n  get isSponsoredSubscription(): boolean {\n    return this.sub.subscription?.items.some((i) => i.sponsoredSubscriptionItem);\n  }\n\n  get canDownloadLicense() {\n    return (\n      (this.sub.planType !== PlanType.Free && this.subscription == null) ||\n      (this.subscription != null && !this.subscription.cancelled)\n    );\n  }\n\n  get canManageBillingSync() {\n    return (\n      !this.selfHosted &&\n      (this.sub.planType === PlanType.EnterpriseAnnually ||\n        this.sub.planType === PlanType.EnterpriseMonthly ||\n        this.sub.planType === PlanType.EnterpriseAnnually2019 ||\n        this.sub.planType === PlanType.EnterpriseMonthly2019)\n    );\n  }\n\n  get subscriptionDesc() {\n    if (this.sub.planType === PlanType.Free) {\n      return this.i18nService.t(\"subscriptionFreePlan\", this.sub.seats.toString());\n    } else if (\n      this.sub.planType === PlanType.FamiliesAnnually ||\n      this.sub.planType === PlanType.FamiliesAnnually2019\n    ) {\n      if (this.isSponsoredSubscription) {\n        return this.i18nService.t(\"subscriptionSponsoredFamiliesPlan\", this.sub.seats.toString());\n      } else {\n        return this.i18nService.t(\"subscriptionFamiliesPlan\", this.sub.seats.toString());\n      }\n    } else if (this.sub.maxAutoscaleSeats === this.sub.seats && this.sub.seats != null) {\n      return this.i18nService.t(\"subscriptionMaxReached\", this.sub.seats.toString());\n    } else if (this.sub.maxAutoscaleSeats == null) {\n      return this.i18nService.t(\"subscriptionUserSeatsUnlimitedAutoscale\");\n    } else {\n      return this.i18nService.t(\n        \"subscriptionUserSeatsLimitedAutoscale\",\n        this.sub.maxAutoscaleSeats.toString()\n      );\n    }\n  }\n\n  get showChangePlanButton() {\n    return this.subscription == null && this.sub.planType === PlanType.Free && !this.showChangePlan;\n  }\n\n  get billingSyncSetUp() {\n    return this.existingBillingSyncConnection?.id != null;\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myOrganization\" | i18n }}\n          </a>\n          <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"subscription\" | i18n }}\n          </a>\n          <a\n            routerLink=\"billing\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"showBilling\"\n          >\n            {{ \"billing\" | i18n }}\n          </a>\n          <a\n            routerLink=\"two-factor\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"access2fa\"\n          >\n            {{ \"twoStepLogin\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-org-settings\",\n  templateUrl: \"settings.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SettingsComponent {\n  access2fa = false;\n  showBilling: boolean;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      const organization = await this.organizationService.get(params.organizationId);\n      this.showBilling = !this.platformUtilsService.isSelfHost() && organization.canManageBilling;\n      this.access2fa = organization.use2fa;\n    });\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorDuoRequest extends SecretVerificationRequest {\n  integrationKey: string;\n  secretKey: string;\n  host: string;\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorProviderRequest extends SecretVerificationRequest {\n  type: TwoFactorProviderType;\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { TwoFactorProviderRequest } from \"@bitwarden/common/models/request/twoFactorProviderRequest\";\nimport { AuthResponseBase } from \"@bitwarden/common/types/authResponse\";\n\n@Directive()\nexport abstract class TwoFactorBaseComponent {\n  @Output() onUpdated = new EventEmitter<boolean>();\n\n  type: TwoFactorProviderType;\n  organizationId: string;\n  twoFactorProviderType = TwoFactorProviderType;\n  enabled = false;\n  authed = false;\n\n  protected hashedSecret: string;\n  protected verificationType: VerificationType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected userVerificationService: UserVerificationService\n  ) {}\n\n  protected auth(authResponse: AuthResponseBase) {\n    this.hashedSecret = authResponse.secret;\n    this.verificationType = authResponse.verificationType;\n    this.authed = true;\n  }\n\n  protected async enable(enableFunction: () => Promise<void>) {\n    try {\n      await enableFunction();\n      this.onUpdated.emit(true);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async disable(promise: Promise<unknown>) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepDisableDesc\"),\n      this.i18nService.t(\"disable\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      const request = await this.buildRequestModel(TwoFactorProviderRequest);\n      request.type = this.type;\n      if (this.organizationId != null) {\n        promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\n      } else {\n        promise = this.apiService.putTwoFactorDisable(request);\n      }\n      await promise;\n      this.enabled = false;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"twoStepDisabled\"));\n      this.onUpdated.emit(false);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async buildRequestModel<T extends SecretVerificationRequest>(\n    requestClass: new () => T\n  ) {\n    return this.userVerificationService.buildRequest(\n      {\n        secret: this.hashedSecret,\n        type: this.verificationType,\n      },\n      requestClass,\n      true\n    );\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\nimport { TwoFactorResponse } from \"@bitwarden/common/types/twoFactorResponse\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-two-factor-verify\",\n  templateUrl: \"two-factor-verify.component.html\",\n})\nexport class TwoFactorVerifyComponent {\n  @Input() type: TwoFactorProviderType;\n  @Input() organizationId: string;\n  @Output() onAuthed = new EventEmitter<AuthResponse<TwoFactorResponse>>();\n\n  secret: Verification;\n  formPromise: Promise<TwoFactorResponse>;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async submit() {\n    let hashedSecret: string;\n\n    try {\n      this.formPromise = this.userVerificationService.buildRequest(this.secret).then((request) => {\n        hashedSecret =\n          this.secret.type === VerificationType.MasterPassword\n            ? request.masterPasswordHash\n            : request.otp;\n        return this.apiCall(request);\n      });\n\n      const response = await this.formPromise;\n      this.onAuthed.emit({\n        response: response,\n        secret: hashedSecret,\n        verificationType: this.secret.type,\n      });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private apiCall(request: SecretVerificationRequest): Promise<TwoFactorResponse> {\n    switch (this.type) {\n      case -1 as TwoFactorProviderType:\n        return this.apiService.getTwoFactorRecover(request);\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        if (this.organizationId != null) {\n          return this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\n        } else {\n          return this.apiService.getTwoFactorDuo(request);\n        }\n      case TwoFactorProviderType.Email:\n        return this.apiService.getTwoFactorEmail(request);\n      case TwoFactorProviderType.WebAuthn:\n        return this.apiService.getTwoFactorWebAuthn(request);\n      case TwoFactorProviderType.Authenticator:\n        return this.apiService.getTwoFactorAuthenticator(request);\n      case TwoFactorProviderType.Yubikey:\n        return this.apiService.getTwoFactorYubiKey(request);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"modal-body\">\n    <p>{{ \"twoStepLoginAuthDesc\" | i18n }}</p>\n    <app-user-verification [(ngModel)]=\"secret\" ngDefaultControl name=\"secret\">\n    </app-user-verification>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"continue\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n      {{ \"close\" | i18n }}\n    </button>\n  </div>\n</form>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faDuoTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faDuoTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>Duo</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <strong>{{ \"twoFactorDuoIntegrationKey\" | i18n }}:</strong> {{ ikey }}\n            <br />\n            <strong>{{ \"twoFactorDuoSecretKey\" | i18n }}:</strong> {{ skey }}\n            <br />\n            <strong>{{ \"twoFactorDuoApiHostname\" | i18n }}:</strong> {{ host }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <p>{{ \"twoFactorDuoDesc\" | i18n }}</p>\n            <div class=\"form-group\">\n              <label for=\"ikey\">{{ \"twoFactorDuoIntegrationKey\" | i18n }}</label>\n              <input\n                id=\"ikey\"\n                type=\"text\"\n                name=\"IntegrationKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"ikey\"\n                required\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"skey\">{{ \"twoFactorDuoSecretKey\" | i18n }}</label>\n              <input\n                id=\"skey\"\n                type=\"password\"\n                name=\"SecretKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"skey\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"host\">{{ \"twoFactorDuoApiHostname\" | i18n }}</label>\n              <input\n                id=\"host\"\n                type=\"text\"\n                name=\"Host\"\n                class=\"form-control\"\n                [(ngModel)]=\"host\"\n                placeholder=\"{{ 'ex' | i18n }} api-xxxxxxxx.duosecurity.com\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorDuoRequest } from \"@bitwarden/common/models/request/updateTwoFactorDuoRequest\";\nimport { TwoFactorDuoResponse } from \"@bitwarden/common/models/response/twoFactorDuoResponse\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-duo\",\n  templateUrl: \"two-factor-duo.component.html\",\n})\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Duo;\n  ikey: string;\n  skey: string;\n  host: string;\n  formPromise: Promise<TwoFactorDuoResponse>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorDuoResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorDuoRequest);\n    request.integrationKey = this.ikey;\n    request.secretKey = this.skey;\n    request.host = this.host;\n\n    return super.enable(async () => {\n      if (this.organizationId != null) {\n        this.formPromise = this.apiService.putTwoFactorOrganizationDuo(\n          this.organizationId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.putTwoFactorDuo(request);\n      }\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private processResponse(response: TwoFactorDuoResponse) {\n    this.ikey = response.integrationKey;\n    this.skey = response.secretKey;\n    this.host = response.host;\n    this.enabled = response.enabled;\n  }\n}\n","export class DeviceVerificationRequest {\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(unknownDeviceVerificationEnabled: boolean) {\n    this.unknownDeviceVerificationEnabled = unknownDeviceVerificationEnabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorAuthenticatorRequest extends SecretVerificationRequest {\n  token: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faAuthenticatorTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faAuthenticatorTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"authenticatorAppTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorDesc\" | i18n }}</p>\n            <p>\n              <strong>1. {{ \"twoStepAuthenticatorDownloadApp\" | i18n }}</strong>\n            </p>\n          </ng-container>\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              <p>{{ \"twoStepLoginProviderEnabled\" | i18n }}</p>\n              {{ \"twoStepAuthenticatorReaddDesc\" | i18n }}\n            </app-callout>\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorNeedApp\" | i18n }}</p>\n          </ng-container>\n          <ul class=\"bwi-ul\">\n            <li>\n              <i class=\"bwi bwi-li bwi-apple\"></i>{{ \"iosDevices\" | i18n }}:\n              <a\n                href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-android\"></i>{{ \"androidDevices\" | i18n }}:\n              <a\n                href=\"https://play.google.com/store/apps/details?id=com.authy.authy\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-windows\"></i>{{ \"windowsDevices\" | i18n }}:\n              <a\n                href=\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Microsoft Authenticator</a\n              >\n            </li>\n          </ul>\n          <p>{{ \"twoStepAuthenticatorAppsRecommended\" | i18n }}</p>\n          <p *ngIf=\"!enabled\">\n            <strong>2. {{ \"twoStepAuthenticatorScanCode\" | i18n }}</strong>\n          </p>\n          <hr *ngIf=\"enabled\" />\n          <p class=\"text-center\" [ngClass]=\"{ 'mb-0': enabled }\">\n            <canvas id=\"qr\"></canvas><br />\n            <code appA11yTitle=\"{{ 'key' | i18n }}\">{{ key }}</code>\n          </p>\n          <ng-container *ngIf=\"!enabled\">\n            <label for=\"token\">3. {{ \"twoStepAuthenticatorEnterCode\" | i18n }}</label>\n            <input\n              id=\"token\"\n              type=\"text\"\n              name=\"Token\"\n              class=\"form-control\"\n              [(ngModel)]=\"token\"\n              required\n              appInputVerbatim\n            />\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"@bitwarden/common/models/request/updateTwoFactorAuthenticatorRequest\";\nimport { TwoFactorAuthenticatorResponse } from \"@bitwarden/common/models/response/twoFactorAuthenticatorResponse\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n// NOTE: There are additional options available but these are just the ones we are current using.\n// See: https://github.com/neocotic/qrious#examples\ninterface QRiousOptions {\n  element: HTMLElement;\n  value: string;\n  size: number;\n}\n\ndeclare global {\n  interface Window {\n    QRious: new (options: QRiousOptions) => unknown;\n  }\n}\n\n@Component({\n  selector: \"app-two-factor-authenticator\",\n  templateUrl: \"two-factor-authenticator.component.html\",\n})\nexport class TwoFactorAuthenticatorComponent\n  extends TwoFactorBaseComponent\n  implements OnInit, OnDestroy\n{\n  type = TwoFactorProviderType.Authenticator;\n  key: string;\n  token: string;\n  formPromise: Promise<TwoFactorAuthenticatorResponse>;\n\n  private qrScript: HTMLScriptElement;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    userVerificationService: UserVerificationService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n    this.qrScript = window.document.createElement(\"script\");\n    this.qrScript.src = \"scripts/qrious.min.js\";\n    this.qrScript.async = true;\n  }\n\n  ngOnInit() {\n    window.document.body.appendChild(this.qrScript);\n  }\n\n  ngOnDestroy() {\n    window.document.body.removeChild(this.qrScript);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorAuthenticatorResponse>) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorAuthenticatorRequest);\n    request.token = this.token;\n    request.key = this.key;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorAuthenticatorResponse) {\n    this.token = null;\n    this.enabled = response.enabled;\n    this.key = response.key;\n    const email = await this.stateService.getEmail();\n    window.setTimeout(() => {\n      new window.QRious({\n        element: document.getElementById(\"qr\"),\n        value:\n          \"otpauth://totp/Bitwarden:\" +\n          encodeURIComponent(email) +\n          \"?secret=\" +\n          encodeURIComponent(this.key) +\n          \"&issuer=Bitwarden\",\n        size: 160,\n      });\n    }, 100);\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorEmailRequest extends SecretVerificationRequest {\n  token: string;\n  email: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faEmailTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faEmailTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"emailTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <strong>{{ \"email\" | i18n }}:</strong> {{ email }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <p class=\"d-flex\">\n              <span class=\"mr-3\">{{ \"twoFactorEmailDesc\" | i18n }}</span>\n              <img class=\"float-right ml-auto mfaType1\" alt=\"Email logo\" />\n            </p>\n            <div class=\"form-group\">\n              <label for=\"email\">1. {{ \"twoFactorEmailEnterEmail\" | i18n }}</label>\n              <input\n                id=\"email\"\n                type=\"text\"\n                name=\"Email\"\n                class=\"form-control\"\n                [(ngModel)]=\"email\"\n                required\n                inputmode=\"email\"\n                appInputVerbatim=\"false\"\n              />\n            </div>\n            <div class=\"mb-3 d-flex\">\n              <button\n                #sendBtn\n                type=\"button\"\n                class=\"btn btn-outline-primary btn-sm btn-submit align-self-start\"\n                (click)=\"sendEmail()\"\n                [appApiAction]=\"emailPromise\"\n                [disabled]=\"sendBtn.loading\"\n              >\n                <i\n                  class=\"bwi bwi-spinner bwi-spin\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span>{{ \"sendEmail\" | i18n }}</span>\n              </button>\n              <span class=\"text-success ml-3\" *ngIf=\"sentEmail\">\n                {{ \"verificationCodeEmailSent\" | i18n: sentEmail }}\n              </span>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"token\">2. {{ \"twoFactorEmailEnterCode\" | i18n }}</label>\n              <input\n                id=\"token\"\n                type=\"text\"\n                name=\"Token\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/twoFactorEmailRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"@bitwarden/common/models/request/updateTwoFactorEmailRequest\";\nimport { TwoFactorEmailResponse } from \"@bitwarden/common/models/response/twoFactorEmailResponse\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-email\",\n  templateUrl: \"two-factor-email.component.html\",\n})\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Email;\n  email: string;\n  token: string;\n  sentEmail: string;\n  formPromise: Promise<TwoFactorEmailResponse>;\n  emailPromise: Promise<unknown>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorEmailResponse>) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  async sendEmail() {\n    try {\n      const request = await this.buildRequestModel(TwoFactorEmailRequest);\n      request.email = this.email;\n      this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\n      await this.emailPromise;\n      this.sentEmail = this.email;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorEmailRequest);\n    request.email = this.email;\n    request.token = this.token;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorEmail(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorEmailResponse) {\n    this.token = null;\n    this.email = response.email;\n    this.enabled = response.enabled;\n    if (!this.enabled && (this.email == null || this.email === \"\")) {\n      this.email = await this.stateService.getEmail();\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faRecoveryTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faRecoveryTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"recoveryCodeTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <ng-container *ngIf=\"authed\">\n        <div class=\"modal-body text-center\">\n          <ng-container *ngIf=\"code\">\n            <p>{{ \"twoFactorRecoveryYourCode\" | i18n }}:</p>\n            <code class=\"text-lg\">{{ code }}</code>\n          </ng-container>\n          <ng-container *ngIf=\"!code\">\n            {{ \"twoFactorRecoveryNoCode\" | i18n }}\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\" *ngIf=\"code\">\n            {{ \"printCode\" | i18n }}\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorRecoverResponse } from \"@bitwarden/common/models/response/twoFactorRescoverResponse\";\n\n@Component({\n  selector: \"app-two-factor-recovery\",\n  templateUrl: \"two-factor-recovery.component.html\",\n})\nexport class TwoFactorRecoveryComponent {\n  type = -1;\n  code: string;\n  authed: boolean;\n  twoFactorProviderType = TwoFactorProviderType;\n\n  constructor(private i18nService: I18nService) {}\n\n  auth(authResponse: any) {\n    this.authed = true;\n    this.processResponse(authResponse.response);\n  }\n\n  print() {\n    const w = window.open();\n    w.document.write(\n      '<div style=\"font-size: 18px; text-align: center;\">' +\n        \"<p>\" +\n        this.i18nService.t(\"twoFactorRecoveryYourCode\") +\n        \":</p>\" +\n        \"<code style=\\\"font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;\\\">\" +\n        this.code +\n        \"</code></div>\" +\n        '<p style=\"text-align: center;\">' +\n        new Date() +\n        \"</p>\"\n    );\n    w.onafterprint = () => w.close();\n    w.print();\n  }\n\n  private formatString(s: string) {\n    if (s == null) {\n      return null;\n    }\n    return s\n      .replace(/(.{4})/g, \"$1 \")\n      .trim()\n      .toUpperCase();\n  }\n\n  private processResponse(response: TwoFactorRecoverResponse) {\n    this.code = this.formatString(response.code);\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorWebAuthnDeleteRequest extends SecretVerificationRequest {\n  id: number;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorWebAuthnRequest extends SecretVerificationRequest {\n  deviceResponse: PublicKeyCredential;\n  name: string;\n  id: number;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faU2fTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faU2fTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"webAuthnTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorWebAuthnWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorWebAuthnSupportWeb\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right ml-5 mfaType7\" alt=\"FIDO2 WebAuthn logo'\" />\n          <ul class=\"bwi-ul\">\n            <li\n              *ngFor=\"let k of keys; let i = index\"\n              #removeKeyBtn\n              [appApiAction]=\"k.removePromise\"\n            >\n              <i class=\"bwi bwi-li bwi-key\"></i>\n              <strong *ngIf=\"!k.configured || !k.name\">{{ \"webAuthnkeyX\" | i18n: i + 1 }}</strong>\n              <strong *ngIf=\"k.configured && k.name\">{{ k.name }}</strong>\n              <ng-container *ngIf=\"k.configured && !removeKeyBtn.loading\">\n                <ng-container *ngIf=\"k.migrated\">\n                  <span>{{ \"webAuthnMigrated\" | i18n }}</span>\n                </ng-container>\n              </ng-container>\n              <ng-container *ngIf=\"keysConfiguredCount > 1 && k.configured\">\n                <i\n                  class=\"bwi bwi-spin bwi-spinner text-muted bwi-fw\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  *ngIf=\"removeKeyBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                -\n                <a href=\"#\" appStopClick (click)=\"remove(k)\">{{ \"remove\" | i18n }}</a>\n              </ng-container>\n            </li>\n          </ul>\n          <hr />\n          <p>{{ \"twoFactorWebAuthnAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorU2fGiveName\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fPlugInReadKey\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fSaveForm\" | i18n }}</li>\n          </ol>\n          <div class=\"row\">\n            <div class=\"form-group col-6\">\n              <label for=\"name\">{{ \"name\" | i18n }}</label>\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"Name\"\n                class=\"form-control\"\n                [(ngModel)]=\"name\"\n                [disabled]=\"!keyIdAvailable\"\n              />\n            </div>\n          </div>\n          <button\n            type=\"button\"\n            (click)=\"readKey()\"\n            class=\"btn btn-outline-secondary mr-2\"\n            [disabled]=\"readKeyBtn.loading || webAuthnListening || !keyIdAvailable\"\n            #readKeyBtn\n            [appApiAction]=\"challengePromise\"\n          >\n            {{ \"readKey\" | i18n }}\n          </button>\n          <ng-container *ngIf=\"readKeyBtn.loading\">\n            <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n          </ng-container>\n          <ng-container *ngIf=\"!readKeyBtn.loading\">\n            <ng-container *ngIf=\"webAuthnListening\">\n              <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fWaiting\" | i18n }}...\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnResponse\">\n              <i class=\"bwi bwi-check-circle text-success\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fClickSave\" | i18n }}\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnError\">\n              <i class=\"bwi bwi-exclamation-triangle text-danger\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fProblemReadingTryAgain\" | i18n }}\n            </ng-container>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            [disabled]=\"form.loading || !webAuthnResponse\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              *ngIf=\"form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!form.loading\">{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"disableBtn.loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"@bitwarden/common/models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"@bitwarden/common/models/request/updateTwoFactorWebAuthnRequest\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"@bitwarden/common/models/response/twoFactorWebAuthnResponse\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\ninterface Key {\n  id: number;\n  name: string;\n  configured: boolean;\n  migrated?: boolean;\n  removePromise: Promise<TwoFactorWebAuthnResponse> | null;\n}\n\n@Component({\n  selector: \"app-two-factor-webauthn\",\n  templateUrl: \"two-factor-webauthn.component.html\",\n})\nexport class TwoFactorWebAuthnComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.WebAuthn;\n  name: string;\n  keys: Key[];\n  keyIdAvailable: number = null;\n  keysConfiguredCount = 0;\n  webAuthnError: boolean;\n  webAuthnListening: boolean;\n  webAuthnResponse: PublicKeyCredential;\n  challengePromise: Promise<ChallengeResponse>;\n  formPromise: Promise<TwoFactorWebAuthnResponse>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorWebAuthnResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    if (this.webAuthnResponse == null || this.keyIdAvailable == null) {\n      // Should never happen.\n      return Promise.reject();\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnRequest);\n    request.deviceResponse = this.webAuthnResponse;\n    request.id = this.keyIdAvailable;\n    request.name = this.name;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorWebAuthn(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  disable() {\n    return super.disable(this.formPromise);\n  }\n\n  async remove(key: Key) {\n    if (this.keysConfiguredCount <= 1 || key.removePromise != null) {\n      return;\n    }\n    const name = key.name != null ? key.name : this.i18nService.t(\"webAuthnkeyX\", key.id as any);\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeU2fConfirmation\"),\n      name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnDeleteRequest);\n    request.id = key.id;\n    try {\n      key.removePromise = this.apiService.deleteTwoFactorWebAuthn(request);\n      const response = await key.removePromise;\n      key.removePromise = null;\n      await this.processResponse(response);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async readKey() {\n    if (this.keyIdAvailable == null) {\n      return;\n    }\n    const request = await this.buildRequestModel(SecretVerificationRequest);\n    try {\n      this.challengePromise = this.apiService.getTwoFactorWebAuthnChallenge(request);\n      const challenge = await this.challengePromise;\n      this.readDevice(challenge);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private readDevice(webAuthnChallenge: ChallengeResponse) {\n    // eslint-disable-next-line\n    console.log(\"listening for key...\");\n    this.resetWebAuthn(true);\n\n    navigator.credentials\n      .create({\n        publicKey: webAuthnChallenge,\n      })\n      .then((data: PublicKeyCredential) => {\n        this.ngZone.run(() => {\n          this.webAuthnListening = false;\n          this.webAuthnResponse = data;\n        });\n      })\n      .catch((err) => {\n        // eslint-disable-next-line\n        console.error(err);\n        this.resetWebAuthn(false);\n        // TODO: Should we display the actual error?\n        this.webAuthnError = true;\n      });\n  }\n\n  private resetWebAuthn(listening = false) {\n    this.webAuthnResponse = null;\n    this.webAuthnError = false;\n    this.webAuthnListening = listening;\n  }\n\n  private processResponse(response: TwoFactorWebAuthnResponse) {\n    this.resetWebAuthn();\n    this.keys = [];\n    this.keyIdAvailable = null;\n    this.name = null;\n    this.keysConfiguredCount = 0;\n    for (let i = 1; i <= 5; i++) {\n      if (response.keys != null) {\n        const key = response.keys.filter((k) => k.id === i);\n        if (key.length > 0) {\n          this.keysConfiguredCount++;\n          this.keys.push({\n            id: i,\n            name: key[0].name,\n            configured: true,\n            migrated: key[0].migrated,\n            removePromise: null,\n          });\n          continue;\n        }\n      }\n      this.keys.push({ id: i, name: null, configured: false, removePromise: null });\n      if (this.keyIdAvailable == null) {\n        this.keyIdAvailable = i;\n      }\n    }\n    this.enabled = response.enabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorYubioOtpRequest extends SecretVerificationRequest {\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faYubiKeyTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faYubiKeyTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>YubiKey</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorYubikeyWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorYubikeySupportUsb\" | i18n }}</li>\n              <li>{{ \"twoFactorYubikeySupportMobile\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right mfaType3\" alt=\"YubiKey OTP security key logo\" />\n          <p>{{ \"twoFactorYubikeyAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorYubikeyPlugIn\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySelectKey\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeyTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySaveForm\" | i18n }}</li>\n          </ol>\n          <hr />\n          <div class=\"row\">\n            <div class=\"form-group col-6\" *ngFor=\"let k of keys; let i = index\">\n              <label for=\"key{{ i + 1 }}\">{{ \"yubikeyX\" | i18n: i + 1 }}</label>\n              <input\n                id=\"key{{ i + 1 }}\"\n                type=\"password\"\n                name=\"Key{{ i + 1 }}\"\n                class=\"form-control\"\n                [(ngModel)]=\"k.key\"\n                *ngIf=\"!k.existingKey\"\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"d-flex\" *ngIf=\"k.existingKey\">\n                <span class=\"mr-2\">{{ k.existingKey }}</span>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link text-danger ml-auto\"\n                  (click)=\"remove(k)\"\n                  appA11yTitle=\"{{ 'remove' | i18n }}\"\n                >\n                  <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <strong class=\"d-block mb-2\">{{ \"nfcSupport\" | i18n }}</strong>\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"nfc\" name=\"Nfc\" [(ngModel)]=\"nfc\" />\n            <label class=\"form-check-label\" for=\"nfc\">{{\n              \"twoFactorYubikeySupportsNfc\" | i18n\n            }}</label>\n          </div>\n          <small class=\"form-text text-muted\">{{ \"twoFactorYubikeySupportsNfcDesc\" | i18n }}</small>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"disableBtn.loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"@bitwarden/common/models/request/updateTwoFactorYubioOtpRequest\";\nimport { TwoFactorYubiKeyResponse } from \"@bitwarden/common/models/response/twoFactorYubiKeyResponse\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\ninterface Key {\n  key: string;\n  existingKey: string;\n}\n\n@Component({\n  selector: \"app-two-factor-yubikey\",\n  templateUrl: \"two-factor-yubikey.component.html\",\n})\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Yubikey;\n  keys: Key[];\n  nfc = false;\n\n  formPromise: Promise<TwoFactorYubiKeyResponse>;\n  disablePromise: Promise<unknown>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorYubiKeyResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    const request = await this.buildRequestModel(UpdateTwoFactorYubioOtpRequest);\n    request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\n    request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\n    request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\n    request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\n    request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\n    request.nfc = this.nfc;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorYubiKey(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"yubikeysUpdated\"));\n    });\n  }\n\n  disable() {\n    return super.disable(this.disablePromise);\n  }\n\n  remove(key: Key) {\n    key.existingKey = null;\n    key.key = null;\n  }\n\n  private processResponse(response: TwoFactorYubiKeyResponse) {\n    this.enabled = response.enabled;\n    this.keys = [\n      { key: response.key1, existingKey: this.padRight(response.key1) },\n      { key: response.key2, existingKey: this.padRight(response.key2) },\n      { key: response.key3, existingKey: this.padRight(response.key3) },\n      { key: response.key4, existingKey: this.padRight(response.key4) },\n      { key: response.key5, existingKey: this.padRight(response.key5) },\n    ];\n    this.nfc = response.nfc || !response.enabled;\n  }\n\n  private padRight(str: string, character = \"•\", size = 44) {\n    if (str == null || character == null || str.length >= size) {\n      return str;\n    }\n    const max = (size - str.length) / character.length;\n    for (let i = 0; i < max; i++) {\n      str += character;\n    }\n    return str;\n  }\n}\n","import { Directive, OnInit, TemplateRef, ViewContainerRef } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n/**\n * Hides the element if the user has premium.\n */\n@Directive({\n  selector: \"[appNotPremium]\",\n})\nexport class NotPremiumDirective implements OnInit {\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    const premium = await this.stateService.getCanAccessPremium();\n\n    if (premium) {\n      this.viewContainer.clear();\n    } else {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Component({\n  selector: \"app-premium-badge\",\n  template: `\n    <button type=\"button\" *appNotPremium bitBadge badgeType=\"success\" (click)=\"premiumRequired()\">\n      {{ \"premium\" | i18n }}\n    </button>\n  `,\n})\nexport class PremiumBadgeComponent {\n  constructor(private messagingService: MessagingService) {}\n\n  premiumRequired() {\n    this.messagingService.send(\"premiumRequired\");\n  }\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"twoStepLogin\" | i18n }}</h1>\n</div>\n<p *ngIf=\"!organizationId\">{{ \"twoStepLoginDesc\" | i18n }}</p>\n<p *ngIf=\"organizationId\">{{ \"twoStepLoginOrganizationDesc\" | i18n }}</p>\n<bit-callout type=\"warning\" *ngIf=\"!organizationId\">\n  <p>{{ \"twoStepLoginRecoveryWarning\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"recoveryCode()\">\n    {{ \"viewRecoveryCode\" | i18n }}\n  </button>\n</bit-callout>\n<h2 [ngClass]=\"{ 'mt-5': !organizationId }\">\n  {{ \"providers\" | i18n }}\n  <small *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-fw text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </small>\n</h2>\n<bit-callout type=\"warning\" *ngIf=\"showPolicyWarning\">\n  {{ \"twoStepLoginPolicyUserWarning\" | i18n }}\n</bit-callout>\n<ul class=\"list-group list-group-2fa\">\n  <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\">\n    <div class=\"logo-2fa d-flex justify-content-center\">\n      <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n    </div>\n    <div class=\"mx-4\">\n      <h3 class=\"mb-0\">\n        {{ p.name }}\n        <ng-container *ngIf=\"p.enabled\">\n          <i\n            class=\"bwi bwi-check text-success bwi-fw\"\n            title=\"{{ 'enabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"enabled\" | i18n }}</span>\n        </ng-container>\n        <app-premium-badge *ngIf=\"p.premium\"></app-premium-badge>\n      </h3>\n      {{ p.description }}\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        bitButton\n        buttonType=\"secondary\"\n        [disabled]=\"!canAccessPremium && p.premium\"\n        (click)=\"manage(p.type)\"\n      >\n        {{ \"manage\" | i18n }}\n      </button>\n    </div>\n  </li>\n</ul>\n<form *ngIf=\"!loading\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h2 class=\"mt-5 spaced-header\">\n        {{ \"deviceVerification\" | i18n }}\n      </h2>\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"enableDeviceVerification\"\n            name=\"enableDeviceVerification\"\n            disabled=\"{{ !isDeviceVerificationSectionEnabled }}\"\n            [(ngModel)]=\"enableDeviceVerification\"\n          />\n          <label class=\"form-check-label\" for=\"enableDeviceVerification\">\n            {{ \"enableDeviceVerification\" | i18n }}\n          </label>\n        </div>\n        <small class=\"form-text text-muted\">{{ \"deviceVerificationDesc\" | i18n }}</small>\n      </div>\n      <button\n        type=\"submit\"\n        buttonType=\"primary\"\n        bitButton\n        [loading]=\"form.loading\"\n        *ngIf=\"isDeviceVerificationSectionEnabled\"\n      >\n        {{ \"save\" | i18n }}\n      </button>\n    </div>\n  </div>\n</form>\n\n<ng-template #authenticatorTemplate></ng-template>\n<ng-template #recoveryTemplate></ng-template>\n<ng-template #duoTemplate></ng-template>\n<ng-template #emailTemplate></ng-template>\n<ng-template #yubikeyTemplate></ng-template>\n<ng-template #webAuthnTemplate></ng-template>\n","import { Component, OnDestroy, OnInit, Type, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { DeviceVerificationRequest } from \"@bitwarden/common/models/request/deviceVerificationRequest\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { TwoFactorAuthenticatorComponent } from \"./two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"./two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"./two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"./two-factor-recovery.component\";\nimport { TwoFactorWebAuthnComponent } from \"./two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"./two-factor-yubikey.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"two-factor-setup.component.html\",\n})\nexport class TwoFactorSetupComponent implements OnInit, OnDestroy {\n  @ViewChild(\"recoveryTemplate\", { read: ViewContainerRef, static: true })\n  recoveryModalRef: ViewContainerRef;\n  @ViewChild(\"authenticatorTemplate\", { read: ViewContainerRef, static: true })\n  authenticatorModalRef: ViewContainerRef;\n  @ViewChild(\"yubikeyTemplate\", { read: ViewContainerRef, static: true })\n  yubikeyModalRef: ViewContainerRef;\n  @ViewChild(\"duoTemplate\", { read: ViewContainerRef, static: true }) duoModalRef: ViewContainerRef;\n  @ViewChild(\"emailTemplate\", { read: ViewContainerRef, static: true })\n  emailModalRef: ViewContainerRef;\n  @ViewChild(\"webAuthnTemplate\", { read: ViewContainerRef, static: true })\n  webAuthnModalRef: ViewContainerRef;\n\n  organizationId: string;\n  providers: any[] = [];\n  canAccessPremium: boolean;\n  showPolicyWarning = false;\n  loading = true;\n  enableDeviceVerification: boolean;\n  isDeviceVerificationSectionEnabled: boolean;\n  modal: ModalRef;\n  formPromise: Promise<any>;\n\n  private destroy$ = new Subject<void>();\n  private twoFactorAuthPolicyAppliesToActiveUser: boolean;\n\n  constructor(\n    protected apiService: ApiService,\n    protected modalService: ModalService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private stateService: StateService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    try {\n      const deviceVerificationSettings = await this.apiService.getDeviceVerificationSettings();\n      this.isDeviceVerificationSectionEnabled =\n        deviceVerificationSettings.isDeviceVerificationSectionEnabled;\n      this.enableDeviceVerification = deviceVerificationSettings.unknownDeviceVerificationEnabled;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    for (const key in TwoFactorProviders) {\n      // eslint-disable-next-line\n      if (!TwoFactorProviders.hasOwnProperty(key)) {\n        continue;\n      }\n\n      const p = (TwoFactorProviders as any)[key];\n      if (this.filterProvider(p.type)) {\n        continue;\n      }\n\n      this.providers.push({\n        type: p.type,\n        name: p.name,\n        description: p.description,\n        enabled: false,\n        premium: p.premium,\n        sort: p.sort,\n      });\n    }\n\n    this.providers.sort((a: any, b: any) => a.sort - b.sort);\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.TwoFactorAuthentication)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.twoFactorAuthPolicyAppliesToActiveUser = policyAppliesToActiveUser;\n      });\n\n    await this.load();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load() {\n    this.loading = true;\n    const providerList = await this.getTwoFactorProviders();\n    providerList.data.forEach((p) => {\n      this.providers.forEach((p2) => {\n        if (p.type === p2.type) {\n          p2.enabled = p.enabled;\n        }\n      });\n    });\n    this.evaluatePolicies();\n    this.loading = false;\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.Authenticator: {\n        const authComp = await this.openModal(\n          this.authenticatorModalRef,\n          TwoFactorAuthenticatorComponent\n        );\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        authComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Yubikey: {\n        const yubiComp = await this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        yubiComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Duo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Duo);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Email: {\n        const emailComp = await this.openModal(this.emailModalRef, TwoFactorEmailComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        emailComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Email);\n        });\n        break;\n      }\n      case TwoFactorProviderType.WebAuthn: {\n        const webAuthnComp = await this.openModal(\n          this.webAuthnModalRef,\n          TwoFactorWebAuthnComponent\n        );\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        webAuthnComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.WebAuthn);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  recoveryCode() {\n    this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorProviders();\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type === TwoFactorProviderType.OrganizationDuo;\n  }\n\n  protected async openModal<T>(ref: ViewContainerRef, type: Type<T>): Promise<T> {\n    const [modal, childComponent] = await this.modalService.openViewRef(type, ref);\n    this.modal = modal;\n\n    return childComponent;\n  }\n\n  protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\n    if (!enabled && this.modal != null) {\n      this.modal.close();\n    }\n    this.providers.forEach((p) => {\n      if (p.type === type) {\n        p.enabled = enabled;\n      }\n    });\n    this.evaluatePolicies();\n  }\n\n  private async evaluatePolicies() {\n    if (this.organizationId == null && this.providers.filter((p) => p.enabled).length === 1) {\n      this.showPolicyWarning = this.twoFactorAuthPolicyAppliesToActiveUser;\n    } else {\n      this.showPolicyWarning = false;\n    }\n  }\n\n  async submit() {\n    try {\n      if (this.enableDeviceVerification) {\n        const email = await this.stateService.getEmail();\n        const confirmed = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\n            \"areYouSureYouWantToEnableDeviceVerificationTheVerificationCodeEmailsWillArriveAtX\",\n            email\n          ),\n          this.i18nService.t(\"deviceVerification\"),\n          this.i18nService.t(\"yes\"),\n          this.i18nService.t(\"no\"),\n          \"warning\"\n        );\n        if (!confirmed) {\n          return;\n        }\n      }\n\n      this.formPromise = this.apiService.putDeviceVerificationSettings(\n        new DeviceVerificationRequest(this.enableDeviceVerification)\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedDeviceVerification\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { TwoFactorDuoComponent } from \"../../settings/two-factor-duo.component\";\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from \"../../settings/two-factor-setup.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"../../settings/two-factor-setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n  constructor(\n    apiService: ApiService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService\n  ) {\n    super(\n      apiService,\n      modalService,\n      messagingService,\n      policyService,\n      stateService,\n      platformUtilsService,\n      i18nService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await super.ngOnInit();\n    });\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.OrganizationDuo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.type = TwoFactorProviderType.OrganizationDuo;\n        duoComp.organizationId = this.organizationId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type !== TwoFactorProviderType.OrganizationDuo;\n  }\n}\n","import { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { Observable, Subject, takeUntil, concatMap } from \"rxjs\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SecureNoteType } from \"@bitwarden/common/enums/secureNoteType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CardView } from \"@bitwarden/common/models/view/cardView\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\nimport { IdentityView } from \"@bitwarden/common/models/view/identityView\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\nimport { LoginView } from \"@bitwarden/common/models/view/loginView\";\nimport { SecureNoteView } from \"@bitwarden/common/models/view/secureNoteView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit, OnDestroy {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n  @Output() onGenerateUsername = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders$: Observable<FolderView[]>;\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n\n  protected destroy$ = new Subject<void>();\n  protected writeableCollections: CollectionView[];\n  private personalOwnershipPolicyAppliesToActiveUser: boolean;\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventService: EventService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: \"RuPay\", value: \"RuPay\" },\n      { name: i18nService.t(\"cardBrandMir\"), value: \"Mir\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.PersonalOwnership)\n      .pipe(\n        concatMap(async (policyAppliesToActiveUser) => {\n          this.personalOwnershipPolicyAppliesToActiveUser = policyAppliesToActiveUser;\n          await this.init();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (this.personalOwnershipPolicyAppliesToActiveUser) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders$ = this.folderService.folderViews$;\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generateUsername(): Promise<boolean> {\n    if (this.cipher.login?.username?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwriteUsernameConfirmation\"),\n        this.i18nService.t(\"overwriteUsername\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGenerateUsername.emit();\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (this.cipher.login?.password?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipherService.saveWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { FieldView } from \"@bitwarden/common/models/view/fieldView\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(private i18nService: I18nService, private eventService: EventService) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue = true;\n  @Input() falseValue = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","<ng-container>\n  <h3 class=\"mt-4\">{{ \"customFields\" | i18n }}</h3>\n  <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n    <div\n      role=\"group\"\n      class=\"row\"\n      cdkDrag\n      *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n      attr.aria-label=\"{{ f.name }}\"\n    >\n      <div class=\"col-5 form-group\">\n        <div class=\"d-flex\">\n          <label for=\"fieldName{{ i }}\">{{ \"name\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/custom-fields/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"fieldName{{ i }}\"\n          type=\"text\"\n          name=\"Field.Name{{ i }}\"\n          [(ngModel)]=\"f.name\"\n          class=\"form-control\"\n          appInputVerbatim\n          [disabled]=\"cipher.isDeleted || viewOnly\"\n        />\n      </div>\n      <div class=\"col-7 form-group\">\n        <label for=\"fieldValue{{ i }}\">{{ \"value\" | i18n }}</label>\n        <div class=\"d-flex align-items-center\">\n          <!-- Text -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Text\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              appInputVerbatim\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', 'Field')\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Hidden -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Hidden\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              type=\"{{ f.showValue ? 'text' : 'password' }}\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              class=\"form-control text-monospace\"\n              appInputVerbatim\n              autocomplete=\"new-password\"\n              [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.viewPassword && !f.newField)\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleFieldValue(f)\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n                >\n                </i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', f.type === fieldType.Hidden ? 'H_Field' : 'Field')\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Linked -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Linked\">\n            <select\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              class=\"form-control\"\n              [(ngModel)]=\"f.linkedId\"\n              *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            >\n              <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"flex-fill\">\n            <!-- Boolean -->\n            <input\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              type=\"checkbox\"\n              [(ngModel)]=\"f.value\"\n              *ngIf=\"f.type === fieldType.Boolean\"\n              appTrueFalseValue\n              trueValue=\"true\"\n              falseValue=\"false\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n          </div>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-danger ml-2\"\n            (click)=\"removeField(f)\"\n            appA11yTitle=\"{{ 'remove' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-muted cursor-move\"\n            appA11yTitle=\"{{ 'dragToSort' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-hamburger bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Add new custom field -->\n  <a\n    href=\"#\"\n    appStopClick\n    (click)=\"addField()\"\n    class=\"d-inline-block mb-2\"\n    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n  >\n    <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomField\" | i18n }}\n  </a>\n  <div class=\"row\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n    <div class=\"col-5\">\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" class=\"form-control\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n","import { Component, Input } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"@bitwarden/angular/components/add-edit-custom-fields.component\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  @Input() viewOnly: boolean;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  constructor(i18nService: I18nService, eventService: EventService) {\n    super(i18nService, eventService);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"cipherAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"cipherAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"cipher\">\n        <app-callout type=\"info\" *ngIf=\"allowOwnershipAssignment() && !allowPersonal\">\n          {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n        </app-callout>\n        <div class=\"row\" *ngIf=\"!editMode && !viewOnly\">\n          <div class=\"col-6 form-group\">\n            <label for=\"type\">{{ \"whatTypeOfItem\" | i18n }}</label>\n            <select\n              id=\"type\"\n              name=\"Type\"\n              [(ngModel)]=\"cipher.type\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted\"\n              appAutofocus\n            >\n              <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"cipher.name\"\n              required\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n          </div>\n          <div class=\"col-6 form-group\" *ngIf=\"!organization\">\n            <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n            <select\n              id=\"folder\"\n              name=\"FolderId\"\n              [(ngModel)]=\"cipher.folderId\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            >\n              <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n            </select>\n          </div>\n        </div>\n        <!-- Login -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginUsername\"\n                  class=\"form-control\"\n                  type=\"text\"\n                  name=\"Login.Username\"\n                  [(ngModel)]=\"cipher.login.username\"\n                  appInputVerbatim\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\" *ngIf=\"!cipher.isDeleted\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n                    (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-6 form-group\">\n              <div class=\"d-flex\">\n                <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n                <div class=\"ml-auto d-flex\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n                  <a\n                    href=\"#\"\n                    class=\"d-block mr-2 bwi-icon-above-input\"\n                    appStopClick\n                    appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                    (click)=\"generatePassword()\"\n                    *ngIf=\"cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-fw bwi-generate\" aria-hidden=\"true\"></i>\n                  </a>\n                  <a\n                    href=\"#\"\n                    class=\"d-block bwi-icon-above-input\"\n                    #checkPasswordBtn\n                    appStopClick\n                    appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                    (click)=\"checkPassword()\"\n                    [appApiAction]=\"checkPasswordPromise\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-check-circle\"\n                      [hidden]=\"checkPasswordBtn.loading\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-spinner bwi-spin\"\n                      aria-hidden=\"true\"\n                      [hidden]=\"!checkPasswordBtn.loading\"\n                      title=\"{{ 'loading' | i18n }}\"\n                    ></i>\n                  </a>\n                </div>\n              </div>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginPassword\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Login.Password\"\n                  [(ngModel)]=\"cipher.login.password\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePassword()\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                    (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"tw-flex tw-flex-row\">\n            <div class=\"tw-mb-4 tw-w-1/2\">\n              <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n              <input\n                id=\"loginTotp\"\n                type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n                name=\"Login.Totp\"\n                class=\"form-control text-monospace\"\n                [(ngModel)]=\"cipher.login.totp\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n              />\n            </div>\n            <div class=\"tw-mb-4 tw-ml-4 tw-flex tw-w-1/2 tw-items-end\" [ngClass]=\"{ low: totpLow }\">\n              <div\n                class=\"totp tw-flex tw-flex-row tw-items-center\"\n                *ngIf=\"!cipher.login.totp || !totpCode\"\n              >\n                <span class=\"totp-countdown\">\n                  <span class=\"totp-sec tw-text-muted\">15</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle-muted inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        opacity=\"0.25\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': 40 }\"\n                      ></circle>\n                      <circle\n                        class=\"totp-circle-muted outer\"\n                        opacity=\"0.25\"\n                        r=\"14\"\n                        cy=\"16\"\n                        cx=\"16\"\n                      ></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span\n                  class=\"totp-code tw-mr-3 tw-ml-2 tw-text-muted\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  >--- ---</span\n                >\n                <i class=\"bwi bwi-lg bwi-clone tw-text-muted\" aria-hidden=\"true\"></i>\n              </div>\n              <div class=\"tw-pb-2\" *ngIf=\"!cipher.login.totp || !totpCode\">\n                <app-premium-badge\n                  *ngIf=\"!organization && !cipher.organizationId\"\n                  class=\"ml-3\"\n                ></app-premium-badge>\n                <a\n                  href=\"#\"\n                  appStopClick\n                  bitBadge\n                  badgeType=\"primary\"\n                  class=\"tw-ml-4\"\n                  (click)=\"upgradeOrganization()\"\n                  *ngIf=\"\n                    (organization && !organization.useTotp) ||\n                    (!organization &&\n                      !canAccessPremium &&\n                      cipher.organizationId &&\n                      !cipher.organizationUseTotp)\n                  \"\n                >\n                  {{ \"upgrade\" | i18n }}\n                </a>\n              </div>\n              <div\n                *ngIf=\"cipher.login.totp && totpCode\"\n                class=\"totp tw-flex tw-flex-row tw-items-center\"\n              >\n                <span class=\"totp-countdown\">\n                  <span class=\"totp-sec\">{{ totpSec }}</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                      ></circle>\n                      <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span\n                  class=\"totp-code tw-mr-2 tw-ml-2 tw-mt-1\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  >{{ totpCodeFormatted }}</span\n                >\n                <button\n                  type=\"button\"\n                  class=\"tw-items-center tw-border-none tw-bg-transparent tw-text-primary-500\"\n                  appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n                  (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n                >\n                  <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <ng-container *ngIf=\"cipher.login.hasUris\">\n            <div\n              role=\"group\"\n              class=\"row\"\n              *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n              attr.aria-label=\"{{ 'uriPosition' | i18n: i + 1 }}\"\n            >\n              <div class=\"col-7 form-group\">\n                <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n                <div class=\"input-group\">\n                  <input\n                    class=\"form-control\"\n                    id=\"loginUri{{ i }}\"\n                    type=\"text\"\n                    name=\"Login.Uris[{{ i }}].Uri\"\n                    [(ngModel)]=\"u.uri\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                    placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                    appInputVerbatim\n                  />\n                  <div class=\"input-group-append\">\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'launch' | i18n }}\"\n                      (click)=\"launch(u)\"\n                      [disabled]=\"!u.canLaunch\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n                    </button>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n                      (click)=\"copy(u.uri, 'uri', 'URI')\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-5 form-group\">\n                <div class=\"d-flex\">\n                  <label for=\"loginUriMatch{{ i }}\">\n                    {{ \"matchDetection\" | i18n }}\n                  </label>\n                  <a\n                    class=\"ml-auto\"\n                    href=\"https://bitwarden.com/help/uri-match-detection/\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n                  >\n                    <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n                <div class=\"d-flex\">\n                  <select\n                    class=\"form-control overflow-hidden\"\n                    id=\"loginUriMatch{{ i }}\"\n                    name=\"Login.Uris[{{ i }}].Match\"\n                    [(ngModel)]=\"u.match\"\n                    (change)=\"loginUriMatchChanged(u)\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                  >\n                    <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">\n                      {{ o.name }}\n                    </option>\n                  </select>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-link text-danger ml-2\"\n                    (click)=\"removeUri(u)\"\n                    appA11yTitle=\"{{ 'remove' | i18n }}\"\n                    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n                  >\n                    <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n          <a\n            href=\"#\"\n            appStopClick\n            (click)=\"addUri()\"\n            class=\"d-inline-block mb-3\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n          </a>\n        </ng-container>\n        <!-- Card -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n              <input\n                id=\"cardCardholderName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.CardCardholderName\"\n                [(ngModel)]=\"cipher.card.cardholderName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n              <select\n                id=\"cardBrand\"\n                class=\"form-control\"\n                name=\"Card.Brand\"\n                [(ngModel)]=\"cipher.card.brand\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardNumber\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                  name=\"Card.Number\"\n                  [(ngModel)]=\"cipher.card.number\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardNumber()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{\n                        'bwi-eye': !showCardNumber,\n                        'bwi-eye-slash': showCardNumber\n                      }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n                    (click)=\"copy(cipher.card.number, 'number', 'Number')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n              <select\n                id=\"cardExpMonth\"\n                class=\"form-control\"\n                name=\"Card.ExpMonth\"\n                [(ngModel)]=\"cipher.card.expMonth\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                  {{ o.name }}\n                </option>\n              </select>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n              <input\n                id=\"cardExpYear\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.ExpYear\"\n                [(ngModel)]=\"cipher.card.expYear\"\n                placeholder=\"{{ 'ex' | i18n }} 2019\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardCode\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                  name=\"Card.Code\"\n                  [(ngModel)]=\"cipher.card.code\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardCode()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'securityCode' | i18n }}\"\n                    (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <!-- Identity -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n              <select\n                id=\"idTitle\"\n                class=\"form-control\"\n                name=\"Identity.Title\"\n                [(ngModel)]=\"cipher.identity.title\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                  {{ o.name }}\n                </option>\n              </select>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n              <input\n                id=\"idFirstName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.FirstName\"\n                [(ngModel)]=\"cipher.identity.firstName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n              <input\n                id=\"idMiddleName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.MiddleName\"\n                [(ngModel)]=\"cipher.identity.middleName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n              <input\n                id=\"idLastName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LastName\"\n                [(ngModel)]=\"cipher.identity.lastName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"idUsername\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Username\"\n                [(ngModel)]=\"cipher.identity.username\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n              <input\n                id=\"idCompany\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Company\"\n                [(ngModel)]=\"cipher.identity.company\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n              <input\n                id=\"idSsn\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.SSN\"\n                [(ngModel)]=\"cipher.identity.ssn\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n              <input\n                id=\"idPassportNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PassportNumber\"\n                [(ngModel)]=\"cipher.identity.passportNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n              <input\n                id=\"idLicenseNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LicenseNumber\"\n                [(ngModel)]=\"cipher.identity.licenseNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n              <input\n                id=\"idEmail\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"email\"\n                name=\"Identity.Email\"\n                [(ngModel)]=\"cipher.identity.email\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n              <input\n                id=\"idPhone\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"tel\"\n                name=\"Identity.Phone\"\n                [(ngModel)]=\"cipher.identity.phone\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n              <input\n                id=\"idAddress1\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address1\"\n                [(ngModel)]=\"cipher.identity.address1\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n              <input\n                id=\"idAddress2\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address2\"\n                [(ngModel)]=\"cipher.identity.address2\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n              <input\n                id=\"idAddress3\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address3\"\n                [(ngModel)]=\"cipher.identity.address3\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n              <input\n                id=\"idCity\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.City\"\n                [(ngModel)]=\"cipher.identity.city\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n              <input\n                id=\"idState\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.State\"\n                [(ngModel)]=\"cipher.identity.state\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n              <input\n                id=\"idPostalCode\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PostalCode\"\n                [(ngModel)]=\"cipher.identity.postalCode\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n              <input\n                id=\"idCountry\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Country\"\n                [(ngModel)]=\"cipher.identity.country\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n        </ng-container>\n        <div class=\"form-group\">\n          <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n          <textarea\n            id=\"notes\"\n            name=\"Notes\"\n            rows=\"6\"\n            [(ngModel)]=\"cipher.notes\"\n            [disabled]=\"cipher.isDeleted || viewOnly\"\n            class=\"form-control\"\n          ></textarea>\n        </div>\n        <app-vault-add-edit-custom-fields\n          [cipher]=\"cipher\"\n          [thisCipherType]=\"cipher.type\"\n          [viewOnly]=\"viewOnly\"\n          [copy]=\"copy.bind(this)\"\n        ></app-vault-add-edit-custom-fields>\n        <ng-container *ngIf=\"allowOwnershipAssignment()\">\n          <h3 class=\"mt-4\">{{ \"ownership\" | i18n }}</h3>\n          <div class=\"row\">\n            <div class=\"col-5\">\n              <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n              <select\n                id=\"organizationId\"\n                class=\"form-control\"\n                name=\"OrganizationId\"\n                [(ngModel)]=\"cipher.organizationId\"\n                (change)=\"organizationChanged()\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n          <h3 class=\"mt-4\">{{ \"collections\" | i18n }}</h3>\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <ng-container *ngIf=\"collections && collections.length\">\n            <div class=\"form-check\" *ngFor=\"let c of collections; let i = index\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"c.checked\"\n                id=\"collection-{{ i }}\"\n                name=\"Collection[{{ i }}].Checked\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n              <label class=\"form-check-label\" for=\"collection-{{ i }}\">{{ c.name }}</label>\n            </div>\n          </ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"editMode\">\n          <div class=\"small text-muted mt-4\">\n            <div>\n              <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n              {{ cipher.revisionDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"cipher.creationDate\">\n              <b class=\"font-weight-semibold\">{{ \"dateCreated\" | i18n }}:</b>\n              {{ cipher.creationDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"showRevisionDate\">\n              <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n              {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"hasPasswordHistory\">\n              <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n              <a href=\"#\" appStopClick (click)=\"viewHistory()\" title=\"{{ 'view' | i18n }}\">\n                {{ cipher.passwordHistory.length }}\n              </a>\n            </div>\n            <div class=\"ml-3\" *ngIf=\"viewingPasswordHistory\">\n              <div *ngFor=\"let ph of cipher.passwordHistory\">\n                {{ ph.lastUsedDate | date: \"short\" }} -\n                <span class=\"generated-wrapper text-monospace ml-2\">{{ ph.password }}</span>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"canUseReprompt\">\n          <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [ngModel]=\"reprompt\"\n              (change)=\"repromptChanged()\"\n              id=\"passwordPrompt\"\n              name=\"passwordPrompt\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n            <label class=\"form-check-label\" for=\"passwordPrompt\">{{\n              \"passwordPrompt\" | i18n\n            }}</label>\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (cipher?.isDeleted ? \"restore\" : \"save\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ (viewOnly ? \"close\" : \"cancel\") | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"cipher && !viewOnly\">\n          <button\n            *ngIf=\"!organization && !cipher.isDeleted\"\n            type=\"button\"\n            (click)=\"toggleFavorite()\"\n            class=\"btn btn-link\"\n            appA11yTitle=\"{{ (cipher.favorite ? 'unfavorite' : 'favorite') | i18n }}\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              [ngClass]=\"{ 'bwi-star-f': cipher.favorite, 'bwi-star': !cipher.favorite }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ (cipher.isDeleted ? 'permanentlyDelete' : 'delete') | i18n }}\"\n            *ngIf=\"editMode && !cloneMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/add-edit.component\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent implements OnInit, OnDestroy {\n  canAccessPremium: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  showRevisionDate = false;\n  hasPasswordHistory = false;\n  viewingPasswordHistory = false;\n  viewOnly = false;\n\n  protected totpInterval: number;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    protected totpService: TotpService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected messagingService: MessagingService,\n    eventService: EventService,\n    protected policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n    this.showRevisionDate = this.cipher.passwordRevisionDisplayDate != null;\n    this.hasPasswordHistory = this.cipher.hasPasswordHistory;\n    this.cleanUp();\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (this.cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = window.setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n\n  toggleFavorite() {\n    this.cipher.favorite = !this.cipher.favorite;\n  }\n\n  launch(uri: LoginUriView) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (this.editMode) {\n      if (typeI18nKey === \"password\") {\n        this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n      } else if (typeI18nKey === \"securityCode\") {\n        this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n      } else if (aType === \"H_Field\") {\n        this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n      }\n    }\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      const options = (await this.passwordGenerationService.getOptions())?.[0] ?? {};\n      this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\n    }\n    return confirmed;\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", {\n      organizationId: this.cipher.organizationId,\n    });\n  }\n\n  showGetPremium() {\n    if (this.canAccessPremium) {\n      return;\n    }\n    if (this.cipher.organizationUseTotp) {\n      this.upgradeOrganization();\n    } else {\n      this.premiumRequired();\n    }\n  }\n\n  viewHistory() {\n    this.viewingPasswordHistory = !this.viewingPasswordHistory;\n  }\n\n  protected cleanUp() {\n    if (this.totpInterval) {\n      window.clearInterval(this.totpInterval);\n    }\n  }\n\n  protected async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  protected allowOwnershipAssignment() {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherCreateRequest } from \"@bitwarden/common/models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"@bitwarden/common/models/request/cipherRequest\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../../vault/add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  organization: Organization;\n  originalCipher: Cipher = null;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    private apiService: ApiService,\n    messagingService: MessagingService,\n    eventService: EventService,\n    policyService: PolicyService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  protected allowOwnershipAssignment() {\n    if (\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    ) {\n      if (this.organization != null) {\n        return this.cloneMode && this.organization.canEditAnyCollection;\n      } else {\n        return !this.editMode || this.cloneMode;\n      }\n    }\n    return false;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    const data = new CipherData(response);\n    this.originalCipher = new Cipher(data);\n    return new Cipher(data);\n  }\n\n  protected encryptCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.encryptCipher();\n    }\n    return this.cipherService.encrypt(this.cipher, null, this.originalCipher);\n  }\n\n  protected async saveCipher(cipher: Cipher) {\n    if (!this.organization.canEditAnyCollection || cipher.organizationId == null) {\n      return super.saveCipher(cipher);\n    }\n    if (this.editMode && !this.cloneMode) {\n      const request = new CipherRequest(cipher);\n      return this.apiService.putCipherAdmin(this.cipherId, request);\n    } else {\n      const request = new CipherCreateRequest(cipher);\n      return this.apiService.postCipherAdmin(request);\n    }\n  }\n\n  protected async deleteCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher();\n    }\n    return this.cipher.isDeleted\n      ? this.apiService.deleteCipherAdmin(this.cipherId)\n      : this.apiService.putDeleteCipherAdmin(this.cipherId);\n  }\n}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { AddEditComponent as OrgAddEditComponent } from \"../../organizations/vault/add-edit.component\";\nimport { AddEditComponent } from \"../../vault/add-edit.component\";\n\n@Directive()\nexport class CipherReportComponent {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n\n  loading = false;\n  hasLoaded = false;\n  ciphers: CipherView[] = [];\n  organization: Organization;\n\n  constructor(\n    private modalService: ModalService,\n    protected messagingService: MessagingService,\n    public requiresPaid: boolean,\n    private stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async load() {\n    this.loading = true;\n    await this.setCiphers();\n    this.loading = false;\n    this.hasLoaded = true;\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (!(await this.repromptCipher(cipher))) {\n      return;\n    }\n\n    const type = this.organization != null ? OrgAddEditComponent : AddEditComponent;\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      type,\n      this.cipherAddEditModalRef,\n      (comp: OrgAddEditComponent | AddEditComponent) => {\n        if (this.organization != null) {\n          (comp as OrgAddEditComponent).organization = this.organization;\n          comp.organizationId = this.organization.id;\n        }\n\n        comp.cipherId = cipher == null ? null : cipher.id;\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n\n  protected async checkAccess(): Promise<boolean> {\n    if (this.organization != null) {\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      if (this.requiresPaid && !this.organization.useTotp) {\n        this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n        return false;\n      }\n    }\n    return true;\n  }\n\n  protected async setCiphers() {\n    this.ciphers = [];\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n  RuPay: \"card-ru-pay\",\n  Mir: \"card-mir\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"exposedPasswordsReport\" | i18n }}</h1>\n</div>\n<p>{{ \"exposedPasswordsReportDesc\" | i18n }}</p>\n<button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"loading\" (click)=\"load()\">\n  {{ \"checkExposedPasswords\" | i18n }}\n</button>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noExposedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'exposedPasswordsFound' | i18n }}\" [useAlertRole]=\"true\">\n      {{ \"exposedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"exposedXTimes\" | i18n: (exposedPasswordMap.get(c.id) | number) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-exposed-passwords-report\",\n  templateUrl: \"exposed-passwords-report.component.html\",\n})\nexport class ExposedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  exposedPasswordMap = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  ngOnInit() {\n    this.checkAccess();\n  }\n\n  async load() {\n    if (await this.checkAccess()) {\n      super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const exposedPasswordCiphers: CipherView[] = [];\n    const promises: Promise<void>[] = [];\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const promise = this.auditService.passwordLeaked(c.login.password).then((exposedCount) => {\n        if (exposedCount > 0) {\n          exposedPasswordCiphers.push(c);\n          this.exposedPasswordMap.set(c.id, exposedCount);\n        }\n      });\n      promises.push(promise);\n    });\n    await Promise.all(promises);\n    this.ciphers = exposedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { ExposedPasswordsReportComponent as BaseExposedPasswordsReportComponent } from \"../../reports/pages/exposed-passwords-report.component\";\n\n@Component({\n  selector: \"app-org-exposed-passwords-report\",\n  templateUrl: \"../../reports/pages/exposed-passwords-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ExposedPasswordsReportComponent extends BaseExposedPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private organizationService: OrganizationService,\n    private route: ActivatedRoute,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      auditService,\n      modalService,\n      messagingService,\n      stateService,\n      passwordRepromptService\n    );\n  }\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await this.checkAccess();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"inactive2faReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"inactive2faReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noInactive2fa\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'inactive2faFound' | i18n }}\">\n      {{ \"inactive2faFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <a\n              bitBadge\n              href=\"{{ cipherDocs.get(c.id) }}\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              *ngIf=\"cipherDocs.has(c.id)\"\n            >\n              {{ \"instructions\" | i18n }}</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"inactive-two-factor-report.component.html\",\n})\nexport class InactiveTwoFactorReportComponent extends CipherReportComponent implements OnInit {\n  services = new Map<string, string>();\n  cipherDocs = new Map<string, string>();\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    try {\n      await this.load2fa();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (this.services.size > 0) {\n      const allCiphers = await this.getAllCiphers();\n      const inactive2faCiphers: CipherView[] = [];\n      const promises: Promise<void>[] = [];\n      const docs = new Map<string, string>();\n      allCiphers.forEach((c) => {\n        if (\n          c.type !== CipherType.Login ||\n          (c.login.totp != null && c.login.totp !== \"\") ||\n          !c.login.hasUris ||\n          c.isDeleted\n        ) {\n          return;\n        }\n        for (let i = 0; i < c.login.uris.length; i++) {\n          const u = c.login.uris[i];\n          if (u.uri != null && u.uri !== \"\") {\n            const uri = u.uri.replace(\"www.\", \"\");\n            const domain = Utils.getDomain(uri);\n            if (domain != null && this.services.has(domain)) {\n              if (this.services.get(domain) != null) {\n                docs.set(c.id, this.services.get(domain));\n              }\n              inactive2faCiphers.push(c);\n            }\n          }\n        }\n      });\n      await Promise.all(promises);\n      this.ciphers = inactive2faCiphers;\n      this.cipherDocs = docs;\n    }\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  private async load2fa() {\n    if (this.services.size > 0) {\n      return;\n    }\n    const response = await fetch(new Request(\"https://2fa.directory/api/v3/totp.json\"));\n    if (response.status !== 200) {\n      throw new Error();\n    }\n    const responseJson = await response.json();\n    for (const service of responseJson) {\n      const serviceData = service[1];\n      if (serviceData.domain == null) {\n        continue;\n      }\n      if (serviceData.documentation == null) {\n        continue;\n      }\n      if (serviceData[\"additional-domains\"] != null) {\n        for (const additionalDomain of serviceData[\"additional-domains\"]) {\n          this.services.set(additionalDomain, serviceData.documentation);\n        }\n      }\n      this.services.set(serviceData.domain, serviceData.documentation);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { InactiveTwoFactorReportComponent as BaseInactiveTwoFactorReportComponent } from \"../../reports/pages/inactive-two-factor-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"../../reports/pages/inactive-two-factor-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class InactiveTwoFactorReportComponent extends BaseInactiveTwoFactorReportComponent {\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      modalService,\n      messagingService,\n      stateService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"reusedPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"reusedPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noReusedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'reusedPasswordsFound' | i18n }}\">\n      {{ \"reusedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"reusedXTimes\" | i18n: passwordUseMap.get(c.login.password) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"reused-passwords-report.component.html\",\n})\nexport class ReusedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordUseMap: Map<string, number>;\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const ciphersWithPasswords: CipherView[] = [];\n    this.passwordUseMap = new Map<string, number>();\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      ciphersWithPasswords.push(c);\n      if (this.passwordUseMap.has(c.login.password)) {\n        this.passwordUseMap.set(c.login.password, this.passwordUseMap.get(c.login.password) + 1);\n      } else {\n        this.passwordUseMap.set(c.login.password, 1);\n      }\n    });\n    const reusedPasswordCiphers = ciphersWithPasswords.filter(\n      (c) =>\n        this.passwordUseMap.has(c.login.password) && this.passwordUseMap.get(c.login.password) > 1\n    );\n    this.ciphers = reusedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from an organization view\n    return true;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { ReusedPasswordsReportComponent as BaseReusedPasswordsReportComponent } from \"../../reports/pages/reused-passwords-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"../../reports/pages/reused-passwords-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ReusedPasswordsReportComponent extends BaseReusedPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, modalService, messagingService, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"container page-content\">\n  <ng-container *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"row\">\n      <div class=\"col-3\">\n        <div class=\"card mb-4\" *ngIf=\"organization.canAccessImportExport\">\n          <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n          <div class=\"list-group list-group-flush\">\n            <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"importData\" | i18n }}\n            </a>\n            <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"exportVault\" | i18n }}\n            </a>\n          </div>\n        </div>\n        <div class=\"card\" *ngIf=\"organization.canAccessReports\">\n          <div class=\"card-header d-flex\">\n            {{ \"reports\" | i18n }}\n            <div class=\"ml-auto\">\n              <a\n                href=\"#\"\n                appStopClick\n                bitBadge\n                *ngIf=\"!accessReports\"\n                (click)=\"upgradeOrganization()\"\n              >\n                {{ \"upgrade\" | i18n }}\n              </a>\n            </div>\n          </div>\n          <div class=\"list-group list-group-flush\">\n            <a\n              routerLink=\"exposed-passwords-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"exposedPasswordsReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"reused-passwords-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"reusedPasswordsReport\" | i18n }}\n            </a>\n            <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"weakPasswordsReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"unsecured-websites-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"unsecuredWebsitesReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"inactive-two-factor-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"inactive2faReport\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-9\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </ng-container>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-tools\",\n  templateUrl: \"tools.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ToolsComponent {\n  organization: Organization;\n  accessReports = false;\n  loading = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private messagingService: MessagingService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      this.accessReports = this.organization.useTotp;\n      this.loading = false;\n    });\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"unsecuredWebsitesReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"unsecuredWebsitesReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noUnsecuredWebsites\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'unsecuredWebsitesFound' | i18n }}\">\n      {{ \"unsecuredWebsitesFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"unsecured-websites-report.component.html\",\n})\nexport class UnsecuredWebsitesReportComponent extends CipherReportComponent implements OnInit {\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const unsecuredCiphers = allCiphers.filter((c) => {\n      if (c.type !== CipherType.Login || !c.login.hasUris || c.isDeleted) {\n        return false;\n      }\n      return c.login.uris.some((u) => u.uri != null && u.uri.indexOf(\"http://\") === 0);\n    });\n    this.ciphers = unsecuredCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { UnsecuredWebsitesReportComponent as BaseUnsecuredWebsitesReportComponent } from \"../../reports/pages/unsecured-websites-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"../../reports/pages/unsecured-websites-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class UnsecuredWebsitesReportComponent extends BaseUnsecuredWebsitesReportComponent {\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, modalService, messagingService, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"weakPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"weakPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noWeakPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'weakPasswordsFound' | i18n }}\">\n      {{ \"weakPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge [badgeType]=\"passwordStrengthMap.get(c.id)[1]\">\n              {{ passwordStrengthMap.get(c.id)[0] | i18n }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"weak-passwords-report.component.html\",\n})\nexport class WeakPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordStrengthMap = new Map<string, [string, string]>();\n\n  private passwordStrengthCache = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const weakPasswordCiphers: CipherView[] = [];\n    const isUserNameNotEmpty = (c: CipherView): boolean => {\n      return c.login.username != null && c.login.username.trim() !== \"\";\n    };\n    const getCacheKey = (c: CipherView): string => {\n      return c.login.password + \"_____\" + (isUserNameNotEmpty(c) ? c.login.username : \"\");\n    };\n\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const hasUserName = isUserNameNotEmpty(c);\n      const cacheKey = getCacheKey(c);\n      if (!this.passwordStrengthCache.has(cacheKey)) {\n        let userInput: string[] = [];\n        if (hasUserName) {\n          const atPosition = c.login.username.indexOf(\"@\");\n          if (atPosition > -1) {\n            userInput = userInput\n              .concat(\n                c.login.username\n                  .substr(0, atPosition)\n                  .trim()\n                  .toLowerCase()\n                  .split(/[^A-Za-z0-9]/)\n              )\n              .filter((i) => i.length >= 3);\n          } else {\n            userInput = c.login.username\n              .trim()\n              .toLowerCase()\n              .split(/[^A-Za-z0-9]/)\n              .filter((i) => i.length >= 3);\n          }\n        }\n        const result = this.passwordGenerationService.passwordStrength(\n          c.login.password,\n          userInput.length > 0 ? userInput : null\n        );\n        this.passwordStrengthCache.set(cacheKey, result.score);\n      }\n      const score = this.passwordStrengthCache.get(cacheKey);\n      if (score != null && score <= 2) {\n        this.passwordStrengthMap.set(c.id, this.scoreKey(score));\n        weakPasswordCiphers.push(c);\n      }\n    });\n    weakPasswordCiphers.sort((a, b) => {\n      return (\n        this.passwordStrengthCache.get(getCacheKey(a)) -\n        this.passwordStrengthCache.get(getCacheKey(b))\n      );\n    });\n    this.ciphers = weakPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n\n  private scoreKey(score: number): [string, string] {\n    switch (score) {\n      case 4:\n        return [\"strong\", \"success\"];\n      case 3:\n        return [\"good\", \"primary\"];\n      case 2:\n        return [\"weak\", \"warning\"];\n      default:\n        return [\"veryWeak\", \"danger\"];\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { WeakPasswordsReportComponent as BaseWeakPasswordsReportComponent } from \"../../reports/pages/weak-passwords-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"../../reports/pages/weak-passwords-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class WeakPasswordsReportComponent extends BaseWeakPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      passwordGenerationService,\n      modalService,\n      messagingService,\n      stateService,\n      passwordRepromptService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { GetOrgNameFromIdPipe } from \"./get-organization-name.pipe\";\n\n@NgModule({\n  declarations: [GetOrgNameFromIdPipe],\n  exports: [GetOrgNameFromIdPipe],\n})\nexport class PipesModule {}\n","import { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\n\nexport class VaultService {\n  calculateSearchBarLocalizationString(vaultFilter: VaultFilter): string {\n    if (vaultFilter.status === \"favorites\") {\n      return \"searchFavorites\";\n    }\n    if (vaultFilter.status === \"trash\") {\n      return \"searchTrash\";\n    }\n    if (vaultFilter.cipherType != null) {\n      return \"searchType\";\n    }\n    if (vaultFilter.selectedFolderId != null && vaultFilter.selectedFolderId != \"none\") {\n      return \"searchFolder\";\n    }\n    if (vaultFilter.selectedCollection) {\n      return \"searchCollection\";\n    }\n    if (vaultFilter.selectedOrganizationId != null) {\n      return \"searchOrganization\";\n    }\n    if (vaultFilter.myVaultOnly) {\n      return \"searchMyVault\";\n    }\n\n    return \"searchVault\";\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\nimport { LooseComponentsModule } from \"../../shared/loose-components.module\";\nimport { VaultFilterModule } from \"../vault-filter/vault-filter.module\";\n\nimport { PipesModule } from \"./pipes/pipes.module\";\nimport { VaultService } from \"./vault.service\";\n\n@NgModule({\n  imports: [SharedModule, VaultFilterModule, LooseComponentsModule, PipesModule],\n  exports: [SharedModule, VaultFilterModule, LooseComponentsModule, PipesModule],\n  providers: [\n    {\n      provide: VaultService,\n      useClass: VaultService,\n    },\n  ],\n})\nexport class VaultSharedModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { VaultFilterSharedModule } from \"../../../vault/vault-filter/shared/vault-filter-shared.module\";\n\nimport { VaultFilterComponent } from \"./vault-filter.component\";\n\n@NgModule({\n  imports: [VaultFilterSharedModule],\n  declarations: [VaultFilterComponent],\n  exports: [VaultFilterComponent],\n})\nexport class VaultFilterModule {}\n","import { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherStatus } from \"./cipher-status.model\";\n\nexport type VaultFilterFunction = (cipher: CipherView) => boolean;\n\nexport class VaultFilter {\n  cipherType?: CipherType;\n  selectedCollection = false; // This is needed because of how the \"Unassigned\" collection works. It has a null id.\n  selectedCollectionId?: string;\n  status?: CipherStatus;\n  selectedFolder = false; // This is needed because of how the \"No Folder\" folder works. It has a null id.\n  selectedFolderId?: string;\n  selectedOrganizationId?: string;\n  myVaultOnly = false;\n  refreshCollectionsAndFolders = false;\n\n  constructor(init?: Partial<VaultFilter>) {\n    Object.assign(this, init);\n  }\n\n  resetFilter() {\n    this.cipherType = null;\n    this.status = null;\n    this.selectedCollection = false;\n    this.selectedCollectionId = null;\n    this.selectedFolder = false;\n    this.selectedFolderId = null;\n  }\n\n  resetOrganization() {\n    this.myVaultOnly = false;\n    this.selectedOrganizationId = null;\n    this.resetFilter();\n  }\n\n  buildFilter(): VaultFilterFunction {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.status === \"favorites\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.favorite;\n      }\n      if (this.status === \"trash\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.cipherType != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.cipherType;\n      }\n      if (this.selectedFolder && this.selectedFolderId == null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId == null;\n      }\n      if (this.selectedFolder && this.selectedFolderId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId === this.selectedFolderId;\n      }\n      if (this.selectedCollection && this.selectedCollectionId == null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.organizationId != null &&\n          (cipher.collectionIds == null || cipher.collectionIds.length === 0);\n      }\n      if (this.selectedCollection && this.selectedCollectionId != null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.collectionIds != null && cipher.collectionIds.includes(this.selectedCollectionId);\n      }\n      if (this.selectedOrganizationId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === this.selectedOrganizationId;\n      }\n      if (this.myVaultOnly && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === null;\n      }\n      return cipherPassesFilter;\n    };\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n      this.fileDownloadService.download({\n        fileName: attachment.fileName,\n        blobData: decBuf,\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const encBuf = await EncArrayBuffer.fromResponse(response);\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"attachmentsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"attachmentsTitle\">\n          {{ \"attachments\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <table class=\"table table-hover table-list\" *ngIf=\"cipher && cipher.hasAttachments\">\n          <tbody>\n            <tr *ngFor=\"let a of cipher.attachments\">\n              <td class=\"table-list-icon\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"!a.downloading\" aria-hidden=\"true\"></i>\n                <i\n                  class=\"bwi bwi-spinner bwi-lg bwi-fw bwi-spin\"\n                  *ngIf=\"a.downloading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </td>\n              <td class=\"wrap\">\n                <div class=\"d-flex\">\n                  <a href=\"#\" appStopClick (click)=\"download(a)\">{{ a.fileName }}</a>\n                  <div *ngIf=\"showFixOldAttachments(a)\" class=\"ml-2\">\n                    <a\n                      href=\"https://bitwarden.com/help/attachments/#fixing-old-attachments\"\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      <i\n                        class=\"bwi bwi-exclamation-triangle text-warning\"\n                        title=\"{{ 'attachmentFixDesc' | i18n }}\"\n                        aria-hidden=\"true\"\n                      ></i>\n                      <span class=\"sr-only\">{{ \"attachmentFixDesc\" | i18n }}</span></a\n                    >\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-primary btn-sm m-0 py-0 px-2\"\n                      (click)=\"reupload(a)\"\n                      #reuploadBtn\n                      [appApiAction]=\"reuploadPromises[a.id]\"\n                      [disabled]=\"reuploadBtn.loading\"\n                    >\n                      {{ \"fix\" | i18n }}\n                    </button>\n                  </div>\n                </div>\n                <small>{{ a.sizeName }}</small>\n              </td>\n              <td class=\"table-list-options\" *ngIf=\"!viewOnly\">\n                <button\n                  class=\"btn btn-outline-danger\"\n                  type=\"button\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'delete' | i18n }}\"\n                  (click)=\"delete(a)\"\n                  #deleteBtn\n                  [appApiAction]=\"deletePromises[a.id]\"\n                  [disabled]=\"deleteBtn.loading\"\n                >\n                  <i\n                    class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                    [hidden]=\"deleteBtn.loading\"\n                    aria-hidden=\"true\"\n                  ></i>\n                  <i\n                    class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                    [hidden]=\"!deleteBtn.loading\"\n                    title=\"{{ 'loading' | i18n }}\"\n                    aria-hidden=\"true\"\n                  ></i>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div *ngIf=\"!viewOnly\">\n          <h3>{{ \"newAttachment\" | i18n }}</h3>\n          <label for=\"file\" class=\"sr-only\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n          <small class=\"form-text text-muted\">{{ \"maxFileSize\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.showFixOldAttachments(attachment)) {\n      await this.reuploadCipherAttachment(attachment, false);\n    }\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.cipher.organizationId == null;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"../../vault/attachments.component\";\n\n@Component({\n  selector: \"app-org-vault-attachments\",\n  templateUrl: \"../../vault/attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n  organization: Organization;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      stateService,\n      platformUtilsService,\n      apiService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.organization.canEditAnyCollection && this.showFixOldAttachments(attachment)) {\n      await super.reuploadCipherAttachment(attachment, true);\n    }\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(\n      this.cipherDomain,\n      file,\n      this.organization.canEditAnyCollection\n    );\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipherAttachment(attachmentId);\n    }\n    return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.organization.canEditAnyCollection;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Directive()\nexport class CiphersComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchText: string;\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"ellipsis\",\n})\nexport class EllipsisPipe implements PipeTransform {\n  transform(value: string, limit = 25, completeWords = false, ellipsis = \"...\") {\n    if (value.length <= limit) {\n      return value;\n    }\n    limit -= ellipsis.length;\n    if (completeWords && value.length > limit && value.indexOf(\" \") > 0) {\n      limit = value.substring(0, limit).lastIndexOf(\" \");\n    }\n    return value.substring(0, limit) + ellipsis;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-org-badge\",\n  templateUrl: \"organization-name-badge.component.html\",\n})\nexport class OrganizationNameBadgeComponent implements OnInit {\n  @Input() organizationName: string;\n  @Input() profileName: string;\n\n  @Output() onOrganizationClicked = new EventEmitter<string>();\n\n  color: string;\n  textColor: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit(): void {\n    if (this.organizationName == null || this.organizationName === \"\") {\n      this.organizationName = this.i18nService.t(\"me\");\n      this.color = Utils.stringToColor(this.profileName.toUpperCase());\n    }\n    if (this.color == null) {\n      this.color = Utils.stringToColor(this.organizationName.toUpperCase());\n    }\n    this.textColor = Utils.pickTextColorBasedOnBgColor(this.color);\n  }\n\n  emitOnOrganizationClicked() {\n    this.onOrganizationClicked.emit();\n  }\n}\n","<button\n  bitBadge\n  [style.color]=\"textColor\"\n  [style.background-color]=\"color\"\n  appA11yTitle=\"{{ organizationName }}\"\n  (click)=\"emitOnOrganizationClicked()\"\n>\n  {{ organizationName | ellipsis: 13 }}\n</button>\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Pipe({\n  name: \"orgNameFromId\",\n  pure: true,\n})\nexport class GetOrgNameFromIdPipe implements PipeTransform {\n  transform(value: string, organizations: Organization[]) {\n    const orgName = organizations.find((o) => o.id === value)?.name;\n    return orgName;\n  }\n}\n","<ng-container *ngIf=\"isPaging() ? pagedCiphers : ciphers as filteredCiphers\">\n  <table\n    class=\"table table-hover table-list table-ciphers\"\n    *ngIf=\"filteredCiphers.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of filteredCiphers\">\n        <td (click)=\"checkCipher(c)\" class=\"table-list-checkbox\">\n          <input type=\"checkbox\" [(ngModel)]=\"c.checked\" appStopProp />\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"table-list-icon\">\n          <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"reduced-lh wrap\">\n          <a\n            appStopProp\n            [routerLink]=\"[]\"\n            [queryParams]=\"{ itemId: c.id }\"\n            queryParamsHandling=\"merge\"\n            title=\"{{ 'editItem' | i18n }}\"\n            >{{ c.name }}</a\n          >\n          <ng-container *ngIf=\"c.hasAttachments\">\n            <i\n              class=\"bwi bwi-paperclip\"\n              appStopProp\n              title=\"{{ 'attachments' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            <ng-container *ngIf=\"showFixOldAttachments(c)\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-warning\"\n                appStopProp\n                title=\"{{ 'attachmentsNeedFix' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachmentsNeedFix\" | i18n }}</span>\n            </ng-container>\n          </ng-container>\n          <br />\n          <small appStopProp>{{ c.subTitle }}</small>\n        </td>\n        <td *ngIf=\"organizations.length > 0 && !organization\" class=\"tw-w-28\">\n          <app-org-badge\n            organizationName=\"{{ c.organizationId | orgNameFromId: organizations }}\"\n            profileName=\"{{ profileName }}\"\n            (onOrganizationClicked)=\"onOrganizationClicked(c.organizationId)\"\n          >\n          </app-org-badge>\n        </td>\n        <td class=\"table-list-options\">\n          <button\n            [bitMenuTriggerFor]=\"cipherOptions\"\n            class=\"tw-border-none tw-bg-transparent tw-text-main\"\n            type=\"button\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n          >\n            <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <bit-menu #cipherOptions>\n            <ng-container *ngIf=\"c.type === cipherType.Login && !c.isDeleted\">\n              <button bitMenuItem (click)=\"copy(c, c.login.username, 'username', 'Username')\">\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyUsername\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.password, 'password', 'Password')\"\n                *ngIf=\"c.viewPassword\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyPassword\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.totp, 'verificationCodeTotp', 'TOTP')\"\n                *ngIf=\"displayTotpCopyButton(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyVerificationCode\" | i18n }}\n              </button>\n              <button bitMenuItem *ngIf=\"c.login.canLaunch\" (click)=\"launch(c.login.launchUri)\">\n                <i class=\"bwi bwi-fw bwi-share-square\" aria-hidden=\"true\"></i>\n                {{ \"launch\" | i18n }}\n              </button>\n            </ng-container>\n            <button bitMenuItem (click)=\"attachments(c)\">\n              <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n              {{ \"attachments\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"((!organization && !c.organizationId) || organization) && !c.isDeleted\"\n              (click)=\"clone(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-files\" aria-hidden=\"true\"></i>\n              {{ \"clone\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"!organization && !c.organizationId && !c.isDeleted\"\n              (click)=\"share(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n              {{ \"moveToOrganization\" | i18n }}\n            </button>\n            <button bitMenuItem *ngIf=\"c.organizationId && !c.isDeleted\" (click)=\"collections(c)\">\n              <i class=\"bwi bwi-fw bwi-collection\" aria-hidden=\"true\"></i>\n              {{ \"collections\" | i18n }}\n            </button>\n            <button bitMenuItem *ngIf=\"c.organizationId && accessEvents\" (click)=\"events(c)\">\n              <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n              {{ \"eventLogs\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"restore(c)\" *ngIf=\"c.isDeleted\">\n              <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n              {{ \"restore\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"delete(c)\">\n              <span class=\"tw-text-danger\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ (c.isDeleted ? \"permanentlyDelete\" : \"delete\") | i18n }}\n              </span>\n            </button>\n          </bit-menu>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div class=\"no-items\" *ngIf=\"!filteredCiphers.length\">\n    <ng-container *ngIf=\"!loaded\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </ng-container>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button (click)=\"addCipher()\" class=\"btn btn-outline-primary\" *ngIf=\"showAddNew\">\n        <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n</ng-container>\n","import { Component, EventEmitter, Input, OnDestroy, Output } from \"@angular/core\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"@bitwarden/angular/components/ciphers.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nconst MaxCheckedCount = 500;\n\n@Component({\n  selector: \"app-vault-ciphers\",\n  templateUrl: \"ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnDestroy {\n  @Input() showAddNew = true;\n  @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\n  @Output() onShareClicked = new EventEmitter<CipherView>();\n  @Output() onCollectionsClicked = new EventEmitter<CipherView>();\n  @Output() onCloneClicked = new EventEmitter<CipherView>();\n  @Output() onOrganzationBadgeClicked = new EventEmitter<string>();\n\n  pagedCiphers: CipherView[] = [];\n  pageSize = 200;\n  cipherType = CipherType;\n  actionPromise: Promise<any>;\n  userHasPremiumAccess = false;\n  organizations: Organization[] = [];\n  profileName: string;\n\n  private didScroll = false;\n  private pagedCiphersCount = 0;\n  private refreshing = false;\n\n  constructor(\n    searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cipherService: CipherService,\n    protected eventService: EventService,\n    protected totpService: TotpService,\n    protected stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private tokenService: TokenService\n  ) {\n    super(searchService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  // load() is called after the page loads and the first sync has completed.\n  // Do not use ngOnInit() for anything that requires sync data.\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    await super.load(filter, deleted);\n    this.profileName = await this.tokenService.getName();\n    this.organizations = await this.organizationService.getAll();\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  loadMore() {\n    if (this.ciphers.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCiphers.length;\n    let pagedSize = this.pageSize;\n    if (this.refreshing && pagedLength === 0 && this.pagedCiphersCount > this.pageSize) {\n      pagedSize = this.pagedCiphersCount;\n    }\n    if (this.ciphers.length > pagedLength) {\n      this.pagedCiphers = this.pagedCiphers.concat(\n        this.ciphers.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCiphersCount = this.pagedCiphers.length;\n    this.didScroll = this.pagedCiphers.length > this.pageSize;\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter, this.deleted);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.ciphers.length > this.pageSize;\n  }\n\n  async resetPaging() {\n    this.pagedCiphers = [];\n    this.loadMore();\n  }\n\n  async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n    this.resetPaging();\n  }\n\n  launch(uri: string) {\n    this.platformUtilsService.launchUri(uri);\n  }\n\n  async attachments(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onAttachmentsClicked.emit(c);\n  }\n\n  async share(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onShareClicked.emit(c);\n  }\n\n  collections(c: CipherView) {\n    this.onCollectionsClicked.emit(c);\n  }\n\n  async clone(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onCloneClicked.emit(c);\n  }\n\n  async delete(c: CipherView): Promise<boolean> {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    if (this.actionPromise != null) {\n      return;\n    }\n    const permanent = c.isDeleted;\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        permanent ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(permanent ? \"permanentlyDeleteItem\" : \"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.deleteCipher(c.id, permanent);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(permanent ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async restore(c: CipherView): Promise<boolean> {\n    if (this.actionPromise != null || !c.isDeleted) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.cipherService.restoreWithServer(c.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.repromptCipher(cipher))\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (value === cipher.login.totp) {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n    const selectCount =\n      select && this.ciphers.length > MaxCheckedCount ? MaxCheckedCount : this.ciphers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkCipher(this.ciphers[i], select);\n    }\n  }\n\n  checkCipher(c: CipherView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  getSelected(): CipherView[] {\n    if (this.ciphers == null) {\n      return [];\n    }\n    return this.ciphers.filter((c) => !!(c as any).checked);\n  }\n\n  getSelectedIds(): string[] {\n    return this.getSelected().map((c) => c.id);\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (await this.repromptCipher(cipher)) {\n      super.selectCipher(cipher);\n    }\n  }\n\n  onOrganizationClicked(organizationId: string) {\n    this.onOrganzationBadgeClicked.emit(organizationId);\n  }\n\n  protected deleteCipher(id: string, permanent: boolean) {\n    return permanent\n      ? this.cipherService.deleteWithServer(id)\n      : this.cipherService.softDeleteWithServer(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return c.hasOldAttachments && c.organizationId == null;\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"../../vault/ciphers.component\";\n\n@Component({\n  selector: \"app-org-vault-ciphers\",\n  templateUrl: \"../../vault/ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent {\n  @Output() onEventsClicked = new EventEmitter<CipherView>();\n\n  organization: Organization;\n  accessEvents = false;\n\n  protected allCiphers: CipherView[] = [];\n\n  constructor(\n    searchService: SearchService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cipherService: CipherService,\n    eventService: EventService,\n    totpService: TotpService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService,\n    stateService: StateService,\n    organizationService: OrganizationService,\n    tokenService: TokenService,\n    private apiService: ApiService\n  ) {\n    super(\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cipherService,\n      eventService,\n      totpService,\n      stateService,\n      passwordRepromptService,\n      logService,\n      organizationService,\n      tokenService\n    );\n  }\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    if (this.organization.canEditAnyCollection) {\n      this.accessEvents = this.organization.useEvents;\n      this.allCiphers = await this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    } else {\n      this.allCiphers = (await this.cipherService.getAllDecrypted()).filter(\n        (c) => c.organizationId === this.organization.id\n      );\n    }\n    await this.searchService.indexCiphers(this.organization.id, this.allCiphers);\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    if (this.organization.canViewAllCollections) {\n      await super.applyFilter(filter);\n    } else {\n      const f = (c: CipherView) =>\n        c.organizationId === this.organization.id && (filter == null || filter(c));\n      await super.applyFilter(f);\n    }\n  }\n\n  async search(timeout: number = null) {\n    await super.search(timeout, this.allCiphers);\n  }\n  events(c: CipherView) {\n    this.onEventsClicked.emit(c);\n  }\n\n  protected deleteCipher(id: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher(id, this.deleted);\n    }\n    return this.deleted\n      ? this.apiService.deleteCipherAdmin(id)\n      : this.apiService.putDeleteCipherAdmin(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return this.organization.canEditAnyCollection && c.hasOldAttachments;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"collectionsTitle\">\n          {{ \"collections\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"collectionsDesc\" | i18n }}</p>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"@bitwarden/angular/components/collections.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherCollectionsRequest } from \"@bitwarden/common/models/request/cipherCollectionsRequest\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"../../vault/collections.component\";\n\n@Component({\n  selector: \"app-org-vault-collections\",\n  templateUrl: \"../../vault/collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  organization: Organization;\n\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private apiService: ApiService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n    this.allowSelectNone = true;\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canViewAllCollections) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected loadCipherCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCipherCollections();\n    }\n    return this.collectionIds;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected saveCollections() {\n    if (this.organization.canEditAnyCollection) {\n      const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\n      return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\n    } else {\n      return super.saveCollections();\n    }\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, Observable } from \"rxjs\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\nimport { VaultFilterService } from \"../services/vault-filter.service\";\n\n@Directive()\nexport class VaultFilterComponent implements OnInit {\n  @Input() activeFilter: VaultFilter = new VaultFilter();\n  @Input() hideFolders = false;\n  @Input() hideCollections = false;\n  @Input() hideFavorites = false;\n  @Input() hideTrash = false;\n  @Input() hideOrganizations = false;\n\n  @Output() onFilterChange = new EventEmitter<VaultFilter>();\n  @Output() onAddFolder = new EventEmitter<never>();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n\n  isLoaded = false;\n  collapsedFilterNodes: Set<string>;\n  organizations: Organization[];\n  activePersonalOwnershipPolicy: boolean;\n  activeSingleOrganizationPolicy: boolean;\n  collections: DynamicTreeNode<CollectionView>;\n  folders$: Observable<DynamicTreeNode<FolderView>>;\n\n  constructor(protected vaultFilterService: VaultFilterService) {}\n\n  get displayCollections() {\n    return this.collections?.fullList != null && this.collections.fullList.length > 0;\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.collapsedFilterNodes = await this.vaultFilterService.buildCollapsedFilterNodes();\n    this.organizations = await this.vaultFilterService.buildOrganizations();\n    if (this.organizations != null && this.organizations.length > 0) {\n      this.activePersonalOwnershipPolicy =\n        await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n      this.activeSingleOrganizationPolicy =\n        await this.vaultFilterService.checkForSingleOrganizationPolicy();\n    }\n    this.folders$ = await this.vaultFilterService.buildNestedFolders();\n    this.collections = await this.initCollections();\n    this.isLoaded = true;\n  }\n\n  // overwritten in web for organization vaults\n  async initCollections() {\n    return await this.vaultFilterService.buildCollections();\n  }\n\n  async toggleFilterNodeCollapseState(node: ITreeNodeObject) {\n    if (this.collapsedFilterNodes.has(node.id)) {\n      this.collapsedFilterNodes.delete(node.id);\n    } else {\n      this.collapsedFilterNodes.add(node.id);\n    }\n    await this.vaultFilterService.storeCollapsedFilterNodes(this.collapsedFilterNodes);\n  }\n\n  async applyFilter(filter: VaultFilter) {\n    if (filter.refreshCollectionsAndFolders) {\n      await this.reloadCollectionsAndFolders(filter);\n      filter = await this.pruneInvalidatedFilterSelections(filter);\n    }\n    this.onFilterChange.emit(filter);\n  }\n\n  async reloadCollectionsAndFolders(filter: VaultFilter) {\n    this.folders$ = await this.vaultFilterService.buildNestedFolders(filter.selectedOrganizationId);\n    this.collections = filter.myVaultOnly\n      ? null\n      : await this.vaultFilterService.buildCollections(filter.selectedOrganizationId);\n  }\n\n  async reloadOrganizations() {\n    this.organizations = await this.vaultFilterService.buildOrganizations();\n    this.activePersonalOwnershipPolicy =\n      await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n    this.activeSingleOrganizationPolicy =\n      await this.vaultFilterService.checkForSingleOrganizationPolicy();\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  protected async pruneInvalidatedFilterSelections(filter: VaultFilter): Promise<VaultFilter> {\n    filter = await this.pruneInvalidFolderSelection(filter);\n    filter = this.pruneInvalidCollectionSelection(filter);\n    return filter;\n  }\n\n  protected async pruneInvalidFolderSelection(filter: VaultFilter): Promise<VaultFilter> {\n    if (\n      filter.selectedFolder &&\n      !(await firstValueFrom(this.folders$))?.hasId(filter.selectedFolderId)\n    ) {\n      filter.selectedFolder = false;\n      filter.selectedFolderId = null;\n    }\n    return filter;\n  }\n\n  protected pruneInvalidCollectionSelection(filter: VaultFilter): VaultFilter {\n    if (\n      filter.myVaultOnly ||\n      (filter.selectedCollection &&\n        filter.selectedCollectionId != null &&\n        !this.collections?.hasId(filter.selectedCollectionId))\n    ) {\n      filter.selectedCollection = false;\n      filter.selectedCollectionId = null;\n    }\n    return filter;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class CollectionFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() collectionNodes: DynamicTreeNode<CollectionView>;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  readonly collectionsGrouping: TopLevelTreeNode = {\n    id: \"collections\",\n    name: \"collections\",\n  };\n\n  get collections() {\n    return this.collectionNodes?.fullList;\n  }\n\n  get nestedCollections() {\n    return this.collectionNodes?.nestedList;\n  }\n\n  get show() {\n    return !this.hide && this.collections != null && this.collections.length > 0;\n  }\n\n  isCollapsed(node: ITreeNodeObject) {\n    return this.collapsedFilterNodes.has(node.id);\n  }\n\n  applyFilter(collection: CollectionView) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.selectedCollection = true;\n    this.activeFilter.selectedCollectionId = collection.id;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  async toggleCollapse(node: ITreeNodeObject) {\n    this.onNodeCollapseStateChange.emit(node);\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <div class=\"filter-heading\">\n    <button\n      (click)=\"toggleCollapse(collectionsGrouping)\"\n      [attr.aria-expanded]=\"!isCollapsed(collectionsGrouping)\"\n      aria-controls=\"collection-filters\"\n      title=\"{{ 'toggleCollapse' | i18n }}\"\n      class=\"toggle-button\"\n    >\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-angle-right': isCollapsed(collectionsGrouping),\n          'bwi-angle-down': !isCollapsed(collectionsGrouping)\n        }\"\n        aria-hidden=\"true\"\n      ></i>\n    </button>\n    <h3 class=\"filter-title\">&nbsp;{{ collectionsGrouping.name | i18n }}</h3>\n  </div>\n  <ul id=\"collection-filters\" *ngIf=\"!isCollapsed(collectionsGrouping)\" class=\"filter-options\">\n    <ng-template #recursiveCollections let-collections>\n      <li\n        *ngFor=\"let c of collections\"\n        [ngClass]=\"{\n          active: c.node.id === activeFilter.selectedCollectionId && activeFilter.selectedCollection\n        }\"\n        class=\"filter-option\"\n      >\n        <span class=\"filter-buttons\">\n          <button\n            class=\"toggle-button\"\n            *ngIf=\"c.children.length\"\n            (click)=\"toggleCollapse(c.node)\"\n            title=\"{{ 'toggleCollapse' | i18n }}\"\n            [attr.aria-expanded]=\"!isCollapsed(c.node)\"\n            [attr.aria-controls]=\"c.node.name + '_children'\"\n          >\n            <i\n              class=\"bwi bwi-fw\"\n              [ngClass]=\"{\n                'bwi-angle-right': isCollapsed(c.node),\n                'bwi-angle-down': !isCollapsed(c.node)\n              }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button class=\"filter-button\" (click)=\"applyFilter(c.node)\">\n            <i\n              *ngIf=\"c.children.length === 0\"\n              class=\"bwi bwi-collection bwi-fw\"\n              aria-hidden=\"true\"\n            ></i\n            >&nbsp;{{ c.node.name }}\n          </button>\n        </span>\n        <ul\n          [id]=\"c.node.name + '_children'\"\n          class=\"nested-filter-options\"\n          *ngIf=\"c.children.length && !isCollapsed(c.node)\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: c.children }\"\n          >\n          </ng-container>\n        </ul>\n      </li>\n    </ng-template>\n    <ng-container\n      *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: nestedCollections }\"\n    >\n    </ng-container>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { CollectionFilterComponent as BaseCollectionFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/collection-filter.component\";\n\n@Component({\n  selector: \"app-collection-filter\",\n  templateUrl: \"collection-filter.component.html\",\n})\nexport class CollectionFilterComponent extends BaseCollectionFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class FolderFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() folderNodes: DynamicTreeNode<FolderView>;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n  @Output() onAddFolder = new EventEmitter();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n\n  get folders() {\n    return this.folderNodes?.fullList;\n  }\n\n  get nestedFolders() {\n    return this.folderNodes?.nestedList;\n  }\n\n  readonly foldersGrouping: TopLevelTreeNode = {\n    id: \"folders\",\n    name: \"folders\",\n  };\n\n  applyFilter(folder: FolderView) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.selectedFolder = true;\n    this.activeFilter.selectedFolderId = folder.id;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  isCollapsed(node: ITreeNodeObject) {\n    return this.collapsedFilterNodes.has(node.id);\n  }\n\n  async toggleCollapse(node: ITreeNodeObject) {\n    this.onNodeCollapseStateChange.emit(node);\n  }\n}\n","<ng-container *ngIf=\"!hide\">\n  <div class=\"filter-heading\">\n    <button\n      class=\"toggle-button\"\n      (click)=\"toggleCollapse(foldersGrouping)\"\n      [attr.aria-expanded]=\"!isCollapsed(foldersGrouping)\"\n      aria-controls=\"folder-filters\"\n      title=\"{{ 'toggleCollapse' | i18n }}\"\n    >\n      <i\n        class=\"bwi bwi-fw\"\n        aria-hidden=\"true\"\n        [ngClass]=\"{\n          'bwi-angle-right': isCollapsed(foldersGrouping),\n          'bwi-angle-down': !isCollapsed(foldersGrouping)\n        }\"\n      ></i>\n    </button>\n    <h3 class=\"filter-title\">&nbsp;{{ \"folders\" | i18n }}</h3>\n    <button\n      class=\"text-muted ml-auto add-button\"\n      (click)=\"addFolder()\"\n      appA11yTitle=\"{{ 'addFolder' | i18n }}\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n  <ul id=\"folder-filters\" *ngIf=\"!isCollapsed(foldersGrouping)\" class=\"filter-options\">\n    <ng-template #recursiveFolders let-folders>\n      <li\n        *ngFor=\"let f of folders\"\n        [ngClass]=\"{\n          active: f.node.id === activeFilter.selectedFolderId && activeFilter.selectedFolder\n        }\"\n        class=\"filter-option\"\n      >\n        <span class=\"filter-buttons\">\n          <button\n            *ngIf=\"f.children.length\"\n            title=\"{{ 'toggleCollapse' | i18n }}\"\n            (click)=\"toggleCollapse(f.node)\"\n            [attr.aria-expanded]=\"!isCollapsed(f.node)\"\n            [attr.aria-controls]=\"f.node.name + '_children'\"\n            class=\"toggle-button\"\n          >\n            <i\n              class=\"bwi bwi-fw\"\n              [ngClass]=\"{\n                'bwi-angle-right': isCollapsed(f.node),\n                'bwi-angle-down': !isCollapsed(f.node)\n              }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button class=\"filter-button\" (click)=\"applyFilter(f.node)\">\n            <i *ngIf=\"f.children.length === 0\" class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i\n            >&nbsp;{{ f.node.name }}\n          </button>\n          <button\n            class=\"edit-button\"\n            (click)=\"editFolder(f.node)\"\n            appA11yTitle=\"{{ 'editFolder' | i18n }}\"\n            *ngIf=\"f.node.id\"\n          >\n            <i class=\"bwi bwi-pencil bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </span>\n        <ul\n          [id]=\"f.node.name + '_children'\"\n          class=\"nested-filter-options\"\n          *ngIf=\"f.children.length && !isCollapsed(f.node)\"\n        >\n          <ng-container *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: f.children }\">\n          </ng-container>\n        </ul>\n      </li>\n    </ng-template>\n    <ng-container\n      *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: nestedFolders }\"\n    ></ng-container>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { FolderFilterComponent as BaseFolderFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/folder-filter.component\";\n\n@Component({\n  selector: \"app-folder-filter\",\n  templateUrl: \"folder-filter.component.html\",\n})\nexport class FolderFilterComponent extends BaseFolderFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherStatus } from \"../models/cipher-status.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class StatusFilterComponent {\n  @Input() hideFavorites = false;\n  @Input() hideTrash = false;\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n  @Input() activeFilter: VaultFilter;\n\n  get show() {\n    return !(this.hideFavorites && this.hideTrash);\n  }\n\n  applyFilter(cipherStatus: CipherStatus) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.status = cipherStatus;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <ul class=\"filter-options\">\n    <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.status === 'all' }\">\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('all')\">\n          <i class=\"bwi bwi-fw bwi-filter\" aria-hidden=\"true\"></i>&nbsp;{{ \"allItems\" | i18n }}\n        </button>\n      </span>\n    </li>\n    <li\n      *ngIf=\"!hideFavorites\"\n      class=\"filter-option\"\n      [ngClass]=\"{ active: activeFilter.status === 'favorites' }\"\n    >\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('favorites')\">\n          <i class=\"bwi bwi-fw bwi-star\" aria-hidden=\"true\"></i>&nbsp;{{ \"favorites\" | i18n }}\n        </button>\n      </span>\n    </li>\n    <li\n      *ngIf=\"!hideTrash\"\n      class=\"filter-option\"\n      [ngClass]=\"{ active: activeFilter.status === 'trash' }\"\n    >\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('trash')\">\n          <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>&nbsp;{{ \"trash\" | i18n }}\n        </button>\n      </span>\n    </li>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { StatusFilterComponent as BaseStatusFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/status-filter.component\";\n\n@Component({\n  selector: \"app-status-filter\",\n  templateUrl: \"status-filter.component.html\",\n})\nexport class StatusFilterComponent extends BaseStatusFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\n\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class TypeFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() selectedCipherType: CipherType = null;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  readonly typesNode: TopLevelTreeNode = {\n    id: \"types\",\n    name: \"types\",\n  };\n\n  cipherTypeEnum = CipherType; // used in the template\n\n  get isCollapsed() {\n    return this.collapsedFilterNodes.has(this.typesNode.id);\n  }\n\n  applyFilter(cipherType: CipherType) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.cipherType = cipherType;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  async toggleCollapse() {\n    this.onNodeCollapseStateChange.emit(this.typesNode);\n  }\n}\n","<div class=\"filter-heading\">\n  <button\n    class=\"toggle-button\"\n    [attr.aria-expanded]=\"!isCollapsed\"\n    aria-controls=\"type-filters\"\n    (click)=\"toggleCollapse()\"\n    title=\"{{ 'toggleCollapse' | i18n }}\"\n  >\n    <i\n      class=\"bwi bwi-fw\"\n      aria-hidden=\"true\"\n      [ngClass]=\"{\n        'bwi-angle-right': isCollapsed,\n        'bwi-angle-down': !isCollapsed\n      }\"\n    ></i>\n  </button>\n  <h3>&nbsp;{{ \"types\" | i18n }}</h3>\n</div>\n<ul id=\"type-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Login }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Login)\">\n        <i class=\"bwi bwi-fw bwi-globe\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeLogin\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Card }\">\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Card)\">\n        <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeCard\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Identity }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Identity)\">\n        <i class=\"bwi bwi-fw bwi-id-card\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeIdentity\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.SecureNote }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.SecureNote)\">\n        <i class=\"bwi bwi-fw bwi-sticky-note\" aria-hidden=\"true\"></i>&nbsp;{{\n          \"typeSecureNote\" | i18n\n        }}\n      </button>\n    </span>\n  </li>\n</ul>\n","import { Component } from \"@angular/core\";\n\nimport { TypeFilterComponent as BaseTypeFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/type-filter.component\";\n\n@Component({\n  selector: \"app-type-filter\",\n  templateUrl: \"type-filter.component.html\",\n})\nexport class TypeFilterComponent extends BaseTypeFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\n\nimport { DisplayMode } from \"../models/display-mode\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class OrganizationFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() organizations: Organization[];\n  @Input() activeFilter: VaultFilter;\n  @Input() activePersonalOwnershipPolicy: boolean;\n  @Input() activeSingleOrganizationPolicy: boolean;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  get displayMode(): DisplayMode {\n    let displayMode: DisplayMode = \"organizationMember\";\n    if (this.organizations == null || this.organizations.length < 1) {\n      displayMode = \"noOrganizations\";\n    } else if (this.activePersonalOwnershipPolicy && !this.activeSingleOrganizationPolicy) {\n      displayMode = \"personalOwnershipPolicy\";\n    } else if (!this.activePersonalOwnershipPolicy && this.activeSingleOrganizationPolicy) {\n      displayMode = \"singleOrganizationPolicy\";\n    } else if (this.activePersonalOwnershipPolicy && this.activeSingleOrganizationPolicy) {\n      displayMode = \"singleOrganizationAndPersonalOwnershipPolicies\";\n    }\n\n    return displayMode;\n  }\n\n  get hasActiveFilter() {\n    return this.activeFilter.myVaultOnly || this.activeFilter.selectedOrganizationId != null;\n  }\n\n  readonly organizationGrouping: TopLevelTreeNode = {\n    id: \"vaults\",\n    name: \"allVaults\",\n  };\n\n  async applyOrganizationFilter(organization: Organization) {\n    this.activeFilter.selectedOrganizationId = organization.id;\n    this.activeFilter.myVaultOnly = false;\n    this.activeFilter.refreshCollectionsAndFolders = true;\n    this.applyFilter(this.activeFilter);\n  }\n\n  async applyMyVaultFilter() {\n    this.activeFilter.selectedOrganizationId = null;\n    this.activeFilter.myVaultOnly = true;\n    this.activeFilter.refreshCollectionsAndFolders = true;\n    this.applyFilter(this.activeFilter);\n  }\n\n  clearFilter() {\n    this.activeFilter.myVaultOnly = false;\n    this.activeFilter.selectedOrganizationId = null;\n    this.applyFilter(new VaultFilter(this.activeFilter));\n  }\n\n  private applyFilter(filter: VaultFilter) {\n    this.onFilterChange.emit(filter);\n  }\n\n  async toggleCollapse() {\n    this.onNodeCollapseStateChange.emit(this.organizationGrouping);\n  }\n\n  get isCollapsed() {\n    return this.collapsedFilterNodes.has(this.organizationGrouping.id);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalConfig } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-enroll-master-password-reset\",\n  templateUrl: \"enroll-master-password-reset.component.html\",\n})\nexport class EnrollMasterPasswordReset {\n  organization: Organization;\n\n  verification: Verification;\n  formPromise: Promise<void>;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private modalRef: ModalRef,\n    config: ModalConfig,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    this.organization = config.data.organization;\n  }\n\n  async submit() {\n    let toastStringRef = \"withdrawPasswordResetSuccess\";\n\n    this.formPromise = this.userVerificationService\n      .buildRequest(this.verification, OrganizationUserResetPasswordEnrollmentRequest)\n      .then(async (request) => {\n        // Set variables\n        let keyString: string = null;\n\n        // Retrieve Public Key\n        const orgKeys = await this.organizationApiService.getKeys(this.organization.id);\n        if (orgKeys == null) {\n          throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n        }\n\n        const publicKey = Utils.fromB64ToArray(orgKeys.publicKey);\n\n        // RSA Encrypt user's encKey.key with organization public key\n        const encKey = await this.cryptoService.getEncKey();\n        const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n        keyString = encryptedKey.encryptedString;\n        toastStringRef = \"enrollPasswordResetSuccess\";\n\n        // Create request and execute enrollment\n        request.resetPasswordKey = keyString;\n        await this.apiService.putOrganizationUserResetPasswordEnrollment(\n          this.organization.id,\n          this.organization.userId,\n          request\n        );\n\n        await this.syncService.fullSync(true);\n      });\n    try {\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(toastStringRef));\n      this.modalRef.close();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div\n  class=\"modal fade\"\n  role=\"dialog\"\n  aria-modal=\"true\"\n  aria-labelledby=\"enrollMasterPasswordResetTitle\"\n>\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"enrollMasterPasswordResetTitle\">\n          {{ \"enrollPasswordReset\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">\n          {{ \"resetPasswordEnrollmentWarning\" | i18n }}\n        </app-callout>\n        <app-user-verification [(ngModel)]=\"verification\" name=\"secret\"> </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n          {{ \"submit\" | i18n }}\n        </button>\n        <button\n          bitButton\n          buttonType=\"secondary\"\n          type=\"button\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span>\n            {{ \"cancel\" | i18n }}\n          </span>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { AfterContentInit, Component, Input } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-link-sso\",\n  templateUrl: \"link-sso.component.html\",\n})\nexport class LinkSsoComponent extends SsoComponent implements AfterContentInit {\n  @Input() organization: Organization;\n  returnUri = \"/settings/organizations\";\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    authService: AuthService,\n    router: Router,\n    route: ActivatedRoute,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    this.returnUri = \"/settings/organizations\";\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngAfterContentInit() {\n    this.identifier = this.organization.identifier;\n  }\n}\n","<a\n  class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main tw-no-underline hover:tw-bg-secondary-100 hover:tw-no-underline focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n  href=\"#\"\n  appStopClick\n  (click)=\"submit(returnUri, true)\"\n>\n  <i class=\"bwi bwi-fw bwi-link\" aria-hidden=\"true\"></i>\n  {{ \"linkSso\" | i18n }}\n</a>\n","<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted tw-m-2\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<div\n  *ngIf=\"loaded\"\n  class=\"tw-flex tw-min-w-[200px] tw-max-w-[300px] tw-flex-col\"\n  [appApiAction]=\"actionPromise\"\n>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && !organization.resetPasswordEnrolled\"\n    class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n    {{ \"enrollPasswordReset\" | i18n }}\n  </button>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && organization.resetPasswordEnrolled\"\n    class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n    {{ \"withdrawPasswordReset\" | i18n }}\n  </button>\n  <ng-container *ngIf=\"organization.useSso && organization.identifier\">\n    <button\n      *ngIf=\"organization.ssoBound; else linkSso\"\n      class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n      (click)=\"unlinkSso(organization)\"\n    >\n      <i class=\"bwi bwi-fw bwi-chain-broken\" aria-hidden=\"true\"></i>\n      {{ \"unlinkSso\" | i18n }}\n    </button>\n    <ng-template #linkSso>\n      <app-link-sso [organization]=\"organization\"> </app-link-sso>\n    </ng-template>\n  </ng-container>\n  <button\n    class=\"text-danger tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"leave(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n    {{ \"leave\" | i18n }}\n  </button>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { map, Subject, takeUntil } from \"rxjs\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\n\nimport { EnrollMasterPasswordReset } from \"../../../organizations/users/enroll-master-password-reset.component\";\n\n@Component({\n  selector: \"app-organization-options\",\n  templateUrl: \"organization-options.component.html\",\n})\nexport class OrganizationOptionsComponent implements OnInit, OnDestroy {\n  actionPromise: Promise<void | boolean>;\n  policies: Policy[];\n  loaded = false;\n\n  @Input() organization: Organization;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private modalService: ModalService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.policyService.policies$\n      .pipe(\n        map((policies) => policies.filter((policy) => policy.type === PolicyType.ResetPassword)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((policies) => {\n        this.policies = policies;\n        this.loaded = true;\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  allowEnrollmentChanges(org: Organization): boolean {\n    if (org.usePolicies && org.useResetPassword && org.hasPublicAndPrivateKeys) {\n      const policy = this.policies.find((p) => p.organizationId === org.id);\n      if (policy != null && policy.enabled) {\n        return org.resetPasswordEnrolled && policy.data.autoEnrollEnabled ? false : true;\n      }\n    }\n\n    return false;\n  }\n\n  showEnrolledStatus(org: Organization): boolean {\n    return (\n      org.useResetPassword &&\n      org.resetPasswordEnrolled &&\n      this.policies.some((p) => p.organizationId === org.id && p.enabled)\n    );\n  }\n\n  async unlinkSso(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"unlinkSsoConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.apiService.deleteSsoUser(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, \"Unlinked SSO\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async leave(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.organizationApiService.leave(org.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async toggleResetPasswordEnrollment(org: Organization) {\n    if (!this.organization.resetPasswordEnrolled) {\n      this.modalService.open(EnrollMasterPasswordReset, {\n        allowMultipleModals: true,\n        data: {\n          organization: org,\n        },\n      });\n    } else {\n      // Remove reset password\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = \"ignored\";\n      request.resetPasswordKey = null;\n      this.actionPromise = this.apiService.putOrganizationUserResetPasswordEnrollment(\n        this.organization.id,\n        this.organization.userId,\n        request\n      );\n      try {\n        await this.actionPromise;\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"withdrawPasswordResetSuccess\")\n        );\n        this.syncService.fullSync(true);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n}\n","<ng-container *ngIf=\"!hide\">\n  <ng-container [ngSwitch]=\"displayMode\">\n    <ng-container *ngSwitchCase=\"'noOrganizations'\">\n      <ul class=\"filter-options\">\n        <li class=\"filter-option active\">\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              [attr.aria-pressed]=\"activeFilter.myVaultOnly\"\n              appA11yTitle=\"{{ 'vault' | i18n }}: {{ 'myVault' | i18n }}\"\n            >\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"myVault\" | i18n }}\n            </button>\n          </span>\n        </li>\n        <li class=\"filter-option\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'personalOwnershipPolicy'\">\n      <div class=\"filter-heading\">\n        <button\n          (click)=\"toggleCollapse()\"\n          title=\"{{ 'toggleCollapse' | i18n }}\"\n          class=\"toggle-button\"\n          [attr.aria-expanded]=\"!isCollapsed\"\n          aria-controls=\"organization-filters\"\n        >\n          <i\n            class=\"bwi bwi-fw\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-right': isCollapsed,\n              'bwi-angle-down': !isCollapsed\n            }\"\n          ></i>\n        </button>\n        <button\n          class=\"filter-button\"\n          (click)=\"clearFilter()\"\n          [ngClass]=\"{ active: !hasActiveFilter }\"\n          appA11yTitle=\"{{ 'vault' | i18n }}: {{ organizationGrouping.name | i18n }}\"\n        >\n          &nbsp;{{ organizationGrouping.name | i18n }}\n        </button>\n      </div>\n      <ul id=\"organization-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n        <li\n          class=\"filter-option\"\n          *ngFor=\"let organization of organizations\"\n          [ngClass]=\"{ active: organization.id === activeFilter.selectedOrganizationId }\"\n        >\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              (click)=\"applyOrganizationFilter(organization)\"\n              [attr.aria-pressed]=\"activeFilter.selectedOrganizationId === organization.id\"\n              appA11yTitle=\"{{ 'vault' | i18n }}: {{ organization.name }}\"\n            >\n              <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n              {{ organization.name }}\n            </button>\n            <ng-container *ngIf=\"organization.id === activeFilter.selectedOrganizationId\">\n              <button [bitMenuTriggerFor]=\"orgMenu\" class=\"org-options ml-auto\">\n                <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu class=\"filter-organization-options\" #orgMenu>\n                <app-organization-options [organization]=\"organization\"></app-organization-options>\n              </bit-menu>\n            </ng-container>\n          </span>\n        </li>\n        <li class=\"filter-option\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'singleOrganizationAndPersonalOwnershipPolicies'\">\n      <div class=\"filter-heading\">\n        <button\n          class=\"filter-button active\"\n          [attr.aria-pressed]=\"activeFilter.selectedOrganizationId === organizations[0].id\"\n          appA11yTitle=\"{{ 'vault' | i18n }}: {{ organizations[0].name }}\"\n        >\n          <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n          {{ organizations[0].name }}\n        </button>\n        <span class=\"tw-ml-auto\">\n          <button [bitMenuTriggerFor]=\"orgMenu\" class=\"org-options\">\n            <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n          </button>\n          <bit-menu class=\"filter-organization-options\" #orgMenu>\n            <app-organization-options [organization]=\"organizations[0]\"></app-organization-options>\n          </bit-menu>\n        </span>\n      </div>\n    </ng-container>\n    <ng-container *ngSwitchDefault>\n      <div class=\"filter-heading\">\n        <button\n          class=\"toggle-button\"\n          title=\"{{ 'toggleCollapse' | i18n }}\"\n          (click)=\"toggleCollapse()\"\n          [attr.aria-expanded]=\"!isCollapsed\"\n          aria-controls=\"organization-filters\"\n        >\n          <i\n            class=\"bwi bwi-fw\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-right': isCollapsed,\n              'bwi-angle-down': !isCollapsed\n            }\"\n          ></i>\n        </button>\n        <button\n          class=\"filter-button\"\n          (click)=\"clearFilter()\"\n          [ngClass]=\"{ active: !hasActiveFilter }\"\n          appA11yTitle=\"{{ 'vault' | i18n }}: {{ organizationGrouping.name | i18n }}\"\n        >\n          &nbsp;{{ organizationGrouping.name | i18n }}\n        </button>\n      </div>\n      <ul id=\"organization-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n        <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.myVaultOnly }\">\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              (click)=\"applyMyVaultFilter()\"\n              appA11yTitle=\"{{ 'vault' | i18n }}: {{ 'myVault' | i18n }}\"\n              [attr.aria-pressed]=\"activeFilter.myVaultOnly\"\n            >\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"myVault\" | i18n }}\n            </button>\n          </span>\n        </li>\n        <li\n          class=\"filter-option\"\n          *ngFor=\"let organization of organizations\"\n          [ngClass]=\"{ active: organization.id === activeFilter.selectedOrganizationId }\"\n        >\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              [ngClass]=\"{ 'disabled-organization': !organization.enabled }\"\n              (click)=\"applyOrganizationFilter(organization)\"\n              appA11yTitle=\"{{ 'vault' | i18n }}: {{ organization.name }}\"\n            >\n              <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n              {{ organization.name }}\n            </button>\n            <span class=\"ml-auto\">\n              <i\n                *ngIf=\"!organization.enabled\"\n                class=\"org-options bwi bwi-fw bwi-exclamation-triangle text-danger\"\n                aria-label=\"{{ 'organizationIsDisabled' | i18n }}\"\n                appA11yTitle=\"{{ 'organizationIsDisabled' | i18n }}\"\n              ></i\n              ><button [bitMenuTriggerFor]=\"orgMenu\" class=\"org-options\">\n                <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu class=\"filter-organization-options\" #orgMenu>\n                <app-organization-options [organization]=\"organization\"></app-organization-options>\n              </bit-menu>\n            </span>\n          </span>\n        </li>\n        <li class=\"filter-option\" *ngIf=\"!(displayMode === 'singleOrganizationPolicy')\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n  </ng-container>\n  <hr />\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { OrganizationFilterComponent as BaseOrganizationFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/organization-filter.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-filter\",\n  templateUrl: \"organization-filter.component.html\",\n})\nexport class OrganizationFilterComponent extends BaseOrganizationFilterComponent {\n  displayText = \"allVaults\";\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {\n    super();\n  }\n\n  async applyOrganizationFilter(organization: Organization) {\n    if (organization.enabled) {\n      //proceed with default behaviour for enabled organizations\n      super.applyOrganizationFilter(organization);\n    } else {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"disabledOrganizationFilterError\")\n      );\n    }\n  }\n}\n","<div class=\"card vault-filters\">\n  <div class=\"container loading-spinner\" *ngIf=\"!isLoaded\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n  </div>\n  <div *ngIf=\"isLoaded\">\n    <div class=\"card-header d-flex\">\n      {{ \"filters\" | i18n }}\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/searching-vault/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"card-body\">\n      <input\n        type=\"search\"\n        placeholder=\"{{ (searchPlaceholder | i18n) || ('searchVault' | i18n) }}\"\n        id=\"search\"\n        class=\"form-control\"\n        [(ngModel)]=\"searchText\"\n        (input)=\"searchTextChanged()\"\n        autocomplete=\"off\"\n        appAutofocus\n      />\n      <app-organization-filter\n        [hide]=\"hideOrganizations\"\n        [activeFilter]=\"activeFilter\"\n        [collapsedFilterNodes]=\"collapsedFilterNodes\"\n        [organizations]=\"organizations\"\n        [activePersonalOwnershipPolicy]=\"activePersonalOwnershipPolicy\"\n        [activeSingleOrganizationPolicy]=\"activeSingleOrganizationPolicy\"\n        (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n        (onFilterChange)=\"applyFilter($event)\"\n      ></app-organization-filter>\n      <div class=\"filter\">\n        <app-status-filter\n          [hideFavorites]=\"hideFavorites\"\n          [hideTrash]=\"hideTrash\"\n          [activeFilter]=\"activeFilter\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-status-filter>\n      </div>\n      <div class=\"filter\">\n        <app-type-filter\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-type-filter>\n      </div>\n      <div class=\"filter\">\n        <app-folder-filter\n          [hide]=\"hideFolders\"\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          [folderNodes]=\"folders$ | async\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n          (onAddFolder)=\"addFolder()\"\n          (onEditFolder)=\"editFolder($event)\"\n        ></app-folder-filter>\n      </div>\n      <div class=\"filter\">\n        <app-collection-filter\n          [hide]=\"hideCollections\"\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          [collectionNodes]=\"collections\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-collection-filter>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { VaultFilterComponent as BaseVaultFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/vault-filter.component\";\n\nimport { VaultFilterService } from \"./shared/vault-filter.service\";\n\n@Component({\n  selector: \"./app-vault-filter\",\n  templateUrl: \"vault-filter.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VaultFilterComponent extends BaseVaultFilterComponent {\n  @Output() onSearchTextChanged = new EventEmitter<string>();\n\n  searchPlaceholder: string;\n  searchText = \"\";\n\n  constructor(protected vaultFilterService: VaultFilterService) {\n    // This empty constructor is required to provide the web vaultFilterService subclass to super()\n    // TODO: refactor this to use proper dependency injection\n    super(vaultFilterService);\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.vaultFilterService.collapsedFilterNodes$.subscribe((nodes) => {\n      this.collapsedFilterNodes = nodes;\n    });\n  }\n\n  searchTextChanged() {\n    this.onSearchTextChanged.emit(this.searchText);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { VaultFilterComponent as BaseVaultFilterComponent } from \"../../../vault/vault-filter/vault-filter.component\";\n\n@Component({\n  selector: \"app-organization-vault-filter\",\n  templateUrl: \"../../../vault/vault-filter/vault-filter.component.html\",\n})\nexport class VaultFilterComponent extends BaseVaultFilterComponent {\n  hideOrganizations = true;\n  hideFavorites = true;\n  hideFolders = true;\n\n  organization: Organization;\n\n  async initCollections() {\n    if (this.organization.canEditAnyCollection) {\n      return await this.vaultFilterService.buildAdminCollections(this.organization.id);\n    }\n    return await this.vaultFilterService.buildCollections(this.organization.id);\n  }\n\n  async reloadCollectionsAndFolders() {\n    this.collections = await this.initCollections();\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherBulkDeleteRequest } from \"@bitwarden/common/models/request/cipherBulkDeleteRequest\";\n\n@Component({\n  selector: \"app-vault-bulk-delete\",\n  templateUrl: \"bulk-delete.component.html\",\n})\nexport class BulkDeleteComponent {\n  @Input() cipherIds: string[] = [];\n  @Input() permanent = false;\n  @Input() organization: Organization;\n  @Output() onDeleted = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  async submit() {\n    if (!this.organization || !this.organization.canEditAnyCollection) {\n      await this.deleteCiphers();\n    } else {\n      await this.deleteCiphersAdmin();\n    }\n\n    await this.formPromise;\n\n    this.onDeleted.emit();\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(this.permanent ? \"permanentlyDeletedItems\" : \"deletedItems\")\n    );\n  }\n\n  private async deleteCiphers() {\n    if (this.permanent) {\n      this.formPromise = await this.cipherService.deleteManyWithServer(this.cipherIds);\n    } else {\n      this.formPromise = await this.cipherService.softDeleteManyWithServer(this.cipherIds);\n    }\n  }\n\n  private async deleteCiphersAdmin() {\n    const deleteRequest = new CipherBulkDeleteRequest(this.cipherIds, this.organization.id);\n    if (this.permanent) {\n      this.formPromise = await this.apiService.deleteManyCiphersAdmin(deleteRequest);\n    } else {\n      this.formPromise = await this.apiService.putDeleteManyCiphersAdmin(deleteRequest);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deleteSelectedTitle\">\n          {{ (permanent ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{\n          (permanent ? \"permanentlyDeleteSelectedItemsDesc\" : \"deleteSelectedItemsDesc\")\n            | i18n: cipherIds.length\n        }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-danger btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (permanent ? \"permanentlyDelete\" : \"delete\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"moveSelectedTitle\">\n          {{ \"moveSelected\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveSelectedItemsDesc\" | i18n: cipherIds.length }}</p>\n        <div class=\"form-group\">\n          <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n          <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"folderId\" class=\"form-control\">\n            <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\n@Component({\n  selector: \"app-vault-bulk-move\",\n  templateUrl: \"bulk-move.component.html\",\n})\nexport class BulkMoveComponent implements OnInit {\n  @Input() cipherIds: string[] = [];\n  @Output() onMoved = new EventEmitter();\n\n  folderId: string = null;\n  folders$: Observable<FolderView[]>;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService\n  ) {}\n\n  async ngOnInit() {\n    this.folders$ = this.folderService.folderViews$;\n    this.folderId = (await firstValueFrom(this.folders$))[0].id;\n  }\n\n  async submit() {\n    this.formPromise = this.cipherService.moveManyWithServer(this.cipherIds, this.folderId);\n    await this.formPromise;\n    this.onMoved.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"movedItems\"));\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-bulk-restore\",\n  templateUrl: \"bulk-restore.component.html\",\n})\nexport class BulkRestoreComponent {\n  @Input() cipherIds: string[] = [];\n  @Output() onRestored = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async submit() {\n    this.formPromise = this.cipherService.restoreManyWithServer(this.cipherIds);\n    await this.formPromise;\n    this.onRestored.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItems\"));\n  }\n}\n","type CheckableBase = {\n  checked?: boolean;\n};\n\nexport type Checkable<T> = T & CheckableBase;\n\nexport function isChecked(item: CheckableBase): boolean {\n  return !!item.checked;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"restoreSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"restoreSelectedTitle\">\n          {{ \"restoreSelected\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"restoreSelectedItemsDesc\" | i18n: cipherIds.length }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"restore\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedToOrgTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"moveSelectedToOrgTitle\">\n          {{ \"moveSelectedToOrg\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveManyToOrgDesc\" | i18n }}</p>\n        <p>\n          {{\n            \"moveSelectedItemsCountDesc\"\n              | i18n: this.ciphers.length:shareableCiphers.length:nonShareableCount\n          }}\n        </p>\n        <div class=\"form-group\">\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            class=\"form-control\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [disabled]=\"form.loading || !canSave\"\n          [ngClass]=\"{ loading: form.loading }\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { Checkable, isChecked } from \"@bitwarden/common/types/checkable\";\n\n@Component({\n  selector: \"app-vault-bulk-share\",\n  templateUrl: \"bulk-share.component.html\",\n})\nexport class BulkShareComponent implements OnInit {\n  @Input() ciphers: CipherView[] = [];\n  @Input() organizationId: string;\n  @Output() onShared = new EventEmitter();\n\n  nonShareableCount = 0;\n  collections: Checkable<CollectionView>[] = [];\n  organizations: Organization[] = [];\n  shareableCiphers: CipherView[] = [];\n  formPromise: Promise<void>;\n\n  private writeableCollections: CollectionView[] = [];\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.shareableCiphers = this.ciphers.filter(\n      (c) => !c.hasOldAttachments && c.organizationId == null\n    );\n    this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.filter((c) => !c.readOnly);\n    this.organizations = await this.organizationService.getAll();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  filterCollections() {\n    this.selectAll(false);\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit() {\n    const checkedCollectionIds = this.collections.filter(isChecked).map((c) => c.id);\n    try {\n      this.formPromise = this.cipherService.shareManyWithServer(\n        this.shareableCiphers,\n        this.organizationId,\n        checkedCollectionIds\n      );\n      await this.formPromise;\n      this.onShared.emit();\n      const orgName =\n        this.organizations.find((o) => o.id === this.organizationId)?.name ??\n        this.i18nService.t(\"organization\");\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"movedItemsToOrg\", orgName)\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  check(c: Checkable<CollectionView>, select?: boolean) {\n    c.checked = select == null ? !c.checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n\n  get canSave() {\n    if (\n      this.shareableCiphers != null &&\n      this.shareableCiphers.length > 0 &&\n      this.collections != null\n    ) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if (this.collections[i].checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"dropdown mr-2\" appListDropdown>\n  <button\n    class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n    type=\"button\"\n    id=\"bulkActionsButton\"\n    data-toggle=\"dropdown\"\n    aria-haspopup=\"true\"\n    aria-expanded=\"false\"\n    appA11yTitle=\"{{ 'options' | i18n }}\"\n  >\n    <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n  </button>\n  <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkMove()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i>\n      {{ \"moveSelected\" | i18n }}\n    </button>\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkShare()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n      {{ \"moveSelectedToOrg\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" (click)=\"bulkRestore()\" *ngIf=\"deleted && !organization\">\n      <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n      {{ \"restoreSelected\" | i18n }}\n    </button>\n    <button class=\"dropdown-item text-danger\" (click)=\"bulkDelete()\">\n      <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n      {{ (deleted ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n    </button>\n    <div class=\"dropdown-divider\"></div>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n      <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n      {{ \"selectAll\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n      <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n      {{ \"unselectAll\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-template #bulkDeleteTemplate></ng-template>\n<ng-template #bulkRestoreTemplate></ng-template>\n<ng-template #bulkMoveTemplate></ng-template>\n<ng-template #bulkShareTemplate></ng-template>\n","import { Component, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { BulkDeleteComponent } from \"./bulk-delete.component\";\nimport { BulkMoveComponent } from \"./bulk-move.component\";\nimport { BulkRestoreComponent } from \"./bulk-restore.component\";\nimport { BulkShareComponent } from \"./bulk-share.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\n\n@Component({\n  selector: \"app-vault-bulk-actions\",\n  templateUrl: \"bulk-actions.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class BulkActionsComponent {\n  @Input() ciphersComponent: CiphersComponent;\n  @Input() deleted: boolean;\n  @Input() organization: Organization;\n\n  @ViewChild(\"bulkDeleteTemplate\", { read: ViewContainerRef, static: true })\n  bulkDeleteModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRestoreTemplate\", { read: ViewContainerRef, static: true })\n  bulkRestoreModalRef: ViewContainerRef;\n  @ViewChild(\"bulkMoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkMoveModalRef: ViewContainerRef;\n  @ViewChild(\"bulkShareTemplate\", { read: ViewContainerRef, static: true })\n  bulkShareModalRef: ViewContainerRef;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async bulkDelete() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkDeleteComponent,\n      this.bulkDeleteModalRef,\n      (comp) => {\n        comp.permanent = this.deleted;\n        comp.cipherIds = selectedIds;\n        comp.organization = this.organization;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeleted.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkRestore() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRestoreComponent,\n      this.bulkRestoreModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestored.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkShare() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedCiphers = this.ciphersComponent.getSelected();\n    if (selectedCiphers.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkShareComponent,\n      this.bulkShareModalRef,\n      (comp) => {\n        comp.ciphers = selectedCiphers;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onShared.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkMove() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkMoveComponent,\n      this.bulkMoveModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onMoved.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  selectAll(select: boolean) {\n    this.ciphersComponent.selectAll(select);\n  }\n\n  private async promptPassword() {\n    const selectedCiphers = this.ciphersComponent.getSelected();\n    const notProtected = !selectedCiphers.find(\n      (cipher) => cipher.reprompt !== CipherRepromptType.None\n    );\n\n    return notProtected || (await this.passwordRepromptService.showPasswordPrompt());\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-organization-vault-filter\n              #vaultFilter\n              [activeFilter]=\"activeFilter\"\n              (onFilterChange)=\"applyVaultFilter($event)\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n            ></app-organization-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"vaultItems\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions\n            [ciphersComponent]=\"ciphersComponent\"\n            [deleted]=\"deleted\"\n            [organization]=\"organization\"\n          >\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm ml-auto\"\n            (click)=\"addCipher()\"\n            *ngIf=\"!deleted\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"bwi bwi-exclamation-triangle\">\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-org-vault-ciphers\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onEventsClicked)=\"viewEvents($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n      >\n      </app-org-vault-ciphers>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #eventsTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { VaultService } from \"../../vault/shared/vault.service\";\nimport { EntityEventsComponent } from \"../manage/entity-events.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { VaultFilterComponent } from \"./vault-filter/vault-filter.component\";\n\nconst BroadcasterSubscriptionId = \"OrgVaultComponent\";\n\n@Component({\n  selector: \"app-org-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true })\n  vaultFilterComponent: VaultFilterComponent;\n  @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n\n  organization: Organization;\n  collectionId: string = null;\n  type: CipherType = null;\n  trashCleanupWarning: string = null;\n  activeFilter: VaultFilter = new VaultFilter();\n\n  // This is a hack to avoid redundant api calls that fetch OrganizationVaultFilterComponent collections\n  // When it makes sense to do so we should leverage some other communication method for change events that isn't directly tied to the query param for organizationId\n  // i.e. exposing the VaultFiltersService to the OrganizationSwitcherComponent to make relevant updates from a change event instead of just depending on the router\n  firstLoaded = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private messagingService: MessagingService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultService: VaultService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  ngOnInit() {\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params: any) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.vaultFilterComponent.organization = this.organization;\n      this.ciphersComponent.organization = this.organization;\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.ciphersComponent.searchText = this.vaultFilterComponent.searchText = qParams.search;\n        if (!this.organization.canViewAllCollections) {\n          await this.syncService.fullSync(false);\n          this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n            this.ngZone.run(async () => {\n              switch (message.command) {\n                case \"syncCompleted\":\n                  if (message.successfully) {\n                    await Promise.all([\n                      this.vaultFilterComponent.reloadCollectionsAndFolders(),\n                      this.ciphersComponent.refresh(),\n                    ]);\n                    this.changeDetectorRef.detectChanges();\n                  }\n                  break;\n              }\n            });\n          });\n        }\n\n        if (this.firstLoaded) {\n          await this.vaultFilterComponent.reloadCollectionsAndFolders();\n        }\n        this.firstLoaded = true;\n\n        await this.ciphersComponent.reload();\n\n        if (qParams.viewEvents != null) {\n          const cipher = this.ciphersComponent.ciphers.filter((c) => c.id === qParams.viewEvents);\n          if (cipher.length > 0) {\n            this.viewEvents(cipher[0]);\n          }\n        }\n\n        /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n        this.route.queryParams.subscribe(async (params) => {\n          const cipherId = getCipherIdFromParams(params);\n          if (cipherId) {\n            if (\n              // Handle users with implicit collection access since they use the admin endpoint\n              this.organization.canEditAnyCollection ||\n              (await this.cipherService.get(cipherId)) != null\n            ) {\n              this.editCipherId(cipherId);\n            } else {\n              this.platformUtilsService.showToast(\n                \"error\",\n                this.i18nService.t(\"errorOccurred\"),\n                this.i18nService.t(\"unknownCipher\")\n              );\n              this.router.navigate([], {\n                queryParams: { cipherId: null, itemId: null },\n                queryParamsHandling: \"merge\",\n              });\n            }\n          }\n        });\n      });\n    });\n  }\n\n  get deleted(): boolean {\n    return this.activeFilter.status === \"trash\";\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async applyVaultFilter(vaultFilter: VaultFilter) {\n    this.ciphersComponent.showAddNew = vaultFilter.status !== \"trash\";\n    this.activeFilter = vaultFilter;\n    await this.ciphersComponent.reload(\n      this.activeFilter.buildFilter(),\n      vaultFilter.status === \"trash\"\n    );\n    this.vaultFilterComponent.searchPlaceholder =\n      this.vaultService.calculateSearchBarLocalizationString(this.activeFilter);\n    this.go();\n  }\n\n  filterSearchText(searchText: string) {\n    this.ciphersComponent.searchText = searchText;\n    this.ciphersComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\n      this.messagingService.send(\"upgradeOrganization\", { organizationId: cipher.organizationId });\n      return;\n    }\n\n    let madeAttachmentChanges = false;\n\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.ciphersComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        if (this.organization.canEditAnyCollection) {\n          comp.collectionIds = cipher.collectionIds;\n          comp.collections = this.vaultFilterComponent.collections.fullList.filter(\n            (c) => !c.readOnly && c.id != null\n          );\n        }\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.organizationId = this.organization.id;\n    component.type = this.type;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.vaultFilterComponent.collections.fullList.filter(\n        (c) => !c.readOnly && c.id != null\n      );\n    }\n    if (this.collectionId != null) {\n      component.collectionIds = [this.collectionId];\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(cipherId: string) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipherId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n    component.organizationId = this.organization.id;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.vaultFilterComponent.collections.fullList.filter(\n        (c) => !c.readOnly && c.id != null\n      );\n    }\n    // Regardless of Admin state, the collection Ids need to passed manually as they are not assigned value\n    // in the add-edit componenet\n    component.collectionIds = cipher.collectionIds;\n  }\n\n  async viewEvents(cipher: CipherView) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = cipher.name;\n      comp.organizationId = this.organization.id;\n      comp.entityId = cipher.id;\n      comp.showUser = true;\n      comp.entity = \"cipher\";\n    });\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        type: this.activeFilter.cipherType,\n        collectionId: this.activeFilter.selectedCollectionId,\n        deleted: this.deleted ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { VaultComponent } from \"./vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VaultComponent,\n    data: { titleId: \"vaults\" },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { VaultSharedModule } from \"../../vault/shared/vault-shared.module\";\n\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { VaultFilterModule } from \"./vault-filter/vault-filter.module\";\nimport { VaultRoutingModule } from \"./vault-routing.module\";\nimport { VaultComponent } from \"./vault.component\";\n\n@NgModule({\n  imports: [VaultSharedModule, VaultRoutingModule, VaultFilterModule],\n  declarations: [VaultComponent, CiphersComponent],\n  exports: [VaultComponent],\n})\nexport class VaultModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport {\n  canAccessOrgAdmin,\n  canAccessManageTab,\n  canAccessSettingsTab,\n  canAccessToolsTab,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"./guards/org-permissions.guard\";\nimport { OrganizationLayoutComponent } from \"./layouts/organization-layout.component\";\nimport { CollectionsComponent } from \"./manage/collections.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { GroupsComponent } from \"./manage/groups.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { PoliciesComponent } from \"./manage/policies.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { OrganizationBillingComponent } from \"./settings/organization-billing.component\";\nimport { OrganizationSubscriptionComponent } from \"./settings/organization-subscription.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { TwoFactorSetupComponent } from \"./settings/two-factor-setup.component\";\nimport { ExposedPasswordsReportComponent } from \"./tools/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent } from \"./tools/reused-passwords-report.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./tools/weak-passwords-report.component\";\nimport { VaultModule } from \"./vault/vault.module\";\n\nconst routes: Routes = [\n  {\n    path: \":organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, OrganizationPermissionsGuard],\n    data: {\n      organizationPermissions: canAccessOrgAdmin,\n    },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"vault\" },\n      {\n        path: \"vault\",\n        loadChildren: () => VaultModule,\n      },\n      {\n        path: \"tools\",\n        component: ToolsComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: canAccessToolsTab,\n        },\n        children: [\n          {\n            path: \"\",\n            pathMatch: \"full\",\n            redirectTo: \"import\",\n          },\n          {\n            path: \"\",\n            loadChildren: () =>\n              import(\"./tools/import-export/org-import-export.module\").then(\n                (m) => m.OrganizationImportExportModule\n              ),\n          },\n          {\n            path: \"exposed-passwords-report\",\n            component: ExposedPasswordsReportComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"exposedPasswordsReport\",\n              organizationPermissions: (org: Organization) => org.canAccessReports,\n            },\n          },\n          {\n            path: \"inactive-two-factor-report\",\n            component: InactiveTwoFactorReportComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"inactive2faReport\",\n              organizationPermissions: (org: Organization) => org.canAccessReports,\n            },\n          },\n          {\n            path: \"reused-passwords-report\",\n            component: ReusedPasswordsReportComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"reusedPasswordsReport\",\n              organizationPermissions: (org: Organization) => org.canAccessReports,\n            },\n          },\n          {\n            path: \"unsecured-websites-report\",\n            component: UnsecuredWebsitesReportComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"unsecuredWebsitesReport\",\n              organizationPermissions: (org: Organization) => org.canAccessReports,\n            },\n          },\n          {\n            path: \"weak-passwords-report\",\n            component: WeakPasswordsReportComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"weakPasswordsReport\",\n              organizationPermissions: (org: Organization) => org.canAccessReports,\n            },\n          },\n        ],\n      },\n      {\n        path: \"manage\",\n        component: ManageComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: canAccessManageTab,\n        },\n        children: [\n          {\n            path: \"\",\n            pathMatch: \"full\",\n            redirectTo: \"people\",\n          },\n          {\n            path: \"collections\",\n            component: CollectionsComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"collections\",\n              organizationPermissions: (org: Organization) =>\n                org.canCreateNewCollections ||\n                org.canEditAnyCollection ||\n                org.canDeleteAnyCollection ||\n                org.canEditAssignedCollections ||\n                org.canDeleteAssignedCollections,\n            },\n          },\n          {\n            path: \"events\",\n            component: EventsComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"eventLogs\",\n              organizationPermissions: (org: Organization) => org.canAccessEventLogs,\n            },\n          },\n          {\n            path: \"groups\",\n            component: GroupsComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"groups\",\n              organizationPermissions: (org: Organization) => org.canManageGroups,\n            },\n          },\n          {\n            path: \"people\",\n            component: PeopleComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"people\",\n              organizationPermissions: (org: Organization) =>\n                org.canManageUsers || org.canManageUsersPassword,\n            },\n          },\n          {\n            path: \"policies\",\n            component: PoliciesComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"policies\",\n              organizationPermissions: (org: Organization) => org.canManagePolicies,\n            },\n          },\n        ],\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: { organizationPermissions: canAccessSettingsTab },\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: AccountComponent, data: { titleId: \"myOrganization\" } },\n          {\n            path: \"two-factor\",\n            component: TwoFactorSetupComponent,\n            data: { titleId: \"twoStepLogin\" },\n          },\n          {\n            path: \"billing\",\n            component: OrganizationBillingComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"billing\",\n              organizationPermissions: (org: Organization) => org.canManageBilling,\n            },\n          },\n          {\n            path: \"subscription\",\n            component: OrganizationSubscriptionComponent,\n            data: { titleId: \"subscription\" },\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","export enum PlanSponsorshipType {\n  FamiliesForEnterprise = 0,\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"../../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-family-sponsorship\",\n  templateUrl: \"accept-family-sponsorship.component.html\",\n})\nexport class AcceptFamilySponsorshipComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/setup/families-for-enterprise\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    if (!qParams.register) {\n      this.router.navigate([\"/login\"], { queryParams: { email: qParams.email } });\n    } else {\n      this.router.navigate([\"/register\"], { queryParams: { email: qParams.email } });\n    }\n  }\n}\n","import { PlanSponsorshipType } from \"../../../enums/planSponsorshipType\";\n\nexport class OrganizationSponsorshipRedeemRequest {\n  planSponsorshipType: PlanSponsorshipType;\n  sponsoredOrganizationId: string;\n}\n","<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"sponsoredFamiliesOffer\" | i18n }}</h1>\n  </div>\n  <div *ngIf=\"loading\" class=\"mt-5 d-flex justify-content-center\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </div>\n  <div *ngIf=\"!loading && badToken\" class=\"mt-5 d-flex justify-content-center\">\n    <span>{{ \"badToken\" | i18n }}</span>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    ngNativeValidate\n    *ngIf=\"!loading && !badToken\"\n  >\n    <p>\n      <span>{{ \"acceptBitwardenFamiliesHelp\" | i18n }}</span>\n    </p>\n    <div class=\"form-group col-6\">\n      <label for=\"availableSponsorshipOrg\">{{ \"sponsoredFamiliesSelectOffer\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        [(ngModel)]=\"selectedFamilyOrganizationId\"\n        class=\"form-control\"\n        required\n      >\n        <option value=\"\" disabled>-- {{ \"select\" | i18n }} --</option>\n        <option value=\"createNew\">{{ \"newFamiliesOrganization\" | i18n }}</option>\n        <option *ngFor=\"let o of existingFamilyOrganizations$ | async\" [ngValue]=\"o.id\">\n          {{ o.name }}\n        </option>\n      </select>\n    </div>\n    <div *ngIf=\"showNewOrganization\" class=\"col-12\">\n      <app-organization-plans></app-organization-plans>\n    </div>\n    <div class=\"form-group col-6\" *ngIf=\"!showNewOrganization\">\n      <button class=\"btn btn-primary mt-2 btn-submit\" [disabled]=\"form.loading\" type=\"submit\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"acceptOffer\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n","import { Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Observable, Subject } from \"rxjs\";\nimport { first, map, takeUntil } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSponsorshipRedeemRequest } from \"@bitwarden/common/models/request/organization/organizationSponsorshipRedeemRequest\";\n\nimport { OrganizationPlansComponent } from \"../../settings/organization-plans.component\";\nimport { DeleteOrganizationComponent } from \"../settings/delete-organization.component\";\n\n@Component({\n  selector: \"families-for-enterprise-setup\",\n  templateUrl: \"families-for-enterprise-setup.component.html\",\n})\nexport class FamiliesForEnterpriseSetupComponent implements OnInit, OnDestroy {\n  @ViewChild(OrganizationPlansComponent, { static: false })\n  set organizationPlansComponent(value: OrganizationPlansComponent) {\n    if (!value) {\n      return;\n    }\n\n    value.plan = PlanType.FamiliesAnnually;\n    value.product = ProductType.Families;\n    value.acceptingSponsorship = true;\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    value.onSuccess.subscribe(this.onOrganizationCreateSuccess.bind(this));\n  }\n\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  loading = true;\n  badToken = false;\n  formPromise: Promise<any>;\n\n  token: string;\n  existingFamilyOrganizations: Organization[];\n  existingFamilyOrganizations$: Observable<Organization[]>;\n\n  showNewOrganization = false;\n  _organizationPlansComponent: OrganizationPlansComponent;\n  _selectedFamilyOrganizationId = \"\";\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService,\n    private organizationService: OrganizationService,\n    private modalService: ModalService\n  ) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.token == null;\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"sponsoredFamiliesAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.token = qParams.token;\n\n      await this.syncService.fullSync(true);\n      this.badToken = !(await this.apiService.postPreValidateSponsorshipToken(this.token));\n      this.loading = false;\n    });\n\n    this.existingFamilyOrganizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter((o) => o.planProductType === ProductType.Families))\n    );\n\n    this.existingFamilyOrganizations$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (orgs.length === 0) {\n        this.selectedFamilyOrganizationId = \"createNew\";\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit(this._selectedFamilyOrganizationId);\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  get selectedFamilyOrganizationId() {\n    return this._selectedFamilyOrganizationId;\n  }\n\n  set selectedFamilyOrganizationId(value: string) {\n    this._selectedFamilyOrganizationId = value;\n    this.showNewOrganization = value === \"createNew\";\n  }\n\n  private async doSubmit(organizationId: string) {\n    try {\n      const request = new OrganizationSponsorshipRedeemRequest();\n      request.planSponsorshipType = PlanSponsorshipType.FamiliesForEnterprise;\n      request.sponsoredOrganizationId = organizationId;\n\n      await this.apiService.postRedeemSponsorship(this.token, request);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"sponsoredFamiliesOfferRedeemed\")\n      );\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      if (this.showNewOrganization) {\n        await this.modalService.openViewRef(\n          DeleteOrganizationComponent,\n          this.deleteModalRef,\n          (comp) => {\n            comp.organizationId = organizationId;\n            comp.deleteOrganizationRequestType = \"InvalidFamiliesForEnterprise\";\n            // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n            comp.onSuccess.subscribe(() => {\n              this.router.navigate([\"/\"]);\n            });\n          }\n        );\n      }\n      this.validationService.showError(this.i18nService.t(\"sponsorshipTokenHasExpired\"));\n    }\n  }\n\n  private async onOrganizationCreateSuccess(value: any) {\n    // Use newly created organization id\n    await this.doSubmit(value.organizationId);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from \"@angular/router\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HasPremiumGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private messagingService: MessagingService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    if (!userHasPremium) {\n      this.messagingService.send(\"premiumRequired\");\n    }\n\n    // Prevent trapping the user on the login page, since that's an awful UX flow\n    if (!userHasPremium && this.router.url === \"/login\") {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    return userHasPremium;\n  }\n}\n","export enum ReportVariant {\n  Enabled = \"Enabled\",\n  RequiresPremium = \"RequiresPremium\",\n  RequiresUpgrade = \"RequiresUpgrade\",\n}\n","<div class=\"page-header\">\n  <h1>{{ \"dataBreachReport\" | i18n }}</h1>\n</div>\n<p>{{ \"breachDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"username\">{{ \"username\" | i18n }}</label>\n      <input\n        id=\"username\"\n        type=\"text\"\n        name=\"Username\"\n        class=\"form-control\"\n        [(ngModel)]=\"username\"\n        required\n      />\n      <small class=\"form-text text-muted\">{{ \"breachCheckUsernameEmail\" | i18n }}</small>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"checkBreaches\" | i18n }}\n  </button>\n</form>\n<div class=\"mt-4\" *ngIf=\"!form.loading && checkedUsername\">\n  <p *ngIf=\"error\">{{ \"reportError\" | i18n }}...</p>\n  <ng-container *ngIf=\"!error\">\n    <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!breachedAccounts.length\">\n      {{ \"breachUsernameNotFound\" | i18n: checkedUsername }}\n    </app-callout>\n    <app-callout type=\"danger\" title=\"{{ 'breachFound' | i18n }}\" *ngIf=\"breachedAccounts.length\">\n      {{ \"breachUsernameFound\" | i18n: checkedUsername:breachedAccounts.length }}\n    </app-callout>\n    <ul class=\"list-group list-group-breach\" *ngIf=\"breachedAccounts.length\">\n      <li *ngFor=\"let a of breachedAccounts\" class=\"list-group-item min-height-fix\">\n        <div class=\"row\">\n          <div class=\"col-2 text-center\">\n            <img [src]=\"a.logoPath\" alt=\"\" class=\"img-fluid\" />\n          </div>\n          <div class=\"col-7\">\n            <h3 class=\"text-lg\">{{ a.title }}</h3>\n            <p [innerHTML]=\"a.description\"></p>\n            <p class=\"mb-1\">{{ \"compromisedData\" | i18n }}:</p>\n            <ul>\n              <li *ngFor=\"let d of a.dataClasses\">{{ d }}</li>\n            </ul>\n          </div>\n          <div class=\"col-3\">\n            <dl>\n              <dt>{{ \"website\" | i18n }}</dt>\n              <dd>{{ a.domain }}</dd>\n              <dt>{{ \"affectedUsers\" | i18n }}</dt>\n              <dd>{{ a.pwnCount | number }}</dd>\n              <dt>{{ \"breachOccurred\" | i18n }}</dt>\n              <dd>{{ a.breachDate | date: \"mediumDate\" }}</dd>\n              <dt>{{ \"breachReported\" | i18n }}</dt>\n              <dd>{{ a.addedDate | date: \"mediumDate\" }}</dd>\n            </dl>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </ng-container>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { BreachAccountResponse } from \"@bitwarden/common/models/response/breachAccountResponse\";\n\n@Component({\n  selector: \"app-breach-report\",\n  templateUrl: \"breach-report.component.html\",\n})\nexport class BreachReportComponent implements OnInit {\n  error = false;\n  username: string;\n  checkedUsername: string;\n  breachedAccounts: BreachAccountResponse[] = [];\n  formPromise: Promise<BreachAccountResponse[]>;\n\n  constructor(private auditService: AuditService, private stateService: StateService) {}\n\n  async ngOnInit() {\n    this.username = await this.stateService.getEmail();\n  }\n\n  async submit() {\n    this.error = false;\n    this.username = this.username.toLowerCase();\n    try {\n      this.formPromise = this.auditService.breachedAccounts(this.username);\n      this.breachedAccounts = await this.formPromise;\n    } catch {\n      this.error = true;\n    }\n    this.checkedUsername = this.username;\n  }\n}\n","class Icon {\n  constructor(readonly svg: string) {}\n}\n\n// We only export the type to prohibit the creation of Icons without using\n// the `svgIcon` template literal tag.\nexport type { Icon };\n\nexport function isIcon(icon: unknown): icon is Icon {\n  return icon instanceof Icon;\n}\n\nexport class DynamicContentNotAllowedError extends Error {\n  constructor() {\n    super(\"Dynamic content in icons is not allowed due to risk of user-injected XSS.\");\n  }\n}\n\nexport function svgIcon(strings: TemplateStringsArray, ...values: unknown[]): Icon {\n  if (values.length > 0) {\n    throw new DynamicContentNotAllowedError();\n  }\n\n  return new Icon(strings[0]);\n}\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportBreach = svgIcon`\n  <svg width=\"58\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.569 74H13.007a7 7 0 0 1-7-7V31.077a7 7 0 0 1 7-7h19.101a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.912V67a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M44.576 69.055H18.015a7 7 0 0 1-7-7V26.132a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.911v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M50 63.698H23.439a7 7 0 0 1-7-7V20.775a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.575A7 7 0 0 1 57 28.35v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M44.648 13.599v3.95a8 8 0 0 0 8 8h4.518\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M23.533 37.736H49.49M23.533 46.802H49.49M23.533 42.269H49.49M23.533 55.456H49.49M23.533 50.923H49.49\" />\n    <path d=\"M1 16.483C1 7.944 8.013 1 16.69 1c8.678 0 15.691 6.944 15.691 15.483 0 8.54-7.013 15.484-15.69 15.484C8.012 31.967 1 25.023 1 16.484Z\" fill=\"#518FFF\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"m16.562 7.979.1 11.538\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <ellipse rx=\"1.252\" ry=\"1.236\" transform=\"rotate(-.479 2802.219 -1964.476) skewX(.012)\" fill=\"#fff\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportExposedPasswords = svgIcon`\n  <svg width=\"101\" height=\"77\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.374 50.192a26.42 26.42 0 0 0 9.111 1.608c14.34 0 25.965-11.372 25.965-25.4 0-.337-.007-.673-.02-1.008h25.299v34.85H32.374v-10.05Z\" fill=\"currentColor\" />\n    <path d=\"M15.805 26.4c0 14.028 11.625 25.4 25.965 25.4s25.964-11.372 25.964-25.4C67.734 12.372 56.11 1 41.77 1 27.43 1 15.805 12.372 15.805 26.4Z\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M27.914 47.849a1 1 0 0 0-2 0h2Zm68.288-26.792a2.12 2.12 0 0 1 2.14 2.11h2c0-2.253-1.83-4.11-4.14-4.11v2Zm2.14 2.11v40.552h2V23.167h-2Zm0 40.552c0 1.172-.958 2.11-2.14 2.11v2c2.25 0 4.14-1.798 4.14-4.11h-2Zm-2.14 2.11H30.054v2h66.148v-2Zm-66.148 0a2.12 2.12 0 0 1-2.14-2.11h-2a4.12 4.12 0 0 0 4.14 4.11v-2Zm-2.14-2.11V47.85h-2v15.87h2Zm39.254-42.662h29.034v-2H67.168v2Z\" fill=\"#fff\" />\n    <path d=\"M67.203 25.56h25.64v34.85H32.487V50.011\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"M47.343 76h31.571\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M57.557 66.83V76M67.771 66.83V76\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"m20.995 42.873-3.972 3.972-14.61 14.61a3.413 3.413 0 0 0 0 4.826v0a3.413 3.413 0 0 0 4.827 0l14.61-14.61 3.972-3.972\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M86.037 32.488H71.845M86.037 37.81H76.28M71.845 37.81h-6.652M86.037 43.132h-6.209M74.95 43.132H61.2M86.037 48.454H71.845M66.967 48.454h-7.54M86.037 53.776H66.08M61.201 53.776h-11.53M44.793 53.776h-7.096\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <rect width=\"40.801\" height=\"9.757\" rx=\"4\" transform=\"matrix(-1 0 0 1 61.201 14.748)\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M16.852 33.375h28.375a4 4 0 0 1 4 4v1.757a4 4 0 0 1-4 4H22.174M66.523 33.375h-3.539a4 4 0 0 0-4 4v3.761c0 1.102.894 1.996 1.996 1.996v0\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportInactiveTwoFactor = svgIcon`\n  <svg width=\"42\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" d=\"M1 13.121h39.595v48.758H1z\" />\n    <rect x=\"1\" y=\"1\" width=\"39.595\" height=\"73\" rx=\"8\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M12.344 8.091h16.907M18.907 67.424h3.025M31.503 32.515c-2.047-4.337-6.717-7.061-11.73-6.414a11.356 11.356 0 0 0-9.125 7.126M10.816 42.016c2.047 4.337 6.718 7.062 11.73 6.414 4.346-.562 7.8-3.51 9.213-7.358\" />\n    <path d=\"m33.584 29.293-1.295 4.625-4.625-1.295M8.523 44.725l1.441-4.581 4.582 1.441\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportReusedPasswords = svgIcon`\n  <svg width=\"102\" height=\"102\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M57.983 15.06a35.664 35.664 0 0 1 14.531 6.27c16.164 11.78 19.585 34.613 7.643 51a37.227 37.227 0 0 1-6.81 7.138m-32.842 6.697a35.708 35.708 0 0 1-11.239-5.495c-16.163-11.78-19.585-34.613-7.642-51a37.55 37.55 0 0 1 3.295-3.929\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M93.909 64.598H7.72c-.708 0-1.275-.662-1.275-1.49V40.273c0-.828.567-1.49 1.275-1.49H93.91c.708 0 1.275.663 1.275 1.49v22.837c.047.827-.567 1.49-1.275 1.49Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M21.532 52.186v-5.965M21.532 52.187l5.748-1.844M21.532 52.186l3.524 4.881M21.531 52.186l-3.47 4.881M21.532 52.187l-5.694-1.844M40.944 52.186v-5.965M40.944 52.187l5.694-1.844M40.944 52.187l3.525 4.88M40.944 52.187l-3.525 4.88M40.944 52.187l-5.694-1.844M54.849 57.337h11.294M74.21 57.337h11.295M41.75 83l.71 4.75-4.75.71M58.664 18.66 56 14.665 59.996 12\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportUnsecuredWebsites = svgIcon`\n  <svg width=\"113\" height=\"76\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1.71 12.983h110.362v55.11a6 6 0 0 1-6 6H7.711a6 6 0 0 1-6-6v-55.11Z\" fill=\"currentColor\" />\n    <rect x=\"1\" y=\"1.073\" width=\"110.5\" height=\"73.454\" rx=\"9\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M89.48 8.048V7.47M96.363 8.048V7.47M103.246 8.048V7.47\" stroke=\"#fff\" stroke-width=\"4\" stroke-linecap=\"round\" />\n    <path d=\"M0 12.983h111.217\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"m93.236 44.384-18.42-11.026 2.93 21.266 5.582-5.237 4.27 6.46 2.98-1.971-4.26-6.446 6.918-3.046Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <rect width=\"96.673\" height=\"6.886\" rx=\"3.443\" transform=\"matrix(-1 0 0 1 104.373 18.721)\" stroke=\"#fff\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportWeakPasswords = svgIcon`\n  <svg width=\"78\" height=\"78\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M66.493 64.415V77H9.979V64.324M9.979 44.065V32.106h56.514v12.148\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"M75.44 64.852H2.085c-.603 0-1.085-.555-1.085-1.25V44.448c0-.694.482-1.25 1.085-1.25H75.44c.603 0 1.085.556 1.085 1.25v19.156c.04.694-.482 1.25-1.085 1.25Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M13.84 54.56v-5.077M13.84 54.56l4.893-1.57M13.84 54.56l3 4.153M13.84 54.56l-2.954 4.153M13.84 54.56l-4.846-1.57M30.363 54.56v-5.077M30.363 54.56l4.846-1.57M30.363 54.56l3 4.153M30.363 54.56l-3 4.153M30.363 54.56l-4.846-1.57M42.197 59.042h9.506M58.57 59.042h9.507\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M20.863 31.364c-.274-5.285 0-15.817 1.093-18.863 1.276-3.554 6.233-10.826 15.856-11.482 4.83-.273 15.2 2.296 18.043 14.763\" stroke=\"#fff\" stroke-width=\"2\" />\n  </svg>\n`;\n","import { ReportBreach } from \"./icons/report-breach.icon\";\nimport { ReportExposedPasswords } from \"./icons/report-exposed-passwords.icon\";\nimport { ReportInactiveTwoFactor } from \"./icons/report-inactive-two-factor.icon\";\nimport { ReportReusedPasswords } from \"./icons/report-reused-passwords.icon\";\nimport { ReportUnsecuredWebsites } from \"./icons/report-unsecured-websites.icon\";\nimport { ReportWeakPasswords } from \"./icons/report-weak-passwords.icon\";\nimport { ReportEntry } from \"./models/report-entry\";\n\nexport enum ReportType {\n  ExposedPasswords = \"exposedPasswords\",\n  ReusedPasswords = \"reusedPasswords\",\n  WeakPasswords = \"weakPasswords\",\n  UnsecuredWebsites = \"unsecuredWebsites\",\n  Inactive2fa = \"inactive2fa\",\n  DataBreach = \"dataBreach\",\n}\n\ntype ReportWithoutVariant = Omit<ReportEntry, \"variant\">;\n\nexport const reports: Record<ReportType, ReportWithoutVariant> = {\n  [ReportType.ExposedPasswords]: {\n    title: \"exposedPasswordsReport\",\n    description: \"exposedPasswordsReportDesc\",\n    route: \"exposed-passwords-report\",\n    icon: ReportExposedPasswords,\n  },\n  [ReportType.ReusedPasswords]: {\n    title: \"reusedPasswordsReport\",\n    description: \"reusedPasswordsReportDesc\",\n    route: \"reused-passwords-report\",\n    icon: ReportReusedPasswords,\n  },\n  [ReportType.WeakPasswords]: {\n    title: \"weakPasswordsReport\",\n    description: \"weakPasswordsReportDesc\",\n    route: \"weak-passwords-report\",\n    icon: ReportWeakPasswords,\n  },\n  [ReportType.UnsecuredWebsites]: {\n    title: \"unsecuredWebsitesReport\",\n    description: \"unsecuredWebsitesReportDesc\",\n    route: \"unsecured-websites-report\",\n    icon: ReportUnsecuredWebsites,\n  },\n  [ReportType.Inactive2fa]: {\n    title: \"inactive2faReport\",\n    description: \"inactive2faReportDesc\",\n    route: \"inactive-two-factor-report\",\n    icon: ReportInactiveTwoFactor,\n  },\n  [ReportType.DataBreach]: {\n    title: \"dataBreachReport\",\n    description: \"breachDesc\",\n    route: \"breach-report\",\n    icon: ReportBreach,\n  },\n};\n","import { Component, HostBinding, Input } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { Icon, isIcon } from \"./icon\";\n\n@Component({\n  selector: \"bit-icon\",\n  template: ``,\n})\nexport class BitIconComponent {\n  @Input() icon: Icon;\n\n  constructor(private domSanitizer: DomSanitizer) {}\n\n  @HostBinding(\"innerHtml\")\n  protected get innerHtml() {\n    if (!isIcon(this.icon)) {\n      return \"\";\n    }\n\n    const svg = this.icon.svg;\n    return this.domSanitizer.bypassSecurityTrustHtml(svg);\n  }\n}\n","<a\n  class=\"tw-block tw-h-full tw-w-72 tw-overflow-hidden tw-rounded tw-border tw-border-solid tw-border-secondary-300 !tw-text-main tw-transition-all hover:tw-scale-105 hover:tw-no-underline focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2\"\n  [routerLink]=\"route\"\n>\n  <div class=\"tw-relative\">\n    <div\n      class=\"tw-flex tw-h-28 tw-bg-background-alt2 tw-text-center tw-text-primary-300\"\n      [ngClass]=\"{ 'tw-grayscale': disabled }\"\n    >\n      <div class=\"tw-m-auto\"><bit-icon [icon]=\"icon\"></bit-icon></div>\n    </div>\n    <div class=\"tw-p-5\" [ngClass]=\"{ 'tw-grayscale': disabled }\">\n      <h3 class=\"tw-mb-4 tw-text-xl tw-font-bold\">{{ title }}</h3>\n      <p class=\"tw-mb-0\">{{ description }}</p>\n    </div>\n    <span\n      bitBadge\n      badgeType=\"success\"\n      class=\"tw-absolute tw-left-2 tw-top-2 tw-leading-none\"\n      *ngIf=\"disabled\"\n    >\n      <ng-container *ngIf=\"requiresPremium\">{{ \"premium\" | i18n }}</ng-container>\n      <ng-container *ngIf=\"!requiresPremium\">{{ \"upgrade\" | i18n }}</ng-container>\n    </span>\n  </div>\n</a>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ReportVariant } from \"../models/report-variant\";\n\n@Component({\n  selector: \"app-report-card\",\n  templateUrl: \"report-card.component.html\",\n})\nexport class ReportCardComponent {\n  @Input() title: string;\n  @Input() description: string;\n  @Input() route: string;\n  @Input() icon: string;\n  @Input() variant: ReportVariant;\n\n  protected get disabled() {\n    return this.variant != ReportVariant.Enabled;\n  }\n\n  protected get requiresPremium() {\n    return this.variant == ReportVariant.RequiresPremium;\n  }\n}\n","<div class=\"tw-inline-grid tw-grid-cols-3 tw-gap-4\">\n  <div *ngFor=\"let report of reports\">\n    <app-report-card\n      [title]=\"report.title | i18n\"\n      [description]=\"report.description | i18n\"\n      [route]=\"report.route\"\n      [variant]=\"report.variant\"\n      [icon]=\"report.icon\"\n    ></app-report-card>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ReportEntry } from \"../models/report-entry\";\n\n@Component({\n  selector: \"app-report-list\",\n  templateUrl: \"report-list.component.html\",\n})\nexport class ReportListComponent {\n  @Input() reports: ReportEntry[];\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { ReportEntry } from \"../models/report-entry\";\nimport { ReportVariant } from \"../models/report-variant\";\nimport { reports, ReportType } from \"../reports\";\n\n@Component({\n  selector: \"app-reports-home\",\n  templateUrl: \"reports-home.component.html\",\n})\nexport class ReportsHomeComponent implements OnInit {\n  reports: ReportEntry[];\n\n  constructor(private stateService: StateService) {}\n\n  async ngOnInit(): Promise<void> {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    const reportRequiresPremium = userHasPremium\n      ? ReportVariant.Enabled\n      : ReportVariant.RequiresPremium;\n\n    this.reports = [\n      {\n        ...reports[ReportType.ExposedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.ReusedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.WeakPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.UnsecuredWebsites],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.Inactive2fa],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.DataBreach],\n        variant: ReportVariant.Enabled,\n      },\n    ];\n  }\n}\n","<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n\n  <div class=\"row mt-4\">\n    <div class=\"col\">\n      <a bitButton routerLink=\"./\" *ngIf=\"!homepage\">\n        <i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i>\n        {{ \"backToReports\" | i18n }}\n      </a>\n    </div>\n  </div>\n</div>\n","<div class=\"page-header\">\n  <h1>{{ \"reports\" | i18n }}</h1>\n</div>\n\n<p>{{ \"reportsDesc\" | i18n }}</p>\n\n<app-report-list [reports]=\"reports\"></app-report-list>\n","import { Component, OnDestroy } from \"@angular/core\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-reports-layout\",\n  templateUrl: \"reports-layout.component.html\",\n})\nexport class ReportsLayoutComponent implements OnDestroy {\n  homepage = true;\n  subscription: Subscription;\n\n  constructor(router: Router) {\n    this.subscription = router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n      .subscribe((event) => {\n        this.homepage = (event as NavigationEnd).url == \"/reports\";\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\n\nimport { HasPremiumGuard } from \"../shared/guards/has-premium.guard\";\n\nimport { BreachReportComponent } from \"./pages/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./pages/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./pages/inactive-two-factor-report.component\";\nimport { ReportsHomeComponent } from \"./pages/reports-home.component\";\nimport { ReusedPasswordsReportComponent } from \"./pages/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./pages/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./pages/weak-passwords-report.component\";\nimport { ReportsLayoutComponent } from \"./reports-layout.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ReportsLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: \"\", pathMatch: \"full\", component: ReportsHomeComponent, data: { homepage: true } },\n      {\n        path: \"breach-report\",\n        component: BreachReportComponent,\n        data: { titleId: \"dataBreachReport\" },\n      },\n      {\n        path: \"reused-passwords-report\",\n        component: ReusedPasswordsReportComponent,\n        data: { titleId: \"reusedPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"unsecured-websites-report\",\n        component: UnsecuredWebsitesReportComponent,\n        data: { titleId: \"unsecuredWebsitesReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"weak-passwords-report\",\n        component: WeakPasswordsReportComponent,\n        data: { titleId: \"weakPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"exposed-passwords-report\",\n        component: ExposedPasswordsReportComponent,\n        data: { titleId: \"exposedPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"inactive-two-factor-report\",\n        component: InactiveTwoFactorReportComponent,\n        data: { titleId: \"inactive2faReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReportsRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { BreachReportComponent } from \"./pages/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./pages/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./pages/inactive-two-factor-report.component\";\nimport { ReportsHomeComponent } from \"./pages/reports-home.component\";\nimport { ReusedPasswordsReportComponent } from \"./pages/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./pages/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./pages/weak-passwords-report.component\";\nimport { ReportCardComponent } from \"./report-card/report-card.component\";\nimport { ReportListComponent } from \"./report-list/report-list.component\";\nimport { ReportsLayoutComponent } from \"./reports-layout.component\";\nimport { ReportsRoutingModule } from \"./reports-routing.module\";\n\n@NgModule({\n  imports: [CommonModule, SharedModule, ReportsRoutingModule],\n  declarations: [\n    BreachReportComponent,\n    ExposedPasswordsReportComponent,\n    InactiveTwoFactorReportComponent,\n    ReportCardComponent,\n    ReportListComponent,\n    ReportsLayoutComponent,\n    ReportsHomeComponent,\n    ReusedPasswordsReportComponent,\n    UnsecuredWebsitesReportComponent,\n    WeakPasswordsReportComponent,\n    WeakPasswordsReportComponent,\n  ],\n})\nexport class ReportsModule {}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccess } from \"../domain/sendAccess\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendAccessView implements View {\n  id: string = null;\n  name: string = null;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  expirationDate: Date = null;\n  creatorIdentifier: string = null;\n\n  constructor(s?: SendAccess) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.type = s.type;\n    this.expirationDate = s.expirationDate;\n    this.creatorIdentifier = s.creatorIdentifier;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccessResponse } from \"../response/sendAccessResponse\";\nimport { SendAccessView } from \"../view/sendAccessView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendAccess extends Domain {\n  id: string;\n  type: SendType;\n  name: EncString;\n  file: SendFile;\n  text: SendText;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(obj?: SendAccessResponse) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n        expirationDate: null,\n        creatorIdentifier: null,\n      },\n      [\"id\", \"expirationDate\", \"creatorIdentifier\"]\n    );\n\n    this.type = obj.type;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendAccessView> {\n    const model = new SendAccessView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n      },\n      null,\n      key\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(key);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(key);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","export class SendAccessRequest {\n  password: string;\n}\n","<form #form (ngSubmit)=\"load()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-center mt-5\">\n    <div class=\"col-12\">\n      <h1 class=\"lead text-center mb-4\">Bitwarden Send</h1>\n    </div>\n    <div class=\"col-12 text-center\" *ngIf=\"creatorIdentifier != null\">\n      <p>{{ \"sendCreatorIdentifier\" | i18n: creatorIdentifier }}</p>\n    </div>\n    <div class=\"col-8\" *ngIf=\"hideEmail\">\n      <app-callout type=\"warning\" title=\"{{ 'warning' | i18n }}\">\n        {{ \"viewSendHiddenEmailWarning\" | i18n }}\n        <a href=\"https://bitwarden.com/help/receive-send/\" target=\"_blank\">{{\n          \"learnMore\" | i18n\n        }}</a\n        >.\n      </app-callout>\n    </div>\n  </div>\n  <div class=\"row justify-content-center\">\n    <div class=\"col-5\">\n      <div class=\"card d-block\">\n        <div class=\"card-body\" *ngIf=\"loading\" class=\"text-center\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && passwordRequired\">\n          <p>{{ \"sendProtectedPassword\" | i18n }}</p>\n          <p>{{ \"sendProtectedPasswordDontKnow\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"password\">{{ \"password\" | i18n }}</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"Password\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"password\"\n              required\n              appInputVerbatim\n              appAutofocus\n            />\n          </div>\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && unavailable\">\n          {{ \"sendAccessUnavailable\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && error\">\n          {{ \"unexpectedError\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && !passwordRequired && send\">\n          <p class=\"text-center\">\n            <b>{{ send.name }}</b>\n          </p>\n          <hr />\n          <!-- Text -->\n          <ng-container *ngIf=\"send.type === sendType.Text\">\n            <app-callout *ngIf=\"send.text.hidden\" type=\"tip\">{{\n              \"sendHiddenByDefault\" | i18n\n            }}</app-callout>\n            <div class=\"form-group\">\n              <textarea\n                id=\"text\"\n                rows=\"8\"\n                name=\"Text\"\n                [(ngModel)]=\"sendText\"\n                class=\"form-control\"\n                readonly\n              ></textarea>\n            </div>\n            <button\n              class=\"btn btn-block btn-link\"\n              type=\"button\"\n              (click)=\"toggleText()\"\n              *ngIf=\"send.text.hidden\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showText, 'bwi-eye-slash': showText }\"\n              ></i>\n              {{ \"toggleVisibility\" | i18n }}\n            </button>\n            <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"copyText()\">\n              <i class=\"bwi bwi-copy\" aria-hidden=\"true\"></i> {{ \"copyValue\" | i18n }}\n            </button>\n          </ng-container>\n          <!-- File -->\n          <ng-container *ngIf=\"send.type === sendType.File\">\n            <p>{{ send.file.fileName }}</p>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              (click)=\"download()\"\n              *ngIf=\"!downloading\"\n            >\n              <i class=\"bwi bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"downloadFile\" | i18n }} ({{ send.file.sizeName }})\n            </button>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              *ngIf=\"downloading\"\n              disabled=\"true\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </ng-container>\n          <p *ngIf=\"expirationDate\" class=\"text-center text-muted\">\n            Expires: {{ expirationDate | date: \"medium\" }}\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 text-center mt-5 text-muted\">\n      <p class=\"mb-0\">\n        {{ \"sendAccessTaglineProductDesc\" | i18n }}<br />\n        {{ \"sendAccessTaglineLearnMore\" | i18n }}\n        <a href=\"https://www.bitwarden.com/products/send?source=web-vault\" target=\"_blank\"\n          >Bitwarden Send</a\n        >\n        {{ \"sendAccessTaglineOr\" | i18n }}\n        <a href=\"https://vault.bitwarden.com/#/register\" target=\"_blank\">{{\n          \"sendAccessTaglineSignUp\" | i18n\n        }}</a>\n        {{ \"sendAccessTaglineTryToday\" | i18n }}\n      </p>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SEND_KDF_ITERATIONS } from \"@bitwarden/common/enums/kdfType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { SendAccess } from \"@bitwarden/common/models/domain/sendAccess\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { SendAccessRequest } from \"@bitwarden/common/models/request/sendAccessRequest\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\nimport { SendAccessResponse } from \"@bitwarden/common/models/response/sendAccessResponse\";\nimport { SendAccessView } from \"@bitwarden/common/models/view/sendAccessView\";\n\n@Component({\n  selector: \"app-send-access\",\n  templateUrl: \"access.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccessComponent implements OnInit {\n  send: SendAccessView;\n  sendType = SendType;\n  downloading = false;\n  loading = true;\n  passwordRequired = false;\n  formPromise: Promise<SendAccessResponse>;\n  password: string;\n  showText = false;\n  unavailable = false;\n  error = false;\n  hideEmail = false;\n\n  private id: string;\n  private key: string;\n  private decKey: SymmetricCryptoKey;\n  private accessRequest: SendAccessRequest;\n\n  constructor(\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private fileDownloadService: FileDownloadService\n  ) {}\n\n  get sendText() {\n    if (this.send == null || this.send.text == null) {\n      return null;\n    }\n    return this.showText ? this.send.text.text : this.send.text.maskedText;\n  }\n\n  get expirationDate() {\n    if (this.send == null || this.send.expirationDate == null) {\n      return null;\n    }\n    return this.send.expirationDate;\n  }\n\n  get creatorIdentifier() {\n    if (this.send == null || this.send.creatorIdentifier == null) {\n      return null;\n    }\n    return this.send.creatorIdentifier;\n  }\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      this.id = params.sendId;\n      this.key = params.key;\n      if (this.key == null || this.id == null) {\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async download() {\n    if (this.send == null || this.decKey == null) {\n      return;\n    }\n\n    if (this.downloading) {\n      return;\n    }\n\n    const downloadData = await this.apiService.getSendFileDownloadData(\n      this.send,\n      this.accessRequest\n    );\n\n    if (Utils.isNullOrWhitespace(downloadData.url)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingSendFile\"));\n      return;\n    }\n\n    this.downloading = true;\n    const response = await fetch(new Request(downloadData.url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      this.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, this.decKey);\n      this.fileDownloadService.download({\n        fileName: this.send.file.fileName,\n        blobData: decBuf,\n        downloadMethod: \"save\",\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    this.downloading = false;\n  }\n\n  copyText() {\n    this.platformUtilsService.copyToClipboard(this.send.text.text);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendTypeText\"))\n    );\n  }\n\n  toggleText() {\n    this.showText = !this.showText;\n  }\n\n  async load() {\n    this.unavailable = false;\n    this.error = false;\n    this.hideEmail = false;\n    const keyArray = Utils.fromUrlB64ToArray(this.key);\n    this.accessRequest = new SendAccessRequest();\n    if (this.password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        this.password,\n        keyArray,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      this.accessRequest.password = Utils.fromBufferToB64(passwordHash);\n    }\n    try {\n      let sendResponse: SendAccessResponse = null;\n      if (this.loading) {\n        sendResponse = await this.apiService.postSendAccess(this.id, this.accessRequest);\n      } else {\n        this.formPromise = this.apiService.postSendAccess(this.id, this.accessRequest);\n        sendResponse = await this.formPromise;\n      }\n      this.passwordRequired = false;\n      const sendAccess = new SendAccess(sendResponse);\n      this.decKey = await this.cryptoService.makeSendKey(keyArray);\n      this.send = await sendAccess.decrypt(this.decKey);\n      this.showText = this.send.text != null ? !this.send.text.hidden : true;\n    } catch (e) {\n      if (e instanceof ErrorResponse) {\n        if (e.statusCode === 401) {\n          this.passwordRequired = true;\n        } else if (e.statusCode === 404) {\n          this.unavailable = true;\n        } else {\n          this.error = true;\n        }\n      }\n    }\n    this.loading = false;\n    this.hideEmail =\n      this.creatorIdentifier == null &&\n      !this.passwordRequired &&\n      !this.loading &&\n      !this.unavailable;\n  }\n}\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\n@Directive()\nexport class SendComponent implements OnInit, OnDestroy {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.DisableSend)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableSend = policyAppliesToActiveUser;\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new UntypedFormGroup({\n    selectedDeletionDatePreset: new UntypedFormControl(),\n    selectedExpirationDatePreset: new UntypedFormControl(),\n    defaultDeletionDateTime: new UntypedFormControl(),\n    defaultExpirationDateTime: new UntypedFormControl(),\n    fallbackDeletionDate: new UntypedFormControl(),\n    fallbackDeletionTime: new UntypedFormControl(),\n    fallbackExpirationDate: new UntypedFormControl(),\n    fallbackExpirationTime: new UntypedFormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as UntypedFormControl;\n  }\n\n  get selectedExpirationDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as UntypedFormControl;\n  }\n\n  get defaultDeletionDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as UntypedFormControl;\n  }\n\n  get defaultExpirationDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as UntypedFormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { Send } from \"@bitwarden/common/models/domain/send\";\nimport { SendFileView } from \"@bitwarden/common/models/view/sendFileView\";\nimport { SendTextView } from \"@bitwarden/common/models/view/sendTextView\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit, OnDestroy {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  private sendLinkBaseUrl: string;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.DisableSend)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableSend = policyAppliesToActiveUser;\n      });\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.SendOptions, (p) => p.data.disableHideEmail)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableHideEmail = policyAppliesToActiveUser;\n      });\n\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        const copySuccess = await this.copyLinkToClipboard(this.link);\n        if (copySuccess ?? true) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n          );\n        } else {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n            null,\n            this.i18nService.t(\"ok\"),\n            null,\n            \"success\",\n            null\n          );\n          await this.copyLinkToClipboard(this.link);\n        }\n      }\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n}\n","<div class=\"row\" [formGroup]=\"datesForm\">\n  <div class=\"col-6 form-group\">\n    <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n    <ng-template #deletionDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <ng-container *ngSwitchCase=\"'firefox'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              [readOnly]=\"disableSend\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <input\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              type=\"time\"\n              name=\"DeletionTimeDate\"\n              formControlName=\"fallbackDeletionTime\"\n              required\n              placeholder=\"HH:MM AM/PM\"\n              [readOnly]=\"disableSend\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'safari'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              [readOnly]=\"disableSend\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <select\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              [required]=\"!editMode\"\n              formControlName=\"fallbackDeletionTime\"\n              name=\"SafariDeletionTime\"\n            >\n              <option\n                *ngFor=\"let o of safariDeletionTimePresetOptions\"\n                [ngValue]=\"o.twentyFourHour\"\n              >\n                {{ o.twelveHour }}\n              </option>\n            </select>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"deletionDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"DeletionDate\"\n            formControlName=\"defaultDeletionDateTime\"\n            required\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"deletionDate\"\n        name=\"SelectedDeletionDatePreset\"\n        formControlName=\"selectedDeletionDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedDeletionDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"deletionDateDesc\" | i18n }}</div>\n  </div>\n  <div class=\"col-6 form-group\">\n    <div class=\"d-flex\">\n      <label for=\"expirationDate\">{{ \"expirationDate\" | i18n }}</label>\n      <a\n        href=\"#\"\n        appStopClick\n        (click)=\"clearExpiration()\"\n        class=\"ml-auto\"\n        *ngIf=\"editMode && !disabled\"\n      >\n        {{ \"clear\" | i18n }}\n      </a>\n    </div>\n    <ng-template #expirationDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <div *ngSwitchCase=\"'firefox'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n        <!-- non-default cases are not showing up -->\n        <div *ngSwitchCase=\"'safari'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            [required]=\"!editMode\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"expirationDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"ExpirationDate\"\n            formControlName=\"defaultExpirationDateTime\"\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"expirationDate\"\n        name=\"SelectedExpirationDatePreset\"\n        formControlName=\"selectedExpirationDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedExpirationDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"expirationDateDesc\" | i18n }}</div>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"@bitwarden/angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"sendAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"sendAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"send\">\n        <app-callout *ngIf=\"disableSend\">\n          <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n        </app-callout>\n        <app-callout *ngIf=\"!disableSend && disableHideEmail\">\n          <span>{{ \"sendOptionsPolicyInEffect\" | i18n }}</span>\n          <ul class=\"mb-0\">\n            <li>{{ \"sendDisableHideEmailInEffect\" | i18n }}</li>\n          </ul>\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"send.name\"\n              required\n              [readOnly]=\"disableSend\"\n            />\n            <small class=\"form-text text-muted\">{{ \"sendNameDesc\" | i18n }}</small>\n          </div>\n        </div>\n        <div class=\"row\" *ngIf=\"!editMode\">\n          <div class=\"col-6 form-group\">\n            <label>{{ \"whatTypeOfSend\" | i18n }}</label>\n            <div class=\"form-check\" *ngFor=\"let o of typeOptions\">\n              <input\n                class=\"form-check-input\"\n                type=\"radio\"\n                [(ngModel)]=\"send.type\"\n                name=\"Type_{{ o.value }}\"\n                id=\"type_{{ o.value }}\"\n                [value]=\"o.value\"\n                (change)=\"typeChanged(o)\"\n                [checked]=\"send.type === o.value\"\n              />\n              <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n                {{ o.name }}\n              </label>\n            </div>\n          </div>\n        </div>\n        <!-- Text -->\n        <ng-container *ngIf=\"send.type === sendType.Text\">\n          <div class=\"form-group\">\n            <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n            <textarea\n              id=\"text\"\n              name=\"Text.Text\"\n              rows=\"6\"\n              [(ngModel)]=\"send.text.text\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <small class=\"form-text text-muted\">{{ \"sendTextDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.text.hidden\"\n                id=\"text-hidden\"\n                name=\"Text.Hidden\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"text-hidden\">{{\n                \"textHiddenByDefault\" | i18n\n              }}</label>\n            </div>\n          </div>\n        </ng-container>\n        <!-- File -->\n        <ng-container *ngIf=\"send.type === sendType.File\">\n          <div class=\"form-group\">\n            <div *ngIf=\"editMode\">\n              <strong class=\"d-block\">{{ \"file\" | i18n }}</strong>\n              {{ send.file.fileName }} ({{ send.file.sizeName }})\n            </div>\n            <div *ngIf=\"!editMode\">\n              <label for=\"file\">{{ \"file\" | i18n }}</label>\n              <input\n                type=\"file\"\n                id=\"file\"\n                class=\"form-control-file\"\n                name=\"file\"\n                required\n                [disabled]=\"disableSend\"\n              />\n              <small class=\"form-text text-muted\"\n                >{{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}</small\n              >\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-5\">{{ \"share\" | i18n }}</h3>\n        <div class=\"form-group\" *ngIf=\"link\">\n          <label for=\"link\">{{ \"sendLinkLabel\" | i18n }}</label>\n          <input\n            type=\"text\"\n            readonly\n            id=\"link\"\n            name=\"Link\"\n            [(ngModel)]=\"link\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [(ngModel)]=\"copyLink\"\n              id=\"copy-link\"\n              name=\"CopyLink\"\n            />\n            <label class=\"form-check-label\" for=\"copy-link\">{{\n              \"copySendLinkOnSave\" | i18n\n            }}</label>\n          </div>\n        </div>\n        <div\n          id=\"options-header\"\n          class=\"section-header d-flex flex-row align-items-center mt-5\"\n          (click)=\"toggleOptions()\"\n        >\n          <h3 class=\"mb-0 mr-2\">{{ \"options\" | i18n }}</h3>\n          <a class=\"mb-1\" href=\"#\" appStopClick role=\"button\">\n            <i\n              class=\"bwi\"\n              aria-hidden=\"true\"\n              [ngClass]=\"{ 'bwi-angle-down': !showOptions, 'bwi-chevron-up': showOptions }\"\n            ></i>\n          </a>\n        </div>\n        <div id=\"options\" [hidden]=\"!showOptions\">\n          <app-send-efflux-dates\n            [initialDeletionDate]=\"send.deletionDate\"\n            [initialExpirationDate]=\"send.expirationDate\"\n            [editMode]=\"editMode\"\n            [disabled]=\"disableSend\"\n            (datesChanged)=\"setDates($event)\"\n          >\n          </app-send-efflux-dates>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"maxAccessCount\">{{ \"maxAccessCount\" | i18n }}</label>\n              <input\n                id=\"maxAccessCount\"\n                class=\"form-control\"\n                type=\"number\"\n                name=\"MaxAccessCount\"\n                [(ngModel)]=\"send.maxAccessCount\"\n                min=\"1\"\n                [readOnly]=\"disableSend\"\n              />\n              <div class=\"form-text text-muted small\">{{ \"maxAccessCountDesc\" | i18n }}</div>\n            </div>\n            <div class=\"col-6 form-group\" *ngIf=\"editMode\">\n              <label for=\"accessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n              <input\n                id=\"accessCount\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"AccessCount\"\n                readonly\n                [(ngModel)]=\"send.accessCount\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"password\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Password\"\n                  [(ngModel)]=\"password\"\n                  [readOnly]=\"disableSend\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePasswordVisible()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-text text-muted small\">{{ \"sendPasswordDesc\" | i18n }}</div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <div class=\"form-text text-muted small\">{{ \"sendNotesDesc\" | i18n }}</div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.hideEmail\"\n                id=\"hideEmail\"\n                name=\"HideEmail\"\n                [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"hideEmail\">\n                {{ \"hideEmail\" | i18n }}\n              </label>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.disabled\"\n                id=\"disabled\"\n                name=\"Disabled\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"disabled\">{{ \"disableThisSend\" | i18n }}</label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [ngClass]=\"{ loading: form.loading }\"\n          [disabled]=\"form.loading || disableSend\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"send\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    // Copy function on web depends on the modal being open or not. Since this event occurs during a transition\n    // of the modal closing we need to add a small delay to make sure state of the DOM is consistent.\n    return new Promise((resolve) => {\n      window.setTimeout(() => resolve(super.copyLinkToClipboard(link)), 500);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-3 groupings\">\n      <div class=\"card vault-filters\">\n        <div class=\"card-header d-flex\">\n          {{ \"filters\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <input\n            type=\"search\"\n            placeholder=\"{{ searchPlaceholder || ('searchSends' | i18n) }}\"\n            id=\"search\"\n            class=\"form-control\"\n            [(ngModel)]=\"searchText\"\n            (input)=\"searchTextChanged()\"\n            autocomplete=\"off\"\n            appAutofocus\n          />\n          <div class=\"filter\">\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedAll }\">\n                <span class=\"filter-buttons\">\n                  <button class=\"filter-button\" appStopClick (click)=\"selectAll()\">\n                    <i class=\"bwi bwi-fw bwi-filter\"></i>{{ \"allSends\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n          <div class=\"filter\">\n            <div class=\"filter-heading\">\n              <h3>{{ \"types\" | i18n }}</h3>\n            </div>\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.Text }\">\n                <span class=\"filter-buttons\">\n                  <button class=\"filter-button\" appStopClick (click)=\"selectType(sendType.Text)\">\n                    <i class=\"bwi bwi-fw bwi-file-text\"></i>{{ \"sendTypeText\" | i18n }}\n                  </button>\n                </span>\n              </li>\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.File }\">\n                <span class=\"filter-buttons\">\n                  <button class=\"filter-button\" appStopClick (click)=\"selectType(sendType.File)\">\n                    <i class=\"bwi bwi-fw bwi-file\"></i>{{ \"sendTypeFile\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"send\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addSend()\"\n            [disabled]=\"disableSend\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <!--Listing Table-->\n      <table class=\"table table-hover table-list\" *ngIf=\"filteredSends && filteredSends.length\">\n        <tbody>\n          <tr *ngFor=\"let s of filteredSends\">\n            <td class=\"table-list-icon\">\n              <div class=\"icon\" aria-hidden=\"true\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type == sendType.File\"></i>\n                <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type == sendType.Text\"></i>\n              </div>\n            </td>\n            <td class=\"reduced-lh wrap\">\n              <a href=\"#\" appStopClick appStopProp (click)=\"editSend(s)\">{{ s.name }}</a>\n              <ng-container *ngIf=\"s.disabled\">\n                <i\n                  class=\"bwi bwi-exclamation-triangle\"\n                  appStopProp\n                  title=\"{{ 'disabled' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.password\">\n                <i\n                  class=\"bwi bwi-key\"\n                  appStopProp\n                  title=\"{{ 'password' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"password\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.maxAccessCountReached\">\n                <i\n                  class=\"bwi bwi-ban\"\n                  appStopProp\n                  title=\"{{ 'maxAccessCountReached' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.expired\">\n                <i\n                  class=\"bwi bwi-clock\"\n                  appStopProp\n                  title=\"{{ 'expired' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.pendingDelete\">\n                <i\n                  class=\"bwi bwi-trash\"\n                  appStopProp\n                  title=\"{{ 'pendingDeletion' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n              </ng-container>\n              <br />\n              <small appStopProp>{{ s.deletionDate | date: \"medium\" }}</small>\n            </td>\n            <td class=\"table-list-options\">\n              <button\n                [bitMenuTriggerFor]=\"sendOptions\"\n                class=\"tw-border-none tw-bg-transparent tw-text-main\"\n                type=\"button\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu #sendOptions>\n                <button bitMenuItem (click)=\"copy(s)\">\n                  <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                  {{ \"copySendLink\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"removePassword(s)\" *ngIf=\"s.password && !disableSend\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"removePassword\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"delete(s)\">\n                  <span class=\"tw-text-danger\">\n                    <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                    {{ \"delete\" | i18n }}\n                  </span>\n                </button>\n              </bit-menu>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"no-items\" *ngIf=\"filteredSends && !filteredSends.length\">\n        <ng-container *ngIf=\"!loaded\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"loaded\">\n          <img class=\"no-items-image\" aria-hidden=\"true\" />\n          <p>{{ \"noSendsInList\" | i18n }}</p>\n          <button (click)=\"addSend()\" class=\"btn btn-outline-primary\" [disabled]=\"disableSend\">\n            <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #sendAddEdit></ng-template>\n","import { Component, NgZone, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SendComponent as BaseSendComponent } from \"@bitwarden/angular/components/send/send.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\n\nconst BroadcasterSubscriptionId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send\",\n  templateUrl: \"send.component.html\",\n})\nexport class SendComponent extends BaseSendComponent {\n  @ViewChild(\"sendAddEdit\", { read: ViewContainerRef, static: true })\n  sendAddEditModalRef: ViewContainerRef;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    searchService: SearchService,\n    policyService: PolicyService,\n    private modalService: ModalService,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n\n    // Broadcaster subscription - load if sync completes in the background\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n\n    const component = await this.editSend(null);\n    component.type = this.type;\n  }\n\n  async editSend(send: SendView) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.sendAddEditModalRef,\n      (comp) => {\n        comp.sendId = send == null ? null : send.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-deauthorize-sessions\",\n  templateUrl: \"deauthorize-sessions.component.html\",\n})\nexport class DeauthorizeSessionsComponent {\n  masterPassword: Verification;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postSecurityStamp(request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"sessionsDeauthorized\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deAuthTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deAuthTitle\">{{ \"deauthorizeSessions\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deauthorizeSessionsDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deauthorizeSessionsWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deauthorizeSessions\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { AccountService } from \"@bitwarden/common/abstractions/account/account.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-delete-account\",\n  templateUrl: \"delete-account.component.html\",\n})\nexport class DeleteAccountComponent {\n  formPromise: Promise<void>;\n\n  deleteForm = this.formBuilder.group({\n    verification: undefined as Verification | undefined,\n  });\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private formBuilder: FormBuilder,\n    private accountService: AccountService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const verification = this.deleteForm.get(\"verification\").value;\n      this.formPromise = this.accountService.delete(verification);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteAccountTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      [formGroup]=\"deleteForm\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deleteAccountTitle\">{{ \"deleteAccount\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deleteAccountDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n        <app-user-verification ngDefaultControl formControlName=\"verification\" name=\"verification\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteAccount\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class EmailTokenRequest extends SecretVerificationRequest {\n  newEmail: string;\n  masterPasswordHash: string;\n}\n","import { EmailTokenRequest } from \"./emailTokenRequest\";\n\nexport class EmailRequest extends EmailTokenRequest {\n  newMasterPasswordHash: string;\n  token: string;\n  key: string;\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <app-callout type=\"warning\" *ngIf=\"showTwoFactorEmailWarning\">\n    {{ \"changeEmailTwoFactorWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          [readonly]=\"tokenSent\"\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"newEmail\">{{ \"newEmail\" | i18n }}</label>\n        <input\n          id=\"newEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"NewEmail\"\n          [(ngModel)]=\"newEmail\"\n          required\n          [readonly]=\"tokenSent\"\n          inputmode=\"email\"\n          appInputVerbatim=\"false\"\n        />\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"tokenSent\">\n    <hr />\n    <p>{{ \"changeEmailDesc\" | i18n: newEmail }}</p>\n    <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"token\">{{ \"code\" | i18n }}</label>\n          <input\n            id=\"token\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Token\"\n            [(ngModel)]=\"token\"\n            required\n            appInputVerbatim\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span *ngIf=\"!tokenSent\">{{ \"continue\" | i18n }}</span>\n    <span *ngIf=\"tokenSent\">{{ \"changeEmail\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" *ngIf=\"tokenSent\" (click)=\"reset()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { EmailRequest } from \"@bitwarden/common/models/request/emailRequest\";\nimport { EmailTokenRequest } from \"@bitwarden/common/models/request/emailTokenRequest\";\n\n@Component({\n  selector: \"app-change-email\",\n  templateUrl: \"change-email.component.html\",\n})\nexport class ChangeEmailComponent implements OnInit {\n  masterPassword: string;\n  newEmail: string;\n  token: string;\n  tokenSent = false;\n  showTwoFactorEmailWarning = false;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    const twoFactorProviders = await this.apiService.getTwoFactorProviders();\n    this.showTwoFactorEmailWarning = twoFactorProviders.data.some(\n      (p) => p.type === TwoFactorProviderType.Email && p.enabled\n    );\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    this.newEmail = this.newEmail.trim().toLowerCase();\n    if (!this.tokenSent) {\n      const request = new EmailTokenRequest();\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      try {\n        this.formPromise = this.apiService.postEmailToken(request);\n        await this.formPromise;\n        this.tokenSent = true;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const request = new EmailRequest();\n      request.token = this.token;\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.newEmail,\n        kdf,\n        kdfIterations\n      );\n      request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        newKey\n      );\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n      request.key = newEncKey[1].encryptedString;\n      try {\n        this.formPromise = this.apiService.postEmail(request);\n        await this.formPromise;\n        this.reset();\n        this.platformUtilsService.showToast(\n          \"success\",\n          this.i18nService.t(\"emailChanged\"),\n          this.i18nService.t(\"logBackIn\")\n        );\n        this.messagingService.send(\"logout\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n\n  reset() {\n    this.token = this.newEmail = this.masterPassword = null;\n    this.tokenSent = false;\n  }\n}\n","export class UpdateProfileRequest {\n  name: string;\n  masterPasswordHint: string;\n  culture = \"en-US\"; // deprecated\n\n  constructor(name: string, masterPasswordHint: string) {\n    this.name = name;\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"profile && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"profile.name\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">{{ \"email\" | i18n }}</label>\n        <input\n          id=\"email\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Email\"\n          [(ngModel)]=\"profile.email\"\n          readonly\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"mb-3\">\n        <app-avatar\n          data=\"{{ profile | userName }}\"\n          [email]=\"profile.email\"\n          dynamic=\"true\"\n          size=\"75\"\n          fontSize=\"35\"\n        >\n        </app-avatar>\n      </div>\n      <hr />\n      <p *ngIf=\"fingerprint\">\n        {{ \"yourAccountsFingerprint\" | i18n }}:\n        <a\n          href=\"https://bitwarden.com/help/fingerprint-phrase/\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i></a\n        ><br />\n        <code>{{ fingerprint }}</code>\n      </p>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UpdateProfileRequest } from \"@bitwarden/common/models/request/updateProfileRequest\";\nimport { ProfileResponse } from \"@bitwarden/common/models/response/profileResponse\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"profile.component.html\",\n})\nexport class ProfileComponent implements OnInit {\n  loading = true;\n  profile: ProfileResponse;\n  fingerprint: string;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.profile = await this.apiService.getProfile();\n    this.loading = false;\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    if (fingerprint != null) {\n      this.fingerprint = fingerprint.join(\"-\");\n    }\n  }\n\n  async submit() {\n    try {\n      const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\n      this.formPromise = this.apiService.putProfile(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"accountUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myAccount\" | i18n }}</h1>\n</div>\n<app-profile></app-profile>\n<ng-container *ngIf=\"showChangeEmail\">\n  <div class=\"secondary-header\">\n    <h1>{{ \"changeEmail\" | i18n }}</h1>\n  </div>\n  <app-change-email></app-change-email>\n</ng-container>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button bitButton buttonType=\"danger\" (click)=\"deauthorizeSessions()\">\n      {{ \"deauthorizeSessions\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"deleteAccount()\">\n      {{ \"deleteAccount\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deauthorizeSessionsTemplate></ng-template>\n<ng-template #purgeVaultTemplate></ng-template>\n<ng-template #deleteAccountTemplate></ng-template>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { DeauthorizeSessionsComponent } from \"./deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"./delete-account.component\";\nimport { PurgeVaultComponent } from \"./purge-vault.component\";\n\n@Component({\n  selector: \"app-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"deauthorizeSessionsTemplate\", { read: ViewContainerRef, static: true })\n  deauthModalRef: ViewContainerRef;\n  @ViewChild(\"purgeVaultTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"deleteAccountTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  showChangeEmail = true;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeEmail = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async deauthorizeSessions() {\n    await this.modalService.openViewRef(DeauthorizeSessionsComponent, this.deauthModalRef);\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef);\n  }\n\n  async deleteAccount() {\n    await this.modalService.openViewRef(DeleteAccountComponent, this.deleteModalRef);\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"./organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.plan === \"families\") {\n        this.orgPlansComponent.plan = PlanType.FamiliesAnnually;\n        this.orgPlansComponent.product = ProductType.Families;\n      } else if (qParams.plan === \"teams\") {\n        this.orgPlansComponent.plan = PlanType.TeamsAnnually;\n        this.orgPlansComponent.product = ProductType.Teams;\n      } else if (qParams.plan === \"enterprise\") {\n        this.orgPlansComponent.plan = PlanType.EnterpriseAnnually;\n        this.orgPlansComponent.product = ProductType.Enterprise;\n      }\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"page-header\">\n        <h1>{{ \"newOrganization\" | i18n }}</h1>\n      </div>\n      <p>{{ \"newOrganizationDesc\" | i18n }}</p>\n      <app-organization-plans></app-organization-plans>\n    </div>\n  </div>\n</div>\n","export class UpdateDomainsRequest {\n  equivalentDomains: string[][];\n  excludedGlobalEquivalentDomains: number[];\n}\n","<div class=\"page-header\">\n  <h1>{{ \"domainRules\" | i18n }}</h1>\n</div>\n<p>{{ \"domainRulesDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <h2>{{ \"customEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"form-group d-flex\" *ngFor=\"let d of custom; let i = index; trackBy: indexTrackBy\">\n      <div class=\"flex-fill\">\n        <label for=\"customDomain_{{ i }}\" class=\"sr-only\">{{\n          \"customDomainX\" | i18n: i + 1\n        }}</label>\n        <textarea\n          class=\"form-control\"\n          name=\"CustomDomain[{{ i }}]\"\n          id=\"customDomain_{{ i }}\"\n          [(ngModel)]=\"custom[i]\"\n          placeholder=\"{{ 'ex' | i18n }} google.com, gmail.com\"\n          required\n        ></textarea>\n      </div>\n      <button\n        type=\"button\"\n        class=\"btn btn-link text-danger ml-2\"\n        (click)=\"remove(i)\"\n        appA11yTitle=\"{{ 'remove' | i18n }}\"\n      >\n        <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <button type=\"button\" (click)=\"add()\" class=\"btn btn-outline-secondary btn-sm mb-2\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomDomain\" | i18n }}\n    </button>\n    <small class=\"text-muted d-block mb-3\">{{ \"newCustomDomainDesc\" | i18n }}</small>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n  <h2 class=\"spaced-header\">{{ \"globalEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <table class=\"table table-hover table-list\" *ngIf=\"!loading && global.length > 0\">\n    <tbody>\n      <tr *ngFor=\"let d of global\">\n        <td [ngClass]=\"{ 'table-list-strike': d.excluded }\">{{ d.domains }}</td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"!d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                {{ \"exclude\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-plus\" aria-hidden=\"true\"></i>\n                {{ \"include\" | i18n }}\n              </a>\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"customize(d)\">\n                <i class=\"bwi bwi-fw bwi-cut\" aria-hidden=\"true\"></i>\n                {{ \"customize\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UpdateDomainsRequest } from \"@bitwarden/common/models/request/updateDomainsRequest\";\n\n@Component({\n  selector: \"app-domain-rules\",\n  templateUrl: \"domain-rules.component.html\",\n})\nexport class DomainRulesComponent implements OnInit {\n  loading = true;\n  custom: string[] = [];\n  global: any[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const response = await this.apiService.getSettingsDomains();\n    this.loading = false;\n    if (response.equivalentDomains != null) {\n      this.custom = response.equivalentDomains.map((d) => d.join(\", \"));\n    }\n    if (response.globalEquivalentDomains != null) {\n      this.global = response.globalEquivalentDomains.map((d) => {\n        return {\n          domains: d.domains.join(\", \"),\n          excluded: d.excluded,\n          key: d.type,\n        };\n      });\n    }\n  }\n\n  toggleExcluded(globalDomain: any) {\n    globalDomain.excluded = !globalDomain.excluded;\n  }\n\n  customize(globalDomain: any) {\n    globalDomain.excluded = true;\n    this.custom.push(globalDomain.domains);\n  }\n\n  remove(index: number) {\n    this.custom.splice(index, 1);\n  }\n\n  add() {\n    this.custom.push(\"\");\n  }\n\n  async submit() {\n    const request = new UpdateDomainsRequest();\n    request.excludedGlobalEquivalentDomains = this.global\n      .filter((d) => d.excluded)\n      .map((d) => d.key);\n    if (request.excludedGlobalEquivalentDomains.length === 0) {\n      request.excludedGlobalEquivalentDomains = null;\n    }\n    request.equivalentDomains = this.custom\n      .filter((d) => d != null && d.trim() !== \"\")\n      .map((d) => d.split(\",\").map((d2) => d2.trim()));\n    if (request.equivalentDomains.length === 0) {\n      request.equivalentDomains = null;\n    }\n\n    try {\n      this.formPromise = this.apiService.putSettingsDomains(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"domainsUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  indexTrackBy(index: number, obj: any): any {\n    return index;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\n\n@Component({\n  selector: \"emergency-access-attachments\",\n  templateUrl: \"../vault/attachments.component.html\",\n})\nexport class EmergencyAccessAttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = true;\n  canAccessAttachments = true;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async init() {\n    // Do nothing since cipher is already decoded\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return false;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../vault/add-edit.component.html\",\n})\nexport class EmergencyAddEditComponent extends BaseAddEditComponent {\n  originalCipher: Cipher = null;\n  viewOnly = true;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    messagingService: MessagingService,\n    eventService: EventService,\n    policyService: PolicyService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async load() {\n    this.title = this.i18nService.t(\"viewItem\");\n  }\n\n  protected async loadCipher() {\n    return Promise.resolve(this.originalCipher);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"vault\" | i18n }}</h1>\n</div>\n<div class=\"mt-4\">\n  <ng-container *ngIf=\"ciphers.length\">\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown *ngIf=\"c.hasAttachments\">\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"viewAttachments(c)\">\n                  <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n                  {{ \"attachments\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #attachments></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { EmergencyAccessViewResponse } from \"@bitwarden/common/models/response/emergencyAccessResponse\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { EmergencyAccessAttachmentsComponent } from \"./emergency-access-attachments.component\";\nimport { EmergencyAddEditComponent } from \"./emergency-add-edit.component\";\n\n@Component({\n  selector: \"emergency-access-view\",\n  templateUrl: \"emergency-access-view.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessViewComponent implements OnInit {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n\n  id: string;\n  ciphers: CipherView[] = [];\n  loaded = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private modalService: ModalService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private apiService: ApiService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.route.params.subscribe((qParams) => {\n      if (qParams.id == null) {\n        return this.router.navigate([\"settings/emergency-access\"]);\n      }\n\n      this.id = qParams.id;\n\n      this.load();\n    });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    // eslint-disable-next-line\n    const [_, childComponent] = await this.modalService.openViewRef(\n      EmergencyAddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.cipher = cipher;\n      }\n    );\n\n    return childComponent;\n  }\n\n  async load() {\n    const response = await this.apiService.postEmergencyAccessView(this.id);\n    this.ciphers = await this.getAllCiphers(response);\n    this.loaded = true;\n  }\n\n  async viewAttachments(cipher: CipherView) {\n    await this.modalService.openViewRef(\n      EmergencyAccessAttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipher = cipher;\n        comp.emergencyAccessId = this.id;\n      }\n    );\n  }\n\n  protected async getAllCiphers(response: EmergencyAccessViewResponse): Promise<CipherView[]> {\n    const ciphers = response.ciphers;\n\n    const decCiphers: CipherView[] = [];\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(response.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    const promises: any[] = [];\n    ciphers.forEach((cipherResponse) => {\n      const cipherData = new CipherData(cipherResponse);\n      const cipher = new Cipher(cipherData);\n      promises.push(cipher.decrypt(oldEncKey).then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.cipherService.getLocaleSortingFunction());\n\n    return decCiphers;\n  }\n}\n","export enum EmergencyAccessStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  RecoveryInitiated = 3,\n  RecoveryApproved = 4,\n}\n","export enum EmergencyAccessType {\n  View = 0,\n  Takeover = 1,\n}\n","export class EmergencyAccessConfirmRequest {\n  key: string;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessInviteRequest {\n  email: string;\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessUpdateRequest {\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n  keyEncrypted?: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAddEditTitle\">\n          <app-premium-badge *ngIf=\"readOnly\"></app-premium-badge>\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteEmergencyContactDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"email\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n            />\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userAccess\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/emergency-access/#user-access\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeView\"\n            [value]=\"emergencyAccessType.View\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeView\">\n            {{ \"view\" | i18n }}\n            <small>{{ \"viewDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeTakeover\"\n            [value]=\"emergencyAccessType.Takeover\"\n            [(ngModel)]=\"type\"\n            [disabled]=\"readOnly\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeTakeover\">\n            {{ \"takeover\" | i18n }}\n            <small>{{ \"takeoverDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-group col-6 mt-4\">\n          <label for=\"waitTime\">{{ \"waitTime\" | i18n }}</label>\n          <select\n            id=\"waitTime\"\n            name=\"waitTime\"\n            [(ngModel)]=\"waitTime\"\n            class=\"form-control\"\n            [disabled]=\"readOnly\"\n          >\n            <option *ngFor=\"let o of waitTimes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n          <small class=\"text-muted\">{{ \"waitTimeDesc\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          buttonType=\"primary\"\n          bitButton\n          [loading]=\"loading || form.loading\"\n          [disabled]=\"readOnly\"\n        >\n          {{ \"save\" | i18n }}\n        </button>\n        <button bitButton buttonType=\"secondary\" type=\"button\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            bitButton\n            buttonType=\"danger\"\n            type=\"button\"\n            (click)=\"delete()\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EmergencyAccessType } from \"@bitwarden/common/enums/emergencyAccessType\";\nimport { EmergencyAccessInviteRequest } from \"@bitwarden/common/models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/models/request/emergencyAccessUpdateRequest\";\n\n@Component({\n  selector: \"emergency-access-add-edit\",\n  templateUrl: \"emergency-access-add-edit.component.html\",\n})\nexport class EmergencyAccessAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() emergencyAccessId: string;\n  @Output() onSaved = new EventEmitter();\n  @Output() onDeleted = new EventEmitter();\n\n  loading = true;\n  readOnly = false;\n  editMode = false;\n  title: string;\n  email: string;\n  type: EmergencyAccessType = EmergencyAccessType.View;\n\n  formPromise: Promise<any>;\n\n  emergencyAccessType = EmergencyAccessType;\n  waitTimes: { name: string; value: number }[];\n  waitTime: number;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.emergencyAccessId != null;\n\n    this.waitTimes = [\n      { name: this.i18nService.t(\"oneDay\"), value: 1 },\n      { name: this.i18nService.t(\"days\", \"2\"), value: 2 },\n      { name: this.i18nService.t(\"days\", \"7\"), value: 7 },\n      { name: this.i18nService.t(\"days\", \"14\"), value: 14 },\n      { name: this.i18nService.t(\"days\", \"30\"), value: 30 },\n      { name: this.i18nService.t(\"days\", \"90\"), value: 90 },\n    ];\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editEmergencyContact\");\n      try {\n        const emergencyAccess = await this.apiService.getEmergencyAccess(this.emergencyAccessId);\n        this.type = emergencyAccess.type;\n        this.waitTime = emergencyAccess.waitTimeDays;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteEmergencyContact\");\n      this.waitTime = this.waitTimes[2].value;\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new EmergencyAccessUpdateRequest();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.putEmergencyAccess(this.emergencyAccessId, request);\n      } else {\n        const request = new EmergencyAccessInviteRequest();\n        request.email = this.email.trim();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.postEmergencyAccessInvite(request);\n      }\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSaved.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    this.onDeleted.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"emergency-access-confirm\",\n  templateUrl: \"emergency-access-confirm.component.html\",\n})\nexport class EmergencyAccessConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() emergencyAccessId: string;\n  @Input() formPromise: Promise<any>;\n  @Output() onConfirmed = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n\n  constructor(\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\n      if (publicKeyResponse != null) {\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n        const fingerprint = await this.cryptoService.getFingerprint(this.userId, publicKey.buffer);\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    try {\n      this.onConfirmed.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export class EmergencyAccessPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ \"takeover\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPassword\"\n                type=\"password\"\n                name=\"NewMasterPasswordHash\"\n                class=\"form-control mb-1\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <app-password-strength\n                [password]=\"masterPassword\"\n                [email]=\"email\"\n                [showText]=\"true\"\n                (passwordStrengthResult)=\"getStrengthResult($event)\"\n              >\n              </app-password-strength>\n            </div>\n          </div>\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"password\"\n                name=\"MasterPasswordRetype\"\n                class=\"form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { takeUntil } from \"rxjs\";\n\nimport { ChangePasswordComponent } from \"@bitwarden/angular/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { EmergencyAccessPasswordRequest } from \"@bitwarden/common/models/request/emergencyAccessPasswordRequest\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\n@Component({\n  selector: \"emergency-access-takeover\",\n  templateUrl: \"emergency-access-takeover.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessTakeoverComponent\n  extends ChangePasswordComponent\n  implements OnInit, OnDestroy\n{\n  @Output() onDone = new EventEmitter();\n  @Input() emergencyAccessId: string;\n  @Input() name: string;\n  @Input() email: string;\n  @Input() kdf: KdfType;\n  @Input() kdfIterations: number;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private apiService: ApiService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    const response = await this.apiService.getEmergencyGrantorPolicies(this.emergencyAccessId);\n    if (response.data != null && response.data.length > 0) {\n      const policies = response.data.map(\n        (policyResponse: PolicyResponse) => new Policy(new PolicyData(policyResponse))\n      );\n\n      this.policyService\n        .masterPasswordPolicyOptions$(policies)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((enforcedPolicyOptions) => (this.enforcedPolicyOptions = enforcedPolicyOptions));\n    }\n  }\n\n  // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    const takeoverResponse = await this.apiService.postEmergencyAccessTakeover(\n      this.emergencyAccessId\n    );\n\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(takeoverResponse.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    if (oldEncKey == null) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"unexpectedError\")\n      );\n      return;\n    }\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      takeoverResponse.kdf,\n      takeoverResponse.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    const encKey = await this.cryptoService.remakeEncKey(key, oldEncKey);\n\n    const request = new EmergencyAccessPasswordRequest();\n    request.newMasterPasswordHash = masterPasswordHash;\n    request.key = encKey[1].encryptedString;\n\n    this.apiService.postEmergencyAccessPassword(this.emergencyAccessId, request);\n\n    try {\n      this.onDone.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"emergencyAccess\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"emergencyAccessDesc\" | i18n }}\n  <a href=\"https://bitwarden.com/help/emergency-access/\" target=\"_blank\" rel=\"noopener\">\n    {{ \"learnMore\" | i18n }}.\n  </a>\n</p>\n\n<p *ngIf=\"isOrganizationOwner\">\n  <b>{{ \"warning\" | i18n }}:</b> {{ \"emergencyAccessOwnerWarning\" | i18n }}\n</p>\n\n<div class=\"page-header d-flex\">\n  <h2>\n    {{ \"trustedEmergencyContacts\" | i18n }}\n    <app-premium-badge></app-premium-badge>\n  </h2>\n  <div class=\"ml-auto d-flex\">\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      type=\"button\"\n      (click)=\"invite()\"\n      [disabled]=\"!canAccessPremium\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-plus bwi-fw\"></i>\n      {{ \"addEmergencyContact\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"trustedContacts && trustedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of trustedContacts; let i = index\">\n      <td width=\"30\">\n        <app-avatar\n          [data]=\"c | userName\"\n          [email]=\"c.email\"\n          size=\"25\"\n          [circle]=\"true\"\n          [fontSize]=\"14\"\n        >\n        </app-avatar>\n      </td>\n      <td>\n        <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.email }}</a>\n        <span\n          bitBadge\n          badgeType=\"secondary\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n          >{{ \"invited\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\">{{\n          \"emergencyAccessRecoveryApproved\" | i18n\n        }}</span>\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"trustedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #trustedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n            (click)=\"reinvite(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"resendInvitation\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n            (click)=\"confirm(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"confirm\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n            (click)=\"approve(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"approve\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryInitiated ||\n              c.status === emergencyAccessStatusType.RecoveryApproved\n            \"\n            (click)=\"reject(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"reject\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!trustedContacts || !trustedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noTrustedContacts\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<div class=\"page-header spaced-header\">\n  <h2>{{ \"designatedEmergencyContacts\" | i18n }}</h2>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"grantedContacts && grantedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of grantedContacts; let i = index\">\n      <td width=\"30\">\n        <app-avatar\n          [data]=\"c | userName\"\n          [email]=\"c.email\"\n          size=\"25\"\n          [circle]=\"true\"\n          [fontSize]=\"14\"\n        >\n        </app-avatar>\n      </td>\n      <td>\n        <span>{{ c.email }}</span>\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.Invited\">{{\n          \"invited\" | i18n\n        }}</span>\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"success\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\"\n          >{{ \"emergencyAccessRecoveryApproved\" | i18n }}</span\n        >\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"grantedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #grantedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Confirmed\"\n            (click)=\"requestAccess(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"requestAccess\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.Takeover\n            \"\n            (click)=\"takeover(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n            {{ \"takeover\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.View\n            \"\n            [routerLink]=\"c.id\"\n          >\n            <i class=\"bwi bwi-fw bwi-eye\" aria-hidden=\"true\"></i>\n            {{ \"view\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!grantedContacts || !grantedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noGrantedAccess\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<ng-template #addEdit></ng-template>\n<ng-template #takeoverTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"@bitwarden/common/enums/emergencyAccessType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EmergencyAccessConfirmRequest } from \"@bitwarden/common/models/request/emergencyAccessConfirmRequest\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n} from \"@bitwarden/common/models/response/emergencyAccessResponse\";\n\nimport { EmergencyAccessAddEditComponent } from \"./emergency-access-add-edit.component\";\nimport { EmergencyAccessConfirmComponent } from \"./emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"./emergency-access-takeover.component\";\n\n@Component({\n  selector: \"emergency-access\",\n  templateUrl: \"emergency-access.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"takeoverTemplate\", { read: ViewContainerRef, static: true })\n  takeoverModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  loaded = false;\n  canAccessPremium: boolean;\n  trustedContacts: EmergencyAccessGranteeDetailsResponse[];\n  grantedContacts: EmergencyAccessGrantorDetailsResponse[];\n  emergencyAccessType = EmergencyAccessType;\n  emergencyAccessStatusType = EmergencyAccessStatusType;\n  actionPromise: Promise<any>;\n  isOrganizationOwner: boolean;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const orgs = await this.organizationService.getAll();\n    this.isOrganizationOwner = orgs.some((o) => o.isOwner);\n    this.load();\n  }\n\n  async load() {\n    this.trustedContacts = (await this.apiService.getEmergencyAccessTrusted()).data;\n    this.grantedContacts = (await this.apiService.getEmergencyAccessGranted()).data;\n    this.loaded = true;\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  async edit(details: EmergencyAccessGranteeDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.emergencyAccessId = details?.id;\n        comp.readOnly = !this.canAccessPremium;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSaved.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeleted.subscribe(() => {\n          modal.close();\n          this.remove(details);\n        });\n      }\n    );\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  async reinvite(contact: EmergencyAccessGranteeDetailsResponse) {\n    if (this.actionPromise != null) {\n      return;\n    }\n    this.actionPromise = this.apiService.postEmergencyAccessReinvite(contact.id);\n    await this.actionPromise;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenReinvited\", contact.email)\n    );\n    this.actionPromise = null;\n  }\n\n  async confirm(contact: EmergencyAccessGranteeDetailsResponse) {\n    function updateUser() {\n      contact.status = EmergencyAccessStatusType.Confirmed;\n    }\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n    if (autoConfirm == null || !autoConfirm) {\n      const [modal] = await this.modalService.openViewRef(\n        EmergencyAccessConfirmComponent,\n        this.confirmModalRef,\n        (comp) => {\n          comp.name = this.userNamePipe.transform(contact);\n          comp.emergencyAccessId = contact.id;\n          comp.userId = contact?.granteeId;\n          // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n          comp.onConfirmed.subscribe(async () => {\n            modal.close();\n\n            comp.formPromise = this.doConfirmation(contact);\n            await comp.formPromise;\n\n            updateUser();\n            this.platformUtilsService.showToast(\n              \"success\",\n              null,\n              this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n            );\n          });\n        }\n      );\n      return;\n    }\n\n    this.actionPromise = this.doConfirmation(contact);\n    await this.actionPromise;\n    updateUser();\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n    );\n    this.actionPromise = null;\n  }\n\n  async remove(\n    details: EmergencyAccessGranteeDetailsResponse | EmergencyAccessGrantorDetailsResponse\n  ) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteEmergencyAccess(details.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(details))\n      );\n\n      if (details instanceof EmergencyAccessGranteeDetailsResponse) {\n        this.removeGrantee(details);\n      } else {\n        this.removeGrantor(details);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async requestAccess(details: EmergencyAccessGrantorDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"requestAccessConfirmation\", details.waitTimeDays.toString()),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"requestAccess\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessInitiate(details.id);\n\n    details.status = EmergencyAccessStatusType.RecoveryInitiated;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"requestSent\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async approve(details: EmergencyAccessGranteeDetailsResponse) {\n    const type = this.i18nService.t(\n      details.type === EmergencyAccessType.View ? \"view\" : \"takeover\"\n    );\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"approveAccessConfirmation\", this.userNamePipe.transform(details), type),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"approve\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessApprove(details.id);\n    details.status = EmergencyAccessStatusType.RecoveryApproved;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyApproved\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async reject(details: EmergencyAccessGranteeDetailsResponse) {\n    await this.apiService.postEmergencyAccessReject(details.id);\n    details.status = EmergencyAccessStatusType.Confirmed;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyRejected\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async takeover(details: EmergencyAccessGrantorDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessTakeoverComponent,\n      this.takeoverModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.email = details.email;\n        comp.emergencyAccessId = details != null ? details.id : null;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDone.subscribe(() => {\n          modal.close();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"passwordResetFor\", this.userNamePipe.transform(details))\n          );\n        });\n      }\n    );\n  }\n\n  private removeGrantee(details: EmergencyAccessGranteeDetailsResponse) {\n    const index = this.trustedContacts.indexOf(details);\n    if (index > -1) {\n      this.trustedContacts.splice(index, 1);\n    }\n  }\n\n  private removeGrantor(details: EmergencyAccessGrantorDetailsResponse) {\n    const index = this.grantedContacts.indexOf(details);\n    if (index > -1) {\n      this.grantedContacts.splice(index, 1);\n    }\n  }\n\n  // Encrypt the master password hash using the grantees public key, and send it to bitwarden for escrow.\n  private async doConfirmation(details: EmergencyAccessGranteeDetailsResponse) {\n    const encKey = await this.cryptoService.getEncKey();\n    const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n    const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n    try {\n      this.logService.debug(\n        \"User's fingerprint: \" +\n          (await this.cryptoService.getFingerprint(details.granteeId, publicKey.buffer)).join(\"-\")\n      );\n    } catch {\n      // Ignore errors since it's just a debug message\n    }\n\n    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n    const request = new EmergencyAccessConfirmRequest();\n    request.key = encryptedKey.encryptedString;\n    await this.apiService.postEmergencyAccessConfirm(details.id, request);\n  }\n}\n","import { Directive, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\nimport { combineLatestWith, Subject, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent\n  implements ControlValueAccessor, Validator, OnInit, OnDestroy\n{\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  get exceedsMinimumTimout(): boolean {\n    return (\n      !this.showCustom || this.customTimeInMinutes() > VaultTimeoutInputComponent.MIN_CUSTOM_MINUTES\n    );\n  }\n\n  static CUSTOM_VALUE = -100;\n  static MIN_CUSTOM_MINUTES = 0;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.MaximumVaultTimeout)\n      .pipe(combineLatestWith(this.policyService.policies$), takeUntil(this.destroy$))\n      .subscribe(([policyAppliesToActiveUser, policies]) => {\n        if (policyAppliesToActiveUser) {\n          const vaultTimeoutPolicy = policies.find(\n            (policy) => policy.type === PolicyType.MaximumVaultTimeout && policy.enabled\n          );\n\n          this.vaultTimeoutPolicy = vaultTimeoutPolicy;\n          this.applyVaultTimeoutPolicy();\n        }\n      });\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    if (!this.exceedsMinimumTimout) {\n      return { minTimeoutError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n\n  private customTimeInMinutes() {\n    return this.form.value.custom.hours * 60 + this.form.value.custom.minutes;\n  }\n\n  private applyVaultTimeoutPolicy() {\n    this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n    this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n    this.vaultTimeouts = this.vaultTimeouts.filter(\n      (t) =>\n        t.value <= this.vaultTimeoutPolicy.data.minutes &&\n        (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n        t.value != null\n    );\n    this.validatorChange();\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"form-group\">\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n    <small class=\"form-text text-muted\">{{ \"vaultTimeoutDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\" *ngIf=\"showCustom\" formGroupName=\"custom\">\n    <label for=\"customVaultTimeout\">{{ \"customVaultTimeout\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n\n    <small *ngIf=\"!exceedsMinimumTimout\" class=\"tw-text-danger\">\n      <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i> {{ \"vaultCustomTimeoutMinimum\" | i18n }}\n    </small>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"@bitwarden/angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<div class=\"page-header\">\n  <h1>{{ \"preferences\" | i18n }}</h1>\n</div>\n<p>{{ \"preferencesDesc\" | i18n }}</p>\n<form (ngSubmit)=\"submit()\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label>{{ \"vaultTimeoutAction\" | i18n }}</label>\n    <div class=\"form-check form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLock\"\n        value=\"lock\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLock\">\n        {{ \"lock\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLockDesc\" | i18n }}</small>\n      </label>\n    </div>\n    <div class=\"form-check mt-2 form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLogOut\"\n        value=\"logOut\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n        (ngModelChange)=\"vaultTimeoutActionChanged($event)\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLogOut\">\n        {{ \"logOut\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLogOutDesc\" | i18n }}</small>\n      </label>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <div class=\"d-flex\">\n          <label for=\"locale\">{{ \"language\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/localization/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <select id=\"locale\" name=\"Locale\" [(ngModel)]=\"locale\" class=\"form-control\">\n          <option *ngFor=\"let o of localeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"languageDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFavicons\"\n        name=\"enableFavicons\"\n        [(ngModel)]=\"enableFavicons\"\n      />\n      <label class=\"form-check-label\" for=\"enableFavicons\">\n        {{ \"enableFavicon\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/website-icons/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"faviconDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableGravatars\"\n        name=\"enableGravatars\"\n        [(ngModel)]=\"enableGravatars\"\n      />\n      <label class=\"form-check-label\" for=\"enableGravatars\">\n        {{ \"enableGravatars\" | i18n }}\n      </label>\n      <a\n        href=\"https://gravatar.com/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableGravatarsDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFullWidth\"\n        name=\"enableFullWidth\"\n        [(ngModel)]=\"enableFullWidth\"\n      />\n      <label class=\"form-check-label\" for=\"enableFullWidth\">\n        {{ \"enableFullWidth\" | i18n }}\n      </label>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableFullWidthDesc\" | i18n }}</small>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n        <select id=\"theme\" name=\"theme\" [(ngModel)]=\"theme\" class=\"form-control\">\n          <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"themeDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormControl } from \"@angular/forms\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-preferences\",\n  templateUrl: \"preferences.component.html\",\n})\nexport class PreferencesComponent implements OnInit {\n  vaultTimeoutAction = \"lock\";\n  enableFavicons: boolean;\n  enableGravatars: boolean;\n  enableFullWidth: boolean;\n  theme: ThemeType;\n  locale: string;\n  vaultTimeouts: { name: string; value: number }[];\n  localeOptions: any[];\n  themeOptions: any[];\n\n  vaultTimeout: UntypedFormControl = new UntypedFormControl(null);\n\n  private startingLocale: string;\n  private startingTheme: ThemeType;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    private platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private themingService: AbstractThemingService\n  ) {\n    this.vaultTimeouts = [\n      { name: i18nService.t(\"oneMinute\"), value: 1 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: i18nService.t(\"oneHour\"), value: 60 },\n      { name: i18nService.t(\"fourHours\"), value: 240 },\n      { name: i18nService.t(\"onRefresh\"), value: -1 },\n    ];\n    if (this.platformUtilsService.isDev()) {\n      this.vaultTimeouts.push({ name: i18nService.t(\"never\"), value: null });\n    }\n\n    const localeOptions: any[] = [];\n    i18nService.supportedTranslationLocales.forEach((locale) => {\n      let name = locale;\n      if (i18nService.localeNames.has(locale)) {\n        name += \" - \" + i18nService.localeNames.get(locale);\n      }\n      localeOptions.push({ name: name, value: locale });\n    });\n    localeOptions.sort(Utils.getSortFunction(i18nService, \"name\"));\n    localeOptions.splice(0, 0, { name: i18nService.t(\"default\"), value: null });\n    this.localeOptions = localeOptions;\n    this.themeOptions = [\n      { name: i18nService.t(\"themeLight\"), value: ThemeType.Light },\n      { name: i18nService.t(\"themeDark\"), value: ThemeType.Dark },\n      { name: i18nService.t(\"themeSystem\"), value: ThemeType.System },\n    ];\n  }\n\n  async ngOnInit() {\n    this.vaultTimeout.setValue(await this.vaultTimeoutSettingsService.getVaultTimeout());\n    this.vaultTimeoutAction = await this.stateService.getVaultTimeoutAction();\n    this.enableFavicons = !(await this.stateService.getDisableFavicon());\n    this.enableGravatars = await this.stateService.getEnableGravitars();\n    this.enableFullWidth = await this.stateService.getEnableFullWidth();\n\n    this.locale = (await this.stateService.getLocale()) ?? null;\n    this.startingLocale = this.locale;\n\n    this.theme = await this.stateService.getTheme();\n    this.startingTheme = this.theme;\n  }\n\n  async submit() {\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutRangeError\")\n      );\n      return;\n    }\n\n    await this.vaultTimeoutSettingsService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    await this.stateService.setDisableFavicon(!this.enableFavicons);\n    await this.stateService.setEnableGravitars(this.enableGravatars);\n    await this.stateService.setEnableFullWidth(this.enableFullWidth);\n    this.messagingService.send(\"setFullWidth\");\n    if (this.theme !== this.startingTheme) {\n      await this.themingService.updateConfiguredTheme(this.theme);\n      this.startingTheme = this.theme;\n    }\n    await this.stateService.setLocale(this.locale);\n    if (this.locale !== this.startingLocale) {\n      window.location.reload();\n    } else {\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"preferencesUpdated\")\n      );\n    }\n  }\n\n  async vaultTimeoutActionChanged(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutAction = \"lock\";\n        return;\n      }\n    }\n    this.vaultTimeoutAction = newValue;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nimport { FolderRequest } from \"./folderRequest\";\n\nexport class FolderWithIdRequest extends FolderRequest {\n  id: string;\n\n  constructor(folder: Folder) {\n    super(folder);\n    this.id = folder.id;\n  }\n}\n","import { Send } from \"../domain/send\";\n\nimport { SendRequest } from \"./sendRequest\";\n\nexport class SendWithIdRequest extends SendRequest {\n  id: string;\n\n  constructor(send: Send) {\n    super(send);\n    this.id = send.id;\n  }\n}\n","import { CipherWithIdRequest } from \"./cipherWithIdRequest\";\nimport { FolderWithIdRequest } from \"./folderWithIdRequest\";\nimport { SendWithIdRequest } from \"./sendWithIdRequest\";\n\nexport class UpdateKeyRequest {\n  ciphers: CipherWithIdRequest[] = [];\n  folders: FolderWithIdRequest[] = [];\n  sends: SendWithIdRequest[] = [];\n  masterPasswordHash: string;\n  privateKey: string;\n  key: string;\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"changeMasterPassword\" | i18n }}</h1>\n</div>\n\n<bit-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</bit-callout>\n<app-callout\n  type=\"info\"\n  [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n  *ngIf=\"enforcedPolicyOptions\"\n>\n</app-callout>\n\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n        <input\n          id=\"currentMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"currentMasterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n        <input\n          id=\"newMasterPassword\"\n          type=\"password\"\n          name=\"NewMasterPasswordHash\"\n          class=\"form-control mb-1\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n        <app-password-strength\n          [password]=\"masterPassword\"\n          [email]=\"email\"\n          [showText]=\"true\"\n          (passwordStrengthResult)=\"getStrengthResult($event)\"\n        >\n        </app-password-strength>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n        <input\n          id=\"masterPasswordRetype\"\n          type=\"password\"\n          name=\"MasterPasswordRetype\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPasswordRetype\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"masterPasswordHint\">{{ \"masterPassHintLabel\" | i18n }}</label>\n    <input\n      id=\"masterPasswordHint\"\n      class=\"form-control\"\n      maxlength=\"50\"\n      type=\"text\"\n      name=\"MasterPasswordHint\"\n      [(ngModel)]=\"masterPasswordHint\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"rotateEncKey\"\n        name=\"RotateEncKey\"\n        [(ngModel)]=\"rotateEncKey\"\n        (change)=\"rotateEncKeyClicked()\"\n      />\n      <label class=\"form-check-label\" for=\"rotateEncKey\">\n        {{ \"rotateAccountEncKey\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"changeMasterPassword\" | i18n }}\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"@bitwarden/angular/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/enums/emergencyAccessStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/models/request/cipherWithIdRequest\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/models/request/emergencyAccessUpdateRequest\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/models/request/folderWithIdRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { PasswordRequest } from \"@bitwarden/common/models/request/passwordRequest\";\nimport { SendWithIdRequest } from \"@bitwarden/common/models/request/sendWithIdRequest\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/updateKeyRequest\";\n\n@Component({\n  selector: \"app-change-password\",\n  templateUrl: \"change-password.component.html\",\n})\nexport class ChangePasswordComponent extends BaseChangePasswordComponent {\n  rotateEncKey = false;\n  currentMasterPassword: string;\n  masterPasswordHint: string;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private syncService: SyncService,\n    private apiService: ApiService,\n    private sendService: SendService,\n    private organizationService: OrganizationService,\n    private keyConnectorService: KeyConnectorService,\n    private router: Router,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      this.router.navigate([\"/settings/security/two-factor\"]);\n    }\n\n    this.masterPasswordHint = (await this.apiService.getProfile()).masterPasswordHint;\n    await super.ngOnInit();\n  }\n\n  async rotateEncKeyClicked() {\n    if (this.rotateEncKey) {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      let hasOldAttachments = false;\n      if (ciphers != null) {\n        for (let i = 0; i < ciphers.length; i++) {\n          if (ciphers[i].organizationId == null && ciphers[i].hasOldAttachments) {\n            hasOldAttachments = true;\n            break;\n          }\n        }\n      }\n\n      if (hasOldAttachments) {\n        const learnMore = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"oldAttachmentsNeedFixDesc\"),\n          null,\n          this.i18nService.t(\"learnMore\"),\n          this.i18nService.t(\"close\"),\n          \"warning\"\n        );\n        if (learnMore) {\n          this.platformUtilsService.launchUri(\n            \"https://bitwarden.com/help/attachments/#add-storage-space\"\n          );\n        }\n        this.rotateEncKey = false;\n        return;\n      }\n\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateEncryptionKeyWarning\") +\n          \" \" +\n          this.i18nService.t(\"updateEncryptionKeyExportWarning\") +\n          \" \" +\n          this.i18nService.t(\"rotateEncKeyConfirmation\"),\n        this.i18nService.t(\"rotateEncKeyTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        this.rotateEncKey = false;\n      }\n    }\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    await super.submit();\n  }\n\n  async setupSubmitActions() {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n\n    if (this.rotateEncKey) {\n      await this.syncService.fullSync(true);\n    }\n\n    return super.setupSubmitActions();\n  }\n\n  async performSubmitActions(\n    newMasterPasswordHash: string,\n    newKey: SymmetricCryptoKey,\n    newEncKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const request = new PasswordRequest();\n    request.masterPasswordHash = await this.cryptoService.hashPassword(\n      this.currentMasterPassword,\n      null\n    );\n    request.masterPasswordHint = this.masterPasswordHint;\n    request.newMasterPasswordHash = newMasterPasswordHash;\n    request.key = newEncKey[1].encryptedString;\n\n    try {\n      if (this.rotateEncKey) {\n        this.formPromise = this.apiService.postPassword(request).then(() => {\n          return this.updateKey(newKey, request.newMasterPasswordHash);\n        });\n      } else {\n        this.formPromise = this.apiService.postPassword(request);\n      }\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  private async updateKey(key: SymmetricCryptoKey, masterPasswordHash: string) {\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = masterPasswordHash;\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    const sends = await this.sendService.getAll();\n    await Promise.all(\n      sends.map(async (send) => {\n        const cryptoKey = await this.cryptoService.decryptToBytes(send.key, null);\n        send.key = (await this.cryptoService.encrypt(cryptoKey, encKey[0])) ?? send.key;\n        request.sends.push(new SendWithIdRequest(send));\n      })\n    );\n\n    await this.apiService.postAccountKey(request);\n\n    await this.updateEmergencyAccesses(encKey[0]);\n\n    await this.updateAllResetPasswordKeys(encKey[0], masterPasswordHash);\n  }\n\n  private async updateEmergencyAccesses(encKey: SymmetricCryptoKey) {\n    const emergencyAccess = await this.apiService.getEmergencyAccessTrusted();\n    const allowedStatuses = [\n      EmergencyAccessStatusType.Confirmed,\n      EmergencyAccessStatusType.RecoveryInitiated,\n      EmergencyAccessStatusType.RecoveryApproved,\n    ];\n\n    const filteredAccesses = emergencyAccess.data.filter((d) => allowedStatuses.includes(d.status));\n\n    for (const details of filteredAccesses) {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      const updateRequest = new EmergencyAccessUpdateRequest();\n      updateRequest.type = details.type;\n      updateRequest.waitTimeDays = details.waitTimeDays;\n      updateRequest.keyEncrypted = encryptedKey.encryptedString;\n\n      await this.apiService.putEmergencyAccess(details.id, updateRequest);\n    }\n  }\n\n  private async updateAllResetPasswordKeys(encKey: SymmetricCryptoKey, masterPasswordHash: string) {\n    const orgs = await this.organizationService.getAll();\n\n    for (const org of orgs) {\n      // If not already enrolled, skip\n      if (!org.resetPasswordEnrolled) {\n        continue;\n      }\n\n      // Retrieve public key\n      const response = await this.organizationApiService.getKeys(org.id);\n      const publicKey = Utils.fromB64ToArray(response?.publicKey);\n\n      // Re-enroll - encrpyt user's encKey.key with organization public key\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Create/Execute request\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = masterPasswordHash;\n      request.resetPasswordKey = encryptedKey.encryptedString;\n\n      await this.apiService.putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request);\n    }\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { PasswordRequest } from \"./passwordRequest\";\n\nexport class KdfRequest extends PasswordRequest {\n  kdf: KdfType;\n  kdfIterations: number;\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"encKeySettings\" | i18n }}</h1>\n</div>\n<bit-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</bit-callout>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"kdfMasterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"kdfMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdf\">{{ \"kdfAlgorithm\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://en.wikipedia.org/wiki/Key_derivation_function\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <select id=\"kdf\" name=\"Kdf\" [(ngModel)]=\"kdf\" class=\"form-control\" required>\n          <option *ngFor=\"let o of kdfOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdfIterations\">{{ \"kdfIterations\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://bitwarden.com/help/what-encryption-is-used/#pbkdf2\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <input\n          id=\"kdfIterations\"\n          type=\"number\"\n          min=\"5000\"\n          max=\"2000000\"\n          name=\"KdfIterations\"\n          class=\"form-control\"\n          [(ngModel)]=\"kdfIterations\"\n          required\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <div class=\"small form-text text-muted\">\n          <p>{{ \"kdfIterationsDesc\" | i18n: (recommendedKdfIterations | number) }}</p>\n          <strong>{{ \"warning\" | i18n }}</strong\n          >: {{ \"kdfIterationsWarning\" | i18n: (50000 | number) }}\n        </div>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"changeKdf\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { KdfRequest } from \"@bitwarden/common/models/request/kdfRequest\";\n\n@Component({\n  selector: \"app-change-kdf\",\n  templateUrl: \"change-kdf.component.html\",\n})\nexport class ChangeKdfComponent implements OnInit {\n  masterPassword: string;\n  kdfIterations: number;\n  kdf = KdfType.PBKDF2_SHA256;\n  kdfOptions: any[] = [];\n  formPromise: Promise<any>;\n  recommendedKdfIterations = DEFAULT_KDF_ITERATIONS;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.kdfOptions = [{ name: \"PBKDF2 SHA-256\", value: KdfType.PBKDF2_SHA256 }];\n  }\n\n  async ngOnInit() {\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    const request = new KdfRequest();\n    request.kdf = this.kdf;\n    request.kdfIterations = this.kdfIterations;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n    const email = await this.stateService.getEmail();\n    const newKey = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email,\n      this.kdf,\n      this.kdfIterations\n    );\n    request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      newKey\n    );\n    const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n    request.key = newEncKey[1].encryptedString;\n    try {\n      this.formPromise = this.apiService.postAccountKdf(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"encKeySettingsChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<app-change-kdf *ngIf=\"showChangeKdf\"></app-change-kdf>\n<div\n  [ngClass]=\"{ 'tabbed-header': !showChangeKdf, 'secondary-header': showChangeKdf }\"\n  class=\"border-0 mb-0\"\n>\n  <h1>{{ \"apiKey\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"userApiKeyDesc\" | i18n }}\n</p>\n<button bitButton buttonType=\"secondary\" (click)=\"viewUserApiKey()\">\n  {{ \"viewApiKey\" | i18n }}\n</button>\n<button bitButton buttonType=\"secondary\" (click)=\"rotateUserApiKey()\">\n  {{ \"rotateApiKey\" | i18n }}\n</button>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { ApiKeyComponent } from \"./api-key.component\";\n\n@Component({\n  selector: \"app-security-keys\",\n  templateUrl: \"security-keys.component.html\",\n})\nexport class SecurityKeysComponent implements OnInit {\n  @ViewChild(\"viewUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  viewUserApiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateUserApiKeyModalRef: ViewContainerRef;\n\n  showChangeKdf = true;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private modalService: ModalService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeKdf = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async viewUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.viewUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"userApiKeyDesc\";\n    });\n  }\n\n  async rotateUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.isRotation = true;\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserRotateApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\">\n  <ul class=\"nav nav-tabs\">\n    <ng-container *ngIf=\"showChangePassword\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"change-password\" routerLinkActive=\"active\">\n          {{ \"masterPassword\" | i18n }}\n        </a>\n      </li>\n    </ng-container>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"two-factor\" routerLinkActive=\"active\">\n        {{ \"twoStepLogin\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"security-keys\" routerLinkActive=\"active\">\n        {{ \"keys\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\n\n@Component({\n  selector: \"app-security\",\n  templateUrl: \"security.component.html\",\n})\nexport class SecurityComponent {\n  showChangePassword = true;\n\n  constructor(private keyConnectorService: KeyConnectorService) {}\n\n  async ngOnInit() {\n    this.showChangePassword = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { ChangePasswordComponent } from \"./change-password.component\";\nimport { SecurityKeysComponent } from \"./security-keys.component\";\nimport { SecurityComponent } from \"./security.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SecurityComponent,\n    data: { titleId: \"security\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"change-password\" },\n      {\n        path: \"change-password\",\n        component: ChangePasswordComponent,\n        data: { titleId: \"masterPassword\" },\n      },\n      {\n        path: \"two-factor\",\n        component: TwoFactorSetupComponent,\n        data: { titleId: \"twoStepLogin\" },\n      },\n      {\n        path: \"security-keys\",\n        component: SecurityKeysComponent,\n        data: { titleId: \"keys\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SecurityRoutingModule {}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"accountSettings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myAccount\" | i18n }}\n          </a>\n          <a routerLink=\"security\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"security\" | i18n }}\n          </a>\n          <a routerLink=\"preferences\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"preferences\" | i18n }}\n          </a>\n          <a\n            routerLink=\"subscription\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"!hideSubscription\"\n          >\n            {{ \"subscription\" | i18n }}\n          </a>\n          <a routerLink=\"domain-rules\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"domainRules\" | i18n }}\n          </a>\n          <a routerLink=\"emergency-access\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"emergencyAccess\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sponsored-families\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"hasFamilySponsorshipAvailable\"\n          >\n            {{ \"sponsoredFamilies\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\nimport { StateService } from \"../core\";\n\nconst BroadcasterSubscriptionId = \"SettingsComponent\";\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  premium: boolean;\n  selfHosted: boolean;\n  hasFamilySponsorshipAvailable: boolean;\n  hideSubscription: boolean;\n\n  constructor(\n    private tokenService: TokenService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"purchasedPremium\":\n            await this.load();\n            break;\n          default:\n        }\n      });\n    });\n\n    this.selfHosted = await this.platformUtilsService.isSelfHost();\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    this.premium = await this.stateService.getHasPremiumPersonally();\n    this.hasFamilySponsorshipAvailable = await this.organizationService.canManageSponsorships();\n    const hasPremiumFromOrg = await this.stateService.getHasPremiumFromOrganization();\n    let billing = null;\n    if (!this.selfHosted) {\n      billing = await this.apiService.getUserBillingHistory();\n    }\n    this.hideSubscription =\n      !this.premium && hasPremiumFromOrg && (this.selfHosted || billing?.hasNoHistory);\n  }\n}\n","import { AbstractControl, AsyncValidatorFn, ValidationErrors } from \"@angular/forms\";\n\nexport function notAllowedValueAsync(\n  valueGetter: () => Promise<string>,\n  caseInsensitive = false\n): AsyncValidatorFn {\n  return async (control: AbstractControl): Promise<ValidationErrors | null> => {\n    let notAllowedValue = await valueGetter();\n    let controlValue = control.value;\n    if (caseInsensitive) {\n      notAllowedValue = notAllowedValue.toLowerCase();\n      controlValue = controlValue.toLowerCase();\n    }\n\n    if (controlValue === notAllowedValue) {\n      return {\n        notAllowedValue: true,\n      };\n    }\n  };\n}\n","<td>\n  {{ sponsoringOrg.familySponsorshipFriendlyName }}\n</td>\n<td>{{ sponsoringOrg.name }}</td>\n<td>\n  <span [ngClass]=\"statusClass\">{{ statusMessage }}</span>\n</td>\n<td class=\"table-action-right\">\n  <div class=\"dropdown\" appListDropdown>\n    <button\n      *ngIf=\"!sponsoringOrg.familySponsorshipToDelete\"\n      class=\"btn btn-outline-secondary dropdown-toggle\"\n      type=\"button\"\n      id=\"dropdownMenuButton\"\n      data-toggle=\"dropdown\"\n      aria-haspopup=\"true\"\n      aria-expanded=\"false\"\n      appA11yTitle=\"{{ 'options' | i18n }}\"\n    >\n      <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n    </button>\n    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n      <button\n        #resendEmailBtn\n        *ngIf=\"!isSelfHosted && !sponsoringOrg.familySponsorshipValidUntil\"\n        [appApiAction]=\"resendEmailPromise\"\n        class=\"dropdown-item btn-submit\"\n        [disabled]=\"resendEmailBtn.loading\"\n        (click)=\"resendEmail()\"\n        [attr.aria-label]=\"'resendEmailLabel' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"resendEmail\" | i18n }}</span>\n      </button>\n      <button\n        #revokeSponsorshipBtn\n        [appApiAction]=\"revokeSponsorshipPromise\"\n        class=\"dropdown-item text-danger btn-submit\"\n        [disabled]=\"revokeSponsorshipBtn.loading\"\n        (click)=\"revokeSponsorship()\"\n        [attr.aria-label]=\"'revokeAccount' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"remove\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</td>\n","import { formatDate } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output, OnInit } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"[sponsoring-org-row]\",\n  templateUrl: \"sponsoring-org-row.component.html\",\n})\nexport class SponsoringOrgRowComponent implements OnInit {\n  @Input() sponsoringOrg: Organization = null;\n  @Input() isSelfHosted = false;\n\n  @Output() sponsorshipRemoved = new EventEmitter();\n\n  statusMessage = \"loading\";\n  statusClass: \"text-success\" | \"text-danger\" = \"text-success\";\n\n  revokeSponsorshipPromise: Promise<any>;\n  resendEmailPromise: Promise<any>;\n\n  private locale = \"\";\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private logService: LogService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.locale = await firstValueFrom(this.i18nService.locale$);\n\n    this.setStatus(\n      this.isSelfHosted,\n      this.sponsoringOrg.familySponsorshipToDelete,\n      this.sponsoringOrg.familySponsorshipValidUntil,\n      this.sponsoringOrg.familySponsorshipLastSyncDate\n    );\n  }\n\n  async revokeSponsorship() {\n    try {\n      this.revokeSponsorshipPromise = this.doRevokeSponsorship();\n      await this.revokeSponsorshipPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.revokeSponsorshipPromise = null;\n  }\n\n  async resendEmail() {\n    this.resendEmailPromise = this.apiService.postResendSponsorshipOffer(this.sponsoringOrg.id);\n    await this.resendEmailPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailSent\"));\n    this.resendEmailPromise = null;\n  }\n\n  get isSentAwaitingSync() {\n    return this.isSelfHosted && !this.sponsoringOrg.familySponsorshipLastSyncDate;\n  }\n\n  private async doRevokeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeSponsorshipConfirmation\"),\n      `${this.i18nService.t(\"remove\")} ${this.sponsoringOrg.familySponsorshipFriendlyName}?`,\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    await this.apiService.deleteRevokeSponsorship(this.sponsoringOrg.id);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reclaimedFreePlan\"));\n    this.sponsorshipRemoved.emit();\n  }\n\n  private setStatus(\n    selfHosted: boolean,\n    toDelete?: boolean,\n    validUntil?: Date,\n    lastSyncDate?: Date\n  ) {\n    /*\n     * Possible Statuses:\n     * Requested (self-hosted only)\n     * Sent\n     * Active\n     * RequestRevoke\n     * RevokeWhenExpired\n     */\n\n    if (toDelete && validUntil) {\n      // They want to delete but there is a valid until date which means there is an active sponsorship\n      this.statusMessage = this.i18nService.t(\n        \"revokeWhenExpired\",\n        formatDate(validUntil, \"MM/dd/yyyy\", this.locale)\n      );\n      this.statusClass = \"text-danger\";\n    } else if (toDelete) {\n      // They want to delete and we don't have a valid until date so we can\n      // this should only happen on a self-hosted install\n      this.statusMessage = this.i18nService.t(\"requestRemoved\");\n      this.statusClass = \"text-danger\";\n    } else if (validUntil) {\n      // They don't want to delete and they have a valid until date\n      // that means they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"active\");\n      this.statusClass = \"text-success\";\n    } else if (selfHosted && lastSyncDate) {\n      // We are on a self-hosted install and it has been synced but we have not gotten\n      // a valid until date so we can't know if they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else if (!selfHosted) {\n      // We are in cloud and all other status checks have been false therefore we have\n      // sent the request but it hasn't been accepted yet\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else {\n      // We are on a self-hosted install and we have not synced yet\n      this.statusMessage = this.i18nService.t(\"requested\");\n      this.statusClass = \"text-success\";\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"sponsoredFamilies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"!loading\">\n  <p>\n    {{ \"sponsoredFamiliesEligible\" | i18n }}\n  </p>\n  <div>\n    {{ \"sponsoredFamiliesInclude\" | i18n }}:\n    <ul class=\"inset-list\">\n      <li>{{ \"sponsoredFamiliesPremiumAccess\" | i18n }}</li>\n      <li>{{ \"sponsoredFamiliesSharedCollections\" | i18n }}</li>\n    </ul>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    [formGroup]=\"sponsorshipForm\"\n    ngNativeValidate\n    *ngIf=\"anyOrgsAvailable$ | async\"\n  >\n    <div class=\"form-group col-7\">\n      <label for=\"availableSponsorshipOrg\">{{ \"familiesSponsoringOrgSelect\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        formControlName=\"selectedSponsorshipOrgId\"\n        class=\"form-control\"\n        required\n      >\n        <option disabled=\"true\" value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option *ngFor=\"let o of availableSponsorshipOrgs$ | async\" [ngValue]=\"o.id\">\n          {{ o.name }}\n        </option>\n      </select>\n    </div>\n    <div class=\"form-group col-7\">\n      <label for=\"sponsorshipEmail\">{{ \"sponsoredFamiliesEmail\" | i18n }}:</label>\n      <input\n        id=\"sponsorshipEmail\"\n        class=\"form-control\"\n        inputmode=\"email\"\n        formControlName=\"sponsorshipEmail\"\n        name=\"sponsorshipEmail\"\n        required\n        [attr.aria-invalid]=\"sponsorshipEmailControl.invalid\"\n      />\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.notAllowedValue\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"cannotSponsorSelf\" | i18n }}\n      </small>\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.email\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"invalidEmail\" | i18n }}\n      </small>\n    </div>\n    <div class=\"form-group col-7\">\n      <button class=\"btn btn-primary btn-submit mt-2\" type=\"submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"redeem\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n  <ng-container *ngIf=\"anyActiveSponsorships$ | async\">\n    <div class=\"border-bottom\">\n      <table class=\"table table-hover table-list\">\n        <thead>\n          <tr>\n            <th>{{ \"recipient\" | i18n }}</th>\n            <th>{{ \"sponsoringOrg\" | i18n }}</th>\n            <th>{{ \"status\" | i18n }}</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <ng-container *ngFor=\"let o of activeSponsorshipOrgs$ | async\">\n            <tr\n              sponsoring-org-row\n              [sponsoringOrg]=\"o\"\n              [isSelfHosted]=\"isSelfHosted\"\n              (sponsorshipRemoved)=\"forceReload()\"\n            ></tr>\n          </ng-container>\n        </tbody>\n      </table>\n    </div>\n    <small>{{ \"sponsoredFamiliesLeaveCopy\" | i18n }}</small>\n  </ng-container>\n</ng-container>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { map, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport { notAllowedValueAsync } from \"@bitwarden/angular/validators/notAllowedValueAsync.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\ninterface RequestSponsorshipForm {\n  selectedSponsorshipOrgId: FormControl<string>;\n  sponsorshipEmail: FormControl<string>;\n}\n\n@Component({\n  selector: \"app-sponsored-families\",\n  templateUrl: \"sponsored-families.component.html\",\n})\nexport class SponsoredFamiliesComponent implements OnInit, OnDestroy {\n  loading = false;\n\n  availableSponsorshipOrgs$: Observable<Organization[]>;\n  activeSponsorshipOrgs$: Observable<Organization[]>;\n  anyOrgsAvailable$: Observable<boolean>;\n  anyActiveSponsorships$: Observable<boolean>;\n\n  // Conditional display properties\n  formPromise: Promise<void>;\n\n  sponsorshipForm: FormGroup<RequestSponsorshipForm>;\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private formBuilder: FormBuilder,\n    private stateService: StateService\n  ) {\n    this.sponsorshipForm = this.formBuilder.group<RequestSponsorshipForm>({\n      selectedSponsorshipOrgId: new FormControl(\"\", {\n        validators: [Validators.required],\n      }),\n      sponsorshipEmail: new FormControl(\"\", {\n        validators: [Validators.email],\n        asyncValidators: [\n          notAllowedValueAsync(async () => await this.stateService.getEmail(), true),\n        ],\n        updateOn: \"blur\",\n      }),\n    });\n  }\n\n  async ngOnInit() {\n    this.availableSponsorshipOrgs$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter((o) => o.familySponsorshipAvailable))\n    );\n\n    this.availableSponsorshipOrgs$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (orgs.length === 1) {\n        this.sponsorshipForm.patchValue({\n          selectedSponsorshipOrgId: orgs[0].id,\n        });\n      }\n    });\n\n    this.anyOrgsAvailable$ = this.availableSponsorshipOrgs$.pipe(map((orgs) => orgs.length > 0));\n\n    this.activeSponsorshipOrgs$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter((o) => o.familySponsorshipFriendlyName !== null))\n    );\n\n    this.anyActiveSponsorships$ = this.activeSponsorshipOrgs$.pipe(map((orgs) => orgs.length > 0));\n\n    this.loading = false;\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async submit() {\n    this.formPromise = this.apiService.postCreateSponsorship(\n      this.sponsorshipForm.value.selectedSponsorshipOrgId,\n      {\n        sponsoredEmail: this.sponsorshipForm.value.sponsorshipEmail,\n        planSponsorshipType: PlanSponsorshipType.FamiliesForEnterprise,\n        friendlyName: this.sponsorshipForm.value.sponsorshipEmail,\n      }\n    );\n\n    await this.formPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"sponsorshipCreated\"));\n    this.formPromise = null;\n    this.resetForm();\n    await this.forceReload();\n  }\n\n  async forceReload() {\n    this.loading = true;\n    await this.syncService.fullSync(true);\n    this.loading = false;\n  }\n\n  get sponsorshipEmailControl() {\n    return this.sponsorshipForm.controls.sponsorshipEmail;\n  }\n\n  private async resetForm() {\n    this.sponsorshipForm.reset();\n  }\n\n  get isSelfHosted(): boolean {\n    return this.platformUtilsService.isSelfHost();\n  }\n}\n","<div class=\"tabbed-header d-flex\">\n  <h1>\n    {{ \"paymentMethod\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ (isCreditBalance ? \"accountCredit\" : \"accountBalance\") | i18n }}</h2>\n  <p class=\"text-lg\">\n    <strong>{{ creditOrBalance | currency: \"$\" }}</strong>\n  </p>\n  <p>{{ \"creditAppliedDesc\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"addCredit()\" *ngIf=\"!showAddCredit\">\n    {{ \"addCredit\" | i18n }}\n  </button>\n  <app-add-credit\n    (onAdded)=\"closeAddCredit(true)\"\n    (onCanceled)=\"closeAddCredit(false)\"\n    *ngIf=\"showAddCredit\"\n  >\n  </app-add-credit>\n  <h2 class=\"spaced-header\">{{ \"paymentMethod\" | i18n }}</h2>\n  <p *ngIf=\"!paymentSource\">{{ \"noPaymentMethod\" | i18n }}</p>\n  <ng-container *ngIf=\"paymentSource\">\n    <p>\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-credit-card': paymentSource.type === paymentMethodType.Card,\n          'bwi-bank': paymentSource.type === paymentMethodType.BankAccount,\n          'bwi-money': paymentSource.type === paymentMethodType.Check,\n          'bwi-paypal text-primary': paymentSource.type === paymentMethodType.PayPal,\n          'bwi-apple text-muted': paymentSource.type === paymentMethodType.AppleInApp,\n          'bwi-google text-muted': paymentSource.type === paymentMethodType.GoogleInApp\n        }\"\n      ></i>\n      <span *ngIf=\"paymentSourceInApp\">{{ \"inAppPurchase\" | i18n }}</span>\n      {{ paymentSource.description }}\n    </p>\n  </ng-container>\n  <button bitButton buttonType=\"secondary\" (click)=\"changePayment()\" *ngIf=\"!showAdjustPayment\">\n    {{ (paymentSource ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n  </button>\n  <app-adjust-payment\n    [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n    (onAdjusted)=\"closePayment(true)\"\n    (onCanceled)=\"closePayment(false)\"\n    *ngIf=\"showAdjustPayment\"\n  >\n  </app-adjust-payment>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { BillingPaymentResponse } from \"@bitwarden/common/models/response/billingPaymentResponse\";\n\n@Component({\n  selector: \"app-payment-method\",\n  templateUrl: \"payment-method.component.html\",\n})\nexport class PaymentMethodComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  showAdjustPayment = false;\n  showAddCredit = false;\n  billing: BillingPaymentResponse;\n  paymentMethodType = PaymentMethodType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    if (this.platformUtilsService.isSelfHost()) {\n      this.router.navigate([\"/settings/subscription\"]);\n    }\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    this.billing = await this.apiService.getUserBillingPayment();\n    this.loading = false;\n  }\n\n  addCredit() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"addCredit\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAddCredit = true;\n  }\n\n  closeAddCredit(load: boolean) {\n    this.showAddCredit = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  changePayment() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"changePaymentMethod\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAdjustPayment = true;\n  }\n\n  closePayment(load: boolean) {\n    this.showAdjustPayment = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get isCreditBalance() {\n    return this.billing == null || this.billing.balance <= 0;\n  }\n\n  get creditOrBalance() {\n    return Math.abs(this.billing != null ? this.billing.balance : 0);\n  }\n\n  get paymentSource() {\n    return this.billing != null ? this.billing.paymentSource : null;\n  }\n\n  get paymentSourceInApp() {\n    return (\n      this.paymentSource != null &&\n      (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n        this.paymentSource.type === PaymentMethodType.GoogleInApp)\n    );\n  }\n}\n","<div *ngIf=\"selfHosted\" class=\"page-header\">\n  <h1>{{ \"subscription\" | i18n }}</h1>\n</div>\n<div *ngIf=\"!selfHosted\" class=\"tabbed-header\">\n  <h1>{{ \"goPremium\" | i18n }}</h1>\n</div>\n<bit-callout\n  type=\"info\"\n  *ngIf=\"canAccessPremium\"\n  title=\"{{ 'youHavePremiumAccess' | i18n }}\"\n  icon=\"bwi bwi-star-f\"\n>\n  {{ \"alreadyPremiumFromOrg\" | i18n }}\n</bit-callout>\n<bit-callout type=\"success\">\n  <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n  <ul class=\"bwi-ul\">\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpStorage\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTwoStep\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpEmergency\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpReports\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTotp\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpSupport\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpFuture\" | i18n }}\n    </li>\n  </ul>\n  <p class=\"text-lg\" [ngClass]=\"{ 'mb-0': !selfHosted }\">\n    {{ \"premiumPrice\" | i18n: (premiumPrice | currency: \"$\") }}\n  </p>\n  <a\n    bitButton\n    href=\"https://vault.bitwarden.com/#/settings/premium\"\n    target=\"_blank\"\n    rel=\"noopener\"\n    buttonType=\"secondary\"\n    *ngIf=\"selfHosted\"\n  >\n    {{ \"purchasePremium\" | i18n }}\n  </a>\n</bit-callout>\n<ng-container *ngIf=\"selfHosted\">\n  <p>{{ \"uploadLicenseFilePremium\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_premium_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n      {{ \"submit\" | i18n }}\n    </button>\n  </form>\n</ng-container>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\">\n  <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n      <input\n        id=\"additionalStorage\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"AdditionalStorageGb\"\n        [(ngModel)]=\"additionalStorage\"\n        min=\"0\"\n        max=\"99\"\n        step=\"1\"\n        placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n      />\n      <small class=\"text-muted form-text\">{{\n        \"additionalStorageIntervalDesc\"\n          | i18n: \"1 GB\":(storageGbPrice | currency: \"$\"):(\"year\" | i18n)\n      }}</small>\n    </div>\n  </div>\n  <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n  {{ \"premiumMembership\" | i18n }}: {{ premiumPrice | currency: \"$\" }} <br />\n  {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} GB &times;\n  {{ storageGbPrice | currency: \"$\" }} =\n  {{ additionalStorageTotal | currency: \"$\" }}\n  <hr class=\"my-3\" />\n  <h2 class=\"spaced-header mb-4\">{{ \"paymentInformation\" | i18n }}</h2>\n  <app-payment [hideBank]=\"true\"></app-payment>\n  <app-tax-info></app-tax-info>\n  <div id=\"price\" class=\"my-4\">\n    <div class=\"text-muted text-sm\">\n      {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n      <br />\n      <ng-container>\n        {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n      </ng-container>\n    </div>\n    <hr class=\"my-1 col-3 ml-0\" />\n    <p class=\"text-lg\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{ \"year\" | i18n }}\n    </p>\n  </div>\n  <small class=\"text-muted font-italic\">{{ \"paymentChargedAnnually\" | i18n }}</small>\n  <button type=\"submit\" bitButton [loading]=\"form.loading\">\n    {{ \"submit\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\n\n  canAccessPremium = false;\n  selfHosted = false;\n  premiumPrice = 10;\n  storageGbPrice = 4;\n  additionalStorage = 0;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const premiumPersonally = await this.stateService.getHasPremiumPersonally();\n    if (premiumPersonally) {\n      this.router.navigate([\"/settings/subscription/user-subscription\"]);\n      return;\n    }\n  }\n\n  async submit() {\n    let files: FileList = null;\n    if (this.selfHosted) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n    }\n\n    try {\n      if (this.selfHosted) {\n        if (!this.tokenService.getEmailVerified()) {\n          this.platformUtilsService.showToast(\n            \"error\",\n            this.i18nService.t(\"errorOccurred\"),\n            this.i18nService.t(\"verifyEmailFirst\")\n          );\n          return;\n        }\n\n        const fd = new FormData();\n        fd.append(\"license\", files[0]);\n        this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\n          return this.finalizePremium();\n        });\n      } else {\n        this.formPromise = this.paymentComponent\n          .createPaymentToken()\n          .then((result) => {\n            const fd = new FormData();\n            fd.append(\"paymentMethodType\", result[1].toString());\n            if (result[0] != null) {\n              fd.append(\"paymentToken\", result[0]);\n            }\n            fd.append(\"additionalStorageGb\", (this.additionalStorage || 0).toString());\n            fd.append(\"country\", this.taxInfoComponent.taxInfo.country);\n            fd.append(\"postalCode\", this.taxInfoComponent.taxInfo.postalCode);\n            return this.apiService.postPremium(fd);\n          })\n          .then((paymentResponse) => {\n            if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\n              return this.paymentComponent.handleStripeCardPayment(\n                paymentResponse.paymentIntentClientSecret,\n                () => this.finalizePremium()\n              );\n            } else {\n              return this.finalizePremium();\n            }\n          });\n      }\n      await this.formPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async finalizePremium() {\n    await this.apiService.refreshIdentityToken();\n    await this.syncService.fullSync(true);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"premiumUpdated\"));\n    this.messagingService.send(\"purchasedPremium\");\n    this.router.navigate([\"/settings/subscription/user-subscription\"]);\n  }\n\n  get additionalStorageTotal(): number {\n    return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\n  }\n\n  get subtotal(): number {\n    return this.premiumPrice + this.additionalStorageTotal;\n  }\n\n  get taxCharges(): number {\n    return this.taxInfoComponent != null && this.taxInfoComponent.taxRate != null\n      ? (this.taxInfoComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total(): number {\n    return this.subtotal + this.taxCharges || 0;\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\" *ngIf=\"!selfHosted\">\n  <ul class=\"nav nav-tabs\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [routerLink]=\"subscriptionRoute\" routerLinkActive=\"active\">\n        {{ \"subscription\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"payment-method\" routerLinkActive=\"active\">\n        {{ \"paymentMethod\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"billing-history\" routerLinkActive=\"active\">\n        {{ \"billingHistory\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-subscription\",\n  templateUrl: \"subscription.component.html\",\n})\nexport class SubscriptionComponent {\n  hasPremium: boolean;\n  selfHosted: boolean;\n\n  constructor(\n    private stateService: StateService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.hasPremium = await this.stateService.getHasPremiumPersonally();\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  get subscriptionRoute(): string {\n    return this.hasPremium ? \"user-subscription\" : \"premium\";\n  }\n}\n","<div class=\"tabbed-header d-flex\">\n  <h1>\n    {{ \"billingHistory\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ \"invoices\" | i18n }}</h2>\n  <p *ngIf=\"!invoices || !invoices.length\">{{ \"noInvoices\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n    <tbody>\n      <tr *ngFor=\"let i of invoices\">\n        <td>{{ i.date | date: \"mediumDate\" }}</td>\n        <td>\n          <a\n            href=\"{{ i.pdfUrl }}\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            class=\"mr-2\"\n            appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n          >\n            <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n          ></a>\n          <a href=\"{{ i.url }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ 'viewInvoice' | i18n }}\">\n            {{ \"invoiceNumber\" | i18n: i.number }}</a\n          >\n        </td>\n        <td>{{ i.amount | currency: \"$\" }}</td>\n        <td>\n          <span *ngIf=\"i.paid\">\n            <i class=\"bwi bwi-check text-success\" aria-hidden=\"true\"></i>\n            {{ \"paid\" | i18n }}\n          </span>\n          <span *ngIf=\"!i.paid\">\n            <i class=\"bwi bwi-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n            {{ \"unpaid\" | i18n }}\n          </span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <h2 class=\"spaced-header\">{{ \"transactions\" | i18n }}</h2>\n  <p *ngIf=\"!transactions || !transactions.length\">{{ \"noTransactions\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n    <tbody>\n      <tr *ngFor=\"let t of transactions\">\n        <td>{{ t.createdDate | date: \"mediumDate\" }}</td>\n        <td>\n          <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n            {{ \"chargeNoun\" | i18n }}\n          </span>\n          <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n        </td>\n        <td>\n          <i\n            class=\"bwi bwi-fw\"\n            *ngIf=\"t.paymentMethodType\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-credit-card': t.paymentMethodType === paymentMethodType.Card,\n              'bwi-bank':\n                t.paymentMethodType === paymentMethodType.BankAccount ||\n                t.paymentMethodType === paymentMethodType.WireTransfer,\n              'bwi-bitcoin text-warning': t.paymentMethodType === paymentMethodType.BitPay,\n              'bwi-paypal text-primary': t.paymentMethodType === paymentMethodType.PayPal\n            }\"\n          ></i>\n          {{ t.details }}\n        </td>\n        <td\n          [ngClass]=\"{ 'text-strike': t.refunded }\"\n          title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n        >\n          {{ t.amount | currency: \"$\" }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <small class=\"text-muted\">* {{ \"chargesStatement\" | i18n: \"BITWARDEN\" }}</small>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { TransactionType } from \"@bitwarden/common/enums/transactionType\";\nimport { BillingHistoryResponse } from \"@bitwarden/common/models/response/billingHistoryResponse\";\n\n@Component({\n  selector: \"app-user-billing\",\n  templateUrl: \"user-billing-history.component.html\",\n})\nexport class UserBillingHistoryComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  billing: BillingHistoryResponse;\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    if (this.platformUtilsService.isSelfHost()) {\n      this.router.navigate([\"/settings/subscription\"]);\n    }\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    this.billing = await this.apiService.getUserBillingHistory();\n    this.loading = false;\n  }\n\n  get invoices() {\n    return this.billing != null ? this.billing.invoices : null;\n  }\n\n  get transactions() {\n    return this.billing != null ? this.billing.transactions : null;\n  }\n}\n","<div\n  [ngClass]=\"{\n    'page-header': selfHosted,\n    'tabbed-header': !selfHosted\n  }\"\n>\n  <h1>\n    {{ title }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"sub\">\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</bit-callout\n  >\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      bitButton\n      type=\"button\"\n      buttonType=\"secondary\"\n      #reinstateBtn\n      class=\"btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"reinstateBtn.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </bit-callout>\n  <dl *ngIf=\"selfHosted\">\n    <dt>{{ \"expiration\" | i18n }}</dt>\n    <dd *ngIf=\"sub.expiration\">{{ sub.expiration | date: \"mediumDate\" }}</dd>\n    <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n  </dl>\n  <div class=\"row\" *ngIf=\"!selfHosted\">\n    <div class=\"col-4\">\n      <dl>\n        <dt>{{ \"status\" | i18n }}</dt>\n        <dd>\n          <span class=\"text-capitalize\">{{ (subscription && subscription.status) || \"-\" }}</span>\n          <span bitBadge badgeType=\"warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n            \"pendingCancellation\" | i18n\n          }}</span>\n        </dd>\n        <dt>{{ \"nextCharge\" | i18n }}</dt>\n        <dd>\n          {{\n            nextInvoice\n              ? (nextInvoice.date | date: \"mediumDate\") +\n                \", \" +\n                (nextInvoice.amount | currency: \"$\")\n              : \"-\"\n          }}\n        </dd>\n      </dl>\n    </div>\n    <div class=\"col-8\" *ngIf=\"subscription\">\n      <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n      <table class=\"table\">\n        <tbody>\n          <tr *ngFor=\"let i of subscription.items\">\n            <td>\n              {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n              {{ i.amount | currency: \"$\" }}\n            </td>\n            <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <ng-container *ngIf=\"selfHosted\">\n    <div>\n      <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        bitButton\n        buttonType=\"secondary\"\n        href=\"https://vault.bitwarden.com/#/settings/subscription\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        >\n        </app-update-license>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"d-flex\">\n      <button\n        bitButton\n        type=\"button\"\n        buttonType=\"secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"!subscription || !subscription.cancelled\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        bitButton\n        #cancelBtn\n        type=\"button\"\n        buttonType=\"danger\"\n        class=\"btn-submit tw-ml-auto\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"cancelBtn.loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            bitButton\n            type=\"button\"\n            buttonType=\"secondary\"\n            class=\"tw-ml-1\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"4\"\n          [add]=\"adjustStorageAdd\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SubscriptionResponse } from \"@bitwarden/common/models/response/subscriptionResponse\";\n\n@Component({\n  selector: \"app-user-subscription\",\n  templateUrl: \"user-subscription.component.html\",\n})\nexport class UserSubscriptionComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  sub: SubscriptionResponse;\n  selfHosted = false;\n\n  cancelPromise: Promise<any>;\n  reinstatePromise: Promise<any>;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private router: Router,\n    private logService: LogService,\n    private fileDownloadService: FileDownloadService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.stateService.getHasPremiumPersonally()) {\n      this.loading = true;\n      this.sub = await this.apiService.getUserSubscription();\n    } else {\n      this.router.navigate([\"/settings/subscription/premium\"]);\n      return;\n    }\n\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.apiService.postReinstatePremium();\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.apiService.postCancelPremium();\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  downloadLicense() {\n    if (this.loading) {\n      return;\n    }\n\n    const licenseString = JSON.stringify(this.sub.license, null, 2);\n    this.fileDownloadService.download({\n      fileName: \"bitwarden_premium_license.json\",\n      blobData: licenseString,\n    });\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(load: boolean) {\n    this.showUpdateLicense = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  adjustStorage(add: boolean) {\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(add ? \"addStorage\" : \"removeStorage\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get usingInAppPurchase() {\n    return this.sub != null ? this.sub.usingInAppPurchase : false;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.selfHosted ? \"subscription\" : \"premiumMembership\");\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { PaymentMethodComponent } from \"./payment-method.component\";\nimport { PremiumComponent } from \"./premium.component\";\nimport { SubscriptionComponent } from \"./subscription.component\";\nimport { UserBillingHistoryComponent } from \"./user-billing-history.component\";\nimport { UserSubscriptionComponent } from \"./user-subscription.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SubscriptionComponent,\n    data: { titleId: \"subscription\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"premium\" },\n      {\n        path: \"user-subscription\",\n        component: UserSubscriptionComponent,\n        data: { titleId: \"premiumMembership\" },\n      },\n      {\n        path: \"premium\",\n        component: PremiumComponent,\n        data: { titleId: \"goPremium\" },\n      },\n      {\n        path: \"payment-method\",\n        component: PaymentMethodComponent,\n        data: { titleId: \"paymentMethod\" },\n      },\n      {\n        path: \"billing-history\",\n        component: UserBillingHistoryComponent,\n        data: { titleId: \"billingHistory\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SubscriptionRoutingModule {}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { PasswordGeneratorPolicyOptions } from \"@bitwarden/common/models/domain/passwordGeneratorPolicyOptions\";\n\n@Directive()\nexport class GeneratorComponent implements OnInit {\n  @Input() comingFromAddEdit = false;\n  @Input() type: string;\n  @Output() onSelected = new EventEmitter<string>();\n\n  usernameGeneratingPromise: Promise<string>;\n  typeOptions: any[];\n  passTypeOptions: any[];\n  usernameTypeOptions: any[];\n  subaddressOptions: any[];\n  catchallOptions: any[];\n  forwardOptions: any[];\n  usernameOptions: any = {};\n  passwordOptions: any = {};\n  username = \"-\";\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPasswordPolicyOptions: PasswordGeneratorPolicyOptions;\n  usernameWebsite: string = null;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected usernameGenerationService: UsernameGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected stateService: StateService,\n    protected i18nService: I18nService,\n    protected logService: LogService,\n    protected route: ActivatedRoute,\n    private win: Window\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"username\"), value: \"username\" },\n    ];\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n    this.usernameTypeOptions = [\n      {\n        name: i18nService.t(\"plusAddressedEmail\"),\n        value: \"subaddress\",\n        desc: i18nService.t(\"plusAddressedEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"catchallEmail\"),\n        value: \"catchall\",\n        desc: i18nService.t(\"catchallEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"forwardedEmail\"),\n        value: \"forwarded\",\n        desc: i18nService.t(\"forwardedEmailDesc\"),\n      },\n      { name: i18nService.t(\"randomWord\"), value: \"word\" },\n    ];\n    this.subaddressOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.catchallOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.forwardOptions = [\n      { name: \"SimpleLogin\", value: \"simplelogin\" },\n      { name: \"AnonAddy\", value: \"anonaddy\" },\n      { name: \"Firefox Relay\", value: \"firefoxrelay\" },\n      { name: \"Fastmail\", value: \"fastmail\" },\n      { name: \"DuckDuckGo\", value: \"duckduckgo\" },\n    ];\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const passwordOptionsResponse = await this.passwordGenerationService.getOptions();\n      this.passwordOptions = passwordOptionsResponse[0];\n      this.enforcedPasswordPolicyOptions = passwordOptionsResponse[1];\n      this.avoidAmbiguous = !this.passwordOptions.ambiguous;\n      this.passwordOptions.type =\n        this.passwordOptions.type === \"passphrase\" ? \"passphrase\" : \"password\";\n\n      this.usernameOptions = await this.usernameGenerationService.getOptions();\n      if (this.usernameOptions.type == null) {\n        this.usernameOptions.type = \"word\";\n      }\n      if (\n        this.usernameOptions.subaddressEmail == null ||\n        this.usernameOptions.subaddressEmail === \"\"\n      ) {\n        this.usernameOptions.subaddressEmail = await this.stateService.getEmail();\n      }\n      if (this.usernameWebsite == null) {\n        this.usernameOptions.subaddressType = this.usernameOptions.catchallType = \"random\";\n      } else {\n        this.usernameOptions.website = this.usernameWebsite;\n        const websiteOption = { name: this.i18nService.t(\"websiteName\"), value: \"website-name\" };\n        this.subaddressOptions.push(websiteOption);\n        this.catchallOptions.push(websiteOption);\n      }\n\n      if (this.type !== \"username\" && this.type !== \"password\") {\n        if (qParams.type === \"username\" || qParams.type === \"password\") {\n          this.type = qParams.type;\n        } else {\n          const generatorOptions = await this.stateService.getGeneratorOptions();\n          this.type = generatorOptions?.type ?? \"password\";\n        }\n      }\n      if (this.regenerateWithoutButtonPress()) {\n        await this.regenerate();\n      }\n    });\n  }\n\n  async typeChanged() {\n    await this.stateService.setGeneratorOptions({ type: this.type });\n    if (this.regenerateWithoutButtonPress()) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    if (this.type === \"password\") {\n      await this.regeneratePassword();\n    } else if (this.type === \"username\") {\n      await this.regenerateUsername();\n    }\n  }\n\n  async sliderChanged() {\n    this.savePasswordOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizePasswordOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n  }\n\n  async savePasswordOptions(regenerate = true) {\n    this.normalizePasswordOptions();\n    await this.passwordGenerationService.saveOptions(this.passwordOptions);\n\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regeneratePassword();\n    }\n  }\n\n  async saveUsernameOptions(regenerate = true) {\n    await this.usernameGenerationService.saveOptions(this.usernameOptions);\n    if (this.usernameOptions.type === \"forwarded\") {\n      this.username = \"-\";\n    }\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regenerateUsername();\n    }\n  }\n\n  async regeneratePassword() {\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  regenerateUsername() {\n    return this.generateUsername();\n  }\n\n  async generateUsername() {\n    try {\n      this.usernameGeneratingPromise = this.usernameGenerationService.generateUsername(\n        this.usernameOptions\n      );\n      this.username = await this.usernameGeneratingPromise;\n      if (this.username === \"\" || this.username === null) {\n        this.username = \"-\";\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  copy() {\n    const password = this.type === \"password\";\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(\n      password ? this.password : this.username,\n      copyOptions\n    );\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(password ? \"password\" : \"username\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.type === \"password\" ? this.password : this.username);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  regenerateWithoutButtonPress() {\n    return this.type !== \"username\" || this.usernameOptions.type !== \"forwarded\";\n  }\n\n  private normalizePasswordOptions() {\n    // Application level normalize options depedent on class variables\n    this.passwordOptions.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.passwordOptions.uppercase &&\n      !this.passwordOptions.lowercase &&\n      !this.passwordOptions.number &&\n      !this.passwordOptions.special\n    ) {\n      this.passwordOptions.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(\n      this.passwordOptions,\n      this.enforcedPasswordPolicyOptions\n    );\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { GeneratedPasswordHistory } from \"@bitwarden/common/models/domain/generatedPasswordHistory\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: \"colorPassword\" })\nexport class ColorPasswordPipe implements PipeTransform {\n  transform(password: string) {\n    const template = (character: string, type: string) =>\n      `<span class=\"password-${type}\">${character}</span>`;\n    const colorizedPassword = this.generateTemplate(password, template);\n    return colorizedPassword;\n  }\n\n  protected generateTemplate(\n    password: string,\n    templateGenerator: (chararacter: string, type: string, index?: number) => string\n  ) {\n    // Convert to an array to handle cases that stings have special characters, ie: emoji.\n    const passwordArray = Array.from(password);\n    let colorizedPassword = \"\";\n    for (let i = 0; i < passwordArray.length; i++) {\n      let character = passwordArray[i];\n      let isSpecial = false;\n      // Sanitize HTML first.\n      switch (character) {\n        case \"&\":\n          character = \"&amp;\";\n          isSpecial = true;\n          break;\n        case \"<\":\n          character = \"&lt;\";\n          isSpecial = true;\n          break;\n        case \">\":\n          character = \"&gt;\";\n          isSpecial = true;\n          break;\n        case \" \":\n          character = \"&nbsp;\";\n          isSpecial = true;\n          break;\n        default:\n          break;\n      }\n      let type = \"letter\";\n      if (character.match(Utils.regexpEmojiPresentation)) {\n        type = \"emoji\";\n      } else if (isSpecial || character.match(/[^\\w ]/)) {\n        type = \"special\";\n      } else if (character.match(/\\d/)) {\n        type = \"number\";\n      }\n      colorizedPassword += templateGenerator(character, type, i);\n    }\n    return colorizedPassword;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"passHistoryTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"passHistoryTitle\">{{ \"passwordHistory\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"history.length\">\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item d-flex\" *ngFor=\"let h of history\">\n            <div class=\"password-row\">\n              <div\n                class=\"text-monospace generated-wrapper\"\n                [innerHTML]=\"h.password | colorPassword\"\n                appSelectCopy\n              ></div>\n              <small class=\"text-muted\">{{ h.date | date: \"medium\" }}</small>\n            </div>\n            <div class=\"ml-auto\">\n              <button\n                class=\"btn btn-link\"\n                appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                (click)=\"copy(h.password)\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!history.length\">\n        {{ \"noPasswordsInList\" | i18n }}\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"clear()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'clear' | i18n }}\"\n          >\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"@bitwarden/angular/components/password-generator-history.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"generator\" | i18n }}</h1>\n</div>\n<app-callout type=\"info\" *ngIf=\"enforcedPasswordPolicyOptions?.inEffect() && type === 'password'\">\n  {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n</app-callout>\n<div class=\"card card-generated bg-light my-4\">\n  <div class=\"card-body\">\n    <div\n      *ngIf=\"type === 'password'\"\n      class=\"generated-wrapper\"\n      [innerHTML]=\"password | colorPassword\"\n      appSelectCopy\n    ></div>\n    <div\n      *ngIf=\"type === 'username'\"\n      class=\"generated-wrapper\"\n      [innerHTML]=\"username | colorPassword\"\n      appSelectCopy\n    ></div>\n  </div>\n</div>\n<div class=\"form-group\" role=\"radiogroup\" aria-labelledby=\"typeHeading\">\n  <label id=\"typeHeading\" class=\"d-block\">{{ \"whatWouldYouLikeToGenerate\" | i18n }}</label>\n  <div class=\"form-check form-check-inline\" *ngFor=\"let o of typeOptions\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      [(ngModel)]=\"type\"\n      name=\"Type\"\n      id=\"type_{{ o.value }}\"\n      [value]=\"o.value\"\n      (change)=\"typeChanged()\"\n      [checked]=\"type === o.value\"\n    />\n    <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n      {{ o.name }}\n    </label>\n  </div>\n</div>\n<ng-container *ngIf=\"type === 'password'\">\n  <div aria-labelledby=\"passwordTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <label id=\"passwordTypeHeading\" class=\"d-block\">{{ \"passwordType\" | i18n }}</label>\n    <div class=\"form-check form-check-inline\" *ngFor=\"let o of passTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"passwordOptions.type\"\n        name=\"PasswordType\"\n        id=\"passwordType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"savePasswordOptions()\"\n        [checked]=\"passwordOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"passwordType_{{ o.value }}\">\n        {{ o.name }}\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"passwordOptions.type === 'passphrase'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n        <input\n          id=\"num-words\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"3\"\n          max=\"20\"\n          [(ngModel)]=\"passwordOptions.numWords\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n        <input\n          id=\"word-separator\"\n          class=\"form-control\"\n          type=\"text\"\n          maxlength=\"1\"\n          [(ngModel)]=\"passwordOptions.wordSeparator\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"capitalize\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.capitalize\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.capitalize\"\n        />\n        <label for=\"capitalize\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"include-number\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.includeNumber\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.includeNumber\"\n        />\n        <label for=\"include-number\" class=\"form-check-label\">{{ \"includeNumber\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"passwordOptions.type === 'password'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"length\">{{ \"length\" | i18n }}</label>\n        <input\n          id=\"length\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"5\"\n          max=\"128\"\n          [(ngModel)]=\"passwordOptions.length\"\n          (blur)=\"savePasswordOptions()\"\n          (change)=\"lengthChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n        <input\n          id=\"min-number\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minNumber\"\n          (change)=\"minNumberChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n        <input\n          id=\"min-special\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minSpecial\"\n          (change)=\"minSpecialChanged()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"uppercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.uppercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useUppercase\"\n          attr.aria-label=\"{{ 'uppercase' | i18n }}\"\n        />\n        <label for=\"uppercase\" class=\"form-check-label\">A-Z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"lowercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.lowercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useLowercase\"\n          attr.aria-label=\"{{ 'lowercase' | i18n }}\"\n        />\n        <label for=\"lowercase\" class=\"form-check-label\">a-z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"numbers\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.number\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useNumbers\"\n          attr.aria-label=\"{{ 'numbers' | i18n }}\"\n        />\n        <label for=\"numbers\" class=\"form-check-label\">0-9</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"special\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.special\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useSpecial\"\n          attr.aria-label=\"{{ 'specialCharacters' | i18n }}\"\n        />\n        <label for=\"special\" class=\"form-check-label\">!@#$%^&amp;*</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"ambiguous\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"avoidAmbiguous\"\n        />\n        <label for=\"ambiguous\" class=\"form-check-label\">{{ \"ambiguous\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"d-flex\">\n    <div>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\">\n        {{ \"regeneratePassword\" | i18n }}\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n        {{ \"copyPassword\" | i18n }}\n      </button>\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"history()\"\n        appA11yTitle=\"{{ 'passwordHistory' | i18n }}\"\n      >\n        <i class=\"bwi bwi-clock bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'username'\">\n  <div aria-labelledby=\"usernameTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <div class=\"d-block\">\n      <label id=\"usernameTypeHeading\">{{ \"usernameType\" | i18n }}</label>\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/generator/#username-types\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"form-check\" *ngFor=\"let o of usernameTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"usernameOptions.type\"\n        name=\"UsernameType\"\n        id=\"usernameType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"saveUsernameOptions()\"\n        [checked]=\"usernameOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"usernameType_{{ o.value }}\">\n        {{ o.name }}\n        <div class=\"small text-muted\">{{ o.desc }}</div>\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'forwarded'\">\n    <div class=\"form-group\">\n      <label class=\"d-block\">{{ \"service\" | i18n }}</label>\n      <div class=\"form-check\" *ngFor=\"let o of forwardOptions\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          [(ngModel)]=\"usernameOptions.forwardedService\"\n          name=\"ForwardType\"\n          id=\"forwardtype_{{ o.value }}\"\n          [value]=\"o.value\"\n          (change)=\"saveUsernameOptions()\"\n          [checked]=\"usernameOptions.forwardedService === o.value\"\n        />\n        <label class=\"form-check-label\" for=\"forwardtype_{{ o.value }}\">\n          {{ o.name }}\n        </label>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'simplelogin'\">\n      <div class=\"form-group col-4\">\n        <label for=\"simplelogin-apikey\">{{ \"apiKey\" | i18n }}</label>\n        <input\n          id=\"simplelogin-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedSimpleLoginApiKey\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'duckduckgo'\">\n      <div class=\"form-group col-4\">\n        <label for=\"duckduckgo-apikey\">{{ \"apiKey\" | i18n }}</label>\n        <input\n          id=\"duckduckgo-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          name=\"DuckDudkGoApiKey\"\n          [(ngModel)]=\"usernameOptions.forwardedDuckDuckGoToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'anonaddy'\">\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"anonaddy-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-domain\">{{ \"domainName\" | i18n }}</label>\n        <input\n          id=\"anonaddy-domain\"\n          class=\"form-control\"\n          type=\"text\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyDomain\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'firefoxrelay'\">\n      <div class=\"form-group col-4\">\n        <label for=\"firefox-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"firefox-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedFirefoxApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'fastmail'\">\n      <div class=\"form-group col-4\">\n        <label for=\"fastmail-apiToken\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"fastmail-apiToken\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedFastmailApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'subaddress'\">\n    <div class=\"form-group col-4\">\n      <label for=\"subaddress-email\">{{ \"emailAddress\" | i18n }}</label>\n      <input\n        id=\"subaddress-email\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.subaddressEmail\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'catchall'\">\n    <div class=\"form-group col-4\">\n      <label for=\"catchall-domain\">{{ \"domainName\" | i18n }}</label>\n      <input\n        id=\"catchall-domain\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.catchallDomain\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'word'\">\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            id=\"capitalizeUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordCapitalize\"\n          />\n          <label for=\"capitalizeUsername\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n        </div>\n        <div class=\"form-check\">\n          <input\n            id=\"includeNumberUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordIncludeNumber\"\n          />\n          <label for=\"includeNumberUsername\" class=\"form-check-label\">{{\n            \"includeNumber\" | i18n\n          }}</label>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <div #form [appApiAction]=\"usernameGeneratingPromise\">\n    <button\n      type=\"button\"\n      class=\"btn btn-submit btn-primary\"\n      (click)=\"regenerate()\"\n      [disabled]=\"form.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"regenerateUsername\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n      {{ \"copyUsername\" | i18n }}\n    </button>\n  </div>\n</ng-container>\n<ng-template #historyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { GeneratorComponent as BaseGeneratorComponent } from \"@bitwarden/angular/components/generator.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\n\nimport { PasswordGeneratorHistoryComponent } from \"./password-generator-history.component\";\n\n@Component({\n  selector: \"app-generator\",\n  templateUrl: \"generator.component.html\",\n})\nexport class GeneratorComponent extends BaseGeneratorComponent {\n  @ViewChild(\"historyTemplate\", { read: ViewContainerRef, static: true })\n  historyModalRef: ViewContainerRef;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    usernameGenerationService: UsernameGenerationService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService,\n    route: ActivatedRoute,\n    private modalService: ModalService\n  ) {\n    super(\n      passwordGenerationService,\n      usernameGenerationService,\n      platformUtilsService,\n      stateService,\n      i18nService,\n      logService,\n      route,\n      window\n    );\n    if (platformUtilsService.isSelfHost()) {\n      // Cannot use Firefox Relay on self hosted web vaults due to CORS issues with Firefox Relay API\n      this.forwardOptions.splice(\n        this.forwardOptions.findIndex((o) => o.value === \"firefoxrelay\"),\n        1\n      );\n    }\n  }\n\n  async history() {\n    await this.modalService.openViewRef(PasswordGeneratorHistoryComponent, this.historyModalRef);\n  }\n\n  lengthChanged() {\n    document.getElementById(\"length\").focus();\n  }\n\n  minNumberChanged() {\n    document.getElementById(\"min-number\").focus();\n  }\n\n  minSpecialChanged() {\n    document.getElementById(\"min-special\").focus();\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-tools\",\n  templateUrl: \"tools.component.html\",\n})\nexport class ToolsComponent implements OnInit {\n  canAccessPremium = false;\n\n  constructor(private stateService: StateService, private messagingService: MessagingService) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card mb-4\">\n        <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"generator\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"generator\" | i18n }}\n          </a>\n          <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"importData\" | i18n }}\n          </a>\n          <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"exportVault\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/models/request/cipherWithIdRequest\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/models/request/folderWithIdRequest\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/updateKeyRequest\";\n\n@Component({\n  selector: \"app-update-key\",\n  templateUrl: \"update-key.component.html\",\n})\nexport class UpdateKeyComponent {\n  masterPassword: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (hasEncKey) {\n      return;\n    }\n\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.makeRequest().then((request) => {\n        return this.apiService.postAccountKey(request);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"keyUpdated\"),\n        this.i18nService.t(\"logBackInOthersToo\"),\n        { timeout: 15000 }\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async makeRequest(): Promise<UpdateKeyRequest> {\n    const key = await this.cryptoService.getKey();\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n\n    await this.syncService.fullSync(true);\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    return request;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"updateEncKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"updateEncKeyTitle\">{{ \"updateEncryptionKey\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"updateEncryptionKeyShortDesc\" | i18n }} {{ \"updateEncryptionKeyDesc\" | i18n }}\n          <a\n            href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            >{{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <app-callout type=\"warning\">{{ \"updateEncryptionKeyWarning\" | i18n }}</app-callout>\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appAutofocus\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"updateEncryptionKey\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    protected folderService: FolderService,\n    protected folderApiService: FolderApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderApiService.save(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderApiService.delete(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"folderAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"folderAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"folder.name\"\n          required\n          appAutofocus\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"@bitwarden/angular/components/folder-add-edit.component\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  constructor(\n    folderService: FolderService,\n    folderApiService: FolderApiServiceAbstraction,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(folderService, folderApiService, i18nService, platformUtilsService, logService);\n  }\n}\n","import { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, map, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { Checkable, isChecked } from \"@bitwarden/common/types/checkable\";\n\n@Directive()\nexport class ShareComponent implements OnInit, OnDestroy {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<void>;\n  cipher: CipherView;\n  collections: Checkable<CollectionView>[] = [];\n  organizations$: Observable<Organization[]>;\n\n  protected writeableCollections: Checkable<CollectionView>[] = [];\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => {\n        return orgs\n          .filter((o) => o.enabled && o.status === OrganizationUserStatusType.Confirmed)\n          .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n      })\n    );\n\n    this.organizations$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (this.organizationId == null && orgs.length > 0) {\n        this.organizationId = orgs[0].id;\n      }\n    });\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => (c.checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections.filter(isChecked).map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgs = await firstValueFrom(this.organizations$);\n    const orgName =\n      orgs.find((o) => o.id === this.organizationId)?.name ?? this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if (this.collections[i].checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"shareTitle\">\n          {{ \"moveToOrganization\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <ng-container *ngIf=\"organizations$ | async as organizations\">\n        <div class=\"modal-body\" *ngIf=\"!organizations || !organizations.length\">\n          {{ \"noOrganizationsList\" | i18n }}\n        </div>\n        <div class=\"modal-body\" *ngIf=\"organizations && organizations.length\">\n          <p>{{ \"moveToOrgDesc\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n            <select\n              id=\"organization\"\n              name=\"OrganizationId\"\n              [(ngModel)]=\"organizationId\"\n              class=\"form-control\"\n              (change)=\"filterCollections()\"\n            >\n              <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"d-flex\">\n            <h3>{{ \"collections\" | i18n }}</h3>\n            <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n              <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"selectAll\" | i18n }}\n              </button>\n              <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"unselectAll\" | i18n }}\n              </button>\n            </div>\n          </div>\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n                <td class=\"table-list-checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td>\n                  {{ c.name }}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary btn-submit manual\"\n            [disabled]=\"form.loading || !canSave\"\n            [ngClass]=\"{ loading: form.loading }\"\n            *ngIf=\"organizations && organizations.length\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"save\" | i18n }}</span>\n          </button>\n          <a\n            href=\"#\"\n            routerLink=\"/create-organization\"\n            class=\"btn btn-primary\"\n            *ngIf=\"!organizations || !organizations.length\"\n          >\n            {{ \"newOrganization\" | i18n }}\n          </a>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"cancel\" | i18n }}\n          </button>\n        </div>\n      </ng-container>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { ShareComponent as BaseShareComponent } from \"@bitwarden/angular/components/share.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\nexport class ShareComponent extends BaseShareComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-verify-email\",\n  templateUrl: \"verify-email.component.html\",\n})\nexport class VerifyEmailComponent {\n  actionPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async send() {\n    if (this.actionPromise != null) {\n      return;\n    }\n    try {\n      this.actionPromise = this.apiService.postAccountVerifyEmail();\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"checkInboxForVerification\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","<div class=\"card border-warning\">\n  <div class=\"card-header bg-warning text-white\">\n    <i class=\"bwi bwi-envelope bwi-fw\" aria-hidden=\"true\"></i> {{ \"verifyEmail\" | i18n }}\n  </div>\n  <div class=\"card-body\">\n    <p>{{ \"verifyEmailDesc\" | i18n }}</p>\n    <button\n      type=\"button\"\n      class=\"btn btn-block btn-outline-secondary btn-submit\"\n      #sendBtn\n      [appApiAction]=\"actionPromise\"\n      [disabled]=\"sendBtn.loading\"\n      (click)=\"send()\"\n    >\n      <i class=\"bwi bwi-spin bwi-spinner\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>\n        {{ \"sendEmail\" | i18n }}\n      </span>\n    </button>\n  </div>\n</div>\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-vault-filter\n              #vaultFilter\n              [activeFilter]=\"activeFilter\"\n              (onFilterChange)=\"applyVaultFilter($event)\"\n              (onAddFolder)=\"addFolder()\"\n              (onEditFolder)=\"editFolder($event.id)\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n            ></app-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div [ngClass]=\"{ 'col-6': isShowingCards, 'col-9': !isShowingCards }\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"vaultItems\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions\n            [ciphersComponent]=\"ciphersComponent\"\n            [deleted]=\"activeFilter.status === 'trash'\"\n          >\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addCipher()\"\n            *ngIf=\"activeFilter.status !== 'trash'\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout\n        type=\"warning\"\n        *ngIf=\"activeFilter.status === 'trash'\"\n        icon=\"bwi-exclamation-triangle\"\n      >\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-vault-ciphers\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onShareClicked)=\"shareCipher($event)\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n        (onOrganzationBadgeClicked)=\"applyOrganizationFilter($event)\"\n      >\n      </app-vault-ciphers>\n    </div>\n    <div class=\"col-3\">\n      <div class=\"card border-warning mb-4\" *ngIf=\"showUpdateKey\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateKeyTitle\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateEncryptionKeyShortDesc\" | i18n }}</p>\n          <button class=\"btn btn-block btn-outline-secondary\" type=\"button\" (click)=\"updateKey()\">\n            {{ \"updateEncryptionKey\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-verify-email *ngIf=\"showVerifyEmail\" class=\"d-block mb-4\"></app-verify-email>\n      <div class=\"card border-warning mb-4\" *ngIf=\"showBrowserOutdated\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateBrowser\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateBrowserDesc\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            target=\"_blank\"\n            href=\"https://browser-update.org/update-browser.html\"\n            rel=\"noopener\"\n          >\n            {{ \"updateBrowser\" | i18n }}\n          </a>\n        </div>\n      </div>\n      <div class=\"card border-success mb-4\" *ngIf=\"showPremiumCallout\">\n        <div class=\"card-header bg-success text-white\">\n          <i class=\"bwi bwi-star-f bwi-fw\" aria-hidden=\"true\"></i> {{ \"goPremium\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            routerLink=\"/settings/subscription/premium\"\n          >\n            {{ \"goPremium\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #folderAddEdit></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #share></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #updateKeyTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { FolderAddEditComponent } from \"./folder-add-edit.component\";\nimport { ShareComponent } from \"./share.component\";\nimport { VaultService } from \"./shared/vault.service\";\nimport { VaultFilterService } from \"./vault-filter/shared/vault-filter.service\";\nimport { VaultFilterComponent } from \"./vault-filter/vault-filter.component\";\n\nconst BroadcasterSubscriptionId = \"VaultComponent\";\n\n@Component({\n  selector: \"app-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true }) filterComponent: VaultFilterComponent;\n  @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"folderAddEdit\", { read: ViewContainerRef, static: true })\n  folderAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"share\", { read: ViewContainerRef, static: true }) shareModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"updateKeyTemplate\", { read: ViewContainerRef, static: true })\n  updateKeyModalRef: ViewContainerRef;\n\n  folderId: string = null;\n  myVaultOnly = false;\n  showVerifyEmail = false;\n  showBrowserOutdated = false;\n  showUpdateKey = false;\n  showPremiumCallout = false;\n  trashCleanupWarning: string = null;\n  activeFilter: VaultFilter = new VaultFilter();\n\n  constructor(\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private tokenService: TokenService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private vaultService: VaultService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService,\n    private vaultFilterService: VaultFilterService\n  ) {}\n\n  async ngOnInit() {\n    this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\n    this.showBrowserOutdated = window.navigator.userAgent.indexOf(\"MSIE\") !== -1;\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      await this.syncService.fullSync(false);\n      const canAccessPremium = await this.stateService.getCanAccessPremium();\n      this.showPremiumCallout =\n        !this.showVerifyEmail && !canAccessPremium && !this.platformUtilsService.isSelfHost();\n\n      this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n      this.filterComponent.reloadOrganizations();\n      this.showUpdateKey = !(await this.cryptoService.hasEncKey());\n\n      const cipherId = getCipherIdFromParams(params);\n\n      if (cipherId) {\n        const cipherView = new CipherView();\n        cipherView.id = cipherId;\n        if (params.action === \"clone\") {\n          await this.cloneCipher(cipherView);\n        } else if (params.action === \"edit\") {\n          await this.editCipher(cipherView);\n        }\n      }\n      await this.ciphersComponent.reload();\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.subscribe(async (params) => {\n        const cipherId = getCipherIdFromParams(params);\n        if (cipherId) {\n          if ((await this.cipherService.get(cipherId)) != null) {\n            this.editCipherId(cipherId);\n          } else {\n            this.platformUtilsService.showToast(\n              \"error\",\n              this.i18nService.t(\"errorOccurred\"),\n              this.i18nService.t(\"unknownCipher\")\n            );\n            this.router.navigate([], {\n              queryParams: { itemId: null, cipherId: null },\n              queryParamsHandling: \"merge\",\n            });\n          }\n        }\n      });\n\n      this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n        this.ngZone.run(async () => {\n          switch (message.command) {\n            case \"syncCompleted\":\n              if (message.successfully) {\n                await Promise.all([\n                  this.filterComponent.reloadCollectionsAndFolders(this.activeFilter),\n                  this.filterComponent.reloadOrganizations(),\n                  this.ciphersComponent.load(this.ciphersComponent.filter),\n                ]);\n                this.changeDetectorRef.detectChanges();\n              }\n              break;\n          }\n        });\n      });\n    });\n  }\n\n  get isShowingCards() {\n    return (\n      this.showBrowserOutdated ||\n      this.showPremiumCallout ||\n      this.showUpdateKey ||\n      this.showVerifyEmail\n    );\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async applyVaultFilter(vaultFilter: VaultFilter) {\n    this.ciphersComponent.showAddNew = vaultFilter.status !== \"trash\";\n    this.activeFilter = vaultFilter;\n    await this.ciphersComponent.reload(\n      this.activeFilter.buildFilter(),\n      vaultFilter.status === \"trash\"\n    );\n    this.filterComponent.searchPlaceholder = this.vaultService.calculateSearchBarLocalizationString(\n      this.activeFilter\n    );\n    this.go();\n  }\n\n  async applyOrganizationFilter(orgId: string) {\n    if (orgId == null) {\n      this.activeFilter.resetOrganization();\n      this.activeFilter.myVaultOnly = true;\n    } else {\n      this.activeFilter.selectedOrganizationId = orgId;\n    }\n    await this.vaultFilterService.ensureVaultFiltersAreExpanded();\n    await this.applyVaultFilter(this.activeFilter);\n  }\n\n  filterSearchText(searchText: string) {\n    this.ciphersComponent.searchText = searchText;\n    this.ciphersComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (cipher.organizationId == null && !canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    } else if (cipher.organizationId != null) {\n      const org = await this.organizationService.get(cipher.organizationId);\n      if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\n        this.messagingService.send(\"upgradeOrganization\", {\n          organizationId: cipher.organizationId,\n        });\n        return;\n      }\n    }\n\n    let madeAttachmentChanges = false;\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onReuploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.ciphersComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async shareCipher(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      ShareComponent,\n      this.shareModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSharedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addFolder() {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = null;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n      }\n    );\n  }\n\n  async editFolder(folderId: string) {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = folderId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.type = this.activeFilter.cipherType;\n    component.folderId = this.folderId === \"none\" ? null : this.folderId;\n    if (this.activeFilter.selectedCollectionId != null) {\n      const collection = this.filterComponent.collections.fullList.filter(\n        (c) => c.id === this.activeFilter.selectedCollectionId\n      );\n      if (collection.length > 0) {\n        component.organizationId = collection[0].organizationId;\n        component.collectionIds = [this.activeFilter.selectedCollectionId];\n      }\n    }\n    if (this.activeFilter.selectedFolderId && this.activeFilter.selectedFolder) {\n      component.folderId = this.activeFilter.selectedFolderId;\n    }\n    if (this.activeFilter.selectedOrganizationId) {\n      component.organizationId = this.activeFilter.selectedOrganizationId;\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(id: string) {\n    const cipher = await this.cipherService.get(id);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n  }\n\n  async updateKey() {\n    await this.modalService.openViewRef(UpdateKeyComponent, this.updateKeyModalRef);\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        favorites: this.activeFilter.status === \"favorites\" ? true : null,\n        type: this.activeFilter.cipherType,\n        folderId: this.activeFilter.selectedFolderId,\n        collectionId: this.activeFilter.selectedCollectionId,\n        deleted: this.activeFilter.status === \"trash\" ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { VaultComponent } from \"./vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VaultComponent,\n    data: { titleId: \"vaults\" },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { OrganizationBadgeModule } from \"./organization-badge/organization-badge.module\";\nimport { VaultSharedModule } from \"./shared/vault-shared.module\";\nimport { VaultRoutingModule } from \"./vault-routing.module\";\nimport { VaultComponent } from \"./vault.component\";\n\n@NgModule({\n  imports: [VaultSharedModule, VaultRoutingModule, OrganizationBadgeModule],\n  declarations: [VaultComponent, CiphersComponent],\n  exports: [VaultComponent],\n})\nexport class VaultModule {}\n","import { NgModule } from \"@angular/core\";\nimport { Route, RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { LockGuard } from \"@bitwarden/angular/guards/lock.guard\";\nimport { UnauthGuard } from \"@bitwarden/angular/guards/unauth.guard\";\n\nimport { flagEnabled, Flags } from \"../utils/flags\";\n\nimport { AcceptEmergencyComponent } from \"./accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"./accounts/accept-organization.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginWithDeviceComponent } from \"./accounts/login/login-with-device.component\";\nimport { LoginComponent } from \"./accounts/login/login.component\";\nimport { RecoverDeleteComponent } from \"./accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"./accounts/recover-two-factor.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TrialInitiationComponent } from \"./accounts/trial-initiation/trial-initiation.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"./accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"./accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"./accounts/verify-recover-delete.component\";\nimport { HomeGuard } from \"./guards/home.guard\";\nimport { FrontendLayoutComponent } from \"./layouts/frontend-layout.component\";\nimport { UserLayoutComponent } from \"./layouts/user-layout.component\";\nimport { OrganizationsRoutingModule } from \"./organizations/organization-routing.module\";\nimport { AcceptFamilySponsorshipComponent } from \"./organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"./organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ReportsModule } from \"./reports\";\nimport { AccessComponent } from \"./send/access.component\";\nimport { SendComponent } from \"./send/send.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { CreateOrganizationComponent } from \"./settings/create-organization.component\";\nimport { DomainRulesComponent } from \"./settings/domain-rules.component\";\nimport { EmergencyAccessViewComponent } from \"./settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"./settings/emergency-access.component\";\nimport { PreferencesComponent } from \"./settings/preferences.component\";\nimport { SecurityRoutingModule } from \"./settings/security-routing.module\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"./settings/sponsored-families.component\";\nimport { SubscriptionRoutingModule } from \"./settings/subscription-routing.module\";\nimport { GeneratorComponent } from \"./tools/generator.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { VaultModule } from \"./vault/vault.module\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    data: { doNotSaveUrl: true },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        children: [], // Children lets us have an empty component.\n        canActivate: [HomeGuard], // Redirects either to vault, login or lock page.\n      },\n      { path: \"login\", component: LoginComponent, canActivate: [UnauthGuard] },\n      {\n        path: \"login-with-device\",\n        component: LoginWithDeviceComponent,\n        data: { titleId: \"loginWithDevice\" },\n      },\n      { path: \"2fa\", component: TwoFactorComponent, canActivate: [UnauthGuard] },\n      {\n        path: \"register\",\n        component: RegisterComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"createAccount\" },\n      },\n      buildFlaggedRoute(\"showTrial\", {\n        path: \"trial\",\n        component: TrialInitiationComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"startTrial\" },\n      }),\n      {\n        path: \"sso\",\n        component: SsoComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"enterpriseSingleSignOn\" },\n      },\n      {\n        path: \"set-password\",\n        component: SetPasswordComponent,\n        data: { titleId: \"setMasterPassword\" },\n      },\n      {\n        path: \"hint\",\n        component: HintComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"passwordHint\" },\n      },\n      {\n        path: \"lock\",\n        component: LockComponent,\n        canActivate: [LockGuard],\n      },\n      { path: \"verify-email\", component: VerifyEmailTokenComponent },\n      {\n        path: \"accept-organization\",\n        component: AcceptOrganizationComponent,\n        data: { titleId: \"joinOrganization\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-emergency\",\n        component: AcceptEmergencyComponent,\n        data: { titleId: \"acceptEmergency\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-families-for-enterprise\",\n        component: AcceptFamilySponsorshipComponent,\n        data: { titleId: \"acceptFamilySponsorship\", doNotSaveUrl: false },\n      },\n      { path: \"recover\", pathMatch: \"full\", redirectTo: \"recover-2fa\" },\n      {\n        path: \"recover-2fa\",\n        component: RecoverTwoFactorComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"recoverAccountTwoStep\" },\n      },\n      {\n        path: \"recover-delete\",\n        component: RecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"verify-recover-delete\",\n        component: VerifyRecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"send/:sendId/:key\",\n        component: AccessComponent,\n        data: { title: \"Bitwarden Send\" },\n      },\n      {\n        path: \"update-temp-password\",\n        component: UpdateTempPasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updateTempPassword\" },\n      },\n      {\n        path: \"update-password\",\n        component: UpdatePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updatePassword\" },\n      },\n      {\n        path: \"remove-password\",\n        component: RemovePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"removeMasterPassword\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    component: UserLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"vault\",\n        loadChildren: () => VaultModule,\n      },\n      { path: \"sends\", component: SendComponent, data: { title: \"Send\" } },\n      {\n        path: \"create-organization\",\n        component: CreateOrganizationComponent,\n        data: { titleId: \"newOrganization\" },\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: AccountComponent, data: { titleId: \"myAccount\" } },\n          {\n            path: \"preferences\",\n            component: PreferencesComponent,\n            data: { titleId: \"preferences\" },\n          },\n          {\n            path: \"security\",\n            loadChildren: () => SecurityRoutingModule,\n          },\n          {\n            path: \"domain-rules\",\n            component: DomainRulesComponent,\n            data: { titleId: \"domainRules\" },\n          },\n          {\n            path: \"subscription\",\n            loadChildren: () => SubscriptionRoutingModule,\n          },\n          {\n            path: \"emergency-access\",\n            children: [\n              {\n                path: \"\",\n                component: EmergencyAccessComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n              {\n                path: \":id\",\n                component: EmergencyAccessViewComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n            ],\n          },\n          {\n            path: \"sponsored-families\",\n            component: SponsoredFamiliesComponent,\n            data: { titleId: \"sponsoredFamilies\" },\n          },\n        ],\n      },\n      {\n        path: \"tools\",\n        component: ToolsComponent,\n        canActivate: [AuthGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"generator\" },\n          {\n            path: \"\",\n            loadChildren: () =>\n              import(\"./tools/import-export/import-export.module\").then(\n                (m) => m.ImportExportModule\n              ),\n          },\n          {\n            path: \"generator\",\n            component: GeneratorComponent,\n            data: { titleId: \"generator\" },\n          },\n        ],\n      },\n      {\n        path: \"reports\",\n        loadChildren: () => ReportsModule,\n      },\n      { path: \"setup/families-for-enterprise\", component: FamiliesForEnterpriseSetupComponent },\n    ],\n  },\n  {\n    path: \"organizations\",\n    loadChildren: () => OrganizationsRoutingModule,\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      paramsInheritanceStrategy: \"always\",\n      // enableTracing: true,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class OssRoutingModule {}\n\nexport function buildFlaggedRoute(flagName: keyof Flags, route: Route): Route {\n  return flagEnabled(flagName)\n    ? route\n    : {\n        path: route.path,\n        redirectTo: \"/\",\n      };\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { LoginWithDeviceComponent } from \"./login-with-device.component\";\nimport { LoginComponent } from \"./login.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [LoginComponent, LoginWithDeviceComponent],\n  exports: [LoginComponent, LoginWithDeviceComponent],\n})\nexport class LoginModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { VerticalStepContentComponent } from \"./vertical-step-content.component\";\nimport { VerticalStep } from \"./vertical-step.component\";\nimport { VerticalStepperComponent } from \"./vertical-stepper.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [VerticalStepperComponent, VerticalStep, VerticalStepContentComponent],\n  exports: [VerticalStepperComponent, VerticalStep],\n})\nexport class VerticalStepperModule {}\n","import { CdkStepperModule } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { FormFieldModule } from \"@bitwarden/components\";\n\nimport { OrganizationCreateModule } from \"../../organizations/create/organization-create.module\";\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\nimport { RegisterFormModule } from \"../register-form/register-form.module\";\n\nimport { BillingComponent } from \"./billing.component\";\nimport { ConfirmationDetailsComponent } from \"./confirmation-details.component\";\nimport { AbmEnterpriseContentComponent } from \"./content/abm-enterprise-content.component\";\nimport { AbmTeamsContentComponent } from \"./content/abm-teams-content.component\";\nimport { CnetEnterpriseContentComponent } from \"./content/cnet-enterprise-content.component\";\nimport { CnetIndividualContentComponent } from \"./content/cnet-individual-content.component\";\nimport { CnetTeamsContentComponent } from \"./content/cnet-teams-content.component\";\nimport { DefaultContentComponent } from \"./content/default-content.component\";\nimport { EnterpriseContentComponent } from \"./content/enterprise-content.component\";\nimport { Enterprise1ContentComponent } from \"./content/enterprise1-content.component\";\nimport { Enterprise2ContentComponent } from \"./content/enterprise2-content.component\";\nimport { LogoCnetComponent } from \"./content/logo-cnet.component\";\nimport { LogoForbesComponent } from \"./content/logo-forbes.component\";\nimport { LogoUSNewsComponent } from \"./content/logo-us-news.component\";\nimport { TeamsContentComponent } from \"./content/teams-content.component\";\nimport { Teams1ContentComponent } from \"./content/teams1-content.component\";\nimport { Teams2ContentComponent } from \"./content/teams2-content.component\";\nimport { TrialInitiationComponent } from \"./trial-initiation.component\";\nimport { VerticalStepperModule } from \"./vertical-stepper/vertical-stepper.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    CdkStepperModule,\n    VerticalStepperModule,\n    FormFieldModule,\n    RegisterFormModule,\n    OrganizationCreateModule,\n    LooseComponentsModule,\n  ],\n  declarations: [\n    TrialInitiationComponent,\n    EnterpriseContentComponent,\n    TeamsContentComponent,\n    ConfirmationDetailsComponent,\n    BillingComponent,\n    DefaultContentComponent,\n    EnterpriseContentComponent,\n    Enterprise1ContentComponent,\n    Enterprise2ContentComponent,\n    TeamsContentComponent,\n    Teams1ContentComponent,\n    Teams2ContentComponent,\n    CnetEnterpriseContentComponent,\n    CnetIndividualContentComponent,\n    CnetTeamsContentComponent,\n    AbmEnterpriseContentComponent,\n    AbmTeamsContentComponent,\n    LogoCnetComponent,\n    LogoForbesComponent,\n    LogoUSNewsComponent,\n  ],\n  exports: [TrialInitiationComponent],\n  providers: [TitleCasePipe],\n})\nexport class TrialInitiationModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule],\n  declarations: [EntityUsersComponent],\n  exports: [EntityUsersComponent],\n})\nexport class OrganizationManageModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\n\nimport { EnrollMasterPasswordReset } from \"./enroll-master-password-reset.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule, LooseComponentsModule],\n  declarations: [EnrollMasterPasswordReset],\n  exports: [EnrollMasterPasswordReset],\n})\nexport class OrganizationUserModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LoginModule } from \"./accounts/login/login.module\";\nimport { TrialInitiationModule } from \"./accounts/trial-initiation/trial-initiation.module\";\nimport { OrganizationCreateModule } from \"./organizations/create/organization-create.module\";\nimport { OrganizationManageModule } from \"./organizations/manage/organization-manage.module\";\nimport { OrganizationUserModule } from \"./organizations/users/organization-user.module\";\nimport { LooseComponentsModule, SharedModule } from \"./shared\";\nimport { OrganizationBadgeModule } from \"./vault/organization-badge/organization-badge.module\";\nimport { VaultFilterModule } from \"./vault/vault-filter/vault-filter.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    OrganizationManageModule,\n    OrganizationUserModule,\n    OrganizationCreateModule,\n    LoginModule,\n  ],\n  exports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    LoginModule,\n  ],\n  bootstrap: [],\n})\nexport class OssModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nconst routes: Routes = [{ path: \"**\", redirectTo: \"\" }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WildcardRoutingModule {}\n","export class ProviderAddOrganizationRequest {\n  organizationId: string;\n  key: string;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProviderAddOrganizationRequest } from \"@bitwarden/common/models/request/provider/providerAddOrganizationRequest\";\n\n@Injectable()\nexport class WebProviderService {\n  constructor(\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private apiService: ApiService\n  ) {}\n\n  async addOrganizationToProvider(providerId: string, organizationId: string) {\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const providerKey = await this.cryptoService.getProviderKey(providerId);\n\n    const encryptedOrgKey = await this.cryptoService.encrypt(orgKey.key, providerKey);\n\n    const request = new ProviderAddOrganizationRequest();\n    request.organizationId = organizationId;\n    request.key = encryptedOrgKey.encryptedString;\n\n    const response = await this.apiService.postProviderAddOrganization(providerId, request);\n    await this.syncService.fullSync(true);\n    return response;\n  }\n\n  async detachOrganizastion(providerId: string, organizationId: string): Promise<any> {\n    await this.apiService.deleteProviderOrganization(providerId, organizationId);\n    await this.syncService.fullSync(true);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"addTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"addTitle\">\n          {{ \"addExistingOrganization\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <ng-container *ngIf=\"!loading\">\n          <table class=\"table table-hover table-list\">\n            <tr *ngFor=\"let o of organizations\">\n              <td width=\"30\">\n                <app-avatar [data]=\"o.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\n              </td>\n              <td>\n                {{ o.name }}\n              </td>\n              <td>\n                <button\n                  class=\"btn btn-outline-secondary pull-right\"\n                  (click)=\"add(o)\"\n                  [disabled]=\"formPromise\"\n                >\n                  Add\n                </button>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\n@Component({\n  selector: \"provider-add-organization\",\n  templateUrl: \"add-organization.component.html\",\n})\nexport class AddOrganizationComponent implements OnInit {\n  @Input() providerId: string;\n  @Input() organizations: Organization[];\n  @Output() onAddedOrganization = new EventEmitter();\n\n  provider: Provider;\n  formPromise: Promise<any>;\n  loading = true;\n\n  constructor(\n    private providerService: ProviderService,\n    private webProviderService: WebProviderService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private validationService: ValidationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    if (this.providerId == null) {\n      return;\n    }\n\n    this.provider = await this.providerService.get(this.providerId);\n\n    this.loading = false;\n  }\n\n  async add(organization: Organization) {\n    if (this.formPromise) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"addOrganizationConfirmation\", organization.name, this.provider.name),\n      organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.webProviderService.addOrganizationToProvider(\n        this.providerId,\n        organization.id\n      );\n      await this.formPromise;\n    } catch (e) {\n      this.validationService.showError(e);\n      return;\n    } finally {\n      this.formPromise = null;\n    }\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"organizationJoinedProvider\")\n    );\n    this.onAddedOrganization.emit();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Injectable()\nexport class ProviderPermissionsGuard implements CanActivate {\n  constructor(\n    private providerService: ProviderService,\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const provider = await this.providerService.get(route.params.providerId);\n    if (provider == null) {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    if (!provider.isProviderAdmin && !provider.enabled) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"providerIsDisabled\"));\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    const permissionsCallback: (provider: Provider) => boolean = route.data?.providerPermissions;\n    const hasSpecifiedPermissions = permissionsCallback == null || permissionsCallback(provider);\n\n    if (!hasSpecifiedPermissions) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"accessDenied\"));\n      return this.router.createUrlTree([\"/providers\", provider.id]);\n    }\n\n    return true;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header d-flex\">\n    <h1>{{ \"providers\" | i18n }}</h1>\n  </div>\n  <p *ngIf=\"!loaded\" class=\"text-muted\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"loaded\">\n    <table class=\"table table-hover table-list\" *ngIf=\"providers && providers.length\">\n      <tbody>\n        <tr *ngFor=\"let p of providers\">\n          <td width=\"30\">\n            <app-avatar [data]=\"p.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" [routerLink]=\"['/providers', p.id]\">{{ p.name }}</a>\n            <ng-container *ngIf=\"!p.enabled\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-danger\"\n                title=\"{{ 'providerIsDisabled' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"providerIsDisabled\" | i18n }}</span>\n            </ng-container>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"app-providers\",\n  templateUrl: \"providers.component.html\",\n})\nexport class ProvidersComponent implements OnInit {\n  providers: Provider[];\n  loaded = false;\n  actionPromise: Promise<any>;\n\n  constructor(private providerService: ProviderService, private i18nService: I18nService) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    await this.load();\n  }\n\n  async load() {\n    const providers = await this.providerService.getAll();\n    providers.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.providers = providers;\n    this.loaded = true;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"clients\" | i18n }}</h1>\n\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <a class=\"btn btn-sm btn-outline-primary ml-3\" routerLink=\"create\" *ngIf=\"manageOrganizations\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newClientOrganization\" | i18n }}\n    </a>\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"addExistingOrganization()\"\n      *ngIf=\"manageOrganizations && showAddExisting\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"addExistingOrganization\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<ng-container\n  *ngIf=\"!loading && (clients | search: searchText:'organizationName':'id') as searchedClients\"\n>\n  <p *ngIf=\"!searchedClients.length\">{{ \"noClientsInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedClients.length\">\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <thead>\n        <tr>\n          <th colspan=\"2\">{{ \"name\" | i18n }}</th>\n          <th>{{ \"numberOfUsers\" | i18n }}</th>\n          <th>{{ \"billingPlan\" | i18n }}</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let o of searchedClients\">\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"o.organizationName\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            ></app-avatar>\n          </td>\n          <td>\n            <a [routerLink]=\"['/organizations', o.organizationId]\">{{ o.organizationName }}</a>\n          </td>\n          <td>\n            <span>{{ o.userCount }}</span>\n            <span *ngIf=\"o.seats != null\"> / {{ o.seats }}</span>\n          </td>\n          <td>\n            <span>{{ o.plan }}</span>\n          </td>\n          <td class=\"table-list-options\" *ngIf=\"manageOrganizations\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(o)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n\n<ng-template #add></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ProviderOrganizationOrganizationDetailsResponse } from \"@bitwarden/common/models/response/provider/providerOrganizationResponse\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\nimport { AddOrganizationComponent } from \"./add-organization.component\";\n\nconst DisallowedPlanTypes = [\n  PlanType.Free,\n  PlanType.FamiliesAnnually2019,\n  PlanType.FamiliesAnnually,\n];\n\n@Component({\n  templateUrl: \"clients.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ClientsComponent implements OnInit {\n  @ViewChild(\"add\", { read: ViewContainerRef, static: true }) addModalRef: ViewContainerRef;\n\n  providerId: string;\n  searchText: string;\n  addableOrganizations: Organization[];\n  loading = true;\n  manageOrganizations = false;\n  showAddExisting = false;\n\n  clients: ProviderOrganizationOrganizationDetailsResponse[];\n  pagedClients: ProviderOrganizationOrganizationDetailsResponse[];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n  protected actionPromise: Promise<unknown>;\n  private pagedClientsCount = 0;\n\n  constructor(\n    private route: ActivatedRoute,\n    private providerService: ProviderService,\n    private apiService: ApiService,\n    private searchService: SearchService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private validationService: ValidationService,\n    private webProviderService: WebProviderService,\n    private logService: LogService,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n\n      await this.load();\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderClients(this.providerId);\n    this.clients = response.data != null && response.data.length > 0 ? response.data : [];\n    this.manageOrganizations =\n      (await this.providerService.get(this.providerId)).type === ProviderUserType.ProviderAdmin;\n    const candidateOrgs = (await this.organizationService.getAll()).filter(\n      (o) => o.isOwner && o.providerId == null\n    );\n    const allowedOrgsIds = await Promise.all(\n      candidateOrgs.map((o) => this.organizationApiService.get(o.id))\n    ).then((orgs) =>\n      orgs.filter((o) => !DisallowedPlanTypes.includes(o.planType)).map((o) => o.id)\n    );\n    this.addableOrganizations = candidateOrgs.filter((o) => allowedOrgsIds.includes(o.id));\n\n    this.showAddExisting = this.addableOrganizations.length !== 0;\n    this.loading = false;\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.clients && this.clients.length > this.pageSize;\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  async resetPaging() {\n    this.pagedClients = [];\n    this.loadMore();\n  }\n\n  loadMore() {\n    if (!this.clients || this.clients.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedClients.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedClientsCount > this.pageSize) {\n      pagedSize = this.pagedClientsCount;\n    }\n    if (this.clients.length > pagedLength) {\n      this.pagedClients = this.pagedClients.concat(\n        this.clients.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedClientsCount = this.pagedClients.length;\n    this.didScroll = this.pagedClients.length > this.pageSize;\n  }\n\n  async addExistingOrganization() {\n    const [modal] = await this.modalService.openViewRef(\n      AddOrganizationComponent,\n      this.addModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.organizations = this.addableOrganizations;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onAddedOrganization.subscribe(async () => {\n          try {\n            await this.load();\n            modal.close();\n          } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n          }\n        });\n      }\n    );\n  }\n\n  async remove(organization: ProviderOrganizationOrganizationDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"detachOrganizationConfirmation\"),\n      organization.organizationName,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.webProviderService.detachOrganizastion(\n      this.providerId,\n      organization.id\n    );\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"detachedOrganization\", organization.organizationName)\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationPlansComponent } from \"@bitwarden/web-vault/app/settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  providerId: string;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n    });\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"newClientOrganization\" | i18n }}</h1>\n</div>\n<p>{{ \"newClientOrganizationDesc\" | i18n }}</p>\n<app-organization-plans [providerId]=\"providerId\"></app-organization-plans>\n","export class ProviderUserAcceptRequest {\n  token: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ providerName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinProviderDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ProviderUserAcceptRequest } from \"@bitwarden/common/models/request/provider/providerUserAcceptRequest\";\nimport { BaseAcceptComponent } from \"@bitwarden/web-vault/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-provider\",\n  templateUrl: \"accept-provider.component.html\",\n})\nexport class AcceptProviderComponent extends BaseAcceptComponent {\n  providerName: string;\n\n  failedMessage = \"providerInviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"providerUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    private apiService: ApiService,\n    platformUtilService: PlatformUtilsService\n  ) {\n    super(router, platformUtilService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params) {\n    const request = new ProviderUserAcceptRequest();\n    request.token = qParams.token;\n\n    await this.apiService.postProviderUserAccept(\n      qParams.providerId,\n      qParams.providerUserId,\n      request\n    );\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"providerInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params) {\n    this.providerName = qParams.providerName;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"form-inline\">\n      <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"start\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n      <span class=\"mx-2\">-</span>\n      <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"end\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n    </div>\n    <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary ml-3\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        <i\n          class=\"bwi bwi-refresh bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-spin': loaded && refreshForm.loading }\"\n        ></i>\n        {{ \"refresh\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\"\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i>\n        <span>{{ \"export\" | i18n }}</span>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n    <thead>\n      <tr>\n        <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n        <th class=\"border-top-0\" width=\"40\">\n          <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n        </th>\n        <th class=\"border-top-0\" width=\"150\">{{ \"user\" | i18n }}</th>\n        <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of events\">\n        <td>{{ e.date | date: \"medium\" }}</td>\n        <td>\n          <i\n            class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n            title=\"{{ e.appName }}, {{ e.ip }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n        </td>\n        <td>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td [innerHTML]=\"e.message\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    class=\"btn btn-block btn-link btn-submit\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && moreBtn.loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\nimport { BaseEventsComponent } from \"@bitwarden/web-vault/app/common/base.events.component\";\nimport { EventService } from \"@bitwarden/web-vault/app/core\";\n\n@Component({\n  selector: \"provider-events\",\n  templateUrl: \"events.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n  exportFileName = \"provider-events\";\n  providerId: string;\n\n  private providerUsersUserIdMap = new Map<string, any>();\n  private providerUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    private providerService: ProviderService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      eventService,\n      i18nService,\n      exportService,\n      platformUtilsService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n      if (provider == null || !provider.useEvents) {\n        this.router.navigate([\"/providers\", this.providerId]);\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderUsers(this.providerId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.providerUsersIdMap.set(u.id, { name: name, email: u.email });\n      this.providerUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsProvider(\n      this.providerId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    return userId != null && this.providerUsersUserIdMap.has(userId)\n      ? this.providerUsersUserIdMap.get(userId)\n      : null;\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"provider\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"people\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canManageUsers\"\n          >\n            {{ \"people\" | i18n }}\n          </a>\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canAccessEventLogs && accessEvents\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"provider-manage\",\n  templateUrl: \"manage.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ManageComponent implements OnInit {\n  provider: Provider;\n  accessEvents = false;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.provider = await this.providerService.get(params.providerId);\n      this.accessEvents = this.provider.useEvents;\n    });\n  }\n}\n","export class ProviderUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class ProviderUserConfirmRequest {\n  key: string;\n}\n","type ProviderUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class ProviderUserBulkConfirmRequest {\n  keys: ProviderUserBulkRequestEntry[];\n\n  constructor(keys: ProviderUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserBulkConfirmRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkRequest\";\nimport { BulkConfirmComponent as OrganizationBulkConfirmComponent } from \"@bitwarden/web-vault/app/organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkUserDetails } from \"@bitwarden/web-vault/app/organizations/manage/bulk/bulk-status.component\";\n\n@Component({\n  templateUrl:\n    \"../../../../../../../apps/web/src/app/organizations/manage/bulk/bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent extends OrganizationBulkConfirmComponent {\n  @Input() providerId: string;\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === ProviderUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new ProviderUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postProviderUsersPublicKey(this.providerId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getProviderKey(this.providerId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new ProviderUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postProviderUserBulkConfirm(this.providerId, request);\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkRequest\";\nimport { BulkRemoveComponent as OrganizationBulkRemoveComponent } from \"@bitwarden/web-vault/app/organizations/manage/bulk/bulk-remove.component\";\n\n@Component({\n  templateUrl:\n    \"../../../../../../../apps/web/src/app/organizations/manage/bulk/bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent extends OrganizationBulkRemoveComponent {\n  @Input() providerId: string;\n\n  async deleteUsers() {\n    const request = new ProviderUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyProviderUsers(this.providerId, request);\n  }\n\n  protected get removeUsersWarning() {\n    return this.i18nService.t(\"removeUsersWarning\");\n  }\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserInviteRequest {\n  emails: string[] = [];\n  type: ProviderUserType;\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserUpdateRequest {\n  type: ProviderUserType;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"providerInviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/provider-users/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeServiceUser\"\n            [value]=\"userType.ServiceUser\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeServiceUser\">\n            {{ \"serviceUser\" | i18n }}\n            <small>{{ \"serviceUserDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeProviderAdmin\"\n            [value]=\"userType.ProviderAdmin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeProviderAdmin\">\n            {{ \"providerAdmin\" | i18n }}\n            <small>{{ \"providerAdminDesc\" | i18n }}</small>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissionsApi\";\nimport { ProviderUserInviteRequest } from \"@bitwarden/common/models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"@bitwarden/common/models/request/provider/providerUserUpdateRequest\";\n\n@Component({\n  selector: \"provider-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() providerUserId: string;\n  @Input() providerId: string;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  emails: string;\n  type: ProviderUserType = ProviderUserType.ServiceUser;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  userType = ProviderUserType;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.providerUserId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getProviderUser(this.providerId, this.providerUserId);\n        this.type = user.type;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new ProviderUserUpdateRequest();\n        request.type = this.type;\n        this.formPromise = this.apiService.putProviderUser(\n          this.providerId,\n          this.providerUserId,\n          request\n        );\n      } else {\n        const request = new ProviderUserInviteRequest();\n        request.emails = this.emails.trim().split(/\\s*,\\s*/);\n        request.type = this.type;\n        this.formPromise = this.apiService.postProviderUserInvite(this.providerId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteProviderUser(this.providerId, this.providerUserId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"people\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span bitBadge badgeType=\"warning\" *ngIf=\"acceptedCount\">{{ acceptedCount }}</span>\n      </button>\n    </div>\n    <div class=\"ml-3\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown ml-3\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"providerUsersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"u | userName\"\n              [email]=\"u.email\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            >\n            </app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"u.twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.ProviderAdmin\">{{ \"providerAdmin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.ServiceUser\">{{ \"serviceUser\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Custom\">{{ \"custom\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"groups(u)\"\n                  *ngIf=\"accessGroups\"\n                >\n                  <i class=\"bwi bwi-fw bwi-sitemap\" aria-hidden=\"true\"></i>\n                  {{ \"groups\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"@bitwarden/common/models/request/provider/providerUserConfirmRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { ProviderUserBulkResponse } from \"@bitwarden/common/models/response/provider/providerUserBulkResponse\";\nimport { ProviderUserUserDetailsResponse } from \"@bitwarden/common/models/response/provider/providerUserResponse\";\nimport { BasePeopleComponent } from \"@bitwarden/web-vault/app/common/base.people.component\";\nimport { BulkStatusComponent } from \"@bitwarden/web-vault/app/organizations/manage/bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"@bitwarden/web-vault/app/organizations/manage/entity-events.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\n\n@Component({\n  selector: \"provider-people\",\n  templateUrl: \"people.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PeopleComponent\n  extends BasePeopleComponent<ProviderUserUserDetailsResponse>\n  implements OnInit\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = ProviderUserType;\n  userStatusType = ProviderUserStatusType;\n  providerId: string;\n  accessEvents = false;\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    private router: Router,\n    searchService: SearchService,\n    validationService: ValidationService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    stateService: StateService,\n    private providerService: ProviderService\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n\n      if (!provider.canManageUsers) {\n        this.router.navigate([\"../\"], { relativeTo: this.route });\n        return;\n      }\n\n      this.accessEvents = provider.useEvents;\n\n      await this.load();\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n        if (qParams.viewEvents != null) {\n          const user = this.users.filter((u) => u.id === qParams.viewEvents);\n          if (user.length > 0 && user[0].status === ProviderUserStatusType.Confirmed) {\n            this.events(user[0]);\n          }\n        }\n      });\n    });\n  }\n\n  getUsers(): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    return this.apiService.getProviderUsers(this.providerId);\n  }\n\n  deleteUser(id: string): Promise<any> {\n    return this.apiService.deleteProviderUser(this.providerId, id);\n  }\n\n  revokeUser(id: string): Promise<any> {\n    // Not implemented.\n    return null;\n  }\n\n  restoreUser(id: string): Promise<any> {\n    // Not implemented.\n    return null;\n  }\n\n  reinviteUser(id: string): Promise<any> {\n    return this.apiService.postProviderUserReinvite(this.providerId, id);\n  }\n\n  async confirmUser(user: ProviderUserUserDetailsResponse, publicKey: Uint8Array): Promise<any> {\n    const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n    const key = await this.cryptoService.rsaEncrypt(providerKey.key, publicKey.buffer);\n    const request = new ProviderUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postProviderUserConfirm(this.providerId, user.id, request);\n  }\n\n  async edit(user: ProviderUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.providerId = this.providerId;\n        comp.providerUserId = user != null ? user.id : null;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n      }\n    );\n  }\n\n  async events(user: ProviderUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.providerId = this.providerId;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === ProviderUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new ProviderUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyProviderUserReinvite(this.providerId, request);\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  private async showBulkStatus(\n    users: ProviderUserUserDetailsResponse[],\n    filteredUsers: ProviderUserUserDetailsResponse[],\n    request: Promise<ListResponse<ProviderUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"provider\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <div class=\"my-auto d-flex align-items-center pl-1\">\n        <app-avatar [data]=\"provider.name\" size=\"45\" [circle]=\"true\"></app-avatar>\n        <div class=\"org-name ml-3\">\n          <span>{{ provider.name }}</span>\n          <small class=\"text-muted\">{{ \"provider\" | i18n }}</small>\n        </div>\n        <div class=\"ml-3 card border-danger text-danger bg-transparent\" *ngIf=\"!provider.enabled\">\n          <div class=\"card-body py-2\">\n            <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {{ \"providerIsDisabled\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"clients\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i>\n            {{ \"clients\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showManageTab\">\n          <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-sliders\" aria-hidden=\"true\"></i>\n            {{ \"manage\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showSettingsTab\">\n          <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-cogs\" aria-hidden=\"true\"></i>\n            {{ \"settings\" | i18n }}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"providers-layout\",\n  templateUrl: \"providers-layout.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ProvidersLayoutComponent {\n  provider: Provider;\n  private providerId: string;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    this.provider = await this.providerService.get(this.providerId);\n  }\n\n  get showMenuBar() {\n    return this.showManageTab || this.showSettingsTab;\n  }\n\n  get showManageTab() {\n    return this.provider.canManageUsers || this.provider.canAccessEventLogs;\n  }\n\n  get showSettingsTab() {\n    return this.provider.isProviderAdmin;\n  }\n\n  get manageRoute(): string {\n    switch (true) {\n      case this.provider.canManageUsers:\n        return \"manage/people\";\n      case this.provider.canAccessEventLogs:\n        return \"manage/events\";\n    }\n  }\n}\n","export class ProviderUpdateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myProvider\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"provider && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"provider.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"provider.billingEmail\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <app-avatar data=\"{{ provider.name }}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProviderUpdateRequest } from \"@bitwarden/common/models/request/provider/providerUpdateRequest\";\nimport { ProviderResponse } from \"@bitwarden/common/models/response/provider/providerResponse\";\n\n@Component({\n  selector: \"provider-account\",\n  templateUrl: \"account.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccountComponent {\n  selfHosted = false;\n  loading = true;\n  provider: ProviderResponse;\n  formPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  private providerId: string;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      try {\n        this.provider = await this.apiService.getProvider(this.providerId);\n      } catch (e) {\n        this.logService.error(`Handled exception: ${e}`);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new ProviderUpdateRequest();\n      request.name = this.provider.name;\n      request.businessName = this.provider.businessName;\n      request.billingEmail = this.provider.billingEmail;\n\n      this.formPromise = this.apiService.putProvider(this.providerId, request).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerUpdated\"));\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\n\n@Component({\n  selector: \"provider-settings\",\n  templateUrl: \"settings.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SettingsComponent {\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      await this.providerService.get(params.providerId);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myProvider\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setupProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"setupProviderLoginDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"@bitwarden/web-vault/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-setup-provider\",\n  templateUrl: \"setup-provider.component.html\",\n})\nexport class SetupProviderComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/providers/setup\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    // Empty\n  }\n}\n","export class ProviderSetupRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  token: string;\n  key: string;\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"setupProvider\" | i18n }}</h1>\n  </div>\n  <p>{{ \"setupProviderDesc\" | i18n }}</p>\n\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"loading\">\n    <h2 class=\"mt-5\">{{ \"generalInformation\" | i18n }}</h2>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required />\n      </div>\n      <div class=\"form-group col-6\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"billingEmail\"\n          required\n        />\n      </div>\n    </div>\n\n    <div class=\"mt-4\">\n      <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"submit\" | i18n }}</span>\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n        {{ \"cancel\" | i18n }}\n      </button>\n    </div>\n  </form>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { ProviderSetupRequest } from \"@bitwarden/common/models/request/provider/providerSetupRequest\";\n\n@Component({\n  selector: \"provider-setup\",\n  templateUrl: \"setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SetupComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  formPromise: Promise<any>;\n\n  providerId: string;\n  token: string;\n  name: string;\n  billingEmail: string;\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService\n  ) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.providerId == null || qParams.email == null || qParams.token == null;\n\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"emergencyInviteAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.providerId = qParams.providerId;\n      this.token = qParams.token;\n\n      // Check if provider exists, redirect if it does\n      try {\n        const provider = await this.apiService.getProvider(this.providerId);\n        if (provider.name != null) {\n          this.router.navigate([\"/providers\", provider.id], { replaceUrl: true });\n        }\n      } catch (e) {\n        this.validationService.showError(e);\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit();\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  async doSubmit() {\n    try {\n      const shareKey = await this.cryptoService.makeShareKey();\n      const key = shareKey[0].encryptedString;\n\n      const request = new ProviderSetupRequest();\n      request.name = this.name;\n      request.billingEmail = this.billingEmail;\n      request.token = this.token;\n      request.key = key;\n\n      const provider = await this.apiService.postProviderSetup(this.providerId, request);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerSetup\"));\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/providers\", provider.id]);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\nimport { FrontendLayoutComponent } from \"@bitwarden/web-vault/app/layouts/frontend-layout.component\";\nimport { ProvidersComponent } from \"@bitwarden/web-vault/app/providers/providers.component\";\n\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { ProviderPermissionsGuard } from \"./guards/provider-permissions.guard\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    component: ProvidersComponent,\n  },\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    children: [\n      {\n        path: \"setup-provider\",\n        component: SetupProviderComponent,\n        data: { titleId: \"setupProvider\" },\n      },\n      {\n        path: \"accept-provider\",\n        component: AcceptProviderComponent,\n        data: { titleId: \"acceptProvider\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"setup\",\n        component: SetupComponent,\n      },\n      {\n        path: \":providerId\",\n        component: ProvidersLayoutComponent,\n        canActivate: [ProviderPermissionsGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"clients\" },\n          { path: \"clients/create\", component: CreateOrganizationComponent },\n          { path: \"clients\", component: ClientsComponent, data: { titleId: \"clients\" } },\n          {\n            path: \"manage\",\n            component: ManageComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"people\",\n              },\n              {\n                path: \"people\",\n                component: PeopleComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"people\",\n                  providerPermissions: (provider: Provider) => provider.canManageUsers,\n                },\n              },\n              {\n                path: \"events\",\n                component: EventsComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"eventLogs\",\n                  providerPermissions: (provider: Provider) => provider.canAccessEventLogs,\n                },\n              },\n            ],\n          },\n          {\n            path: \"settings\",\n            component: SettingsComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"account\",\n              },\n              {\n                path: \"account\",\n                component: AccountComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"myProvider\",\n                  providerPermissions: (provider: Provider) => provider.isProviderAdmin,\n                },\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProvidersRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { ComponentFactoryResolver, NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OssModule } from \"@bitwarden/web-vault/app/oss.module\";\n\nimport { AddOrganizationComponent } from \"./clients/add-organization.component\";\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { ProviderPermissionsGuard } from \"./guards/provider-permissions.guard\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { BulkConfirmComponent } from \"./manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./manage/bulk/bulk-remove.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { UserAddEditComponent } from \"./manage/user-add-edit.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { ProvidersRoutingModule } from \"./providers-routing.module\";\nimport { WebProviderService } from \"./services/webProvider.service\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, OssModule, JslibModule, ProvidersRoutingModule],\n  declarations: [\n    AcceptProviderComponent,\n    AccountComponent,\n    AddOrganizationComponent,\n    BulkConfirmComponent,\n    BulkRemoveComponent,\n    ClientsComponent,\n    CreateOrganizationComponent,\n    EventsComponent,\n    ManageComponent,\n    PeopleComponent,\n    ProvidersLayoutComponent,\n    SettingsComponent,\n    SetupComponent,\n    SetupProviderComponent,\n    UserAddEditComponent,\n  ],\n  providers: [WebProviderService, ProviderPermissionsGuard],\n})\nexport class ProvidersModule {\n  constructor(modalService: ModalService, componentFactoryResolver: ComponentFactoryResolver) {\n    modalService.registerComponentFactoryResolver(\n      AddOrganizationComponent,\n      componentFactoryResolver\n    );\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { ProvidersModule } from \"./providers/providers.module\";\n\nconst routes: Routes = [\n  {\n    path: \"providers\",\n    loadChildren: () => ProvidersModule,\n  },\n  {\n    path: \"sm\",\n    loadChildren: async () => (await import(\"./sm/sm.module\")).SecretsManagerModule,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class DisableSendPolicy extends BasePolicy {\n  name = \"disableSend\";\n  description = \"disableSendPolicyDesc\";\n  type = PolicyType.DisableSend;\n  component = DisableSendPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-send\",\n  templateUrl: \"disable-send.component.html\",\n})\nexport class DisableSendPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"disableSendExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minComplexity\">{{ \"minComplexityScore\" | i18n }}</label>\n      <select\n        id=\"minComplexity\"\n        name=\"minComplexity\"\n        formControlName=\"minComplexity\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of passwordScores\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"8\"\n        name=\"minLength\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireUpper\"\n      name=\"requireUpper\"\n      formControlName=\"requireUpper\"\n    />\n    <label class=\"form-check-label\" for=\"requireUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireLower\"\n      name=\"requireLower\"\n      formControlName=\"requireLower\"\n    />\n    <label class=\"form-check-label\" for=\"requireLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireNumbers\"\n      name=\"requireNumbers\"\n      formControlName=\"requireNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"requireNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireSpecial\"\n      name=\"requireSpecial\"\n      formControlName=\"requireSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"requireSpecial\">!@#$%^&amp;*</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class MasterPasswordPolicy extends BasePolicy {\n  name = \"masterPassPolicyTitle\";\n  description = \"masterPassPolicyDesc\";\n  type = PolicyType.MasterPassword;\n  component = MasterPasswordPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-master-password\",\n  templateUrl: \"master-password.component.html\",\n})\nexport class MasterPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    minComplexity: [null],\n    minLength: [null],\n    requireUpper: [null],\n    requireLower: [null],\n    requireNumbers: [null],\n    requireSpecial: [null],\n  });\n\n  passwordScores: { name: string; value: number }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    i18nService: I18nService,\n    private organizationService: OrganizationService\n  ) {\n    super();\n\n    this.passwordScores = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"weak\") + \" (0)\", value: 0 },\n      { name: i18nService.t(\"weak\") + \" (1)\", value: 1 },\n      { name: i18nService.t(\"weak\") + \" (2)\", value: 2 },\n      { name: i18nService.t(\"good\") + \" (3)\", value: 3 },\n      { name: i18nService.t(\"strong\") + \" (4)\", value: 4 },\n    ];\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group mb-0\">\n      <label for=\"defaultType\">{{ \"defaultType\" | i18n }}</label>\n      <select\n        id=\"defaultType\"\n        name=\"defaultType\"\n        formControlName=\"defaultType\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of defaultTypes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n  </div>\n  <h3 class=\"mt-4\">{{ \"password\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minLength\"\n        min=\"5\"\n        max=\"128\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumbers\">{{ \"minNumbers\" | i18n }}</label>\n      <input\n        id=\"minNumbers\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumbers\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minNumbers\"\n      />\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minSpecial\">{{ \"minSpecial\" | i18n }}</label>\n      <input\n        id=\"minSpecial\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minSpecial\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minSpecial\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useUpper\"\n      formControlName=\"useUpper\"\n      name=\"useUpper\"\n    />\n    <label class=\"form-check-label\" for=\"useUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useLower\"\n      name=\"useLower\"\n      formControlName=\"useLower\"\n    />\n    <label class=\"form-check-label\" for=\"useLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useNumbers\"\n      name=\"useNumbers\"\n      formControlName=\"useNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"useNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useSpecial\"\n      name=\"useSpecial\"\n      formControlName=\"useSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"useSpecial\">!@#$%^&amp;*</label>\n  </div>\n  <h3 class=\"mt-4\">{{ \"passphrase\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumberWords\">{{ \"minimumNumberOfWords\" | i18n }}</label>\n      <input\n        id=\"minNumberWords\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumberWords\"\n        min=\"3\"\n        max=\"20\"\n        formControlName=\"minNumberWords\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"capitalize\"\n      name=\"capitalize\"\n      formControlName=\"capitalize\"\n    />\n    <label class=\"form-check-label\" for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"includeNumber\"\n      name=\"includeNumber\"\n      formControlName=\"includeNumber\"\n    />\n    <label class=\"form-check-label\" for=\"includeNumber\">{{ \"includeNumber\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PasswordGeneratorPolicy extends BasePolicy {\n  name = \"passwordGenerator\";\n  description = \"passwordGeneratorPolicyDesc\";\n  type = PolicyType.PasswordGenerator;\n  component = PasswordGeneratorPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-password-generator\",\n  templateUrl: \"password-generator.component.html\",\n})\nexport class PasswordGeneratorPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    defaultType: [null],\n    minLength: [null],\n    useUpper: [null],\n    useLower: [null],\n    useNumbers: [null],\n    useSpecial: [null],\n    minNumbers: [null],\n    minSpecial: [null],\n    minNumberWords: [null],\n    capitalize: [null],\n    includeNumber: [null],\n  });\n\n  defaultTypes: { name: string; value: string }[];\n\n  constructor(private formBuilder: UntypedFormBuilder, i18nService: I18nService) {\n    super();\n\n    this.defaultTypes = [\n      { name: i18nService.t(\"userPreference\"), value: null },\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PersonalOwnershipPolicy extends BasePolicy {\n  name = \"personalOwnership\";\n  description = \"personalOwnershipPolicyDesc\";\n  type = PolicyType.PersonalOwnership;\n  component = PersonalOwnershipPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-personal-ownership\",\n  templateUrl: \"personal-ownership.component.html\",\n})\nexport class PersonalOwnershipPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"personalOwnershipExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class RequireSsoPolicy extends BasePolicy {\n  name = \"requireSso\";\n  description = \"requireSsoPolicyDesc\";\n  type = PolicyType.RequireSso;\n  component = RequireSsoPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useSso;\n  }\n}\n\n@Component({\n  selector: \"policy-require-sso\",\n  templateUrl: \"require-sso.component.html\",\n})\nexport class RequireSsoPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n<app-callout type=\"warning\">\n  {{ \"requireSsoExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<app-callout type=\"warning\">\n  {{ \"resetPasswordPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"resetPasswordPolicyAutoEnroll\" | i18n }}</h3>\n  <p>{{ \"resetPasswordPolicyAutoEnrollDescription\" | i18n }}</p>\n  <app-callout type=\"warning\">\n    {{ \"resetPasswordPolicyAutoEnrollWarning\" | i18n }}\n  </app-callout>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"autoEnrollEnabled\"\n      name=\"AutoEnrollEnabled\"\n      formControlName=\"autoEnrollEnabled\"\n    />\n    <label class=\"form-check-label\" for=\"autoEnrollEnabled\">\n      {{ \"resetPasswordPolicyAutoEnrollCheckbox\" | i18n }}\n    </label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class ResetPasswordPolicy extends BasePolicy {\n  name = \"resetPasswordPolicy\";\n  description = \"resetPasswordPolicyDescription\";\n  type = PolicyType.ResetPassword;\n  component = ResetPasswordPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useResetPassword;\n  }\n}\n\n@Component({\n  selector: \"policy-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    autoEnrollEnabled: false,\n  });\n\n  defaultTypes: { name: string; value: string }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private organizationService: OrganizationService\n  ) {\n    super();\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SendOptionsPolicy extends BasePolicy {\n  name = \"sendOptions\";\n  description = \"sendOptionsPolicyDesc\";\n  type = PolicyType.SendOptions;\n  component = SendOptionsPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-send-options\",\n  templateUrl: \"send-options.component.html\",\n})\nexport class SendOptionsPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    disableHideEmail: false,\n  });\n\n  constructor(private formBuilder: UntypedFormBuilder) {\n    super();\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"sendOptionsExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"disableHideEmail\"\n      name=\"DisableHideEmail\"\n      formControlName=\"disableHideEmail\"\n    />\n    <label class=\"form-check-label\" for=\"disableHideEmail\">{{ \"disableHideEmail\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SingleOrgPolicy extends BasePolicy {\n  name = \"singleOrg\";\n  description = \"singleOrgDesc\";\n  type = PolicyType.SingleOrg;\n  component = SingleOrgPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-single-org\",\n  templateUrl: \"single-org.component.html\",\n})\nexport class SingleOrgPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    if (!this.enabled.value) {\n      if (policiesEnabledMap.get(PolicyType.RequireSso) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"requireSso\"))\n        );\n      }\n\n      if (policiesEnabledMap.get(PolicyType.MaximumVaultTimeout) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"maximumVaultTimeoutLabel\"))\n        );\n      }\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"singleOrgPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class TwoFactorAuthenticationPolicy extends BasePolicy {\n  name = \"twoStepLoginPolicyTitle\";\n  description = \"twoStepLoginPolicyDesc\";\n  type = PolicyType.TwoFactorAuthentication;\n  component = TwoFactorAuthenticationPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-two-factor-authentication\",\n  templateUrl: \"two-factor-authentication.component.html\",\n})\nexport class TwoFactorAuthenticationPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"twoStepLoginPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { DOCUMENT } from \"@angular/common\";\nimport { Component, Inject, NgZone, OnDestroy, OnInit, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport * as jq from \"jquery\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport Swal from \"sweetalert2\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { InternalFolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SettingsService } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\n\nimport { PolicyListService, RouterService } from \"./core\";\nimport { DisableSendPolicy } from \"./organizations/policies/disable-send.component\";\nimport { MasterPasswordPolicy } from \"./organizations/policies/master-password.component\";\nimport { PasswordGeneratorPolicy } from \"./organizations/policies/password-generator.component\";\nimport { PersonalOwnershipPolicy } from \"./organizations/policies/personal-ownership.component\";\nimport { RequireSsoPolicy } from \"./organizations/policies/require-sso.component\";\nimport { ResetPasswordPolicy } from \"./organizations/policies/reset-password.component\";\nimport { SendOptionsPolicy } from \"./organizations/policies/send-options.component\";\nimport { SingleOrgPolicy } from \"./organizations/policies/single-org.component\";\nimport { TwoFactorAuthenticationPolicy } from \"./organizations/policies/two-factor-authentication.component\";\n\nconst BroadcasterSubscriptionId = \"AppComponent\";\nconst IdleTimeout = 60000 * 10; // 10 minutes\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"app.component.html\",\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  private lastActivity: number = null;\n  private idleTimer: number = null;\n  private isIdle = false;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private broadcasterService: BroadcasterService,\n    private folderService: InternalFolderService,\n    private settingsService: SettingsService,\n    private syncService: SyncService,\n    private passwordGenerationService: PasswordGenerationService,\n    private cipherService: CipherService,\n    private authService: AuthService,\n    private router: Router,\n    private toastrService: ToastrService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    private vaultTimeoutService: VaultTimeoutService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private sanitizer: DomSanitizer,\n    private searchService: SearchService,\n    private notificationsService: NotificationsService,\n    private routerService: RouterService,\n    private stateService: StateService,\n    private eventService: EventService,\n    private policyService: InternalPolicyService,\n    protected policyListService: PolicyListService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  ngOnInit() {\n    this.i18nService.locale$.pipe(takeUntil(this.destroy$)).subscribe((locale) => {\n      this.document.documentElement.lang = locale;\n    });\n\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousemove = () => this.recordActivity();\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"loggedIn\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"loggedOut\":\n            this.routerService.setPreviousUrl(null);\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"unlocked\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"authBlocked\":\n            this.routerService.setPreviousUrl(message.url);\n            this.router.navigate([\"/\"]);\n            break;\n          case \"logout\":\n            this.logOut(!!message.expired);\n            break;\n          case \"lockVault\":\n            await this.vaultTimeoutService.lock();\n            break;\n          case \"locked\":\n            this.notificationsService.updateConnection(false);\n            this.router.navigate([\"lock\"]);\n            break;\n          case \"lockedUrl\":\n            this.routerService.setPreviousUrl(message.url);\n            break;\n          case \"syncStarted\":\n            break;\n          case \"syncCompleted\":\n            break;\n          case \"upgradeOrganization\": {\n            const upgradeConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"upgradeOrganizationDesc\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (upgradeConfirmed) {\n              this.router.navigate([\n                \"organizations\",\n                message.organizationId,\n                \"settings\",\n                \"billing\",\n              ]);\n            }\n            break;\n          }\n          case \"premiumRequired\": {\n            const premiumConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"premiumRequiredDesc\"),\n              this.i18nService.t(\"premiumRequired\"),\n              this.i18nService.t(\"upgrade\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (premiumConfirmed) {\n              this.router.navigate([\"settings/subscription/premium\"]);\n            }\n            break;\n          }\n          case \"emailVerificationRequired\": {\n            const emailVerificationConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"emailVerificationRequiredDesc\"),\n              this.i18nService.t(\"emailVerificationRequired\"),\n              this.i18nService.t(\"learnMore\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (emailVerificationConfirmed) {\n              this.platformUtilsService.launchUri(\n                \"https://bitwarden.com/help/create-bitwarden-account/\"\n              );\n            }\n            break;\n          }\n          case \"showToast\":\n            this.showToast(message);\n            break;\n          case \"setFullWidth\":\n            this.setFullWidth();\n            break;\n          case \"convertAccountToKeyConnector\":\n            this.router.navigate([\"/remove-password\"]);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n\n    this.router.events.pipe(takeUntil(this.destroy$)).subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        const modals = Array.from(document.querySelectorAll(\".modal\"));\n        for (const modal of modals) {\n          (jq(modal) as any).modal(\"hide\");\n        }\n\n        if (document.querySelector(\".swal-modal\") != null) {\n          Swal.close(undefined);\n        }\n      }\n    });\n\n    this.policyListService.addPolicies([\n      new TwoFactorAuthenticationPolicy(),\n      new MasterPasswordPolicy(),\n      new ResetPasswordPolicy(),\n      new PasswordGeneratorPolicy(),\n      new SingleOrgPolicy(),\n      new RequireSsoPolicy(),\n      new PersonalOwnershipPolicy(),\n      new DisableSendPolicy(),\n      new SendOptionsPolicy(),\n    ]);\n\n    this.setFullWidth();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private async logOut(expired: boolean) {\n    await this.eventService.uploadEvents();\n    const userId = await this.stateService.getUserId();\n    await Promise.all([\n      this.eventService.clearEvents(),\n      this.syncService.setLastSync(new Date(0)),\n      this.cryptoService.clearKeys(),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(),\n      this.keyConnectorService.clear(),\n    ]);\n\n    this.searchService.clearIndex();\n    this.authService.logOut(async () => {\n      if (expired) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          this.i18nService.t(\"loggedOut\"),\n          this.i18nService.t(\"loginExpired\")\n        );\n      }\n\n      await this.stateService.clean({ userId: userId });\n      Swal.close();\n      this.router.navigate([\"/\"]);\n    });\n  }\n\n  private async recordActivity() {\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    this.stateService.setLastActive(now);\n    // Idle states\n    if (this.isIdle) {\n      this.isIdle = false;\n      this.idleStateChanged();\n    }\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idleTimer = window.setTimeout(() => {\n      if (!this.isIdle) {\n        this.isIdle = true;\n        this.idleStateChanged();\n      }\n    }, IdleTimeout);\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private idleStateChanged() {\n    if (this.isIdle) {\n      this.notificationsService.disconnectFromInactivity();\n    } else {\n      this.notificationsService.reconnectFromActivity();\n    }\n  }\n\n  private async setFullWidth() {\n    const enableFullWidth = await this.stateService.getEnableFullWidth();\n    if (enableFullWidth) {\n      document.body.classList.add(\"full-width\");\n    } else {\n      document.body.classList.remove(\"full-width\");\n    }\n  }\n}\n","<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"@bitwarden/web-vault/app/organizations/policies/base-policy.component\";\n\nexport class DisablePersonalVaultExportPolicy extends BasePolicy {\n  name = \"disablePersonalVaultExport\";\n  description = \"disablePersonalVaultExportDesc\";\n  type = PolicyType.DisablePersonalVaultExport;\n  component = DisablePersonalVaultExportPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-personal-vault-export\",\n  templateUrl: \"disable-personal-vault-export.component.html\",\n})\nexport class DisablePersonalVaultExportPolicyComponent extends BasePolicyComponent {}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"@bitwarden/web-vault/app/organizations/policies/base-policy.component\";\n\nexport class MaximumVaultTimeoutPolicy extends BasePolicy {\n  name = \"maximumVaultTimeout\";\n  description = \"maximumVaultTimeoutDesc\";\n  type = PolicyType.MaximumVaultTimeout;\n  component = MaximumVaultTimeoutPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-maximum-timeout\",\n  templateUrl: \"maximum-vault-timeout.component.html\",\n})\nexport class MaximumVaultTimeoutPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    hours: [null],\n    minutes: [null],\n  });\n\n  constructor(private formBuilder: UntypedFormBuilder, private i18nService: I18nService) {\n    super();\n  }\n\n  loadData() {\n    const minutes = this.policyResponse.data?.minutes;\n\n    if (minutes == null) {\n      return;\n    }\n\n    this.data.patchValue({\n      hours: Math.floor(minutes / 60),\n      minutes: minutes % 60,\n    });\n  }\n\n  buildRequestData() {\n    if (this.data.value.hours == null && this.data.value.minutes == null) {\n      return null;\n    }\n\n    return {\n      minutes: this.data.value.hours * 60 + this.data.value.minutes,\n    };\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    const data = this.buildRequestData();\n    if (data?.minutes == null || data?.minutes <= 0) {\n      throw new Error(this.i18nService.t(\"invalidMaximumVaultTimeout\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <label for=\"hours\">{{ \"maximumVaultTimeoutLabel\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AppComponent as BaseAppComponent } from \"@bitwarden/web-vault/app/app.component\";\n\nimport { DisablePersonalVaultExportPolicy } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicy } from \"./policies/maximum-vault-timeout.component\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"../../../../apps/web/src/app/app.component.html\",\n})\nexport class AppComponent extends BaseAppComponent {\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.policyListService.addPolicies([\n      new MaximumVaultTimeoutPolicy(),\n      new DisablePersonalVaultExportPolicy(),\n    ]);\n  }\n}\n","import { ScimProviderType } from \"../../enums/scimProviderType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class ScimConfigApi extends BaseResponse {\n  enabled: boolean;\n  scimProvider: ScimProviderType;\n\n  constructor(data: any) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.scimProvider = this.getResponseProperty(\"ScimProvider\");\n  }\n}\n","import { ScimProviderType } from \"../../enums/scimProviderType\";\n\nexport class ScimConfigRequest {\n  constructor(private enabled: boolean, private scimProvider: ScimProviderType = null) {}\n}\n","<div class=\"page-header\">\n  <h1>{{ \"scim\" | i18n }}</h1>\n</div>\n\n<p>{{ \"scimDescription\" | i18n }}</p>\n\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  [formGroup]=\"formData\"\n  *ngIf=\"!loading\"\n>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n        aria-describedby=\"scimEnabledCheckboxDescHelpText\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"scimEnabledCheckboxDesc\" | i18n }}</label>\n      <div id=\"scimEnabledCheckboxDescHelpText\">\n        <small class=\"form-text text-muted\">{{ \"scimEnabledCheckboxDescHelpText\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n\n  <bit-form-field *ngIf=\"showScimSettings\">\n    <bit-label>{{ \"scimUrl\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"endpointUrl\" />\n    <button\n      type=\"button\"\n      bitSuffix\n      bitButton\n      (click)=\"copyScimUrl()\"\n      [appA11yTitle]=\"'copyScimUrl' | i18n\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-clone\"></i>\n    </button>\n  </bit-form-field>\n\n  <bit-form-field *ngIf=\"showScimSettings\">\n    <bit-label>{{ \"scimApiKey\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"clientSecret\" />\n    <ng-container #rotateButton [appApiAction]=\"rotatePromise\">\n      <button\n        [disabled]=\"rotateButton.loading\"\n        type=\"button\"\n        bitSuffix\n        bitButton\n        (click)=\"rotateScimKey()\"\n        [appA11yTitle]=\"'rotateScimKey' | i18n\"\n      >\n        <i\n          aria-hidden=\"true\"\n          class=\"bwi bwi-lg bwi-generate\"\n          [ngClass]=\"{ 'bwi-spin': rotateButton.loading }\"\n        ></i>\n      </button>\n    </ng-container>\n    <button\n      type=\"button\"\n      bitSuffix\n      bitButton\n      (click)=\"copyScimKey()\"\n      [appA11yTitle]=\"'copyScimKey' | i18n\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-clone\"></i>\n    </button>\n    <bit-hint>{{ \"scimApiKeyHelperText\" | i18n }}</bit-hint>\n  </bit-form-field>\n\n  <button\n    type=\"submit\"\n    buttonType=\"primary\"\n    bitButton\n    [loading]=\"form.loading\"\n    [disabled]=\"form.loading\"\n  >\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormBuilder, FormControl } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/enums/organizationApiKeyType\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/enums/organizationConnectionType\";\nimport { ScimConfigApi } from \"@bitwarden/common/models/api/scimConfigApi\";\nimport { OrganizationApiKeyRequest } from \"@bitwarden/common/models/request/organizationApiKeyRequest\";\nimport { OrganizationConnectionRequest } from \"@bitwarden/common/models/request/organizationConnectionRequest\";\nimport { ScimConfigRequest } from \"@bitwarden/common/models/request/scimConfigRequest\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/apiKeyResponse\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/models/response/organizationConnectionResponse\";\n\n@Component({\n  selector: \"app-org-manage-scim\",\n  templateUrl: \"scim.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ScimComponent implements OnInit {\n  loading = true;\n  organizationId: string;\n  existingConnectionId: string;\n  formPromise: Promise<OrganizationConnectionResponse<ScimConfigApi>>;\n  rotatePromise: Promise<ApiKeyResponse>;\n  enabled = new FormControl(false);\n  showScimSettings = false;\n\n  formData = this.formBuilder.group({\n    endpointUrl: new FormControl({ value: \"\", disabled: true }),\n    clientSecret: new FormControl({ value: \"\", disabled: true }),\n  });\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private environmentService: EnvironmentService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    const connection = await this.apiService.getOrganizationConnection(\n      this.organizationId,\n      OrganizationConnectionType.Scim,\n      ScimConfigApi\n    );\n    await this.setConnectionFormValues(connection);\n  }\n\n  async loadApiKey() {\n    const apiKeyRequest = new OrganizationApiKeyRequest();\n    apiKeyRequest.type = OrganizationApiKeyType.Scim;\n    apiKeyRequest.masterPasswordHash = \"N/A\";\n    const apiKeyResponse = await this.organizationApiService.getOrCreateApiKey(\n      this.organizationId,\n      apiKeyRequest\n    );\n    this.formData.setValue({\n      endpointUrl: this.getScimEndpointUrl(),\n      clientSecret: apiKeyResponse.apiKey,\n    });\n  }\n\n  async copyScimUrl() {\n    this.platformUtilsService.copyToClipboard(this.getScimEndpointUrl());\n  }\n\n  async rotateScimKey() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"rotateScimKeyWarning\"),\n      this.i18nService.t(\"rotateScimKey\"),\n      this.i18nService.t(\"rotateKey\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    const request = new OrganizationApiKeyRequest();\n    request.type = OrganizationApiKeyType.Scim;\n    request.masterPasswordHash = \"N/A\";\n\n    this.rotatePromise = this.organizationApiService.rotateApiKey(this.organizationId, request);\n\n    try {\n      const response = await this.rotatePromise;\n      this.formData.setValue({\n        endpointUrl: this.getScimEndpointUrl(),\n        clientSecret: response.apiKey,\n      });\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"scimApiKeyRotated\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.rotatePromise = null;\n  }\n\n  async copyScimKey() {\n    this.platformUtilsService.copyToClipboard(this.formData.get(\"clientSecret\").value);\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationConnectionRequest(\n        this.organizationId,\n        OrganizationConnectionType.Scim,\n        true,\n        new ScimConfigRequest(this.enabled.value)\n      );\n      if (this.existingConnectionId == null) {\n        this.formPromise = this.apiService.createOrganizationConnection(request, ScimConfigApi);\n      } else {\n        this.formPromise = this.apiService.updateOrganizationConnection(\n          request,\n          ScimConfigApi,\n          this.existingConnectionId\n        );\n      }\n      const response = (await this.formPromise) as OrganizationConnectionResponse<ScimConfigApi>;\n      await this.setConnectionFormValues(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"scimSettingsSaved\"));\n    } catch (e) {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  getScimEndpointUrl() {\n    return this.environmentService.getScimUrl() + \"/\" + this.organizationId;\n  }\n\n  private async setConnectionFormValues(connection: OrganizationConnectionResponse<ScimConfigApi>) {\n    this.existingConnectionId = connection?.id;\n    if (connection !== null && connection.config?.enabled) {\n      this.showScimSettings = true;\n      this.enabled.setValue(true);\n      this.formData.setValue({\n        endpointUrl: this.getScimEndpointUrl(),\n        clientSecret: \"\",\n      });\n      await this.loadApiKey();\n    } else {\n      this.showScimSettings = false;\n      this.enabled.setValue(false);\n    }\n    this.loading = false;\n  }\n}\n","import { AbstractControl, ValidationErrors, Validators } from \"@angular/forms\";\n\n/**\n * Runs Validators.required on a field only if it's dirty. This prevents error messages from being displayed\n * to the user prematurely.\n */\nexport function dirtyRequired(control: AbstractControl): ValidationErrors | null {\n  return control.dirty ? Validators.required(control) : null;\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\n\nexport class OrganizationSsoRequest {\n  enabled = false;\n  data: SsoConfigApi;\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { SsoConfigApi } from \"../api/ssoConfigApi\";\n\nimport { View } from \"./view\";\n\nexport class SsoConfigView extends View {\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  openId: {\n    authority: string;\n    clientId: string;\n    clientSecret: string;\n    metadataAddress: string;\n    redirectBehavior: OpenIdConnectRedirectBehavior;\n    getClaimsFromUserInfoEndpoint: boolean;\n    additionalScopes: string;\n    additionalUserIdClaimTypes: string;\n    additionalEmailClaimTypes: string;\n    additionalNameClaimTypes: string;\n    acrValues: string;\n    expectedReturnAcrValue: string;\n  };\n\n  saml: {\n    spNameIdFormat: Saml2NameIdFormat;\n    spOutboundSigningAlgorithm: string;\n    spSigningBehavior: Saml2SigningBehavior;\n    spMinIncomingSigningAlgorithm: boolean;\n    spWantAssertionsSigned: boolean;\n    spValidateCertificates: boolean;\n\n    idpEntityId: string;\n    idpBindingType: Saml2BindingType;\n    idpSingleSignOnServiceUrl: string;\n    idpSingleLogoutServiceUrl: string;\n    idpX509PublicCert: string;\n    idpOutboundSigningAlgorithm: string;\n    idpAllowUnsolicitedAuthnResponse: boolean;\n    idpAllowOutboundLogoutRequests: boolean;\n    idpWantAuthnRequestsSigned: boolean;\n  };\n\n  constructor(api: SsoConfigApi) {\n    super();\n    if (api == null) {\n      return;\n    }\n\n    this.configType = api.configType;\n\n    this.keyConnectorEnabled = api.keyConnectorEnabled;\n    this.keyConnectorUrl = api.keyConnectorUrl;\n\n    if (this.configType === SsoType.OpenIdConnect) {\n      this.openId = {\n        authority: api.authority,\n        clientId: api.clientId,\n        clientSecret: api.clientSecret,\n        metadataAddress: api.metadataAddress,\n        redirectBehavior: api.redirectBehavior,\n        getClaimsFromUserInfoEndpoint: api.getClaimsFromUserInfoEndpoint,\n        additionalScopes: api.additionalScopes,\n        additionalUserIdClaimTypes: api.additionalUserIdClaimTypes,\n        additionalEmailClaimTypes: api.additionalEmailClaimTypes,\n        additionalNameClaimTypes: api.additionalNameClaimTypes,\n        acrValues: api.acrValues,\n        expectedReturnAcrValue: api.expectedReturnAcrValue,\n      };\n    } else if (this.configType === SsoType.Saml2) {\n      this.saml = {\n        spNameIdFormat: api.spNameIdFormat,\n        spOutboundSigningAlgorithm: api.spOutboundSigningAlgorithm,\n        spSigningBehavior: api.spSigningBehavior,\n        spMinIncomingSigningAlgorithm: api.spMinIncomingSigningAlgorithm,\n        spWantAssertionsSigned: api.spWantAssertionsSigned,\n        spValidateCertificates: api.spValidateCertificates,\n\n        idpEntityId: api.idpEntityId,\n        idpBindingType: api.idpBindingType,\n        idpSingleSignOnServiceUrl: api.idpSingleSignOnServiceUrl,\n        idpSingleLogoutServiceUrl: api.idpSingleLogoutServiceUrl,\n        idpX509PublicCert: api.idpX509PublicCert,\n        idpOutboundSigningAlgorithm: api.idpOutboundSigningAlgorithm,\n        idpAllowUnsolicitedAuthnResponse: api.idpAllowUnsolicitedAuthnResponse,\n        idpWantAuthnRequestsSigned: api.idpWantAuthnRequestsSigned,\n\n        // Value is inverted in the view model (allow instead of disable)\n        idpAllowOutboundLogoutRequests:\n          api.idpDisableOutboundLogoutRequests == null\n            ? null\n            : !api.idpDisableOutboundLogoutRequests,\n      };\n    }\n  }\n}\n","export class View {}\n","import { Directive, ElementRef, OnDestroy, OnInit } from \"@angular/core\";\nimport { NgControl } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\n\n@Directive({\n  selector: \"[appA11yInvalid]\",\n})\nexport class A11yInvalidDirective implements OnDestroy, OnInit {\n  private sub: Subscription;\n\n  constructor(private el: ElementRef<HTMLInputElement>, private formControlDirective: NgControl) {}\n\n  ngOnInit() {\n    this.sub = this.formControlDirective.control.statusChanges.subscribe((status) => {\n      if (status === \"INVALID\") {\n        this.el.nativeElement.setAttribute(\"aria-invalid\", \"true\");\n      } else if (status === \"VALID\") {\n        this.el.nativeElement.setAttribute(\"aria-invalid\", \"false\");\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub?.unsubscribe();\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"input[appInputStripSpaces]\",\n})\nexport class InputStripSpacesDirective {\n  constructor(private el: ElementRef<HTMLInputElement>) {}\n\n  @HostListener(\"input\") onInput() {\n    this.el.nativeElement.value = this.el.nativeElement.value.replace(/ /g, \"\");\n  }\n}\n","import { Directive, Input, OnInit, Self } from \"@angular/core\";\nimport { ControlValueAccessor, UntypedFormControl, NgControl, Validators } from \"@angular/forms\";\n\nimport { dirtyRequired } from \"@bitwarden/angular/validators/dirty.validator\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Directive()\nexport abstract class BaseCvaComponent implements ControlValueAccessor, OnInit {\n  get describedById() {\n    return this.showDescribedBy ? this.controlId + \"Desc\" : null;\n  }\n\n  get showDescribedBy() {\n    return this.helperText != null || this.controlDir.control.hasError(\"required\");\n  }\n\n  get isRequired() {\n    return (\n      this.controlDir.control.hasValidator(Validators.required) ||\n      this.controlDir.control.hasValidator(dirtyRequired)\n    );\n  }\n\n  @Input() label: string;\n  @Input() controlId: string;\n  @Input() helperText: string;\n\n  internalControl = new UntypedFormControl(\"\");\n\n  protected onChange: any;\n  protected onTouched: any;\n\n  constructor(@Self() public controlDir: NgControl) {\n    this.controlDir.valueAccessor = this;\n  }\n\n  ngOnInit() {\n    this.internalControl.valueChanges.subscribe(this.onValueChangesInternal);\n  }\n\n  onBlurInternal() {\n    this.onTouched();\n  }\n\n  // CVA interfaces\n  writeValue(value: string) {\n    this.internalControl.setValue(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if (isDisabled) {\n      this.internalControl.disable();\n    } else {\n      this.internalControl.enable();\n    }\n  }\n\n  protected onValueChangesInternal: any = (value: string) => this.onChange(value);\n  // End CVA interfaces\n}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [attr.id]=\"controlId\"\n      [attr.aria-describedby]=\"describedById\"\n      [formControl]=\"internalControl\"\n      (blur)=\"onBlurInternal()\"\n    />\n    <label class=\"form-check-label\" [attr.for]=\"controlId\">{{ label }}</label>\n  </div>\n  <small *ngIf=\"showDescribedBy\" [attr.id]=\"describedById\" class=\"form-text text-muted\">{{\n    helperText\n  }}</small>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-checkbox\",\n  templateUrl: \"input-checkbox.component.html\",\n})\nexport class InputCheckboxComponent extends BaseCvaComponent {}\n","<div class=\"form-group\">\n  <label [attr.for]=\"controlId\">\n    {{ label }}\n    <small *ngIf=\"isRequired\" class=\"text-muted form-text d-inline\"\n      >({{ \"required\" | i18n }})</small\n    >\n  </label>\n  <input\n    [formControl]=\"internalControl\"\n    class=\"form-control\"\n    [attr.id]=\"controlId\"\n    [attr.aria-describedby]=\"describedById\"\n    [attr.aria-invalid]=\"controlDir.control.invalid\"\n    (blur)=\"onBlurInternal()\"\n  />\n  <div *ngIf=\"showDescribedBy\" [attr.id]=\"describedById\">\n    <small\n      *ngIf=\"helperText != null && !controlDir.control.hasError(helperTextSameAsError)\"\n      class=\"form-text text-muted\"\n    >\n      {{ helperText }}\n    </small>\n    <small class=\"error-inline\" *ngIf=\"controlDir.control.hasError('required')\" role=\"alert\">\n      <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n      <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n      {{\n        controlDir.control.hasError(helperTextSameAsError)\n          ? helperText\n          : (\"fieldRequiredError\" | i18n: label)\n      }}\n    </small>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-text[label][controlId]\",\n  templateUrl: \"input-text.component.html\",\n})\nexport class InputTextComponent extends BaseCvaComponent implements OnInit {\n  @Input() helperTextSameAsError: string;\n  @Input() requiredErrorMessage: string;\n  @Input() stripSpaces = false;\n\n  transformValue: (value: string) => string = null;\n\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.stripSpaces) {\n      this.transformValue = this.doStripSpaces;\n    }\n  }\n\n  writeValue(value: string) {\n    this.internalControl.setValue(value == null ? \"\" : value);\n  }\n\n  protected onValueChangesInternal: any = (value: string) => {\n    let newValue = value;\n    if (this.transformValue != null) {\n      newValue = this.transformValue(value);\n      this.internalControl.setValue(newValue, { emitEvent: false });\n    }\n    this.onChange(newValue);\n  };\n\n  protected onValueChangeInternal(value: string) {\n    let newValue = value;\n    if (this.transformValue != null) {\n      newValue = this.transformValue(value);\n      this.internalControl.setValue(newValue, { emitEvent: false });\n    }\n  }\n\n  private doStripSpaces(value: string) {\n    return value.replace(/ /g, \"\");\n  }\n}\n","<div class=\"form-group\">\n  <label>{{ label }}</label>\n  <div class=\"input-group\">\n    <input class=\"form-control\" readonly [value]=\"controlValue\" />\n    <div class=\"input-group-append\" *ngIf=\"showLaunch\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        appA11yTitle=\"{{ 'launch' | i18n }}\"\n        (click)=\"launchUri(controlValue)\"\n      >\n        <i class=\"bwi bwi-lg bwi-external-link\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <div class=\"input-group-append\" *ngIf=\"showCopy\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n        (click)=\"copy(controlValue)\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-text-readonly\",\n  templateUrl: \"input-text-readonly.component.html\",\n})\nexport class InputTextReadOnlyComponent {\n  @Input() controlValue: string;\n  @Input() label: string;\n  @Input() showCopy = true;\n  @Input() showLaunch = false;\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  copy(value: string) {\n    this.platformUtilsService.copyToClipboard(value);\n  }\n\n  launchUri(url: string) {\n    this.platformUtilsService.launchUri(url);\n  }\n}\n","<div class=\"form-group\">\n  <label [attr.for]=\"controlId\">\n    {{ label }}\n    <small *ngIf=\"isRequired\" class=\"text-muted form-text d-inline\"\n      >({{ \"required\" | i18n }})</small\n    >\n  </label>\n  <select\n    class=\"form-control\"\n    [attr.id]=\"controlId\"\n    [attr.aria-invalid]=\"controlDir.control.invalid\"\n    [formControl]=\"internalControl\"\n    (blur)=\"onBlurInternal()\"\n  >\n    <option *ngFor=\"let o of selectOptions\" [ngValue]=\"o.value\" disabled=\"{{ o.disabled }}\">\n      {{ o.name }}\n    </option>\n  </select>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { SelectOptions } from \"@bitwarden/angular/interfaces/selectOptions\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-select\",\n  templateUrl: \"select.component.html\",\n})\nexport class SelectComponent extends BaseCvaComponent {\n  @Input() selectOptions: SelectOptions[];\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"singleSignOn\" | i18n }}</h1>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [formGroup]=\"ssoConfigForm\"\n  [appApiAction]=\"formPromise\"\n  *ngIf=\"!loading\"\n>\n  <p>\n    {{ \"ssoPolicyHelpStart\" | i18n }}\n    <a routerLink=\"../policies\">{{ \"ssoPolicyHelpLink\" | i18n }}</a>\n    {{ \"ssoPolicyHelpEnd\" | i18n }}\n    <br />\n    {{ \"ssoPolicyHelpKeyConnector\" | i18n }}\n  </p>\n\n  <!-- Root form -->\n  <ng-container>\n    <app-input-checkbox\n      controlId=\"enabled\"\n      [formControl]=\"enabled\"\n      [label]=\"'allowSso' | i18n\"\n      [helperText]=\"'allowSsoDesc' | i18n\"\n    ></app-input-checkbox>\n\n    <div class=\"form-group\">\n      <label>{{ \"memberDecryptionOption\" | i18n }}</label>\n      <div class=\"form-check form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionPass\"\n          [value]=\"false\"\n          formControlName=\"keyConnectorEnabled\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionPass\">\n          {{ \"masterPass\" | i18n }}\n          <small>{{ \"memberDecryptionPassDesc\" | i18n }}</small>\n        </label>\n      </div>\n      <div class=\"form-check mt-2 form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionKey\"\n          [value]=\"true\"\n          formControlName=\"keyConnectorEnabled\"\n          [attr.disabled]=\"!organization.useKeyConnector || null\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionKey\">\n          {{ \"keyConnector\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/about-key-connector/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n          <small>{{ \"memberDecryptionKeyConnectorDesc\" | i18n }}</small>\n        </label>\n      </div>\n    </div>\n\n    <!-- Key Connector -->\n    <ng-container *ngIf=\"ssoConfigForm.get('keyConnectorEnabled').value\">\n      <app-callout type=\"warning\" [useAlertRole]=\"true\">\n        {{ \"keyConnectorWarning\" | i18n }}\n      </app-callout>\n\n      <div class=\"form-group\">\n        <label for=\"keyConnectorUrl\">\n          {{ \"keyConnectorUrl\" | i18n }}\n          <small class=\"text-muted form-text d-inline\">({{ \"required\" | i18n }})</small>\n        </label>\n        <div class=\"input-group\">\n          <input\n            class=\"form-control\"\n            formControlName=\"keyConnectorUrl\"\n            id=\"keyConnectorUrl\"\n            aria-describedby=\"keyConnectorUrlDesc\"\n            (change)=\"haveTestedKeyConnector = false\"\n            appInputStripSpaces\n            appA11yInvalid\n          />\n          <div class=\"input-group-append\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary\"\n              (click)=\"validateKeyConnectorUrl()\"\n              [disabled]=\"!enableTestKeyConnector\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n                *ngIf=\"keyConnectorUrl.pending\"\n              ></i>\n              <span *ngIf=\"!keyConnectorUrl.pending\">\n                {{ \"keyConnectorTest\" | i18n }}\n              </span>\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"haveTestedKeyConnector\" id=\"keyConnectorUrlDesc\" aria-live=\"polite\">\n          <small\n            class=\"error-inline\"\n            *ngIf=\"keyConnectorUrl.hasError('invalidUrl'); else keyConnectorSuccess\"\n          >\n            <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n            <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n            {{ \"keyConnectorTestFail\" | i18n }}\n          </small>\n          <ng-template #keyConnectorSuccess>\n            <small class=\"text-success\">\n              <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n              {{ \"keyConnectorTestSuccess\" | i18n }}\n            </small>\n          </ng-template>\n        </div>\n      </div>\n    </ng-container>\n\n    <app-select\n      controlId=\"type\"\n      [label]=\"'type' | i18n\"\n      [selectOptions]=\"ssoTypeOptions\"\n      formControlName=\"configType\"\n    >\n    </app-select>\n  </ng-container>\n\n  <!-- OIDC -->\n  <div\n    *ngIf=\"ssoConfigForm.get('configType').value === ssoType.OpenIdConnect\"\n    [formGroup]=\"openIdForm\"\n  >\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"openIdConnectConfig\" | i18n }}</h2>\n\n      <app-input-text-readonly\n        [label]=\"'callbackPath' | i18n\"\n        [controlValue]=\"callbackPath\"\n      ></app-input-text-readonly>\n\n      <app-input-text-readonly\n        [label]=\"'signedOutCallbackPath' | i18n\"\n        [controlValue]=\"signedOutCallbackPath\"\n      ></app-input-text-readonly>\n\n      <app-input-text\n        [label]=\"'authority' | i18n\"\n        controlId=\"authority\"\n        [stripSpaces]=\"true\"\n        formControlName=\"authority\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'clientId' | i18n\"\n        controlId=\"clientId\"\n        [stripSpaces]=\"true\"\n        formControlName=\"clientId\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'clientSecret' | i18n\"\n        controlId=\"clientSecret\"\n        [stripSpaces]=\"true\"\n        formControlName=\"clientSecret\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'metadataAddress' | i18n\"\n        controlId=\"metadataAddress\"\n        [stripSpaces]=\"true\"\n        [helperText]=\"'openIdAuthorityRequired' | i18n\"\n        formControlName=\"metadataAddress\"\n      ></app-input-text>\n\n      <app-select\n        controlId=\"redirectBehavior\"\n        [label]=\"'oidcRedirectBehavior' | i18n\"\n        [selectOptions]=\"connectRedirectOptions\"\n        formControlName=\"redirectBehavior\"\n      >\n      </app-select>\n\n      <app-input-checkbox\n        controlId=\"getClaimsFromUserInfoEndpoint\"\n        formControlName=\"getClaimsFromUserInfoEndpoint\"\n        [label]=\"'getClaimsFromUserInfoEndpoint' | i18n\"\n      ></app-input-checkbox>\n\n      <!-- Optional customizations -->\n      <div\n        class=\"section-header d-flex flex-row align-items-center mt-3 mb-3\"\n        (click)=\"toggleOpenIdCustomizations()\"\n      >\n        <h3 class=\"mb-0 mr-2\" id=\"customizations-header\">\n          {{ \"openIdOptionalCustomizations\" | i18n }}\n        </h3>\n        <button\n          class=\"mb-1 btn btn-link\"\n          type=\"button\"\n          appStopClick\n          role=\"button\"\n          aria-controls=\"customizations\"\n          [attr.aria-expanded]=\"showOpenIdCustomizations\"\n          aria-labelledby=\"customizations-header\"\n        >\n          <i\n            class=\"bwi\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-down': !showOpenIdCustomizations,\n              'bwi-chevron-up': showOpenIdCustomizations\n            }\"\n          ></i>\n        </button>\n      </div>\n      <div id=\"customizations\" [hidden]=\"!showOpenIdCustomizations\">\n        <app-input-text\n          [label]=\"'additionalScopes' | i18n\"\n          controlId=\"additionalScopes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalScopes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'additionalUserIdClaimTypes' | i18n\"\n          controlId=\"additionalUserIdClaimTypes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalUserIdClaimTypes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'additionalEmailClaimTypes' | i18n\"\n          controlId=\"additionalEmailClaimTypes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalEmailClaimTypes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'additionalNameClaimTypes' | i18n\"\n          controlId=\"additionalNameClaimTypes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalNameClaimTypes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'acrValues' | i18n\"\n          controlId=\"acrValues\"\n          helperText=\"acr_values\"\n          formControlName=\"acrValues\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'expectedReturnAcrValue' | i18n\"\n          controlId=\"expectedReturnAcrValue\"\n          helperText=\"acr_validation\"\n          formControlName=\"expectedReturnAcrValue\"\n        ></app-input-text>\n      </div>\n    </div>\n  </div>\n\n  <!-- SAML2 SP -->\n  <div *ngIf=\"ssoConfigForm.get('configType').value === ssoType.Saml2\" [formGroup]=\"samlForm\">\n    <!-- SAML2 SP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlSpConfig\" | i18n }}</h2>\n\n      <app-input-text-readonly\n        [label]=\"'spEntityId' | i18n\"\n        [controlValue]=\"spEntityId\"\n      ></app-input-text-readonly>\n\n      <app-input-text-readonly\n        [label]=\"'spMetadataUrl' | i18n\"\n        [controlValue]=\"spMetadataUrl\"\n        [showLaunch]=\"true\"\n      ></app-input-text-readonly>\n\n      <app-input-text-readonly\n        [label]=\"'spAcsUrl' | i18n\"\n        [controlValue]=\"spAcsUrl\"\n      ></app-input-text-readonly>\n\n      <app-select\n        controlId=\"spNameIdFormat\"\n        [label]=\"'spNameIdFormat' | i18n\"\n        [selectOptions]=\"saml2NameIdFormatOptions\"\n        formControlName=\"spNameIdFormat\"\n      >\n      </app-select>\n\n      <app-select\n        controlId=\"spOutboundSigningAlgorithm\"\n        [label]=\"'spOutboundSigningAlgorithm' | i18n\"\n        [selectOptions]=\"samlSigningAlgorithmOptions\"\n        formControlName=\"spOutboundSigningAlgorithm\"\n      >\n      </app-select>\n\n      <app-select\n        controlId=\"spSigningBehavior\"\n        [label]=\"'spSigningBehavior' | i18n\"\n        [selectOptions]=\"saml2SigningBehaviourOptions\"\n        formControlName=\"spSigningBehavior\"\n      >\n      </app-select>\n\n      <app-select\n        controlId=\"spMinIncomingSigningAlgorithm\"\n        [label]=\"'spMinIncomingSigningAlgorithm' | i18n\"\n        [selectOptions]=\"samlSigningAlgorithmOptions\"\n        formControlName=\"spMinIncomingSigningAlgorithm\"\n      >\n      </app-select>\n\n      <app-input-checkbox\n        controlId=\"spWantAssertionsSigned\"\n        formControlName=\"spWantAssertionsSigned\"\n        [label]=\"'spWantAssertionsSigned' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"spValidateCertificates\"\n        formControlName=\"spValidateCertificates\"\n        [label]=\"'spValidateCertificates' | i18n\"\n      ></app-input-checkbox>\n    </div>\n\n    <!-- SAML2 IDP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlIdpConfig\" | i18n }}</h2>\n\n      <app-input-text\n        [label]=\"'idpEntityId' | i18n\"\n        controlId=\"idpEntityId\"\n        formControlName=\"idpEntityId\"\n      ></app-input-text>\n\n      <app-select\n        controlId=\"idpBindingType\"\n        [label]=\"'idpBindingType' | i18n\"\n        [selectOptions]=\"saml2BindingTypeOptions\"\n        formControlName=\"idpBindingType\"\n      >\n      </app-select>\n\n      <app-input-text\n        [label]=\"'idpSingleSignOnServiceUrl' | i18n\"\n        controlId=\"idpSingleSignOnServiceUrl\"\n        [helperText]=\"'idpSingleSignOnServiceUrlRequired' | i18n\"\n        [stripSpaces]=\"true\"\n        formControlName=\"idpSingleSignOnServiceUrl\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'idpSingleLogoutServiceUrl' | i18n\"\n        controlId=\"idpSingleLogoutServiceUrl\"\n        [stripSpaces]=\"true\"\n        formControlName=\"idpSingleLogoutServiceUrl\"\n      ></app-input-text>\n\n      <div class=\"form-group\">\n        <label for=\"idpX509PublicCert\">\n          {{ \"idpX509PublicCert\" | i18n }}\n          <small class=\"text-muted form-text d-inline\">({{ \"required\" | i18n }})</small>\n        </label>\n        <textarea\n          formControlName=\"idpX509PublicCert\"\n          class=\"form-control form-control-sm text-monospace\"\n          rows=\"6\"\n          id=\"idpX509PublicCert\"\n          appA11yInvalid\n          aria-describedby=\"idpX509PublicCertDesc\"\n        ></textarea>\n        <small\n          id=\"idpX509PublicCertDesc\"\n          class=\"error-inline\"\n          role=\"alert\"\n          *ngIf=\"samlForm.get('idpX509PublicCert').hasError('required')\"\n        >\n          <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n          {{ \"fieldRequiredError\" | i18n: (\"idpX509PublicCert\" | i18n) }}\n        </small>\n      </div>\n\n      <app-select\n        controlId=\"idpOutboundSigningAlgorithm\"\n        [label]=\"'idpOutboundSigningAlgorithm' | i18n\"\n        [selectOptions]=\"samlSigningAlgorithmOptions\"\n        formControlName=\"idpOutboundSigningAlgorithm\"\n      >\n      </app-select>\n\n      <!--TODO: Uncomment once Unsolicited IdP Response is supported-->\n      <!-- <app-input-checkbox\n        controlId=\"idpAllowUnsolicitedAuthnResponse\"\n        formControlName=\"idpAllowUnsolicitedAuthnResponse\"\n        [label]=\"'idpAllowUnsolicitedAuthnResponse' | i18n\"\n      ></app-input-checkbox> -->\n\n      <app-input-checkbox\n        controlId=\"idpAllowOutboundLogoutRequests\"\n        formControlName=\"idpAllowOutboundLogoutRequests\"\n        [label]=\"'idpAllowOutboundLogoutRequests' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"idpWantAuthnRequestsSigned\"\n        formControlName=\"idpWantAuthnRequestsSigned\"\n        [label]=\"'idpSignAuthenticationRequests' | i18n\"\n      ></app-input-checkbox>\n    </div>\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n  <div\n    id=\"errorSummary\"\n    class=\"error-summary text-danger\"\n    *ngIf=\"this.getErrorCount(ssoConfigForm) as errorCount\"\n  >\n    <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n    {{\n      (errorCount === 1 ? \"formErrorSummarySingle\" : \"formErrorSummaryPlural\") | i18n: errorCount\n    }}\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { AbstractControl, UntypedFormBuilder, UntypedFormGroup } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { SelectOptions } from \"@bitwarden/angular/interfaces/selectOptions\";\nimport { dirtyRequired } from \"@bitwarden/angular/validators/dirty.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"@bitwarden/common/enums/ssoEnums\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SsoConfigApi } from \"@bitwarden/common/models/api/ssoConfigApi\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSsoRequest } from \"@bitwarden/common/models/request/organization/organizationSsoRequest\";\nimport { OrganizationSsoResponse } from \"@bitwarden/common/models/response/organization/organizationSsoResponse\";\nimport { SsoConfigView } from \"@bitwarden/common/models/view/ssoConfigView\";\n\nconst defaultSigningAlgorithm = \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\";\n\n@Component({\n  selector: \"app-org-manage-sso\",\n  templateUrl: \"sso.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SsoComponent implements OnInit {\n  readonly ssoType = SsoType;\n\n  readonly ssoTypeOptions: SelectOptions[] = [\n    { name: this.i18nService.t(\"selectType\"), value: SsoType.None, disabled: true },\n    { name: \"OpenID Connect\", value: SsoType.OpenIdConnect },\n    { name: \"SAML 2.0\", value: SsoType.Saml2 },\n  ];\n\n  readonly samlSigningAlgorithms = [\n    \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha384\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha512\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\",\n  ];\n\n  readonly saml2SigningBehaviourOptions: SelectOptions[] = [\n    {\n      name: \"If IdP Wants Authn Requests Signed\",\n      value: Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned,\n    },\n    { name: \"Always\", value: Saml2SigningBehavior.Always },\n    { name: \"Never\", value: Saml2SigningBehavior.Never },\n  ];\n  readonly saml2BindingTypeOptions: SelectOptions[] = [\n    { name: \"Redirect\", value: Saml2BindingType.HttpRedirect },\n    { name: \"HTTP POST\", value: Saml2BindingType.HttpPost },\n  ];\n  readonly saml2NameIdFormatOptions: SelectOptions[] = [\n    { name: \"Not Configured\", value: Saml2NameIdFormat.NotConfigured },\n    { name: \"Unspecified\", value: Saml2NameIdFormat.Unspecified },\n    { name: \"Email Address\", value: Saml2NameIdFormat.EmailAddress },\n    { name: \"X.509 Subject Name\", value: Saml2NameIdFormat.X509SubjectName },\n    { name: \"Windows Domain Qualified Name\", value: Saml2NameIdFormat.WindowsDomainQualifiedName },\n    { name: \"Kerberos Principal Name\", value: Saml2NameIdFormat.KerberosPrincipalName },\n    { name: \"Entity Identifier\", value: Saml2NameIdFormat.EntityIdentifier },\n    { name: \"Persistent\", value: Saml2NameIdFormat.Persistent },\n    { name: \"Transient\", value: Saml2NameIdFormat.Transient },\n  ];\n\n  readonly connectRedirectOptions: SelectOptions[] = [\n    { name: \"Redirect GET\", value: OpenIdConnectRedirectBehavior.RedirectGet },\n    { name: \"Form POST\", value: OpenIdConnectRedirectBehavior.FormPost },\n  ];\n\n  showOpenIdCustomizations = false;\n\n  loading = true;\n  haveTestedKeyConnector = false;\n  organizationId: string;\n  organization: Organization;\n  formPromise: Promise<OrganizationSsoResponse>;\n\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  enabled = this.formBuilder.control(false);\n\n  openIdForm = this.formBuilder.group(\n    {\n      authority: [\"\", dirtyRequired],\n      clientId: [\"\", dirtyRequired],\n      clientSecret: [\"\", dirtyRequired],\n      metadataAddress: [],\n      redirectBehavior: [OpenIdConnectRedirectBehavior.RedirectGet, dirtyRequired],\n      getClaimsFromUserInfoEndpoint: [],\n      additionalScopes: [],\n      additionalUserIdClaimTypes: [],\n      additionalEmailClaimTypes: [],\n      additionalNameClaimTypes: [],\n      acrValues: [],\n      expectedReturnAcrValue: [],\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  samlForm = this.formBuilder.group(\n    {\n      spNameIdFormat: [Saml2NameIdFormat.NotConfigured],\n      spOutboundSigningAlgorithm: [defaultSigningAlgorithm],\n      spSigningBehavior: [Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned],\n      spMinIncomingSigningAlgorithm: [defaultSigningAlgorithm],\n      spWantAssertionsSigned: [],\n      spValidateCertificates: [],\n\n      idpEntityId: [\"\", dirtyRequired],\n      idpBindingType: [Saml2BindingType.HttpRedirect],\n      idpSingleSignOnServiceUrl: [],\n      idpSingleLogoutServiceUrl: [],\n      idpX509PublicCert: [\"\", dirtyRequired],\n      idpOutboundSigningAlgorithm: [defaultSigningAlgorithm],\n      idpAllowUnsolicitedAuthnResponse: [],\n      idpAllowOutboundLogoutRequests: [true],\n      idpWantAuthnRequestsSigned: [],\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  ssoConfigForm = this.formBuilder.group({\n    configType: [SsoType.None],\n    keyConnectorEnabled: [false],\n    keyConnectorUrl: [\"\"],\n    openId: this.openIdForm,\n    saml: this.samlForm,\n  });\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.ssoConfigForm.get(\"configType\").valueChanges.subscribe((newType: SsoType) => {\n      if (newType === SsoType.OpenIdConnect) {\n        this.openIdForm.enable();\n        this.samlForm.disable();\n      } else if (newType === SsoType.Saml2) {\n        this.openIdForm.disable();\n        this.samlForm.enable();\n      } else {\n        this.openIdForm.disable();\n        this.samlForm.disable();\n      }\n    });\n\n    this.samlForm\n      .get(\"spSigningBehavior\")\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n      .valueChanges.subscribe(() =>\n        this.samlForm.get(\"idpX509PublicCert\").updateValueAndValidity()\n      );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    const ssoSettings = await this.organizationApiService.getSso(this.organizationId);\n    this.populateForm(ssoSettings);\n\n    this.callbackPath = ssoSettings.urls.callbackPath;\n    this.signedOutCallbackPath = ssoSettings.urls.signedOutCallbackPath;\n    this.spEntityId = ssoSettings.urls.spEntityId;\n    this.spMetadataUrl = ssoSettings.urls.spMetadataUrl;\n    this.spAcsUrl = ssoSettings.urls.spAcsUrl;\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.validateForm(this.ssoConfigForm);\n\n    if (this.ssoConfigForm.get(\"keyConnectorEnabled\").value) {\n      await this.validateKeyConnectorUrl();\n    }\n\n    if (!this.ssoConfigForm.valid) {\n      this.readOutErrors();\n      return;\n    }\n\n    const request = new OrganizationSsoRequest();\n    request.enabled = this.enabled.value;\n    request.data = SsoConfigApi.fromView(this.ssoConfigForm.value as SsoConfigView);\n\n    this.formPromise = this.organizationApiService.updateSso(this.organizationId, request);\n\n    try {\n      const response = await this.formPromise;\n      this.populateForm(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"ssoSettingsSaved\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  async validateKeyConnectorUrl() {\n    if (this.haveTestedKeyConnector) {\n      return;\n    }\n\n    this.keyConnectorUrl.markAsPending();\n\n    try {\n      await this.apiService.getKeyConnectorAlive(this.keyConnectorUrl.value);\n      this.keyConnectorUrl.updateValueAndValidity();\n    } catch {\n      this.keyConnectorUrl.setErrors({\n        invalidUrl: true,\n      });\n    }\n\n    this.haveTestedKeyConnector = true;\n  }\n\n  toggleOpenIdCustomizations() {\n    this.showOpenIdCustomizations = !this.showOpenIdCustomizations;\n  }\n\n  getErrorCount(form: UntypedFormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof UntypedFormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n\n  get enableTestKeyConnector() {\n    return (\n      this.ssoConfigForm.get(\"keyConnectorEnabled\").value &&\n      !Utils.isNullOrWhitespace(this.keyConnectorUrl?.value)\n    );\n  }\n\n  get keyConnectorUrl() {\n    return this.ssoConfigForm.get(\"keyConnectorUrl\");\n  }\n\n  get samlSigningAlgorithmOptions(): SelectOptions[] {\n    return this.samlSigningAlgorithms.map((algorithm) => ({ name: algorithm, value: algorithm }));\n  }\n\n  private validateForm(form: UntypedFormGroup) {\n    Object.values(form.controls).forEach((control: AbstractControl) => {\n      if (control.disabled) {\n        return;\n      }\n\n      if (control instanceof UntypedFormGroup) {\n        this.validateForm(control);\n      } else {\n        control.markAsDirty();\n        control.markAsTouched();\n        control.updateValueAndValidity();\n      }\n    });\n  }\n\n  private populateForm(ssoSettings: OrganizationSsoResponse) {\n    this.enabled.setValue(ssoSettings.enabled);\n    if (ssoSettings.data != null) {\n      const ssoConfigView = new SsoConfigView(ssoSettings.data);\n      this.ssoConfigForm.patchValue(ssoConfigView);\n    }\n  }\n\n  private readOutErrors() {\n    const errorText = this.i18nService.t(\"error\");\n    const errorCount = this.getErrorCount(this.ssoConfigForm);\n    const errorCountText = this.i18nService.t(\n      errorCount === 1 ? \"formErrorSummarySingle\" : \"formErrorSummaryPlural\",\n      errorCount.toString()\n    );\n\n    const div = document.createElement(\"div\");\n    div.className = \"sr-only\";\n    div.id = \"srErrorCount\";\n    div.setAttribute(\"aria-live\", \"polite\");\n    div.innerText = errorText + \": \" + errorCountText;\n\n    const existing = document.getElementById(\"srErrorCount\");\n    if (existing != null) {\n      existing.remove();\n    }\n\n    document.body.append(div);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { canAccessManageTab } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationPermissionsGuard } from \"@bitwarden/web-vault/app/organizations/guards/org-permissions.guard\";\nimport { OrganizationLayoutComponent } from \"@bitwarden/web-vault/app/organizations/layouts/organization-layout.component\";\nimport { ManageComponent } from \"@bitwarden/web-vault/app/organizations/manage/manage.component\";\n\nimport { ScimComponent } from \"./manage/scim.component\";\nimport { SsoComponent } from \"./manage/sso.component\";\n\nconst routes: Routes = [\n  {\n    path: \"organizations/:organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, OrganizationPermissionsGuard],\n    children: [\n      {\n        path: \"manage\",\n        component: ManageComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: canAccessManageTab,\n        },\n        children: [\n          {\n            path: \"sso\",\n            component: SsoComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              organizationPermissions: (org: Organization) => org.canManageSso,\n            },\n          },\n          {\n            path: \"scim\",\n            component: ScimComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              organizationPermissions: (org: Organization) => org.canManageScim,\n            },\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"@bitwarden/web-vault/app/shared/shared.module\";\n\nimport { InputCheckboxComponent } from \"./components/input-checkbox.component\";\nimport { InputTextReadOnlyComponent } from \"./components/input-text-readonly.component\";\nimport { InputTextComponent } from \"./components/input-text.component\";\nimport { SelectComponent } from \"./components/select.component\";\nimport { ScimComponent } from \"./manage/scim.component\";\nimport { SsoComponent } from \"./manage/sso.component\";\nimport { OrganizationsRoutingModule } from \"./organizations-routing.module\";\n\n// Form components are for use in the SSO Configuration Form only and should not be exported for use elsewhere.\n// They will be deprecated by the Component Library.\n@NgModule({\n  imports: [SharedModule, OrganizationsRoutingModule],\n  declarations: [\n    InputCheckboxComponent,\n    InputTextComponent,\n    InputTextReadOnlyComponent,\n    SelectComponent,\n    SsoComponent,\n    ScimComponent,\n  ],\n})\nexport class OrganizationsModule {}\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport { CoreModule } from \"@bitwarden/web-vault/app/core\";\nimport { OssRoutingModule } from \"@bitwarden/web-vault/app/oss-routing.module\";\nimport { OssModule } from \"@bitwarden/web-vault/app/oss.module\";\nimport { WildcardRoutingModule } from \"@bitwarden/web-vault/app/wildcard-routing.module\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { OrganizationsModule } from \"./organizations/organizations.module\";\nimport { DisablePersonalVaultExportPolicyComponent } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicyComponent } from \"./policies/maximum-vault-timeout.component\";\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    OssModule,\n    JslibModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CoreModule,\n    InfiniteScrollModule,\n    DragDropModule,\n    AppRoutingModule,\n    OssRoutingModule,\n    OrganizationsModule, // Must be after OssRoutingModule for competing routes to resolve properly\n    RouterModule,\n    WildcardRoutingModule, // Needs to be last to catch all non-existing routes\n  ],\n  declarations: [\n    AppComponent,\n    DisablePersonalVaultExportPolicyComponent,\n    MaximumVaultTimeoutPolicyComponent,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport \"bootstrap\";\nimport \"jquery\";\nimport \"popper.js\";\n\nrequire(\"@bitwarden/web-vault/scss/styles.scss\");\nrequire(\"@bitwarden/web-vault/scss/tailwind.css\");\n\nimport { AppModule } from \"./app/app.module\";\n\nif (process.env.NODE_ENV === \"production\") {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Collects the user's master password, or if they are using Key Connector, prompts for an OTP via email.\n * This is exposed to the parent component via the ControlValueAccessor interface (e.g. bind it to a FormControl).\n * Use UserVerificationService to verify the user's input.\n */\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class UserVerificationComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.secret.valueChanges.subscribe((secret: string) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: Utils.isNullOrWhitespace(secret) ? null : secret,\n    });\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\n\n/**\n * Provides error handling, in particular for any error returned by the server in an api call.\n * Attach it to a <form> element and provide the name of the class property that will hold the api call promise.\n * e.g. <form [appApiAction]=\"this.formPromise\">\n * Any errors/rejections that occur will be intercepted and displayed as error toasts.\n */\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if ((e as ErrorResponse).captchaRequired) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface CardRuleEntry {\n  cardLength: number;\n  blocks: number[];\n}\n\n// See https://baymard.com/checkout-usability/credit-card-patterns for\n// all possible credit card spacing patterns. For now, we just handle\n// the below.\nconst numberFormats: Record<string, CardRuleEntry[]> = {\n  Visa: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Mastercard: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Maestro: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 13, blocks: [4, 4, 5] },\n    { cardLength: 15, blocks: [4, 6, 5] },\n    { cardLength: 19, blocks: [4, 4, 4, 4, 3] },\n  ],\n  Discover: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  \"Diners Club\": [{ cardLength: 14, blocks: [4, 6, 4] }],\n  JCB: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  UnionPay: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 19, blocks: [6, 13] },\n  ],\n  Amex: [{ cardLength: 15, blocks: [4, 6, 5] }],\n  Mir: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 17, blocks: [5, 4, 4, 4] },\n    { cardLength: 18, blocks: [6, 4, 4, 4] },\n    { cardLength: 19, blocks: [7, 4, 4, 4] },\n  ],\n  Other: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n};\n\n@Pipe({ name: \"creditCardNumber\" })\nexport class CreditCardNumberPipe implements PipeTransform {\n  transform(creditCardNumber: string, brand: string): string {\n    let rules = numberFormats[brand];\n\n    if (rules == null) {\n      rules = numberFormats[\"Other\"];\n    }\n\n    const cardLength = creditCardNumber.length;\n\n    let matchingRule = rules.find((r) => r.cardLength == cardLength);\n    if (matchingRule == null) {\n      matchingRule = rules[0];\n    }\n\n    const blocks = matchingRule.blocks;\n\n    const chunks: string[] = [];\n    let total = 0;\n\n    blocks.forEach((c) => {\n      chunks.push(creditCardNumber.slice(total, total + c));\n      total += c;\n    });\n\n    // Append the remaining part\n    if (cardLength > total) {\n      chunks.push(creditCardNumber.slice(total));\n    }\n\n    return chunks.join(\" \");\n  }\n}\n","import { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AvatarComponent } from \"./components/avatar.component\";\nimport { CalloutComponent } from \"./components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"./components/export-scope-callout.component\";\nimport { IconComponent } from \"./components/icon.component\";\nimport { BitwardenToastModule } from \"./components/toastr.component\";\nimport { A11yInvalidDirective } from \"./directives/a11y-invalid.directive\";\nimport { A11yTitleDirective } from \"./directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"./directives/api-action.directive\";\nimport { AutofocusDirective } from \"./directives/autofocus.directive\";\nimport { BoxRowDirective } from \"./directives/box-row.directive\";\nimport { FallbackSrcDirective } from \"./directives/fallback-src.directive\";\nimport { InputStripSpacesDirective } from \"./directives/input-strip-spaces.directive\";\nimport { InputVerbatimDirective } from \"./directives/input-verbatim.directive\";\nimport { NotPremiumDirective } from \"./directives/not-premium.directive\";\nimport { SelectCopyDirective } from \"./directives/select-copy.directive\";\nimport { StopClickDirective } from \"./directives/stop-click.directive\";\nimport { StopPropDirective } from \"./directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"./directives/true-false-value.directive\";\nimport { ColorPasswordCountPipe } from \"./pipes/color-password-count.pipe\";\nimport { ColorPasswordPipe } from \"./pipes/color-password.pipe\";\nimport { CreditCardNumberPipe } from \"./pipes/credit-card-number.pipe\";\nimport { EllipsisPipe } from \"./pipes/ellipsis.pipe\";\nimport { I18nPipe } from \"./pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"./pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"./pipes/search.pipe\";\nimport { UserNamePipe } from \"./pipes/user-name.pipe\";\nimport { PasswordStrengthComponent } from \"./shared/components/password-strength/password-strength.component\";\n\n@NgModule({\n  imports: [\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    AvatarComponent,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  exports: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    AvatarComponent,\n    BitwardenToastModule,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  providers: [CreditCardNumberPipe, DatePipe, I18nPipe, SearchPipe, UserNamePipe],\n})\nexport class JslibModule {}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform(\n    items: any[],\n    searchText: string,\n    prop1?: string,\n    prop2?: string,\n    prop3?: string\n  ): any[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (\n        prop1 != null &&\n        i[prop1] != null &&\n        i[prop1].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop2 != null &&\n        i[prop2] != null &&\n        i[prop2].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop3 != null &&\n        i[prop3] != null &&\n        i[prop3].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals?: boolean;\n  replaceTopModal?: boolean;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  /**\n   * @deprecated Use `dialogService.open` (in web) or `modalService.open` (in desktop/browser) instead.\n   * If replacing an existing call to this method, also remove any `@ViewChild` and `<ng-template>` associated with the\n   * existing usage.\n   */\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config: ModalConfig = {}) {\n    const { replaceTopModal = false, allowMultipleModals = false } = config;\n\n    if (this.modalCount > 0 && replaceTopModal) {\n      this.topModal.instance.close();\n    }\n\n    if (this.modalCount > 0 && !allowMultipleModals) {\n      return;\n    }\n\n    const [modalRef] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  closeAll(): void {\n    this.modalList.forEach((modal) => modal.instance.close());\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nexport class DynamicTreeNode<T extends CollectionView | FolderView> {\n  fullList: T[];\n  nestedList: TreeNode<T>[];\n\n  hasId(id: string): boolean {\n    return this.fullList != null && this.fullList.filter((i: T) => i.id === id).length > 0;\n  }\n\n  constructor(init?: Partial<DynamicTreeNode<T>>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { firstValueFrom, from, mergeMap, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ServiceUtils } from \"@bitwarden/common/misc/serviceUtils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\n\nconst NestingDelimiter = \"/\";\n\n@Injectable()\nexport class VaultFilterService {\n  constructor(\n    protected stateService: StateService,\n    protected organizationService: OrganizationService,\n    protected folderService: FolderService,\n    protected cipherService: CipherService,\n    protected collectionService: CollectionService,\n    protected policyService: PolicyService\n  ) {}\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await this.stateService.setCollapsedGroupings(Array.from(collapsedFilterNodes));\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    return new Set(await this.stateService.getCollapsedGroupings());\n  }\n\n  buildOrganizations(): Promise<Organization[]> {\n    return this.organizationService.getAll();\n  }\n\n  buildNestedFolders(organizationId?: string): Observable<DynamicTreeNode<FolderView>> {\n    const transformation = async (storedFolders: FolderView[]) => {\n      let folders: FolderView[];\n      if (organizationId != null) {\n        const ciphers = await this.cipherService.getAllDecrypted();\n        const orgCiphers = ciphers.filter((c) => c.organizationId == organizationId);\n        folders = storedFolders.filter(\n          (f) =>\n            orgCiphers.filter((oc) => oc.folderId == f.id).length > 0 ||\n            ciphers.filter((c) => c.folderId == f.id).length < 1\n        );\n      } else {\n        folders = storedFolders;\n      }\n      const nestedFolders = await this.getAllFoldersNested(folders);\n      return new DynamicTreeNode<FolderView>({\n        fullList: folders,\n        nestedList: nestedFolders,\n      });\n    };\n\n    return this.folderService.folderViews$.pipe(\n      mergeMap((folders) => from(transformation(folders)))\n    );\n  }\n\n  async buildCollections(organizationId?: string): Promise<DynamicTreeNode<CollectionView>> {\n    const storedCollections = await this.collectionService.getAllDecrypted();\n    let collections: CollectionView[];\n    if (organizationId != null) {\n      collections = storedCollections.filter((c) => c.organizationId === organizationId);\n    } else {\n      collections = storedCollections;\n    }\n    const nestedCollections = await this.collectionService.getAllNested(collections);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: collections,\n      nestedList: nestedCollections,\n    });\n  }\n\n  async checkForSingleOrganizationPolicy(): Promise<boolean> {\n    return await firstValueFrom(\n      this.policyService.policyAppliesToActiveUser$(PolicyType.SingleOrg)\n    );\n  }\n\n  async checkForPersonalOwnershipPolicy(): Promise<boolean> {\n    return await firstValueFrom(\n      this.policyService.policyAppliesToActiveUser$(PolicyType.PersonalOwnership)\n    );\n  }\n\n  protected async getAllFoldersNested(folders: FolderView[]): Promise<TreeNode<FolderView>[]> {\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getFolderNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllFoldersNested(\n      await firstValueFrom(this.folderService.folderViews$)\n    );\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n}\n","import { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { DeviceVerificationRequest } from \"../models/request/deviceVerificationRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationConnectionRequest } from \"../models/request/organizationConnectionRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PasswordlessCreateAuthRequest } from \"../models/request/passwordlessCreateAuthRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { AuthRequestResponse } from \"../models/response/authRequestResponse\";\nimport { RegisterResponse } from \"../models/response/authentication/registerResponse\";\nimport { BillingHistoryResponse } from \"../models/response/billingHistoryResponse\";\nimport { BillingPaymentResponse } from \"../models/response/billingPaymentResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DeviceVerificationResponse } from \"../models/response/deviceVerificationResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organizationConnectionResponse\";\nimport { OrganizationExportResponse } from \"../models/response/organizationExportResponse\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organizationSponsorshipSyncStatusResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SsoPreValidateResponse } from \"../models/response/ssoPreValidateResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport abstract class ApiService {\n  send: (\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ) => Promise<any>;\n\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | ApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<RegisterResponse>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<void>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postConvertToKeyConnector: () => Promise<void>;\n  //passwordless\n  postAuthRequest: (request: PasswordlessCreateAuthRequest) => Promise<AuthRequestResponse>;\n  getAuthResponse: (id: string, accessCode: string) => Promise<AuthRequestResponse>;\n\n  getUserBillingHistory: () => Promise<BillingHistoryResponse>;\n  getUserBillingPayment: () => Promise<BillingPaymentResponse>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getFullCipherDetails: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getCollectionDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionGroupDetailsResponse>;\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n  getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroup: (organizationId: string, id: string) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getOrganizationUser: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserDetailsResponse>;\n  getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n  getOrganizationUsers: (\n    organizationId: string\n  ) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n  getOrganizationUserResetPasswordDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserResetPasswordDetailsReponse>;\n  postOrganizationUserInvite: (\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ) => Promise<any>;\n  postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n  postManyOrganizationUserReinvite: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  postOrganizationUserAccept: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ) => Promise<any>;\n  postOrganizationUserConfirm: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ) => Promise<any>;\n  postOrganizationUsersPublicKey: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n  postOrganizationUserBulkConfirm: (\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  putOrganizationUser: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ) => Promise<any>;\n  putOrganizationUserGroups: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPasswordEnrollment: (\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ) => Promise<void>;\n  putOrganizationUserResetPassword: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ) => Promise<any>;\n  deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  revokeOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  revokeManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  restoreOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  restoreManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  getSync: () => Promise<SyncResponse>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n  getDeviceVerificationSettings: () => Promise<DeviceVerificationResponse>;\n  putDeviceVerificationSettings: (\n    request: DeviceVerificationRequest\n  ) => Promise<DeviceVerificationResponse>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n  getCloudCommunicationsEnabled: () => Promise<boolean>;\n  abstract getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId: string\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  deleteOrganizationConnection: (id: string) => Promise<void>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<void>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<SsoPreValidateResponse>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  getSponsorshipSyncStatus: (\n    sponsoredOrgId: string\n  ) => Promise<OrganizationSponsorshipSyncStatusResponse>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n  getOrganizationExport: (organizationId: string) => Promise<OrganizationExportResponse>;\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  saveWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: any, b: any) => number;\n  sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  getKeyForUserEncryption: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuffer: EncArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","import { EventType } from \"../enums/eventType\";\n\nexport abstract class EventService {\n  collect: (\n    eventType: EventType,\n    cipherId?: string,\n    uploadImmediately?: boolean,\n    organizationId?: string\n  ) => Promise<any>;\n  uploadEvents: (userId?: string) => Promise<any>;\n  clearEvents: (userId?: string) => Promise<any>;\n}\n","import { EventView } from \"../models/view/eventView\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport abstract class FileDownloadService {\n  download: (request: FileDownloadRequest) => void;\n}\n","import { Observable } from \"rxjs\";\n\nimport { FolderData } from \"../../models/data/folderData\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { FolderView } from \"../../models/view/folderView\";\n\nexport abstract class FolderService {\n  folders$: Observable<Folder[]>;\n  folderViews$: Observable<FolderView[]>;\n\n  clearCache: () => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  /**\n   * @deprecated Only use in CLI!\n   */\n  getAllDecryptedFromState: () => Promise<FolderView[]>;\n}\n\nexport abstract class InternalFolderService extends FolderService {\n  upsert: (folder: FolderData | FolderData[]) => Promise<void>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<void>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nexport abstract class I18nService {\n  locale$: Observable<string>;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { Organization } from \"../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n}\n","import { map, Observable } from \"rxjs\";\n\nimport { Utils } from \"../../misc/utils\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { I18nService } from \"../i18n.service\";\n\nexport function canAccessToolsTab(org: Organization): boolean {\n  return org.canAccessImportExport || org.canAccessReports;\n}\n\nexport function canAccessSettingsTab(org: Organization): boolean {\n  return org.isOwner;\n}\n\nexport function canAccessManageTab(org: Organization): boolean {\n  return (\n    org.canCreateNewCollections ||\n    org.canEditAnyCollection ||\n    org.canDeleteAnyCollection ||\n    org.canEditAssignedCollections ||\n    org.canDeleteAssignedCollections ||\n    org.canAccessEventLogs ||\n    org.canManageGroups ||\n    org.canManageUsers ||\n    org.canManagePolicies ||\n    org.canManageSso ||\n    org.canManageScim\n  );\n}\n\nexport function canAccessOrgAdmin(org: Organization): boolean {\n  return canAccessToolsTab(org) || canAccessSettingsTab(org) || canAccessManageTab(org);\n}\n\nexport function getOrganizationById(id: string) {\n  return map<Organization[], Organization | undefined>((orgs) => orgs.find((o) => o.id === id));\n}\n\nexport function canAccessAdmin(i18nService: I18nService) {\n  return map<Organization[], Organization[]>((orgs) =>\n    orgs.filter(canAccessOrgAdmin).sort(Utils.getSortFunction(i18nService, \"name\"))\n  );\n}\n\nexport abstract class OrganizationService {\n  organizations$: Observable<Organization[]>;\n\n  get: (id: string) => Organization;\n  getByIdentifier: (identifier: string) => Organization;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: () => boolean;\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  getApplicationVersion: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  supportsSecureStorage: () => boolean;\n}\n","import { Observable } from \"rxjs\";\n\nimport { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { PolicyResponse } from \"../../models/response/policyResponse\";\n\nexport abstract class PolicyService {\n  policies$: Observable<Policy[]>;\n  masterPasswordPolicyOptions$: (policies?: Policy[]) => Observable<MasterPasswordPolicyOptions>;\n  policyAppliesToActiveUser$: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean\n  ) => Observable<boolean>;\n\n  /**\n   * @deprecated Do not call this, use the policies$ observable collection\n   */\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n\nexport abstract class InternalPolicyService extends PolicyService {\n  upsert: (policy: PolicyData) => Promise<any>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<void>;\n  clear: (userId?: string) => Promise<any>;\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { LocalData } from \"../models/data/localData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport { Account, AccountSettingsSettings } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts: BehaviorSubject<{ [userId: string]: T }>;\n  activeAccount$: Observable<string>;\n  activeAccountUnlocked$: Observable<boolean>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getHasPremiumPersonally: (options?: StorageOptions) => Promise<boolean>;\n  setHasPremiumPersonally: (value: boolean, options?: StorageOptions) => Promise<void>;\n  setHasPremiumFromOrganization: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getHasPremiumFromOrganization: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this, use PolicyService\n   */\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  /**\n   * @deprecated Do not call this, use PolicyService\n   */\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDuckDuckGoSharedKey: (options?: StorageOptions) => Promise<string>;\n  setDuckDuckGoSharedKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableDuckDuckGoBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableDuckDuckGoBrowserIntegration: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableGravitars: (options?: StorageOptions) => Promise<boolean>;\n  setEnableGravitars: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<{ [orgId: string]: EncryptedOrganizationKeyData }>;\n  setEncryptedOrganizationKeys: (\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use PolicyService\n   */\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  /**\n   * @deprecated Do not call this directly, use PolicyService\n   */\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<{ [cipherId: string]: LocalData }>;\n  setLocalData: (\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getUsernameGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setUsernameGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getGeneratorOptions: (options?: StorageOptions) => Promise<any>;\n  setGeneratorOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  getSettings: (options?: StorageOptions) => Promise<AccountSettingsSettings>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  setSettings: (value: AccountSettingsSettings, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  getServerConfig: (options?: StorageOptions) => Promise<ServerConfigData>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  setServerConfig: (value: ServerConfigData, options?: StorageOptions) => Promise<void>;\n}\n","import {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../models/response/notificationResponse\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\nimport { Verification } from \"../../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","export abstract class ValidationService {\n  showError: (data: any) => string[];\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n  OrganizationUser_Revoked = 1511,\n  OrganizationUser_Restored = 1512,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n  Organization_SponsorshipsSynced = 1608,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_KDF_ITERATIONS = 100000;\nexport const SEND_KDF_ITERATIONS = 100000;\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/itemView\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/treeNode\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","export function getDomain(host: string): string | null {\n  return null;\n}\n\nexport function isValid(host: string): boolean {\n  return true;\n}\n","/* eslint-disable no-useless-escape */\nimport * as tldjs from \"tldjs\";\n\nimport { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\ndeclare global {\n  /* eslint-disable-next-line no-var */\n  var bitwardenContainerService: BitwardenContainerService;\n}\n\ninterface BitwardenContainerService {\n  getCryptoService: () => CryptoService;\n  getEncryptService: () => AbstractEncryptService;\n}\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: typeof global = null;\n  static tldEndingRegex =\n    /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n\n    if (Utils.isNode) {\n      Utils.global = global;\n    } else if (Utils.isBrowser) {\n      Utils.global = window;\n    } else {\n      // If it's not browser or node then it must be a service worker\n      Utils.global = self;\n    }\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = Utils.global.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return Utils.global.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.hostname !== \"\" ? url.hostname : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    let httpUrl = uriString.startsWith(\"http://\") || uriString.startsWith(\"https://\");\n    if (\n      !httpUrl &&\n      uriString.indexOf(\"://\") < 0 &&\n      Utils.tldEndingRegex.test(uriString) &&\n      uriString.indexOf(\"@\") < 0\n    ) {\n      uriString = \"http://\" + uriString;\n      httpUrl = true;\n    }\n\n    if (httpUrl) {\n      try {\n        const url = Utils.getUrlObject(uriString);\n        const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n        if (!validHostname) {\n          return null;\n        }\n\n        if (url.hostname === \"localhost\" || Utils.validIpAddress(url.hostname)) {\n          return url.hostname;\n        }\n\n        const urlDomain =\n          tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n        return urlDomain != null ? urlDomain : url.hostname;\n      } catch (e) {\n        // Invalid domain, try another approach below.\n      }\n    }\n\n    try {\n      const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n      if (domain != null) {\n        return domain;\n      }\n    } catch {\n      return null;\n    }\n\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction<T>(\n    i18nService: I18nService,\n    prop: { [K in keyof T]: T[K] extends string ? K : never }[keyof T]\n  ): (a: T, b: T) => number {\n    return (a, b) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      // The `as unknown as string` here is unfortunate because typescript doesn't property understand that the return of T[prop] will be a string\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop] as unknown as string, b[prop] as unknown as string)\n        : (a[prop] as unknown as string).localeCompare(b[prop] as unknown as string);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static isPromise(obj: any): obj is Promise<unknown> {\n    return (\n      obj != undefined && typeof obj[\"then\"] === \"function\" && typeof obj[\"catch\"] === \"function\"\n    );\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  /**\n   * There are a few ways to calculate text color for contrast, this one seems to fit accessibility guidelines best.\n   * https://stackoverflow.com/a/3943023/6869691\n   *\n   * @param {string} bgColor\n   * @param {number} [threshold] see stackoverflow link above\n   * @param {boolean} [svgTextFill]\n   * Indicates if this method is performed on an SVG <text> 'fill' attribute (e.g. <text fill=\"black\"></text>).\n   * This check is necessary because the '!important' tag cannot be used in a 'fill' attribute.\n   */\n  static pickTextColorBasedOnBgColor(bgColor: string, threshold = 186, svgTextFill = false) {\n    const bgColorHexNums = bgColor.charAt(0) === \"#\" ? bgColor.substring(1, 7) : bgColor;\n    const r = parseInt(bgColorHexNums.substring(0, 2), 16); // hexToR\n    const g = parseInt(bgColorHexNums.substring(2, 4), 16); // hexToG\n    const b = parseInt(bgColorHexNums.substring(4, 6), 16); // hexToB\n    const blackColor = svgTextFill ? \"black\" : \"black !important\";\n    const whiteColor = svgTextFill ? \"white\" : \"white !important\";\n    return r * 0.299 + g * 0.587 + b * 0.114 > threshold ? blackColor : whiteColor;\n  }\n\n  static stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  /**\n   * @throws Will throw an error if the ContainerService has not been attached to the window object\n   */\n  static getContainerService(): BitwardenContainerService {\n    if (this.global.bitwardenContainerService == null) {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n    return this.global.bitwardenContainerService;\n  }\n\n  private static validIpAddress(ipString: string): boolean {\n    const ipRegex =\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return ipRegex.test(ipString);\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (typeof window !== \"undefined\") {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { LoginUriApi } from \"./loginUriApi\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { AttachmentResponse } from \"../response/attachmentResponse\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/cardApi\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipherResponse\";\n\nimport { AttachmentData } from \"./attachmentData\";\nimport { CardData } from \"./cardData\";\nimport { FieldData } from \"./fieldData\";\nimport { IdentityData } from \"./identityData\";\nimport { LoginData } from \"./loginData\";\nimport { PasswordHistoryData } from \"./passwordHistoryData\";\nimport { SecureNoteData } from \"./secureNoteData\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  creationDate: string;\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.creationDate = response.creationDate;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/fieldApi\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../api/identityApi\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { LoginApi } from \"../api/loginApi\";\n\nimport { LoginUriData } from \"./loginUriData\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/passwordHistoryResponse\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachmentData\";\nimport { AttachmentView } from \"../view/attachmentView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string; // Readable size, ex: \"4.2 KB\" or \"1.43 GB\"\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      view.key = await this.decryptAttachmentKey(orgId, encKey);\n    }\n\n    return view;\n  }\n\n  private async decryptAttachmentKey(orgId: string, encKey?: SymmetricCryptoKey) {\n    try {\n      if (encKey == null) {\n        encKey = await this.getKeyForDecryption(orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      const decValue = await encryptService.decryptToBytes(this.key, encKey);\n      return new SymmetricCryptoKey(decValue);\n    } catch (e) {\n      // TODO: error?\n    }\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Attachment>>): Attachment {\n    if (obj == null) {\n      return null;\n    }\n\n    const key = EncString.fromJSON(obj.key);\n    const fileName = EncString.fromJSON(obj.fileName);\n\n    return Object.assign(new Attachment(), obj, {\n      key,\n      fileName,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardData } from \"../data/cardData\";\nimport { CardView } from \"../view/cardView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Card>>): Card {\n    if (obj == null) {\n      return null;\n    }\n\n    const cardholderName = EncString.fromJSON(obj.cardholderName);\n    const brand = EncString.fromJSON(obj.brand);\n    const number = EncString.fromJSON(obj.number);\n    const expMonth = EncString.fromJSON(obj.expMonth);\n    const expYear = EncString.fromJSON(obj.expYear);\n    const code = EncString.fromJSON(obj.code);\n    return Object.assign(new Card(), obj, {\n      cardholderName,\n      brand,\n      number,\n      expMonth,\n      expYear,\n      code,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { LocalData } from \"../data/localData\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secureNote\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Cipher extends Domain {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: LocalData;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  creationDate: Date;\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, localData: LocalData = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      [\"id\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.creationDate = obj.creationDate != null ? new Date(obj.creationDate) : null;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.creationDate = this.creationDate != null ? this.creationDate.toISOString() : null;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n\n  static fromJSON(obj: Jsonify<Cipher>) {\n    if (obj == null) {\n      return null;\n    }\n\n    const domain = new Cipher();\n    const name = EncString.fromJSON(obj.name);\n    const notes = EncString.fromJSON(obj.notes);\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => Attachment.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => Field.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => Password.fromJSON(ph));\n\n    Object.assign(domain, obj, {\n      name,\n      notes,\n      revisionDate,\n      deletedDate,\n      attachments,\n      fields,\n      passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        domain.card = Card.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = Identity.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        domain.login = Login.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNote.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return domain;\n  }\n}\n","import { CollectionData } from \"../data/collectionData\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncString implements IEncrypted {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      this.initFromData(encryptedStringOrType as EncryptionType, data, iv, mac);\n    } else {\n      this.initFromEncryptedString(encryptedStringOrType as string);\n    }\n  }\n\n  get ivBytes(): ArrayBuffer {\n    return this.iv == null ? null : Utils.fromB64ToArray(this.iv).buffer;\n  }\n\n  get macBytes(): ArrayBuffer {\n    return this.mac == null ? null : Utils.fromB64ToArray(this.mac).buffer;\n  }\n\n  get dataBytes(): ArrayBuffer {\n    return this.data == null ? null : Utils.fromB64ToArray(this.data).buffer;\n  }\n\n  toJSON() {\n    return this.encryptedString;\n  }\n\n  static fromJSON(obj: Jsonify<EncString>): EncString {\n    if (obj == null) {\n      return null;\n    }\n\n    return new EncString(obj);\n  }\n\n  private initFromData(encType: EncryptionType, data: string, iv: string, mac: string) {\n    if (iv != null) {\n      this.encryptedString = encType + \".\" + iv + \"|\" + data;\n    } else {\n      this.encryptedString = encType + \".\" + data;\n    }\n\n    // mac\n    if (mac != null) {\n      this.encryptedString += \"|\" + mac;\n    }\n\n    this.encryptionType = encType;\n    this.data = data;\n    this.iv = iv;\n    this.mac = mac;\n  }\n\n  private initFromEncryptedString(encryptedString: string) {\n    this.encryptedString = encryptedString as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const { encType, encPieces } = this.parseEncryptedString(this.encryptedString);\n    this.encryptionType = encType;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  private parseEncryptedString(encryptedString: string): {\n    encType: EncryptionType;\n    encPieces: string[];\n  } {\n    const headerPieces = encryptedString.split(\".\");\n    let encType: EncryptionType;\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = encryptedString.split(\"|\");\n      encType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    return {\n      encType,\n      encPieces,\n    };\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    try {\n      if (key == null) {\n        key = await this.getKeyForDecryption(orgId);\n      }\n      if (key == null) {\n        throw new Error(\"No key to decrypt EncString with orgId \" + orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      this.decryptedValue = await encryptService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/fieldData\";\nimport { FieldView } from \"../view/fieldView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Field>>): Field {\n    if (obj == null) {\n      return null;\n    }\n\n    const name = EncString.fromJSON(obj.name);\n    const value = EncString.fromJSON(obj.value);\n\n    return Object.assign(new Field(), obj, {\n      name,\n      value,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FolderData } from \"../data/folderData\";\nimport { FolderView } from \"../view/folderView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n\n  static fromJSON(obj: Jsonify<Folder>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new Folder(), obj, { name: EncString.fromJSON(obj.name), revisionDate });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityData } from \"../data/identityData\";\nimport { IdentityView } from \"../view/identityView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n\n  static fromJSON(obj: Jsonify<Identity>): Identity {\n    if (obj == null) {\n      return null;\n    }\n\n    const title = EncString.fromJSON(obj.title);\n    const firstName = EncString.fromJSON(obj.firstName);\n    const middleName = EncString.fromJSON(obj.middleName);\n    const lastName = EncString.fromJSON(obj.lastName);\n    const address1 = EncString.fromJSON(obj.address1);\n    const address2 = EncString.fromJSON(obj.address2);\n    const address3 = EncString.fromJSON(obj.address3);\n    const city = EncString.fromJSON(obj.city);\n    const state = EncString.fromJSON(obj.state);\n    const postalCode = EncString.fromJSON(obj.postalCode);\n    const country = EncString.fromJSON(obj.country);\n    const company = EncString.fromJSON(obj.company);\n    const email = EncString.fromJSON(obj.email);\n    const phone = EncString.fromJSON(obj.phone);\n    const ssn = EncString.fromJSON(obj.ssn);\n    const username = EncString.fromJSON(obj.username);\n    const passportNumber = EncString.fromJSON(obj.passportNumber);\n    const licenseNumber = EncString.fromJSON(obj.licenseNumber);\n\n    return Object.assign(new Identity(), obj, {\n      title,\n      firstName,\n      middleName,\n      lastName,\n      address1,\n      address2,\n      address3,\n      city,\n      state,\n      postalCode,\n      country,\n      company,\n      email,\n      phone,\n      ssn,\n      username,\n      passportNumber,\n      licenseNumber,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginData } from \"../data/loginData\";\nimport { LoginView } from \"../view/loginView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { LoginUri } from \"./loginUri\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Login>>): Login {\n    if (obj == null) {\n      return null;\n    }\n\n    const username = EncString.fromJSON(obj.username);\n    const password = EncString.fromJSON(obj.password);\n    const totp = EncString.fromJSON(obj.totp);\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUri.fromJSON(uri));\n\n    return Object.assign(new Login(), obj, {\n      username,\n      password,\n      totp,\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/loginUriData\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n        match: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n\n  static fromJSON(obj: Jsonify<LoginUri>): LoginUri {\n    if (obj == null) {\n      return null;\n    }\n\n    const uri = EncString.fromJSON(obj.uri);\n    return Object.assign(new LoginUri(), obj, {\n      uri,\n    });\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { PasswordHistoryData } from \"../data/passwordHistoryData\";\nimport { PasswordHistoryView } from \"../view/passwordHistoryView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(this, obj, {\n      password: null,\n    });\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Password>>): Password {\n    if (obj == null) {\n      return null;\n    }\n\n    const password = EncString.fromJSON(obj.password);\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new Password(), obj, {\n      password,\n      lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secureNoteData\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nimport Domain from \"./domainBase\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n\n  static fromJSON(obj: Jsonify<SecureNote>): SecureNote {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new SecureNote(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n\n  toJSON() {\n    // The whole object is constructed from the initial key, so just store the B64 key\n    return { keyB64: this.keyB64 };\n  }\n\n  static fromJSON(obj: Jsonify<SymmetricCryptoKey>): SymmetricCryptoKey {\n    if (obj == null) {\n      return null;\n    }\n\n    const arrayBuffer = Utils.fromB64ToArray(obj.keyB64).buffer;\n    return new SymmetricCryptoKey(arrayBuffer);\n  }\n}\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/encString\";\nimport { CardView } from \"../view/cardView\";\n\nexport class CardExport {\n  static template(): CardExport {\n    const req = new CardExport();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: CardExport, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: CardExport, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/encString\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/fieldView\";\n\nexport class FieldExport {\n  static template(): FieldExport {\n    const req = new FieldExport();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: FieldExport, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: FieldExport, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identityView\";\n\nexport class IdentityExport {\n  static template(): IdentityExport {\n    const req = new IdentityExport();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: IdentityExport, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: IdentityExport, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/encString\";\nimport { LoginUri as LoginUriDomain } from \"../domain/loginUri\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nexport class LoginUriExport {\n  static template(): LoginUriExport {\n    const req = new LoginUriExport();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUriExport, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUriExport, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/loginView\";\n\nimport { LoginUriExport } from \"./loginUriExport\";\n\nexport class LoginExport {\n  static template(): LoginExport {\n    const req = new LoginExport();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: LoginExport, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUriExport.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: LoginExport, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUriExport.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUriExport[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secureNote\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nexport class SecureNoteExport {\n  static template(): SecureNoteExport {\n    const req = new SecureNoteExport();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNoteExport, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNoteExport, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/encString\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { CardExport } from \"./cardExport\";\nimport { FieldExport } from \"./fieldExport\";\nimport { IdentityExport } from \"./identityExport\";\nimport { LoginExport } from \"./loginExport\";\nimport { SecureNoteExport } from \"./secureNoteExport\";\n\nexport class CipherExport {\n  static template(): CipherExport {\n    const req = new CipherExport();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: CipherExport, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => FieldExport.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = LoginExport.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteExport.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = CardExport.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityExport.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: CipherExport, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => FieldExport.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = LoginExport.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNoteExport.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = CardExport.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = IdentityExport.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: FieldExport[];\n  login: LoginExport;\n  secureNote: SecureNoteExport;\n  card: CardExport;\n  identity: IdentityExport;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      } else {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new LoginExport(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteExport(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardExport(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityExport(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { CipherExport } from \"./cipherExport\";\n\nexport class CipherWithIdExport extends CipherExport {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/encString\";\nimport { CollectionView } from \"../view/collectionView\";\n\nexport class CollectionExport {\n  static template(): CollectionExport {\n    const req = new CollectionExport();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: CollectionExport, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: CollectionExport, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport { CollectionExport } from \"./collectionExport\";\n\nexport class CollectionWithIdExport extends CollectionExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nexport class FolderExport {\n  static template(): FolderExport {\n    const req = new FolderExport();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: FolderExport, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: FolderExport, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nimport { FolderExport } from \"./folderExport\";\n\nexport class FolderWithIdExport extends FolderExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachmentRequest\";\nimport { PasswordHistoryRequest } from \"./passwordHistoryRequest\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Collection } from \"../domain/collection\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class CollectionRequest {\n  name: string;\n  externalId: string;\n  groups: SelectionReadOnlyRequest[] = [];\n\n  constructor(collection?: Collection) {\n    if (collection == null) {\n      return;\n    }\n    this.name = collection.name ? collection.name.encryptedString : null;\n    this.externalId = collection.externalId;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (status === 429) {\n      this.message = \"Rate limit exceeded. Try again later.\";\n    } else if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<AttachmentView>>): AttachmentView {\n    const key = obj.key == null ? null : SymmetricCryptoKey.fromJSON(obj.key);\n    return Object.assign(new AttachmentView(), obj, { key: key });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CardView>>): CardView {\n    return Object.assign(new CardView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { LocalData } from \"../data/localData\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachmentView\";\nimport { CardView } from \"./cardView\";\nimport { FieldView } from \"./fieldView\";\nimport { IdentityView } from \"./identityView\";\nimport { LoginView } from \"./loginView\";\nimport { PasswordHistoryView } from \"./passwordHistoryView\";\nimport { SecureNoteView } from \"./secureNoteView\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View {\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: LocalData;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  creationDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.creationDate = c.creationDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CipherView>>): CipherView {\n    const view = new CipherView();\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => AttachmentView.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => FieldView.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => PasswordHistoryView.fromJSON(ph));\n\n    Object.assign(view, obj, {\n      revisionDate: revisionDate,\n      deletedDate: deletedDate,\n      attachments: attachments,\n      fields: fields,\n      passwordHistory: passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        view.card = CardView.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityView.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        view.login = LoginView.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteView.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return view;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\nimport { CollectionGroupDetailsResponse } from \"../response/collectionResponse\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<FieldView>>): FieldView {\n    return Object.assign(new FieldView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n\n  static fromJSON(obj: Jsonify<FolderView>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new FolderView(), obj, { revisionDate });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<IdentityView>>): IdentityView {\n    return Object.assign(new IdentityView(), obj);\n  }\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/loginUri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginUriView>>): LoginUriView {\n    return Object.assign(new LoginUriView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./itemView\";\nimport { LoginUriView } from \"./loginUriView\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginView>>): LoginView {\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUriView.fromJSON(uri));\n\n    return Object.assign(new LoginView(), obj, {\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<PasswordHistoryView>>): PasswordHistoryView {\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new PasswordHistoryView(), obj, {\n      lastUsedDate: lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secureNote\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<SecureNoteView>>): SecureNoteView {\n    return Object.assign(new SecureNoteView(), obj);\n  }\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","import { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BadgeDirective } from \"./badge.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [BadgeDirective],\n  declarations: [BadgeDirective],\n})\nexport class BadgeModule {}\n","import { Input, HostBinding, Component } from \"@angular/core\";\n\nimport { ButtonLikeAbstraction } from \"../shared/button-like.abstraction\";\n\nexport type ButtonTypes = \"primary\" | \"secondary\" | \"danger\";\n\nconst buttonStyles: Record<ButtonTypes, string[]> = {\n  primary: [\n    \"tw-border-primary-500\",\n    \"tw-bg-primary-500\",\n    \"!tw-text-contrast\",\n    \"hover:tw-bg-primary-700\",\n    \"hover:tw-border-primary-700\",\n    \"disabled:tw-bg-primary-500/60\",\n    \"disabled:tw-border-primary-500/60\",\n    \"disabled:!tw-text-contrast/60\",\n    \"disabled:tw-bg-clip-padding\",\n  ],\n  secondary: [\n    \"tw-bg-transparent\",\n    \"tw-border-text-muted\",\n    \"!tw-text-muted\",\n    \"hover:tw-bg-secondary-500\",\n    \"hover:tw-border-secondary-500\",\n    \"hover:!tw-text-contrast\",\n    \"disabled:tw-bg-transparent\",\n    \"disabled:tw-border-text-muted/60\",\n    \"disabled:!tw-text-muted/60\",\n  ],\n  danger: [\n    \"tw-bg-transparent\",\n    \"tw-border-danger-500\",\n    \"!tw-text-danger\",\n    \"hover:tw-bg-danger-500\",\n    \"hover:tw-border-danger-500\",\n    \"hover:!tw-text-contrast\",\n    \"disabled:tw-bg-transparent\",\n    \"disabled:tw-border-danger-500/60\",\n    \"disabled:!tw-text-danger/60\",\n  ],\n};\n\n@Component({\n  selector: \"button[bitButton], a[bitButton]\",\n  templateUrl: \"button.component.html\",\n  providers: [{ provide: ButtonLikeAbstraction, useExisting: ButtonComponent }],\n})\nexport class ButtonComponent implements ButtonLikeAbstraction {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-font-semibold\",\n      \"tw-py-1.5\",\n      \"tw-px-3\",\n      \"tw-rounded\",\n      \"tw-transition\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      \"tw-text-center\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n      \"focus-visible:tw-ring\",\n      \"focus-visible:tw-ring-offset-2\",\n      \"focus-visible:tw-ring-primary-700\",\n      \"focus-visible:tw-z-10\",\n    ]\n      .concat(\n        this.block == null || this.block === false ? [\"tw-inline-block\"] : [\"tw-w-full\", \"tw-block\"]\n      )\n      .concat(buttonStyles[this.buttonType ?? \"secondary\"]);\n  }\n\n  @HostBinding(\"attr.disabled\")\n  get disabledAttr() {\n    const disabled = this.disabled != null && this.disabled !== false;\n    return disabled || this.loading ? true : null;\n  }\n\n  @Input() buttonType: ButtonTypes = null;\n  @Input() block?: boolean;\n  @Input() loading = false;\n  @Input() disabled = false;\n}\n","export abstract class ButtonLikeAbstraction {\n  loading: boolean;\n  disabled: boolean;\n}\n","<span class=\"tw-relative\">\n  <span [ngClass]=\"{ 'tw-invisible': loading }\">\n    <ng-content></ng-content>\n  </span>\n  <span\n    class=\"tw-absolute tw-inset-0 tw-flex tw-items-center tw-justify-center\"\n    [ngClass]=\"{ 'tw-invisible': !loading }\"\n  >\n    <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" aria-hidden=\"true\"></i>\n  </span>\n</span>\n","export abstract class BitFormFieldControl {\n  ariaDescribedBy: string;\n  id: string;\n  labelForId: string;\n  required: boolean;\n  hasError: boolean;\n  error: [string, any];\n}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-error\",\n  template: `<i class=\"bwi bwi-error\"></i> {{ displayError }}`,\n  host: {\n    class: \"tw-block tw-mt-1 tw-text-danger\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorComponent {\n  @HostBinding() id = `bit-error-${nextId++}`;\n\n  @Input() error: [string, any];\n\n  constructor(private i18nService: I18nService) {}\n\n  get displayError() {\n    switch (this.error[0]) {\n      case \"required\":\n        return this.i18nService.t(\"inputRequired\");\n      case \"email\":\n        return this.i18nService.t(\"inputEmail\");\n      case \"minlength\":\n        return this.i18nService.t(\"inputMinLength\", this.error[1]?.requiredLength);\n      default:\n        // Attempt to show a custom error message.\n        if (this.error[1]?.message) {\n          return this.error[1]?.message;\n        }\n\n        return this.error;\n    }\n  }\n}\n","<label class=\"tw-mb-1 tw-block tw-font-semibold tw-text-main\" [attr.for]=\"input.labelForId\">\n  <ng-content select=\"bit-label\"></ng-content>\n  <span *ngIf=\"input.required\" class=\"tw-text-xs tw-font-normal\"> ({{ \"required\" | i18n }})</span>\n</label>\n<div class=\"tw-flex\">\n  <div *ngIf=\"prefixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitPrefix]\"></ng-content>\n  </div>\n  <ng-content></ng-content>\n  <div *ngIf=\"suffixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitSuffix]\"></ng-content>\n  </div>\n</div>\n<ng-container [ngSwitch]=\"input.hasError\">\n  <ng-content select=\"bit-hint\" *ngSwitchCase=\"false\"></ng-content>\n  <bit-error [error]=\"input.error\" *ngSwitchCase=\"true\"></bit-error>\n</ng-container>\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChild,\n  ContentChildren,\n  QueryList,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitFormFieldControl } from \"./form-field-control\";\nimport { BitHintComponent } from \"./hint.component\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n@Component({\n  selector: \"bit-form-field\",\n  templateUrl: \"./form-field.component.html\",\n  host: {\n    class: \"tw-mb-6 tw-block\",\n  },\n})\nexport class BitFormFieldComponent implements AfterContentChecked {\n  @ContentChild(BitFormFieldControl) input: BitFormFieldControl;\n  @ContentChild(BitHintComponent) hint: BitHintComponent;\n\n  @ViewChild(BitErrorComponent) error: BitErrorComponent;\n\n  @ContentChildren(BitPrefixDirective) prefixChildren: QueryList<BitPrefixDirective>;\n  @ContentChildren(BitSuffixDirective) suffixChildren: QueryList<BitSuffixDirective>;\n\n  ngAfterContentChecked(): void {\n    if (this.error) {\n      this.input.ariaDescribedBy = this.error.id;\n    } else if (this.hint) {\n      this.input.ariaDescribedBy = this.hint.id;\n    } else {\n      this.input.ariaDescribedBy = undefined;\n    }\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitInputDirective } from \"./input.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitInputDirective],\n  exports: [BitInputDirective],\n})\nexport class InputModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { NgSelectModule } from \"@ng-select/ng-select\";\n\nimport { BadgeModule } from \"../badge\";\nimport { SharedModule } from \"../shared\";\n\nimport { MultiSelectComponent } from \"./multi-select.component\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, NgSelectModule, BadgeModule, SharedModule],\n  exports: [MultiSelectComponent],\n  declarations: [MultiSelectComponent],\n})\nexport class MultiSelectModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { BitInputDirective } from \"../input/input.directive\";\nimport { InputModule } from \"../input/input.module\";\nimport { MultiSelectComponent } from \"../multi-select/multi-select.component\";\nimport { MultiSelectModule } from \"../multi-select/multi-select.module\";\nimport { SharedModule } from \"../shared\";\n\nimport { BitErrorSummary } from \"./error-summary.component\";\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitFormFieldComponent } from \"./form-field.component\";\nimport { BitHintComponent } from \"./hint.component\";\nimport { BitLabel } from \"./label.directive\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n@NgModule({\n  imports: [SharedModule, InputModule, MultiSelectModule],\n  exports: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitHintComponent,\n    BitLabel,\n    BitPrefixDirective,\n    BitSuffixDirective,\n    BitInputDirective,\n    MultiSelectComponent,\n  ],\n  declarations: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitHintComponent,\n    BitLabel,\n    BitPrefixDirective,\n    BitSuffixDirective,\n  ],\n})\nexport class FormFieldModule {}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"bit-hint\",\n  host: {\n    class: \"tw-text-muted tw-inline-block tw-mt-1\",\n  },\n})\nexport class BitHintComponent {\n  @HostBinding() id = `bit-hint-${nextId++}`;\n}\n","import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"bit-label\",\n})\nexport class BitLabel {}\n","import { Directive, HostBinding, Input } from \"@angular/core\";\n\nexport const PrefixClasses = [\n  \"tw-block\",\n  \"tw-px-3\",\n  \"tw-py-1.5\",\n  \"tw-bg-background-alt\",\n  \"tw-border\",\n  \"tw-border-solid\",\n  \"tw-border-secondary-500\",\n  \"tw-text-muted\",\n  \"tw-rounded-none\",\n  \"disabled:!tw-text-muted\",\n  \"disabled:tw-border-secondary-500\",\n];\n\n@Directive({\n  selector: \"[bitPrefix]\",\n})\nexport class BitPrefixDirective {\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\"tw-border-r-0\", \"first:tw-rounded-l\"]);\n  }\n}\n","import { Directive, HostBinding, Input } from \"@angular/core\";\n\nimport { PrefixClasses } from \"./prefix.directive\";\n\n@Directive({\n  selector: \"[bitSuffix]\",\n})\nexport class BitSuffixDirective {\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\"tw-border-l-0\", \"last:tw-rounded-r\"]);\n  }\n}\n","import { Directive, HostBinding, Input, Optional, Self } from \"@angular/core\";\nimport { NgControl, Validators } from \"@angular/forms\";\n\nimport { BitFormFieldControl } from \"../form-field/form-field-control\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"input[bitInput], select[bitInput], textarea[bitInput]\",\n  providers: [{ provide: BitFormFieldControl, useExisting: BitInputDirective }],\n})\nexport class BitInputDirective implements BitFormFieldControl {\n  @HostBinding(\"class\") @Input() get classList() {\n    return [\n      \"tw-block\",\n      \"tw-w-full\",\n      \"tw-px-3\",\n      \"tw-py-1.5\",\n      \"tw-bg-background-alt\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      this.hasError ? \"tw-border-danger-500\" : \"tw-border-secondary-500\",\n      \"tw-text-main\",\n      \"tw-placeholder-text-muted\",\n      // Rounded\n      \"tw-rounded-none\",\n      \"first:tw-rounded-l\",\n      \"last:tw-rounded-r\",\n      // Focus\n      \"focus:tw-outline-none\",\n      \"focus:tw-border-primary-700\",\n      \"focus:tw-ring-1\",\n      \"focus:tw-ring-primary-700\",\n      \"focus:tw-z-10\",\n      \"disabled:tw-bg-secondary-100\",\n    ].filter((s) => s != \"\");\n  }\n\n  @HostBinding() @Input() id = `bit-input-${nextId++}`;\n\n  @HostBinding(\"attr.aria-describedby\") ariaDescribedBy: string;\n\n  get labelForId(): string {\n    return this.id;\n  }\n\n  @HostBinding(\"attr.aria-invalid\") get ariaInvalid() {\n    return this.hasError ? true : undefined;\n  }\n\n  @HostBinding()\n  @Input()\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value: any) {\n    this._required = value != null && value !== false;\n  }\n  private _required: boolean;\n\n  @Input() hasPrefix = false;\n  @Input() hasSuffix = false;\n\n  get hasError() {\n    return this.ngControl?.status === \"INVALID\" && this.ngControl?.touched;\n  }\n\n  get error(): [string, any] {\n    const key = Object.keys(this.ngControl.errors)[0];\n    return [key, this.ngControl.errors[key]];\n  }\n  constructor(@Optional() @Self() private ngControl: NgControl) {}\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n/**\n * Temporarily duplicate this pipe\n */\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { I18nPipe } from \"./i18n.pipe\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [I18nPipe],\n  exports: [CommonModule, I18nPipe],\n})\nexport class SharedModule {}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + {\"182\":\"2ba110875f11c42217e0\",\"290\":\"4b808542f1096cbfe853\",\"477\":\"e882d21429c04bcbe47c\",\"584\":\"238f402a694e2a33f299\",\"754\":\"82b7ddd26295b0e70a0e\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t148: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_web_vault\"] = self[\"webpackChunk_bitwarden_web_vault\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [734], () => (__webpack_require__(1916)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","inProgress","dataWebpackPrefix","RegisterFormModule","OrganizationCreateModule","OrganizationPermissionsGuard","constructor","router","organizationService","platformUtilsService","i18nService","syncService","canActivate","route","state","this","getLastSync","fullSync","org","get","params","organizationId","createUrlTree","isOwner","enabled","showToast","t","permissionsCallback","data","organizationPermissions","cipherId","root","queryParamMap","queryParams","itemId","id","LooseComponentsModule","ButtonModule","CalloutModule","MenuModule","IconModule","AsyncActionsModule","SharedModule","OrganizationBadgeModule","VaultFilterSharedModule","VaultFilterService","stateService","folderService","cipherService","collectionService","policyService","apiService","super","_collapsedFilterNodes","collapsedFilterNodes$","asObservable","buildCollapsedFilterNodes","nodes","next","storeCollapsedFilterNodes","collapsedFilterNodes","ensureVaultFiltersAreExpanded","has","delete","buildAdminCollections","result","collectionResponse","getCollections","length","collectionDomains","map","r","decryptMany","noneCollection","name","push","nestedCollections","getAllNested","fullList","nestedList","VaultFilterModule","WINDOW","MEMORY_STORAGE","SECURE_STORAGE","STATE_FACTORY","STATE_SERVICE_USE_CACHE","LOGOUT_CALLBACK","LOCKED_CALLBACK","LOCALES_DIRECTORY","SYSTEM_LANGUAGE","LOG_MAC_FAILURES","AbstractEncryptService","AccountApiService","AccountService","AnonymousHubService","AppIdService","AuditService","AuthService","BroadcasterService","ConfigApiServiceAbstraction","CryptoFunctionService","EnvironmentService","FileUploadService","FolderApiServiceAbstraction","FormValidationErrorsService","MessagingService","NotificationsService","OrganizationApiServiceAbstraction","PasswordGenerationService","PasswordRepromptService","PolicyApiServiceAbstraction","ProviderService","SearchService","indexedEntityId","SendService","SettingsService","StateMigrationService","AbstractStorageService","SyncNotifierService","TokenService","TotpService","TwoFactorService","UserVerificationApiServiceAbstraction","UsernameGenerationService","VaultTimeoutService","VaultTimeoutSettingsService","AccountFactory","accountConstructor","create","args","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","createGlobal","createAccount","ServerConfigData","serverConfigResponse","version","gitHash","server","ThirdPartyServerConfigData","utcDate","Date","toISOString","environment","EnvironmentServerConfigData","static","obj","Object","assign","fromJSON","response","url","vault","api","identity","notifications","sso","EnvironmentUrls","base","icons","events","webVault","keyConnector","StateVersion","ThemeType","EncryptionPair","toJSON","encrypted","decrypted","ArrayBuffer","decryptedFromJson","encryptedFromJson","pair","DataEncryptionPair","TemporaryDataEncryption","AccountData","ciphers","folders","sends","collections","policies","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","privateKey","publicKey","cryptoMasterKey","initRecordEncryptionPairsFromJSON","decObj","buffer","record","AccountProfile","environmentUrls","pinProtected","vaultTimeoutAction","serverConfig","AccountTokens","init","keys","profile","settings","tokens","json","WindowState","theme","System","window","stateVersion","One","NotificationType","NotificationResponse","contextId","getResponseProperty","type","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","AuthRequest","AuthRequestResponse","AuthRequestPushNotification","userId","collectionIds","revisionDate","date","DeviceType","environmentService","authService","logService","createHubConnection","token","getNotificationsUrl","anonHubConnection","HubConnectionBuilder","withUrl","skipNegotiation","transport","withHubProtocol","MessagePackHubProtocol","build","start","catch","error","on","ProcessNotification","stopHubConnection","stop","notification","authResponsePushNotifiction","DeviceRequest","appId","getDevice","getDeviceString","identifier","pushToken","TokenRequest","twoFactor","device","alterIdentityTokenHeaders","headers","setTwoFactor","setPasswordlessAccessCode","accessCode","passwordlessAuthRequest","toIdentityToken","clientId","scope","client_id","deviceType","deviceIdentifier","deviceName","authRequest","provider","twoFactorToken","twoFactorProvider","twoFactorRemember","remember","ApiTokenRequest","clientSecret","startsWith","grant_type","client_secret","TokenRequestTwoFactor","ApiKeyResponse","apiKey","AttachmentResponse","fileName","key","size","sizeName","PasswordHistoryResponse","password","lastUsedDate","CipherResponse","folderId","notes","favorite","edit","viewPassword","organizationUseTotp","creationDate","deletedDate","login","card","secureNote","fields","f","attachments","a","passwordHistory","h","reprompt","AttachmentUploadDataResponse","attachmentId","fileUploadType","cipherResponse","cipherMiniResponse","requestDeviceType","requestIpAddress","masterPasswordHash","requestApproved","RegisterResponse","captchaBypassToken","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","BillingTransactionResponse","i","BillingInvoiceResponse","cardBrand","description","needsVerification","pdfUrl","number","paid","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","details","BillingHistoryResponse","hasNoHistory","BillingPaymentResponse","BreachAccountResponse","addedDate","breachDate","dataClasses","domain","isActive","isVerified","logoPath","modifiedDate","pwnCount","title","SelectionReadOnlyResponse","readOnly","hidePasswords","CollectionResponse","externalId","CollectionDetailsResponse","CollectionGroupDetailsResponse","groups","g","DeviceVerificationResponse","isDeviceVerificationSectionEnabled","unknownDeviceVerificationEnabled","GlobalDomainResponse","domains","excluded","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","EmergencyAccessGranteeDetailsResponse","granteeId","email","status","waitTimeDays","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","keyEncrypted","kdf","kdfIterations","EmergencyAccessViewResponse","c","EventResponse","providerId","collectionId","groupId","policyId","organizationUserId","providerUserId","providerOrganizationId","actingUserId","ipAddress","installationId","GroupResponse","accessAll","GroupDetailsResponse","IdentityCaptchaResponse","siteKey","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","resetMasterPassword","forcePasswordReset","apiUseKeyConnector","keyConnectorUrl","IdentityTwoFactorResponse","twoFactorProviders2","Map","captchaToken","twoFactorProviders","prop","hasOwnProperty","set","parseInt","KeyConnectorUserKeyResponse","ListResponse","dr","continuationToken","OrganizationConnectionResponse","configType","rawConfig","config","OrganizationExportResponse","OrganizationSponsorshipSyncStatusResponse","lastSyncDate","OrganizationUserBulkPublicKeyResponse","OrganizationUserBulkResponse","PermissionsApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","manageScim","OrganizationUserResponse","permissions","resetPasswordEnrolled","OrganizationUserUserDetailsResponse","twoFactorEnabled","usesKeyConnector","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","resetPasswordKey","encryptedPrivateKey","ProfileOrganizationResponse","usePolicies","useGroups","useDirectory","useEvents","useTotp","use2fa","useApi","useSso","useKeyConnector","useScim","useResetPassword","selfHost","usersGetPremium","seats","maxCollections","maxStorageGb","hasPublicAndPrivateKeys","ssoBound","providerName","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","keyConnectorEnabled","familySponsorshipLastSyncDateString","familySponsorshipLastSyncDate","familySponsorshipValidUntilString","familySponsorshipValidUntil","familySponsorshipToDelete","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","organizations","providers","providerOrganizations","emailVerified","masterPasswordHint","premiumPersonally","premiumFromOrganization","culture","securityStamp","o","PaymentResponse","userProfile","paymentIntentClientSecret","success","PlanResponse","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","hasTotp","has2fa","hasApi","hasSso","hasResetPassword","upgradeSortOrder","displaySortOrder","legacyYear","disabled","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","PolicyResponse","PreloginResponse","ProviderOrganizationResponse","userCount","plan","ProviderOrganizationOrganizationDetailsResponse","organizationName","ProviderResponse","businessName","billingEmail","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","SendFileApi","SendTextApi","text","hidden","SendAccessResponse","file","expirationDate","creatorIdentifier","SendFileDownloadDataResponse","SendResponse","accessId","maxAccessCount","accessCount","deletionDate","disable","hideEmail","SendFileUploadDataResponse","sendResponse","SsoPreValidateResponse","SubscriptionResponse","storageName","storageGb","license","expiration","usingInAppPurchase","subscription","upcomingInvoice","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","items","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","interval","sponsoredSubscriptionItem","FolderResponse","SyncResponse","p","s","TaxInfoResponse","taxId","taxIdType","line1","line2","city","postalCode","country","TaxRateResponse","rate","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","host","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","code","TwoFactorWebAuthnResponse","k","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","excludeCredentials","extensions","pubKeyCredParams","rp","timeout","user","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","HtmlStorageLocation","cryptoFunctionService","passwordLeaked","hashBytes","hash","toUpperCase","hashStart","substr","hashEnding","nativeFetch","Request","match","split","find","v","breachedAccounts","username","getHibpBreach","e","statusCode","Error","limit","throttleKey","target","propertyKey","descriptor","originalMethod","value","allThrottles","throttles","getThrottles","argsThrottleKey","queue","Promise","resolve","reject","exec","onFinally","splice","indexOf","apply","then","val","err","AuthenticationStatus","KeySuffixOptions","TwoFactorProviderType","AuthenticationType","AuthResult","captchaSiteKey","requiresCaptcha","requiresTwoFactor","KeysRequest","LogInStrategy","cryptoService","tokenService","appIdService","messagingService","twoFactorService","logInTwoFactor","captchaResponse","tokenRequest","startLogIn","clearSelectedProvider","postIdentityToken","processTwoFactorResponse","processCaptchaResponse","processTokenResponse","onSuccessfulLogin","buildDeviceRequest","getAppId","buildTwoFactor","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","Remember","saveAccountInformation","tokenResponse","accountInformation","decodeToken","addAccount","sub","hasPremiumPersonally","premium","kdfType","setTwoFactorToken","setEncKey","setEncPrivateKey","createKeyPairForOldAccount","send","setProviders","makeKeyPair","postAccountKeys","encryptedString","HashPurpose","ApiLogInStrategy","keyConnectorService","getKeyConnectorUrl","getAndSetKey","logIn","credentials","setApiKeyClientId","setApiKeyClientSecret","PasswordTokenRequest","PasswordLogInStrategy","setKey","setKeyHash","localHashedPassword","masterPassword","makePreloginKey","hashPassword","LocalAuthorization","hashedPassword","PasswordlessLogInStrategy","localPasswordHash","decKey","authRequestId","SsoTokenRequest","codeVerifier","redirectUri","code_verifier","redirect_uri","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","orgId","redirectUrl","PreloginRequest","sequentialize","cacheKey","caches","cache","getCache","argsCacheKey","EncArrayBuffer","encryptionType","dataBytes","ivBytes","macBytes","encBytes","Uint8Array","encType","minimumLength","ENC_TYPE_LENGTH","throwDecryptionError","slice","arrayBuffer","b64","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","sort","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","clear","clearTimeout","setTimeout","lastUsedIndex","Math","max","filter","cipher","localData","lastLaunched","x","y","valueOf","getNextIndex","CipherBulkDeleteRequest","ids","CipherBulkMoveRequest","CipherBulkRestoreRequest","CipherWithIdRequest","CipherBulkShareRequest","forEach","CipherCollectionsRequest","CipherCreateRequest","CipherShareRequest","DomainMatchBlacklist","Set","CipherService","settingsService","fileUploadService","searchService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","encrypt","model","originalCipher","existingCipher","decrypt","ph","passwordRevisionDate","hasFields","existingHiddenFields","hiddenFields","ef","matchedField","getOrgKey","all","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","promises","encAttachments","attachment","promise","fieldsModel","self","encFields","reduce","field","encField","encryptField","fieldModel","linkedId","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","getAll","getAllDecrypted","getUserId","decCiphers","hasKey","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","folder","isDeleted","getAllDecryptedForUrl","includeOtherTypes","defaultMatch","eqDomainsPromise","firstValueFrom","settings$","matches","eqDomain","concat","matchingDomains","getDefaultUriMatch","uris","u","uri","domainUrlHost","urlHost","RegExp","test","getAllFromApiForOrganization","getCiphersOrganization","getLastUsedForUrl","autofillOnPageLoad","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","getTime","setLocalData","decryptedCipherCache","cached","updateLastLaunchedDate","saveNeverDomain","getNeverDomains","setNeverDomains","saveWithServer","request","postCipherCreate","postCipher","putCipher","upsert","shareWithServer","attachmentPromises","shareAttachmentWithServer","encCipher","putShareCipher","shareManyWithServer","encCiphers","putShareCiphers","toCipherData","saveAttachmentWithServer","unencryptedFile","admin","reader","FileReader","readAsArrayBuffer","onload","evt","cData","saveAttachmentRawWithServer","onerror","filename","encFileName","dataEncKey","makeEncKey","encData","encryptToBytes","fileSize","byteLength","adminRequest","uploadDataResponse","postCipherAttachment","uploadCipherAttachment","getSingleMessage","legacyServerAttachmentFileUpload","fd","FormData","blob","Blob","append","Buffer","from","filepath","contentType","postCipherAttachmentAdminLegacy","postCipherAttachmentLegacy","saveCollectionsWithServer","putCipherCollections","replace","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","putMoveCiphers","deleteWithServer","deleteCipher","deleteManyWithServer","deleteManyCiphers","deleteAttachment","deleteAttachmentWithServer","deleteCipherAttachment","b","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","collator","compare","localeCompare","softDelete","setDeletedDate","softDeleteWithServer","putDeleteCipher","softDeleteManyWithServer","putDeleteManyCiphers","restore","clearDeletedDate","Array","restoreWithServer","putRestoreCipher","restoreManyWithServer","putRestoreManyCiphers","restores","attachmentView","attachmentResponse","toString","encBuf","fromResponse","decBuf","decryptFromBytes","postShareCipherAttachment","theProp","theObj","modelProp","totp","loginUri","cardholderName","brand","expMonth","expYear","firstName","middleName","lastName","address1","address2","address3","company","phone","ssn","passportNumber","licenseNumber","lastUsed","autofillOnPageLoadDefault","getAutoFillOnPageLoadDefault","clearSortedCiphers","ServerConfigResponse","ThirdPartyServerConfigResponse","EnvironmentServerConfigResponse","ServerConfig","serverConfigData","getAgeInMilliseconds","isValid","expiresSoon","EEFLongWordList","BaseEncryptedOrganizationKey","EncryptedOrganizationKey","ProviderEncryptedOrganizationKey","decValue","rsaDecrypt","toData","providerKey","getProviderKey","decryptToBytes","CryptoService","encryptService","platformUtilService","setCryptoMasterKey","storeKey","keyHash","encKey","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","orgs","providerOrgs","encOrgKeyData","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","getKey","keySuffix","inMemoryKey","getCryptoMasterKey","Auto","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","warning","clearSecretKeyStore","getKeyHash","compareAndUpdateKeyHash","storedKeyHash","localKeyHash","serverKeyHash","ServerAuthorization","getEncKey","getEncKeyHelper","getPublicKey","inMemoryPublicKey","getPrivateKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","getFingerprint","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","getOrgKeys","decryptedOrganizationKeys","getDecryptedOrganizationKeys","getEncryptedOrganizationKeys","encOrgKey","fromData","decOrgKey","orgKeys","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","hasKeyInMemory","hasKeyStored","Biometric","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","hasEncKey","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearPinProtectedKey","setEncryptedPinProtected","clearKeys","toggleKey","makeKey","salt","pbkdf2","makeKeyFromPin","pin","protectedKeyCs","pinProtectedKey","getEncryptedPinProtected","pinKey","makePinKey","makeShareKey","shareKey","randomBytes","rsaEncrypt","keyPair","rsaGenerateKeyPair","stretchKey","makeSendKey","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","getKeyForUserEncryption","buildEncKey","remakeEncKey","plainValue","encValue","privateKeyValue","headerPieces","encPieces","alg","encString","keyForEnc","decryptToUtf8","encBuffer","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","keyB64","getVaultTimeout","getBiometricUnlock","supportsSecureStorage","getCryptoMasterKeyBiometric","newKey","macKey","minimumEntropy","entropyPerWord","log","numWords","hashArr","phrase","hashNumber","remainder","mod","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","symmetricCryptoKey","EncryptedObject","EventData","EventRequest","EventExport","event","message","humanReadableMessage","appIcon","appName","userName","userEmail","ip","FileUploadType","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","Headers","toUTCString","searchParams","body","method","blobResponse","fetch","baseUrl","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","expiry","isNaN","setTime","now","utfBlockId","blockIdList","xml","Version","year","month","day","parts","Number","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","apiCall","FolderData","OrganizationUserType","SetKeyConnectorKeyRequest","orgIdentifier","KeyConnectorUserKeyRequest","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","SsoConfigApi","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","view","OpenIdConnect","openId","Saml2","saml","idpAllowOutboundLogoutRequests","OrganizationSsoResponse","urls","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","OrganizationApiKeyInformationResponse","keyType","OrganizationAutoEnrollStatusResponse","resetPasswordEnabled","KeysResponse","OrganizationKeysResponse","OrganizationResponse","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","planType","maxAutoscaleSeats","OrganizationSubscriptionResponse","OrganizationUserStatusType","OrganizationData","Organization","isProviderUser","canAccess","Owner","Confirmed","isManager","Manager","Admin","isAdmin","canAccessEventLogs","canAccessImportExport","canAccessReports","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","canViewAllCollections","canEditAssignedCollections","canDeleteAssignedCollections","canViewAssignedCollections","canManageGroups","canManageSso","canManageScim","canManagePolicies","canManageUsers","canManageUsersPassword","isExemptFromPolicies","canManageBilling","hasProvider","isSuccessfullyCompleted","syncEvent","successfully","GeneratedPasswordHistory","PasswordGeneratorPolicyOptions","defaultType","minLength","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","capitalize","includeNumber","inEffect","DefaultOptions","ambiguous","minNumber","uppercase","minUppercase","lowercase","minLowercase","special","minSpecial","wordSeparator","PolicyData","Policy","ResetPasswordPolicyOptions","autoEnrollEnabled","ProviderUserStatusType","ProviderUserType","Provider","isProviderAdmin","canCreateOrganizations","ProviderAdmin","SendType","indexing","index","immediateSearchLocales","defaultSearchableMinLength","searchableMinLength","locale$","subscribe","locale","registeredPipeline","lunr","Pipeline","registerFunction","normalizeAccentsPipelineFunction","isSearchable","query","normalizeSearchQuery","builder","Builder","pipeline","add","ref","boost","extractor","subTitle","uriExtractor","fieldExtractor","attachmentExtractor","info","searchCiphers","results","trim","toLowerCase","isArray","every","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","search","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","deleted","hasUris","some","searchSends","toLocaleLowerCase","sendsMatched","lowPriorityMatched","joined","join","hasAttachments","lastIndexOf","hostname","protocolIndex","queryIndex","substring","searchableFields","metadata","includes","normalize","SendFileData","SendTextData","SendData","Text","File","SendFileView","SendTextView","maskedText","SendView","urlB64Key","maxAccessCountReached","expired","pendingDelete","SendFile","buildDomainModel","decryptObj","SendText","Send","getCryptoService","cryptoKey","SendRequest","fileLength","StorageLocation","ProviderData","State","globals","accounts","authenticatedAccounts","accountActivity","buildAccountMapFromJSON","jsonAccounts","partialKeys","DDG_SHARED_KEY","storageService","secureStorageService","memoryStorageService","stateMigrationService","stateFactory","useAccountCache","BehaviorSubject","activeAccountSubject","activeAccount$","activeAccountUnlockedSubject","activeAccountUnlocked$","hasBeenInited","isRecoveredSession","accountDiskCache","pipe","concatMap","getValue","needsMigration","migrate","setState","createGlobals","initAccountState","updateState","syncAccountFromDisk","storedActiveUser","activeUserId","pushAccounts","diskAccount","getAccountFromDisk","account","setAccountEnvironmentUrls","save","scaffoldNewAccountStorage","setLastActive","setActiveUser","clearDecryptedDataForActiveUser","clean","options","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getAccessToken","getTimeoutBasedStorageOptions","getAccount","setAccessToken","saveAccount","getAddEditCipherInfo","addEditCipherInfo","setAddEditCipherInfo","getAlwaysShowDock","getGlobals","defaultOnDiskOptions","alwaysShowDock","setAlwaysShowDock","saveGlobals","getApiKeyClientId","apiKeyClientId","getApiKeyClientSecret","apiKeyClientSecret","getAutoConfirmFingerPrints","autoConfirmFingerPrints","setAutoConfirmFingerprints","autoFillOnPageLoadDefault","setAutoFillOnPageLoadDefault","getBiometricAwaitingAcceptance","biometricAwaitingAcceptance","setBiometricAwaitingAcceptance","getBiometricFingerprintValidated","biometricFingerprintValidated","setBiometricFingerprintValidated","getBiometricText","biometricText","setBiometricText","biometricUnlock","setBiometricUnlock","getCanAccessPremium","getIsAuthenticated","getHasPremiumPersonally","getHasPremiumFromOrganization","setHasPremiumPersonally","hasPremiumFromOrganization","getOrganizations","setHasPremiumFromOrganization","getClearClipboard","defaultOnDiskLocalOptions","clearClipboard","setClearClipboard","getCollapsedGroupings","collapsedGroupings","setCollapsedGroupings","getConvertAccountToKeyConnector","convertAccountToKeyConnector","setConvertAccountToKeyConnector","nextValue","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","getDecryptedCollections","setDecryptedCollections","recordToMap","mapToRecord","getDecryptedPasswordGenerationHistory","setDecryptedPasswordGenerationHistory","getDecryptedPinProtected","setDecryptedPinProtected","getDecryptedPolicies","setDecryptedPolicies","getDecryptedSends","setDecryptedSends","defaultUriMatch","setDefaultUriMatch","getDisableAddLoginNotification","disableAddLoginNotification","setDisableAddLoginNotification","getDisableAutoBiometricsPrompt","disableAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","getDisableAutoTotpCopy","disableAutoTotpCopy","setDisableAutoTotpCopy","getDisableBadgeCounter","disableBadgeCounter","setDisableBadgeCounter","getDisableChangedPasswordNotification","disableChangedPasswordNotification","setDisableChangedPasswordNotification","getDisableContextMenuItem","disableContextMenuItem","setDisableContextMenuItem","getDisableFavicon","disableFavicon","setDisableFavicon","getDisableGa","disableGa","setDisableGa","getDontShowCardsCurrentTab","dontShowCardsCurrentTab","setDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","dontShowIdentitiesCurrentTab","setDontShowIdentitiesCurrentTab","getDuckDuckGoSharedKey","setDuckDuckGoSharedKey","remove","getEmail","setEmail","getEmailVerified","setEmailVerified","getEnableAlwaysOnTop","accountPreference","enableAlwaysOnTop","globalPreference","setEnableAlwaysOnTop","getEnableAutoFillOnPageLoad","enableAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","enableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","enableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","enableCloseToTray","setEnableCloseToTray","getEnableDuckDuckGoBrowserIntegration","enableDuckDuckGoBrowserIntegration","setEnableDuckDuckGoBrowserIntegration","getEnableFullWidth","enableFullWidth","setEnableFullWidth","getEnableGravitars","enableGravitars","setEnableGravitars","getEnableMinimizeToTray","enableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","enableStartToTray","setEnableStartToTray","getEnableTray","enableTray","setEnableTray","defaultOnDiskMemoryOptions","getEncryptedCollections","setEncryptedCollections","getEncryptedFolders","setEncryptedFolders","getEncryptedPasswordGenerationHistory","setEncryptedPasswordGenerationHistory","getEncryptedPolicies","setEncryptedPolicies","getEncryptedSends","setEncryptedSends","getEntityId","entityId","setEntityId","getEntityType","entityType","setEntityType","getEnvironmentUrls","getGlobalEnvironmentUrls","setEnvironmentUrls","getEquivalentDomains","setEquivalentDomains","getEventCollection","eventCollection","setEventCollection","getEverBeenUnlocked","everBeenUnlocked","setEverBeenUnlocked","getForcePasswordReset","setForcePasswordReset","getInstalledVersion","installedVersion","setInstalledVersion","getKdfIterations","setKdfIterations","getKdfType","setKdfType","getLastActive","lastSync","setLastSync","getLocale","setLocale","getMainWindowSize","mainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","minimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","neverDomains","getNoAutoPromptBiometrics","noAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","noAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","openAtLogin","setOpenAtLogin","getOrganizationInvitation","organizationInvitation","setOrganizationInvitation","setOrganizations","getPasswordGenerationOptions","passwordGenerationOptions","setPasswordGenerationOptions","getUsernameGenerationOptions","usernameGenerationOptions","setUsernameGenerationOptions","getGeneratorOptions","generatorOptions","setGeneratorOptions","getProtectedPin","protectedPin","setProtectedPin","getProviders","getRefreshToken","setRefreshToken","getRememberedEmail","rememberedEmail","setRememberedEmail","getSecurityStamp","setSecurityStamp","getSettings","setSettings","getSsoCodeVerifier","ssoCodeVerifier","setSsoCodeVerifier","getSsoOrgIdentifier","ssoOrganizationIdentifier","setSsoOrganizationIdentifier","getSsoState","ssoState","setSsoState","getTheme","setTheme","getUsesKeyConnector","setUsesKeyConnector","vaultTimeout","setVaultTimeout","getVaultTimeoutAction","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","setServerConfig","getServerConfig","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","htmlStorageLocation","Local","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deepClone","JSON","parse","stringify","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","deserializer","stateUpdater","updatedState","fromEntries","entries","withPrototypeForArrayMembers","memberConstructor","memberConverter","originalResult","String","prototype","getOwnPropertyDescriptors","withPrototypeForObjectValues","valuesConstructor","valuesConverter","decoded","setTokens","clientIdClientSecret","setToken","setClientId","setClientSecret","getClientId","getClientSecret","getToken","clearTwoFactorToken","clearToken","getTokenExpirationDate","exp","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","round","tokenNeedsRefresh","minutes","email_verified","getName","getIssuer","iss","getIsExternal","amr","v1Keys","autoConfirmFingerprints","enableBiometric","enableGravatars","encOrgKeys","encPrivate","history","lastActive","ssoIdentifier","stamp","usesConnector","v1KeyPrefixes","currentStateVersion","getCurrentStateVersion","Latest","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","Four","getAuthenticatedAccounts","migratedAccount","migrateAccountFrom4To5","setCurrentStateVersion","Five","migrateAccountFrom5To6","Six","clearV1Keys","clearingUserId","keyPrefix","defaultAccount","accountSettings","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","legacyEtmKey","authenticationStatus","decodedToken","authenticatedUserIds","encryptedOrgKeys","newVersion","SyncService","sendService","providerService","folderApiService","syncNotifierService","logoutCallback","syncInProgress","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","refreshIdentityToken","getSync","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","syncUpsertFolder","isEdit","localFolder","remoteFolder","syncDeleteFolder","syncUpsertCipher","shouldUpdate","localCipher","checkCollections","remoteCipher","getFullCipherDetails","syncDeleteCipher","syncUpsertSend","localSend","remoteSend","getSend","sendId","syncDeleteSend","getAccountRevisionDate","userNeedsMigration","setConvertAccountRequired","removeConvertAccountRequired","eqDomains","global","B32Chars","SteamChars","TwoFactorProviders","Authenticator","priority","Yubikey","Duo","OrganizationDuo","Email","WebAuthn","VerifyOTPRequest","OTP","SecretVerificationRequest","AnonAddyForwarder","generate","anonaddy","requestInit","redirect","Authorization","website","DuckDuckGoForwarder","address","FastmailForwarder","accountId","getAccountId","using","methodCalls","emailPrefix","fastmail","prefix","methodResponses","created","notCreated","primaryAccounts","FirefoxRelayForwarder","generated_for","full_address","ForwarderOptions","FastmailForwarderOptions","AnonAddyForwarderOptions","SimpleLoginForwarder","Authentication","note","alias","wordCapitalize","wordIncludeNumber","subaddressType","catchallType","forwardedService","forwardedAnonAddyDomain","DecryptParameters","AuthGuard","routerState","authStatus","getAuthStatus","LoggedOut","Locked","promptBiometric","getConvertAccountRequired","LockGuard","homepage","loginpage","UnauthGuard","subscribers","messageCallback","unsubscribe","modalRef","showPassword","togglePassword","submit","close","modalService","component","protectedFields","showPasswordPrompt","open","allowMultipleModals","onClosedPromise","ThemeBuilder","configuredTheme","systemTheme","effectiveTheme","updateSystemTheme","updateConfiguredTheme","ThemingService","document","_theme","theme$","monitorThemeChanges","getSystemTheme","monitorConfiguredThemeChanges","monitorSystemThemeChanges","documentElement","classList","Light","Dark","Nord","SolarizedDark","matchMedia","fromEvent","AbstractThemingService","JslibServicesModule","provide","useValue","useFactory","translationLocale","deps","navigator","language","useClass","makeAndGetAppId","getAnonymousAppId","existingId","guid","pushNotificationSubject","Subject","logInStrategy","strategy","clearState","saveState","logOut","callback","authingWithApiKey","authingWithSso","authingWithPassword","Unlocked","preloginResponse","postPrelogin","getPushNotifcationObs$","startSessionTimeout","clearSessionTimeout","sessionTimeout","P","injector","_folders","_folderViews","folders$","folderViews$","unlocked","updateObservables","getAllDecryptedFromState","values","decryptFolders","updates","cId","foldersMap","decryptFolderPromises","decryptedFolders","noneFolder","useExisting","postFolder","putFolder","deleteFolder","deleteAccount","accountApiService","userVerificationService","verification","verificationRequest","buildRequest","collection","decCollections","decryptedCollections","collectionCopy","getNested","urlsSubject","scimUrl","setUrlsFromStorage","hasBaseUrl","notificationsUrl","getWebVaultUrl","webVaultUrl","getSendUrl","getIconsUrl","iconsUrl","getApiUrl","apiUrl","getIdentityUrl","identityUrl","getEventsUrl","eventsUrl","getScimUrl","envUrls","setUrls","formatUrl","scim","getUrls","isCloud","getCode","period","digits","keyB32","isOtpAuth","isSteamAuth","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","floor","timeBytes","keyBytes","b32ToBytes","sign","offset","binary","otp","fullCode","trunc","getTimeInterval","l","b32ToHex","cleanedInput","bits","hex","byteIndex","charAt","chunk","signature","hmac","generatePassword","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","enforcedPolicyOptions","getPasswordGeneratorPolicyOptions","policies$","policy","currentPolicy","useUpper","useLower","minNumbers","saveOptions","getHistory","decryptHistory","addHistory","currentHistory","matchesPrevious","unshift","pop","newHistory","encryptHistory","passwordStrength","userInputs","globalUserInputs","finalUserInputs","normalizeOptions","str","num","item","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","generateUsername","generateCatchall","generateSubaddress","generateForwarded","generateWord","word","zeroPad","subaddressEmail","atIndex","emailBeginning","emailEnding","subaddressString","randomString","catchallDomain","startString","forwarder","forwarderOptions","forwardedSimpleLoginApiKey","forwardedAnonAddyApiToken","forwardedFirefoxApiToken","forwardedFastmailApiToken","forwardedDuckDuckGoToken","charSet","width","customUserAgent","isWebClient","isDesktopClient","IEBrowser","ChromeBrowser","EdgeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","UnknownBrowser","VivaldiBrowser","WindowsDesktop","MacOsDesktop","LinuxDesktop","Accept","identityToken","getClientType","qsStringify","getCredentials","responseJson","isJsonResponse","TwoFactorProviders2","HCaptcha_SiteKey","doAuthRefresh","postAuthRequest","getAuthResponse","path","getProfile","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","isDev","postEmailToken","postEmail","postPassword","setPassword","postSetKeyConnectorKey","postSecurityStamp","postPasswordHint","postRegister","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountVerifyPassword","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","getSsoUserIdentifier","postUserApiKey","postUserRotateApiKey","putUpdateTempPassword","postConvertToKeyConnector","getUserBillingHistory","getUserBillingPayment","postSendAccess","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCipherAdmin","postCipherAdmin","putCipherAdmin","deleteCipherAdmin","deleteManyCiphersAdmin","putCipherCollectionsAdmin","postPurgeCiphers","postImportCiphers","postImportOrganizationCiphers","putDeleteCipherAdmin","putDeleteManyCiphersAdmin","putRestoreCipherAdmin","getAttachmentData","emergencyAccessId","deleteCipherAttachmentAdmin","renewAttachmentUploadUrl","postAttachmentFile","getCollectionDetails","getUserCollections","getCollectionUsers","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteCollectionUser","getGroupDetails","getGroups","getGroupUsers","postGroup","putGroup","putGroupUsers","deleteGroup","deleteGroupUser","getOrganizationUser","getOrganizationUserGroups","getOrganizationUsers","getOrganizationUserResetPasswordDetails","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPasswordEnrollment","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","revokeOrganizationUser","revokeManyOrganizationUsers","restoreOrganizationUser","restoreManyOrganizationUsers","getPlans","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","btoa","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","postTwoFactorEmail","getDeviceVerificationSettings","putDeviceVerificationSettings","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getCloudCommunicationsEnabled","getOrganizationConnection","createOrganizationConnection","updateOrganizationConnection","organizationConnectionId","deleteOrganizationConnection","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","postProviderCreateOrganization","deleteProviderOrganization","getEvents","end","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProvider","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","getUserPublicKey","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getOrganizationExport","getApplicationVersion","preValidateSso","encodeURIComponent","postCreateSponsorship","sponsoredOrgId","isSelfHost","getSponsorshipSyncStatus","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","doRefreshToken","doApiTokenRefresh","deviceRequest","authed","hasResponse","alterHeaders","requestUrl","URL","href","responseType","responseIsJson","tokenError","isTextResponse","Message","typeHeader","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","_settings","setVaultTimeoutOptions","action","currentAction","isPinLockSet","isBiometricLockSet","policyAppliesToUser","vaultTimeoutSettingsService","lockedCallback","loggedOutCallback","inited","checkOnInterval","startCheck","checkVaultTimeout","setInterval","isViewOpen","shouldLock","executeTimeoutAction","lock","pinSet","vaultTimeoutSeconds","getExport","format","getEncryptedExport","getDecryptedExport","getPasswordProtectedExport","clearText","encKeyValidation","encText","jsonDoc","passwordProtected","encKeyValidation_DO_NOT_EDIT","getOrganizationEncryptedExport","getOrganizationDecryptedExport","getEventExport","getFileName","extension","getFullYear","padNumber","getMonth","getDate","getHours","getMinutes","getSeconds","decFolders","exportCiphers","buildCommonCipher","exportData","exportPromises","decCol","decCipher","collectionsMap","orgKey","padCharacter","numString","login_uri","login_username","login_password","login_totp","connected","inactive","reconnectTimer","signalrConnection","off","accessTokenFactory","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","sync","reconnectFromActivity","disconnectFromInactivity","isAuthenticated","payloadUserId","UserId","myUserId","random","win","crypto","subtle","algorithm","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","n","okm","md","valueBytes","toByteString","update","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","hmacFast","bytes","getBytes","compareFast","rand","Uint32Array","putInt32","aesEncrypt","iv","aesDecryptFastParameters","mac","meta","encKeyByteString","macKeyByteString","encKeyB64","macData","macKeyB64","aesDecryptFast","parameters","dataBuffer","decipher","finish","output","aesDecrypt","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","arr","getRandomValues","buf","logMacFailures","plainBuf","encObj","macLen","resolveLegacyKey","fastParams","computedMac","logMacFailed","encThing","msg","uploadEvents","collect","eventType","uploadImmediately","orgIds","req","clearEvents","_policies","decryptedPolicies","diskPolicies","call","masterPasswordPolicyOptions$","of","obsPolicies","filteredPolicies","minComplexity","requireUpper","requireLower","requireNumbers","requireSpecial","policyAppliesToActiveUser$","policyType","policyFilter","checkPoliciesThatApplyToUser","evaluateMasterPassword","newPassword","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","mapPoliciesFromToken","policiesResponse","isExcemptFromPolicies","organization","policiesMap","policySet","Accepted","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","getMasterPasswordPoliciesForInvitedUsers","putPolicy","fileData","passwordHash","encryptFileData","parseFile","decSends","sendData","legacyServerSendFileUpload","removePasswordWithServer","loggedInUsingSso","requiredByOrganization","getManagingOrganization","userIsNotUsingKeyConnector","migrateUser","keyConnectorRequest","handleKeyConnectorError","userKeyResponse","keyArr","pubKey","privKey","setPasswordRequest","userVerificationApiService","requestClass","alreadyHashed","validateInput","secret","verifyUser","postAccountVerifyOTP","requestOTP","postAccountRequestOTP","_organizations","organizations$","sync$","updateStateAndObservables","organizationsMap","canManageSponsorships","hasOrganizations","getByIdentifier","selectedTwoFactorProviderType","getSupportedProviders","twoFactorProvidersData","supportsDuo","supportsWebAuthn","getDefaultProvider","webAuthnSupported","providerType","providerPriority","_value","setSelectedProvider","clearProviders","getFormValidationErrors","controls","errors","control","controlErrors","keyError","controlName","errorName","getBilling","getSubscription","getLicense","getAutoEnrollStatus","createLicense","updatePayment","upgrade","updateSubscription","updateSeats","updateStorage","verifyBank","cancel","reinstate","leave","updateLicense","importDirectory","getOrCreateApiKey","getApiKeyInformation","organizationApiKeyType","rotateApiKey","updateTaxInfo","getKeys","updateKeys","getSso","updateSso","_sync","configApiService","_serverConfig","serverConfig$","switchMap","timer","E","buildServerConfig","fetchServerConfig","showError","defaultErrorMessage","validationErrors","getAllMessages","MemoryStorageService","store","BroadcasterMessagingService","broadcasterService","subscriber","arg","command","destroy$","ngOnInit","takeUntil","ngOnDestroy","complete","getDefaultDateFilters","setDate","toDateTimeLocalString","formatDateFilters","filterStart","filterEnd","getEventInfo","ev","EventOptions","appInfo","getAppInfo","getEventMessage","humanReadableMsg","formatCipherId","getShortId","formatCollectionId","formatGroupId","formatOrgUserId","formatPolicyId","p1","formatProviderUserId","formatProviderOrganizationId","Android","iOS","UWP","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","shortId","cipherInfo","makeAnchor","setAttribute","outerHTML","createElement","innerHTML","pad","norm","abs","HtmlStorageService","localStorage","getItem","sessionStorage","setItem","removeItem","ContainerService","attachToGlobal","bitwardenContainerService","getEncryptService","InitService","notificationsService","vaultTimeoutService","eventLoggingService","themingService","location","origin","ModalService","componentFactoryResolver","applicationRef","el","modalOpen","setupHandlers","onCreated","first","modals","querySelectorAll","modal","show","shown","focus","closed","onClose","PasswordRepromptComponent","PolicyListService","addPolicies","RouterService","activatedRoute","titleService","previousUrl","undefined","currentUrl","child","firstChild","titleId","snapshot","rawTitle","updateUrl","doNotSaveUrl","newTitle","setTitle","setPreviousUrl","getPreviousUrl","AccountSettings","Account","StateService","getRememberEmail","rememberEmail","setRememberEmail","FileDownloadBuilder","_request","blobOptions","fileType","blobData","downloadMethod","fileNameLower","endsWith","WebFileDownloadService","download","isSafari","createObjectURL","style","position","appendChild","click","removeChild","ClientType","WebPlatformUtilsService","browserCache","userAgent","chrome","Web","isFirefox","isChrome","isEdge","isOpera","isVivaldi","isMacAppStore","launchUri","sameWindow","rel","PublicKeyCredential","showDialog","confirmText","cancelText","bodyIsHtml","iconClasses","bootstrapModal","querySelector","removeAttribute","iconHtmlStr","confirmed","heightAuto","buttonsStyling","icon","iconHtml","html","titleText","showCancelButton","cancelButtonText","showConfirmButton","confirmButtonText","copyToClipboard","doc","clipboardData","setData","queryCommandSupported","textarea","textContent","copyEl","contains","select","execCommand","debug","console","warn","readFromClipboard","supportsBiometric","authenticateBiometric","CoreModule","parentModule","initService","multi","systemLanguage","localesDirectory","getLocalesJson","_locale","ReplaySubject","supportedTranslationLocales","localeNames","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","p2","p3","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","filePath","localesResult","migrationStateFrom1To2","getFlags","envFlags","flag","flags","EmergencyAccessAcceptRequest","BaseAcceptComponent","loading","requiredParameters","failedShortMessage","failedMessage","qParams","errorMessage","authedHandler","unauthedHandler","navigate","AcceptEmergencyComponent","actionPromise","OrganizationUserAcceptRequest","AcceptOrganizationComponent","policyApiService","organizationApiService","prepareAcceptRequest","orgName","performResetPasswordAutoEnroll","encryptedKey","policyList","PasswordHintRequest","HintComponent","successRoute","formPromise","onSuccessfulSubmit","ngZone","pinLock","webVaultHostname","invalidPinAttempts","load","handlePinRequiredUnlock","handleMasterPasswordRequiredUnlock","unlockBiometric","biometricLock","doContinue","input","getElementById","isStable","onStable","take","doUnlockWithPin","failed","setKeyAndContinue","doUnlockWithMasterPassword","passwordValid","decPin","hideInput","vaultUrl","LockComponent","routerService","navigateByUrl","CaptchaIFrame","iframeId","successCallback","errorCallback","infoCallback","parseFunction","parseMessage","bind","connectorLink","sendMessage","iframe","src","contentWindow","postMessage","base64Encode","fromCharCode","cleanup","removeEventListener","createParams","URLSearchParams","parent","initComponent","addEventListener","validMessage","parsedMessage","height","AuthRequestType","CaptchaProtectedComponent","setupCaptcha","captcha","showCaptcha","handleCaptchaRequired","PasswordLogInCredentials","SsoLogInCredentials","PasswordlessLogInCredentials","PasswordlessCreateAuthRequest","fingerprintPhrase","startPasswordlessLogin","LoginWithDeviceComponent","passwordGenerationService","anonymousHubService","showResendNotification","twoFactorRoute","forcePasswordResetRoute","navigation","getCurrentNavigation","extras","confirmResponse","buildAuthRequest","reqResponse","passwordlessRequest","requestId","buildLoginCredntials","loginResponse","onSuccessfulLoginTwoFactorNavigate","onSuccessfulLoginForceResetNavigate","onSuccessfulLoginNavigate","authRequestKeyPair","fingerprint","AuthenticateAndUnlock","decMasterPasswordHash","formBuilder","formValidationErrorService","selfHosted","formGroup","group","alwaysRememberEmail","selfHostedDomain","setValue","markAllAsTouched","invalid","errorText","getErrorToastMessage","launchSsoBrowser","ssoRedirectUri","passwordOptions","numbers","codeVerifierHash","codeChallenge","webUrl","shift","errorTag","focusInput","defaultIcon","danger","defaultI18n","CalloutComponent","useAlertRole","calloutClass","headerClass","LoginComponent","showResetPasswordAutoEnrollWarning","showPasswordless","goAfterLogIn","invite","resetPasswordPolicy","enforcedPasswordPolicyOptions","strengthResult","getPasswordStrengthUserInput","masterPasswordScore","score","policiesData","clearValidators","updateValueAndValidity","valid","userInput","atPosition","DeleteRecoverRequest","RecoverDeleteComponent","TwoFactorRecoveryRequest","RecoverTwoFactorComponent","recoveryCode","RegisterRequest","referenceData","InputsFieldMatch","matchTo","inputsMatchError","inputsDoesntMatchError","fieldMatchTo","fieldCtrl","fieldMatchToCtrl","setErrors","isInTrialFlow","createdAccount","showTerms","showErrorSummary","confirmMasterPassword","hint","validateInputsDoesntMatch","acceptPolicies","acceptPoliciesValidation","validator","validateFormInputsMatch","accountCreated","registerResponse","registerAccount","buildRegisterRequest","successful","captchaRequired","emit","getStrengthResult","passwordStrengthResult","getPasswordScoreText","color","required","validateRegistration","hasError","orgInvite","ReferenceEventRequest","PasswordStrengthComponent","showText","passwordScoreColor","scoreWidth","updatePasswordStrength","masterPasswordScoreColor","masterPasswordScoreText","ngOnChanges","masterPasswordStrengthTimeout","setPasswordScoreText","BitErrorSummary","errorCount","getErrorCount","errorString","form","acc","RegisterFormComponent","referenceDataValue","queryParamEmail","RegisterComponent","showCreateOrgMessage","layout","flow","reference","cookie","continuing","leaving","convert","RemovePasswordComponent","OrganizationUserResetPasswordEnrollmentRequest","SetPasswordRequest","strongPassword","setupSubmitActions","performSubmitActions","masterPasswordRetype","syncLoading","resetPasswordAutoEnroll","onSetPasswordSuccess","userEncKey","resetRequest","onSuccessfulChangePassword","confirmField","SetPasswordComponent","loggingIn","changePasswordRoute","checkState","getOrgIdentifierFromState","returnUri","includeUserIdentifier","initiateSsoFormPromise","authorizeUrl","buildAuthorizeUrl","userIdentifier","orgIdFromState","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","PlanType","ProductType","SsoComponent","storedIdentifier","VerticalStep","subLabel","applyBorder","VerticalStepContentComponent","onSelectStep","selected","selectStep","selectStepByIndex","VerticalStepperComponent","activeClass","isNextButtonHidden","steps","selectedIndex","isStepDisabled","_","completed","changedBusinessOwned","OrganizationInformationComponent","nameOnly","createOrganization","isProvider","acceptingSponsorship","LogoForbesComponent","LogoUSNewsComponent","EnterpriseContentComponent","TeamsContentComponent","ConfirmationDetailsComponent","PaymentMethodType","OrganizationCreateRequest","OrganizationKeysRequest","OrganizationUpgradeRequest","ProviderOrganizationCreateRequest","clientOwnerEmail","organizationCreateRequest","changeMethod","bank","lightInputColor","lightInputPlaceholderColor","darkInputColor","darkInputPlaceholderColor","PaymentComponent","showMethods","showOptions","Card","hideBank","hidePaypal","hideCredit","trialFlow","routing_number","account_number","account_holder_name","account_holder_type","currency","btInstance","stripe","stripeElements","stripeCardNumberElement","stripeCardExpiryElement","stripeCardCvcElement","stripeScript","async","Stripe","elements","setStripeElement","btScript","StripeElementStyle","fontFamily","fontSize","fontSmoothing","StripeElementClasses","empty","PayPal","BankAccount","Credit","head","btStylesheet","braintree","dropin","authorization","container","paymentOptionPriority","paypal","buttonStyle","label","shape","tagline","createErr","instance","createPaymentToken","requestPaymentMethod","nonce","handleCardSetup","setupIntent","payment_method","createToken","handleStripeCardPayment","handleCardPayment","paymentIntent","classes","placeholder","mount","TaxInfoUpdateRequest","OrganizationTaxInfoUpdateRequest","taxInfo","TaxInfoComponent","onCountryChanged","includeTaxId","pristine","taxRates","taxRate","localTaxRate","getTaxInfoRequest","submitTaxInfo","hasChanged","changeCountry","changedProduct","changedCountry","changedOwnedBusiness","OrganizationPlansComponent","showFree","showCancel","Free","onSuccess","onCanceled","onTrialBillingSuccess","productTypes","singleOrgPolicyBlock","discount","businessOwned","premiumAccessAddon","additionalStorage","additionalSeats","plans","Enterprise","Teams","Families","addValidators","policyAppliesToActiveUser","selectedPlan","selectedPlanInterval","selectableProducts","validPlans","Custom","familyPlan","FamiliesAnnually","selectablePlans","additionalStoragePriceMonthly","seatPriceMonthly","additionalStorageTotal","seatTotal","subtotal","subTotal","freeTrial","taxCharges","taxComponent","total","paymentDesc","TeamsAnnually","paymentComponent","doSubmit","collectionCt","createSelfHosted","createCloudHosted","updateOrganization","subLabelText","billingSubLabelText","additionalStorageGb","billingAddressCountry","billingAddressPostalCode","orgShareKey","collectionName","tokenResult","paymentToken","taxIdNumber","billingAddressLine1","billingAddressLine2","billingAddressCity","billingAddressState","providerRequest","files","price","BillingComponent","previousStep","patchValue","orgInfoForm","stepBack","DefaultContentComponent","Enterprise1ContentComponent","Enterprise2ContentComponent","Teams1ContentComponent","Teams2ContentComponent","LogoCnetComponent","CnetEnterpriseContentComponent","CnetIndividualContentComponent","CnetTeamsContentComponent","AbmEnterpriseContentComponent","AbmTeamsContentComponent","billingSuccess","stepSelectionChange","navigateToOrgVault","navigateToOrgInvite","TrialInitiationComponent","titleCasePipe","orgInfoSubLabel","orgLabel","billingSubLabel","accountCreateOnly","validOrgs","orgInfoFormGroup","referenceDataId","referenceId","setupFamilySponsorship","transform","EnterpriseAnnually","previouslySelectedIndex","verticalStepper","previous","WebAuthnIFrame","webAuthnNewTab","btnText","allow","TwoFactorEmailRequest","webAuthnReady","selectedProviderType","webAuthn","twoFactorEmail","loginRoute","webAuthnAllow","authing","needsLock","cleanupWebAuthn","providerData","authWebAuthn","Host","sig_request","Signature","submit_callback","sig","sendEmail","doToast","emailPromise","Window","onProviderSelected","onRecoverSelected","choose","recover","TwoFactorOptionsComponent","TwoFactorComponent","anotherMethod","openViewRef","twoFactorOptionsModal","comp","PasswordRequest","currentMasterPassword","newMasterPasswordHash","UpdatePasswordComponent","OrganizationUserResetPasswordRequest","UpdateTempPasswordRequest","newPasswordHash","newEncKey","UpdateTempPasswordComponent","VerifyEmailRequest","VerifyEmailTokenComponent","VerifyDeleteRecoverRequest","VerifyRecoverDeleteComponent","HomeGuard","FrontendLayoutComponent","FooterComponent","AvatarComponent","sanitizer","charCount","textColor","fontWeight","dynamic","circle","chars","upperData","getFirstLetters","unicodeSafeSubstring","charObj","getCharText","svg","getSvg","svgHtml","unescape","count","svgTag","backgroundColor","character","textTag","characters","StopPropDirective","onClick","$event","stopPropagation","MenuItemDirective","elementRef","role","tabIndex","nativeElement","MenuComponent","ngAfterContentInit","keyManager","menuItems","withWrap","MenuTriggerForDirective","viewContainerRef","overlay","isOpen","hasPopup","defaultMenuConfig","panelClass","hasBackdrop","backdropClass","scrollStrategy","scrollStrategies","reposition","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","withLockedPosition","withFlexibleDimensions","withPush","toggleMenu","destroyMenu","openMenu","disposeAll","menu","overlayRef","templatePortal","templateRef","attach","closedEventsSub","getClosedEvents","keyDownEventsSub","keydownEvents","onKeydown","detachments","escKey","backdrop","backdropClick","menuClosed","mergeWith","dispose","MenuDividerComponent","NavbarComponent","UserLayoutComponent","OrganizationSwitcherComponent","activeOrganization","loaded","OrganizationLayoutComponent","_destroy","organization$","mergeMap","canShowManageTab","canShowToolsTab","canShowSettingsTab","getToolsRoute","getManageRoute","SelectionReadOnlyRequest","selectAll","check","CollectionAddEditComponent","onSavedCollection","onDeletedCollection","editMode","accessGroups","groupsResponse","checked","deletePromise","styles","primary","secondary","hoverStyles","BadgeDirective","badgeType","hasHoverEffects","nodeName","selectedChanged","filterSelected","EntityUsersComponent","onEditedUsers","organizationUserType","organizationUserStatusType","showSelected","selectedCount","allUsers","loadUsers","users","searchedUsers","searchText","scrollViewportStyle","entity","selections","loadMore","CollectionsComponent","canCreate","didScroll","pageSize","pagedCollectionsCount","decryptCollections","assignedCollections","resetPaging","pagedLength","pagedCollections","pagedSize","canEdit","canDelete","addEditModalRef","canSave","removeCollection","usersModalRef","entityName","isSearching","isPaging","searching","EventView","BaseEventsComponent","eventService","exportService","fileDownloadService","dirtyDates","defaultDates","exportEvents","appApiPromiseUnfulfilled","dates","parseDates","exportPromise","export","loadEvents","clearExisting","loadAndParseEvents","refreshPromise","morePromise","startDate","endDate","requestEvents","eventInfo","getUserName","exportFileName","EventsComponent","userNamePipe","orgUsersUserIdMap","GroupRequest","GroupAddEditComponent","onSavedGroup","onDeletedGroup","access","loadCollections","GroupsComponent","pagedGroupsCount","pagedGroups","removeGroup","ManageComponent","OrganizationUserBulkRequest","OrganizationUserConfirmRequest","UserConfirmComponent","onConfirmedUser","dontAskAgain","BasePeopleComponent","validationService","searchPipe","statusMap","pagedUsers","activeUsers","pagedUsersCount","allCount","invitedCount","userStatusType","Invited","acceptedCount","confirmedCount","revokedCount","Revoked","showConfirmUsers","showBulkConfirmUsers","getUsers","checkUser","filteredUsers","selectCount","removeUserConfirmationDialog","deleteUser","removeUser","revoke","revokeWarningMessage","revokeUser","restoreUser","reinvite","reinviteUser","confirm","confirmUser","mapIndex","updateUser","publicKeyResponse","autoConfirm","confirmModalRef","getCheckedUsers","OrganizationUserBulkConfirmRequest","publicKeys","fingerprints","statuses","done","excludedUsers","isAccepted","getPublicKeys","entry","getCryptoKey","userIdsWithKeys","postConfirmRequest","deleteUsers","removeUsersWarning","BulkRestoreRevokeComponent","isRevoking","bulkTitle","titleKey","performBulkUserAction","bulkMessage","BulkStatusComponent","EntityEventsComponent","showUser","orgUsersIdMap","ResetPasswordComponent","onPasswordReset","loggedOutWarningName","passwordStrengthComponent","copy","orgSymKey","decPrivateKey","OrganizationUserInviteRequest","emails","OrganizationUserUpdateRequest","NestedCheckboxComponent","onSavedUser","onDeletedUser","parentIndeterminate","parentChecked","checkboxes","pascalize","handleDependentPermissions","UserAddEditComponent","onRevokedUser","onRestoredUser","isRevoked","User","showCustom","manageAllCollectionsCheckboxes","manageAssignedCollectionsCheckboxes","customUserTypeSelected","setRequestPermissions","clearPermissions","OrganizationUserUpdateGroupsRequest","groupIds","UserGroupsComponent","userGroups","ug","bulkConfirm","resetPassword","PeopleComponent","userType","accessEvents","canResetPassword","orgUseResetPassword","orgHasKeys","orgResetPasswordPolicyEnabled","callingUserType","combineLatest","viewEvents","allowResetPassword","orgUser","callingUserHasPermission","showEnrolledStatus","groupsModalRef","bulkRemove","bulkRemoveModalRef","bulkRevoke","bulkRevokeOrRestore","bulkRestore","bulkReinvite","showBulkStatus","bulkConfirmModalRef","eventsModalRef","resetPasswordModalRef","warningMessage","successfullMessage","childComponent","bulkStatusModalRef","onShown","keyedErrors","keyedFilteredUsers","PolicyRequest","BasePolicy","display","BasePolicyComponent","policyResponse","loadData","buildRequestData","policiesEnabledMap","PolicyEditComponent","cdr","onSavedPolicy","ngAfterViewInit","factory","resolveComponentFactory","policyComponent","policyFormRef","createComponent","detectChanges","Enabled","PoliciesComponent","policyListService","policyIdFromEvents","orgPolicy","orgPolicies","op","editModalRef","OrganizationUpdateRequest","ApiKeyComponent","postKey","PurgeVaultComponent","CountBasedLocalizationKey","singular","plural","OrganizationContentSummaryItem","localizationKeyOptions","localizationKey","OrganizationContentSummary","totalItemCount","itemCountByType","DeleteOrganizationComponent","deleteOrganizationRequestType","organizationContentSummary","buildOrganizationContentSummary","organizationItems","cipherType","getOrganizationItemCountByType","getOrganizationItemLocalizationKeysByType","viewApiKey","AccountComponent","canUseApi","taxFormPromise","deleteOrganization","deleteModalRef","purgeVault","purgeModalRef","apiKeyModalRef","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","rotateApiKeyModalRef","isRotation","TransactionType","VerifyBankRequest","BitPayInvoiceRequest","AddCreditComponent","onAdded","ppLoading","payPalConfig","ppButtonFormAction","ppButtonBusinessId","creditAmount","ppButtonCustomField","subject","returnUrl","ppButtonFormRef","BitPay","credit","creditAmountNumber","bitPayUrl","formatAmount","floatAmount","parseFloat","toFixed","PaymentRequest","AdjustPaymentComponent","onAdjusted","taxInfoComponent","addCredit","closeAddCredit","changePayment","closePayment","OrganizationBillingComponent","firstLoaded","showAdjustPayment","showAddCredit","transactionType","billing","amount1","verifyAmount1","amount2","verifyAmount2","verifyBankPromise","paymentSourceInApp","isCreditBalance","creditOrBalance","AppleInApp","GoogleInApp","OrganizationApiKeyType","OrganizationConnectionType","BillingSyncConfigApi","billingSyncKey","BillingSyncConfigRequest","OrganizationConnectionRequest","BillingSyncKeyComponent","CloudBillingSync","existingConnectionId","setParentConnection","deleteConnection","OrganizationApiKeyRequest","Default","cancelRotate","rotateToken","BillingSyncApiKeyComponent","showRotateScreen","BillingSync","keyRevisionDate","hasBillingToken","syncStatus","dayDiff","date1","date2","diffTime","submitButtonText","showLastSyncText","showAwaitingSyncText","daysBetween","StorageRequest","AdjustStorageComponent","storageGbPrice","storageAdjustment","storageGbAdjustment","paymentFailed","relativeTo","adjustedStorageTotal","OrganizationSubscriptionUpdateRequest","seatAdjustment","AdjustSubscription","limitSubscription","newSeatCount","currentSeatCount","newMaxSeats","limitSubscriptionChanged","adjustedSeatTotal","maxSeatTotal","ChangePlanComponent","onChanged","defaultUpgradePlan","defaultUpgradeProduct","DownloadLicenseComponent","onDownloaded","licenseString","ImageSubscriptionHiddenComponent","UpdateLicenseComponent","onUpdated","updatePromise","changePlan","closeChangePlan","subscriptionAdjusted","removeSponsorship","adjustStorage","closeStorage","downloadLicense","manageBillingSync","closeDownloadLicense","closeUpdateLicense","manageBillingSyncSelfHosted","OrganizationSubscriptionComponent","adjustSeatsAdd","showAdjustSeats","showAdjustSeatAutoscale","adjustStorageAdd","showAdjustStorage","showUpdateLicense","showBillingSyncKey","showDownloadLicense","showChangePlan","userOrg","apiKeyResponse","hasBillingSyncToken","existingBillingSyncConnection","reinstatePromise","cancelPromise","changed","setupBillingSyncModalRef","onClosed","updated","removeSponsorshipPromise","billingSyncKeyRef","billingSyncKeyViewContainerRef","connection","isExpired","subscriptionMarkedForCancel","nextInvoice","storagePercentage","storageProgressWidth","billingInterval","canAdjustSeats","isSponsoredSubscription","canDownloadLicense","canManageBillingSync","EnterpriseMonthly","EnterpriseAnnually2019","EnterpriseMonthly2019","subscriptionDesc","FamiliesAnnually2019","showChangePlanButton","billingSyncSetUp","SettingsComponent","access2fa","showBilling","UpdateTwoFactorDuoRequest","TwoFactorProviderRequest","TwoFactorBaseComponent","twoFactorProviderType","auth","authResponse","hashedSecret","verificationType","enable","enableFunction","buildRequestModel","TwoFactorVerifyComponent","onAuthed","TwoFactorDuoComponent","processResponse","ikey","skey","DeviceVerificationRequest","UpdateTwoFactorAuthenticatorRequest","TwoFactorAuthenticatorComponent","qrScript","QRious","element","UpdateTwoFactorEmailRequest","TwoFactorEmailComponent","sentEmail","print","TwoFactorRecoveryComponent","w","write","onafterprint","formatString","UpdateTwoFactorWebAuthnDeleteRequest","UpdateTwoFactorWebAuthnRequest","readKey","TwoFactorWebAuthnComponent","keyIdAvailable","keysConfiguredCount","webAuthnResponse","removePromise","challengePromise","readDevice","webAuthnChallenge","resetWebAuthn","run","webAuthnListening","webAuthnError","listening","configured","UpdateTwoFactorYubioOtpRequest","TwoFactorYubiKeyComponent","disablePromise","existingKey","padRight","NotPremiumDirective","viewContainer","createEmbeddedView","premiumRequired","PremiumBadgeComponent","manage","showPolicyWarning","canAccessPremium","deviceVerificationSettings","enableDeviceVerification","filterProvider","twoFactorAuthPolicyAppliesToActiveUser","evaluatePolicies","openModal","authenticatorModalRef","updateStatus","yubikeyModalRef","duoModalRef","emailModalRef","webAuthnModalRef","recoveryModalRef","TwoFactorSetupComponent","duoComp","auditService","passwordRepromptService","cloneMode","onSavedCipher","onDeletedCipher","onRestoredCipher","onCancelled","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","onGenerateUsername","showCardNumber","showCardCode","ownershipOptions","currentDate","allowPersonal","canUseReprompt","typeOptions","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","uriMatchOptions","autofillOnPageLoadOptions","personalOwnershipPolicyAppliesToActiveUser","myEmail","writeableCollections","loadCipher","organizationChanged","previousCipherId","encryptCipher","saveCipher","addUri","removeUri","trackByFunction","share","editCollections","restorePromise","restoreCipher","toggleCardNumber","toggleCardCode","toggleUriOptions","loginUriMatchChanged","checkPassword","checkPasswordPromise","repromptChanged","addFieldType","linkedFieldOptions","fieldType","addFieldTypeOptions","addFieldLinkedTypeOption","changes","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","newField","removeField","toggleFieldValue","showValue","drop","previousIndex","currentIndex","linkedFieldOption","i18nKey","TrueFalseValueDirective","renderer","trueValue","falseValue","propagateChange","onHostChange","writeValue","setProperty","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","AddEditCustomFieldsComponent","upgradeOrganization","launch","viewHistory","toggleFavorite","totpService","showRevisionDate","hasPasswordHistory","viewingPasswordHistory","viewOnly","passwordRevisionDisplayDate","cleanUp","totpUpdateCode","totpTick","totpInterval","canLaunch","typeI18nKey","aType","showGetPremium","clearInterval","totpCode","half","totpCodeFormatted","allowOwnershipAssignment","intervalSeconds","totpSec","totpDash","totpLow","AddEditComponent","CipherReportComponent","requiresPaid","hasLoaded","setCiphers","selectCipher","repromptCipher","cipherAddEditModalRef","checkAccess","FallbackSrcDirective","onError","appFallbackSrc","cardIcons","Visa","Mastercard","Amex","Discover","JCB","Maestro","UnionPay","RuPay","Mir","IconComponent","image","fallbackImage","imageEnabled","setLoginIcon","setCardIcon","hostnameUri","isWebsite","exposedPasswordMap","allCiphers","getAllCiphers","exposedPasswordCiphers","exposedCount","canManageCipher","ExposedPasswordsReportComponent","manageableCiphers","services","cipherDocs","load2fa","inactive2faCiphers","docs","service","serviceData","documentation","additionalDomain","InactiveTwoFactorReportComponent","ciphersWithPasswords","passwordUseMap","reusedPasswordCiphers","ReusedPasswordsReportComponent","ToolsComponent","unsecuredCiphers","UnsecuredWebsitesReportComponent","passwordStrengthMap","passwordStrengthCache","weakPasswordCiphers","isUserNameNotEmpty","getCacheKey","hasUserName","scoreKey","WeakPasswordsReportComponent","PipesModule","VaultService","calculateSearchBarLocalizationString","vaultFilter","selectedFolderId","selectedCollection","selectedOrganizationId","myVaultOnly","VaultSharedModule","VaultFilter","selectedFolder","refreshCollectionsAndFolders","resetFilter","selectedCollectionId","resetOrganization","buildFilter","cipherPassesFilter","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","hasUpdatedKey","fileEl","saveCipherAttachment","cipherDomain","downloading","canAccessAttachments","reuploadCipherAttachment","foundAttachment","a2","reupload","showFixOldAttachments","AttachmentsComponent","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","searchPlaceholder","searchPending","searchTimeout","deletedFilter","applyFilter","reload","refresh","indexedCiphers","doSearch","rightClickCipher","addCipher","addCipherOptions","EllipsisPipe","completeWords","ellipsis","OrganizationNameBadgeComponent","onOrganizationClicked","profileName","emitOnOrganizationClicked","GetOrgNameFromIdPipe","clone","checkCipher","showAddNew","onAttachmentsClicked","onShareClicked","onCollectionsClicked","onCloneClicked","onOrganzationBadgeClicked","pagedCiphers","userHasPremiumAccess","pagedCiphersCount","refreshing","permanent","displayTotpCopyButton","getSelected","getSelectedIds","hasOldAttachments","CiphersComponent","onEventsClicked","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","vaultFilterService","activeFilter","hideFolders","hideCollections","hideFavorites","hideTrash","hideOrganizations","onFilterChange","onAddFolder","onEditFolder","isLoaded","displayCollections","buildOrganizations","activePersonalOwnershipPolicy","checkForPersonalOwnershipPolicy","activeSingleOrganizationPolicy","checkForSingleOrganizationPolicy","buildNestedFolders","initCollections","buildCollections","toggleFilterNodeCollapseState","node","reloadCollectionsAndFolders","pruneInvalidatedFilterSelections","reloadOrganizations","addFolder","editFolder","pruneInvalidFolderSelection","pruneInvalidCollectionSelection","hasId","hide","onNodeCollapseStateChange","collectionsGrouping","collectionNodes","isCollapsed","toggleCollapse","CollectionFilterComponent","foldersGrouping","folderNodes","nestedFolders","FolderFilterComponent","cipherStatus","StatusFilterComponent","selectedCipherType","typesNode","cipherTypeEnum","TypeFilterComponent","organizationGrouping","displayMode","hasActiveFilter","applyOrganizationFilter","applyMyVaultFilter","clearFilter","EnrollMasterPasswordReset","toastStringRef","keyString","LinkSsoComponent","toggleResetPasswordEnrollment","unlinkSso","OrganizationOptionsComponent","allowEnrollmentChanges","OrganizationFilterComponent","displayText","searchTextChanged","onSearchTextChanged","VaultFilterComponent","BulkDeleteComponent","cipherIds","onDeleted","deleteCiphersAdmin","deleteCiphers","deleteRequest","BulkMoveComponent","onMoved","BulkRestoreComponent","onRestored","isChecked","BulkShareComponent","onShared","nonShareableCount","shareableCiphers","allCollections","filterCollections","checkedCollectionIds","bulkMove","bulkShare","BulkActionsComponent","bulkDelete","promptPassword","selectedIds","ciphersComponent","bulkDeleteModalRef","bulkRestoreModalRef","selectedCiphers","bulkShareModalRef","bulkMoveModalRef","BroadcasterSubscriptionId","VaultComponent","changeDetectorRef","vaultService","trashCleanupWarning","vaultFilterComponent","getCipherIdFromParams","editCipherId","queryParamsHandling","applyVaultFilter","go","filterSearchText","editCipherAttachments","madeAttachmentChanges","attachmentsModalRef","editCipherCollections","collectionsModalRef","editCipher","cloneCipher","replaceUrl","routes","VaultRoutingModule","VaultModule","children","pathMatch","redirectTo","loadChildren","m","OrganizationImportExportModule","OrganizationsRoutingModule","PlanSponsorshipType","AcceptFamilySponsorshipComponent","register","OrganizationSponsorshipRedeemRequest","FamiliesForEnterpriseSetupComponent","badToken","showNewOrganization","_selectedFamilyOrganizationId","organizationPlansComponent","onOrganizationCreateSuccess","existingFamilyOrganizations$","selectedFamilyOrganizationId","planSponsorshipType","FamiliesForEnterprise","sponsoredOrganizationId","HasPremiumGuard","userHasPremium","ReportVariant","BreachReportComponent","checkedUsername","Icon","DynamicContentNotAllowedError","svgIcon","strings","ReportBreach","ReportExposedPasswords","ReportInactiveTwoFactor","ReportReusedPasswords","ReportUnsecuredWebsites","ReportWeakPasswords","ReportType","reports","ExposedPasswords","ReusedPasswords","WeakPasswords","UnsecuredWebsites","Inactive2fa","DataBreach","BitIconComponent","domSanitizer","innerHtml","bypassSecurityTrustHtml","ReportCardComponent","variant","requiresPremium","RequiresPremium","ReportListComponent","ReportsHomeComponent","reportRequiresPremium","ReportsLayoutComponent","ReportsRoutingModule","ReportsModule","SendAccessView","SendAccess","SendAccessRequest","toggleText","copyText","AccessComponent","sendType","passwordRequired","unavailable","sendText","downloadData","accessRequest","keyArray","sendAccess","disableSend","filteredSends","hasSearched","onSuccessfulLoad","applyTextSearch","removePassword","onSuccessfulRemovePassword","onSuccessfulDelete","link","clearSelections","selectedAll","selectType","selectedType","BrowserPath","DateField","DatePreset","datePipe","onSavedSend","onDeletedSend","copyLink","disableHideEmail","alertShown","sendLinkBaseUrl","isDateTimeLocalSupported","setDates","loadSend","hasPassword","encryptSend","encSend","uploadPromise","copySuccess","copyLinkToClipboard","typeChanged","toggleOptions","togglePasswordVisible","datesChanged","datesForm","selectedDeletionDatePreset","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","expirationDatePresets","Never","browserPath","Firefox","Safari","formattedDeletionDate","miliseconds","formattedExpirationDate","safariDeletionTimePresetOptions","safariTimePresetOptions","DeletionDate","safariExpirationTimePresetOptions","ExpriationDate","nextWeek","setInitialFormValues","emitDates","valueChanges","onDeletionDatePresetSelect","clearExpiration","initialDeletionDate","toTimeString","initialExpirationDate","twentyFourHour","noon","midnight","ams","pms","hour","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","EffluxDatesComponent","editSend","addSend","SendComponent","sendAddEditModalRef","DeauthorizeSessionsComponent","DeleteAccountComponent","accountService","deleteForm","EmailTokenRequest","EmailRequest","reset","ChangeEmailComponent","tokenSent","showTwoFactorEmailWarning","newEmail","UpdateProfileRequest","ProfileComponent","showChangeEmail","deauthorizeSessions","deauthModalRef","CreateOrganizationComponent","orgPlansComponent","UpdateDomainsRequest","toggleExcluded","customize","DomainRulesComponent","custom","globalDomain","excludedGlobalEquivalentDomains","d2","indexTrackBy","EmergencyAccessAttachmentsComponent","EmergencyAddEditComponent","viewAttachments","EmergencyAccessViewComponent","oldKeyBuffer","oldEncKey","cipherData","EmergencyAccessStatusType","EmergencyAccessType","EmergencyAccessConfirmRequest","EmergencyAccessInviteRequest","EmergencyAccessUpdateRequest","EmergencyAccessAddEditComponent","onSaved","View","emergencyAccessType","waitTimes","emergencyAccess","waitTime","EmergencyAccessConfirmComponent","onConfirmed","EmergencyAccessPasswordRequest","EmergencyAccessTakeoverComponent","onDone","takeoverResponse","approve","requestAccess","takeover","EmergencyAccessComponent","emergencyAccessStatusType","isOrganizationOwner","trustedContacts","grantedContacts","contact","doConfirmation","removeGrantee","removeGrantor","RecoveryInitiated","RecoveryApproved","takeoverModalRef","hours","CUSTOM_VALUE","exceedsMinimumTimout","customTimeInMinutes","MIN_CUSTOM_MINUTES","combineLatestWith","vaultTimeoutPolicy","applyVaultTimeoutPolicy","onChange","current","vaultTimeouts","onTouched","validate","policyError","minTimeoutError","registerOnValidatorChange","validatorChange","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","VaultTimeoutInputComponent","PreferencesComponent","localeOptions","themeOptions","enableFavicons","startingLocale","startingTheme","vaultTimeoutActionChanged","newValue","FolderWithIdRequest","SendWithIdRequest","UpdateKeyRequest","ChangePasswordComponent","rotateEncKey","rotateEncKeyClicked","updateKey","updateEmergencyAccesses","updateAllResetPasswordKeys","allowedStatuses","filteredAccesses","updateRequest","KdfRequest","ChangeKdfComponent","kdfOptions","recommendedKdfIterations","SecurityKeysComponent","showChangeKdf","viewUserApiKey","viewUserApiKeyModalRef","rotateUserApiKey","rotateUserApiKeyModalRef","SecurityComponent","showChangePassword","SecurityRoutingModule","hasFamilySponsorshipAvailable","hasPremiumFromOrg","hideSubscription","notAllowedValueAsync","valueGetter","caseInsensitive","notAllowedValue","controlValue","resendEmail","SponsoringOrgRowComponent","sponsoringOrg","isSelfHosted","sponsorshipRemoved","statusMessage","statusClass","setStatus","revokeSponsorship","revokeSponsorshipPromise","doRevokeSponsorship","resendEmailPromise","isSentAwaitingSync","toDelete","validUntil","forceReload","SponsoredFamiliesComponent","sponsorshipForm","selectedSponsorshipOrgId","validators","sponsorshipEmail","asyncValidators","updateOn","availableSponsorshipOrgs$","anyOrgsAvailable$","activeSponsorshipOrgs$","anyActiveSponsorships$","sponsoredEmail","friendlyName","resetForm","sponsorshipEmailControl","PaymentMethodComponent","PremiumComponent","premiumPrice","finalizePremium","paymentResponse","SubscriptionComponent","hasPremium","subscriptionRoute","UserBillingHistoryComponent","UserSubscriptionComponent","SubscriptionRoutingModule","usernameGenerationService","comingFromAddEdit","onSelected","usernameOptions","avoidAmbiguous","usernameWebsite","passTypeOptions","usernameTypeOptions","desc","subaddressOptions","catchallOptions","forwardOptions","passwordOptionsResponse","websiteOption","regenerateWithoutButtonPress","regenerate","regeneratePassword","regenerateUsername","sliderChanged","savePasswordOptions","sliderInput","normalizePasswordOptions","saveUsernameOptions","usernameGeneratingPromise","copyOptions","SelectCopyDirective","onCopy","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","ColorPasswordPipe","generateTemplate","templateGenerator","passwordArray","colorizedPassword","isSpecial","PasswordGeneratorHistoryComponent","lengthChanged","minNumberChanged","minSpecialChanged","GeneratorComponent","findIndex","historyModalRef","UpdateKeyComponent","makeRequest","onSavedFolder","onDeletedFolder","FolderAddEditComponent","onSharedCipher","cipherView","ShareComponent","VerifyEmailComponent","showVerifyEmail","showBrowserOutdated","showUpdateKey","showPremiumCallout","filterComponent","isShowingCards","shareCipher","shareModalRef","folderAddEditModalRef","updateKeyModalRef","favorites","flagName","ImportExportModule","OssRoutingModule","useHash","paramsInheritanceStrategy","LoginModule","VerticalStepperModule","TrialInitiationModule","OrganizationManageModule","OrganizationUserModule","OssModule","WildcardRoutingModule","ProviderAddOrganizationRequest","WebProviderService","addOrganizationToProvider","encryptedOrgKey","detachOrganizastion","AddOrganizationComponent","webProviderService","onAddedOrganization","ProviderPermissionsGuard","providerPermissions","ProvidersComponent","addExistingOrganization","DisallowedPlanTypes","ClientsComponent","manageOrganizations","showAddExisting","pagedClientsCount","clients","candidateOrgs","allowedOrgsIds","addableOrganizations","pagedClients","addModalRef","ProviderUserAcceptRequest","AcceptProviderComponent","providerUsersUserIdMap","providerUsersIdMap","ProviderUserBulkRequest","ProviderUserConfirmRequest","ProviderUserBulkConfirmRequest","BulkConfirmComponent","BulkRemoveComponent","ProviderUserInviteRequest","ProviderUserUpdateRequest","ServiceUser","ProvidersLayoutComponent","showMenuBar","showManageTab","showSettingsTab","manageRoute","ProviderUpdateRequest","SetupProviderComponent","ProviderSetupRequest","SetupComponent","ProvidersRoutingModule","ProvidersModule","registerComponentFactoryResolver","SecretsManagerModule","AppRoutingModule","DisableSendPolicy","DisableSendPolicyComponent","MasterPasswordPolicy","MasterPasswordPolicyComponent","showKeyConnectorInfo","passwordScores","PasswordGeneratorPolicy","PasswordGeneratorPolicyComponent","defaultTypes","PersonalOwnershipPolicy","PersonalOwnershipPolicyComponent","RequireSsoPolicy","RequireSsoPolicyComponent","singleOrgEnabled","ResetPasswordPolicy","ResetPasswordPolicyComponent","SendOptionsPolicy","SendOptionsPolicyComponent","SingleOrgPolicy","SingleOrgPolicyComponent","TwoFactorAuthenticationPolicy","TwoFactorAuthenticationPolicyComponent","toastrService","lastActivity","idleTimer","isIdle","lang","runOutsideAngular","onmousemove","recordActivity","onmousedown","ontouchstart","onclick","onscroll","onkeypress","setFullWidth","idleStateChanged","sanitize","enableHtml","trustedHtml","timeOut","DisablePersonalVaultExportPolicy","DisablePersonalVaultExportPolicyComponent","MaximumVaultTimeoutPolicy","MaximumVaultTimeoutPolicyComponent","AppComponent","ScimConfigApi","scimProvider","ScimConfigRequest","copyScimUrl","rotateScimKey","copyScimKey","ScimComponent","showScimSettings","formData","endpointUrl","Scim","setConnectionFormValues","loadApiKey","apiKeyRequest","getScimEndpointUrl","rotatePromise","dirtyRequired","dirty","OrganizationSsoRequest","SsoConfigView","A11yInvalidDirective","formControlDirective","statusChanges","InputStripSpacesDirective","onInput","BaseCvaComponent","controlDir","internalControl","onValueChangesInternal","valueAccessor","describedById","showDescribedBy","controlId","helperText","isRequired","hasValidator","onBlurInternal","InputCheckboxComponent","InputTextComponent","stripSpaces","transformValue","emitEvent","doStripSpaces","onValueChangeInternal","InputTextReadOnlyComponent","showCopy","showLaunch","SelectComponent","validateKeyConnectorUrl","toggleOpenIdCustomizations","defaultSigningAlgorithm","ssoType","ssoTypeOptions","None","samlSigningAlgorithms","saml2SigningBehaviourOptions","IfIdpWantAuthnRequestsSigned","Always","saml2BindingTypeOptions","HttpRedirect","HttpPost","saml2NameIdFormatOptions","NotConfigured","Unspecified","EmailAddress","X509SubjectName","WindowsDomainQualifiedName","KerberosPrincipalName","EntityIdentifier","Persistent","Transient","connectRedirectOptions","RedirectGet","FormPost","showOpenIdCustomizations","haveTestedKeyConnector","openIdForm","samlForm","ssoConfigForm","newType","ssoSettings","populateForm","validateForm","readOutErrors","fromView","markAsPending","invalidUrl","enableTestKeyConnector","samlSigningAlgorithmOptions","markAsDirty","markAsTouched","ssoConfigView","errorCountText","div","className","innerText","existing","OrganizationsModule","AppModule","bootstrapModule","preserveWhitespaces","calloutStyle","enforcedPolicyMessage","getPasswordScoreAlertDisplay","ModalRef","_onCreated","_onClose","_onClosed","_onShow","_onShown","onShow","lastResult","toPromise","UserVerificationComponent","disableRequestOTP","sentCode","processChanges","opacity","A11yTitleDirective","appA11yTitle","hasAttribute","ApiActionDirective","appApiAction","AutofocusDirective","appAutofocus","condition","autofocus","InputVerbatimDirective","appInputVerbatim","disableComplete","StopClickDirective","preventDefault","BitwardenToast","toastPackage","BitwardenToastGlobalConfig","toastComponent","BitwardenToastModule","ngModule","default","numberFormats","cardLength","blocks","Other","CreditCardNumberPipe","creditCardNumber","rules","matchingRule","chunks","JslibModule","forRoot","maxOpened","autoDismiss","closeButton","I18nPipe","SearchPipe","prop1","prop2","prop3","UserNamePipe","DynamicModalComponent","cd","focusTrapFactory","loadChildComponent","childComponentType","setComponentParameters","componentRef","focusTrap","focusFirstTabbableElementWhenReady","componentType","componentFactory","modalContentRef","destroy","getFocus","autoFocusEl","ModalInjector","_parentInjector","_additionalTokens","notFoundValue","ModalConfig","modalList","factoryResolvers","modalCount","topModal","modalComponentRef","openInternal","insert","hostView","replaceTopModal","closeAll","attachToDom","createModalComponent","attachView","domElem","rootNodes","detachView","modalEl","dialogEl","zIndex","prepend","closeElement","WeakMap","DynamicTreeNode","transformation","storedFolders","orgCiphers","oc","getAllFoldersNested","storedCollections","folderCopy","getFolderNested","ApiService","CollectionService","EventService","ExportService","FileDownloadService","FolderService","InternalFolderService","I18nService","KeyConnectorService","LogService","canAccessToolsTab","canAccessSettingsTab","canAccessManageTab","canAccessOrgAdmin","getOrganizationById","canAccessAdmin","OrganizationService","PlatformUtilsService","PolicyService","InternalPolicyService","UserVerificationService","ValidationService","CipherRepromptType","CipherType","EncryptionType","EventType","FieldType","KdfType","DEFAULT_KDF_TYPE","PBKDF2_SHA256","DEFAULT_KDF_ITERATIONS","SEND_KDF_ITERATIONS","LoginLinkedId","CardLinkedId","IdentityLinkedId","PolicyType","SecureNoteType","UriMatchType","VerificationType","LinkedMetadata","_i18nKey","TreeNode","ServiceUtils","nodeTree","partIndex","delimiter","partName","nestedTraverse","newPartName","getTreeNodeObject","getDomain","nodeURL","Utils","isNode","process","release","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","binaryString","atob","charCodeAt","fromB64ToArray","fromUrlB64ToB64","strUtf8","fromB64toUrlB64","fromBufferToB64","b64Str","encodedString","decodeURIComponent","escape","urlB64Str","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","uriString","getUrl","httpUrl","tldEndingRegex","getUrlObject","validIpAddress","urlDomain","source","bgColor","threshold","svgTextFill","bgColorHexNums","ipString","mobile","vendor","opera","hasProtocol","anchor","regexpEmojiPresentation","CardApi","FieldApi","IdentityApi","LoginApi","LoginUriApi","SecureNoteApi","AttachmentData","CardData","CipherData","CollectionData","FieldData","IdentityData","LoginData","LoginUriData","PasswordHistoryData","SecureNoteData","Attachment","decryptAttachmentKey","getKeyForDecryption","toAttachmentData","buildDataModel","toCardData","Cipher","decAttachment","decField","decPh","toLoginData","toSecureNoteData","toIdentityData","toFieldData","toPasswordHistoryData","Collection","Domain","dataObj","notEncList","objProp","notEncStringList","viewModel","mapProp","EncString","encryptedStringOrType","initFromData","initFromEncryptedString","parseEncryptedString","decryptedValue","Field","Folder","Identity","Login","toLoginUriData","LoginUri","MasterPasswordPolicyOptions","Password","SecureNote","SymmetricCryptoKey","CardExport","FieldExport","IdentityExport","LoginUriExport","LoginExport","toView","toDomain","SecureNoteExport","CipherExport","CipherWithIdExport","CollectionExport","CollectionWithIdExport","FolderExport","FolderWithIdExport","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","CollectionRequest","FolderRequest","BaseResponse","propertyName","exactName","otherCasePropertyName","ErrorResponse","identityResponse","errorModel","responseErrorModel","messages","lastSep","AttachmentView","CardView","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","formatYear","CipherView","linkedFieldValue","linkedFieldI18nKey","CollectionView","FieldView","showCount","maskedValue","FolderView","IdentityView","_firstName","_lastName","fullName","fullAddress","fullAddressPart2","addressPart2","ItemView","CanLaunchWhitelist","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","hostnameOrUri","hostOrUri","LoginView","maskedPassword","PasswordHistoryView","SecureNoteView","LogLevelType","ConsoleLogService","timersMap","Debug","Info","Warning","level","BadgeModule","buttonStyles","ButtonComponent","buttonType","block","disabledAttr","BitFormFieldControl","nextId","BitErrorComponent","displayError","requiredLength","BitFormFieldComponent","ngAfterContentChecked","ariaDescribedBy","InputModule","MultiSelectModule","FormFieldModule","BitHintComponent","BitLabel","PrefixClasses","BitPrefixDirective","BitSuffixDirective","BitInputDirective","ngControl","hasPrefix","hasSuffix","labelForId","ariaInvalid","_required","touched","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","chunkId","miniCssF","globalThis","Function","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","nc","onScriptComplete","prev","doneFns","parentNode","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}