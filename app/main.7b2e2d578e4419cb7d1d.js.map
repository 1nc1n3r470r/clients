{"version":3,"file":"app/main.7b2e2d578e4419cb7d1d.js","mappings":"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","sources":["webpack://@bitwarden/web-vault/webpack/runtime/chunk loaded","webpack://@bitwarden/web-vault/webpack/runtime/load script","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-create.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/guards/org-permissions.guard.ts","webpack://@bitwarden/web-vault/./src/app/organizations/navigation-permissions.ts","webpack://@bitwarden/web-vault/./src/app/shared/loose-components.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/submit-button/submit-button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.module.ts","webpack://@bitwarden/web-vault/./src/app/shared/locales.ts","webpack://@bitwarden/web-vault/./src/app/shared/shared.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-badge.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/vault-filter-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/vault-filter.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/injection-tokens.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/themeType.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/themeBuilder.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/abstractEncrypt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/account-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/account.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/config-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/folder/folder-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/messaging.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization/organization-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy/policy-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/storage.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/twoFactor.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/userVerification/userVerification-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/stateVersion.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/vaultTimeout/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/vaultTimeout/vaultTimeoutSettings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/accountFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/globalStateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/stateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/environmentUrls.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/account.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/windowState.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/globalState.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/deviceType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/deviceRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/tokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/apiTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/tokenRequestTwoFactor.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/apiKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/attachmentResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/passwordHistoryResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/cipherResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/attachmentUploadDataResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/authentication/registerResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billingResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billingHistoryResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billingPaymentResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/breachAccountResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/selectionReadOnlyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/collectionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/deviceVerificationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/globalDomainResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/domainsResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/emergencyAccessResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/eventResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/groupResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identityCaptchaResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identityTokenResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identityTwoFactorResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/keyConnectorUserKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/listResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationConnectionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationExportResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationSponsorshipSyncStatusResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationUserBulkResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/permissionsApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationUserResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileOrganizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileProviderOrganizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileProviderResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/paymentResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/planResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/policyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/preloginResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerOrganizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerUserBulkResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerUserResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/sendFileApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/sendTextApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendAccessResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendFileDownloadDataResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendFileUploadDataResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/ssoPreValidateResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/subscriptionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/folderResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/syncResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/taxInfoResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/taxRateResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorDuoResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorEmailResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorProviderResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorRescoverResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/userKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/htmlStorageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/throttle.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authenticationStatus.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authenticationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/keySuffixOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/twoFactorProviderType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/authResult.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/keysRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/logIn.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/hashPurpose.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/apiLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/passwordTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/ssoTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/preloginRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/sequentialize.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encArrayBuffer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sortedCiphersCache.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkDeleteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkMoveRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkRestoreRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherWithIdRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkShareRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherCollectionsRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherCreateRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherShareRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/server-config-response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/server-config.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/server-config.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/wordlist.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encryptedOrganizationKey.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encryptedObject.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/eventData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/eventRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/eventExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fileUploadType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/azureFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/bitwardenFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/folderData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/account/setKeyConnectorKeyRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/keyConnectorUserKeyRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/notificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/notificationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/organization.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/ssoEnums.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/ssoConfigApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization/organizationSsoResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationApiKeyInformationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationAutoEnrollStatusResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/keysResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationKeysResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationSubscriptionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/generatedPasswordHistory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/policyData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/policy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/provider.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/sendType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/sendFileData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/sendTextData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/sendData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendFileView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendTextView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sendFile.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sendText.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/sendRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/storageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/providerData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/organizationData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/sync/sync.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/twoFactor.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/account/verifyOTPRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/secretVerificationRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/anonAddyForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/duckDuckGoForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/fastmailForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/firefoxRelayForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/forwarderOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/simpleLoginForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/decryptParameters.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/auth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/lock.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/unauth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/jslib-services.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/folder/folder.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/folder/folder-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/account-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/account.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/vaultTimeout/vaultTimeoutSettings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/vaultTimeout/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/webCryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/encrypt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/event.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy/policy.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy/policy-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/keyConnector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/userVerification/userVerification.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/userVerification/userVerification-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization/organization-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/config.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/config/config.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/config/config-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/memoryStorage.service.ts","webpack://@bitwarden/web-vault/./src/app/core/broadcaster-messaging.service.ts","webpack://@bitwarden/web-vault/./src/app/core/event.service.ts","webpack://@bitwarden/web-vault/./src/app/core/html-storage.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/container.service.ts","webpack://@bitwarden/web-vault/./src/app/core/init.service.ts","webpack://@bitwarden/web-vault/./src/app/core/modal.service.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.html","webpack://@bitwarden/web-vault/./src/app/core/password-reprompt.service.ts","webpack://@bitwarden/web-vault/./src/app/core/policy-list.service.ts","webpack://@bitwarden/web-vault/./src/app/core/router.service.ts","webpack://@bitwarden/web-vault/./src/app/core/state/account.ts","webpack://@bitwarden/web-vault/./src/app/core/state/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownloadBuilder.ts","webpack://@bitwarden/web-vault/./src/app/core/web-file-download.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/clientType.ts","webpack://@bitwarden/web-vault/./src/app/core/web-platform-utils.service.ts","webpack://@bitwarden/web-vault/./src/app/core/core.module.ts","webpack://@bitwarden/web-vault/./src/app/core/state/global-state.ts","webpack://@bitwarden/web-vault/./src/app/core/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/i18n.service.ts","webpack://@bitwarden/web-vault/./src/app/core/state-migration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/flags.ts","webpack://@bitwarden/web-vault/./src/utils/flags.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessAcceptRequest.ts","webpack://@bitwarden/web-vault/./src/app/common/base.accept.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserAcceptRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/passwordHintRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/hint.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/logInCredentials.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/captcha_iframe.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/iframe_component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/captchaProtected.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/login.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/login.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/deleteRecoverRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/twoFactorRecoveryRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/inputsFieldMatch.validator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/registerRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/register.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/referenceEventRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/shared/components/password-strength/password-strength.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/shared/components/password-strength/password-strength.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error-summary.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/submit-button/submit-button.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/submit-button/submit-button.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/register.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/remove-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserResetPasswordEnrollmentRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/setPasswordRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/set-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/sso.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/productType.ts","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-information.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-information.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-forbes.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-forbes.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-us-news.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-us-news.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/confirmation-details.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/paymentMethodType.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/confirmation-details.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationCreateRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationKeysRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUpgradeRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerOrganizationCreateRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.ts","webpack://@bitwarden/web-vault/./src/scss/export.module.scss","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/taxInfoUpdateRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationTaxInfoUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.html","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.html","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/billing.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/billing.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/default-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/default-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise1-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise1-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise2-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise2-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams1-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams1-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams2-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams2-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-cnet.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-cnet.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-individual-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-individual-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/webauthn_iframe.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/twoFactorEmailRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/passwordRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/update-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserResetPasswordRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTempPasswordRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/update-temp-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verifyEmailRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verifyDeleteRecoverRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.html","webpack://@bitwarden/web-vault/./src/app/guards/home.guard.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/avatar.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-prop.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-item.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-trigger-for.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.html","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.html","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/selectionReadOnlyRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collection-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collection-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.directive.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/eventView.ts","webpack://@bitwarden/web-vault/./src/app/common/base.events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/events.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/groupRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserBulkRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserConfirmRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/common/base.people.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserBulkConfirmRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-restore-revoke.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-restore-revoke.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserInviteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.html","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserUpdateGroupsRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/policyRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/base-policy.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policy-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policy-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policies.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policies.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.html","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/transactionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verifyBankRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/bitPayInvoiceRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/paymentRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-billing.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-billing.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationApiKeyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationConnectionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/billingSyncConfigApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/billingSyncConfigRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationConnectionRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-sync-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-sync-key.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationApiKeyRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/billing-sync-api-key.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/billing-sync-api-key.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/storageRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.html","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationSubscriptionUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/adjust-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/adjust-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/change-plan.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/change-plan.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/download-license.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/download-license.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/image-subscription-hidden.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/image-subscription-hidden.component.svg","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorDuoRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/twoFactorProviderRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-base.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/deviceVerificationRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorAuthenticatorRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorEmailRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorWebAuthnDeleteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorWebAuthnRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorYubioOtpRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/not-premium.directive.ts","webpack://@bitwarden/web-vault/./src/app/components/premium-badge.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/true-false-value.directive.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.html","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/cipher-report.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/fallback-src.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/icon.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/icon.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/pipes/pipes.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/vault.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/vault-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/models/vault-filter.model.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.html","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/attachments.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/ciphers.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/ellipsis.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-name-badge.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-name-badge.component.html","webpack://@bitwarden/web-vault/./src/app/vault/shared/pipes/get-organization-name.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/ciphers.component.html","webpack://@bitwarden/web-vault/./src/app/vault/ciphers.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/ciphers.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.html","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/collections.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/vault-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/collection-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/collection-filter/collection-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/collection-filter/collection-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/folder-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/folder-filter/folder-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/folder-filter/folder-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/status-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/status-filter/status-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/status-filter/status-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/type-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/type-filter/type-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/type-filter/type-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/organization-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/enroll-master-password-reset.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/enroll-master-password-reset.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/link-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/link-sso.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-options.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-options.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-filter/vault-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/organization-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planSponsorshipType.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organizationSponsorshipRedeemRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/shared/guards/has-premium.guard.ts","webpack://@bitwarden/web-vault/./src/app/reports/models/report-variant.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/breach-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/breach-report.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-breach.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-exposed-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-inactive-two-factor.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-reused-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-unsecured-websites.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-weak-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/report-card/report-card.component.html","webpack://@bitwarden/web-vault/./src/app/reports/report-card/report-card.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/report-list/report-list.component.html","webpack://@bitwarden/web-vault/./src/app/reports/report-list/report-list.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reports-home.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports-layout.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/reports-home.component.html","webpack://@bitwarden/web-vault/./src/app/reports/reports-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendAccessView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sendAccess.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/sendAccessRequest.ts","webpack://@bitwarden/web-vault/./src/app/send/access.component.html","webpack://@bitwarden/web-vault/./src/app/send/access.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/send.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.html","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/send.component.html","webpack://@bitwarden/web-vault/./src/app/send/send.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.html","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emailTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emailRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateProfileRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.html","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateDomainsRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.html","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/emergencyAccessStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/emergencyAccessType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessConfirmRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessInviteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessPasswordRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.html","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.html","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/folderWithIdRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/sendWithIdRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateKeyRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/kdfRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/notAllowedValueAsync.validator.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.html","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-billing-history.component.html","webpack://@bitwarden/web-vault/./src/app/settings/user-billing-history.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/generator.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/password-generator-history.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/select-copy.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/color-password.pipe.ts","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.html","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.html","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/share.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault.module.ts","webpack://@bitwarden/web-vault/./src/app/oss-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/organization-manage.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/organization-user.module.ts","webpack://@bitwarden/web-vault/./src/app/oss.module.ts","webpack://@bitwarden/web-vault/./src/app/wildcard-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerAddOrganizationRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/services/webProvider.service.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/add-organization.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/add-organization.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/guards/provider-permissions.guard.ts","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.html","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/clients.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/clients.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/create-organization.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserAcceptRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/accept-provider.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/accept-provider.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/events.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/events.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/manage.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/manage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserBulkRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserConfirmRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserBulkConfirmRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserInviteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserUpdateRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/people.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/people.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-layout.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-layout.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUpdateRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/account.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/account.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/settings.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup-provider.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup-provider.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerSetupRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-routing.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.html","webpack://@bitwarden/web-vault/./src/app/app.component.ts","webpack://@bitwarden/web-vault/./src/app/app.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/disable-personal-vault-export.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/disable-personal-vault-export.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/maximum-vault-timeout.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/maximum-vault-timeout.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/scimConfigApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/scimConfigRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/scim.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/scim.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/dirty.validator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organizationSsoRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/ssoConfigView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/view.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/a11y-invalid.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-strip-spaces.directive.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/base-cva.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-checkbox.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-checkbox.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text-readonly.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text-readonly.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/select.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/select.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/sso.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/sso.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/organizations-routing.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/organizations.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/main.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal.ref.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/user-verification.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/user-verification.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/a11y-title.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/api-action.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/autofocus.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-verbatim.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-click.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/toastr.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/credit-card-number.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/jslib.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/i18n.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/search.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/user-name.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/dynamic-modal.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal-injector.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/modal.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/validation.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/models/dynamic-tree-node.model.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/services/vault-filter.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/event.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/folder/folder.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/keyConnector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/log.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/platformUtils.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy/policy.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/sync/sync.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/userVerification/userVerification.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/cipherRepromptType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/cipherType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/encryptionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/eventType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fieldType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/kdfType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/linkedIdType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/policyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/secureNoteType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/uriMatchType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/verificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/linkedFieldOption.decorator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/treeNode.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/serviceUtils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/tldjs.noop.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/utils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/cardApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/fieldApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/identityApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/loginApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/loginUriApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/secureNoteApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/attachmentData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/cardData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/cipherData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/collectionData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/fieldData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/identityData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/loginData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/loginUriData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/passwordHistoryData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/secureNoteData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/attachment.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/card.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/cipher.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/collection.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/domainBase.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encString.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/field.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/folder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/identity.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/login.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/loginUri.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/password.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/secureNote.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/symmetricCryptoKey.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cardExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/fieldExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/identityExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/loginUriExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/loginExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/secureNoteExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipherExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipherWithIdsExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collectionExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collectionWithIdExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folderExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folderWithIdExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/attachmentRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/collectionRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/folderRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/baseResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/errorResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/attachmentView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/cardView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/cipherView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/collectionView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/fieldView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/folderView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/identityView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/itemView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/loginUriView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/loginView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/passwordHistoryView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/secureNoteView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/logLevelType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/consoleLog.service.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/shared.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/hint.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/label.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/prefix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/suffix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/i18n.pipe.ts","webpack://@bitwarden/web-vault/webpack/bootstrap","webpack://@bitwarden/web-vault/webpack/runtime/compat get default export","webpack://@bitwarden/web-vault/webpack/runtime/define property getters","webpack://@bitwarden/web-vault/webpack/runtime/ensure chunk","webpack://@bitwarden/web-vault/webpack/runtime/get javascript chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/get mini-css chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/global","webpack://@bitwarden/web-vault/webpack/runtime/hasOwnProperty shorthand","webpack://@bitwarden/web-vault/webpack/runtime/make namespace object","webpack://@bitwarden/web-vault/webpack/runtime/node module decorator","webpack://@bitwarden/web-vault/webpack/runtime/publicPath","webpack://@bitwarden/web-vault/webpack/runtime/jsonp chunk loading","webpack://@bitwarden/web-vault/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"@bitwarden/web-vault:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { RegisterFormComponent } from \"./register-form.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [RegisterFormComponent],\n  exports: [RegisterFormComponent],\n})\nexport class RegisterFormModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { OrganizationInformationComponent } from \"./organization-information.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationInformationComponent],\n  exports: [OrganizationInformationComponent],\n})\nexport class OrganizationCreateModule {}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { canAccessOrgAdmin } from \"../navigation-permissions\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OrganizationPermissionsGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private syncService: SyncService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    // TODO: We need to fix this issue once and for all.\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n\n    const org = await this.organizationService.get(route.params.organizationId);\n    if (org == null) {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    if (!org.isOwner && !org.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"organizationIsDisabled\")\n      );\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    const permissionsCallback: (organization: Organization) => boolean =\n      route.data?.organizationPermissions;\n    const hasPermissions = permissionsCallback == null || permissionsCallback(org);\n\n    if (!hasPermissions) {\n      // Handle linkable ciphers for organizations the user only has view access to\n      // https://bitwarden.atlassian.net/browse/EC-203\n      const cipherId =\n        state.root.queryParamMap.get(\"itemId\") || state.root.queryParamMap.get(\"cipherId\");\n      if (cipherId) {\n        return this.router.createUrlTree([\"/vault\"], {\n          queryParams: {\n            itemId: cipherId,\n          },\n        });\n      }\n\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"accessDenied\"));\n      return canAccessOrgAdmin(org)\n        ? this.router.createUrlTree([\"/organizations\", org.id])\n        : this.router.createUrlTree([\"/\"]);\n    }\n\n    return true;\n  }\n}\n","import { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nexport function canAccessToolsTab(org: Organization): boolean {\n  return org.canAccessImportExport || org.canAccessReports;\n}\n\nexport function canAccessSettingsTab(org: Organization): boolean {\n  return org.isOwner;\n}\n\nexport function canAccessManageTab(org: Organization): boolean {\n  return (\n    org.canCreateNewCollections ||\n    org.canEditAnyCollection ||\n    org.canDeleteAnyCollection ||\n    org.canEditAssignedCollections ||\n    org.canDeleteAssignedCollections ||\n    org.canAccessEventLogs ||\n    org.canManageGroups ||\n    org.canManageUsers ||\n    org.canManagePolicies ||\n    org.canManageSso ||\n    org.canManageScim\n  );\n}\n\nexport function canAccessOrgAdmin(org: Organization): boolean {\n  return canAccessToolsTab(org) || canAccessSettingsTab(org) || canAccessManageTab(org);\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { UserVerificationComponent } from \"@bitwarden/angular/components/user-verification.component\";\n\nimport { AcceptEmergencyComponent } from \"../accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"../accounts/accept-organization.component\";\nimport { HintComponent } from \"../accounts/hint.component\";\nimport { LockComponent } from \"../accounts/lock.component\";\nimport { LoginComponent } from \"../accounts/login.component\";\nimport { RecoverDeleteComponent } from \"../accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"../accounts/recover-two-factor.component\";\nimport { RegisterFormModule } from \"../accounts/register-form/register-form.module\";\nimport { RegisterComponent } from \"../accounts/register.component\";\nimport { RemovePasswordComponent } from \"../accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"../accounts/set-password.component\";\nimport { SsoComponent } from \"../accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"../accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"../accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"../accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"../accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"../accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"../accounts/verify-recover-delete.component\";\nimport { NestedCheckboxComponent } from \"../components/nested-checkbox.component\";\nimport { OrganizationSwitcherComponent } from \"../components/organization-switcher.component\";\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\nimport { PremiumBadgeComponent } from \"../components/premium-badge.component\";\nimport { UserVerificationPromptComponent } from \"../components/user-verification-prompt.component\";\nimport { FooterComponent } from \"../layouts/footer.component\";\nimport { FrontendLayoutComponent } from \"../layouts/frontend-layout.component\";\nimport { NavbarComponent } from \"../layouts/navbar.component\";\nimport { UserLayoutComponent } from \"../layouts/user-layout.component\";\nimport { OrganizationCreateModule } from \"../organizations/create/organization-create.module\";\nimport { OrganizationLayoutComponent } from \"../organizations/layouts/organization-layout.component\";\nimport { BulkConfirmComponent as OrgBulkConfirmComponent } from \"../organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent as OrgBulkRemoveComponent } from \"../organizations/manage/bulk/bulk-remove.component\";\nimport { BulkRestoreRevokeComponent as OrgBulkRestoreRevokeComponent } from \"../organizations/manage/bulk/bulk-restore-revoke.component\";\nimport { BulkStatusComponent as OrgBulkStatusComponent } from \"../organizations/manage/bulk/bulk-status.component\";\nimport { CollectionAddEditComponent as OrgCollectionAddEditComponent } from \"../organizations/manage/collection-add-edit.component\";\nimport { CollectionsComponent as OrgManageCollectionsComponent } from \"../organizations/manage/collections.component\";\nimport { EntityEventsComponent as OrgEntityEventsComponent } from \"../organizations/manage/entity-events.component\";\nimport { EventsComponent as OrgEventsComponent } from \"../organizations/manage/events.component\";\nimport { GroupAddEditComponent as OrgGroupAddEditComponent } from \"../organizations/manage/group-add-edit.component\";\nimport { GroupsComponent as OrgGroupsComponent } from \"../organizations/manage/groups.component\";\nimport { ManageComponent as OrgManageComponent } from \"../organizations/manage/manage.component\";\nimport { PeopleComponent as OrgPeopleComponent } from \"../organizations/manage/people.component\";\nimport { PoliciesComponent as OrgPoliciesComponent } from \"../organizations/manage/policies.component\";\nimport { PolicyEditComponent as OrgPolicyEditComponent } from \"../organizations/manage/policy-edit.component\";\nimport { ResetPasswordComponent as OrgResetPasswordComponent } from \"../organizations/manage/reset-password.component\";\nimport { UserAddEditComponent as OrgUserAddEditComponent } from \"../organizations/manage/user-add-edit.component\";\nimport { UserConfirmComponent as OrgUserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\nimport { UserGroupsComponent as OrgUserGroupsComponent } from \"../organizations/manage/user-groups.component\";\nimport { DisableSendPolicyComponent } from \"../organizations/policies/disable-send.component\";\nimport { MasterPasswordPolicyComponent } from \"../organizations/policies/master-password.component\";\nimport { PasswordGeneratorPolicyComponent } from \"../organizations/policies/password-generator.component\";\nimport { PersonalOwnershipPolicyComponent } from \"../organizations/policies/personal-ownership.component\";\nimport { RequireSsoPolicyComponent } from \"../organizations/policies/require-sso.component\";\nimport { ResetPasswordPolicyComponent } from \"../organizations/policies/reset-password.component\";\nimport { SendOptionsPolicyComponent } from \"../organizations/policies/send-options.component\";\nimport { SingleOrgPolicyComponent } from \"../organizations/policies/single-org.component\";\nimport { TwoFactorAuthenticationPolicyComponent } from \"../organizations/policies/two-factor-authentication.component\";\nimport { AccountComponent as OrgAccountComponent } from \"../organizations/settings/account.component\";\nimport { AdjustSubscription } from \"../organizations/settings/adjust-subscription.component\";\nimport { BillingSyncApiKeyComponent } from \"../organizations/settings/billing-sync-api-key.component\";\nimport { ChangePlanComponent } from \"../organizations/settings/change-plan.component\";\nimport { DeleteOrganizationComponent } from \"../organizations/settings/delete-organization.component\";\nimport { DownloadLicenseComponent } from \"../organizations/settings/download-license.component\";\nimport { ImageSubscriptionHiddenComponent as OrgSubscriptionHiddenComponent } from \"../organizations/settings/image-subscription-hidden.component\";\nimport { OrganizationBillingComponent } from \"../organizations/settings/organization-billing.component\";\nimport { OrganizationSubscriptionComponent } from \"../organizations/settings/organization-subscription.component\";\nimport { SettingsComponent as OrgSettingComponent } from \"../organizations/settings/settings.component\";\nimport { TwoFactorSetupComponent as OrgTwoFactorSetupComponent } from \"../organizations/settings/two-factor-setup.component\";\nimport { AcceptFamilySponsorshipComponent } from \"../organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"../organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent } from \"../organizations/tools/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent } from \"../organizations/tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent } from \"../organizations/tools/reused-passwords-report.component\";\nimport { ToolsComponent as OrgToolsComponent } from \"../organizations/tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent } from \"../organizations/tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent } from \"../organizations/tools/weak-passwords-report.component\";\nimport { AddEditComponent as OrgAddEditComponent } from \"../organizations/vault/add-edit.component\";\nimport { AttachmentsComponent as OrgAttachmentsComponent } from \"../organizations/vault/attachments.component\";\nimport { CollectionsComponent as OrgCollectionsComponent } from \"../organizations/vault/collections.component\";\nimport { ProvidersComponent } from \"../providers/providers.component\";\nimport { AccessComponent } from \"../send/access.component\";\nimport { AddEditComponent as SendAddEditComponent } from \"../send/add-edit.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"../send/efflux-dates.component\";\nimport { SendComponent } from \"../send/send.component\";\nimport { AccountComponent } from \"../settings/account.component\";\nimport { AddCreditComponent } from \"../settings/add-credit.component\";\nimport { AdjustPaymentComponent } from \"../settings/adjust-payment.component\";\nimport { AdjustStorageComponent } from \"../settings/adjust-storage.component\";\nimport { ApiKeyComponent } from \"../settings/api-key.component\";\nimport { BillingSyncKeyComponent } from \"../settings/billing-sync-key.component\";\nimport { ChangeEmailComponent } from \"../settings/change-email.component\";\nimport { ChangeKdfComponent } from \"../settings/change-kdf.component\";\nimport { ChangePasswordComponent } from \"../settings/change-password.component\";\nimport { CreateOrganizationComponent } from \"../settings/create-organization.component\";\nimport { DeauthorizeSessionsComponent } from \"../settings/deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"../settings/delete-account.component\";\nimport { DomainRulesComponent } from \"../settings/domain-rules.component\";\nimport { EmergencyAccessAddEditComponent } from \"../settings/emergency-access-add-edit.component\";\nimport { EmergencyAccessAttachmentsComponent } from \"../settings/emergency-access-attachments.component\";\nimport { EmergencyAccessConfirmComponent } from \"../settings/emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"../settings/emergency-access-takeover.component\";\nimport { EmergencyAccessViewComponent } from \"../settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"../settings/emergency-access.component\";\nimport { EmergencyAddEditComponent } from \"../settings/emergency-add-edit.component\";\nimport { OrganizationPlansComponent } from \"../settings/organization-plans.component\";\nimport { PaymentMethodComponent } from \"../settings/payment-method.component\";\nimport { PaymentComponent } from \"../settings/payment.component\";\nimport { PreferencesComponent } from \"../settings/preferences.component\";\nimport { PremiumComponent } from \"../settings/premium.component\";\nimport { ProfileComponent } from \"../settings/profile.component\";\nimport { PurgeVaultComponent } from \"../settings/purge-vault.component\";\nimport { SecurityKeysComponent } from \"../settings/security-keys.component\";\nimport { SecurityComponent } from \"../settings/security.component\";\nimport { SettingsComponent } from \"../settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"../settings/sponsored-families.component\";\nimport { SponsoringOrgRowComponent } from \"../settings/sponsoring-org-row.component\";\nimport { SubscriptionComponent } from \"../settings/subscription.component\";\nimport { TaxInfoComponent } from \"../settings/tax-info.component\";\nimport { TwoFactorAuthenticatorComponent } from \"../settings/two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"../settings/two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"../settings/two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"../settings/two-factor-recovery.component\";\nimport { TwoFactorSetupComponent } from \"../settings/two-factor-setup.component\";\nimport { TwoFactorVerifyComponent } from \"../settings/two-factor-verify.component\";\nimport { TwoFactorWebAuthnComponent } from \"../settings/two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"../settings/two-factor-yubikey.component\";\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\nimport { UpdateLicenseComponent } from \"../settings/update-license.component\";\nimport { UserBillingHistoryComponent } from \"../settings/user-billing-history.component\";\nimport { UserSubscriptionComponent } from \"../settings/user-subscription.component\";\nimport { VaultTimeoutInputComponent } from \"../settings/vault-timeout-input.component\";\nimport { VerifyEmailComponent } from \"../settings/verify-email.component\";\nimport { GeneratorComponent } from \"../tools/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"../tools/password-generator-history.component\";\nimport { ToolsComponent } from \"../tools/tools.component\";\nimport { AddEditCustomFieldsComponent } from \"../vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"../vault/add-edit.component\";\nimport { AttachmentsComponent } from \"../vault/attachments.component\";\nimport { BulkActionsComponent } from \"../vault/bulk-actions.component\";\nimport { BulkDeleteComponent } from \"../vault/bulk-delete.component\";\nimport { BulkMoveComponent } from \"../vault/bulk-move.component\";\nimport { BulkRestoreComponent } from \"../vault/bulk-restore.component\";\nimport { BulkShareComponent } from \"../vault/bulk-share.component\";\nimport { CollectionsComponent } from \"../vault/collections.component\";\nimport { FolderAddEditComponent } from \"../vault/folder-add-edit.component\";\nimport { OrganizationBadgeModule } from \"../vault/organization-badge/organization-badge.module\";\nimport { ShareComponent } from \"../vault/share.component\";\nimport { VaultFilterModule } from \"../vault/vault-filter/vault-filter.module\";\n\nimport { SharedModule } from \".\";\n\n// Please do not add to this list of declarations - we should refactor these into modules when doing so makes sense until there are none left.\n// If you are building new functionality, please create or extend a feature module instead.\n@NgModule({\n  imports: [\n    SharedModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    OrganizationCreateModule,\n    RegisterFormModule,\n  ],\n  declarations: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptFamilySponsorshipComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    AdjustSubscription,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    BillingSyncApiKeyComponent,\n    BillingSyncKeyComponent,\n    BulkActionsComponent,\n    BulkDeleteComponent,\n    BulkMoveComponent,\n    BulkRestoreComponent,\n    BulkShareComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    ChangePlanComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DeleteOrganizationComponent,\n    DisableSendPolicyComponent,\n    DomainRulesComponent,\n    DownloadLicenseComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    LockComponent,\n    LoginComponent,\n    MasterPasswordPolicyComponent,\n    NavbarComponent,\n    NestedCheckboxComponent,\n    OrganizationSwitcherComponent,\n    OrgAccountComponent,\n    OrgAddEditComponent,\n    OrganizationBillingComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrganizationSubscriptionComponent,\n    OrgAttachmentsComponent,\n    OrgBulkConfirmComponent,\n    OrgBulkRestoreRevokeComponent,\n    OrgBulkRemoveComponent,\n    OrgBulkStatusComponent,\n    OrgCollectionAddEditComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgGroupAddEditComponent,\n    OrgGroupsComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgPeopleComponent,\n    OrgPoliciesComponent,\n    OrgPolicyEditComponent,\n    OrgResetPasswordComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgSettingComponent,\n    OrgToolsComponent,\n    OrgTwoFactorSetupComponent,\n    OrgSubscriptionHiddenComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserAddEditComponent,\n    OrgUserConfirmComponent,\n    OrgUserGroupsComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordGeneratorPolicyComponent,\n    PasswordRepromptComponent,\n    UserVerificationPromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PersonalOwnershipPolicyComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RegisterComponent,\n    RemovePasswordComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SendOptionsPolicyComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SingleOrgPolicyComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    UserBillingHistoryComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n  ],\n  exports: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    AdjustSubscription,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    BulkActionsComponent,\n    BulkDeleteComponent,\n    BulkMoveComponent,\n    BulkRestoreComponent,\n    BulkShareComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    ChangePlanComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DeleteOrganizationComponent,\n    DisableSendPolicyComponent,\n    DomainRulesComponent,\n    DownloadLicenseComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    LockComponent,\n    LoginComponent,\n    MasterPasswordPolicyComponent,\n    NavbarComponent,\n    NestedCheckboxComponent,\n    OrganizationSwitcherComponent,\n    OrgAccountComponent,\n    OrgAddEditComponent,\n    OrganizationBillingComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrganizationSubscriptionComponent,\n    OrgAttachmentsComponent,\n    OrgBulkConfirmComponent,\n    OrgBulkRestoreRevokeComponent,\n    OrgBulkRemoveComponent,\n    OrgBulkStatusComponent,\n    OrgCollectionAddEditComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgGroupAddEditComponent,\n    OrgGroupsComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgPeopleComponent,\n    OrgPoliciesComponent,\n    OrgPolicyEditComponent,\n    OrgResetPasswordComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgSettingComponent,\n    OrgToolsComponent,\n    OrgTwoFactorSetupComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserAddEditComponent,\n    OrgUserConfirmComponent,\n    OrgUserGroupsComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordGeneratorPolicyComponent,\n    PasswordRepromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PersonalOwnershipPolicyComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RegisterComponent,\n    RemovePasswordComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SendOptionsPolicyComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SingleOrgPolicyComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    UserBillingHistoryComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n  ],\n})\nexport class LooseComponentsModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BadgeDirective } from \"./badge.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [BadgeDirective],\n  declarations: [BadgeDirective],\n})\nexport class BadgeModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ButtonDirective } from \"./button.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ButtonDirective],\n  declarations: [ButtonDirective],\n})\nexport class ButtonModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { CalloutComponent } from \"./callout.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [CalloutComponent],\n  declarations: [CalloutComponent],\n})\nexport class CalloutModule {}\n","import { OverlayModule } from \"@angular/cdk/overlay\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { MenuDividerComponent } from \"./menu-divider.component\";\nimport { MenuItemDirective } from \"./menu-item.directive\";\nimport { MenuTriggerForDirective } from \"./menu-trigger-for.directive\";\nimport { MenuComponent } from \"./menu.component\";\n\n@NgModule({\n  imports: [CommonModule, OverlayModule],\n  declarations: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n  exports: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n})\nexport class MenuModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ButtonModule } from \"../button\";\n\nimport { SubmitButtonComponent } from \"./submit-button.component\";\n\n@NgModule({\n  imports: [CommonModule, ButtonModule],\n  exports: [SubmitButtonComponent],\n  declarations: [SubmitButtonComponent],\n})\nexport class SubmitButtonModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitIconComponent } from \"./icon.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitIconComponent],\n  exports: [BitIconComponent],\n})\nexport class IconModule {}\n","import { registerLocaleData } from \"@angular/common\";\nimport localeAf from \"@angular/common/locales/af\";\nimport localeAr from \"@angular/common/locales/ar\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEo from \"@angular/common/locales/eo\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeEu from \"@angular/common/locales/eu\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\n\nregisterLocaleData(localeAf, \"af\");\nregisterLocaleData(localeAr, \"ar\");\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEo, \"eo\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeEu, \"eu\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { DatePipe, CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\nimport { ToastrModule } from \"ngx-toastr\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport {\n  BadgeModule,\n  ButtonModule,\n  CalloutModule,\n  FormFieldModule,\n  SubmitButtonModule,\n  MenuModule,\n  IconModule,\n} from \"@bitwarden/components\";\n\n// Register the locales for the application\nimport \"./locales\";\n\n/**\n * This NgModule should contain the most basic shared directives, pipes, and components. They\n * should be widely used by other modules to be considered for adding to this module. If in doubt\n * do not add to this module.\n *\n * See: https://angular.io/guide/module-types#shared-ngmodules\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    InfiniteScrollModule,\n    JslibModule,\n    ReactiveFormsModule,\n    RouterModule,\n    BadgeModule,\n    ButtonModule,\n    CalloutModule,\n    ToastrModule,\n    BadgeModule,\n    ButtonModule,\n    MenuModule,\n    FormFieldModule,\n    SubmitButtonModule,\n    IconModule,\n  ],\n  exports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    InfiniteScrollModule,\n    JslibModule,\n    ReactiveFormsModule,\n    RouterModule,\n    BadgeModule,\n    ButtonModule,\n    CalloutModule,\n    ToastrModule,\n    BadgeModule,\n    ButtonModule,\n    MenuModule,\n    FormFieldModule,\n    SubmitButtonModule,\n    IconModule,\n  ],\n  providers: [DatePipe],\n  bootstrap: [],\n})\nexport class SharedModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { OrganizationNameBadgeComponent } from \"./organization-name-badge.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationNameBadgeComponent],\n  exports: [OrganizationNameBadgeComponent],\n})\nexport class OrganizationBadgeModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { CollectionFilterComponent } from \"./collection-filter/collection-filter.component\";\nimport { FolderFilterComponent } from \"./folder-filter/folder-filter.component\";\nimport { StatusFilterComponent } from \"./status-filter/status-filter.component\";\nimport { TypeFilterComponent } from \"./type-filter/type-filter.component\";\nimport { VaultFilterService } from \"./vault-filter.service\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [\n    CollectionFilterComponent,\n    FolderFilterComponent,\n    StatusFilterComponent,\n    TypeFilterComponent,\n  ],\n  exports: [\n    SharedModule,\n    CollectionFilterComponent,\n    FolderFilterComponent,\n    StatusFilterComponent,\n    TypeFilterComponent,\n  ],\n  providers: [VaultFilterService],\n})\nexport class VaultFilterSharedModule {}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { DynamicTreeNode } from \"@bitwarden/angular/vault/vault-filter/models/dynamic-tree-node.model\";\nimport { VaultFilterService as BaseVaultFilterService } from \"@bitwarden/angular/vault/vault-filter/services/vault-filter.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collectionResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Injectable()\nexport class VaultFilterService extends BaseVaultFilterService {\n  private _collapsedFilterNodes = new BehaviorSubject<Set<string>>(null);\n  collapsedFilterNodes$: Observable<Set<string>> = this._collapsedFilterNodes.asObservable();\n\n  constructor(\n    stateService: StateService,\n    organizationService: OrganizationService,\n    folderService: FolderService,\n    cipherService: CipherService,\n    collectionService: CollectionService,\n    policyService: PolicyService,\n    private i18nService: I18nService,\n    protected apiService: ApiService\n  ) {\n    super(\n      stateService,\n      organizationService,\n      folderService,\n      cipherService,\n      collectionService,\n      policyService\n    );\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    const nodes = await super.buildCollapsedFilterNodes();\n    this._collapsedFilterNodes.next(nodes);\n    return nodes;\n  }\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await super.storeCollapsedFilterNodes(collapsedFilterNodes);\n    this._collapsedFilterNodes.next(collapsedFilterNodes);\n  }\n\n  async ensureVaultFiltersAreExpanded() {\n    const collapsedFilterNodes = await super.buildCollapsedFilterNodes();\n    if (!collapsedFilterNodes.has(\"vaults\")) {\n      return;\n    }\n    collapsedFilterNodes.delete(\"vaults\");\n    await this.storeCollapsedFilterNodes(collapsedFilterNodes);\n  }\n\n  async buildAdminCollections(organizationId: string) {\n    let result: CollectionView[] = [];\n    const collectionResponse = await this.apiService.getCollections(organizationId);\n    if (collectionResponse?.data != null && collectionResponse.data.length) {\n      const collectionDomains = collectionResponse.data.map(\n        (r: CollectionDetailsResponse) => new Collection(new CollectionData(r))\n      );\n      result = await this.collectionService.decryptMany(collectionDomains);\n    }\n\n    const noneCollection = new CollectionView();\n    noneCollection.name = this.i18nService.t(\"unassigned\");\n    noneCollection.organizationId = organizationId;\n    result.push(noneCollection);\n\n    const nestedCollections = await this.collectionService.getAllNested(result);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: result,\n      nestedList: nestedCollections,\n    });\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { LinkSsoComponent } from \"./organization-filter/link-sso.component\";\nimport { OrganizationFilterComponent } from \"./organization-filter/organization-filter.component\";\nimport { OrganizationOptionsComponent } from \"./organization-filter/organization-options.component\";\nimport { VaultFilterSharedModule } from \"./shared/vault-filter-shared.module\";\nimport { VaultFilterComponent } from \"./vault-filter.component\";\n\n@NgModule({\n  imports: [VaultFilterSharedModule],\n  declarations: [\n    VaultFilterComponent,\n    OrganizationFilterComponent,\n    OrganizationOptionsComponent,\n    LinkSsoComponent,\n  ],\n  exports: [VaultFilterComponent],\n})\nexport class VaultFilterModule {}\n","import { InjectionToken } from \"@angular/core\";\n\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\n\nexport const WINDOW = new InjectionToken<Window>(\"WINDOW\");\nexport const MEMORY_STORAGE = new InjectionToken<AbstractStorageService>(\"MEMORY_STORAGE\");\nexport const SECURE_STORAGE = new InjectionToken<AbstractStorageService>(\"SECURE_STORAGE\");\nexport const STATE_FACTORY = new InjectionToken<StateFactory>(\"STATE_FACTORY\");\nexport const STATE_SERVICE_USE_CACHE = new InjectionToken<boolean>(\"STATE_SERVICE_USE_CACHE\");\nexport const LOGOUT_CALLBACK = new InjectionToken<(expired: boolean, userId?: string) => void>(\n  \"LOGOUT_CALLBACK\"\n);\nexport const LOCKED_CALLBACK = new InjectionToken<() => void>(\"LOCKED_CALLBACK\");\nexport const CLIENT_TYPE = new InjectionToken<boolean>(\"CLIENT_TYPE\");\nexport const LOCALES_DIRECTORY = new InjectionToken<string>(\"LOCALES_DIRECTORY\");\nexport const SYSTEM_LANGUAGE = new InjectionToken<string>(\"SYSTEM_LANGUAGE\");\nexport const LOG_MAC_FAILURES = new InjectionToken<string>(\"LOG_MAC_FAILURES\");\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport class ThemeBuilder implements Theme {\n  get effectiveTheme(): ThemeType {\n    return this.configuredTheme != ThemeType.System ? this.configuredTheme : this.systemTheme;\n  }\n\n  constructor(readonly configuredTheme: ThemeType, readonly systemTheme: ThemeType) {}\n\n  updateSystemTheme(systemTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(this.configuredTheme, systemTheme);\n  }\n\n  updateConfiguredTheme(configuredTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(configuredTheme, this.systemTheme);\n  }\n}\n","import { DOCUMENT } from \"@angular/common\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, filter, fromEvent, Observable } from \"rxjs\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { WINDOW } from \"../injection-tokens\";\n\nimport { Theme } from \"./theme\";\nimport { ThemeBuilder } from \"./themeBuilder\";\nimport { AbstractThemingService } from \"./theming.service.abstraction\";\n\n@Injectable()\nexport class ThemingService implements AbstractThemingService {\n  private _theme = new BehaviorSubject<ThemeBuilder | null>(null);\n  theme$: Observable<Theme> = this._theme.pipe(filter((x) => x !== null));\n\n  constructor(\n    private stateService: StateService,\n    @Inject(WINDOW) private window: Window,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.monitorThemeChanges();\n  }\n\n  async monitorThemeChanges(): Promise<void> {\n    this._theme.next(\n      new ThemeBuilder(await this.stateService.getTheme(), await this.getSystemTheme())\n    );\n    this.monitorConfiguredThemeChanges();\n    this.monitorSystemThemeChanges();\n  }\n\n  updateSystemTheme(systemTheme: ThemeType): void {\n    this._theme.next(this._theme.getValue().updateSystemTheme(systemTheme));\n  }\n\n  async updateConfiguredTheme(theme: ThemeType): Promise<void> {\n    await this.stateService.setTheme(theme);\n    this._theme.next(this._theme.getValue().updateConfiguredTheme(theme));\n  }\n\n  protected monitorConfiguredThemeChanges(): void {\n    this.theme$.subscribe((theme: Theme) => {\n      this.document.documentElement.classList.remove(\n        \"theme_\" + ThemeType.Light,\n        \"theme_\" + ThemeType.Dark,\n        \"theme_\" + ThemeType.Nord,\n        \"theme_\" + ThemeType.SolarizedDark\n      );\n      this.document.documentElement.classList.add(\"theme_\" + theme.effectiveTheme);\n    });\n  }\n\n  // We use a media match query for monitoring the system theme on web and browser, but this doesn't work for electron apps on Linux.\n  // In desktop we override these methods to track systemTheme with the electron renderer instead, which works for all OSs.\n  protected async getSystemTheme(): Promise<ThemeType> {\n    return this.window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? ThemeType.Dark\n      : ThemeType.Light;\n  }\n\n  protected monitorSystemThemeChanges(): void {\n    fromEvent<MediaQueryListEvent>(\n      this.window.matchMedia(\"(prefers-color-scheme: dark)\"),\n      \"change\"\n    ).subscribe((event) => {\n      this.updateSystemTheme(event.matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport abstract class AbstractThemingService {\n  theme$: Observable<Theme>;\n  monitorThemeChanges: () => Promise<void>;\n  updateSystemTheme: (systemTheme: ThemeType) => void;\n  updateConfiguredTheme: (theme: ThemeType) => Promise<void>;\n}\n","import { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { IEncrypted } from \"../interfaces/IEncrypted\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport abstract class AbstractEncryptService {\n  abstract encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString>;\n  abstract encryptToBytes: (\n    plainValue: ArrayBuffer,\n    key?: SymmetricCryptoKey\n  ) => Promise<EncArrayBuffer>;\n  abstract decryptToUtf8: (encString: EncString, key: SymmetricCryptoKey) => Promise<string>;\n  abstract decryptToBytes: (encThing: IEncrypted, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  abstract resolveLegacyKey: (key: SymmetricCryptoKey, encThing: IEncrypted) => SymmetricCryptoKey;\n}\n","import { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\n\nexport abstract class AccountApiService {\n  abstract deleteAccount(request: SecretVerificationRequest): Promise<void>;\n}\n","import { Verification } from \"../../types/verification\";\n\nexport abstract class AccountService {\n  abstract delete(verification: Verification): Promise<any>;\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  logIn: (\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n  getAuthStatus: (userId?: string) => Promise<AuthenticationStatus>;\n}\n","export interface MessageBase {\n  command: string;\n}\n\nexport abstract class BroadcasterService {\n  send: (message: MessageBase, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: MessageBase) => void) => void;\n  unsubscribe: (id: string) => void;\n}\n","import { ServerConfigResponse } from \"@bitwarden/common/models/response/server-config-response\";\n\nexport abstract class ConfigApiServiceAbstraction {\n  get: () => Promise<ServerConfigResponse>;\n}\n","import { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n  scim?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  getScimUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n  isCloud: () => boolean;\n}\n","import { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","import { Folder } from \"@bitwarden/common/models/domain/folder\";\nimport { FolderResponse } from \"@bitwarden/common/models/response/folderResponse\";\n\nexport class FolderApiServiceAbstraction {\n  save: (folder: Folder) => Promise<any>;\n  delete: (id: string) => Promise<any>;\n  get: (id: string) => Promise<FolderResponse>;\n}\n","import { AbstractControl } from \"@angular/forms\";\nexport interface AllValidationErrors {\n  controlName: string;\n  errorName: string;\n}\n\nexport interface FormGroupControls {\n  [key: string]: AbstractControl;\n}\n\nexport abstract class FormValidationErrorsService {\n  getFormValidationErrors: (controls: FormGroupControls) => AllValidationErrors[];\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/importDirectoryRequest\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organizationSsoRequest\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organizationApiKeyRequest\";\nimport { OrganizationCreateRequest } from \"../../models/request/organizationCreateRequest\";\nimport { OrganizationKeysRequest } from \"../../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organizationUpgradeRequest\";\nimport { PaymentRequest } from \"../../models/request/paymentRequest\";\nimport { SeatRequest } from \"../../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\nimport { StorageRequest } from \"../../models/request/storageRequest\";\nimport { VerifyBankRequest } from \"../../models/request/verifyBankRequest\";\nimport { ApiKeyResponse } from \"../../models/response/apiKeyResponse\";\nimport { BillingResponse } from \"../../models/response/billingResponse\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organizationSsoResponse\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organizationApiKeyInformationResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organizationSubscriptionResponse\";\nimport { PaymentResponse } from \"../../models/response/paymentResponse\";\nimport { TaxInfoResponse } from \"../../models/response/taxInfoResponse\";\n\nexport class OrganizationApiServiceAbstraction {\n  get: (id: string) => Promise<OrganizationResponse>;\n  getBilling: (id: string) => Promise<BillingResponse>;\n  getSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getLicense: (id: string, installationId: string) => Promise<unknown>;\n  getAutoEnrollStatus: (identifier: string) => Promise<OrganizationAutoEnrollStatusResponse>;\n  create: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  createLicense: (data: FormData) => Promise<OrganizationResponse>;\n  save: (id: string, request: OrganizationUpdateRequest) => Promise<OrganizationResponse>;\n  updatePayment: (id: string, request: PaymentRequest) => Promise<void>;\n  upgrade: (id: string, request: OrganizationUpgradeRequest) => Promise<PaymentResponse>;\n  updateSubscription: (id: string, request: OrganizationSubscriptionUpdateRequest) => Promise<void>;\n  updateSeats: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  updateStorage: (id: string, request: StorageRequest) => Promise<PaymentResponse>;\n  verifyBank: (id: string, request: VerifyBankRequest) => Promise<void>;\n  cancel: (id: string) => Promise<void>;\n  reinstate: (id: string) => Promise<void>;\n  leave: (id: string) => Promise<void>;\n  delete: (id: string, request: SecretVerificationRequest) => Promise<void>;\n  updateLicense: (id: string, data: FormData) => Promise<void>;\n  importDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<void>;\n  getOrCreateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getApiKeyInformation: (\n    id: string,\n    organizationApiKeyType?: OrganizationApiKeyType\n  ) => Promise<ListResponse<OrganizationApiKeyInformationResponse>>;\n  rotateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  updateTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<void>;\n  getKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  updateKeys: (id: string, request: OrganizationKeysRequest) => Promise<OrganizationKeysResponse>;\n  getSso: (id: string) => Promise<OrganizationSsoResponse>;\n  updateSso: (id: string, request: OrganizationSsoRequest) => Promise<OrganizationSsoResponse>;\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: any) => Promise<string>;\n  generatePassphrase: (options: any) => Promise<string>;\n  getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: any\n  ) => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: any) => Promise<any>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","import { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nexport class PolicyApiServiceAbstraction {\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPolicyForOrganization: (policyType: PolicyType, organizationId: string) => Promise<Policy>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  putPolicy: (organizationId: string, type: PolicyType, request: PolicyRequest) => Promise<any>;\n}\n","import { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","import { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport abstract class SettingsService {\n  settings$: Observable<AccountSettingsSettings>;\n\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { StorageOptions } from \"../models/domain/storageOptions\";\n\nexport abstract class AbstractStorageService {\n  abstract get<T>(key: string, options?: StorageOptions): Promise<T>;\n  abstract has(key: string, options?: StorageOptions): Promise<boolean>;\n  abstract save<T>(key: string, obj: T, options?: StorageOptions): Promise<void>;\n  abstract remove(key: string, options?: StorageOptions): Promise<void>;\n}\n\nexport abstract class AbstractCachedStorageService extends AbstractStorageService {\n  abstract getBypassCache<T>(key: string, options?: StorageOptions): Promise<T>;\n}\n","import { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","import { VerifyOTPRequest } from \"@bitwarden/common/models/request/account/verifyOTPRequest\";\n\nexport abstract class UserVerificationApiServiceAbstraction {\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postAccountRequestOTP: () => Promise<void>;\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Five = 5, // Migrate to new storage of encrypted organization keys\n  Six = 6, // Delete account.keys.legacyEtmKey property\n  Latest = Six,\n}\n","export abstract class UsernameGenerationService {\n  generateUsername: (options: any) => Promise<string>;\n  generateWord: (options: any) => Promise<string>;\n  generateSubaddress: (options: any) => Promise<string>;\n  generateCatchall: (options: any) => Promise<string>;\n  generateForwarded: (options: any) => Promise<string>;\n  getOptions: () => Promise<any>;\n  saveOptions: (options: any) => Promise<void>;\n}\n","export abstract class VaultTimeoutService {\n  checkVaultTimeout: () => Promise<void>;\n  lock: (userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n}\n","export abstract class VaultTimeoutSettingsService {\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: (userId?: string) => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<void>;\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/globalState\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/globalState\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","export class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n}\n","import { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CollectionData } from \"../data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../data/eventData\";\nimport { FolderData } from \"../data/folderData\";\nimport { OrganizationData } from \"../data/organizationData\";\nimport { PolicyData } from \"../data/policyData\";\nimport { ProviderData } from \"../data/providerData\";\nimport { SendData } from \"../data/sendData\";\nimport { ServerConfigData } from \"../data/server-config.data\";\nimport { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { SendView } from \"../view/sendView\";\n\nimport { EncString } from \"./encString\";\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { GeneratedPasswordHistory } from \"./generatedPasswordHistory\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n  decryptedSerialized?: string;\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\n// This is a temporary structure to handle migrated `DataEncryptionPair` to\n//  avoid needing a data migration at this stage. It should be replaced with\n//  proper data migrations when `DataEncryptionPair` is deprecated.\nexport class TemporaryDataEncryption<TEncrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders? = new TemporaryDataEncryption<FolderData>();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Map<string, SymmetricCryptoKey>\n  > = new EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Map<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  publicKey?: ArrayBuffer;\n  publicKeySerialized?: string;\n  apiKeyClientSecret?: string;\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  hasPremiumFromOrganization?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  enableGravitars?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: AccountSettingsSettings; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n  serverConfig?: ServerConfigData;\n}\n\nexport type AccountSettingsSettings = {\n  equivalentDomains?: { [id: string]: any };\n};\n\nexport class AccountTokens {\n  accessToken?: string;\n  decodedToken?: any;\n  refreshToken?: string;\n  securityStamp?: string;\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { WindowState } from \"./windowState\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string;\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n\n  constructor(protected twoFactor: TokenRequestTwoFactor, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenRequestTwoFactor) {\n    this.twoFactor = twoFactor;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    if (this.twoFactor.token && this.twoFactor.provider != null) {\n      obj.twoFactorToken = this.twoFactor.token;\n      obj.twoFactorProvider = this.twoFactor.provider;\n      obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n    }\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class ApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { TwoFactorProviderType } from \"../../../enums/twoFactorProviderType\";\n\nexport class TokenRequestTwoFactor {\n  constructor(\n    public provider: TwoFactorProviderType = null,\n    public token: string = null,\n    public remember: boolean = false\n  ) {}\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nimport { AttachmentResponse } from \"./attachmentResponse\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { PasswordHistoryResponse } from \"./passwordHistoryResponse\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nimport { ICaptchaProtectedResponse } from \"./ICaptchaProtectedResponse\";\n\nexport class RegisterResponse extends BaseResponse implements ICaptchaProtectedResponse {\n  captchaBypassToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaBypassToken = this.getResponseProperty(\"CaptchaBypassToken\");\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { BillingInvoiceResponse, BillingTransactionResponse } from \"./billingResponse\";\n\nexport class BillingHistoryResponse extends BaseResponse {\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { BillingSourceResponse } from \"./billingResponse\";\n\nexport class BillingPaymentResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class DeviceVerificationResponse extends BaseResponse {\n  isDeviceVerificationSectionEnabled: boolean;\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.isDeviceVerificationSectionEnabled = this.getResponseProperty(\n      \"IsDeviceVerificationSectionEnabled\"\n    );\n    this.unknownDeviceVerificationEnabled = this.getResponseProperty(\n      \"UnknownDeviceVerificationEnabled\"\n    );\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { GlobalDomainResponse } from \"./globalDomainResponse\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n  installationId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n    this.installationId = this.getResponseProperty(\"InstallationId\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"../api/billingSyncConfigApi\";\nimport { ScimConfigApi } from \"../api/scimConfigApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\n/**API response config types for OrganizationConnectionResponse */\nexport type OrganizationConnectionConfigApis = BillingSyncConfigApi | ScimConfigApi;\n\nexport class OrganizationConnectionResponse<\n  TConfig extends OrganizationConnectionConfigApis\n> extends BaseResponse {\n  id: string;\n  type: OrganizationConnectionType;\n  organizationId: string;\n  enabled: boolean;\n  config: TConfig;\n\n  constructor(response: any, configType: { new (response: any): TConfig }) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const rawConfig = this.getResponseProperty(\"Config\");\n    this.config = rawConfig == null ? null : new configType(rawConfig);\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionResponse } from \"./collectionResponse\";\nimport { ListResponse } from \"./listResponse\";\n\nexport class OrganizationExportResponse extends BaseResponse {\n  collections: ListResponse<CollectionResponse>;\n  ciphers: ListResponse<CipherResponse>;\n\n  constructor(response: any) {\n    super(response);\n    this.collections = this.getResponseProperty(\"Collections\");\n    this.ciphers = this.getResponseProperty(\"Ciphers\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationSponsorshipSyncStatusResponse extends BaseResponse {\n  lastSyncDate?: Date;\n\n  constructor(response: any) {\n    super(response);\n    const lastSyncDate = this.getResponseProperty(\"LastSyncDate\");\n    if (lastSyncDate) {\n      this.lastSyncDate = new Date(lastSyncDate);\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n  manageScim: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n    this.manageScim = this.getResponseProperty(\"ManageScim\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useScim = this.getResponseProperty(\"UseScim\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n    const familySponsorshipLastSyncDateString = this.getResponseProperty(\n      \"FamilySponsorshipLastSyncDate\"\n    );\n    if (familySponsorshipLastSyncDateString) {\n      this.familySponsorshipLastSyncDate = new Date(familySponsorshipLastSyncDateString);\n    }\n    const familySponsorshipValidUntilString = this.getResponseProperty(\n      \"FamilySponsorshipValidUntil\"\n    );\n    if (familySponsorshipValidUntilString) {\n      this.familySponsorshipValidUntil = new Date(familySponsorshipValidUntilString);\n    }\n    this.familySponsorshipToDelete = this.getResponseProperty(\"FamilySponsorshipToDelete\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"./profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"./profileProviderResponse\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premiumPersonally: boolean;\n  premiumFromOrganization: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premiumPersonally = this.getResponseProperty(\"Premium\");\n    this.premiumFromOrganization = this.getResponseProperty(\"PremiumFromOrganization\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n  userCount: number;\n  seats?: number;\n  plan?: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.userCount = this.getResponseProperty(\"UserCount\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.plan = this.getResponseProperty(\"Plan\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../organizationUserBulkPublicKeyResponse\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissionsApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SsoPreValidateResponse extends BaseResponse {\n  token: string;\n\n  constructor(response: any) {\n    super(response);\n    this.token = this.getResponseProperty(\"Token\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionDetailsResponse } from \"./collectionResponse\";\nimport { DomainsResponse } from \"./domainsResponse\";\nimport { FolderResponse } from \"./folderResponse\";\nimport { PolicyResponse } from \"./policyResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","export enum AuthenticationStatus {\n  LoggedOut = 0,\n  Locked = 1,\n  Unlocked = 2,\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  Api = 2,\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../../models/domain/logInCredentials\";\nimport { DeviceRequest } from \"../../models/request/deviceRequest\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\nimport { KeysRequest } from \"../../models/request/keysRequest\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identityTwoFactorResponse\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult>;\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected onSuccessfulLogin(response: IdentityTokenResponse): Promise<void> {\n    // Implemented in subclass if required\n    return null;\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenRequestTwoFactor) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return new TokenRequestTwoFactor(TwoFactorProviderType.Remember, storedTwoFactorToken, false);\n    }\n\n    return new TokenRequestTwoFactor();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    await this.onSuccessfulLogin(response);\n\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { ApiLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class ApiLogInStrategy extends LogInStrategy {\n  tokenRequest: ApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: ApiLogInCredentials) {\n    this.tokenRequest = new ApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captchaProtectedRequest\";\nimport { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { EncryptionType } from \"@bitwarden/common/enums/encryptionType\";\nimport { IEncrypted } from \"@bitwarden/common/interfaces/IEncrypted\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nconst ENC_TYPE_LENGTH = 1;\nconst IV_LENGTH = 16;\nconst MAC_LENGTH = 32;\nconst MIN_DATA_LENGTH = 1;\n\nexport class EncArrayBuffer implements IEncrypted {\n  readonly encryptionType: EncryptionType = null;\n  readonly dataBytes: ArrayBuffer = null;\n  readonly ivBytes: ArrayBuffer = null;\n  readonly macBytes: ArrayBuffer = null;\n\n  constructor(readonly buffer: ArrayBuffer) {\n    const encBytes = new Uint8Array(buffer);\n    const encType = encBytes[0];\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.macBytes = encBytes.slice(\n          ENC_TYPE_LENGTH + IV_LENGTH,\n          ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH\n        ).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH).buffer;\n        break;\n      }\n      case EncryptionType.AesCbc256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        break;\n      }\n      default:\n        this.throwDecryptionError();\n    }\n\n    this.encryptionType = encType;\n  }\n\n  private throwDecryptionError() {\n    throw new Error(\n      \"Error parsing encrypted ArrayBuffer: data is corrupted or has an invalid format.\"\n    );\n  }\n\n  static async fromResponse(response: {\n    arrayBuffer: () => Promise<ArrayBuffer>;\n  }): Promise<EncArrayBuffer> {\n    const buffer = await response.arrayBuffer();\n    if (buffer == null) {\n      throw new Error(\"Cannot create EncArrayBuffer from Response - Response is empty\");\n    }\n    return new EncArrayBuffer(buffer);\n  }\n\n  static fromB64(b64: string) {\n    const buffer = Utils.fromB64ToArray(b64).buffer;\n    return new EncArrayBuffer(buffer);\n  }\n}\n","import { CipherView } from \"../view/cipherView\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipherWithIdRequest\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domainBase\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/loginUri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secureNote\";\nimport { SortedCiphersCache } from \"../models/domain/sortedCiphersCache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { AttachmentView } from \"../models/view/attachmentView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { PasswordHistoryView } from \"../models/view/passwordHistoryView\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    const userId = await this.stateService.getUserId();\n    if ((await this.getDecryptedCipherCache()) != null) {\n      if (\n        this.searchService != null &&\n        (this.searchService().indexedEntityId ?? userId) !== userId\n      ) {\n        await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n      }\n      return await this.getDecryptedCipherCache();\n    }\n\n    const decCiphers: CipherView[] = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<number>[] = [];\n    const ciphers = await this.getAll();\n    ciphers.forEach(async (cipher) => {\n      promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.getLocaleSortingFunction());\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : firstValueFrom(this.settingsService.settings$).then(\n            (settings: AccountSettingsSettings) => {\n              let matches: any[] = [];\n              settings.equivalentDomains.forEach((eqDomain: any) => {\n                if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                  matches = matches.concat(eqDomain);\n                }\n              });\n\n              if (!matches.length) {\n                matches.push(domain);\n              }\n\n              return matches;\n            }\n          );\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n    if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n      const decCiphers: CipherView[] = [];\n      const promises: any[] = [];\n      ciphers.data.forEach((r) => {\n        const data = new CipherData(r);\n        const cipher = new Cipher(data);\n        promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n      });\n      await Promise.all(promises);\n      decCiphers.sort(this.getLocaleSortingFunction());\n      return decCiphers;\n    } else {\n      return [];\n    }\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async saveWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.id == null) {\n      if (cipher.collectionIds != null) {\n        const request = new CipherCreateRequest(cipher);\n        response = await this.apiService.postCipherCreate(request);\n      } else {\n        const request = new CipherRequest(cipher);\n        response = await this.apiService.postCipher(request);\n      }\n      cipher.id = response.id;\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    await this.upsert(encCiphers.map((c) => c.toCipherData()));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(response, cipher.collectionIds);\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData();\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const encBuf = await EncArrayBuffer.fromResponse(attachmentResponse);\n    const decBuf = await this.cryptoService.decryptFromBytes(encBuf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ServerConfigResponse extends BaseResponse {\n  version: string;\n  gitHash: string;\n  server: ThirdPartyServerConfigResponse;\n  environment: EnvironmentServerConfigResponse;\n\n  constructor(response: any) {\n    super(response);\n\n    if (response == null) {\n      return;\n    }\n\n    this.version = this.getResponseProperty(\"Version\");\n    this.gitHash = this.getResponseProperty(\"GitHash\");\n    this.server = new ThirdPartyServerConfigResponse(this.getResponseProperty(\"Server\"));\n    this.environment = new EnvironmentServerConfigResponse(this.getResponseProperty(\"Environment\"));\n  }\n}\n\nexport class EnvironmentServerConfigResponse extends BaseResponse {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.vault = this.getResponseProperty(\"Vault\");\n    this.api = this.getResponseProperty(\"Api\");\n    this.identity = this.getResponseProperty(\"Identity\");\n    this.notifications = this.getResponseProperty(\"Notifications\");\n    this.sso = this.getResponseProperty(\"Sso\");\n  }\n}\n\nexport class ThirdPartyServerConfigResponse extends BaseResponse {\n  name: string;\n  url: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.name = this.getResponseProperty(\"Name\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import {\n  ServerConfigResponse,\n  ThirdPartyServerConfigResponse,\n  EnvironmentServerConfigResponse,\n} from \"../response/server-config-response\";\n\nexport class ServerConfigData {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: string;\n\n  constructor(serverConfigReponse: ServerConfigResponse) {\n    this.version = serverConfigReponse?.version;\n    this.gitHash = serverConfigReponse?.gitHash;\n    this.server = serverConfigReponse?.server\n      ? new ThirdPartyServerConfigData(serverConfigReponse.server)\n      : null;\n    this.utcDate = new Date().toISOString();\n    this.environment = serverConfigReponse?.environment\n      ? new EnvironmentServerConfigData(serverConfigReponse.environment)\n      : null;\n  }\n}\n\nexport class ThirdPartyServerConfigData {\n  name: string;\n  url: string;\n\n  constructor(response: ThirdPartyServerConfigResponse) {\n    this.name = response.name;\n    this.url = response.url;\n  }\n}\n\nexport class EnvironmentServerConfigData {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(response: EnvironmentServerConfigResponse) {\n    this.vault = response.vault;\n    this.api = response.api;\n    this.identity = response.identity;\n    this.notifications = response.notifications;\n    this.sso = response.sso;\n  }\n}\n","import {\n  ServerConfigData,\n  ThirdPartyServerConfigData,\n  EnvironmentServerConfigData,\n} from \"@bitwarden/common/models/data/server-config.data\";\n\nconst dayInMilliseconds = 24 * 3600 * 1000;\nconst eighteenHoursInMilliseconds = 18 * 3600 * 1000;\n\nexport class ServerConfig {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: Date;\n\n  constructor(serverConfigData: ServerConfigData) {\n    this.version = serverConfigData.version;\n    this.gitHash = serverConfigData.gitHash;\n    this.server = serverConfigData.server;\n    this.utcDate = new Date(serverConfigData.utcDate);\n    this.environment = serverConfigData.environment;\n\n    if (this.server?.name == null && this.server?.url == null) {\n      this.server = null;\n    }\n  }\n\n  private getAgeInMilliseconds(): number {\n    return new Date().getTime() - this.utcDate?.getTime();\n  }\n\n  isValid(): boolean {\n    return this.getAgeInMilliseconds() <= dayInMilliseconds;\n  }\n\n  expiresSoon(): boolean {\n    return this.getAgeInMilliseconds() >= eighteenHoursInMilliseconds;\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptedOrganizationKeyData } from \"../../models/data/encryptedOrganizationKeyData\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport abstract class BaseEncryptedOrganizationKey {\n  decrypt: (cryptoService: CryptoService) => Promise<SymmetricCryptoKey>;\n\n  static fromData(data: EncryptedOrganizationKeyData) {\n    switch (data.type) {\n      case \"organization\":\n        return new EncryptedOrganizationKey(data.key);\n\n      case \"provider\":\n        return new ProviderEncryptedOrganizationKey(data.key, data.providerId);\n\n      default:\n        return null;\n    }\n  }\n}\n\nexport class EncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const decValue = await cryptoService.rsaDecrypt(this.key);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"organization\",\n      key: this.key,\n    };\n  }\n}\n\nexport class ProviderEncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string, private providerId: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const providerKey = await cryptoService.getProviderKey(this.providerId);\n    const decValue = await cryptoService.decryptToBytes(new EncString(this.key), providerKey);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"provider\",\n      key: this.key,\n      providerId: this.providerId,\n    };\n  }\n}\n","import * as bigInt from \"big-integer\";\n\nimport { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { BaseEncryptedOrganizationKey } from \"../models/domain/encryptedOrganizationKey\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private encryptService: AbstractEncryptService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[] = [],\n    providerOrgs: ProfileProviderOrganizationResponse[] = []\n  ): Promise<void> {\n    const encOrgKeyData: { [orgId: string]: EncryptedOrganizationKeyData } = {};\n\n    orgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"organization\",\n        key: org.key,\n      };\n    });\n\n    providerOrgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"provider\",\n        providerId: org.providerId,\n        key: org.key,\n      };\n    });\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(encOrgKeyData);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const result: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeyData = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeyData == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId of Object.keys(encOrgKeyData)) {\n      if (result.has(orgId)) {\n        continue;\n      }\n\n      const encOrgKey = BaseEncryptedOrganizationKey.fromData(encOrgKeyData[orgId]);\n      const decOrgKey = await encOrgKey.decrypt(this);\n      result.set(orgId, decOrgKey);\n\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(result);\n    }\n\n    return result;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForUserEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encrypt\n   */\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.encrypt(plainValue, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encryptToBytes\n   */\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    key = await this.getKeyForUserEncryption(key);\n    return this.encryptService.encryptToBytes(plainValue, key);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForUserEncryption(key);\n    return this.encryptService.decryptToBytes(encString, keyForEnc);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToUtf8\n   */\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.decryptToUtf8(encString, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptFromBytes(encBuffer: EncArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuffer == null) {\n      throw new Error(\"No buffer provided for decryption.\");\n    }\n\n    key = await this.getKeyForUserEncryption(key);\n\n    return this.encryptService.decryptToBytes(encBuffer, key);\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // ---HELPERS---\n\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  async getKeyForUserEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    // Legacy support: encryption used to be done with the user key (derived from master password).\n    // Users who have not migrated will have a null encKey and must use the user key instead.\n    return await this.getKey();\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EEFLongWordList.length);\n      hashNumber = hashNumber.divide(EEFLongWordList.length);\n      phrase.push(EEFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/eventView\";\n\nexport class EventExport {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n  installationId: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n    this.installationId = event.installationId;\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class BitwardenFileUploadService {\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { FolderResponse } from \"../response/folderResponse\";\n\nexport class FolderData {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse) {\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keysRequest\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1,\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { OrganizationData } from \"../data/organizationData\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useScim = obj.useScim;\n    this.useResetPassword = obj.useResetPassword;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = obj.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = obj.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = obj.familySponsorshipToDelete;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return (this.isAdmin || this.permissions.accessEventLogs) && this.useEvents;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return (this.isAdmin || this.permissions.manageGroups) && this.useGroups;\n  }\n\n  get canManageSso() {\n    return (this.isAdmin || this.permissions.manageSso) && this.useSso;\n  }\n\n  get canManageScim() {\n    return (this.isAdmin || this.permissions.manageScim) && this.useScim;\n  }\n\n  get canManagePolicies() {\n    return (this.isAdmin || this.permissions.managePolicies) && this.usePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n\n  get canManageBilling() {\n    return this.isOwner && (this.isProviderUser || !this.hasProvider);\n  }\n\n  get hasProvider() {\n    return this.providerId != null || this.providerName != null;\n  }\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/baseResponse\";\nimport { SsoConfigView } from \"../view/ssoConfigView\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: boolean;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationApiKeyInformationResponse extends BaseResponse {\n  keyType: OrganizationApiKeyType;\n\n  constructor(response: any) {\n    super(response);\n    this.keyType = this.getResponseProperty(\"KeyType\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keysResponse\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { PlanResponse } from \"./planResponse\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { OrganizationResponse } from \"./organizationResponse\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscriptionResponse\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\n\nconst DefaultOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: any): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EEFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EEFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: any\n  ): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies: Policy[] =\n      this.policyService == null\n        ? null\n        : await this.policyService.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<any> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    await this.stateService.setDecryptedPasswordGenerationHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policyResponse\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policyData\";\n\nimport Domain from \"./domainBase\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1, // Not used, compile-time support only\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/providerData\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  private static registeredPipeline = false;\n\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private readonly immediateSearchLocales: string[] = [\"zh-CN\", \"zh-TW\", \"ja\", \"ko\", \"vi\"];\n  private readonly defaultSearchableMinLength: number = 2;\n  private searchableMinLength: number = this.defaultSearchableMinLength;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    this.i18nService.locale$.subscribe((locale) => {\n      if (this.immediateSearchLocales.indexOf(locale) !== -1) {\n        this.searchableMinLength = 1;\n      } else {\n        this.searchableMinLength = this.defaultSearchableMinLength;\n      }\n    });\n\n    // Currently have to ensure this is only done a single time. Lunr allows you to register a function\n    // multiple times but they will add a warning message to the console. The way they do that breaks when ran on a service worker.\n    if (!SearchService.registeredPipeline) {\n      SearchService.registeredPipeline = true;\n      //register lunr pipeline function\n      lunr.Pipeline.registerFunction(this.normalizeAccentsPipelineFunction, \"normalizeAccents\");\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    query = SearchService.normalizeSearchQuery(query);\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.pipeline.add(this.normalizeAccentsPipelineFunction);\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", {\n      boost: 10,\n    });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.info(\"Finished search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        c.login &&\n        c.login.hasUris &&\n        c.login.uris.some((loginUri) => loginUri?.uri?.toLowerCase().indexOf(query) > -1)\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLocaleLowerCase());\n    if (query === null) {\n      return sends;\n    }\n    const sendsMatched: SendView[] = [];\n    const lowPriorityMatched: SendView[] = [];\n    sends.forEach((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        sendsMatched.push(s);\n      } else if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        lowPriorityMatched.push(s);\n      } else if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      }\n    });\n    return sendsMatched.concat(lowPriorityMatched);\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n\n  private normalizeAccentsPipelineFunction(token: lunr.Token): any {\n    const searchableFields = [\"name\", \"login.username\", \"subtitle\", \"notes\"];\n    const fields = (token as any).metadata[\"fields\"];\n    const checkFields = fields.every((i: any) => searchableFields.includes(i));\n\n    if (checkFields) {\n      return SearchService.normalizeSearchQuery(token.toString());\n    }\n\n    return token;\n  }\n\n  // Remove accents/diacritics characters from text. This regex is equivalent to the Diacritic unicode property escape, i.e. it will match all diacritic characters.\n  static normalizeSearchQuery(query: string): string {\n    return query?.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n}\n","import { SendFileApi } from \"../api/sendFileApi\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/sendResponse\";\n\nimport { SendFileData } from \"./sendFileData\";\nimport { SendTextData } from \"./sendTextData\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendFile } from \"../domain/sendFile\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { SendText } from \"../domain/sendText\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n}\n","import { SendFileData } from \"../data/sendFileData\";\nimport { SendFileView } from \"../view/sendFileView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/sendTextData\";\nimport { SendTextView } from \"../view/sendTextView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/sendData\";\nimport { SendView } from \"../view/sendView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      [\"id\", \"accessId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    const cryptoService = Utils.getContainerService().getCryptoService();\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profileProviderResponse\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { Account } from \"./account\";\nimport { GlobalState } from \"./globalState\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { LocalData } from \"../models/data/localData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport {\n  Account,\n  AccountData,\n  AccountSettings,\n  AccountSettingsSettings,\n} from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { SendView } from \"../models/view/sendView\";\n\nconst keys = {\n  state: \"state\",\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  accounts = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  private activeAccountSubject = new BehaviorSubject<string>(null);\n  activeAccount$ = this.activeAccountSubject.asObservable();\n\n  private activeAccountUnlockedSubject = new BehaviorSubject<boolean>(false);\n  activeAccountUnlocked$ = this.activeAccountUnlockedSubject.asObservable();\n\n  private hasBeenInited = false;\n  private isRecoveredSession = false;\n\n  private accountDiskCache = new Map<string, TAccount>();\n\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected memoryStorageService: AbstractStorageService,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    // If the account gets changed, verify the new account is unlocked\n    this.activeAccountSubject\n      .pipe(\n        concatMap(async (userId) => {\n          if (userId == null && this.activeAccountUnlockedSubject.getValue() == false) {\n            return;\n          } else if (userId == null) {\n            this.activeAccountUnlockedSubject.next(false);\n          }\n\n          // FIXME: This should be refactored into AuthService or a similar service,\n          //  as checking for the existance of the crypto key is a low level\n          //  implementation detail.\n          this.activeAccountUnlockedSubject.next((await this.getCryptoMasterKey()) != null);\n        })\n      )\n      .subscribe();\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.state().then(async (state) => {\n      if (state == null) {\n        await this.setState(new State<TGlobalState, TAccount>(this.createGlobals()));\n      } else {\n        this.isRecoveredSession = true;\n      }\n    });\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    if (this.isRecoveredSession) {\n      return;\n    }\n\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts =\n        (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n      for (const i in state.authenticatedAccounts) {\n        if (i != null) {\n          await this.syncAccountFromDisk(state.authenticatedAccounts[i]);\n        }\n      }\n      const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n      if (storedActiveUser != null) {\n        state.activeUserId = storedActiveUser;\n      }\n      await this.pushAccounts();\n      this.activeAccountSubject.next(state.activeUserId);\n\n      return state;\n    });\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    await this.updateState(async (state) => {\n      state.accounts[userId] = this.createAccount();\n      const diskAccount = await this.getAccountFromDisk({ userId: userId });\n      state.accounts[userId].profile = diskAccount.profile;\n      return state;\n    });\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts.push(account.profile.userId);\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n      state.accounts[account.profile.userId] = account;\n      return state;\n    });\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccountSubject.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    await this.updateState(async (state) => {\n      state.activeUserId = userId;\n      await this.storageService.save(keys.activeUserId, userId);\n      this.activeAccountSubject.next(state.activeUserId);\n      return state;\n    });\n\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === (await this.state())?.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    return (\n      (await this.getHasPremiumPersonally(options)) ||\n      (await this.getHasPremiumFromOrganization(options))\n    );\n  }\n\n  async getHasPremiumPersonally(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.profile?.hasPremiumPersonally;\n  }\n\n  async setHasPremiumPersonally(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumPersonally = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getHasPremiumFromOrganization(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    if (account.profile?.hasPremiumFromOrganization) {\n      return true;\n    }\n\n    // TODO: older server versions won't send the hasPremiumFromOrganization flag, so we're keeping the old logic\n    // for backwards compatibility. It can be removed after everyone has upgraded.\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async setHasPremiumFromOrganization(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumFromOrganization = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototype(SymmetricCryptoKey, SymmetricCryptoKey.fromJSON)\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n\n    if (options.userId == this.activeAccountSubject.getValue()) {\n      const nextValue = value != null;\n\n      // Avoid emitting if we are already unlocked\n      if (this.activeAccountUnlockedSubject.getValue() != nextValue) {\n        this.activeAccountUnlockedSubject.next(nextValue);\n      }\n    }\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.autoKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  async getDecodedToken(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.decodedToken;\n  }\n\n  async setDecodedToken(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.decodedToken = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CipherView, CipherView.fromJSON)\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CollectionView)\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(SymmetricCryptoKey, SymmetricCryptoKey.fromJSON)\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForMap(SymmetricCryptoKey, SymmetricCryptoKey.fromJSON)\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.organizationKeys?.decrypted;\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.organizationKeys.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(EncString)\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(Policy)\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const privateKey = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.privateKey;\n    let result = privateKey?.decrypted;\n    if (result == null && privateKey?.decryptedSerialized != null) {\n      result = Utils.fromByteStringToArray(privateKey.decryptedSerialized);\n    }\n    return result;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.privateKey.decrypted = value;\n    account.keys.privateKey.decryptedSerialized =\n      value == null ? null : Utils.fromBufferToByteString(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForMap(SymmetricCryptoKey, SymmetricCryptoKey.fromJSON)\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.providerKeys?.decrypted;\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.providerKeys.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(SendView)\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.email = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableGravitars(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableGravitars ?? false\n    );\n  }\n\n  async setEnableGravitars(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableGravitars = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CipherData)\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CollectionData)\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(FolderData)\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<{ [orgId: string]: EncryptedOrganizationKeyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(PolicyData)\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(SendData)\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  @withPrototype(EnvironmentUrls)\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if ((await this.state())?.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(EventData)\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<{ [cipherId: string]: LocalData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n\n  async setLocalData(\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(ProviderData)\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const keys = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys;\n    let result = keys?.publicKey;\n    if (result == null && keys?.publicKeySerialized != null) {\n      result = Utils.fromByteStringToArray(keys.publicKeySerialized);\n    }\n    return result;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.publicKey = value;\n    account.keys.publicKeySerialized = value == null ? null : Utils.fromBufferToByteString(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getSettings(options?: StorageOptions): Promise<AccountSettingsSettings> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: AccountSettingsSettings, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async setServerConfig(value: ServerConfigData, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.serverConfig = value;\n    return await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getServerConfig(options: StorageOptions): Promise<ServerConfigData> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.serverConfig;\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = await this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected async getGlobalsFromMemory(): Promise<TGlobalState> {\n    return (await this.state()).globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected async saveGlobalsToMemory(globals: TGlobalState): Promise<void> {\n    await this.updateState(async (state) => {\n      state.globals = globals;\n      return state;\n    });\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = await this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async getAccountFromMemory(options: StorageOptions): Promise<TAccount> {\n    return await this.state().then(async (state) => {\n      if (state.accounts == null) {\n        return null;\n      }\n      return state.accounts[await this.getUserIdFromMemory(options)];\n    });\n  }\n\n  protected async getUserIdFromMemory(options: StorageOptions): Promise<string> {\n    return await this.state().then((state) => {\n      return options?.userId != null\n        ? state.accounts[options.userId]?.profile?.userId\n        : state.activeUserId;\n    });\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && (await this.state())?.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.get(options.userId);\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.set(options.userId, account);\n    }\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(options.userId);\n    }\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      await this.updateState((state) => {\n        return new Promise((resolve) => {\n          state.accounts[account.profile.userId] = account;\n          resolve(state);\n        });\n      });\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<AccountSettings>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    await this.state().then((state) => {\n      if (state.accounts == null || Object.keys(state.accounts).length < 1) {\n        this.accounts.next(null);\n        return;\n      }\n\n      this.accounts.next(state.accounts);\n    });\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected async defaultInMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Memory,\n      userId: (await this.state()).activeUserId,\n    };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: (await this.state())?.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected async removeAccountFromMemory(userId: string = null): Promise<void> {\n    await this.updateState(async (state) => {\n      userId = userId ?? state.activeUserId;\n      delete state.accounts[userId];\n\n      if (this.useAccountCache) {\n        this.accountDiskCache.delete(userId);\n      }\n\n      return state;\n    });\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in (await this.state())?.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        await this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected async clearDecryptedDataForActiveUser(): Promise<void> {\n    await this.updateState(async (state) => {\n      const userId = state?.activeUserId;\n      if (userId != null && state?.accounts[userId]?.data != null) {\n        state.accounts[userId].data = new AccountData();\n      }\n\n      return state;\n    });\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string): Promise<void> {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts = state.authenticatedAccounts.filter((id) => id !== userId);\n\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n\n      return state;\n    });\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    const accounts = (await this.state())?.accounts;\n    if (accounts == null || Object.keys(accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? await this.defaultInMemoryOptions()\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n\n  protected state(): Promise<State<TGlobalState, TAccount>> {\n    return this.memoryStorageService.get<State<TGlobalState, TAccount>>(keys.state);\n  }\n\n  private async setState(state: State<TGlobalState, TAccount>): Promise<void> {\n    await this.memoryStorageService.save(keys.state, state);\n  }\n\n  protected async updateState(\n    stateUpdater: (state: State<TGlobalState, TAccount>) => Promise<State<TGlobalState, TAccount>>\n  ) {\n    await this.state().then(async (state) => {\n      const updatedState = await stateUpdater(state);\n      if (updatedState == null) {\n        throw new Error(\"Attempted to update state to null value\");\n      }\n\n      await this.setState(updatedState);\n    });\n  }\n}\n\nexport function withPrototype<T>(\n  constructor: new (...args: any[]) => T,\n  converter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<T> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          return result == null ||\n            result.constructor.name === constructor.prototype.constructor.name\n            ? converter(result as T)\n            : converter(\n                Object.create(constructor.prototype, Object.getOwnPropertyDescriptors(result)) as T\n              );\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForArrayMembers<T>(\n  memberConstructor: new (...args: any[]) => T,\n  memberConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T[]> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any[]> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (!(result instanceof Array)) {\n            throw new Error(\n              `Attempted to retrieve non array type from state as an array for method ${String(\n                propertyKey\n              )}`\n            );\n          } else {\n            return result.map((r) => {\n              return r == null ||\n                r.constructor.name === memberConstructor.prototype.constructor.name\n                ? memberConverter(r)\n                : memberConverter(\n                    Object.create(memberConstructor.prototype, Object.getOwnPropertyDescriptors(r))\n                  );\n            });\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForObjectValues<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<{ [key: string]: T }> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<{ [key: string]: T }> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else {\n            for (const [key, val] of Object.entries(result)) {\n              result[key] =\n                val == null || val.constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(val)\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(val)\n                      )\n                    );\n            }\n\n            return result as { [key: string]: T };\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForMap<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<Map<string, T>> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (result instanceof Map) {\n            return result;\n          } else {\n            for (const key in Object.keys(result)) {\n              result[key] =\n                result[key] == null ||\n                result[key].constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(result[key])\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(result[key])\n                      )\n                    );\n            }\n            return new Map<string, T>(Object.entries(result));\n          }\n        });\n      },\n    };\n  };\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    const storedToken = await this.stateService.getDecodedToken();\n    if (token === null && storedToken != null) {\n      return storedToken;\n    }\n\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountSettings, AccountSettingsSettings } from \"../models/domain/account\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableGravatars: \"enableGravatars\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n        case StateVersion.Four: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom4To5(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Five);\n          break;\n        }\n        case StateVersion.Five: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom5To6(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Six);\n          break;\n        }\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      enableGravitars:\n        (await this.get<boolean>(v1Keys.enableGravatars)) ??\n        defaultAccount.settings.enableGravitars,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      },\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings:\n        userId == null\n          ? null\n          : await this.get<AccountSettingsSettings>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateAccountFrom4To5(account: TAccount): Promise<TAccount> {\n    const encryptedOrgKeys = account.keys?.organizationKeys?.encrypted;\n    if (encryptedOrgKeys != null) {\n      for (const [orgId, encKey] of Object.entries(encryptedOrgKeys)) {\n        encryptedOrgKeys[orgId] = {\n          type: \"organization\",\n          key: encKey as unknown as string, // Account v4 does not reflect the current account model so we have to cast\n        };\n      }\n    }\n\n    return account;\n  }\n\n  protected async migrateAccountFrom5To6(account: TAccount): Promise<TAccount> {\n    delete (account as any).keys?.legacyEtmKey;\n    return account;\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n\n  protected async setCurrentStateVersion(newVersion: StateVersion): Promise<void> {\n    const globals = await this.getGlobals();\n    globals.stateVersion = newVersion;\n    await this.set(keys.global, globals);\n  }\n\n  protected async getAuthenticatedAccounts(): Promise<TAccount[]> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    return Promise.all(authenticatedUserIds.map((id) => this.get<TAccount>(id)));\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { ProfileOrganizationResponse } from \"../response/profileOrganizationResponse\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useScim = response.useScim;\n    this.useResetPassword = response.useResetPassword;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = response.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = response.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = response.familySponsorshipToDelete;\n  }\n}\n","import { Subject } from \"rxjs\";\n\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderApiServiceAbstraction } from \"../../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { OrganizationService } from \"../../abstractions/organization.service\";\nimport { InternalPolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { ProviderService } from \"../../abstractions/provider.service\";\nimport { SendService } from \"../../abstractions/send.service\";\nimport { SettingsService } from \"../../abstractions/settings.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../../abstractions/sync/sync.service.abstraction\";\nimport { sequentialize } from \"../../misc/sequentialize\";\nimport { CipherData } from \"../../models/data/cipherData\";\nimport { CollectionData } from \"../../models/data/collectionData\";\nimport { FolderData } from \"../../models/data/folderData\";\nimport { OrganizationData } from \"../../models/data/organizationData\";\nimport { PolicyData } from \"../../models/data/policyData\";\nimport { ProviderData } from \"../../models/data/providerData\";\nimport { SendData } from \"../../models/data/sendData\";\nimport { CipherResponse } from \"../../models/response/cipherResponse\";\nimport { CollectionDetailsResponse } from \"../../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../../models/response/domainsResponse\";\nimport { FolderResponse } from \"../../models/response/folderResponse\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../models/response/notificationResponse\";\nimport { PolicyResponse } from \"../../models/response/policyResponse\";\nimport { ProfileResponse } from \"../../models/response/profileResponse\";\nimport { SendResponse } from \"../../models/response/sendResponse\";\nimport { SyncEventArgs } from \"../../types/syncEventArgs\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  private _sync = new Subject<SyncEventArgs>();\n\n  sync$ = this._sync.asObservable();\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: InternalFolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: InternalPolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    private folderApiService: FolderApiServiceAbstraction,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(response.ciphers);\n      await this.syncSends(response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.folderApiService.get(notification.id);\n          if (remoteFolder != null) {\n            await this.folderService.upsert(new FolderData(remoteFolder));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getFullCipherDetails(notification.id);\n          if (remoteCipher != null) {\n            await this.cipherService.upsert(new CipherData(remoteCipher));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            await this.sendService.upsert(new SendData(remoteSend));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n    this._sync.next({ status: \"Started\" });\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    this._sync.next({ status: successfully ? \"SuccessfullyCompleted\" : \"UnsuccessfullyCompleted\" });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setHasPremiumPersonally(response.premiumPersonally);\n    await this.stateService.setHasPremiumFromOrganization(response.premiumFromOrganization);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.save(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class AnonAddyForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    if (options.anonaddy?.domain == null || options.anonaddy.domain === \"\") {\n      throw \"Invalid AnonAddy domain.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://app.anonaddy.com/api/v1/aliases\";\n    requestInit.body = JSON.stringify({\n      domain: options.anonaddy.domain,\n      description:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.data?.email;\n    }\n    if (response.status === 401) {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    throw \"Unknown AnonAddy error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class DuckDuckGoForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://quack.duckduckgo.com/api/email/addresses\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      if (json.address) {\n        return `${json.address}@duck.com`;\n      }\n    } else if (response.status === 401) {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    throw \"Unknown DuckDuckGo error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class FastmailForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Fastmail API token.\";\n    }\n\n    const accountId = await this.getAccountId(apiService, options);\n    if (accountId == null || accountId === \"\") {\n      throw \"Unable to obtain Fastmail masked email account ID.\";\n    }\n\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://api.fastmail.com/jmap/api/\";\n    requestInit.body = JSON.stringify({\n      using: [\"https://www.fastmail.com/dev/maskedemail\", \"urn:ietf:params:jmap:core\"],\n      methodCalls: [\n        [\n          \"MaskedEmail/set\",\n          {\n            accountId: accountId,\n            create: {\n              \"new-masked-email\": {\n                state: \"enabled\",\n                description: \"\",\n                url: options.website,\n                emailPrefix: options.fastmail.prefix,\n              },\n            },\n          },\n          \"0\",\n        ],\n      ],\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (\n        json.methodResponses != null &&\n        json.methodResponses.length > 0 &&\n        json.methodResponses[0].length > 0\n      ) {\n        if (json.methodResponses[0][0] === \"MaskedEmail/set\") {\n          if (json.methodResponses[0][1]?.created?.[\"new-masked-email\"] != null) {\n            return json.methodResponses[0][1]?.created?.[\"new-masked-email\"]?.email;\n          }\n          if (json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"] != null) {\n            throw (\n              \"Fastmail error: \" +\n              json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"]?.description\n            );\n          }\n        } else if (json.methodResponses[0][0] === \"error\") {\n          throw \"Fastmail error: \" + json.methodResponses[0][1]?.description;\n        }\n      }\n    }\n    if (response.status === 401 || response.status === 403) {\n      throw \"Invalid Fastmail API token.\";\n    }\n    throw \"Unknown Fastmail error occurred.\";\n  }\n\n  private async getAccountId(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      method: \"GET\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n      }),\n    };\n    const url = \"https://api.fastmail.com/.well-known/jmap\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (json.primaryAccounts != null) {\n        return json.primaryAccounts[\"https://www.fastmail.com/dev/maskedemail\"];\n      }\n    }\n    return null;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class FirefoxRelayForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Token \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://relay.firefox.com/api/v1/relayaddresses/\";\n    requestInit.body = JSON.stringify({\n      enabled: true,\n      generated_for: options.website,\n      description:\n        (options.website != null ? options.website + \" - \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.full_address;\n    }\n    if (response.status === 401) {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    throw \"Unknown Firefox Relay error occurred.\";\n  }\n}\n","export class ForwarderOptions {\n  apiKey: string;\n  website: string;\n  fastmail = new FastmailForwarderOptions();\n  anonaddy = new AnonAddyForwarderOptions();\n}\n\nexport class FastmailForwarderOptions {\n  prefix: string;\n}\n\nexport class AnonAddyForwarderOptions {\n  domain: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class SimpleLoginForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authentication: options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    let url = \"https://app.simplelogin.io/api/alias/random/new\";\n    if (options.website != null) {\n      url += \"?hostname=\" + options.website;\n    }\n    requestInit.body = JSON.stringify({\n      note:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json.alias;\n    }\n    if (response.status === 401) {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    try {\n      const json = await response.json();\n      if (json?.error != null) {\n        throw \"SimpleLogin error:\" + json.error;\n      }\n    } catch {\n      // Do nothing...\n    }\n    throw \"Unknown SimpleLogin error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { UsernameGenerationService as BaseUsernameGenerationService } from \"../abstractions/usernameGeneration.service\";\nimport { AnonAddyForwarder } from \"../emailForwarders/anonAddyForwarder\";\nimport { DuckDuckGoForwarder } from \"../emailForwarders/duckDuckGoForwarder\";\nimport { FastmailForwarder } from \"../emailForwarders/fastmailForwarder\";\nimport { FirefoxRelayForwarder } from \"../emailForwarders/firefoxRelayForwarder\";\nimport { Forwarder } from \"../emailForwarders/forwarder\";\nimport { ForwarderOptions } from \"../emailForwarders/forwarderOptions\";\nimport { SimpleLoginForwarder } from \"../emailForwarders/simpleLoginForwarder\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\n\nconst DefaultOptions = {\n  type: \"word\",\n  wordCapitalize: true,\n  wordIncludeNumber: true,\n  subaddressType: \"random\",\n  catchallType: \"random\",\n  forwardedService: \"simplelogin\",\n  forwardedAnonAddyDomain: \"anonaddy.me\",\n};\n\nexport class UsernameGenerationService implements BaseUsernameGenerationService {\n  constructor(\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  generateUsername(options: any): Promise<string> {\n    if (options.type === \"catchall\") {\n      return this.generateCatchall(options);\n    } else if (options.type === \"subaddress\") {\n      return this.generateSubaddress(options);\n    } else if (options.type === \"forwarded\") {\n      return this.generateForwarded(options);\n    } else {\n      return this.generateWord(options);\n    }\n  }\n\n  async generateWord(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.wordCapitalize == null) {\n      o.wordCapitalize = true;\n    }\n    if (o.wordIncludeNumber == null) {\n      o.wordIncludeNumber = true;\n    }\n\n    const wordIndex = await this.cryptoService.randomNumber(0, EEFLongWordList.length - 1);\n    let word = EEFLongWordList[wordIndex];\n    if (o.wordCapitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    if (o.wordIncludeNumber) {\n      const num = await this.cryptoService.randomNumber(1, 9999);\n      word = word + this.zeroPad(num.toString(), 4);\n    }\n    return word;\n  }\n\n  async generateSubaddress(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    const subaddressEmail = o.subaddressEmail;\n    if (subaddressEmail == null || subaddressEmail.length < 3) {\n      return o.subaddressEmail;\n    }\n    const atIndex = subaddressEmail.indexOf(\"@\");\n    if (atIndex < 1 || atIndex >= subaddressEmail.length - 1) {\n      return subaddressEmail;\n    }\n    if (o.subaddressType == null) {\n      o.subaddressType = \"random\";\n    }\n\n    const emailBeginning = subaddressEmail.substr(0, atIndex);\n    const emailEnding = subaddressEmail.substr(atIndex + 1, subaddressEmail.length);\n\n    let subaddressString = \"\";\n    if (o.subaddressType === \"random\") {\n      subaddressString = await this.randomString(8);\n    } else if (o.subaddressType === \"website-name\") {\n      subaddressString = o.website;\n    }\n    return emailBeginning + \"+\" + subaddressString + \"@\" + emailEnding;\n  }\n\n  async generateCatchall(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.catchallDomain == null || o.catchallDomain === \"\") {\n      return null;\n    }\n    if (o.catchallType == null) {\n      o.catchallType = \"random\";\n    }\n\n    let startString = \"\";\n    if (o.catchallType === \"random\") {\n      startString = await this.randomString(8);\n    } else if (o.catchallType === \"website-name\") {\n      startString = o.website;\n    }\n    return startString + \"@\" + o.catchallDomain;\n  }\n\n  async generateForwarded(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.forwardedService == null) {\n      return null;\n    }\n\n    let forwarder: Forwarder = null;\n    const forwarderOptions = new ForwarderOptions();\n    forwarderOptions.website = o.website;\n    if (o.forwardedService === \"simplelogin\") {\n      forwarder = new SimpleLoginForwarder();\n      forwarderOptions.apiKey = o.forwardedSimpleLoginApiKey;\n    } else if (o.forwardedService === \"anonaddy\") {\n      forwarder = new AnonAddyForwarder();\n      forwarderOptions.apiKey = o.forwardedAnonAddyApiToken;\n      forwarderOptions.anonaddy.domain = o.forwardedAnonAddyDomain;\n    } else if (o.forwardedService === \"firefoxrelay\") {\n      forwarder = new FirefoxRelayForwarder();\n      forwarderOptions.apiKey = o.forwardedFirefoxApiToken;\n    } else if (o.forwardedService === \"fastmail\") {\n      forwarder = new FastmailForwarder();\n      forwarderOptions.apiKey = o.forwardedFastmailApiToken;\n    } else if (o.forwardedService === \"duckduckgo\") {\n      forwarder = new DuckDuckGoForwarder();\n      forwarderOptions.apiKey = o.forwardedDuckDuckGoToken;\n    }\n\n    if (forwarder == null) {\n      return null;\n    }\n\n    return forwarder.generate(this.apiService, forwarderOptions);\n  }\n\n  async getOptions(): Promise<any> {\n    let options = await this.stateService.getUsernameGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setUsernameGenerationOptions(options);\n    return options;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setUsernameGenerationOptions(options);\n  }\n\n  private async randomString(length: number) {\n    let str = \"\";\n    const charSet = \"abcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < length; i++) {\n      const randomCharIndex = await this.cryptoService.randomNumber(0, charSet.length - 1);\n      str += charSet.charAt(randomCharIndex);\n    }\n    return str;\n  }\n\n  // ref: https://stackoverflow.com/a/10073788\n  private zeroPad(number: string, width: number) {\n    return number.length >= width\n      ? number\n      : new Array(width - number.length + 1).join(\"0\") + number;\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      this.messagingService.send(\"authBlocked\", { url: routerState.url });\n      return false;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      return this.router.createUrlTree([\"lock\"], { queryParams: { promptBiometric: true } });\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      return this.router.createUrlTree([\"/remove-password\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class LockGuard implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return true;\n    }\n\n    const redirectUrl =\n      authStatus === AuthenticationStatus.LoggedOut ? this.loginpage : this.homepage;\n\n    return this.router.createUrlTree([redirectUrl]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class UnauthGuard implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return true;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"lock\"]);\n    }\n\n    return this.router.createUrlTree([this.homepage]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"@bitwarden/common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import {\n  BroadcasterService as BroadcasterServiceAbstraction,\n  MessageBase,\n} from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: MessageBase) => void> = new Map<\n    string,\n    (message: MessageBase) => void\n  >();\n\n  send(message: MessageBase, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: MessageBase) => void) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationComponent for any other situation where you need to verify the user's identity.\n */\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\nimport { ModalService } from \"./modal.service\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationService for any other situation where you need to verify the user's identity.\n */\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { ThemingService } from \"@bitwarden/angular/services/theming/theming.service\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { AbstractEncryptService } from \"@bitwarden/common/abstractions/abstractEncrypt.service\";\nimport { AccountApiService as AccountApiServiceAbstraction } from \"@bitwarden/common/abstractions/account/account-api.service.abstraction\";\nimport { AccountService as AccountServiceAbstraction } from \"@bitwarden/common/abstractions/account/account.service.abstraction\";\nimport { ApiService as ApiServiceAbstraction } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"@bitwarden/common/abstractions/collection.service\";\nimport { ConfigApiServiceAbstraction } from \"@bitwarden/common/abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"@bitwarden/common/abstractions/config/config.service.abstraction\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport {\n  FolderService as FolderServiceAbstraction,\n  InternalFolderService,\n} from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FormValidationErrorsService as FormValidationErrorsServiceAbstraction } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport {\n  PolicyService as PolicyServiceAbstraction,\n  InternalPolicyService,\n} from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService as ProviderServiceAbstraction } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService as TokenServiceAbstraction } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationApiServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { Account } from \"@bitwarden/common/models/domain/account\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/globalState\";\nimport { AccountApiService } from \"@bitwarden/common/services/account/account-api.service\";\nimport { AccountService } from \"@bitwarden/common/services/account/account.service\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\nimport { AuditService } from \"@bitwarden/common/services/audit.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/services/collection.service\";\nimport { ConfigApiService } from \"@bitwarden/common/services/config/config-api.service\";\nimport { ConfigService } from \"@bitwarden/common/services/config/config.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { CryptoService } from \"@bitwarden/common/services/crypto.service\";\nimport { EncryptService } from \"@bitwarden/common/services/encrypt.service\";\nimport { EnvironmentService } from \"@bitwarden/common/services/environment.service\";\nimport { EventService } from \"@bitwarden/common/services/event.service\";\nimport { ExportService } from \"@bitwarden/common/services/export.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\nimport { FolderApiService } from \"@bitwarden/common/services/folder/folder-api.service\";\nimport { FolderService } from \"@bitwarden/common/services/folder/folder.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/services/formValidationErrors.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\nimport { NotificationsService } from \"@bitwarden/common/services/notifications.service\";\nimport { OrganizationService } from \"@bitwarden/common/services/organization.service\";\nimport { OrganizationApiService } from \"@bitwarden/common/services/organization/organization-api.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/services/passwordGeneration.service\";\nimport { PolicyApiService } from \"@bitwarden/common/services/policy/policy-api.service\";\nimport { PolicyService } from \"@bitwarden/common/services/policy/policy.service\";\nimport { ProviderService } from \"@bitwarden/common/services/provider.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\nimport { SendService } from \"@bitwarden/common/services/send.service\";\nimport { SettingsService } from \"@bitwarden/common/services/settings.service\";\nimport { StateService } from \"@bitwarden/common/services/state.service\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\nimport { SyncService } from \"@bitwarden/common/services/sync/sync.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\nimport { TotpService } from \"@bitwarden/common/services/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\nimport { UserVerificationApiService } from \"@bitwarden/common/services/userVerification/userVerification-api.service\";\nimport { UserVerificationService } from \"@bitwarden/common/services/userVerification/userVerification.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/services/usernameGeneration.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeoutSettings.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { LockGuard } from \"../guards/lock.guard\";\nimport { UnauthGuard } from \"../guards/unauth.guard\";\n\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport {\n  WINDOW,\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  LOGOUT_CALLBACK,\n  LOCKED_CALLBACK,\n  LOCALES_DIRECTORY,\n  SYSTEM_LANGUAGE,\n  LOG_MAC_FAILURES,\n} from \"./injection-tokens\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { ValidationService } from \"./validation.service\";\n\n@NgModule({\n  declarations: [],\n  providers: [\n    ValidationService,\n    AuthGuard,\n    UnauthGuard,\n    LockGuard,\n    ModalService,\n    { provide: WINDOW, useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    {\n      provide: LOCALES_DIRECTORY,\n      useValue: \"./locales\",\n    },\n    {\n      provide: SYSTEM_LANGUAGE,\n      useFactory: (window: Window) => window.navigator.language,\n      deps: [WINDOW],\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: true,\n    },\n    {\n      provide: LOGOUT_CALLBACK,\n      useFactory:\n        (messagingService: MessagingServiceAbstraction) => (expired: boolean, userId?: string) =>\n          messagingService.send(\"logout\", { expired: expired, userId: userId }),\n      deps: [MessagingServiceAbstraction],\n    },\n    {\n      provide: LOCKED_CALLBACK,\n      useValue: null,\n    },\n    {\n      provide: LOG_MAC_FAILURES,\n      useValue: true,\n    },\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [AbstractStorageService],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: InternalFolderService,\n      useExisting: FolderServiceAbstraction,\n    },\n    {\n      provide: FolderApiServiceAbstraction,\n      useClass: FolderApiService,\n      deps: [FolderServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AccountApiServiceAbstraction,\n      useClass: AccountApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: AccountServiceAbstraction,\n      useClass: AccountService,\n      deps: [\n        AccountApiServiceAbstraction,\n        UserVerificationServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n      ],\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        AbstractEncryptService,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: UsernameGenerationServiceAbstraction,\n      useClass: UsernameGenerationService,\n      deps: [CryptoServiceAbstraction, StateServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useClass: ApiService,\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        AppIdServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useClass: SyncService,\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n        ProviderServiceAbstraction,\n        FolderApiServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutSettingsServiceAbstraction,\n      useClass: VaultTimeoutSettingsService,\n      deps: [\n        CryptoServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useClass: VaultTimeoutService,\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n        VaultTimeoutSettingsServiceAbstraction,\n        LOCKED_CALLBACK,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useClass: StateService,\n      deps: [\n        AbstractStorageService,\n        SECURE_STORAGE,\n        MEMORY_STORAGE,\n        LogService,\n        StateMigrationServiceAbstraction,\n        STATE_FACTORY,\n        STATE_SERVICE_USE_CACHE,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useClass: NotificationsService,\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        LOGOUT_CALLBACK,\n        LogService,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [WINDOW],\n    },\n    {\n      provide: AbstractEncryptService,\n      useClass: EncryptService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, LOG_MAC_FAILURES],\n    },\n    {\n      provide: EventServiceAbstraction,\n      useClass: EventService,\n      deps: [\n        ApiServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction],\n    },\n    {\n      provide: InternalPolicyService,\n      useExisting: PolicyServiceAbstraction,\n    },\n    {\n      provide: PolicyApiServiceAbstraction,\n      useClass: PolicyApiService,\n      deps: [\n        PolicyServiceAbstraction,\n        ApiServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        UserVerificationApiServiceAbstraction,\n      ],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: AbstractThemingService,\n      useClass: ThemingService,\n    },\n    {\n      provide: FormValidationErrorsServiceAbstraction,\n      useClass: FormValidationErrorsService,\n    },\n    {\n      provide: UserVerificationApiServiceAbstraction,\n      useClass: UserVerificationApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: OrganizationApiServiceAbstraction,\n      useClass: OrganizationApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: ConfigServiceAbstraction,\n      useClass: ConfigService,\n      deps: [StateServiceAbstraction, ConfigApiServiceAbstraction],\n    },\n    {\n      provide: ConfigApiServiceAbstraction,\n      useClass: ConfigApiService,\n      deps: [ApiServiceAbstraction],\n    },\n  ],\n})\nexport class JslibServicesModule {}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: AbstractStorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { ApiLogInStrategy } from \"../misc/logInStrategies/apiLogin.strategy\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy ? this.logInStrategy.email : null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  private logInStrategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n  private sessionTimeout: any;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n\n    if (credentials.type === AuthenticationType.Password) {\n      strategy = new PasswordLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this\n      );\n    } else if (credentials.type === AuthenticationType.Sso) {\n      strategy = new SsoLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.keyConnectorService\n      );\n    } else if (credentials.type === AuthenticationType.Api) {\n      strategy = new ApiLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.environmentService,\n        this.keyConnectorService\n      );\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithApiKey(): boolean {\n    return this.logInStrategy instanceof ApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  async getAuthStatus(userId?: string): Promise<AuthenticationStatus> {\n    const isAuthenticated = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!isAuthenticated) {\n      return AuthenticationStatus.LoggedOut;\n    }\n\n    // Keys aren't stored for a device that is locked or logged out\n    // Make sure we're logged in before checking this, otherwise we could mix up those states\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    const hasKeyInMemory = await this.cryptoService.hasKeyInMemory(userId);\n    if (!hasKeyInMemory) {\n      return AuthenticationStatus.Locked;\n    }\n\n    return AuthenticationStatus.Unlocked;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  private saveState(strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { InternalFolderService as InternalFolderServiceAbstraction } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { CipherData } from \"../../models/data/cipherData\";\nimport { FolderData } from \"../../models/data/folderData\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { FolderView } from \"../../models/view/folderView\";\n\nexport class FolderService implements InternalFolderServiceAbstraction {\n  protected _folders: BehaviorSubject<Folder[]> = new BehaviorSubject([]);\n  protected _folderViews: BehaviorSubject<FolderView[]> = new BehaviorSubject([]);\n\n  folders$ = this._folders.asObservable();\n  folderViews$ = this._folderViews.asObservable();\n\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._folders.next([]);\n            this._folderViews.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getEncryptedFolders();\n\n          await this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async clearCache(): Promise<void> {\n    this._folderViews.next([]);\n  }\n\n  // TODO: This should be moved to EncryptService or something\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = this._folders.getValue();\n\n    return folders.find((folder) => folder.id === id);\n  }\n\n  /**\n   * @deprecated Only use in CLI!\n   */\n  async getAllDecryptedFromState(): Promise<FolderView[]> {\n    const data = await this.stateService.getEncryptedFolders();\n    const folders = Object.values(data || {}).map((f) => new Folder(f));\n\n    return this.decryptFolders(folders);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<void> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<void> {\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._folders.next([]);\n      this._folderViews.next([]);\n    }\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  private async updateObservables(foldersMap: { [id: string]: FolderData }) {\n    const folders = Object.values(foldersMap || {}).map((f) => new Folder(f));\n\n    this._folders.next(folders);\n\n    if (await this.cryptoService.hasKey()) {\n      this._folderViews.next(await this.decryptFolders(folders));\n    }\n  }\n\n  private async decryptFolders(folders: Folder[]) {\n    const decryptFolderPromises = folders.map((f) => f.decrypt());\n    const decryptedFolders = await Promise.all(decryptFolderPromises);\n\n    decryptedFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decryptedFolders.push(noneFolder);\n\n    return decryptedFolders;\n  }\n}\n","import { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FolderData } from \"@bitwarden/common/models/data/folderData\";\nimport { Folder } from \"@bitwarden/common/models/domain/folder\";\nimport { FolderRequest } from \"@bitwarden/common/models/request/folderRequest\";\nimport { FolderResponse } from \"@bitwarden/common/models/response/folderResponse\";\n\nexport class FolderApiService implements FolderApiServiceAbstraction {\n  constructor(private folderService: InternalFolderService, private apiService: ApiService) {}\n\n  async save(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.putFolder(folder.id, request);\n    }\n\n    const data = new FolderData(response);\n    await this.folderService.upsert(data);\n  }\n\n  async delete(id: string): Promise<any> {\n    await this.deleteFolder(id);\n    await this.folderService.delete(id);\n  }\n\n  async get(id: string): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  private async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  private deleteFolder(id: string): Promise<any> {\n    return this.apiService.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n}\n","import { AccountApiService as AccountApiServiceAbstraction } from \"@bitwarden/common/abstractions/account/account-api.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\n\nexport class AccountApiService implements AccountApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  deleteAccount(request: SecretVerificationRequest): Promise<void> {\n    return this.apiService.send(\"DELETE\", \"/accounts\", request, true, false);\n  }\n}\n","import { AccountApiService } from \"@bitwarden/common/abstractions/account/account-api.service.abstraction\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\n\nimport { AccountService as AccountServiceAbstraction } from \"../../abstractions/account/account.service.abstraction\";\nimport { Verification } from \"../../types/verification\";\n\nexport class AccountService implements AccountServiceAbstraction {\n  constructor(\n    private accountApiService: AccountApiService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async delete(verification: Verification): Promise<void> {\n    try {\n      const verificationRequest = await this.userVerificationService.buildRequest(verification);\n      await this.accountApiService.deleteAccount(verificationRequest);\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","import { concatMap, Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  protected baseUrl: string;\n  protected webVaultUrl: string;\n  protected apiUrl: string;\n  protected identityUrl: string;\n  protected iconsUrl: string;\n  protected notificationsUrl: string;\n  protected eventsUrl: string;\n  private keyConnectorUrl: string;\n  private scimUrl: string = null;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount$\n      .pipe(\n        concatMap(async () => {\n          await this.setUrlsFromStorage();\n        })\n      )\n      .subscribe();\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  getScimUrl() {\n    if (this.scimUrl != null) {\n      return this.scimUrl + \"/v2\";\n    }\n\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://scim.bitwarden.com/v2\"\n      : this.getWebVaultUrl() + \"/scim/v2\";\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    // scimUrl is not saved to storage\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    // scimUrl cannot be cleared\n    urls.scim = this.formatUrl(urls.scim) ?? this.scimUrl;\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n      // scimUrl is not saved to storage\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    this.scimUrl = urls.scim;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n      scim: this.scimUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n\n  isCloud(): boolean {\n    return [\"https://api.bitwarden.com\", \"https://vault.bitwarden.com/api\"].includes(\n      this.getApiUrl()\n    );\n  }\n}\n","import { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { DeviceRequest } from \"../models/request/deviceRequest\";\nimport { DeviceVerificationRequest } from \"../models/request/deviceVerificationRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationConnectionRequest } from \"../models/request/organizationConnectionRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { RegisterResponse } from \"../models/response/authentication/registerResponse\";\nimport { BillingHistoryResponse } from \"../models/response/billingHistoryResponse\";\nimport { BillingPaymentResponse } from \"../models/response/billingPaymentResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DeviceVerificationResponse } from \"../models/response/deviceVerificationResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organizationConnectionResponse\";\nimport { OrganizationExportResponse } from \"../models/response/organizationExportResponse\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organizationSponsorshipSyncStatusResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SsoPreValidateResponse } from \"../models/response/ssoPreValidateResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  TwoFactorWebAuthnResponse,\n  ChallengeResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport class ApiService implements ApiServiceAbstraction {\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private appIdService: AppIdService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof ApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  async postRegister(request: RegisterRequest): Promise<RegisterResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      true,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n    return new RegisterResponse(r);\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<void> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Account Billing APIs\n\n  async getUserBillingHistory(): Promise<BillingHistoryResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/history\", null, true, true);\n    return new BillingHistoryResponse(r);\n  }\n\n  async getUserBillingPayment(): Promise<BillingPaymentResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/payment-method\", null, true, true);\n    return new BillingPaymentResponse(r);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getFullCipherDetails(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/details\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Organization User APIs\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getOrganizationUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<void> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  revokeOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/revoke\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async revokeManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/revoke\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  restoreOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/restore\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async restoreManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/restore\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, false, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  async getDeviceVerificationSettings(): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/two-factor/get-device-verification-settings\",\n      null,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async putDeviceVerificationSettings(\n    request: DeviceVerificationRequest\n  ): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/two-factor/device-verification-settings\",\n      request,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getCloudCommunicationsEnabled(): Promise<boolean> {\n    const r = await this.send(\"GET\", \"/organizations/connections/enabled\", null, true, true);\n    return r as boolean;\n  }\n\n  async getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"GET\", `/organizations/connections/${id}/${type}`, null, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"POST\", \"/organizations/connections/\", request, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId?: string\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/connections/\" + organizationConnectionId,\n      request,\n      true,\n      true\n    );\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async deleteOrganizationConnection(id: string): Promise<void> {\n    return this.send(\"DELETE\", \"/organizations/connections/\" + id, null, true, false);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getOrganizationExport(organizationId: string): Promise<OrganizationExportResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/export\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationExportResponse(r);\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersion()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<SsoPreValidateResponse> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      const body = await response.json();\n      return new SsoPreValidateResponse(body);\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoredOrgId +\n        \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getSponsorshipSyncStatus(\n    sponsoredOrgId: string\n  ): Promise<OrganizationSponsorshipSyncStatusResponse> {\n    const response = await this.send(\n      \"GET\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/sync-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSponsorshipSyncStatusResponse(response);\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n    const tokenRequest = new ApiTokenRequest(\n      clientId,\n      clientSecret,\n      new TokenRequestTwoFactor(),\n      deviceRequest\n    );\n\n    const response = await this.postIdentityToken(tokenRequest);\n    if (!(response instanceof IdentityTokenResponse)) {\n      throw new Error(\"Invalid response received when refreshing api token\");\n    }\n\n    await this.tokenService.setToken(response.accessToken);\n  }\n\n  async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    if (hasResponse && response.status === 200) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    if (\n      authed &&\n      ((tokenError && response.status === 400) ||\n        response.status === 401 ||\n        response.status === 403)\n    ) {\n      await this.logoutCallback(true);\n      return null;\n    }\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService();\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { Utils } from \"../misc/utils\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  private _settings: BehaviorSubject<AccountSettingsSettings> = new BehaviorSubject({});\n\n  settings$ = this._settings.asObservable();\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._settings.next({});\n            return;\n          }\n\n          const data = await this.stateService.getSettings();\n\n          this._settings.next(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    const settings = this._settings.getValue() ?? {};\n\n    settings.equivalentDomains = equivalentDomains;\n\n    this._settings.next(settings);\n    await this.stateService.setSettings(settings);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._settings.next({});\n    }\n\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { PolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { PolicyType } from \"../../enums/policyType\";\n\nexport class VaultTimeoutSettingsService implements VaultTimeoutSettingsServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n}\n","import { AuthService } from \"../../abstractions/auth.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { SearchService } from \"../../abstractions/search.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private authService: AuthService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (expired: boolean, userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    for (const userId in this.stateService.accounts.getValue()) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.vaultTimeoutSettingsService.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      await this.folderService.clearCache();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(false, userId);\n    }\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    const authStatus = await this.authService.getAuthStatus(userId);\n    if (\n      authStatus === AuthenticationStatus.Locked ||\n      authStatus === AuthenticationStatus.LoggedOut\n    ) {\n      return false;\n    }\n\n    const vaultTimeout = await this.vaultTimeoutSettingsService.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(userId);\n  }\n}\n","import * as papa from \"papaparse\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIdExport as CipherExport } from \"../models/export/cipherWithIdsExport\";\nimport { CollectionWithIdExport as CollectionExport } from \"../models/export/collectionWithIdExport\";\nimport { EventExport } from \"../models/export/eventExport\";\nimport { FolderWithIdExport as FolderExport } from \"../models/export/folderWithIdExport\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { EventView } from \"../models/view/eventView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new EventExport(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      firstValueFrom(this.folderService.folderViews$).then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      firstValueFrom(this.folderService.folders$).then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getOrganizationExport(organizationId).then((exportData) => {\n        const exportPromises: any = [];\n        if (exportData != null) {\n          if (\n            exportData.collections != null &&\n            exportData.collections.data != null &&\n            exportData.collections.data.length > 0\n          ) {\n            exportData.collections.data.forEach((c) => {\n              const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n              exportPromises.push(\n                collection.decrypt().then((decCol) => {\n                  decCollections.push(decCol);\n                })\n              );\n            });\n          }\n          if (\n            exportData.ciphers != null &&\n            exportData.ciphers.data != null &&\n            exportData.ciphers.data.length > 0\n          ) {\n            exportData.ciphers.data\n              .filter((c) => c.deletedDate === null)\n              .forEach((c) => {\n                const cipher = new Cipher(new CipherData(c));\n                exportPromises.push(\n                  cipher.decrypt().then((decCipher) => {\n                    decCiphers.push(decCipher);\n                  })\n                );\n              });\n          }\n        }\n        return Promise.all(exportPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync/sync.service.abstraction\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService,\n    private authService: AuthService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback(true);\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    const authStatus = await this.authService.getAuthStatus();\n    return authStatus >= AuthenticationStatus.Unlocked;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n\n  constructor(win: Window | typeof global) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { EncryptedObject } from \"@bitwarden/common/models/domain/encryptedObject\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { IEncrypted } from \"../interfaces/IEncrypted\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class EncryptService implements AbstractEncryptService {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService,\n    private logMacFailures: boolean\n  ) {}\n\n  async encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async decryptToUtf8(encString: EncString, key: SymmetricCryptoKey): Promise<string> {\n    if (key == null) {\n      throw new Error(\"No key provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encString);\n\n    if (key.macKey != null && encString?.mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (key.encType !== encString.encryptionType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  async decryptToBytes(encThing: IEncrypted, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (encThing == null) {\n      throw new Error(\"Nothing provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encThing);\n\n    if (key.macKey != null && encThing.macBytes == null) {\n      return null;\n    }\n\n    if (key.encType !== encThing.encryptionType) {\n      return null;\n    }\n\n    if (key.macKey != null && encThing.macBytes != null) {\n      const macData = new Uint8Array(encThing.ivBytes.byteLength + encThing.dataBytes.byteLength);\n      macData.set(new Uint8Array(encThing.ivBytes), 0);\n      macData.set(new Uint8Array(encThing.dataBytes), encThing.ivBytes.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        key.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(encThing.macBytes, computedMac);\n      if (!macsMatch) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    const result = await this.cryptoFunctionService.aesDecrypt(\n      encThing.dataBytes,\n      encThing.ivBytes,\n      key.encKey\n    );\n\n    return result ?? null;\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = key;\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private logMacFailed(msg: string) {\n    if (this.logMacFailures) {\n      this.logService.error(msg);\n    }\n  }\n\n  /**\n   * Transform into new key for the old encrypt-then-mac scheme if required, otherwise return the current key unchanged\n   * @param encThing The encrypted object (e.g. encString or encArrayBuffer) that you want to decrypt\n   */\n  resolveLegacyKey(key: SymmetricCryptoKey, encThing: IEncrypted): SymmetricCryptoKey {\n    if (\n      encThing.encryptionType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      return new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n    }\n\n    return key;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { EventService as EventServiceAbstraction } from \"../abstractions/event.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EventType } from \"../enums/eventType\";\nimport { EventData } from \"../models/data/eventData\";\nimport { EventRequest } from \"../models/request/eventRequest\";\n\nexport class EventService implements EventServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private apiService: ApiService,\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false,\n    organizationId: string = null\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    if (organizationId != null) {\n      if (!orgIds.has(organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    event.organizationId = organizationId;\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.uploadEvents();\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      req.organizationId = e.organizationId;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import { OrganizationService } from \"../../abstractions/organization.service\";\nimport { InternalPolicyService as InternalPolicyServiceAbstraction } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/masterPasswordPolicyOptions\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { PolicyResponse } from \"../../models/response/policyResponse\";\n\nexport class PolicyService implements InternalPolicyServiceAbstraction {\n  policyCache: Policy[];\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        // eslint-disable-next-line\n        if (diskPolicies.hasOwnProperty(id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n    let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n    if (policies == null) {\n      policies = await this.getAll(PolicyType.MasterPassword);\n    } else {\n      policies = policies.filter((p) => p.type === PolicyType.MasterPassword);\n    }\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new MasterPasswordPolicyOptions();\n      }\n\n      if (\n        currentPolicy.data.minComplexity != null &&\n        currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n      ) {\n        enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.requireUpper) {\n        enforcedOptions.requireUpper = true;\n      }\n\n      if (currentPolicy.data.requireLower) {\n        enforcedOptions.requireLower = true;\n      }\n\n      if (currentPolicy.data.requireNumbers) {\n        enforcedOptions.requireNumbers = true;\n      }\n\n      if (currentPolicy.data.requireSpecial) {\n        enforcedOptions.requireSpecial = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n    const organizations = await this.organizationService.getAll(userId);\n    let filteredPolicies;\n\n    if (policyFilter != null) {\n      filteredPolicies = policies.filter((p) => p.enabled && policyFilter(p));\n    } else {\n      filteredPolicies = policies.filter((p) => p.enabled);\n    }\n\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.enabled &&\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        !this.isExcemptFromPolicies(o, policyType) &&\n        policySet.has(o.id)\n    );\n  }\n\n  async upsert(policy: PolicyData): Promise<any> {\n    let policies = await this.stateService.getEncryptedPolicies();\n    if (policies == null) {\n      policies = {};\n    }\n\n    policies[policy.id] = policy;\n\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n}\n","import { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nexport class PolicyApiService implements PolicyApiServiceAbstraction {\n  constructor(\n    private policyService: InternalPolicyService,\n    private apiService: ApiService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPolicyForOrganization(policyType: PolicyType, organizationId: string): Promise<Policy> {\n    const org = await this.organizationService.get(organizationId);\n    if (org?.isProviderUser) {\n      const orgPolicies = await this.getPolicies(organizationId);\n      const policy = orgPolicies.data.find((p) => p.organizationId === organizationId);\n\n      if (policy == null) {\n        return null;\n      }\n\n      return new Policy(new PolicyData(policy));\n    }\n\n    const policies = await this.policyService.getAll(policyType);\n    return policies.find((p) => p.organizationId === organizationId);\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.policyService.mapPoliciesFromToken(response);\n    return this.policyService.getMasterPasswordPolicyOptions(policies);\n  }\n\n  async putPolicy(organizationId: string, type: PolicyType, request: PolicyRequest): Promise<any> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    const response = new PolicyResponse(r);\n    const data = new PolicyData(response);\n    await this.policyService.upsert(data);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/sendFile\";\nimport { SendText } from \"../models/domain/sendText\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private logoutCallback: (expired: boolean, userId?: string) => void\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n\n  private handleKeyConnectorError(e: any) {\n    this.logService.error(e);\n    if (this.logoutCallback != null) {\n      this.logoutCallback(false);\n    }\n    throw new Error(\"Key Connector error\");\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"../../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verifyOTPRequest\";\nimport { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\nimport { Verification } from \"../../types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Use it to verify the input collected by UserVerificationComponent.\n */\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private userVerificationApiService: UserVerificationApiServiceAbstraction\n  ) {}\n\n  /**\n   * Create a new request model to be used for server-side verification\n   * @param verification User-supplied verification data (Master Password or OTP)\n   * @param requestClass The request model to create\n   * @param alreadyHashed Whether the master password is already hashed\n   */\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  /**\n   * Used to verify the Master Password client-side, or send the OTP to the server for verification (with no other data)\n   * Generally used for client-side verification only.\n   * @param verification User-supplied verification data (Master Password or OTP)\n   */\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.userVerificationApiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.userVerificationApiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPasswordRequired\"));\n      }\n    }\n  }\n}\n","import { OrganizationService as OrganizationServiceAbstraction } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport class OrganizationService implements OrganizationServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Organization> {\n    const organizations = await this.stateService.getOrganizations();\n    // eslint-disable-next-line\n    if (organizations == null || !organizations.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Organization(organizations[id]);\n  }\n\n  async getByIdentifier(identifier: string): Promise<Organization> {\n    const organizations = await this.getAll();\n    if (organizations == null || organizations.length === 0) {\n      return null;\n    }\n\n    return organizations.find((o) => o.identifier === identifier);\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizations = await this.stateService.getOrganizations({ userId: userId });\n    const response: Organization[] = [];\n    for (const id in organizations) {\n      // eslint-disable-next-line\n      if (organizations.hasOwnProperty(id) && !organizations[id].isProviderUser) {\n        response.push(new Organization(organizations[id]));\n      }\n    }\n    const sortedResponse = response.sort((a, b) => a.name.localeCompare(b.name));\n    return sortedResponse;\n  }\n\n  async save(organizations: { [id: string]: OrganizationData }) {\n    return await this.stateService.setOrganizations(organizations);\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const orgs = await this.getAll();\n    return orgs.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  async hasOrganizations(userId?: string): Promise<boolean> {\n    const organizations = await this.getAll(userId);\n    return organizations.length > 0;\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import { UntypedFormGroup, ValidationErrors } from \"@angular/forms\";\n\nimport {\n  FormGroupControls,\n  FormValidationErrorsService as FormValidationErrorsAbstraction,\n  AllValidationErrors,\n} from \"../abstractions/formValidationErrors.service\";\n\nexport class FormValidationErrorsService implements FormValidationErrorsAbstraction {\n  getFormValidationErrors(controls: FormGroupControls): AllValidationErrors[] {\n    let errors: AllValidationErrors[] = [];\n    Object.keys(controls).forEach((key) => {\n      const control = controls[key];\n      if (control instanceof UntypedFormGroup) {\n        errors = errors.concat(this.getFormValidationErrors(control.controls));\n      }\n\n      const controlErrors: ValidationErrors = controls[key].errors;\n      if (controlErrors !== null) {\n        Object.keys(controlErrors).forEach((keyError) => {\n          errors.push({\n            controlName: key,\n            errorName: keyError,\n          });\n        });\n      }\n    });\n\n    return errors;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verifyOTPRequest\";\n\nexport class UserVerificationApiService implements UserVerificationApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n  async postAccountRequestOTP(): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"../../abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/importDirectoryRequest\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organizationSsoRequest\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organizationApiKeyRequest\";\nimport { OrganizationCreateRequest } from \"../../models/request/organizationCreateRequest\";\nimport { OrganizationKeysRequest } from \"../../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organizationUpgradeRequest\";\nimport { PaymentRequest } from \"../../models/request/paymentRequest\";\nimport { SeatRequest } from \"../../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\nimport { StorageRequest } from \"../../models/request/storageRequest\";\nimport { VerifyBankRequest } from \"../../models/request/verifyBankRequest\";\nimport { ApiKeyResponse } from \"../../models/response/apiKeyResponse\";\nimport { BillingResponse } from \"../../models/response/billingResponse\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organizationSsoResponse\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organizationApiKeyInformationResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organizationSubscriptionResponse\";\nimport { PaymentResponse } from \"../../models/response/paymentResponse\";\nimport { TaxInfoResponse } from \"../../models/response/taxInfoResponse\";\n\nexport class OrganizationApiService implements OrganizationApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  async get(id: string): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getBilling(id: string): Promise<BillingResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/billing\",\n      null,\n      true,\n      true\n    );\n    return new BillingResponse(r);\n  }\n\n  async getSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/subscription\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getLicense(id: string, installationId: string): Promise<unknown> {\n    return this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getAutoEnrollStatus(identifier: string): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  async create(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations\", request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async createLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async save(id: string, request: OrganizationUpdateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async updatePayment(id: string, request: PaymentRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  async upgrade(id: string, request: OrganizationUpgradeRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/upgrade\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/subscription\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async updateSeats(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/seat\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/storage\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async verifyBank(id: string, request: VerifyBankRequest): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/verify-bank\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async cancel(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  async reinstate(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  async leave(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n  }\n\n  async delete(id: string, request: SecretVerificationRequest): Promise<void> {\n    return this.apiService.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n  }\n\n  async updateLicense(id: string, data: FormData): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async importDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/import\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getOrCreateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getApiKeyInformation(\n    id: string,\n    organizationApiKeyType: OrganizationApiKeyType = null\n  ): Promise<ListResponse<OrganizationApiKeyInformationResponse>> {\n    const uri =\n      organizationApiKeyType === null\n        ? \"/organizations/\" + id + \"/api-key-information\"\n        : \"/organizations/\" + id + \"/api-key-information/\" + organizationApiKeyType;\n    const r = await this.apiService.send(\"GET\", uri, null, true, true);\n    return new ListResponse(r, OrganizationApiKeyInformationResponse);\n  }\n\n  async rotateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async updateTaxInfo(id: string, request: OrganizationTaxInfoUpdateRequest): Promise<void> {\n    return this.apiService.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  async getKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async updateKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/keys\",\n      request,\n      true,\n      true\n    );\n    return new OrganizationKeysResponse(r);\n  }\n\n  async getSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async updateSso(id: string, request: OrganizationSsoRequest): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/sso\",\n      request,\n      true,\n      true\n    );\n    return new OrganizationSsoResponse(r);\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { ServerConfig } from \"./server-config\";\n\nexport abstract class ConfigServiceAbstraction {\n  serverConfig$: Observable<ServerConfig | null>;\n}\n","import { BehaviorSubject, concatMap, map, switchMap, timer, EMPTY } from \"rxjs\";\n\nimport { ServerConfigData } from \"@bitwarden/common/models/data/server-config.data\";\n\nimport { ConfigApiServiceAbstraction } from \"../../abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"../../abstractions/config/config.service.abstraction\";\nimport { ServerConfig } from \"../../abstractions/config/server-config\";\nimport { StateService } from \"../../abstractions/state.service\";\n\nexport class ConfigService implements ConfigServiceAbstraction {\n  private _serverConfig = new BehaviorSubject<ServerConfig | null>(null);\n  serverConfig$ = this._serverConfig.asObservable();\n\n  constructor(\n    private stateService: StateService,\n    private configApiService: ConfigApiServiceAbstraction\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        switchMap((unlocked) => {\n          if (!unlocked) {\n            this._serverConfig.next(null);\n            return EMPTY;\n          }\n\n          // Re-fetch the server config every hour\n          return timer(0, 3600 * 1000).pipe(map(() => unlocked));\n        }),\n        concatMap(async (unlocked) => {\n          return unlocked ? await this.buildServerConfig() : null;\n        })\n      )\n      .subscribe((serverConfig) => {\n        this._serverConfig.next(serverConfig);\n      });\n  }\n\n  private async buildServerConfig(): Promise<ServerConfig> {\n    const data = await this.stateService.getServerConfig();\n    const domain = data ? new ServerConfig(data) : null;\n\n    if (domain == null || !domain.isValid() || domain.expiresSoon()) {\n      const value = await this.fetchServerConfig();\n      return value ?? domain;\n    }\n\n    return domain;\n  }\n\n  private async fetchServerConfig(): Promise<ServerConfig> {\n    const response = await this.configApiService.get();\n    const data = new ServerConfigData(response);\n\n    if (data != null) {\n      await this.stateService.setServerConfig(data);\n      return new ServerConfig(data);\n    }\n\n    return null;\n  }\n}\n","import { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ConfigApiServiceAbstraction as ConfigApiServiceAbstraction } from \"@bitwarden/common/abstractions/config/config-api.service.abstraction\";\nimport { ServerConfigResponse } from \"@bitwarden/common/models/response/server-config-response\";\n\nexport class ConfigApiService implements ConfigApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  async get(): Promise<ServerConfigResponse> {\n    const r = await this.apiService.send(\"GET\", \"/config\", null, true, true);\n    return new ServerConfigResponse(r);\n  }\n}\n","import { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\n\nexport class MemoryStorageService implements AbstractStorageService {\n  private store = new Map<string, any>();\n\n  get<T>(key: string): Promise<T> {\n    if (this.store.has(key)) {\n      const obj = this.store.get(key);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string): Promise<boolean> {\n    return this.get(key) != null;\n  }\n\n  save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      return this.remove(key);\n    }\n    this.store.set(key, obj);\n    return Promise.resolve();\n  }\n\n  remove(key: string): Promise<any> {\n    this.store.delete(key);\n    return Promise.resolve();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Injectable()\nexport class BroadcasterMessagingService implements MessagingService {\n  constructor(private broadcasterService: BroadcasterService) {}\n\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    this.broadcasterService.send(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\n\n@Injectable()\nexport class EventService {\n  constructor(private i18nService: I18nService, private policyService: PolicyService) {}\n\n  getDefaultDateFilters() {\n    const d = new Date();\n    const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\n    d.setDate(d.getDate() - 30);\n    const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\n    return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\n  }\n\n  formatDateFilters(filterStart: string, filterEnd: string) {\n    const start: Date = new Date(filterStart);\n    const end: Date = new Date(filterEnd + \":59.999\");\n    if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\n      throw new Error(\"Invalid date range.\");\n    }\n    return [start.toISOString(), end.toISOString()];\n  }\n\n  async getEventInfo(ev: EventResponse, options = new EventOptions()): Promise<EventInfo> {\n    const appInfo = this.getAppInfo(ev.deviceType);\n    const { message, humanReadableMessage } = await this.getEventMessage(ev, options);\n    return {\n      message: message,\n      humanReadableMessage: humanReadableMessage,\n      appIcon: appInfo[0],\n      appName: appInfo[1],\n    };\n  }\n\n  private async getEventMessage(ev: EventResponse, options: EventOptions) {\n    let msg = \"\";\n    let humanReadableMsg = \"\";\n    switch (ev.type) {\n      // User\n      case EventType.User_LoggedIn:\n        msg = humanReadableMsg = this.i18nService.t(\"loggedIn\");\n        break;\n      case EventType.User_ChangedPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"changedPassword\");\n        break;\n      case EventType.User_Updated2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledUpdated2fa\");\n        break;\n      case EventType.User_Disabled2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"disabled2fa\");\n        break;\n      case EventType.User_Recovered2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"recovered2fa\");\n        break;\n      case EventType.User_FailedLogIn:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin\");\n        break;\n      case EventType.User_FailedLogIn2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin2fa\");\n        break;\n      case EventType.User_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedVault\");\n        break;\n      case EventType.User_UpdatedTempPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"updatedMasterPassword\");\n        break;\n      case EventType.User_MigratedKeyToKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"migratedKeyConnector\");\n        break;\n      // Cipher\n      case EventType.Cipher_Created:\n        msg = this.i18nService.t(\"createdItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"createdItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Updated:\n        msg = this.i18nService.t(\"editedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"editedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Deleted:\n        msg = this.i18nService.t(\"permanentlyDeletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"permanentlyDeletedItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_SoftDeleted:\n        msg = this.i18nService.t(\"deletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"deletedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Restored:\n        msg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        break;\n      case EventType.Cipher_AttachmentCreated:\n        msg = this.i18nService.t(\"createdAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"createdAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_AttachmentDeleted:\n        msg = this.i18nService.t(\"deletedAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_Shared:\n        msg = this.i18nService.t(\"movedItemIdToOrg\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"movedItemIdToOrg\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientViewed:\n        msg = this.i18nService.t(\"viewedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledPasswordVisible:\n        msg = this.i18nService.t(\"viewedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledHiddenFieldVisible:\n        msg = this.i18nService.t(\"viewedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientToggledCardCodeVisible:\n        msg = this.i18nService.t(\"viewedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedHiddenField:\n        msg = this.i18nService.t(\"copiedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedPassword:\n        msg = this.i18nService.t(\"copiedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"copiedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientCopiedCardCode:\n        msg = this.i18nService.t(\"copiedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientAutofilled:\n        msg = this.i18nService.t(\"autofilledItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"autofilledItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_UpdatedCollections:\n        msg = this.i18nService.t(\"editedCollectionsForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionsForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      // Collection\n      case EventType.Collection_Created:\n        msg = this.i18nService.t(\"createdCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Updated:\n        msg = this.i18nService.t(\"editedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Deleted:\n        msg = this.i18nService.t(\"deletedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      // Group\n      case EventType.Group_Created:\n        msg = this.i18nService.t(\"createdGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"createdGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Updated:\n        msg = this.i18nService.t(\"editedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Deleted:\n        msg = this.i18nService.t(\"deletedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"deletedGroupId\", this.getShortId(ev.groupId));\n        break;\n      // Org user\n      case EventType.OrganizationUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"invitedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UpdatedGroups:\n        msg = this.i18nService.t(\"editedGroupsForUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedGroupsForUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UnlinkedSso:\n        msg = this.i18nService.t(\"unlinkedSsoUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"unlinkedSsoUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Enroll:\n        msg = this.i18nService.t(\"eventEnrollPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventEnrollPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Withdraw:\n        msg = this.i18nService.t(\"eventWithdrawPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventWithdrawPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_AdminResetPassword:\n        msg = this.i18nService.t(\"eventAdminPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventAdminPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetSsoLink:\n        msg = this.i18nService.t(\"eventResetSsoLink\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventResetSsoLink\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_FirstSsoLogin:\n        msg = this.i18nService.t(\"firstSsoLogin\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"firstSsoLogin\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Revoked:\n        msg = this.i18nService.t(\"revokedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"revokedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Restored:\n        msg = this.i18nService.t(\"restoredUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"restoredUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      // Org\n      case EventType.Organization_Updated:\n        msg = humanReadableMsg = this.i18nService.t(\"editedOrgSettings\");\n        break;\n      case EventType.Organization_PurgedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"purgedOrganizationVault\");\n        break;\n      case EventType.Organization_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedOrganizationVault\");\n        break;\n      case EventType.Organization_VaultAccessed:\n        msg = humanReadableMsg = this.i18nService.t(\"vaultAccessedByProvider\");\n        break;\n      case EventType.Organization_EnabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledSso\");\n        break;\n      case EventType.Organization_DisabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledSso\");\n        break;\n      case EventType.Organization_EnabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledKeyConnector\");\n        break;\n      case EventType.Organization_DisabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledKeyConnector\");\n        break;\n      case EventType.Organization_SponsorshipsSynced:\n        msg = humanReadableMsg = this.i18nService.t(\"sponsorshipsSynced\");\n        break;\n      // Policies\n      case EventType.Policy_Updated: {\n        msg = this.i18nService.t(\"modifiedPolicyId\", this.formatPolicyId(ev));\n\n        const policies = await this.policyService.getAll();\n        const policy = policies.filter((p) => p.id === ev.policyId)[0];\n        let p1 = this.getShortId(ev.policyId);\n        if (policy != null) {\n          p1 = PolicyType[policy.type];\n        }\n\n        humanReadableMsg = this.i18nService.t(\"modifiedPolicyId\", p1);\n        break;\n      }\n      // Provider users:\n      case EventType.ProviderUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"invitedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.providerUserId)\n        );\n        break;\n      case EventType.ProviderUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"removedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderOrganization_Created:\n        msg = this.i18nService.t(\"createdOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Added:\n        msg = this.i18nService.t(\"addedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"addedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Removed:\n        msg = this.i18nService.t(\"removedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_VaultAccessed:\n        msg = this.i18nService.t(\"accessedClientVault\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"accessedClientVault\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      default:\n        break;\n    }\n    return {\n      message: msg === \"\" ? null : msg,\n      humanReadableMessage: humanReadableMsg === \"\" ? null : humanReadableMsg,\n    };\n  }\n\n  private getAppInfo(deviceType: DeviceType): [string, string] {\n    switch (deviceType) {\n      case DeviceType.Android:\n        return [\"bwi-android\", this.i18nService.t(\"mobile\") + \" - Android\"];\n      case DeviceType.iOS:\n        return [\"bwi-apple\", this.i18nService.t(\"mobile\") + \" - iOS\"];\n      case DeviceType.UWP:\n        return [\"bwi-windows\", this.i18nService.t(\"mobile\") + \" - Windows\"];\n      case DeviceType.ChromeExtension:\n        return [\"bwi-chrome\", this.i18nService.t(\"extension\") + \" - Chrome\"];\n      case DeviceType.FirefoxExtension:\n        return [\"bwi-firefox\", this.i18nService.t(\"extension\") + \" - Firefox\"];\n      case DeviceType.OperaExtension:\n        return [\"bwi-opera\", this.i18nService.t(\"extension\") + \" - Opera\"];\n      case DeviceType.EdgeExtension:\n        return [\"bwi-edge\", this.i18nService.t(\"extension\") + \" - Edge\"];\n      case DeviceType.VivaldiExtension:\n        return [\"bwi-puzzle\", this.i18nService.t(\"extension\") + \" - Vivaldi\"];\n      case DeviceType.SafariExtension:\n        return [\"bwi-safari\", this.i18nService.t(\"extension\") + \" - Safari\"];\n      case DeviceType.WindowsDesktop:\n        return [\"bwi-windows\", this.i18nService.t(\"desktop\") + \" - Windows\"];\n      case DeviceType.MacOsDesktop:\n        return [\"bwi-apple\", this.i18nService.t(\"desktop\") + \" - macOS\"];\n      case DeviceType.LinuxDesktop:\n        return [\"bwi-linux\", this.i18nService.t(\"desktop\") + \" - Linux\"];\n      case DeviceType.ChromeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Chrome\"];\n      case DeviceType.FirefoxBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Firefox\"];\n      case DeviceType.OperaBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Opera\"];\n      case DeviceType.SafariBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Safari\"];\n      case DeviceType.VivaldiBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Vivaldi\"];\n      case DeviceType.EdgeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Edge\"];\n      case DeviceType.IEBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - IE\"];\n      case DeviceType.UnknownBrowser:\n        return [\n          \"bwi-globe\",\n          this.i18nService.t(\"webVault\") + \" - \" + this.i18nService.t(\"unknown\"),\n        ];\n      default:\n        return [\"bwi-globe\", this.i18nService.t(\"unknown\")];\n    }\n  }\n\n  private formatCipherId(ev: EventResponse, options: EventOptions) {\n    const shortId = this.getShortId(ev.cipherId);\n    if (ev.organizationId == null || !options.cipherInfo) {\n      return \"<code>\" + shortId + \"</code>\";\n    }\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/vault?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.cipherId\n    );\n    return a.outerHTML;\n  }\n\n  private formatGroupId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.groupId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/groups?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatCollectionId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.collectionId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/collections?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatOrgUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.organizationUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.organizationUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/providers/\" +\n        ev.providerId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.providerUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderOrganizationId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerOrganizationId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\"href\", \"#/providers/\" + ev.providerId + \"/clients?search=\" + shortId);\n    return a.outerHTML;\n  }\n\n  private formatPolicyId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.policyId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/policies?policyId=\" + ev.policyId\n    );\n    return a.outerHTML;\n  }\n\n  private makeAnchor(shortId: string) {\n    const a = document.createElement(\"a\");\n    a.title = this.i18nService.t(\"view\");\n    a.innerHTML = \"<code>\" + shortId + \"</code>\";\n    return a;\n  }\n\n  private getShortId(id: string) {\n    return id?.substring(0, 8);\n  }\n\n  private toDateTimeLocalString(date: Date) {\n    return (\n      date.getFullYear() +\n      \"-\" +\n      this.pad(date.getMonth() + 1) +\n      \"-\" +\n      this.pad(date.getDate()) +\n      \"T\" +\n      this.pad(date.getHours()) +\n      \":\" +\n      this.pad(date.getMinutes())\n    );\n  }\n\n  private pad(num: number) {\n    const norm = Math.floor(Math.abs(num));\n    return (norm < 10 ? \"0\" : \"\") + norm;\n  }\n}\n\nexport class EventInfo {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n}\n\nexport class EventOptions {\n  cipherInfo = true;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"@bitwarden/common/enums/htmlStorageLocation\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storageOptions\";\n\n@Injectable()\nexport class HtmlStorageService implements AbstractStorageService {\n  get defaultOptions(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Session };\n  }\n\n  get<T>(key: string, options: StorageOptions = this.defaultOptions): Promise<T> {\n    let json: string = null;\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        json = window.localStorage.getItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        json = window.sessionStorage.getItem(key);\n        break;\n    }\n\n    if (json != null) {\n      const obj = JSON.parse(json);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string, options: StorageOptions = this.defaultOptions): Promise<boolean> {\n    return (await this.get(key, options)) != null;\n  }\n\n  save(key: string, obj: any, options: StorageOptions = this.defaultOptions): Promise<any> {\n    if (obj == null) {\n      return this.remove(key, options);\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const json = JSON.stringify(obj);\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.setItem(key, json);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.setItem(key, json);\n        break;\n    }\n    return Promise.resolve();\n  }\n\n  remove(key: string, options: StorageOptions = this.defaultOptions): Promise<any> {\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.removeItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.removeItem(key);\n        break;\n    }\n    return Promise.resolve();\n  }\n}\n","import { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\n\nexport class ContainerService {\n  constructor(\n    private cryptoService: CryptoService,\n    private encryptService: AbstractEncryptService\n  ) {}\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  /**\n   * @throws Will throw if CryptoService was not instantiated and provided to the ContainerService constructor\n   */\n  getCryptoService(): CryptoService {\n    if (this.cryptoService == null) {\n      throw new Error(\"ContainerService.cryptoService not initialized.\");\n    }\n    return this.cryptoService;\n  }\n\n  /**\n   * @throws Will throw if EncryptService was not instantiated and provided to the ContainerService constructor\n   */\n  getEncryptService(): AbstractEncryptService {\n    if (this.encryptService == null) {\n      throw new Error(\"ContainerService.encryptService not initialized.\");\n    }\n    return this.encryptService;\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport { WINDOW } from \"@bitwarden/angular/services/injection-tokens\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { AbstractEncryptService } from \"@bitwarden/common/abstractions/abstractEncrypt.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService as EventLoggingServiceAbstraction } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { ContainerService } from \"@bitwarden/common/services/container.service\";\nimport { EventService as EventLoggingService } from \"@bitwarden/common/services/event.service\";\nimport { VaultTimeoutService as VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\n\nimport { I18nService } from \"./i18n.service\";\n\n@Injectable()\nexport class InitService {\n  constructor(\n    @Inject(WINDOW) private win: Window,\n    private environmentService: EnvironmentServiceAbstraction,\n    private notificationsService: NotificationsServiceAbstraction,\n    private vaultTimeoutService: VaultTimeoutServiceAbstraction,\n    private i18nService: I18nServiceAbstraction,\n    private eventLoggingService: EventLoggingServiceAbstraction,\n    private twoFactorService: TwoFactorServiceAbstraction,\n    private stateService: StateServiceAbstraction,\n    private cryptoService: CryptoServiceAbstraction,\n    private themingService: AbstractThemingService,\n    private encryptService: AbstractEncryptService\n  ) {}\n\n  init() {\n    return async () => {\n      await this.stateService.init();\n\n      const urls = process.env.URLS as Urls;\n      urls.base ??= this.win.location.origin;\n      this.environmentService.setUrls(urls);\n\n      setTimeout(() => this.notificationsService.init(), 3000);\n      (this.vaultTimeoutService as VaultTimeoutService).init(true);\n      const locale = await this.stateService.getLocale();\n      await (this.i18nService as I18nService).init(locale);\n      (this.eventLoggingService as EventLoggingService).init(true);\n      this.twoFactorService.init();\n      const htmlEl = this.win.document.documentElement;\n      htmlEl.classList.add(\"locale_\" + this.i18nService.translationLocale);\n      await this.themingService.monitorThemeChanges();\n      const containerService = new ContainerService(this.cryptoService, this.encryptService);\n      containerService.attachToGlobal(this.win);\n    };\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector } from \"@angular/core\";\nimport * as jq from \"jquery\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService as BaseModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Injectable()\nexport class ModalService extends BaseModalService {\n  el: any = null;\n  modalOpen = false;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    applicationRef: ApplicationRef,\n    injector: Injector,\n    private messagingService: MessagingService\n  ) {\n    super(componentFactoryResolver, applicationRef, injector);\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    modalRef.onCreated.pipe(first()).subscribe(() => {\n      const modals = Array.from(document.querySelectorAll(\".modal\"));\n      if (modals.length > 0) {\n        this.el = jq(modals[0]);\n        this.el.modal(\"show\");\n\n        this.el.on(\"show.bs.modal\", () => {\n          modalRef.show();\n          this.messagingService.send(\"modalShow\");\n        });\n        this.el.on(\"shown.bs.modal\", () => {\n          modalRef.shown();\n          this.messagingService.send(\"modalShown\");\n          if (!Utils.isMobileBrowser) {\n            this.el.find(\"*[appAutoFocus]\").focus();\n          }\n        });\n        this.el.on(\"hide.bs.modal\", () => {\n          this.messagingService.send(\"modalClose\");\n        });\n        this.el.on(\"hidden.bs.modal\", () => {\n          modalRef.closed();\n          this.messagingService.send(\"modalClosed\");\n        });\n      }\n    });\n\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      if (this.el != null) {\n        this.el.modal(\"hide\");\n      }\n    });\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"@bitwarden/angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"passwordConfirmation\" | i18n }}\n        </h2>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"passwordConfirmationDesc\" | i18n }}\n\n        <div class=\"form-group\">\n          <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n          <div class=\"d-flex\">\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n            <button\n              type=\"button\"\n              class=\"ml-1 btn btn-link\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\">\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"@bitwarden/angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { BasePolicy } from \"../organizations/policies/base-policy.component\";\n\nexport class PolicyListService {\n  private policies: BasePolicy[] = [];\n\n  addPolicies(policies: BasePolicy[]) {\n    this.policies.push(...policies);\n  }\n\n  getPolicies(): BasePolicy[] {\n    return this.policies;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { ActivatedRoute, NavigationEnd, Router } from \"@angular/router\";\nimport { filter } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Injectable()\nexport class RouterService {\n  private previousUrl: string = undefined;\n  private currentUrl: string = undefined;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    i18nService: I18nService\n  ) {\n    this.currentUrl = this.router.url;\n\n    router.events\n      .pipe(filter((e) => e instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => {\n        this.currentUrl = event.url;\n\n        let title = i18nService.t(\"pageTitle\", \"Bitwarden\");\n        let child = this.activatedRoute.firstChild;\n        while (child.firstChild) {\n          child = child.firstChild;\n        }\n\n        const titleId: string = child?.snapshot?.data?.titleId;\n        const rawTitle: string = child?.snapshot?.data?.title;\n        const updateUrl = !child?.snapshot?.data?.doNotSaveUrl ?? true;\n\n        if (titleId != null || rawTitle != null) {\n          const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\n          if (newTitle != null && newTitle !== \"\") {\n            title = newTitle + \" | \" + title;\n          }\n        }\n        this.titleService.setTitle(title);\n        if (updateUrl) {\n          this.setPreviousUrl(this.currentUrl);\n        }\n      });\n  }\n\n  getPreviousUrl() {\n    return this.previousUrl;\n  }\n\n  setPreviousUrl(url: string) {\n    this.previousUrl = url;\n  }\n}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"@bitwarden/common/models/domain/account\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout: number = process.env.NODE_ENV === \"development\" ? null : 15;\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport {\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n} from \"@bitwarden/angular/services/injection-tokens\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateMigrationService } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { FolderData } from \"@bitwarden/common/models/data/folderData\";\nimport { SendData } from \"@bitwarden/common/models/data/sendData\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storageOptions\";\nimport { StateService as BaseStateService } from \"@bitwarden/common/services/state.service\";\n\nimport { Account } from \"./account\";\nimport { GlobalState } from \"./global-state\";\n\n@Injectable()\nexport class StateService extends BaseStateService<GlobalState, Account> {\n  constructor(\n    storageService: AbstractStorageService,\n    @Inject(SECURE_STORAGE) secureStorageService: AbstractStorageService,\n    @Inject(MEMORY_STORAGE) memoryStorageService: AbstractStorageService,\n    logService: LogService,\n    stateMigrationService: StateMigrationService,\n    @Inject(STATE_FACTORY) stateFactory: StateFactory<GlobalState, Account>,\n    @Inject(STATE_SERVICE_USE_CACHE) useAccountCache = true\n  ) {\n    super(\n      storageService,\n      secureStorageService,\n      memoryStorageService,\n      logService,\n      stateMigrationService,\n      stateFactory,\n      useAccountCache\n    );\n  }\n\n  async addAccount(account: Account) {\n    // Apply web overrides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getRememberEmail(options?: StorageOptions) {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberEmail;\n  }\n\n  async setRememberEmail(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCiphers(options);\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCiphers(value, options);\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCollections(options);\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCollections(value, options);\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedFolders(options);\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedFolders(value, options);\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedSends(options);\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedSends(value, options);\n  }\n\n  override async getLastSync(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getLastSync(options);\n  }\n\n  override async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setLastSync(value, options);\n  }\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport class FileDownloadBuilder {\n  get blobOptions(): any {\n    const options = this._request.blobOptions ?? {};\n    if (options.type == null) {\n      options.type = this.fileType;\n    }\n    return options;\n  }\n\n  get blob(): Blob {\n    if (this.blobOptions != null) {\n      return new Blob([this._request.blobData], this.blobOptions);\n    } else {\n      return new Blob([this._request.blobData]);\n    }\n  }\n\n  get downloadMethod(): \"save\" | \"open\" {\n    if (this._request.downloadMethod != null) {\n      return this._request.downloadMethod;\n    }\n    return this.fileType != \"application/pdf\" ? \"save\" : \"open\";\n  }\n\n  private get fileType() {\n    const fileNameLower = this._request.fileName.toLowerCase();\n    if (fileNameLower.endsWith(\".pdf\")) {\n      return \"application/pdf\";\n    } else if (fileNameLower.endsWith(\".xlsx\")) {\n      return \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    } else if (fileNameLower.endsWith(\".docx\")) {\n      return \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n    } else if (fileNameLower.endsWith(\".pptx\")) {\n      return \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\n    } else if (fileNameLower.endsWith(\".csv\")) {\n      return \"text/csv\";\n    } else if (fileNameLower.endsWith(\".png\")) {\n      return \"image/png\";\n    } else if (fileNameLower.endsWith(\".jpg\") || fileNameLower.endsWith(\".jpeg\")) {\n      return \"image/jpeg\";\n    } else if (fileNameLower.endsWith(\".gif\")) {\n      return \"image/gif\";\n    }\n    return null;\n  }\n\n  constructor(private readonly _request: FileDownloadRequest) {}\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FileDownloadBuilder } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadBuilder\";\nimport { FileDownloadRequest } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadRequest\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Injectable()\nexport class WebFileDownloadService implements FileDownloadService {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  download(request: FileDownloadRequest): void {\n    const builder = new FileDownloadBuilder(request);\n    const a = window.document.createElement(\"a\");\n    if (builder.downloadMethod === \"save\") {\n      a.download = request.fileName;\n    } else if (!this.platformUtilsService.isSafari()) {\n      a.target = \"_blank\";\n    }\n    a.href = URL.createObjectURL(builder.blob);\n    a.style.position = \"fixed\";\n    window.document.body.appendChild(a);\n    a.click();\n    window.document.body.removeChild(a);\n  }\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","import { Injectable } from \"@angular/core\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ClientType } from \"@bitwarden/common/enums/clientType\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\n@Injectable()\nexport class WebPlatformUtilsService implements PlatformUtilsService {\n  private browserCache: DeviceType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.browserCache != null) {\n      return this.browserCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.browserCache = DeviceType.FirefoxBrowser;\n    } else if (navigator.userAgent.indexOf(\" OPR/\") >= 0) {\n      this.browserCache = DeviceType.OperaBrowser;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.browserCache = DeviceType.EdgeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.browserCache = DeviceType.VivaldiBrowser;\n    } else if (\n      navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n      navigator.userAgent.indexOf(\"Chrome\") === -1\n    ) {\n      this.browserCache = DeviceType.SafariBrowser;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.browserCache = DeviceType.ChromeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Trident/\") !== -1) {\n      this.browserCache = DeviceType.IEBrowser;\n    } else {\n      this.browserCache = DeviceType.UnknownBrowser;\n    }\n\n    return this.browserCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"browser\", \"\");\n  }\n\n  getClientType() {\n    return ClientType.Web;\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxBrowser;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeBrowser;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeBrowser;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaBrowser;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiBrowser;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariBrowser;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  isViewOpen(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  launchUri(uri: string, options?: any): void {\n    const a = document.createElement(\"a\");\n    a.href = uri;\n    if (options == null || !options.sameWindow) {\n      a.target = \"_blank\";\n      a.rel = \"noreferrer noopener\";\n    }\n    a.classList.add(\"d-none\");\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(process.env.APPLICATION_VERSION || \"-\");\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  async showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false\n  ) {\n    let iconClasses: string = null;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const bootstrapModal = document.querySelector(\"div.modal\");\n    if (bootstrapModal != null) {\n      bootstrapModal.removeAttribute(\"tabindex\");\n    }\n\n    const iconHtmlStr =\n      iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml: iconHtmlStr,\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      titleText: title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n    });\n\n    if (bootstrapModal != null) {\n      bootstrapModal.setAttribute(\"tabindex\", \"-1\");\n    }\n\n    return confirmed.value;\n  }\n\n  isDev(): boolean {\n    return process.env.NODE_ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return process.env.ENV.toString() === \"selfhosted\";\n  }\n\n  copyToClipboard(text: string, options?: any): void | boolean {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      let copyEl = doc.body;\n      // For some reason copy command won't work when modal is open if appending to body\n      if (doc.body.classList.contains(\"modal-open\")) {\n        copyEl = doc.body.querySelector<HTMLElement>(\".modal\");\n      }\n      copyEl.appendChild(textarea);\n      textarea.select();\n      let success = false;\n      try {\n        // Security exception may be thrown by some browsers.\n        success = doc.execCommand(\"copy\");\n        if (!success) {\n          this.logService.debug(\"Copy command unsupported or disabled.\");\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        copyEl.removeChild(textarea);\n      }\n      return success;\n    }\n  }\n\n  readFromClipboard(options?: any): Promise<string> {\n    throw new Error(\"Cannot read from clipboard on web.\");\n  }\n\n  supportsBiometric() {\n    return Promise.resolve(false);\n  }\n\n  authenticateBiometric() {\n    return Promise.resolve(false);\n  }\n\n  supportsSecureStorage() {\n    return false;\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { APP_INITIALIZER, NgModule, Optional, SkipSelf } from \"@angular/core\";\n\nimport {\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  LOCALES_DIRECTORY,\n  SYSTEM_LANGUAGE,\n  MEMORY_STORAGE,\n} from \"@bitwarden/angular/services/injection-tokens\";\nimport { JslibServicesModule } from \"@bitwarden/angular/services/jslib-services.module\";\nimport { ModalService as ModalServiceAbstraction } from \"@bitwarden/angular/services/modal.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { MemoryStorageService } from \"@bitwarden/common/services/memoryStorage.service\";\n\nimport { BroadcasterMessagingService } from \"./broadcaster-messaging.service\";\nimport { EventService } from \"./event.service\";\nimport { HtmlStorageService } from \"./html-storage.service\";\nimport { I18nService } from \"./i18n.service\";\nimport { InitService } from \"./init.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./password-reprompt.service\";\nimport { PolicyListService } from \"./policy-list.service\";\nimport { RouterService } from \"./router.service\";\nimport { Account, GlobalState, StateService } from \"./state\";\nimport { StateMigrationService } from \"./state-migration.service\";\nimport { WebFileDownloadService } from \"./web-file-download.service\";\nimport { WebPlatformUtilsService } from \"./web-platform-utils.service\";\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, JslibServicesModule],\n  providers: [\n    InitService,\n    RouterService,\n    EventService,\n    PolicyListService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (initService: InitService) => initService.init(),\n      deps: [InitService],\n      multi: true,\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: false,\n    },\n    {\n      provide: I18nServiceAbstraction,\n      useClass: I18nService,\n      deps: [SYSTEM_LANGUAGE, LOCALES_DIRECTORY],\n    },\n    { provide: AbstractStorageService, useClass: HtmlStorageService },\n    {\n      provide: SECURE_STORAGE,\n      // TODO: platformUtilsService.isDev has a helper for this, but using that service here results in a circular dependency.\n      // We have a tech debt item in the backlog to break up platformUtilsService, but in the meantime simply checking the environement here is less cumbersome.\n      useClass: process.env.NODE_ENV === \"development\" ? HtmlStorageService : MemoryStorageService,\n    },\n    {\n      provide: MEMORY_STORAGE,\n      useClass: MemoryStorageService,\n    },\n    {\n      provide: PlatformUtilsServiceAbstraction,\n      useClass: WebPlatformUtilsService,\n    },\n    { provide: MessagingServiceAbstraction, useClass: BroadcasterMessagingService },\n    { provide: ModalServiceAbstraction, useClass: ModalService },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    StateService,\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateService,\n    },\n    {\n      provide: PasswordRepromptServiceAbstraction,\n      useClass: PasswordRepromptService,\n    },\n    {\n      provide: FileDownloadService,\n      useClass: WebFileDownloadService,\n    },\n  ],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule?: CoreModule) {\n    if (parentModule) {\n      throw new Error(\"CoreModule is already loaded. Import it in the AppModule only\");\n    }\n  }\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { GlobalState as BaseGlobalState } from \"@bitwarden/common/models/domain/globalState\";\n\nexport class GlobalState extends BaseGlobalState {\n  theme?: ThemeType = ThemeType.Light;\n  rememberEmail = true;\n}\n","import { I18nService as BaseI18nService } from \"@bitwarden/common/services/i18n.service\";\n\nexport class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string, localesDirectory: string) {\n    super(systemLanguage || \"en-US\", localesDirectory, async (formattedLocale: string) => {\n      const filePath =\n        this.localesDirectory +\n        \"/\" +\n        formattedLocale +\n        \"/messages.json?cache=\" +\n        process.env.CACHE_TAG;\n      const localesResult = await fetch(filePath);\n      const locales = await localesResult.json();\n      return locales;\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"af\",\n      \"ar\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"eo\",\n      \"es\",\n      \"et\",\n      \"eu\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-PT\",\n      \"pt-BR\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n}\n","import { Observable, ReplaySubject } from \"rxjs\";\n\nimport { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  private _locale = new ReplaySubject<string>(1);\n  locale$: Observable<string> = this._locale.asObservable();\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"ar\", \"العربية الفصحى\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"eu\", \"euskara\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.translationLocale = locale != null ? locale : this.systemLanguage;\n    this._locale.next(this.translationLocale);\n\n    try {\n      this.collator = new Intl.Collator(this.translationLocale, {\n        numeric: true,\n        sensitivity: \"base\",\n      });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1);\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2);\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3);\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { StateMigrationService as BaseStateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\n\nimport { Account } from \"./state/account\";\nimport { GlobalState } from \"./state/global-state\";\n\nexport class StateMigrationService extends BaseStateMigrationService<GlobalState, Account> {\n  protected async migrationStateFrom1To2(): Promise<void> {\n    await super.migrateStateFrom1To2();\n    const globals = (await this.get<GlobalState>(\"global\")) ?? this.stateFactory.createGlobal(null);\n    globals.rememberEmail = (await this.get<boolean>(\"rememberEmail\")) ?? globals.rememberEmail;\n    await this.set(\"global\", globals);\n  }\n}\n","// required to avoid linting errors when there are no flags\n/* eslint-disable @typescript-eslint/ban-types */\nexport type SharedFlags = {};\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable @typescript-eslint/ban-types */\nexport type SharedDevFlags = {};\n\nfunction getFlags<T>(envFlags: string | T): T {\n  if (typeof envFlags === \"string\") {\n    return JSON.parse(envFlags) as T;\n  } else {\n    return envFlags as T;\n  }\n}\n\n/**\n * Gets the value of a feature flag from environment.\n * All flags default to \"on\" (true).\n * Only use for shared code in `libs`, otherwise use the client-specific function.\n * @param flag The name of the feature flag to check\n * @returns The value of the flag\n */\nexport function flagEnabled<Flags extends SharedFlags>(flag: keyof Flags): boolean {\n  const flags = getFlags<Flags>(process.env.FLAGS);\n  return flags[flag] == null || !!flags[flag];\n}\n\n/**\n * Gets the value of a dev flag from environment.\n * Will always return false unless in development.\n * Only use for shared code in `libs`, otherwise use the client-specific function.\n * @param flag The name of the dev flag to check\n * @returns The value of the flag\n */\nexport function devFlagEnabled<DevFlags extends SharedDevFlags>(flag: keyof DevFlags): boolean {\n  if (process.env.ENV !== \"development\") {\n    return false;\n  }\n\n  const devFlags = getFlags<DevFlags>(process.env.DEV_FLAGS);\n  return devFlags[flag] == null || !!devFlags[flag];\n}\n\n/**\n * Gets the value of a dev flag from environment.\n * Will always return false unless in development.\n * @param flag The name of the dev flag to check\n * @returns The value of the flag\n * @throws Error if the flag is not enabled\n */\nexport function devFlagValue<DevFlags extends SharedDevFlags>(\n  flag: keyof DevFlags\n): DevFlags[keyof DevFlags] {\n  if (!devFlagEnabled(flag)) {\n    throw new Error(`This method should not be called, it is protected by a disabled dev flag.`);\n  }\n\n  const devFlags = getFlags<DevFlags>(process.env.DEV_FLAGS);\n  return devFlags[flag];\n}\n","import {\n  flagEnabled as baseFlagEnabled,\n  devFlagEnabled as baseDevFlagEnabled,\n  devFlagValue as baseDevFlagValue,\n  SharedFlags,\n  SharedDevFlags,\n} from \"@bitwarden/common/misc/flags\";\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport type Flags = {\n  showTrial?: boolean;\n} & SharedFlags;\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport type DevFlags = {} & SharedDevFlags;\n\nexport function flagEnabled(flag: keyof Flags): boolean {\n  return baseFlagEnabled<Flags>(flag);\n}\n\nexport function devFlagEnabled(flag: keyof DevFlags) {\n  return baseDevFlagEnabled<DevFlags>(flag);\n}\n\nexport function devFlagValue(flag: keyof DevFlags) {\n  return baseDevFlagValue(flag);\n}\n","export class EmergencyAccessAcceptRequest {\n  token: string;\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Directive()\nexport abstract class BaseAcceptComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  actionPromise: Promise<any>;\n\n  protected requiredParameters: string[] = [];\n  protected failedShortMessage = \"inviteAcceptFailedShort\";\n  protected failedMessage = \"inviteAcceptFailed\";\n\n  constructor(\n    protected router: Router,\n    protected platformUtilService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService\n  ) {}\n\n  abstract authedHandler(qParams: Params): Promise<void>;\n  abstract unauthedHandler(qParams: Params): Promise<void>;\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      let error = this.requiredParameters.some((e) => qParams?.[e] == null || qParams[e] === \"\");\n      let errorMessage: string = null;\n      if (!error) {\n        this.authed = await this.stateService.getIsAuthenticated();\n\n        if (this.authed) {\n          try {\n            await this.authedHandler(qParams);\n          } catch (e) {\n            error = true;\n            errorMessage = e.message;\n          }\n        } else {\n          this.email = qParams.email;\n          await this.unauthedHandler(qParams);\n        }\n      }\n\n      if (error) {\n        const message =\n          errorMessage != null\n            ? this.i18nService.t(this.failedShortMessage, errorMessage)\n            : this.i18nService.t(this.failedMessage);\n        this.platformUtilService.showToast(\"error\", null, message, { timeout: 10000 });\n        this.router.navigate([\"/\"]);\n      }\n\n      this.loading = false;\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"emergencyAccess\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ name }}\n          </p>\n          <p>{{ \"acceptEmergencyAccess\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessAcceptRequest } from \"@bitwarden/common/models/request/emergencyAccessAcceptRequest\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-emergency\",\n  templateUrl: \"accept-emergency.component.html\",\n})\nexport class AcceptEmergencyComponent extends BaseAcceptComponent {\n  name: string;\n\n  protected requiredParameters: string[] = [\"id\", \"name\", \"email\", \"token\"];\n  protected failedShortMessage = \"emergencyInviteAcceptFailedShort\";\n  protected failedMessage = \"emergencyInviteAcceptFailed\";\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    const request = new EmergencyAccessAcceptRequest();\n    request.token = qParams.token;\n    this.actionPromise = this.apiService.postEmergencyAccessAccept(qParams.id, request);\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"emergencyInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    this.name = qParams.name;\n    if (this.name != null) {\n      // Fix URL encoding of space issue with Angular\n      this.name = this.name.replace(/\\+/g, \" \");\n    }\n  }\n}\n","export class OrganizationUserAcceptRequest {\n  token: string;\n  // Used to auto-enroll in master password reset\n  resetPasswordKey: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img src=\"../../images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinOrganization\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ orgName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinOrganizationDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { OrganizationUserAcceptRequest } from \"@bitwarden/common/models/request/organizationUserAcceptRequest\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-organization\",\n  templateUrl: \"accept-organization.component.html\",\n})\nexport class AcceptOrganizationComponent extends BaseAcceptComponent {\n  orgName: string;\n\n  protected requiredParameters: string[] = [\"organizationId\", \"organizationUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService,\n    private cryptoService: CryptoService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    this.actionPromise = this.prepareAcceptRequest(qParams).then(async (request) => {\n      await this.apiService.postOrganizationUserAccept(\n        qParams.organizationId,\n        qParams.organizationUserId,\n        request\n      );\n    });\n\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"inviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    this.orgName = qParams.organizationName;\n    if (this.orgName != null) {\n      // Fix URL encoding of space issue with Angular\n      this.orgName = this.orgName.replace(/\\+/g, \" \");\n    }\n    await this.stateService.setOrganizationInvitation(qParams);\n  }\n\n  private async prepareAcceptRequest(qParams: Params): Promise<OrganizationUserAcceptRequest> {\n    const request = new OrganizationUserAcceptRequest();\n    request.token = qParams.token;\n\n    if (await this.performResetPasswordAutoEnroll(qParams)) {\n      const response = await this.organizationApiService.getKeys(qParams.organizationId);\n\n      if (response == null) {\n        throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n      }\n\n      const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n      // RSA Encrypt user's encKey.key with organization public key\n      const encKey = await this.cryptoService.getEncKey();\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Add reset password key to accept request\n      request.resetPasswordKey = encryptedKey.encryptedString;\n    }\n    return request;\n  }\n\n  private async performResetPasswordAutoEnroll(qParams: Params): Promise<boolean> {\n    let policyList: Policy[] = null;\n    try {\n      const policies = await this.policyApiService.getPoliciesByToken(\n        qParams.organizationId,\n        qParams.token,\n        qParams.email,\n        qParams.organizationUserId\n      );\n      policyList = this.policyService.mapPoliciesFromToken(policies);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (policyList != null) {\n      const result = this.policyService.getResetPasswordPolicyOptions(\n        policyList,\n        qParams.organizationId\n      );\n      // Return true if policy enabled and auto-enroll enabled\n      return result[1] && result[0].autoEnrollEnabled;\n    }\n\n    return false;\n  }\n}\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"@bitwarden/angular/components/hint.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService);\n  }\n}\n","import { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PasswordHintRequest } from \"@bitwarden/common/models/request/passwordHintRequest\";\n\nexport class HintComponent {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"passwordHint\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n            <small class=\"form-text text-muted\">{{ \"enterEmailToGetHint\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { take } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"@bitwarden/common/enums/keySuffixOptions\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\n\n@Directive()\nexport class LockComponent implements OnInit, OnDestroy {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  private activeAccountSubscription: Subscription;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.activeAccountSubscription = this.stateService.activeAccount$.subscribe(async () => {\n      await this.load();\n    });\n  }\n\n  ngOnDestroy() {\n    this.activeAccountSubscription.unsubscribe();\n  }\n\n  async submit() {\n    if (this.pinLock) {\n      return await this.handlePinRequiredUnlock();\n    }\n\n    await this.handleMasterPasswordRequiredUnlock();\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async handlePinRequiredUnlock() {\n    if (this.pin == null || this.pin === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n\n    return await this.doUnlockWithPin();\n  }\n\n  private async doUnlockWithPin() {\n    let failed = true;\n    try {\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      if (this.pinSet[0]) {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations,\n          await this.stateService.getDecryptedPinProtected()\n        );\n        const encKey = await this.cryptoService.getEncKey(key);\n        const protectedPin = await this.stateService.getProtectedPin();\n        const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n        failed = decPin !== this.pin;\n        if (!failed) {\n          await this.setKeyAndContinue(key);\n        }\n      } else {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations\n        );\n        failed = false;\n        await this.setKeyAndContinue(key);\n      }\n    } catch {\n      failed = true;\n    }\n\n    if (failed) {\n      this.invalidPinAttempts++;\n      if (this.invalidPinAttempts >= 5) {\n        this.messagingService.send(\"logout\");\n        return;\n      }\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidPin\")\n      );\n    }\n  }\n\n  private async handleMasterPasswordRequiredUnlock() {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return;\n    }\n    await this.doUnlockWithMasterPassword();\n  }\n\n  private async doUnlockWithMasterPassword() {\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      kdf,\n      kdfIterations\n    );\n    const storedKeyHash = await this.cryptoService.getKeyHash();\n\n    let passwordValid = false;\n\n    if (storedKeyHash != null) {\n      passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n    } else {\n      const request = new SecretVerificationRequest();\n      const serverKeyHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      request.masterPasswordHash = serverKeyHash;\n      try {\n        this.formPromise = this.apiService.postAccountVerifyPassword(request);\n        await this.formPromise;\n        passwordValid = true;\n        const localKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.LocalAuthorization\n        );\n        await this.cryptoService.setKeyHash(localKeyHash);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (!passwordValid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    if (this.pinSet[0]) {\n      const protectedPin = await this.stateService.getProtectedPin();\n      const encKey = await this.cryptoService.getEncKey(key);\n      const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n      const pinKey = await this.cryptoService.makePinKey(decPin, this.email, kdf, kdfIterations);\n      await this.stateService.setDecryptedPinProtected(\n        await this.cryptoService.encrypt(key.key, pinKey)\n      );\n    }\n    await this.setKeyAndContinue(key);\n  }\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutSettingsService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LockComponent as BaseLockComponent } from \"@bitwarden/angular/components/lock.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\n\nimport { RouterService } from \"../core\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    environmentService: EnvironmentService,\n    private routerService: RouterService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      vaultTimeoutSettingsService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.onSuccessfulSubmit = async () => {\n      const previousUrl = this.routerService.getPreviousUrl();\n      if (previousUrl && previousUrl !== \"/\" && previousUrl.indexOf(\"lock\") === -1) {\n        this.successRoute = previousUrl;\n      }\n      this.router.navigateByUrl(this.successRoute);\n    };\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"text-center mb-4\">\n        <i class=\"bwi bwi-lock bwi-4x text-muted\" aria-hidden=\"true\"></i>\n      </p>\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"yourVaultIsLocked\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appAutofocus\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"text-muted form-text\">\n              {{ \"loggedInAsEmailOn\" | i18n: email:webVaultHostname }}\n            </small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-unlock\" aria-hidden=\"true\"></i> {{ \"unlock\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { AuthenticationType } from \"../../enums/authenticationType\";\nimport { TokenRequestTwoFactor } from \"../request/identityToken/tokenRequestTwoFactor\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class ApiLogInCredentials {\n  readonly type = AuthenticationType.Api;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"@bitwarden/common/misc/captcha_iframe\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import { Directive, Input, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() email = \"\";\n  @Input() rememberEmail = true;\n\n  masterPassword = \"\";\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected alwaysRememberEmail = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n  }\n\n  get selfHostedDomain() {\n    return this.environmentService.hasBaseUrl() ? this.environmentService.getWebVaultUrl() : null;\n  }\n\n  async ngOnInit() {\n    if (this.email == null || this.email === \"\") {\n      this.email = await this.stateService.getRememberedEmail();\n      if (this.email == null) {\n        this.email = \"\";\n      }\n    }\n    if (!this.alwaysRememberEmail) {\n      this.rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n    }\n    if (Utils.isBrowser && !Utils.isNode) {\n      this.focusInput();\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        this.email,\n        this.masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (this.rememberEmail || this.alwaysRememberEmail) {\n        await this.stateService.setRememberedEmail(this.email);\n      } else {\n        await this.stateService.setRememberedEmail(null);\n      }\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  protected focusInput() {\n    document\n      .getElementById(this.email == null || this.email === \"\" ? \"email\" : \"masterPassword\")\n      .focus();\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"mb-2 logo logo-themed\" alt=\"Bitwarden\" />\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"loginOrCreateNewAccount\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"showResetPasswordAutoEnrollWarning\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"form-text\">\n              <a routerLink=\"/hint\">{{ \"getMasterPasswordHint\" | i18n }}</a>\n            </small>\n          </div>\n          <div class=\"form-check mb-3\">\n            <input\n              type=\"checkbox\"\n              class=\"form-check-input\"\n              id=\"rememberEmail\"\n              name=\"RememberEmail\"\n              [(ngModel)]=\"rememberEmail\"\n            />\n            <label class=\"form-check-label\" for=\"rememberEmail\">{{ \"rememberEmail\" | i18n }}</label>\n          </div>\n          <div class=\"mb-n3\" [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n            >\n              <i class=\"bwi bwi-pencil-square\" aria-hidden=\"true\"></i>\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n          <div class=\"d-flex\">\n            <a routerLink=\"/sso\" class=\"btn btn-outline-secondary btn-block mt-2\">\n              <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i> {{ \"enterpriseSingleSignOn\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { LoginComponent as BaseLoginComponent } from \"@bitwarden/angular/components/login.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nimport { RouterService, StateService } from \"../core\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class LoginComponent extends BaseLoginComponent {\n  showResetPasswordAutoEnrollWarning = false;\n  enforcedPasswordPolicyOptions: MasterPasswordPolicyOptions;\n  policies: ListResponse<PolicyResponse>;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    private route: ActivatedRoute,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: InternalPolicyService,\n    logService: LogService,\n    ngZone: NgZone,\n    protected stateService: StateService,\n    private messagingService: MessagingService,\n    private routerService: RouterService\n  ) {\n    super(\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone\n    );\n    this.onSuccessfulLogin = async () => {\n      this.messagingService.send(\"setFullWidth\");\n    };\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n      if (qParams.premium != null) {\n        this.routerService.setPreviousUrl(\"/settings/premium\");\n      } else if (qParams.org != null) {\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n          queryParams: { token: qParams.sponsorshipToken },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      await super.ngOnInit();\n      this.rememberEmail = await this.stateService.getRememberEmail();\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      let policyList: Policy[] = null;\n      try {\n        this.policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        policyList = this.policyService.mapPoliciesFromToken(this.policies);\n      } catch (e) {\n        this.logService.error(e);\n      }\n\n      if (policyList != null) {\n        const resetPasswordPolicy = this.policyService.getResetPasswordPolicyOptions(\n          policyList,\n          invite.organizationId\n        );\n        // Set to true if policy enabled and auto-enroll enabled\n        this.showResetPasswordAutoEnrollWarning =\n          resetPasswordPolicy[1] && resetPasswordPolicy[0].autoEnrollEnabled;\n\n        this.enforcedPasswordPolicyOptions =\n          await this.policyService.getMasterPasswordPolicyOptions(policyList);\n      }\n    }\n  }\n\n  async goAfterLogIn() {\n    // Check master password against policy\n    if (this.enforcedPasswordPolicyOptions != null) {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      const masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n\n      // If invalid, save policies and require update\n      if (\n        !this.policyService.evaluateMasterPassword(\n          masterPasswordScore,\n          this.masterPassword,\n          this.enforcedPasswordPolicyOptions\n        )\n      ) {\n        const policiesData: { [id: string]: PolicyData } = {};\n        this.policies.data.map((p) => (policiesData[p.id] = new PolicyData(p)));\n        await this.policyService.replace(policiesData);\n        this.router.navigate([\"update-password\"]);\n        return;\n      }\n    }\n\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  async submit() {\n    await this.stateService.setRememberEmail(this.rememberEmail);\n    if (!this.rememberEmail) {\n      await this.stateService.setRememberedEmail(null);\n    }\n    await super.submit();\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","export class DeleteRecoverRequest {\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { DeleteRecoverRequest } from \"@bitwarden/common/models/request/deleteRecoverRequest\";\n\n@Component({\n  selector: \"app-recover-delete\",\n  templateUrl: \"recover-delete.component.html\",\n})\nexport class RecoverDeleteComponent {\n  email: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new DeleteRecoverRequest();\n      request.email = this.email.trim().toLowerCase();\n      this.formPromise = this.apiService.postAccountRecoverDelete(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deleteRecoverEmailSent\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>{{ \"deleteRecoverDesc\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorRecoveryRequest extends SecretVerificationRequest {\n  recoveryCode: string;\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorRecoveryRequest } from \"@bitwarden/common/models/request/twoFactorRecoveryRequest\";\n\n@Component({\n  selector: \"app-recover-two-factor\",\n  templateUrl: \"recover-two-factor.component.html\",\n})\nexport class RecoverTwoFactorComponent {\n  email: string;\n  masterPassword: string;\n  recoveryCode: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new TwoFactorRecoveryRequest();\n      request.recoveryCode = this.recoveryCode.replace(/\\s/g, \"\").toLowerCase();\n      request.email = this.email.trim().toLowerCase();\n      const key = await this.authService.makePreloginKey(this.masterPassword, request.email);\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n      this.formPromise = this.apiService.postTwoFactorRecover(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"twoStepRecoverDisabled\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"recoverAccountTwoStep\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>\n            {{ \"recoverAccountTwoStepDesc\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/lost-two-step-device/\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              >{{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"password\"\n              name=\"MasterPassword\"\n              class=\"form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"recoveryCode\">{{ \"recoveryCodeTitle\" | i18n }}</label>\n            <input\n              id=\"recoveryCode\"\n              class=\"text-monospace form-control\"\n              type=\"text\"\n              name=\"RecoveryCode\"\n              [(ngModel)]=\"recoveryCode\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { AbstractControl, UntypedFormGroup, ValidatorFn } from \"@angular/forms\";\n\nimport { FormGroupControls } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\n\nexport class InputsFieldMatch {\n  //check to ensure two fields do not have the same value\n  static validateInputsDoesntMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? {\n              inputsMatchError: {\n                message: errorMessage,\n              },\n            }\n          : null;\n      }\n\n      return null;\n    };\n  }\n\n  //check to ensure two fields have the same value\n  static validateInputsMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? null\n          : {\n              inputsDoesntMatchError: {\n                message: errorMessage,\n              },\n            };\n      }\n\n      return null;\n    };\n  }\n\n  //checks the formGroup if two fields have the same value and validation is controlled from either field\n  static validateFormInputsMatch(field: string, fieldMatchTo: string, errorMessage: string) {\n    return (formGroup: UntypedFormGroup) => {\n      const fieldCtrl = formGroup.controls[field];\n      const fieldMatchToCtrl = formGroup.controls[fieldMatchTo];\n\n      if (fieldCtrl.value !== fieldMatchToCtrl.value) {\n        fieldMatchToCtrl.setErrors({\n          inputsDoesntMatchError: {\n            message: errorMessage,\n          },\n        });\n      } else {\n        fieldMatchToCtrl.setErrors(null);\n      }\n    };\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captchaProtectedRequest\";\nimport { KeysRequest } from \"./keysRequest\";\nimport { ReferenceEventRequest } from \"./referenceEventRequest\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { AbstractControl, UntypedFormBuilder, ValidatorFn, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { InputsFieldMatch } from \"@bitwarden/angular/validators/inputsFieldMatch.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keysRequest\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\nimport { RegisterRequest } from \"@bitwarden/common/models/request/registerRequest\";\nimport { RegisterResponse } from \"@bitwarden/common/models/response/authentication/registerResponse\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() isInTrialFlow = false;\n  @Output() createdAccount = new EventEmitter<string>();\n\n  showPassword = false;\n  formPromise: Promise<RegisterResponse>;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  showErrorSummary = false;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  formGroup = this.formBuilder.group(\n    {\n      email: [\"\", [Validators.required, Validators.email]],\n      name: [\"\"],\n      masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      confirmMasterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      hint: [\n        null,\n        [\n          InputsFieldMatch.validateInputsDoesntMatch(\n            \"masterPassword\",\n            this.i18nService.t(\"hintEqualsPassword\")\n          ),\n        ],\n      ],\n      acceptPolicies: [false, [this.acceptPoliciesValidation()]],\n    },\n    {\n      validator: InputsFieldMatch.validateFormInputsMatch(\n        \"masterPassword\",\n        \"confirmMasterPassword\",\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      ),\n    }\n  );\n\n  protected successRoute = \"login\";\n\n  protected accountCreated = false;\n\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected formBuilder: UntypedFormBuilder,\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  async submit(showToast = true) {\n    let email = this.formGroup.get(\"email\")?.value;\n    email = email.trim().toLowerCase();\n    let name = this.formGroup.get(\"name\")?.value;\n    name = name === \"\" ? null : name; // Why do we do this?\n    const masterPassword = this.formGroup.get(\"masterPassword\")?.value;\n    try {\n      if (!this.accountCreated) {\n        const registerResponse = await this.registerAccount(\n          await this.buildRegisterRequest(email, masterPassword, name),\n          showToast\n        );\n        if (!registerResponse.successful) {\n          return;\n        }\n        this.captchaBypassToken = registerResponse.captchaBypassToken;\n        this.accountCreated = true;\n      }\n      if (this.isInTrialFlow) {\n        if (!this.accountCreated) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"trialAccountCreated\")\n          );\n        }\n        const loginResponse = await this.logIn(email, masterPassword, this.captchaBypassToken);\n        if (loginResponse.captchaRequired) {\n          return;\n        }\n        this.createdAccount.emit(this.formGroup.get(\"email\")?.value);\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"newAccountCreated\")\n        );\n        this.router.navigate([this.successRoute], { queryParams: { email: email } });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        case \"inputsDoesntMatchError\":\n          return this.i18nService.t(\"masterPassDoesntMatch\");\n        case \"inputsMatchError\":\n          return this.i18nService.t(\"hintEqualsPassword\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  //validation would be ignored on selfhosted\n  private acceptPoliciesValidation(): ValidatorFn {\n    return (control: AbstractControl) => {\n      const ctrlValue = control.value;\n\n      return !ctrlValue && this.showTerms ? { required: true } : null;\n    };\n  }\n\n  private async validateRegistration(showToast: boolean): Promise<{ isValid: boolean }> {\n    this.formGroup.markAllAsTouched();\n    this.showErrorSummary = true;\n\n    if (this.formGroup.get(\"acceptPolicies\").hasError(\"required\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesRequired\")\n      );\n      return { isValid: false };\n    }\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return { isValid: false };\n    }\n\n    //desktop, browser\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return { isValid: false };\n    }\n\n    if (this.passwordStrengthResult != null && this.passwordStrengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return { isValid: false };\n      }\n    }\n    return { isValid: true };\n  }\n\n  private async buildRegisterRequest(\n    email: string,\n    masterPassword: string,\n    name: string\n  ): Promise<RegisterRequest> {\n    const hint = this.formGroup.get(\"hint\")?.value;\n    const kdf = DEFAULT_KDF_TYPE;\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      email,\n      name,\n      hashedPassword,\n      hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n    return request;\n  }\n\n  private async registerAccount(\n    request: RegisterRequest,\n    showToast: boolean\n  ): Promise<{ successful: boolean; captchaBypassToken?: string }> {\n    if (!(await this.validateRegistration(showToast)).isValid) {\n      return { successful: false };\n    }\n    this.formPromise = this.apiService.postRegister(request);\n    try {\n      const response = await this.formPromise;\n      return { successful: true, captchaBypassToken: response.captchaBypassToken };\n    } catch (e) {\n      if (this.handleCaptchaRequired(e)) {\n        return { successful: false };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  private async logIn(\n    email: string,\n    masterPassword: string,\n    captchaBypassToken: string\n  ): Promise<{ captchaRequired: boolean }> {\n    const credentials = new PasswordLogInCredentials(\n      email,\n      masterPassword,\n      captchaBypassToken,\n      null\n    );\n    const loginResponse = await this.authService.logIn(credentials);\n    if (this.handleCaptchaRequired(loginResponse)) {\n      return { captchaRequired: true };\n    }\n    return { captchaRequired: false };\n  }\n}\n","export class ReferenceEventRequest {\n  id: string;\n  layout: string;\n  flow: string;\n}\n","<div class=\"progress\">\n  <div\n    class=\"progress-bar {{ color }}\"\n    role=\"progressbar\"\n    [ngStyle]=\"{ width: scoreWidth + '%' }\"\n    attr.aria-valuenow=\"{{ scoreWidth }}\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n  >\n    <ng-container *ngIf=\"showText && text\">\n      {{ text }}\n    </ng-container>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\n\nexport interface PasswordColorText {\n  color: string;\n  text: string;\n}\n\n@Component({\n  selector: \"app-password-strength\",\n  templateUrl: \"password-strength.component.html\",\n})\nexport class PasswordStrengthComponent implements OnChanges {\n  @Input() showText = false;\n  @Input() email: string;\n  @Input() name: string;\n  @Input() set password(value: string) {\n    this.updatePasswordStrength(value);\n  }\n  @Output() passwordStrengthResult = new EventEmitter<any>();\n  @Output() passwordScoreColor = new EventEmitter<PasswordColorText>();\n\n  masterPasswordScore: number;\n  scoreWidth = 0;\n  color = \"bg-danger\";\n  text: string;\n\n  private masterPasswordStrengthTimeout: any;\n\n  //used by desktop and browser to display strength text color\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  //used by desktop and browser to display strength text\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  constructor(\n    private i18nService: I18nService,\n    private passwordGenerationService: PasswordGenerationService\n  ) {}\n\n  ngOnChanges(): void {\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      this.scoreWidth = this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n\n      switch (this.masterPasswordScore) {\n        case 4:\n          this.color = \"bg-success\";\n          this.text = this.i18nService.t(\"strong\");\n          break;\n        case 3:\n          this.color = \"bg-primary\";\n          this.text = this.i18nService.t(\"good\");\n          break;\n        case 2:\n          this.color = \"bg-warning\";\n          this.text = this.i18nService.t(\"weak\");\n          break;\n        default:\n          this.color = \"bg-danger\";\n          this.text = this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n          break;\n      }\n\n      this.setPasswordScoreText(this.color, this.text);\n    }, 300);\n  }\n\n  updatePasswordStrength(password: string) {\n    const masterPassword = password;\n\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    this.passwordStrengthResult.emit(strengthResult);\n    this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n  }\n\n  getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const email = this.email;\n    const name = this.name;\n    const atPosition = email?.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (name != null && name !== \"\") {\n      userInput = userInput.concat(name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n\n  setPasswordScoreText(color: string, text: string) {\n    color = color.slice(3);\n    this.passwordScoreColor.emit({ color: color, text: text });\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { AbstractControl, UntypedFormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"bit-error-summary\",\n  template: ` <ng-container *ngIf=\"errorCount > 0\">\n    <i class=\"bwi bwi-error\"></i> {{ \"fieldsNeedAttention\" | i18n: errorString }}\n  </ng-container>`,\n  host: {\n    class: \"tw-block tw-text-danger tw-mt-2\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorSummary {\n  @Input()\n  formGroup: UntypedFormGroup;\n\n  get errorCount(): number {\n    return this.getErrorCount(this.formGroup);\n  }\n\n  get errorString() {\n    return this.errorCount.toString();\n  }\n\n  private getErrorCount(form: UntypedFormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof UntypedFormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { ButtonTypes } from \"../button\";\n\n@Component({\n  selector: \"bit-submit-button\",\n  templateUrl: \"./submit-button.component.html\",\n})\nexport class SubmitButtonComponent {\n  @Input() buttonType: ButtonTypes = \"primary\";\n  @Input() disabled = false;\n  @Input() loading: boolean;\n\n  @Input() block?: boolean;\n\n  @HostBinding(\"class\") get classList() {\n    return this.block == null || this.block === false ? [] : [\"tw-w-full\", \"tw-block\"];\n  }\n}\n","<button\n  bitButton\n  type=\"submit\"\n  [block]=\"block\"\n  [buttonType]=\"buttonType\"\n  [disabled]=\"loading || disabled\"\n>\n  <span class=\"tw-relative\">\n    <span [ngClass]=\"{ 'tw-invisible': loading }\">\n      <ng-content></ng-content>\n    </span>\n    <span class=\"tw-absolute tw-inset-0\" [ngClass]=\"{ 'tw-invisible': !loading }\">\n      <i class=\"bwi bwi-spinner bwi-lg bwi-spin tw-align-baseline\" aria-hidden=\"true\"></i>\n    </span>\n  </span>\n</button>\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"tw-container tw-mx-auto\"\n  [formGroup]=\"formGroup\"\n>\n  <div>\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"emailAddress\" | i18n }}</bit-label>\n        <input id=\"register-form_input_email\" bitInput type=\"email\" formControlName=\"email\" />\n        <bit-hint>{{ \"emailAddressDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"name\" | i18n }}</bit-label>\n        <input id=\"register-form_input_name\" bitInput type=\"text\" formControlName=\"name\" />\n        <bit-hint>{{ \"yourNameDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <app-callout\n        type=\"info\"\n        [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n        *ngIf=\"enforcedPolicyOptions\"\n      >\n      </app-callout>\n      <bit-form-field>\n        <bit-label>{{ \"masterPass\" | i18n }}</bit-label>\n        <input\n          id=\"register-form_input_master-password\"\n          bitInput\n          type=\"{{ showPassword ? 'text' : 'password' }}\"\n          formControlName=\"masterPassword\"\n        />\n        <button type=\"button\" bitSuffix bitButton (click)=\"togglePassword()\">\n          <i\n            aria-hidden=\"true\"\n            class=\"bwi bwi-lg bwi-eye\"\n            [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n          ></i>\n        </button>\n        <bit-hint>\n          <span class=\"tw-font-semibold\">Important:</span>\n          {{ \"masterPassImportant\" | i18n }}\n        </bit-hint>\n      </bit-form-field>\n      <app-password-strength\n        [password]=\"formGroup.get('masterPassword')?.value\"\n        [email]=\"formGroup.get('email')?.value\"\n        [name]=\"formGroup.get('name')?.value\"\n        [showText]=\"true\"\n        (passwordStrengthResult)=\"getStrengthResult($event)\"\n      >\n      </app-password-strength>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"reTypeMasterPass\" | i18n }}</bit-label>\n        <input\n          id=\"register-form_input_confirm-master-password\"\n          bitInput\n          type=\"{{ showPassword ? 'text' : 'password' }}\"\n          formControlName=\"confirmMasterPassword\"\n        />\n        <button type=\"button\" bitSuffix bitButton (click)=\"togglePassword()\">\n          <i\n            aria-hidden=\"true\"\n            class=\"bwi bwi-lg bwi-eye\"\n            [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n          ></i>\n        </button>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"masterPassHint\" | i18n }}</bit-label>\n        <input id=\"register-form_input_hint\" bitInput type=\"text\" formControlName=\"hint\" />\n        <bit-hint>{{ \"masterPassHintDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div [hidden]=\"!showCaptcha()\">\n      <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n    </div>\n\n    <div class=\"tw-mb-3 tw-flex tw-items-start\" *ngIf=\"showTerms\">\n      <div class=\"tw-flex tw-h-6 tw-items-center\">\n        <input\n          id=\"register-form_input_accept-policies\"\n          class=\"tw-border-gray-300 tw-w-4 tw-rounded tw-border\"\n          bitInput\n          type=\"checkbox\"\n          formControlName=\"acceptPolicies\"\n        />\n      </div>\n      <bit-label class=\"ml-2\">\n        {{ \"acceptPolicies\" | i18n }}<br />\n        <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n          \"termsOfService\" | i18n\n        }}</a\n        >,\n        <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n          \"privacyPolicy\" | i18n\n        }}</a>\n      </bit-label>\n    </div>\n\n    <div class=\"tw-mb-3 tw-flex\">\n      <ng-container *ngIf=\"!accountCreated\">\n        <bit-submit-button [loading]=\"form.loading\">{{ \"createAccount\" | i18n }}</bit-submit-button>\n        <a\n          bitButton\n          buttonType=\"secondary\"\n          routerLink=\"/login\"\n          class=\"tw-ml-3 tw-inline-flex tw-items-center tw-px-3\"\n        >\n          <i class=\"bwi bwi-sign-in tw-mr-2\"></i>\n          {{ \"logIn\" | i18n }}\n        </a>\n      </ng-container>\n      <ng-container *ngIf=\"accountCreated\">\n        <bit-submit-button [loading]=\"form.loading\">{{ \"logIn\" | i18n }}</bit-submit-button>\n      </ng-container>\n    </div>\n    <bit-error-summary *ngIf=\"showErrorSummary\" [formGroup]=\"formGroup\"></bit-error-summary>\n  </div>\n</form>\n","import { Component, Input } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\n\n@Component({\n  selector: \"app-register-form\",\n  templateUrl: \"./register-form.component.html\",\n})\nexport class RegisterFormComponent extends BaseRegisterComponent {\n  @Input() queryParamEmail: string;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() referenceDataValue: ReferenceEventRequest;\n\n  showErrorSummary = false;\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: UntypedFormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.referenceData = this.referenceDataValue;\n\n    if (this.queryParamEmail) {\n      this.formGroup.get(\"email\")?.setValue(this.queryParamEmail);\n    }\n  }\n\n  async submit() {\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.passwordStrengthResult.score,\n        this.formGroup.get(\"masterPassword\")?.value,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    await super.submit(false);\n  }\n}\n","<div class=\"layout\" [ngClass]=\"['layout', layout]\">\n  <!-- TEAMS 1 Header -->\n  <header\n    class=\"header\"\n    *ngIf=\"\n      layout === 'default' ||\n      layout === 'teams' ||\n      layout === 'teams1' ||\n      layout === 'teams2' ||\n      layout === 'enterprise' ||\n      layout === 'enterprise1' ||\n      layout === 'enterprise2' ||\n      layout === 'cnetcmpgnent' ||\n      layout === 'cnetcmpgnteams' ||\n      layout === 'cnetcmpgnind'\n    \"\n  >\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-7\">\n          <img\n            alt=\"Bitwarden\"\n            class=\"logo mb-2\"\n            src=\"../../images/register-layout/logo-horizontal-white.svg\"\n          />\n        </div>\n      </div>\n    </div>\n  </header>\n\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-7\" *ngIf=\"layout\">\n        <div class=\"mt-5\">\n          <!-- Default Body -->\n          <div\n            *ngIf=\"\n              layout === 'teams' ||\n              layout === 'enterprise' ||\n              layout === 'enterprise1' ||\n              layout === 'default'\n            \"\n          >\n            <h1>The Bitwarden Password Manager</h1>\n            <h2>\n              Trusted by millions of individuals, teams, and organizations worldwide for secure\n              password storage and sharing.\n            </h2>\n            <p>Store logins, secure notes, and more</p>\n            <p>Collaborate and share securely</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- Teams & Enterprise Body -->\n          <div *ngIf=\"layout === 'teams1' || layout === 'teams2' || layout === 'enterprise2'\">\n            <h1>\n              Start Your <span *ngIf=\"layout === 'teams1' || layout === 'teams1'\">Teams<br /></span\n              ><span *ngIf=\"layout === 'enterprise2'\">Enterprise</span> Free Trial Now\n            </h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Collaborate and share securely</p>\n            <p>Deploy and manage quickly and easily</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- CNET Campaign Teams & Enterprise Body -->\n          <div *ngIf=\"layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnent'\">\n            <h1>\n              Start Your <span *ngIf=\"layout === 'cnetcmpgnteams'\">Teams<br /></span\n              ><span *ngIf=\"layout === 'cnetcmpgnent'\">Enterprise</span> Free Trial Now\n            </h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Collaborate and share securely</p>\n            <p>Deploy and manage quickly and easily</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- CNET Campaign Premium Body -->\n          <div *ngIf=\"layout === 'cnetcmpgnind'\">\n            <h1>Start Your Premium Account Now</h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Store logins, secure notes, and more</p>\n            <p>Secure your account with advanced two-step login</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n        </div>\n      </div>\n      <div [ngClass]=\"{ 'col-5': layout, 'col-12': !layout }\">\n        <div class=\"row justify-content-md-center mt-5\">\n          <div [ngClass]=\"{ 'col-5': !layout, 'col-12': layout }\">\n            <h1 class=\"lead text-center mb-4\" *ngIf=\"!layout\">{{ \"createAccount\" | i18n }}</h1>\n            <div class=\"card d-block\">\n              <div class=\"card-body\">\n                <app-callout\n                  title=\"{{ 'createOrganizationStep1' | i18n }}\"\n                  type=\"info\"\n                  icon=\"bwi bwi-thumb-tack\"\n                  *ngIf=\"showCreateOrgMessage\"\n                >\n                  {{ \"createOrganizationCreatePersonalAccount\" | i18n }}\n                </app-callout>\n                <app-register-form\n                  [queryParamEmail]=\"email\"\n                  [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n                  [referenceDataValue]=\"referenceData\"\n                ></app-register-form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-7 d-flex align-items-center\">\n        <div\n          *ngIf=\"\n            layout === 'cnetcmpgnent' || layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnind'\n          \"\n        >\n          <figure>\n            <figcaption>\n              <cite>\n                <img\n                  src=\"../../images/register-layout/cnet-logo.svg\"\n                  class=\"w-25 d-block mx-auto\"\n                  alt=\"cnet logo\"\n                />\n              </cite>\n            </figcaption>\n            <blockquote class=\"mx-auto text-center px-4\">\n              \"No more excuses; start using Bitwarden today. The identity you save could be your\n              own. The money definitely will be.\"\n            </blockquote>\n          </figure>\n        </div>\n\n        <div\n          *ngIf=\"\n            layout === 'teams' ||\n            layout === 'teams1' ||\n            layout === 'teams2' ||\n            layout === 'enterprise' ||\n            layout === 'enterprise1' ||\n            layout === 'enterprise2' ||\n            layout === 'default'\n          \"\n        >\n          <figure>\n            <figcaption>\n              <cite>\n                <img\n                  src=\"../../images/register-layout/forbes-logo.svg\"\n                  class=\"w-25 d-block mx-auto\"\n                  alt=\"Forbes Logo\"\n                />\n              </cite>\n            </figcaption>\n            <blockquote class=\"mx-auto text-center px-4\">\n              “Bitwarden boasts the backing of some of the world's best security experts and an\n              attractive, easy-to-use interface”\n            </blockquote>\n          </figure>\n        </div>\n      </div>\n      <div\n        *ngIf=\"\n          layout === 'cnetcmpgnent' || layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnind'\n        \"\n        class=\"col-5 d-flex align-items-center justify-content-center\"\n      >\n        <img\n          src=\"../../images/register-layout/usnews-360-badge.svg\"\n          class=\"w-50 d-block\"\n          alt=\"US News 360 Reviews Best Password Manager\"\n        />\n      </div>\n      <div\n        *ngIf=\"\n          layout === 'teams' ||\n          layout === 'teams1' ||\n          layout === 'teams2' ||\n          layout === 'enterprise' ||\n          layout === 'enterprise1' ||\n          layout === 'enterprise2' ||\n          layout === 'default'\n        \"\n        class=\"col-5 d-flex align-items-center justify-content-center\"\n      >\n        <img\n          src=\"../../images/register-layout/usnews-360-badge.svg\"\n          class=\"w-50 d-block\"\n          alt=\"US News 360 Reviews Best Password Manager\"\n        />\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\n\nimport { RouterService } from \"../core\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"register.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class RegisterComponent extends BaseRegisterComponent {\n  email = \"\";\n  showCreateOrgMessage = false;\n  layout = \"\";\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n  private policies: Policy[];\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: UntypedFormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    environmentService: EnvironmentService,\n    logService: LogService,\n    private routerService: RouterService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      this.referenceData = new ReferenceEventRequest();\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n      if (qParams.premium != null) {\n        this.routerService.setPreviousUrl(\"/settings/premium\");\n      } else if (qParams.org != null) {\n        this.showCreateOrgMessage = true;\n        this.referenceData.flow = qParams.org;\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      if (qParams.layout != null) {\n        this.layout = this.referenceData.layout = qParams.layout;\n      }\n      if (qParams.reference != null) {\n        this.referenceData.id = qParams.reference;\n      } else {\n        this.referenceData.id = (\"; \" + document.cookie)\n          .split(\"; reference=\")\n          .pop()\n          .split(\";\")\n          .shift();\n      }\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        // After logging in redirect them to setup the families sponsorship\n        const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n          queryParams: { plan: qParams.sponsorshipToken },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      if (this.referenceData.id === \"\") {\n        this.referenceData.id = null;\n      }\n    });\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      try {\n        const policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        if (policies.data != null) {\n          const policiesData = policies.data.map((p) => new PolicyData(p));\n          this.policies = policiesData.map((p) => new Policy(p));\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (this.policies != null) {\n      this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(\n        this.policies\n      );\n    }\n\n    await super.ngOnInit();\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<void | boolean>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.organizationApiService.leave(this.organization.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"removeMasterPassword\" | i18n }}</p>\n      <hr />\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-block\"\n            (click)=\"convert()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"continuing\"\n            ></i>\n            {{ \"removeMasterPassword\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-block\"\n            (click)=\"leave()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"leaving\"\n            ></i>\n            {{ \"leaveOrganization\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"@bitwarden/angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class OrganizationUserResetPasswordEnrollmentRequest extends SecretVerificationRequest {\n  resetPasswordKey: string;\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keysRequest\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.enforcedPolicyOptions ??= await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordMinlength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordStrengthResult;\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keysRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { SetPasswordRequest } from \"@bitwarden/common/models/request/setPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.organizationApiService.getAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyApiService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = DEFAULT_KDF_TYPE;\n    this.kdfIterations = DEFAULT_KDF_ITERATIONS;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.organizationApiService.getKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.masterPasswordHash = masterPasswordHash;\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.apiService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body text-center\" *ngIf=\"syncLoading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!syncLoading\">\n          <app-callout type=\"info\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"resetPasswordAutoEnroll\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength\n                  [password]=\"masterPassword\"\n                  [email]=\"email\"\n                  [showText]=\"true\"\n                  (passwordStrengthResult)=\"getStrengthResult($event)\"\n                >\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n            <small class=\"form-text text-muted\">{{ \"masterPassDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"@bitwarden/angular/components/set-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyApiService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService,\n      organizationApiService\n    );\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { SsoLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\nimport { SsoPreValidateResponse } from \"@bitwarden/common/models/response/ssoPreValidateResponse\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<SsoPreValidateResponse>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return;\n    }\n\n    this.initiateSsoFormPromise = this.apiService.preValidateSso(this.identifier);\n    const response = await this.initiateSsoFormPromise;\n\n    const authorizeUrl = await this.buildAuthorizeUrl(\n      returnUri,\n      includeUserIdentifier,\n      response.token\n    );\n    this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean,\n    token?: string\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier) +\n      \"&ssoToken=\" +\n      encodeURIComponent(token);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n\n      // TODO: Key Connector Service should pass this error message to the logout callback instead of displaying here\n      if (e.message === \"Key Connector error\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorError\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","export enum PlanType {\n  Free = 0,\n  FamiliesAnnually2019 = 1,\n  TeamsMonthly2019 = 2,\n  TeamsAnnually2019 = 3,\n  EnterpriseMonthly2019 = 4,\n  EnterpriseAnnually2019 = 5,\n  Custom = 6,\n  FamiliesAnnually = 7,\n  TeamsMonthly = 8,\n  TeamsAnnually = 9,\n  EnterpriseMonthly = 10,\n  EnterpriseAnnually = 11,\n}\n","export enum ProductType {\n  Free = 0,\n  Families = 1,\n  Teams = 2,\n  Enterprise = 3,\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  class=\"container\"\n  [appApiAction]=\"initiateSsoFormPromise\"\n  ngNativeValidate\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"logo mb-2 logo-themed\" alt=\"Bitwarden\" />\n      <div class=\"card d-block mt-4\">\n        <div class=\"card-body\" *ngIf=\"loggingIn\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loggingIn\">\n          <p>{{ \"ssoLogInWithOrgIdentifier\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"identifier\">{{ \"organizationIdentifier\" | i18n }}</label>\n            <input\n              id=\"identifier\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Identifier\"\n              [(ngModel)]=\"identifier\"\n              required\n              appAutofocus\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SsoComponent as BaseSsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      } else {\n        const storedIdentifier = await this.stateService.getSsoOrgIdentifier();\n        if (storedIdentifier != null) {\n          this.identifier = storedIdentifier;\n        }\n      }\n    });\n  }\n\n  async submit() {\n    await this.stateService.setSsoOrganizationIdentifier(this.identifier);\n    if (this.clientId === \"browser\") {\n      document.cookie = `ssoHandOffMessage=${this.i18nService.t(\"ssoHandOff\")};SameSite=strict`;\n    }\n    super.submit();\n  }\n}\n","<ng-template>\n  <div\n    class=\"tw-inline-block tw-w-11/12 tw-pl-7\"\n    [ngClass]=\"{ 'tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300': applyBorder }\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { CdkStep } from \"@angular/cdk/stepper\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-vertical-step\",\n  templateUrl: \"vertical-step.component.html\",\n  providers: [{ provide: CdkStep, useExisting: VerticalStep }],\n})\nexport class VerticalStep extends CdkStep {\n  @Input() subLabel = \"\";\n  @Input() applyBorder = true;\n}\n","<div class=\"tw-m-2.5 tw-h-16 tw-text-center\">\n  <button\n    (click)=\"selectStep()\"\n    [disabled]=\"disabled\"\n    class=\"tw-flex tw-w-full tw-items-center tw-border-none tw-bg-transparent\"\n    [ngClass]=\"{\n      'hover:tw-bg-secondary-100': !disabled && step.editable\n    }\"\n    [attr.aria-expanded]=\"selected\"\n  >\n    <span\n      class=\"tw-mr-3.5 tw-w-9 tw-rounded-full tw-font-bold tw-leading-9\"\n      *ngIf=\"!step.completed\"\n      [ngClass]=\"{\n        'tw-bg-primary-500 tw-text-contrast': selected,\n        'tw-bg-secondary-300 tw-text-main': !selected && !disabled && step.editable,\n        'tw-bg-transparent tw-text-muted': disabled\n      }\"\n    >\n      {{ stepNumber }}\n    </span>\n    <span\n      class=\"tw-mr-3.5 tw-w-9 tw-rounded-full tw-bg-primary-500 tw-font-bold tw-leading-9 tw-text-contrast\"\n      *ngIf=\"step.completed\"\n    >\n      <i class=\"bwi bwi-fw bwi-check tw-p-1\" aria-hidden=\"true\"></i>\n    </span>\n    <div\n      class=\"tw-txt-main tw-mt-3.5 tw-h-12 tw-text-left tw-leading-snug\"\n      [ngClass]=\"{\n        'tw-font-bold': selected\n      }\"\n    >\n      <p\n        class=\"main-label text tw-mb-1 tw-text-main\"\n        [ngClass]=\"{\n          'tw-mt-1': !step.subLabel\n        }\"\n      >\n        {{ step.label }}\n      </p>\n      <p class=\"sub-label small tw-text-muted\">{{ step.subLabel }}</p>\n    </div>\n  </button>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { VerticalStep } from \"./vertical-step.component\";\n\n@Component({\n  selector: \"app-vertical-step-content\",\n  templateUrl: \"vertical-step-content.component.html\",\n})\nexport class VerticalStepContentComponent {\n  @Output() onSelectStep = new EventEmitter<void>();\n\n  @Input() disabled = false;\n  @Input() selected = false;\n  @Input() step: VerticalStep;\n  @Input() stepNumber: number;\n\n  selectStep() {\n    this.onSelectStep.emit();\n  }\n}\n","<div>\n  <ul class=\"tw-flex tw-list-none tw-flex-col tw-flex-wrap tw-p-5\">\n    <li *ngFor=\"let step of steps; let i = index; let isLast = last\">\n      <app-vertical-step-content\n        [disabled]=\"isStepDisabled(i)\"\n        [selected]=\"selectedIndex === i\"\n        [step]=\"step\"\n        [stepNumber]=\"i + 1\"\n        (onSelectStep)=\"selectStepByIndex(i)\"\n      ></app-vertical-step-content>\n      <div\n        class=\"tw-inline-block tw-pl-7\"\n        *ngIf=\"selectedIndex === i\"\n        [ngTemplateOutlet]=\"selected ? selected.content : null\"\n      ></div>\n      <div\n        class=\"tw-ml-8 tw-h-6 tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300\"\n        *ngIf=\"!isLast && !(selectedIndex === i)\"\n      ></div>\n    </li>\n  </ul>\n</div>\n","import { CdkStepper } from \"@angular/cdk/stepper\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-vertical-stepper\",\n  templateUrl: \"vertical-stepper.component.html\",\n  providers: [{ provide: CdkStepper, useExisting: VerticalStepperComponent }],\n})\nexport class VerticalStepperComponent extends CdkStepper {\n  @Input()\n  activeClass = \"active\";\n\n  isNextButtonHidden() {\n    return !(this.steps.length === this.selectedIndex + 1);\n  }\n\n  isStepDisabled(index: number) {\n    if (this.selectedIndex !== index) {\n      return this.selectedIndex === index - 1\n        ? !this.steps.find((_, i) => i == index - 1)?.completed\n        : true;\n    }\n    return false;\n  }\n\n  selectStepByIndex(index: number): void {\n    this.selectedIndex = index;\n  }\n}\n","<form #form [formGroup]=\"formGroup\" *ngIf=\"nameOnly\">\n  <bit-form-field>\n    <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"name\" />\n  </bit-form-field>\n</form>\n<form #form [formGroup]=\"formGroup\" *ngIf=\"!nameOnly\">\n  <h2>{{ \"generalInformation\" | i18n }}</h2>\n  <div class=\"tw-flex tw-w-full tw-space-x-4\" *ngIf=\"createOrganization\">\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n      <input bitInput type=\"text\" formControlName=\"name\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"billingEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"billingEmail\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\" *ngIf=\"isProvider\">\n      <bit-label>{{ \"clientOwnerEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"clientOwnerEmail\" />\n    </bit-form-field>\n  </div>\n  <div *ngIf=\"!isProvider && !acceptingSponsorship\">\n    <input\n      type=\"checkbox\"\n      name=\"businessOwned\"\n      formControlName=\"businessOwned\"\n      (change)=\"changedBusinessOwned.emit()\"\n    />\n    <bit-label for=\"businessOwned\" class=\"tw-mb-3\">{{ \"accountOwnedBusiness\" | i18n }}</bit-label>\n    <div class=\"tw-mt-4\" *ngIf=\"formGroup.controls['businessOwned'].value\">\n      <bit-form-field class=\"tw-w-1/2\">\n        <bit-label>{{ \"businessName\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"businessName\" />\n      </bit-form-field>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UntypedFormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-org-info\",\n  templateUrl: \"organization-information.component.html\",\n})\nexport class OrganizationInformationComponent {\n  @Input() nameOnly = false;\n  @Input() createOrganization = true;\n  @Input() isProvider = false;\n  @Input() acceptingSponsorship = false;\n  @Input() formGroup: UntypedFormGroup;\n  @Output() changedBusinessOwned = new EventEmitter<void>();\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-forbes\",\n  templateUrl: \"logo-forbes.component.html\",\n})\nexport class LogoForbesComponent {}\n","<figure>\n  <figcaption>\n    <cite>\n      <img\n        src=\"../../images/register-layout/forbes-logo.svg\"\n        class=\"tw-mx-auto tw-block tw-w-40\"\n        alt=\"Forbes Logo\"\n      />\n    </cite>\n  </figcaption>\n  <blockquote class=\"tw-mx-auto tw-mt-2 tw-max-w-xl tw-px-4 tw-text-center\">\n    “Bitwarden boasts the backing of some of the world's best security experts and an attractive,\n    easy-to-use interface”\n  </blockquote>\n</figure>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-us-news\",\n  templateUrl: \"logo-us-news.component.html\",\n})\nexport class LogoUSNewsComponent {}\n","<img\n  src=\"../../images/register-layout/usnews-360-badge.svg\"\n  class=\"tw-mx-auto tw-block tw-w-48\"\n  alt=\"US News 360 Reviews Best Password Manager\"\n/>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise-content\",\n  templateUrl: \"enterprise-content.component.html\",\n})\nexport class EnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams-content\",\n  templateUrl: \"teams-content.component.html\",\n})\nexport class TeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-trial-confirmation-details\",\n  templateUrl: \"confirmation-details.component.html\",\n})\nexport class ConfirmationDetailsComponent {\n  @Input() email: string;\n  @Input() orgLabel: string;\n}\n","export enum PaymentMethodType {\n  Card = 0,\n  BankAccount = 1,\n  PayPal = 2,\n  BitPay = 3,\n  Credit = 4,\n  WireTransfer = 5,\n  AppleInApp = 6,\n  GoogleInApp = 7,\n  Check = 8,\n}\n","<div class=\"tw-pl-6 tw-pb-6\">\n  <p class=\"tw-text-xl\">{{ \"trialThankYou\" | i18n: orgLabel }}</p>\n  <ul class=\"tw-list-disc\">\n    <li>\n      <p>\n        {{ \"trialConfirmationEmail\" | i18n }}\n        <span class=\"tw-font-bold\">{{ email }}</span\n        >.\n      </p>\n    </li>\n    <li>\n      <p>\n        {{ \"trialPaidInfoMessage\" | i18n: orgLabel }}\n      </p>\n    </li>\n  </ul>\n</div>\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationCreateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  planType: PlanType;\n  key: string;\n  keys: OrganizationKeysRequest;\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n  additionalSeats: number;\n  maxAutoscaleSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  collectionName: string;\n  taxIdNumber: string;\n  billingAddressLine1: string;\n  billingAddressLine2: string;\n  billingAddressCity: string;\n  billingAddressState: string;\n  billingAddressPostalCode: string;\n  billingAddressCountry: string;\n}\n","import { KeysRequest } from \"./keysRequest\";\n\nexport class OrganizationKeysRequest extends KeysRequest {\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    super(publicKey, encryptedPrivateKey);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationUpgradeRequest {\n  businessName: string;\n  planType: PlanType;\n  additionalSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  billingAddressCountry: string;\n  billingAddressPostalCode: string;\n  keys: OrganizationKeysRequest;\n}\n","import { OrganizationCreateRequest } from \"../organizationCreateRequest\";\n\nexport class ProviderOrganizationCreateRequest {\n  constructor(\n    public clientOwnerEmail: string,\n    public organizationCreateRequest: OrganizationCreateRequest\n  ) {}\n}\n","<div class=\"mb-4 text-lg\" *ngIf=\"showOptions && showMethods\">\n  <div class=\"form-check form-check-inline mr-4\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-card\"\n      [value]=\"paymentMethodType.Card\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-card\">\n      <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i> {{ \"creditCard\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline mr-4\" *ngIf=\"!hideBank\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-bank\"\n      [value]=\"paymentMethodType.BankAccount\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-bank\">\n      <i class=\"bwi bwi-fw bwi-bank\" aria-hidden=\"true\"></i> {{ \"bankAccount\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hidePaypal\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-paypal\"\n      [value]=\"paymentMethodType.PayPal\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-paypal\">\n      <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hideCredit\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-credit\"\n      [value]=\"paymentMethodType.Credit\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-credit\">\n      <i class=\"bwi bwi-fw bwi-dollar\" aria-hidden=\"true\"></i> {{ \"accountCredit\" | i18n }}</label\n    >\n  </div>\n</div>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Card\">\n  <div class=\"row\">\n    <div [ngClass]=\"trialFlow ? 'col-5' : 'col-4'\" class=\"form-group\">\n      <label for=\"stripe-card-number-element\">{{ \"number\" | i18n }}</label>\n      <div id=\"stripe-card-number-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div *ngIf=\"!trialFlow\" class=\"form-group col-8 d-flex align-items-end\">\n      <img\n        src=\"../../images/cards.png\"\n        alt=\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\"\n        width=\"323\"\n        height=\"32\"\n      />\n    </div>\n    <div [ngClass]=\"trialFlow ? 'col-3' : 'col-4'\" class=\"form-group\">\n      <label for=\"stripe-card-expiry-element\">{{ \"expiration\" | i18n }}</label>\n      <div id=\"stripe-card-expiry-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div class=\"form-group col-4\">\n      <div class=\"d-flex\">\n        <label for=\"stripe-card-cvc-element\">\n          {{ \"securityCode\" | i18n }}\n        </label>\n        <a\n          href=\"https://www.cvvnumber.com/cvv.html\"\n          tabindex=\"-1\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          class=\"ml-auto\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n      <div id=\"stripe-card-cvc-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.BankAccount\">\n  <app-callout type=\"warning\" title=\"{{ 'verifyBankAccount' | i18n }}\">\n    {{ \"verifyBankAccountInitialDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"routing_number\">{{ \"routingNumber\" | i18n }}</label>\n      <input\n        id=\"routing_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"routing_number\"\n        [(ngModel)]=\"bank.routing_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_number\">{{ \"accountNumber\" | i18n }}</label>\n      <input\n        id=\"account_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_number\"\n        [(ngModel)]=\"bank.account_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_name\">{{ \"accountHolderName\" | i18n }}</label>\n      <input\n        id=\"account_holder_name\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_holder_name\"\n        [(ngModel)]=\"bank.account_holder_name\"\n        required\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_type\">{{ \"bankAccountType\" | i18n }}</label>\n      <select\n        id=\"account_holder_type\"\n        class=\"form-control\"\n        name=\"account_holder_type\"\n        [(ngModel)]=\"bank.account_holder_type\"\n        required\n      >\n        <option value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option value=\"company\">{{ \"bankAccountTypeCompany\" | i18n }}</option>\n        <option value=\"individual\">{{ \"bankAccountTypeIndividual\" | i18n }}</option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.PayPal\">\n  <div class=\"mb-3\">\n    <div id=\"bt-dropin-container\" class=\"mb-1\"></div>\n    <small class=\"text-muted\">{{ \"paypalClickSubmit\" | i18n }}</small>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Credit\">\n  <app-callout type=\"note\">\n    {{ \"makeSureEnoughCredit\" | i18n }}\n  </app-callout>\n</ng-container>\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport ThemeVariables from \"../../scss/export.module.scss\";\n\nconst lightInputColor = ThemeVariables.lightInputColor;\nconst lightInputPlaceholderColor = ThemeVariables.lightInputPlaceholderColor;\nconst darkInputColor = ThemeVariables.darkInputColor;\nconst darkInputPlaceholderColor = ThemeVariables.darkInputPlaceholderColor;\n\n@Component({\n  selector: \"app-payment\",\n  templateUrl: \"payment.component.html\",\n})\nexport class PaymentComponent implements OnInit, OnDestroy {\n  @Input() showMethods = true;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.Card;\n  @Input() hideBank = false;\n  @Input() hidePaypal = false;\n  @Input() hideCredit = false;\n  @Input() trialFlow = false;\n\n  private destroy$ = new Subject<void>();\n\n  bank: any = {\n    routing_number: null,\n    account_number: null,\n    account_holder_name: null,\n    account_holder_type: \"\",\n    currency: \"USD\",\n    country: \"US\",\n  };\n\n  paymentMethodType = PaymentMethodType;\n\n  private btScript: HTMLScriptElement;\n  private btInstance: any = null;\n  private stripeScript: HTMLScriptElement;\n  private stripe: any = null;\n  private stripeElements: any = null;\n  private stripeCardNumberElement: any = null;\n  private stripeCardExpiryElement: any = null;\n  private stripeCardCvcElement: any = null;\n  private StripeElementStyle: any;\n  private StripeElementClasses: any;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private themingService: AbstractThemingService\n  ) {\n    this.stripeScript = window.document.createElement(\"script\");\n    this.stripeScript.src = \"https://js.stripe.com/v3/\";\n    this.stripeScript.async = true;\n    this.stripeScript.onload = () => {\n      this.stripe = (window as any).Stripe(process.env.STRIPE_KEY);\n      this.stripeElements = this.stripe.elements();\n      this.setStripeElement();\n    };\n    this.btScript = window.document.createElement(\"script\");\n    this.btScript.src = `scripts/dropin.js?cache=${process.env.CACHE_TAG}`;\n    this.btScript.async = true;\n    this.StripeElementStyle = {\n      base: {\n        color: null,\n        fontFamily:\n          '\"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, ' +\n          '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n        fontSize: \"14px\",\n        fontSmoothing: \"antialiased\",\n        \"::placeholder\": {\n          color: null,\n        },\n      },\n      invalid: {\n        color: null,\n      },\n    };\n    this.StripeElementClasses = {\n      focus: \"is-focused\",\n      empty: \"is-empty\",\n      invalid: \"is-invalid\",\n    };\n  }\n\n  async ngOnInit() {\n    if (!this.showOptions) {\n      this.hidePaypal = this.method !== PaymentMethodType.PayPal;\n      this.hideBank = this.method !== PaymentMethodType.BankAccount;\n      this.hideCredit = this.method !== PaymentMethodType.Credit;\n    }\n    await this.setTheme();\n    window.document.head.appendChild(this.stripeScript);\n    if (!this.hidePaypal) {\n      window.document.head.appendChild(this.btScript);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    window.document.head.removeChild(this.stripeScript);\n    window.setTimeout(() => {\n      Array.from(window.document.querySelectorAll(\"iframe\")).forEach((el) => {\n        if (el.src != null && el.src.indexOf(\"stripe\") > -1) {\n          try {\n            window.document.body.removeChild(el);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      });\n    }, 500);\n    if (!this.hidePaypal) {\n      window.document.head.removeChild(this.btScript);\n      window.setTimeout(() => {\n        Array.from(window.document.head.querySelectorAll(\"script\")).forEach((el) => {\n          if (el.src != null && el.src.indexOf(\"paypal\") > -1) {\n            try {\n              window.document.head.removeChild(el);\n            } catch (e) {\n              this.logService.error(e);\n            }\n          }\n        });\n        const btStylesheet = window.document.head.querySelector(\"#braintree-dropin-stylesheet\");\n        if (btStylesheet != null) {\n          try {\n            window.document.head.removeChild(btStylesheet);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      }, 500);\n    }\n  }\n\n  changeMethod() {\n    this.btInstance = null;\n\n    if (this.method === PaymentMethodType.PayPal) {\n      window.setTimeout(() => {\n        (window as any).braintree.dropin.create(\n          {\n            authorization: process.env.BRAINTREE_KEY,\n            container: \"#bt-dropin-container\",\n            paymentOptionPriority: [\"paypal\"],\n            paypal: {\n              flow: \"vault\",\n              buttonStyle: {\n                label: \"pay\",\n                size: \"medium\",\n                shape: \"pill\",\n                color: \"blue\",\n                tagline: \"false\",\n              },\n            },\n          },\n          (createErr: any, instance: any) => {\n            if (createErr != null) {\n              // eslint-disable-next-line\n              console.error(createErr);\n              return;\n            }\n            this.btInstance = instance;\n          }\n        );\n      }, 250);\n    } else {\n      this.setStripeElement();\n    }\n  }\n\n  createPaymentToken(): Promise<[string, PaymentMethodType]> {\n    return new Promise((resolve, reject) => {\n      if (this.method === PaymentMethodType.Credit) {\n        resolve([null, this.method]);\n      } else if (this.method === PaymentMethodType.PayPal) {\n        this.btInstance\n          .requestPaymentMethod()\n          .then((payload: any) => {\n            resolve([payload.nonce, this.method]);\n          })\n          .catch((err: any) => {\n            reject(err.message);\n          });\n      } else if (\n        this.method === PaymentMethodType.Card ||\n        this.method === PaymentMethodType.BankAccount\n      ) {\n        if (this.method === PaymentMethodType.Card) {\n          this.apiService\n            .postSetupPayment()\n            .then((clientSecret) =>\n              this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n            )\n            .then((result: any) => {\n              if (result.error) {\n                reject(result.error.message);\n              } else if (result.setupIntent && result.setupIntent.status === \"succeeded\") {\n                resolve([result.setupIntent.payment_method, this.method]);\n              } else {\n                reject();\n              }\n            });\n        } else {\n          this.stripe.createToken(\"bank_account\", this.bank).then((result: any) => {\n            if (result.error) {\n              reject(result.error.message);\n            } else if (result.token && result.token.id != null) {\n              resolve([result.token.id, this.method]);\n            } else {\n              reject();\n            }\n          });\n        }\n      }\n    });\n  }\n\n  handleStripeCardPayment(clientSecret: string, successCallback: () => Promise<any>): Promise<any> {\n    return new Promise<void>((resolve, reject) => {\n      if (this.showMethods && this.stripeCardNumberElement == null) {\n        reject();\n        return;\n      }\n      const handleCardPayment = () =>\n        this.showMethods\n          ? this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n          : this.stripe.handleCardSetup(clientSecret);\n      return handleCardPayment().then(async (result: any) => {\n        if (result.error) {\n          reject(result.error.message);\n        } else if (result.paymentIntent && result.paymentIntent.status === \"succeeded\") {\n          if (successCallback != null) {\n            await successCallback();\n          }\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  private setStripeElement() {\n    window.setTimeout(() => {\n      if (this.showMethods && this.method === PaymentMethodType.Card) {\n        if (this.stripeCardNumberElement == null) {\n          this.stripeCardNumberElement = this.stripeElements.create(\"cardNumber\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        if (this.stripeCardExpiryElement == null) {\n          this.stripeCardExpiryElement = this.stripeElements.create(\"cardExpiry\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n          });\n        }\n        if (this.stripeCardCvcElement == null) {\n          this.stripeCardCvcElement = this.stripeElements.create(\"cardCvc\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        this.stripeCardNumberElement.mount(\"#stripe-card-number-element\");\n        this.stripeCardExpiryElement.mount(\"#stripe-card-expiry-element\");\n        this.stripeCardCvcElement.mount(\"#stripe-card-cvc-element\");\n      }\n    }, 50);\n  }\n\n  private async setTheme() {\n    this.themingService.theme$.pipe(takeUntil(this.destroy$)).subscribe((theme) => {\n      if (theme.effectiveTheme === ThemeType.Dark) {\n        this.StripeElementStyle.base.color = darkInputColor;\n        this.StripeElementStyle.base[\"::placeholder\"].color = darkInputPlaceholderColor;\n        this.StripeElementStyle.invalid.color = darkInputColor;\n      } else {\n        this.StripeElementStyle.base.color = lightInputColor;\n        this.StripeElementStyle.base[\"::placeholder\"].color = lightInputPlaceholderColor;\n        this.StripeElementStyle.invalid.color = lightInputColor;\n      }\n    });\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"darkInputColor\":\"#fff\",\"darkInputPlaceholderColor\":\"#bac0ce\",\"lightInputColor\":\"#465057\",\"lightInputPlaceholderColor\":\"#b6b8b8\"};","export class TaxInfoUpdateRequest {\n  country: string;\n  postalCode: string;\n}\n","import { TaxInfoUpdateRequest } from \"./taxInfoUpdateRequest\";\n\nexport class OrganizationTaxInfoUpdateRequest extends TaxInfoUpdateRequest {\n  taxId: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n}\n","<div class=\"row\">\n  <div [ngClass]=\"trialFlow ? 'col-7' : 'col-6'\">\n    <div class=\"form-group\">\n      <label for=\"addressCountry\">{{ \"country\" | i18n }}</label>\n      <select\n        id=\"addressCountry\"\n        class=\"form-control\"\n        [(ngModel)]=\"taxInfo.country\"\n        required\n        name=\"addressCountry\"\n        autocomplete=\"country\"\n        (change)=\"changeCountry()\"\n      >\n        <option value=\"\">-- Select --</option>\n        <option value=\"US\">United States</option>\n        <option value=\"CN\">China</option>\n        <option value=\"FR\">France</option>\n        <option value=\"DE\">Germany</option>\n        <option value=\"CA\">Canada</option>\n        <option value=\"GB\">United Kingdom</option>\n        <option value=\"AU\">Australia</option>\n        <option value=\"IN\">India</option>\n        <option value=\"-\" disabled></option>\n        <option value=\"AF\">Afghanistan</option>\n        <option value=\"AX\">Åland Islands</option>\n        <option value=\"AL\">Albania</option>\n        <option value=\"DZ\">Algeria</option>\n        <option value=\"AS\">American Samoa</option>\n        <option value=\"AD\">Andorra</option>\n        <option value=\"AO\">Angola</option>\n        <option value=\"AI\">Anguilla</option>\n        <option value=\"AQ\">Antarctica</option>\n        <option value=\"AG\">Antigua and Barbuda</option>\n        <option value=\"AR\">Argentina</option>\n        <option value=\"AM\">Armenia</option>\n        <option value=\"AW\">Aruba</option>\n        <option value=\"AT\">Austria</option>\n        <option value=\"AZ\">Azerbaijan</option>\n        <option value=\"BS\">Bahamas</option>\n        <option value=\"BH\">Bahrain</option>\n        <option value=\"BD\">Bangladesh</option>\n        <option value=\"BB\">Barbados</option>\n        <option value=\"BY\">Belarus</option>\n        <option value=\"BE\">Belgium</option>\n        <option value=\"BZ\">Belize</option>\n        <option value=\"BJ\">Benin</option>\n        <option value=\"BM\">Bermuda</option>\n        <option value=\"BT\">Bhutan</option>\n        <option value=\"BO\">Bolivia, Plurinational State of</option>\n        <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\n        <option value=\"BA\">Bosnia and Herzegovina</option>\n        <option value=\"BW\">Botswana</option>\n        <option value=\"BV\">Bouvet Island</option>\n        <option value=\"BR\">Brazil</option>\n        <option value=\"IO\">British Indian Ocean Territory</option>\n        <option value=\"BN\">Brunei Darussalam</option>\n        <option value=\"BG\">Bulgaria</option>\n        <option value=\"BF\">Burkina Faso</option>\n        <option value=\"BI\">Burundi</option>\n        <option value=\"KH\">Cambodia</option>\n        <option value=\"CM\">Cameroon</option>\n        <option value=\"CV\">Cape Verde</option>\n        <option value=\"KY\">Cayman Islands</option>\n        <option value=\"CF\">Central African Republic</option>\n        <option value=\"TD\">Chad</option>\n        <option value=\"CL\">Chile</option>\n        <option value=\"CX\">Christmas Island</option>\n        <option value=\"CC\">Cocos (Keeling) Islands</option>\n        <option value=\"CO\">Colombia</option>\n        <option value=\"KM\">Comoros</option>\n        <option value=\"CG\">Congo</option>\n        <option value=\"CD\">Congo, the Democratic Republic of the</option>\n        <option value=\"CK\">Cook Islands</option>\n        <option value=\"CR\">Costa Rica</option>\n        <option value=\"CI\">Côte d'Ivoire</option>\n        <option value=\"HR\">Croatia</option>\n        <option value=\"CU\">Cuba</option>\n        <option value=\"CW\">Curaçao</option>\n        <option value=\"CY\">Cyprus</option>\n        <option value=\"CZ\">Czech Republic</option>\n        <option value=\"DK\">Denmark</option>\n        <option value=\"DJ\">Djibouti</option>\n        <option value=\"DM\">Dominica</option>\n        <option value=\"DO\">Dominican Republic</option>\n        <option value=\"EC\">Ecuador</option>\n        <option value=\"EG\">Egypt</option>\n        <option value=\"SV\">El Salvador</option>\n        <option value=\"GQ\">Equatorial Guinea</option>\n        <option value=\"ER\">Eritrea</option>\n        <option value=\"EE\">Estonia</option>\n        <option value=\"ET\">Ethiopia</option>\n        <option value=\"FK\">Falkland Islands (Malvinas)</option>\n        <option value=\"FO\">Faroe Islands</option>\n        <option value=\"FJ\">Fiji</option>\n        <option value=\"FI\">Finland</option>\n        <option value=\"GF\">French Guiana</option>\n        <option value=\"PF\">French Polynesia</option>\n        <option value=\"TF\">French Southern Territories</option>\n        <option value=\"GA\">Gabon</option>\n        <option value=\"GM\">Gambia</option>\n        <option value=\"GE\">Georgia</option>\n        <option value=\"GH\">Ghana</option>\n        <option value=\"GI\">Gibraltar</option>\n        <option value=\"GR\">Greece</option>\n        <option value=\"GL\">Greenland</option>\n        <option value=\"GD\">Grenada</option>\n        <option value=\"GP\">Guadeloupe</option>\n        <option value=\"GU\">Guam</option>\n        <option value=\"GT\">Guatemala</option>\n        <option value=\"GG\">Guernsey</option>\n        <option value=\"GN\">Guinea</option>\n        <option value=\"GW\">Guinea-Bissau</option>\n        <option value=\"GY\">Guyana</option>\n        <option value=\"HT\">Haiti</option>\n        <option value=\"HM\">Heard Island and McDonald Islands</option>\n        <option value=\"VA\">Holy See (Vatican City State)</option>\n        <option value=\"HN\">Honduras</option>\n        <option value=\"HK\">Hong Kong</option>\n        <option value=\"HU\">Hungary</option>\n        <option value=\"IS\">Iceland</option>\n        <option value=\"ID\">Indonesia</option>\n        <option value=\"IR\">Iran, Islamic Republic of</option>\n        <option value=\"IQ\">Iraq</option>\n        <option value=\"IE\">Ireland</option>\n        <option value=\"IM\">Isle of Man</option>\n        <option value=\"IL\">Israel</option>\n        <option value=\"IT\">Italy</option>\n        <option value=\"JM\">Jamaica</option>\n        <option value=\"JP\">Japan</option>\n        <option value=\"JE\">Jersey</option>\n        <option value=\"JO\">Jordan</option>\n        <option value=\"KZ\">Kazakhstan</option>\n        <option value=\"KE\">Kenya</option>\n        <option value=\"KI\">Kiribati</option>\n        <option value=\"KP\">Korea, Democratic People's Republic of</option>\n        <option value=\"KR\">Korea, Republic of</option>\n        <option value=\"KW\">Kuwait</option>\n        <option value=\"KG\">Kyrgyzstan</option>\n        <option value=\"LA\">Lao People's Democratic Republic</option>\n        <option value=\"LV\">Latvia</option>\n        <option value=\"LB\">Lebanon</option>\n        <option value=\"LS\">Lesotho</option>\n        <option value=\"LR\">Liberia</option>\n        <option value=\"LY\">Libya</option>\n        <option value=\"LI\">Liechtenstein</option>\n        <option value=\"LT\">Lithuania</option>\n        <option value=\"LU\">Luxembourg</option>\n        <option value=\"MO\">Macao</option>\n        <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option>\n        <option value=\"MG\">Madagascar</option>\n        <option value=\"MW\">Malawi</option>\n        <option value=\"MY\">Malaysia</option>\n        <option value=\"MV\">Maldives</option>\n        <option value=\"ML\">Mali</option>\n        <option value=\"MT\">Malta</option>\n        <option value=\"MH\">Marshall Islands</option>\n        <option value=\"MQ\">Martinique</option>\n        <option value=\"MR\">Mauritania</option>\n        <option value=\"MU\">Mauritius</option>\n        <option value=\"YT\">Mayotte</option>\n        <option value=\"MX\">Mexico</option>\n        <option value=\"FM\">Micronesia, Federated States of</option>\n        <option value=\"MD\">Moldova, Republic of</option>\n        <option value=\"MC\">Monaco</option>\n        <option value=\"MN\">Mongolia</option>\n        <option value=\"ME\">Montenegro</option>\n        <option value=\"MS\">Montserrat</option>\n        <option value=\"MA\">Morocco</option>\n        <option value=\"MZ\">Mozambique</option>\n        <option value=\"MM\">Myanmar</option>\n        <option value=\"NA\">Namibia</option>\n        <option value=\"NR\">Nauru</option>\n        <option value=\"NP\">Nepal</option>\n        <option value=\"NL\">Netherlands</option>\n        <option value=\"NC\">New Caledonia</option>\n        <option value=\"NZ\">New Zealand</option>\n        <option value=\"NI\">Nicaragua</option>\n        <option value=\"NE\">Niger</option>\n        <option value=\"NG\">Nigeria</option>\n        <option value=\"NU\">Niue</option>\n        <option value=\"NF\">Norfolk Island</option>\n        <option value=\"MP\">Northern Mariana Islands</option>\n        <option value=\"NO\">Norway</option>\n        <option value=\"OM\">Oman</option>\n        <option value=\"PK\">Pakistan</option>\n        <option value=\"PW\">Palau</option>\n        <option value=\"PS\">Palestinian Territory, Occupied</option>\n        <option value=\"PA\">Panama</option>\n        <option value=\"PG\">Papua New Guinea</option>\n        <option value=\"PY\">Paraguay</option>\n        <option value=\"PE\">Peru</option>\n        <option value=\"PH\">Philippines</option>\n        <option value=\"PN\">Pitcairn</option>\n        <option value=\"PL\">Poland</option>\n        <option value=\"PT\">Portugal</option>\n        <option value=\"PR\">Puerto Rico</option>\n        <option value=\"QA\">Qatar</option>\n        <option value=\"RE\">Réunion</option>\n        <option value=\"RO\">Romania</option>\n        <option value=\"RU\">Russian Federation</option>\n        <option value=\"RW\">Rwanda</option>\n        <option value=\"BL\">Saint Barthélemy</option>\n        <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option>\n        <option value=\"KN\">Saint Kitts and Nevis</option>\n        <option value=\"LC\">Saint Lucia</option>\n        <option value=\"MF\">Saint Martin (French part)</option>\n        <option value=\"PM\">Saint Pierre and Miquelon</option>\n        <option value=\"VC\">Saint Vincent and the Grenadines</option>\n        <option value=\"WS\">Samoa</option>\n        <option value=\"SM\">San Marino</option>\n        <option value=\"ST\">Sao Tome and Principe</option>\n        <option value=\"SA\">Saudi Arabia</option>\n        <option value=\"SN\">Senegal</option>\n        <option value=\"RS\">Serbia</option>\n        <option value=\"SC\">Seychelles</option>\n        <option value=\"SL\">Sierra Leone</option>\n        <option value=\"SG\">Singapore</option>\n        <option value=\"SX\">Sint Maarten (Dutch part)</option>\n        <option value=\"SK\">Slovakia</option>\n        <option value=\"SI\">Slovenia</option>\n        <option value=\"SB\">Solomon Islands</option>\n        <option value=\"SO\">Somalia</option>\n        <option value=\"ZA\">South Africa</option>\n        <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\n        <option value=\"SS\">South Sudan</option>\n        <option value=\"ES\">Spain</option>\n        <option value=\"LK\">Sri Lanka</option>\n        <option value=\"SD\">Sudan</option>\n        <option value=\"SR\">Suriname</option>\n        <option value=\"SJ\">Svalbard and Jan Mayen</option>\n        <option value=\"SZ\">Swaziland</option>\n        <option value=\"SE\">Sweden</option>\n        <option value=\"CH\">Switzerland</option>\n        <option value=\"SY\">Syrian Arab Republic</option>\n        <option value=\"TW\">Taiwan</option>\n        <option value=\"TJ\">Tajikistan</option>\n        <option value=\"TZ\">Tanzania, United Republic of</option>\n        <option value=\"TH\">Thailand</option>\n        <option value=\"TL\">Timor-Leste</option>\n        <option value=\"TG\">Togo</option>\n        <option value=\"TK\">Tokelau</option>\n        <option value=\"TO\">Tonga</option>\n        <option value=\"TT\">Trinidad and Tobago</option>\n        <option value=\"TN\">Tunisia</option>\n        <option value=\"TR\">Turkey</option>\n        <option value=\"TM\">Turkmenistan</option>\n        <option value=\"TC\">Turks and Caicos Islands</option>\n        <option value=\"TV\">Tuvalu</option>\n        <option value=\"UG\">Uganda</option>\n        <option value=\"UA\">Ukraine</option>\n        <option value=\"AE\">United Arab Emirates</option>\n        <option value=\"UM\">United States Minor Outlying Islands</option>\n        <option value=\"UY\">Uruguay</option>\n        <option value=\"UZ\">Uzbekistan</option>\n        <option value=\"VU\">Vanuatu</option>\n        <option value=\"VE\">Venezuela, Bolivarian Republic of</option>\n        <option value=\"VN\">Viet Nam</option>\n        <option value=\"VG\">Virgin Islands, British</option>\n        <option value=\"VI\">Virgin Islands, U.S.</option>\n        <option value=\"WF\">Wallis and Futuna</option>\n        <option value=\"EH\">Western Sahara</option>\n        <option value=\"YE\">Yemen</option>\n        <option value=\"ZM\">Zambia</option>\n        <option value=\"ZW\">Zimbabwe</option>\n      </select>\n    </div>\n  </div>\n  <div [ngClass]=\"trialFlow ? 'col-5' : 'col-3'\">\n    <div class=\"form-group\">\n      <label for=\"addressPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n      <input\n        id=\"addressPostalCode\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressPostalCode\"\n        [(ngModel)]=\"taxInfo.postalCode\"\n        [required]=\"taxInfo.country === 'US'\"\n        autocomplete=\"postal-code\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\" *ngIf=\"organizationId && taxInfo.country !== 'US'\">\n    <div class=\"form-group form-check\">\n      <input\n        class=\"form-check-input\"\n        id=\"addressIncludeTaxId\"\n        name=\"addressIncludeTaxId\"\n        type=\"checkbox\"\n        [(ngModel)]=\"taxInfo.includeTaxId\"\n      />\n      <label class=\"form-check-label\" for=\"addressIncludeTaxId\">{{ \"includeVAT\" | i18n }}</label>\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"taxId\">{{ \"taxIdNumber\" | i18n }}</label>\n      <input id=\"taxId\" class=\"form-control\" type=\"text\" name=\"taxId\" [(ngModel)]=\"taxInfo.taxId\" />\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine1\">{{ \"address1\" | i18n }}</label>\n      <input\n        id=\"addressLine1\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine1\"\n        [(ngModel)]=\"taxInfo.line1\"\n        autocomplete=\"address-line1\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine2\">{{ \"address2\" | i18n }}</label>\n      <input\n        id=\"addressLine2\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine2\"\n        [(ngModel)]=\"taxInfo.line2\"\n        autocomplete=\"address-line2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressCity\">{{ \"cityTown\" | i18n }}</label>\n      <input\n        id=\"addressCity\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressCity\"\n        [(ngModel)]=\"taxInfo.city\"\n        autocomplete=\"address-level2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressState\">{{ \"stateProvince\" | i18n }}</label>\n      <input\n        id=\"addressState\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressState\"\n        [(ngModel)]=\"taxInfo.state\"\n        autocomplete=\"address-level1\"\n      />\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationTaxInfoUpdateRequest } from \"@bitwarden/common/models/request/organizationTaxInfoUpdateRequest\";\nimport { TaxInfoUpdateRequest } from \"@bitwarden/common/models/request/taxInfoUpdateRequest\";\nimport { TaxInfoResponse } from \"@bitwarden/common/models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"@bitwarden/common/models/response/taxRateResponse\";\n\ntype TaxInfoView = Omit<TaxInfoResponse, \"taxIdType\"> & {\n  includeTaxId: boolean;\n  [key: string]: unknown;\n};\n\n@Component({\n  selector: \"app-tax-info\",\n  templateUrl: \"tax-info.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TaxInfoComponent {\n  @Input() trialFlow = false;\n  @Output() onCountryChanged = new EventEmitter();\n\n  loading = true;\n  organizationId: string;\n  taxInfo: TaxInfoView = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  taxRates: TaxRateResponse[];\n\n  private pristine: TaxInfoView = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      if (this.organizationId) {\n        try {\n          const taxInfo = await this.organizationApiService.getTaxInfo(this.organizationId);\n          if (taxInfo) {\n            this.taxInfo.taxId = taxInfo.taxId;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.line1 = taxInfo.line1;\n            this.taxInfo.line2 = taxInfo.line2;\n            this.taxInfo.city = taxInfo.city;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n            this.taxInfo.includeTaxId =\n              this.taxInfo.country !== \"US\" &&\n              (!!taxInfo.taxId ||\n                !!taxInfo.line1 ||\n                !!taxInfo.line2 ||\n                !!taxInfo.city ||\n                !!taxInfo.state);\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      } else {\n        try {\n          const taxInfo = await this.apiService.getTaxInfo();\n          if (taxInfo) {\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.pristine = Object.assign({}, this.taxInfo);\n      // If not the default (US) then trigger onCountryChanged\n      if (this.taxInfo.country !== \"US\") {\n        this.onCountryChanged.emit();\n      }\n    });\n\n    try {\n      const taxRates = await this.apiService.getTaxRates();\n      if (taxRates) {\n        this.taxRates = taxRates.data;\n      }\n    } catch (e) {\n      this.logService.error(e);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  get taxRate() {\n    if (this.taxRates != null) {\n      const localTaxRate = this.taxRates.find(\n        (x) => x.country === this.taxInfo.country && x.postalCode === this.taxInfo.postalCode\n      );\n      return localTaxRate?.rate ?? null;\n    }\n  }\n\n  getTaxInfoRequest(): TaxInfoUpdateRequest {\n    if (this.organizationId) {\n      const request = new OrganizationTaxInfoUpdateRequest();\n      request.taxId = this.taxInfo.taxId;\n      request.state = this.taxInfo.state;\n      request.line1 = this.taxInfo.line1;\n      request.line2 = this.taxInfo.line2;\n      request.city = this.taxInfo.city;\n      request.state = this.taxInfo.state;\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    } else {\n      const request = new TaxInfoUpdateRequest();\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    }\n  }\n\n  submitTaxInfo(): Promise<any> {\n    if (!this.hasChanged()) {\n      return new Promise<void>((resolve) => {\n        resolve();\n      });\n    }\n    const request = this.getTaxInfoRequest();\n    return this.organizationId\n      ? this.organizationApiService.updateTaxInfo(\n          this.organizationId,\n          request as OrganizationTaxInfoUpdateRequest\n        )\n      : this.apiService.putTaxInfo(request);\n  }\n\n  changeCountry() {\n    if (this.taxInfo.country === \"US\") {\n      this.taxInfo.includeTaxId = false;\n      this.taxInfo.taxId = null;\n      this.taxInfo.line1 = null;\n      this.taxInfo.line2 = null;\n      this.taxInfo.city = null;\n      this.taxInfo.state = null;\n    }\n    this.onCountryChanged.emit();\n  }\n\n  private hasChanged(): boolean {\n    for (const key in this.taxInfo) {\n      // eslint-disable-next-line\n      if (this.pristine.hasOwnProperty(key) && this.pristine[key] !== this.taxInfo[key]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"createOrganization && selfHosted\">\n  <p>{{ \"uploadLicenseFileOrg\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_organization_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n  </form>\n</ng-container>\n<form\n  #form\n  [formGroup]=\"formGroup\"\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n  *ngIf=\"!loading && !selfHosted && this.plans\"\n  class=\"tw-pt-6\"\n>\n  <app-org-info\n    (changedBusinessOwned)=\"changedOwnedBusiness()\"\n    [formGroup]=\"formGroup\"\n    [createOrganization]=\"createOrganization\"\n    [isProvider]=\"!!providerId\"\n    [acceptingSponsorship]=\"acceptingSponsorship\"\n  ></app-org-info>\n  <h2 class=\"mt-5\">{{ \"chooseYourPlan\" | i18n }}</h2>\n  <div *ngFor=\"let selectableProduct of selectableProducts\" class=\"form-check form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"product\"\n      id=\"product{{ selectableProduct.product }}\"\n      [value]=\"selectableProduct.product\"\n      formControlName=\"product\"\n      (change)=\"changedProduct()\"\n    />\n    <label class=\"form-check-label\" for=\"product{{ selectableProduct.product }}\">\n      {{ selectableProduct.nameLocalizationKey | i18n }}\n      <small class=\"mb-1\">{{ selectableProduct.descriptionLocalizationKey | i18n: \"1\" }}</small>\n      <ng-container\n        *ngIf=\"selectableProduct.product === productTypes.Enterprise; else fullFeatureList\"\n      >\n        <small>• {{ \"includeAllTeamsFeatures\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSso\">• {{ \"includeSsoAuthentication\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasPolicies\"\n          >• {{ \"includeEnterprisePolicies\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-container>\n      <ng-template #fullFeatureList>\n        <small *ngIf=\"selectableProduct.product == productTypes.Free\"\n          >• {{ \"limitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"selectableProduct.product != productTypes.Free && selectableProduct.maxUsers\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxUsers\">• {{ \"addShareUnlimitedUsers\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.maxCollections\"\n          >• {{ \"limitedCollections\" | i18n: selectableProduct.maxCollections }}</small\n        >\n        <small *ngIf=\"selectableProduct.maxAdditionalSeats\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxAdditionalSeats }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxCollections\"\n          >• {{ \"createUnlimitedCollections\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.baseStorageGb\"\n          >• {{ \"gbEncryptedFileStorage\" | i18n: selectableProduct.baseStorageGb + \"GB\" }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasGroups\">• {{ \"controlAccessWithGroups\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasApi\">• {{ \"trackAuditLogs\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasDirectory\"\n          >• {{ \"syncUsersFromDirectory\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.usersGetPremium\">• {{ \"usersGetPremium\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.product != productTypes.Free\"\n          >• {{ \"priorityCustomerSupport\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-template>\n      <span *ngIf=\"selectableProduct.product != productTypes.Free\">\n        <ng-container *ngIf=\"selectableProduct.basePrice && !acceptingSponsorship\">\n          {{ selectableProduct.basePrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }},\n          {{ \"includesXUsers\" | i18n: selectableProduct.baseSeats }}\n          <ng-container *ngIf=\"selectableProduct.hasAdditionalSeatsOption\">\n            {{ (\"additionalUsers\" | i18n).toLowerCase() }}\n            {{ selectableProduct.seatPrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </ng-container>\n        </ng-container>\n      </span>\n      <span *ngIf=\"!selectableProduct.basePrice && selectableProduct.hasAdditionalSeatsOption\">\n        {{ \"costPerUser\" | i18n: (selectableProduct.seatPrice / 12 | currency: \"$\") }} /{{\n          \"month\" | i18n\n        }}\n      </span>\n      <span *ngIf=\"selectableProduct.product == productTypes.Free\">{{ \"freeForever\" | i18n }}</span>\n    </label>\n  </div>\n  <div *ngIf=\"formGroup.controls['product'].value !== productTypes.Free\">\n    <ng-container *ngIf=\"selectedPlan.hasAdditionalSeatsOption && !selectedPlan.baseSeats\">\n      <h2 class=\"mt-5\">{{ \"users\" | i18n }}</h2>\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <label for=\"additionalSeats\">{{ \"userSeats\" | i18n }}</label>\n          <input\n            id=\"additionalSeats\"\n            class=\"form-control\"\n            type=\"number\"\n            name=\"additionalSeats\"\n            formControlName=\"additionalSeats\"\n            placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n            required\n          />\n          <small class=\"text-muted form-text\">{{ \"userSeatsHowManyDesc\" | i18n }}</small>\n        </div>\n      </div>\n    </ng-container>\n    <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n    <div class=\"row\" *ngIf=\"selectedPlan.hasAdditionalSeatsOption && selectedPlan.baseSeats\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalSeats\">{{ \"additionalUserSeats\" | i18n }}</label>\n        <input\n          id=\"additionalSeats\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalSeats\"\n          formControlName=\"additionalSeats\"\n          placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"userSeatsAdditionalDesc\"\n            | i18n: selectedPlan.baseSeats:(seatPriceMonthly(selectedPlan) | currency: \"$\")\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n        <input\n          id=\"additionalStorage\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalStorageGb\"\n          formControlName=\"additionalStorage\"\n          step=\"1\"\n          placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"additionalStorageIntervalDesc\"\n            | i18n\n              : \"1 GB\"\n              : (additionalStoragePriceMonthly(selectedPlan) | currency: \"$\")\n              : (\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\" *ngIf=\"selectedPlan.hasPremiumAccessOption\">\n        <div class=\"form-check\">\n          <input\n            id=\"premiumAccess\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"premiumAccessAddon\"\n            formControlName=\"premiumAccessAddon\"\n          />\n          <label for=\"premiumAccess\" class=\"form-check-label bold\">{{\n            \"premiumAccess\" | i18n\n          }}</label>\n        </div>\n        <small class=\"text-muted form-text\">{{\n          \"premiumAccessDesc\" | i18n: (3.33 | currency: \"$\"):(\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n    <div class=\"form-check form-check-block\" *ngFor=\"let selectablePlan of selectablePlans\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"plan\"\n        id=\"interval{{ selectablePlan.type }}\"\n        [value]=\"selectablePlan.type\"\n        formControlName=\"plan\"\n      />\n      <label class=\"form-check-label\" for=\"interval{{ selectablePlan.type }}\">\n        <ng-container *ngIf=\"selectablePlan.isAnnual\">\n          {{ \"annually\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            <ng-container *ngIf=\"acceptingSponsorship; else notAcceptingSponsorship\">\n              <span style=\"text-decoration: line-through\">{{\n                selectablePlan.basePrice | currency: \"$\"\n              }}</span>\n              {{ \"freeWithSponsorship\" | i18n }}\n            </ng-container>\n            <ng-template #notAcceptingSponsorship>\n              {{ selectablePlan.basePrice | currency: \"$\" }}\n              /{{ \"year\" | i18n }}\n            </ng-template>\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} = {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{\n              \"year\" | i18n\n            }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"year\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\">\n            {{ \"premiumAccess\" | i18n }}:\n            {{ selectablePlan.premiumAccessOptionCost / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ 40 | currency: \"$\" }}\n            /{{ \"year\" | i18n }}\n          </small>\n        </ng-container>\n        <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n          {{ \"monthly\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ selectablePlan.basePrice | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice | currency: \"$\" }} {{ \"monthAbbr\" | i18n }} =\n            {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n          <small\n            *ngIf=\"\n              selectablePlan.hasPremiumAccessOption &&\n              formGroup.controls['premiumAccessAddon'].value\n            \"\n          >\n            {{ \"premiumAccess\" | i18n }}:\n            {{ selectablePlan.premiumAccessOptionCost | currency: \"$\" }} {{ \"monthAbbr\" | i18n }} =\n            {{ 40 | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n        </ng-container>\n      </label>\n    </div>\n    <hr class=\"my-3\" />\n    <h2 class=\"spaced-header mb-4\">\n      {{ (createOrganization ? \"paymentInformation\" : \"billingInformation\") | i18n }}\n    </h2>\n    <small class=\"text-muted font-italic mb-3 d-block\">\n      {{ paymentDesc }}\n    </small>\n    <app-payment *ngIf=\"createOrganization\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    <div id=\"price\" class=\"my-4\">\n      <div class=\"text-muted text-sm\">\n        {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n        <br />\n        <ng-container>\n          {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n        </ng-container>\n      </div>\n      <hr class=\"my-1 col-3 ml-0\" />\n      <p class=\"text-lg\">\n        <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{\n          selectedPlanInterval | i18n\n        }}\n      </p>\n    </div>\n    <ng-container *ngIf=\"!createOrganization\">\n      <app-payment [showMethods]=\"false\"></app-payment>\n    </ng-container>\n  </div>\n  <div *ngIf=\"singleOrgPolicyBlock\" class=\"mt-4\">\n    <app-callout [type]=\"'error'\">{{ \"singleOrgBlockCreateMessage\" | i18n }}</app-callout>\n  </div>\n  <div class=\"mt-4\">\n    <bit-submit-button [loading]=\"form.loading\" [disabled]=\"!formGroup.valid\">{{\n      \"submit\" | i18n\n    }}</bit-submit-button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { OrganizationCreateRequest } from \"@bitwarden/common/models/request/organizationCreateRequest\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organizationKeysRequest\";\nimport { OrganizationUpgradeRequest } from \"@bitwarden/common/models/request/organizationUpgradeRequest\";\nimport { ProviderOrganizationCreateRequest } from \"@bitwarden/common/models/request/provider/providerOrganizationCreateRequest\";\nimport { PlanResponse } from \"@bitwarden/common/models/response/planResponse\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\ninterface OnSuccessArgs {\n  organizationId: string;\n}\n\n@Component({\n  selector: \"app-organization-plans\",\n  templateUrl: \"organization-plans.component.html\",\n})\nexport class OrganizationPlansComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxComponent: TaxInfoComponent;\n\n  @Input() organizationId: string;\n  @Input() showFree = true;\n  @Input() showCancel = false;\n  @Input() acceptingSponsorship = false;\n  @Input() product: ProductType = ProductType.Free;\n  @Input() plan: PlanType = PlanType.Free;\n  @Input() providerId: string;\n  @Output() onSuccess = new EventEmitter<OnSuccessArgs>();\n  @Output() onCanceled = new EventEmitter<void>();\n  @Output() onTrialBillingSuccess = new EventEmitter();\n\n  loading = true;\n  selfHosted = false;\n  productTypes = ProductType;\n  formPromise: Promise<string>;\n  singleOrgPolicyBlock = false;\n  isInTrialFlow = false;\n  discount = 0;\n\n  formGroup = this.formBuilder.group({\n    name: [\"\"],\n    billingEmail: [\"\", [Validators.email]],\n    businessOwned: [false],\n    premiumAccessAddon: [false],\n    additionalStorage: [0, [Validators.min(0), Validators.max(99)]],\n    additionalSeats: [0, [Validators.min(0), Validators.max(100000)]],\n    clientOwnerEmail: [\"\", [Validators.email]],\n    businessName: [\"\"],\n    plan: [this.plan],\n    product: [this.product],\n  });\n\n  plans: PlanResponse[];\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private router: Router,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private organizationService: OrganizationService,\n    private logService: LogService,\n    private messagingService: MessagingService,\n    private formBuilder: UntypedFormBuilder,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    if (!this.selfHosted) {\n      const plans = await this.apiService.getPlans();\n      this.plans = plans.data;\n      if (this.product === ProductType.Enterprise || this.product === ProductType.Teams) {\n        this.formGroup.controls.businessOwned.setValue(true);\n      }\n    }\n\n    if (this.providerId) {\n      this.formGroup.controls.businessOwned.setValue(true);\n      this.changedOwnedBusiness();\n    }\n\n    if (!this.createOrganization || this.acceptingSponsorship) {\n      this.formGroup.controls.product.setValue(ProductType.Families);\n      this.changedProduct();\n    }\n\n    if (this.createOrganization) {\n      this.formGroup.controls.name.addValidators(Validators.required);\n      this.formGroup.controls.billingEmail.addValidators(Validators.required);\n    }\n\n    this.loading = false;\n  }\n\n  get createOrganization() {\n    return this.organizationId == null;\n  }\n\n  get selectedPlan() {\n    return this.plans.find((plan) => plan.type === this.formGroup.controls.plan.value);\n  }\n\n  get selectedPlanInterval() {\n    return this.selectedPlan.isAnnual ? \"year\" : \"month\";\n  }\n\n  get selectableProducts() {\n    let validPlans = this.plans.filter((plan) => plan.type !== PlanType.Custom);\n\n    if (this.formGroup.controls.businessOwned.value) {\n      validPlans = validPlans.filter((plan) => plan.canBeUsedByBusiness);\n    }\n\n    if (!this.showFree) {\n      validPlans = validPlans.filter((plan) => plan.product !== ProductType.Free);\n    }\n\n    validPlans = validPlans.filter(\n      (plan) =>\n        !plan.legacyYear &&\n        !plan.disabled &&\n        (plan.isAnnual || plan.product === this.productTypes.Free)\n    );\n\n    if (this.acceptingSponsorship) {\n      const familyPlan = this.plans.find((plan) => plan.type === PlanType.FamiliesAnnually);\n      this.discount = familyPlan.basePrice;\n      validPlans = [familyPlan];\n    }\n\n    return validPlans;\n  }\n\n  get selectablePlans() {\n    return this.plans?.filter(\n      (plan) =>\n        !plan.legacyYear && !plan.disabled && plan.product === this.formGroup.controls.product.value\n    );\n  }\n\n  additionalStoragePriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.additionalStoragePricePerGb;\n    }\n    return selectedPlan.additionalStoragePricePerGb / 12;\n  }\n\n  seatPriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.seatPrice;\n    }\n    return selectedPlan.seatPrice / 12;\n  }\n\n  additionalStorageTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalStorageOption) {\n      return 0;\n    }\n\n    return (\n      plan.additionalStoragePricePerGb *\n      Math.abs(this.formGroup.controls.additionalStorage.value || 0)\n    );\n  }\n\n  seatTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalSeatsOption) {\n      return 0;\n    }\n\n    return plan.seatPrice * Math.abs(this.formGroup.controls.additionalSeats.value || 0);\n  }\n\n  get subtotal() {\n    let subTotal = this.selectedPlan.basePrice;\n    if (\n      this.selectedPlan.hasAdditionalSeatsOption &&\n      this.formGroup.controls.additionalSeats.value\n    ) {\n      subTotal += this.seatTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasAdditionalStorageOption &&\n      this.formGroup.controls.additionalStorage.value\n    ) {\n      subTotal += this.additionalStorageTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasPremiumAccessOption &&\n      this.formGroup.controls.premiumAccessAddon.value\n    ) {\n      subTotal += this.selectedPlan.premiumAccessOptionPrice;\n    }\n    return subTotal - this.discount;\n  }\n\n  get freeTrial() {\n    return this.selectedPlan.trialPeriodDays != null;\n  }\n\n  get taxCharges() {\n    return this.taxComponent != null && this.taxComponent.taxRate != null\n      ? (this.taxComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total() {\n    return this.subtotal + this.taxCharges || 0;\n  }\n\n  get paymentDesc() {\n    if (this.acceptingSponsorship) {\n      return this.i18nService.t(\"paymentSponsored\");\n    } else if (this.freeTrial && this.createOrganization) {\n      return this.i18nService.t(\"paymentChargedWithTrial\");\n    } else {\n      return this.i18nService.t(\"paymentCharged\", this.i18nService.t(this.selectedPlanInterval));\n    }\n  }\n\n  changedProduct() {\n    this.formGroup.controls.plan.setValue(this.selectablePlans[0].type);\n    if (!this.selectedPlan.hasPremiumAccessOption) {\n      this.formGroup.controls.premiumAccessAddon.setValue(false);\n    }\n    if (!this.selectedPlan.hasAdditionalStorageOption) {\n      this.formGroup.controls.additionalStorage.setValue(0);\n    }\n    if (!this.selectedPlan.hasAdditionalSeatsOption) {\n      this.formGroup.controls.additionalSeats.setValue(0);\n    } else if (\n      !this.formGroup.controls.additionalSeats.value &&\n      !this.selectedPlan.baseSeats &&\n      this.selectedPlan.hasAdditionalSeatsOption\n    ) {\n      this.formGroup.controls.additionalSeats.setValue(1);\n    }\n  }\n\n  changedOwnedBusiness() {\n    if (!this.formGroup.controls.businessOwned.value || this.selectedPlan.canBeUsedByBusiness) {\n      return;\n    }\n    this.formGroup.controls.product.setValue(ProductType.Teams);\n    this.formGroup.controls.plan.setValue(PlanType.TeamsAnnually);\n    this.changedProduct();\n  }\n\n  changedCountry() {\n    this.paymentComponent.hideBank = this.taxComponent.taxInfo.country !== \"US\";\n    // Bank Account payments are only available for US customers\n    if (\n      this.paymentComponent.hideBank &&\n      this.paymentComponent.method === PaymentMethodType.BankAccount\n    ) {\n      this.paymentComponent.method = PaymentMethodType.Card;\n      this.paymentComponent.changeMethod();\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  async submit() {\n    this.singleOrgPolicyBlock = await this.userHasBlockingSingleOrgPolicy();\n\n    if (this.singleOrgPolicyBlock) {\n      return;\n    }\n\n    try {\n      const doSubmit = async (): Promise<string> => {\n        let orgId: string = null;\n        if (this.createOrganization) {\n          const shareKey = await this.cryptoService.makeShareKey();\n          const key = shareKey[0].encryptedString;\n          const collection = await this.cryptoService.encrypt(\n            this.i18nService.t(\"defaultCollection\"),\n            shareKey[1]\n          );\n          const collectionCt = collection.encryptedString;\n          const orgKeys = await this.cryptoService.makeKeyPair(shareKey[1]);\n\n          if (this.selfHosted) {\n            orgId = await this.createSelfHosted(key, collectionCt, orgKeys);\n          } else {\n            orgId = await this.createCloudHosted(key, collectionCt, orgKeys, shareKey[1]);\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            this.i18nService.t(\"organizationCreated\"),\n            this.i18nService.t(\"organizationReadyToGo\")\n          );\n        } else {\n          orgId = await this.updateOrganization(orgId);\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"organizationUpgraded\")\n          );\n        }\n\n        await this.apiService.refreshIdentityToken();\n        await this.syncService.fullSync(true);\n\n        if (!this.acceptingSponsorship && !this.isInTrialFlow) {\n          this.router.navigate([\"/organizations/\" + orgId]);\n        }\n\n        if (this.isInTrialFlow) {\n          this.onTrialBillingSuccess.emit({\n            orgId: orgId,\n            subLabelText: this.billingSubLabelText(),\n          });\n        }\n\n        return orgId;\n      };\n\n      this.formPromise = doSubmit();\n      const organizationId = await this.formPromise;\n      this.onSuccess.emit({ organizationId: organizationId });\n      this.messagingService.send(\"organizationCreated\", organizationId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async userHasBlockingSingleOrgPolicy() {\n    return this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n  }\n\n  private async updateOrganization(orgId: string) {\n    const request = new OrganizationUpgradeRequest();\n    request.businessName = this.formGroup.controls.businessOwned.value\n      ? this.formGroup.controls.businessName.value\n      : null;\n    request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n    request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n    request.premiumAccessAddon =\n      this.selectedPlan.hasPremiumAccessOption && this.formGroup.controls.premiumAccessAddon.value;\n    request.planType = this.selectedPlan.type;\n    request.billingAddressCountry = this.taxComponent.taxInfo.country;\n    request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n\n    // Retrieve org info to backfill pub/priv key if necessary\n    const org = await this.organizationService.get(this.organizationId);\n    if (!org.hasPublicAndPrivateKeys) {\n      const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n      const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n      request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    }\n\n    const result = await this.organizationApiService.upgrade(this.organizationId, request);\n    if (!result.success && result.paymentIntentClientSecret != null) {\n      await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n    }\n    return this.organizationId;\n  }\n\n  private async createCloudHosted(\n    key: string,\n    collectionCt: string,\n    orgKeys: [string, EncString],\n    orgKey: SymmetricCryptoKey\n  ) {\n    const request = new OrganizationCreateRequest();\n    request.key = key;\n    request.collectionName = collectionCt;\n    request.name = this.formGroup.controls.name.value;\n    request.billingEmail = this.formGroup.controls.billingEmail.value;\n    request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n\n    if (this.selectedPlan.type === PlanType.Free) {\n      request.planType = PlanType.Free;\n    } else {\n      const tokenResult = await this.paymentComponent.createPaymentToken();\n\n      request.paymentToken = tokenResult[0];\n      request.paymentMethodType = tokenResult[1];\n      request.businessName = this.formGroup.controls.businessOwned.value\n        ? this.formGroup.controls.businessName.value\n        : null;\n      request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n      request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n      request.premiumAccessAddon =\n        this.selectedPlan.hasPremiumAccessOption &&\n        this.formGroup.controls.premiumAccessAddon.value;\n      request.planType = this.selectedPlan.type;\n      request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n      request.billingAddressCountry = this.taxComponent.taxInfo.country;\n      if (this.taxComponent.taxInfo.includeTaxId) {\n        request.taxIdNumber = this.taxComponent.taxInfo.taxId;\n        request.billingAddressLine1 = this.taxComponent.taxInfo.line1;\n        request.billingAddressLine2 = this.taxComponent.taxInfo.line2;\n        request.billingAddressCity = this.taxComponent.taxInfo.city;\n        request.billingAddressState = this.taxComponent.taxInfo.state;\n      }\n    }\n\n    if (this.providerId) {\n      const providerRequest = new ProviderOrganizationCreateRequest(\n        this.formGroup.controls.clientOwnerEmail.value,\n        request\n      );\n      const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n      providerRequest.organizationCreateRequest.key = (\n        await this.cryptoService.encrypt(orgKey.key, providerKey)\n      ).encryptedString;\n      const orgId = (\n        await this.apiService.postProviderCreateOrganization(this.providerId, providerRequest)\n      ).organizationId;\n\n      return orgId;\n    } else {\n      return (await this.organizationApiService.create(request)).id;\n    }\n  }\n\n  private async createSelfHosted(key: string, collectionCt: string, orgKeys: [string, EncString]) {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      throw new Error(this.i18nService.t(\"selectFile\"));\n    }\n\n    const fd = new FormData();\n    fd.append(\"license\", files[0]);\n    fd.append(\"key\", key);\n    fd.append(\"collectionName\", collectionCt);\n    const response = await this.organizationApiService.createLicense(fd);\n    const orgId = response.id;\n\n    await this.apiService.refreshIdentityToken();\n\n    // Org Keys live outside of the OrganizationLicense - add the keys to the org here\n    const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    await this.organizationApiService.updateKeys(orgId, request);\n\n    return orgId;\n  }\n\n  private billingSubLabelText(): string {\n    const selectedPlan = this.selectedPlan;\n    const price = selectedPlan.basePrice === 0 ? selectedPlan.seatPrice : selectedPlan.basePrice;\n    let text = \"\";\n\n    if (selectedPlan.isAnnual) {\n      text += `${this.i18nService.t(\"annual\")} ($${price}/${this.i18nService.t(\"yr\")})`;\n    } else {\n      text += `${this.i18nService.t(\"monthly\")} ($${price}/${this.i18nService.t(\"monthAbbr\")})`;\n    }\n\n    return text;\n  }\n}\n","<form #form [formGroup]=\"formGroup\" [appApiAction]=\"formPromise\" (ngSubmit)=\"submit()\">\n  <div class=\"tw-container tw-mb-3\">\n    <div class=\"tw-mb-6\">\n      <h2 class=\"tw-mb-3 tw-text-base tw-font-semibold\">{{ \"billingPlanLabel\" | i18n }}</h2>\n      <div class=\"tw-mb-1 tw-items-center\" *ngFor=\"let selectablePlan of selectablePlans\">\n        <label class=\"tw- tw-block tw-text-main\" for=\"interval{{ selectablePlan.type }}\">\n          <input\n            checked\n            class=\"tw-h-4 tw-w-4 tw-align-middle\"\n            id=\"interval{{ selectablePlan.type }}\"\n            name=\"plan\"\n            type=\"radio\"\n            [value]=\"selectablePlan.type\"\n            formControlName=\"plan\"\n          />\n          <ng-container *ngIf=\"selectablePlan.isAnnual\">\n            {{ \"annual\" | i18n }} -\n            {{\n              (selectablePlan.basePrice === 0 ? selectablePlan.seatPrice : selectablePlan.basePrice)\n                | currency: \"$\"\n            }}\n            /{{ \"yr\" | i18n }}\n          </ng-container>\n          <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n            {{ \"monthly\" | i18n }} -\n            {{\n              (selectablePlan.basePrice === 0 ? selectablePlan.seatPrice : selectablePlan.basePrice)\n                | currency: \"$\"\n            }}\n            /{{ \"monthAbbr\" | i18n }}\n          </ng-container>\n        </label>\n      </div>\n    </div>\n\n    <div class=\"tw-mb-4\">\n      <h2 class=\"tw-mb-3 tw-text-base tw-font-semibold\">{{ \"paymentType\" | i18n }}</h2>\n      <app-payment [hideCredit]=\"true\" [trialFlow]=\"true\"></app-payment>\n      <app-tax-info [trialFlow]=\"true\" (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    </div>\n\n    <div class=\"tw-flex tw-space-x-2\">\n      <bit-submit-button [loading]=\"form.loading\">{{ \"startTrial\" | i18n }}</bit-submit-button>\n\n      <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"stepBack()\">Back</button>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UntypedFormBuilder, FormGroup } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"../../settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-billing\",\n  templateUrl: \"./billing.component.html\",\n})\nexport class BillingComponent extends OrganizationPlansComponent {\n  @Input() orgInfoForm: FormGroup;\n  @Output() previousStep = new EventEmitter();\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    router: Router,\n    syncService: SyncService,\n    policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    messagingService: MessagingService,\n    formBuilder: UntypedFormBuilder,\n    organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      apiService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      router,\n      syncService,\n      policyService,\n      organizationService,\n      logService,\n      messagingService,\n      formBuilder,\n      organizationApiService\n    );\n  }\n\n  async ngOnInit() {\n    const additionalSeats = this.product == ProductType.Families ? 0 : 1;\n    this.formGroup.patchValue({\n      name: this.orgInfoForm.get(\"name\")?.value,\n      billingEmail: this.orgInfoForm.get(\"email\")?.value,\n      additionalSeats: additionalSeats,\n      plan: this.plan,\n      product: this.product,\n    });\n    this.isInTrialFlow = true;\n    await super.ngOnInit();\n  }\n\n  stepBack() {\n    this.previousStep.emit();\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-default-content\",\n  templateUrl: \"default-content.component.html\",\n})\nexport class DefaultContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise1-content\",\n  templateUrl: \"enterprise1-content.component.html\",\n})\nexport class Enterprise1ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise2-content\",\n  templateUrl: \"enterprise2-content.component.html\",\n})\nexport class Enterprise2ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Enterprise Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams1-content\",\n  templateUrl: \"teams1-content.component.html\",\n})\nexport class Teams1ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Teams Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams2-content\",\n  templateUrl: \"teams2-content.component.html\",\n})\nexport class Teams2ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-cnet\",\n  templateUrl: \"logo-cnet.component.html\",\n})\nexport class LogoCnetComponent {}\n","<figure>\n  <figcaption>\n    <cite>\n      <img\n        src=\"../../images/register-layout/cnet-logo.svg\"\n        class=\"tw-mx-auto tw-block tw-w-40\"\n        alt=\"CNET Logo\"\n      />\n    </cite>\n  </figcaption>\n  <blockquote class=\"tw-mx-auto tw-mt-2 tw-max-w-xl tw-px-4 tw-text-center\">\n    \"No more excuses; start using Bitwarden today. The identity you save could be your own. The\n    money definitely will be.\"\n  </blockquote>\n</figure>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-enterprise-content\",\n  templateUrl: \"cnet-enterprise-content.component.html\",\n})\nexport class CnetEnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Enterprise Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-individual-content\",\n  templateUrl: \"cnet-individual-content.component.html\",\n})\nexport class CnetIndividualContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Premium Account Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Secure your account with advanced two-step login</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-teams-content\",\n  templateUrl: \"cnet-teams-content.component.html\",\n})\nexport class CnetTeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Teams Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-abm-enterprise-content\",\n  templateUrl: \"abm-enterprise-content.component.html\",\n})\nexport class AbmEnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-abm-teams-content\",\n  templateUrl: \"abm-teams-content.component.html\",\n})\nexport class AbmTeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","<div *ngIf=\"accountCreateOnly\" class=\"\">\n  <h1 class=\"tw-mt-12 tw-text-center tw-text-xl\">{{ \"createAccount\" | i18n }}</h1>\n  <div\n    class=\"tw-min-w-xl tw-m-auto tw-max-w-xl tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-8\"\n  >\n    <app-register-form\n      [queryParamEmail]=\"email\"\n      [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n      [referenceDataValue]=\"referenceData\"\n    ></app-register-form>\n  </div>\n</div>\n<div *ngIf=\"!accountCreateOnly\">\n  <div class=\"tw-absolute tw--z-10 tw--mt-48 tw-h-[28rem] tw-w-full tw-bg-background-alt2\"></div>\n  <div class=\"tw-min-w-4xl tw-mx-auto tw-flex tw-max-w-screen-xl tw-gap-12 tw-px-4\">\n    <div class=\"tw-w-1/2\">\n      <img\n        alt=\"Bitwarden\"\n        style=\"height: 50px; width: 335px\"\n        class=\"tw-mt-6\"\n        src=\"../../images/register-layout/logo-horizontal-white.svg\"\n      />\n\n      <div class=\"tw-pt-12\">\n        <!-- Layout params are used by marketing to determine left-hand content -->\n        <app-default-content *ngIf=\"layout === 'default'\"></app-default-content>\n        <app-teams-content *ngIf=\"layout === 'teams'\"></app-teams-content>\n        <app-teams1-content *ngIf=\"layout === 'teams1'\"></app-teams1-content>\n        <app-teams2-content *ngIf=\"layout === 'teams2'\"></app-teams2-content>\n        <app-enterprise-content *ngIf=\"layout === 'enterprise'\"></app-enterprise-content>\n        <app-enterprise1-content *ngIf=\"layout === 'enterprise1'\"></app-enterprise1-content>\n        <app-enterprise2-content *ngIf=\"layout === 'enterprise2'\"></app-enterprise2-content>\n        <app-cnet-enterprise-content\n          *ngIf=\"layout === 'cnetcmpgnent'\"\n        ></app-cnet-enterprise-content>\n        <app-cnet-individual-content\n          *ngIf=\"layout === 'cnetcmpgnind'\"\n        ></app-cnet-individual-content>\n        <app-cnet-teams-content *ngIf=\"layout === 'cnetcmpgnteams'\"></app-cnet-teams-content>\n        <app-abm-enterprise-content *ngIf=\"layout === 'abmenterprise'\"></app-abm-enterprise-content>\n        <app-abm-teams-content *ngIf=\"layout === 'abmteams'\"></app-abm-teams-content>\n      </div>\n    </div>\n    <div class=\"tw-w-1/2\">\n      <div class=\"tw-pt-56\">\n        <div class=\"tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background\">\n          <div class=\"tw-flex tw-h-12 tw-w-full tw-items-center tw-rounded-t tw-bg-secondary-100\">\n            <h2 class=\"tw-mb-0 tw-pl-4 tw-text-base tw-font-bold tw-uppercase\">\n              Start your 7-Day free trial of Bitwarden for {{ org }}\n            </h2>\n          </div>\n          <app-vertical-stepper #stepper linear (selectionChange)=\"stepSelectionChange($event)\">\n            <app-vertical-step label=\"Create Account\" [editable]=\"false\" [subLabel]=\"email\">\n              <app-register-form\n                [isInTrialFlow]=\"true\"\n                (createdAccount)=\"createdAccount($event)\"\n                [referenceDataValue]=\"referenceData\"\n              ></app-register-form>\n            </app-vertical-step>\n            <app-vertical-step label=\"Organization Information\" [subLabel]=\"orgInfoSubLabel\">\n              <app-org-info [nameOnly]=\"true\" [formGroup]=\"orgInfoFormGroup\"></app-org-info>\n              <button\n                bitButton\n                buttonType=\"primary\"\n                [disabled]=\"orgInfoFormGroup.get('name').hasError('required')\"\n                cdkStepperNext\n              >\n                Next\n              </button>\n            </app-vertical-step>\n            <app-vertical-step label=\"Billing\" [subLabel]=\"billingSubLabel\">\n              <app-billing\n                *ngIf=\"stepper.selectedIndex === 2\"\n                [plan]=\"plan\"\n                [product]=\"product\"\n                [orgInfoForm]=\"orgInfoFormGroup\"\n                (previousStep)=\"previousStep()\"\n                (onTrialBillingSuccess)=\"billingSuccess($event)\"\n              ></app-billing>\n            </app-vertical-step>\n            <app-vertical-step label=\"Confirmation Details\" [applyBorder]=\"false\">\n              <app-trial-confirmation-details\n                [email]=\"email\"\n                [orgLabel]=\"orgLabel\"\n              ></app-trial-confirmation-details>\n              <div class=\"tw-mb-3 tw-flex\">\n                <button bitButton buttonType=\"primary\" (click)=\"navigateToOrgVault()\">\n                  Get Started\n                </button>\n                <button\n                  bitButton\n                  buttonType=\"secondary\"\n                  (click)=\"navigateToOrgInvite()\"\n                  class=\"tw-ml-3 tw-inline-flex tw-items-center tw-px-3\"\n                >\n                  Invite Users\n                </button>\n              </div>\n            </app-vertical-step>\n          </app-vertical-stepper>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { StepperSelectionEvent } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\n\nimport { RouterService } from \"./../../core/router.service\";\nimport { VerticalStepperComponent } from \"./vertical-stepper/vertical-stepper.component\";\n\n@Component({\n  selector: \"app-trial\",\n  templateUrl: \"trial-initiation.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TrialInitiationComponent implements OnInit {\n  email = \"\";\n  org = \"\";\n  orgInfoSubLabel = \"\";\n  orgId = \"\";\n  orgLabel = \"\";\n  billingSubLabel = \"\";\n  layout = \"default\";\n  plan: PlanType;\n  product: ProductType;\n  accountCreateOnly = true;\n  policies: Policy[];\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  validOrgs: string[] = [\"teams\", \"enterprise\", \"families\"];\n  referenceData: ReferenceEventRequest;\n  @ViewChild(\"stepper\", { static: false }) verticalStepper: VerticalStepperComponent;\n\n  orgInfoFormGroup = this.formBuilder.group({\n    name: [\"\", [Validators.required]],\n    email: [\"\"],\n  });\n\n  private set referenceDataId(referenceId: string) {\n    if (referenceId != null) {\n      this.referenceData.id = referenceId;\n    } else {\n      this.referenceData.id = (\"; \" + document.cookie)\n        .split(\"; reference=\")\n        .pop()\n        .split(\";\")\n        .shift();\n    }\n\n    if (this.referenceData.id === \"\") {\n      this.referenceData.id = null;\n    }\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    protected router: Router,\n    private formBuilder: UntypedFormBuilder,\n    private titleCasePipe: TitleCasePipe,\n    private stateService: StateService,\n    private logService: LogService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    private i18nService: I18nService,\n    private routerService: RouterService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      this.referenceData = new ReferenceEventRequest();\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n\n      this.referenceDataId = qParams.reference;\n\n      if (!qParams.org) {\n        return;\n      }\n\n      if (qParams.layout) {\n        this.layout = qParams.layout;\n      }\n\n      if (this.validOrgs.includes(qParams.org)) {\n        this.org = qParams.org;\n      } else {\n        this.org = \"families\";\n      }\n\n      this.referenceData.flow = qParams.org;\n\n      // Are they coming from an email for sponsoring a families organization\n      // After logging in redirect them to setup the families sponsorship\n      this.setupFamilySponsorship(qParams.sponsorshipToken);\n\n      this.orgLabel = this.titleCasePipe.transform(this.org);\n      this.accountCreateOnly = false;\n\n      if (this.org === \"families\") {\n        this.plan = PlanType.FamiliesAnnually;\n        this.product = ProductType.Families;\n      } else if (this.org === \"teams\") {\n        this.plan = PlanType.TeamsAnnually;\n        this.product = ProductType.Teams;\n      } else if (this.org === \"enterprise\") {\n        this.plan = PlanType.EnterpriseAnnually;\n        this.product = ProductType.Enterprise;\n      }\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      try {\n        const policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        if (policies.data != null) {\n          const policiesData = policies.data.map((p) => new PolicyData(p));\n          this.policies = policiesData.map((p) => new Policy(p));\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (this.policies != null) {\n      this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(\n        this.policies\n      );\n    }\n  }\n\n  stepSelectionChange(event: StepperSelectionEvent) {\n    // Set org info sub label\n    if (event.selectedIndex === 1 && this.orgInfoFormGroup.controls.name.value === \"\") {\n      this.orgInfoSubLabel =\n        \"Enter your \" + this.titleCasePipe.transform(this.org) + \" organization information\";\n    } else if (event.previouslySelectedIndex === 1) {\n      this.orgInfoSubLabel = this.orgInfoFormGroup.controls.name.value;\n    }\n\n    //set billing sub label\n    if (event.selectedIndex === 2) {\n      this.billingSubLabel = this.i18nService.t(\"billingTrialSubLabel\");\n    }\n  }\n\n  createdAccount(email: string) {\n    this.email = email;\n    this.orgInfoFormGroup.get(\"email\")?.setValue(email);\n    this.verticalStepper.next();\n  }\n\n  billingSuccess(event: any) {\n    this.orgId = event?.orgId;\n    this.billingSubLabel = event?.subLabelText;\n    this.verticalStepper.next();\n  }\n\n  navigateToOrgVault() {\n    this.router.navigate([\"organizations\", this.orgId, \"vault\"]);\n  }\n\n  navigateToOrgInvite() {\n    this.router.navigate([\"organizations\", this.orgId, \"manage\", \"people\"]);\n  }\n\n  previousStep() {\n    this.verticalStepper.previous();\n  }\n\n  private setupFamilySponsorship(sponsorshipToken: string) {\n    if (sponsorshipToken != null) {\n      const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n        queryParams: { plan: sponsorshipToken },\n      });\n      this.routerService.setPreviousUrl(route.toString());\n    }\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n  deviceIdentifier: string;\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { WebAuthnIFrame } from \"@bitwarden/common/misc/webauthn_iframe\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { TokenRequestTwoFactor } from \"@bitwarden/common/models/request/identityToken/tokenRequestTwoFactor\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService,\n    protected appIdService: AppIdService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      new TokenRequestTwoFactor(this.selectedProviderType, this.token, this.remember),\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      request.deviceIdentifier = await this.appIdService.getAppId();\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithApiKey()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n  }\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"twoStepOptionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"twoStepOptionsTitle\">{{ \"twoStepOptions\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"list-group list-group-flush-2fa\">\n          <div *ngFor=\"let p of providers\" class=\"list-group-item list-group-item-action\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ p.name }}</h3>\n                {{ p.description }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-describedby]=\"p.name\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"choose(p)\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"list-group-item list-group-item-action\" (click)=\"recover()\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img class=\"recovery-code-img\" alt=\"rc logo\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ \"recoveryCodeTitle\" | i18n }}</h3>\n                {{ \"recoveryCodeDesc\" | i18n }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-descibedby]=\"'recoveryCodeTitle' | i18n\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"recover()\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"@bitwarden/angular/components/two-factor-options.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"container\"\n  ngNativeValidate\n  autocomplete=\"off\"\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div\n      class=\"col-5\"\n      [ngClass]=\"{\n        'col-9':\n          selectedProviderType === providerType.Duo ||\n          selectedProviderType === providerType.OrganizationDuo\n      }\"\n    >\n      <p class=\"lead text-center mb-4\">{{ title }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Email ||\n              selectedProviderType === providerType.Authenticator\n            \"\n          >\n            <p *ngIf=\"selectedProviderType === providerType.Authenticator\">\n              {{ \"enterVerificationCodeApp\" | i18n }}\n            </p>\n            <p *ngIf=\"selectedProviderType === providerType.Email\">\n              {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n            </p>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"text\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                inputmode=\"tel\"\n                appInputVerbatim\n              />\n              <small class=\"form-text\" *ngIf=\"selectedProviderType === providerType.Email\">\n                <a\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"sendEmail(true)\"\n                  [appApiAction]=\"emailPromise\"\n                  *ngIf=\"selectedProviderType === providerType.Email\"\n                >\n                  {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n                </a>\n              </small>\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n            <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n            <picture>\n              <source srcset=\"../../images/yubikey.avif\" type=\"image/avif\" />\n              <source srcset=\"../../images/yubikey.webp\" type=\"image/webp\" />\n              <img src=\"../../images/yubikey.jpg\" class=\"rounded img-fluid mb-3\" alt=\"\" />\n            </picture>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"password\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn\">\n            <div id=\"web-authn-frame\" class=\"mb-3\">\n              <iframe id=\"webauthn_iframe\" [allow]=\"webAuthnAllow\"></iframe>\n            </div>\n          </ng-container>\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Duo ||\n              selectedProviderType === providerType.OrganizationDuo\n            \"\n          >\n            <div id=\"duo-frame\" class=\"mb-3\">\n              <iframe id=\"duo_iframe\"></iframe>\n            </div>\n          </ng-container>\n          <i\n            class=\"bwi bwi-spinner text-muted bwi-spin pull-right\"\n            title=\"{{ 'loading' | i18n }}\"\n            *ngIf=\"form.loading && selectedProviderType === providerType.WebAuthn\"\n            aria-hidden=\"true\"\n          ></i>\n          <div class=\"form-check\" *ngIf=\"selectedProviderType != null\">\n            <input\n              id=\"remember\"\n              type=\"checkbox\"\n              name=\"Remember\"\n              class=\"form-check-input\"\n              [(ngModel)]=\"remember\"\n            />\n            <label for=\"remember\" class=\"form-check-label\">{{ \"rememberMe\" | i18n }}</label>\n          </div>\n          <ng-container *ngIf=\"selectedProviderType == null\">\n            <p>{{ \"noTwoStepProviders\" | i18n }}</p>\n            <p>{{ \"noTwoStepProviders2\" | i18n }}</p>\n          </ng-container>\n          <hr />\n          <div [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n          <div class=\"d-flex mb-3\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n              *ngIf=\"\n                selectedProviderType != null &&\n                selectedProviderType !== providerType.Duo &&\n                selectedProviderType !== providerType.OrganizationDuo &&\n                selectedProviderType !== providerType.WebAuthn\n              \"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n          <div class=\"text-center\">\n            <a href=\"#\" appStopClick (click)=\"anotherMethod()\">{{\n              \"useAnotherTwoStepMethod\" | i18n\n            }}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<ng-template #twoFactorOptions></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"@bitwarden/angular/components/two-factor.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { RouterService } from \"../core\";\n\nimport { TwoFactorOptionsComponent } from \"./two-factor-options.component\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  @ViewChild(\"twoFactorOptions\", { read: ViewContainerRef, static: true })\n  twoFactorOptionsModal: ViewContainerRef;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    private modalService: ModalService,\n    route: ActivatedRoute,\n    logService: LogService,\n    twoFactorService: TwoFactorService,\n    appIdService: AppIdService,\n    private routerService: RouterService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService,\n      appIdService\n    );\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async anotherMethod() {\n    const [modal] = await this.modalService.openViewRef(\n      TwoFactorOptionsComponent,\n      this.twoFactorOptionsModal,\n      (comp) => {\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\n          modal.close();\n          this.selectedProviderType = provider;\n          await this.init();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onRecoverSelected.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async goAfterLogIn() {\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class PasswordRequest extends SecretVerificationRequest {\n  newMasterPasswordHash: string;\n  masterPasswordHint: string;\n  key: string;\n}\n","import { Directive } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { PasswordRequest } from \"@bitwarden/common/models/request/passwordRequest\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdatePasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n  currentMasterPassword: string;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n\n  constructor(\n    protected router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async cancel() {\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n\n    const secret: Verification = {\n      type: VerificationType.MasterPassword,\n      secret: this.currentMasterPassword,\n    };\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return false;\n    }\n\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create Request\n      const request = new PasswordRequest();\n      request.masterPasswordHash = await this.cryptoService.hashPassword(\n        this.currentMasterPassword,\n        null\n      );\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.key = encKey[1].encryptedString;\n\n      // Update user's password\n      this.apiService.postPassword(request);\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"masterPasswordInvalidWarning\" | i18n }} </app-callout>\n          <app-callout\n            type=\"info\"\n            [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n            *ngIf=\"enforcedPolicyOptions\"\n          ></app-callout>\n\n          <form\n            #form\n            (ngSubmit)=\"submit()\"\n            [appApiAction]=\"formPromise\"\n            ngNativeValidate\n            autocomplete=\"off\"\n          >\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"currentMasterPassword\"\n                    type=\"password\"\n                    name=\"MasterPasswordHash\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"currentMasterPassword\"\n                    required\n                    appInputVerbatim\n                  />\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"newMasterPassword\"\n                    type=\"password\"\n                    name=\"NewMasterPasswordHash\"\n                    class=\"form-control mb-1\"\n                    [(ngModel)]=\"masterPassword\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                  <app-password-strength\n                    [password]=\"masterPassword\"\n                    [email]=\"email\"\n                    [showText]=\"true\"\n                  ></app-password-strength>\n                </div>\n              </div>\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"masterPasswordRetype\"\n                    type=\"password\"\n                    name=\"MasterPasswordRetype\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"masterPasswordRetype\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n              <i\n                class=\"fa fa-spinner fa-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"changeMasterPassword\" | i18n }}</span>\n            </button>\n            <button (click)=\"cancel()\" type=\"button\" class=\"btn btn-outline-secondary\">\n              <span>{{ \"cancel\" | i18n }}</span>\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { UpdatePasswordComponent as BaseUpdatePasswordComponent } from \"@bitwarden/angular/components/update-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\n\n@Component({\n  selector: \"app-update-password\",\n  templateUrl: \"update-password.component.html\",\n})\nexport class UpdatePasswordComponent extends BaseUpdatePasswordComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      userVerificationService,\n      logService\n    );\n  }\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { OrganizationUserResetPasswordRequest } from \"./organizationUserResetPasswordRequest\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { UpdateTempPasswordRequest } from \"@bitwarden/common/models/request/updateTempPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"updateMasterPasswordWarning\" | i18n }} </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength\n                  [password]=\"masterPassword\"\n                  [email]=\"email\"\n                  [showText]=\"true\"\n                  (passwordStrengthResult)=\"getStrengthResult($event)\"\n                >\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"@bitwarden/angular/components/update-temp-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    syncService: SyncService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","export class VerifyEmailRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VerifyEmailRequest } from \"@bitwarden/common/models/request/verifyEmailRequest\";\n\n@Component({\n  selector: \"app-verify-email-token\",\n  templateUrl: \"verify-email-token.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VerifyEmailTokenComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null) {\n        try {\n          await this.apiService.postAccountVerifyEmailToken(\n            new VerifyEmailRequest(qParams.userId, qParams.token)\n          );\n          if (await this.stateService.getIsAuthenticated()) {\n            await this.apiService.refreshIdentityToken();\n          }\n          this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailVerified\"));\n          this.router.navigate([\"/\"]);\n          return;\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"emailVerifiedFailed\"));\n      this.router.navigate([\"/\"]);\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","export class VerifyDeleteRecoverRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { VerifyDeleteRecoverRequest } from \"@bitwarden/common/models/request/verifyDeleteRecoverRequest\";\n\n@Component({\n  selector: \"app-verify-recover-delete\",\n  templateUrl: \"verify-recover-delete.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VerifyRecoverDeleteComponent implements OnInit {\n  email: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private token: string;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null && qParams.email != null) {\n        this.userId = qParams.userId;\n        this.token = qParams.token;\n        this.email = qParams.email;\n      } else {\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    try {\n      const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\n      this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n          <p class=\"text-center\">\n            <strong>{{ email }}</strong>\n          </p>\n          <p>{{ \"deleteRecoverConfirmDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-danger btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"deleteAccount\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HomeGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return this.router.createUrlTree([\"/login\"], { queryParams: route.queryParams });\n    }\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"/lock\"], { queryParams: route.queryParams });\n    }\n    return this.router.createUrlTree([\"/vault\"], { queryParams: route.queryParams });\n  }\n}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-frontend-layout\",\n  templateUrl: \"frontend-layout.component.html\",\n})\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n    document.body.classList.add(\"layout_frontend\");\n  }\n\n  ngOnDestroy() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<router-outlet></router-outlet>\n<div class=\"container my-5 text-muted text-center\">\n  &copy; {{ year }} Bitwarden Inc. <br />\n  {{ \"versionNumber\" | i18n: version }}\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-footer\",\n  templateUrl: \"footer.component.html\",\n})\nexport class FooterComponent implements OnInit {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n  }\n}\n","<div class=\"container footer text-muted\">\n  <div class=\"row\">\n    <div class=\"col\">&copy; {{ year }} Bitwarden Inc.</div>\n    <div class=\"col text-center\"></div>\n    <div class=\"col text-right\">\n      {{ \"versionNumber\" | i18n: version }}\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-avatar\",\n  template:\n    '<img *ngIf=\"src\" [src]=\"sanitizer.bypassSecurityTrustResourceUrl(src)\" title=\"{{data}}\" ' +\n    \"[ngClass]=\\\"{'rounded-circle': circle}\\\">\",\n})\nexport class AvatarComponent implements OnChanges, OnInit {\n  @Input() data: string;\n  @Input() email: string;\n  @Input() size = 45;\n  @Input() charCount = 2;\n  @Input() textColor = \"#ffffff\";\n  @Input() fontSize = 20;\n  @Input() fontWeight = 300;\n  @Input() dynamic = false;\n  @Input() circle = false;\n\n  src: string;\n\n  constructor(\n    public sanitizer: DomSanitizer,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    if (!this.dynamic) {\n      this.generate();\n    }\n  }\n\n  ngOnChanges() {\n    if (this.dynamic) {\n      this.generate();\n    }\n  }\n\n  private async generate() {\n    const enableGravatars = await this.stateService.getEnableGravitars();\n    if (enableGravatars && this.email != null) {\n      const hashBytes = await this.cryptoFunctionService.hash(\n        this.email.toLowerCase().trim(),\n        \"md5\"\n      );\n      const hash = Utils.fromBufferToHex(hashBytes).toLowerCase();\n      this.src = \"https://www.gravatar.com/avatar/\" + hash + \"?s=\" + this.size + \"&r=pg&d=retro\";\n    } else {\n      let chars: string = null;\n      const upperData = this.data.toUpperCase();\n\n      if (this.charCount > 1) {\n        chars = this.getFirstLetters(upperData, this.charCount);\n      }\n      if (chars == null) {\n        chars = this.unicodeSafeSubstring(upperData, this.charCount);\n      }\n\n      // If the chars contain an emoji, only show it.\n      if (chars.match(Utils.regexpEmojiPresentation)) {\n        chars = chars.match(Utils.regexpEmojiPresentation)[0];\n      }\n\n      const charObj = this.getCharText(chars);\n      const color = Utils.stringToColor(upperData);\n      const svg = this.getSvg(this.size, color);\n      svg.appendChild(charObj);\n      const html = window.document.createElement(\"div\").appendChild(svg).outerHTML;\n      const svgHtml = window.btoa(unescape(encodeURIComponent(html)));\n      this.src = \"data:image/svg+xml;base64,\" + svgHtml;\n    }\n  }\n\n  private getFirstLetters(data: string, count: number): string {\n    const parts = data.split(\" \");\n    if (parts.length > 1) {\n      let text = \"\";\n      for (let i = 0; i < count; i++) {\n        text += this.unicodeSafeSubstring(parts[i], 1);\n      }\n      return text;\n    }\n    return null;\n  }\n\n  private getSvg(size: number, color: string): HTMLElement {\n    const svgTag = window.document.createElement(\"svg\");\n    svgTag.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    svgTag.setAttribute(\"pointer-events\", \"none\");\n    svgTag.setAttribute(\"width\", size.toString());\n    svgTag.setAttribute(\"height\", size.toString());\n    svgTag.style.backgroundColor = color;\n    svgTag.style.width = size + \"px\";\n    svgTag.style.height = size + \"px\";\n    return svgTag;\n  }\n\n  private getCharText(character: string): HTMLElement {\n    const textTag = window.document.createElement(\"text\");\n    textTag.setAttribute(\"text-anchor\", \"middle\");\n    textTag.setAttribute(\"y\", \"50%\");\n    textTag.setAttribute(\"x\", \"50%\");\n    textTag.setAttribute(\"dy\", \"0.35em\");\n    textTag.setAttribute(\"pointer-events\", \"auto\");\n    textTag.setAttribute(\"fill\", this.textColor);\n    textTag.setAttribute(\n      \"font-family\",\n      '\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,' +\n        'sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"'\n    );\n    textTag.textContent = character;\n    textTag.style.fontWeight = this.fontWeight.toString();\n    textTag.style.fontSize = this.fontSize + \"px\";\n    return textTag;\n  }\n\n  private unicodeSafeSubstring(str: string, count: number) {\n    const characters = str.match(/./gu);\n    return characters != null ? characters.slice(0, count).join(\"\") : \"\";\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","import { FocusableOption } from \"@angular/cdk/a11y\";\nimport { Directive, ElementRef, HostBinding } from \"@angular/core\";\n\n@Directive({\n  selector: \"[bitMenuItem]\",\n})\nexport class MenuItemDirective implements FocusableOption {\n  @HostBinding(\"class\") classList = [\n    \"tw-block\",\n    \"tw-py-1\",\n    \"tw-px-4\",\n    \"!tw-text-main\",\n    \"!tw-no-underline\",\n    \"tw-cursor-pointer\",\n    \"tw-border-none\",\n    \"tw-bg-background\",\n    \"tw-text-left\",\n    \"hover:tw-bg-secondary-100\",\n    \"focus:tw-bg-secondary-100\",\n    \"focus:tw-z-50\",\n    \"focus:tw-outline-none\",\n    \"focus:tw-ring\",\n    \"focus:tw-ring-offset-2\",\n    \"focus:tw-ring-primary-700\",\n    \"active:!tw-ring-0\",\n    \"active:!tw-ring-offset-0\",\n  ];\n  @HostBinding(\"attr.role\") role = \"menuitem\";\n  @HostBinding(\"tabIndex\") tabIndex = \"-1\";\n\n  constructor(private elementRef: ElementRef) {}\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n}\n","<ng-template>\n  <div\n    (click)=\"closed.emit()\"\n    class=\"tw-flex tw-shrink-0 tw-flex-col tw-rounded tw-border tw-border-solid tw-border-secondary-500 tw-bg-background tw-bg-clip-padding tw-py-2\"\n    role=\"menu\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport {\n  Component,\n  Output,\n  TemplateRef,\n  ViewChild,\n  EventEmitter,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n} from \"@angular/core\";\n\nimport { MenuItemDirective } from \"./menu-item.directive\";\n\n@Component({\n  selector: \"bit-menu\",\n  templateUrl: \"./menu.component.html\",\n  exportAs: \"menuComponent\",\n})\nexport class MenuComponent implements AfterContentInit {\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n  @Output() closed = new EventEmitter<void>();\n  @ContentChildren(MenuItemDirective, { descendants: true })\n  menuItems: QueryList<MenuItemDirective>;\n  keyManager: FocusKeyManager<MenuItemDirective>;\n\n  ngAfterContentInit() {\n    this.keyManager = new FocusKeyManager(this.menuItems).withWrap();\n  }\n}\n","import { Overlay, OverlayConfig, OverlayRef } from \"@angular/cdk/overlay\";\nimport { TemplatePortal } from \"@angular/cdk/portal\";\nimport {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { filter, mergeWith } from \"rxjs/operators\";\n\nimport { MenuComponent } from \"./menu.component\";\n\n@Directive({\n  selector: \"[bitMenuTriggerFor]\",\n})\nexport class MenuTriggerForDirective implements OnDestroy {\n  @HostBinding(\"attr.aria-expanded\") isOpen = false;\n  @HostBinding(\"attr.aria-haspopup\") hasPopup = \"menu\";\n  @HostBinding(\"attr.role\") role = \"button\";\n\n  @Input(\"bitMenuTriggerFor\") menu: MenuComponent;\n\n  private overlayRef: OverlayRef;\n  private defaultMenuConfig: OverlayConfig = {\n    panelClass: \"bit-menu-panel\",\n    hasBackdrop: true,\n    backdropClass: \"cdk-overlay-transparent-backdrop\",\n    scrollStrategy: this.overlay.scrollStrategies.reposition(),\n    positionStrategy: this.overlay\n      .position()\n      .flexibleConnectedTo(this.elementRef)\n      .withPositions([\n        {\n          originX: \"start\",\n          originY: \"bottom\",\n          overlayX: \"start\",\n          overlayY: \"top\",\n        },\n        {\n          originX: \"end\",\n          originY: \"bottom\",\n          overlayX: \"end\",\n          overlayY: \"top\",\n        },\n      ])\n      .withLockedPosition(true)\n      .withFlexibleDimensions(false)\n      .withPush(false),\n  };\n  private closedEventsSub: Subscription;\n  private keyDownEventsSub: Subscription;\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private viewContainerRef: ViewContainerRef,\n    private overlay: Overlay\n  ) {}\n\n  @HostListener(\"click\") toggleMenu() {\n    this.isOpen ? this.destroyMenu() : this.openMenu();\n  }\n\n  ngOnDestroy() {\n    this.disposeAll();\n  }\n\n  private openMenu() {\n    if (this.menu == null) {\n      throw new Error(\"Cannot find bit-menu element\");\n    }\n\n    this.isOpen = true;\n    this.overlayRef = this.overlay.create(this.defaultMenuConfig);\n\n    const templatePortal = new TemplatePortal(this.menu.templateRef, this.viewContainerRef);\n    this.overlayRef.attach(templatePortal);\n\n    this.closedEventsSub = this.getClosedEvents().subscribe((event: KeyboardEvent | undefined) => {\n      if (event?.key === \"Tab\") {\n        // Required to ensure tab order resumes correctly\n        this.elementRef.nativeElement.focus();\n      }\n      this.destroyMenu();\n    });\n    this.keyDownEventsSub = this.overlayRef\n      .keydownEvents()\n      .subscribe((event: KeyboardEvent) => this.menu.keyManager.onKeydown(event));\n  }\n\n  private destroyMenu() {\n    if (this.overlayRef == null || !this.isOpen) {\n      return;\n    }\n\n    this.isOpen = false;\n    this.disposeAll();\n  }\n\n  private getClosedEvents(): Observable<any> {\n    const detachments = this.overlayRef.detachments();\n    const escKey = this.overlayRef\n      .keydownEvents()\n      .pipe(filter((event: KeyboardEvent) => event.key === \"Escape\" || event.key === \"Tab\"));\n    const backdrop = this.overlayRef.backdropClick();\n    const menuClosed = this.menu.closed;\n\n    return detachments.pipe(mergeWith(escKey, backdrop, menuClosed));\n  }\n\n  private disposeAll() {\n    this.closedEventsSub?.unsubscribe();\n    this.overlayRef?.dispose();\n    this.keyDownEventsSub?.unsubscribe();\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-menu-divider\",\n  templateUrl: \"./menu-divider.component.html\",\n})\nexport class MenuDividerComponent {}\n","<div\n  class=\"tw-my-2 tw-border-0 tw-border-t tw-border-solid tw-border-t-secondary-500\"\n  role=\"separator\"\n></div>\n","<nav class=\"navbar navbar-expand navbar-dark\" [ngClass]=\"{ 'nav-background-alt': selfHosted }\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\" appA11yTitle=\"{{ 'pageTitle' | i18n: 'Bitwarden' }}\">\n      <i class=\"bwi bwi-shield\" aria-hidden=\"true\"></i>\n    </a>\n    <div class=\"collapse navbar-collapse\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/vault\">{{ \"vaults\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/sends\">{{ \"send\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/tools\">{{ \"tools\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/reports\">{{ \"reports\" | i18n }}</a>\n        </li>\n        <li *ngIf=\"organizations.length >= 1\" class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" [routerLink]=\"['/organizations', organizations[0].id]\">{{\n            \"organizations\" | i18n\n          }}</a>\n        </li>\n        <ng-container *ngIf=\"providers.length >= 1\">\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length == 1\">\n            <a class=\"nav-link\" [routerLink]=\"['/providers', providers[0].id]\">{{\n              \"provider\" | i18n\n            }}</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length > 1\">\n            <a class=\"nav-link\" routerLink=\"/providers\">{{ \"provider\" | i18n }}</a>\n          </li>\n        </ng-container>\n      </ul>\n    </div>\n    <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\">\n      <li>\n        <button\n          [bitMenuTriggerFor]=\"accountMenu\"\n          class=\"tw-border-0 tw-bg-transparent tw-text-alt2 tw-opacity-70 hover:tw-opacity-90\"\n        >\n          <i class=\"bwi bwi-user-circle bwi-lg\" aria-hidden=\"true\"></i>\n          <i class=\"bwi bwi-caret-down bwi-sm\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu class=\"dropdown-menu\" #accountMenu>\n          <div class=\"tw-flex tw-min-w-[200px] tw-max-w-[300px] tw-flex-col\">\n            <div\n              class=\"tw-flex tw-items-center tw-py-1 tw-px-4 tw-leading-tight tw-text-info\"\n              *ngIf=\"name\"\n              appStopProp\n            >\n              <app-avatar\n                [data]=\"name\"\n                [email]=\"email\"\n                size=\"25\"\n                fontSize=\"14\"\n                [circle]=\"true\"\n              ></app-avatar>\n              <div class=\"tw-ml-2 tw-block tw-overflow-hidden tw-whitespace-nowrap\">\n                <span>{{ \"loggedInAs\" | i18n }}</span>\n                <small class=\"tw-block tw-overflow-hidden tw-whitespace-nowrap tw-text-muted\">{{\n                  name\n                }}</small>\n              </div>\n            </div>\n            <bit-menu-divider></bit-menu-divider>\n            <a bitMenuItem routerLink=\"/settings/account\">\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"accountSettings\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/help/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-question-circle\" aria-hidden=\"true\"></i>\n              {{ \"getHelp\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/download/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"getApps\" | i18n }}\n            </a>\n            <bit-menu-divider></bit-menu-divider>\n            <button bitMenuItem type=\"button\" (click)=\"lock()\">\n              <i class=\"bwi bwi-fw bwi-lock\" aria-hidden=\"true\"></i>\n              {{ \"lockNow\" | i18n }}\n            </button>\n            <button bitMenuItem type=\"button\" (click)=\"logOut()\">\n              <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </bit-menu>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, NgZone, OnInit } from \"@angular/core\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\nimport { canAccessOrgAdmin } from \"../organizations/navigation-permissions\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"navbar.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class NavbarComponent implements OnInit {\n  selfHosted = false;\n  name: string;\n  email: string;\n  providers: Provider[] = [];\n  organizations: Organization[] = [];\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private providerService: ProviderService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private i18nService: I18nService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone\n  ) {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.name = await this.tokenService.getName();\n    this.email = await this.tokenService.getEmail();\n    if (this.name == null || this.name.trim() === \"\") {\n      this.name = this.email;\n    }\n\n    // Ensure providers and organizations are loaded\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n    this.providers = await this.providerService.getAll();\n\n    this.organizations = await this.buildOrganizations();\n\n    this.broadcasterService.subscribe(this.constructor.name, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"organizationCreated\":\n            if (this.organizations.length < 1) {\n              this.organizations = await this.buildOrganizations();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  async buildOrganizations() {\n    const allOrgs = await this.organizationService.getAll();\n    return allOrgs.filter(canAccessOrgAdmin).sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  lock() {\n    this.messagingService.send(\"lockVault\");\n  }\n\n  logOut() {\n    this.messagingService.send(\"logout\");\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-user-layout\",\n  templateUrl: \"user-layout.component.html\",\n})\nexport class UserLayoutComponent implements OnInit {\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","<div *ngIf=\"loaded && activeOrganization != null\" class=\"tw-flex\">\n  <button\n    class=\"tw-flex tw-items-center tw-border-none tw-bg-background-alt\"\n    type=\"button\"\n    id=\"pickerButton\"\n    [appA11yTitle]=\"'organizationPicker' | i18n\"\n    [bitMenuTriggerFor]=\"orgPickerMenu\"\n  >\n    <app-avatar\n      [data]=\"activeOrganization.name\"\n      size=\"45\"\n      [circle]=\"true\"\n      [dynamic]=\"true\"\n    ></app-avatar>\n    <div class=\"tw-flex\">\n      <div class=\"org-name tw-ml-3\">\n        <span>{{ activeOrganization.name }}</span>\n        <small class=\"tw-text-muted\">{{ \"organization\" | i18n }}</small>\n      </div>\n      <div class=\"tw-ml-3\">\n        <i class=\"bwi bwi-angle-down tw-text-main\" aria-hidden=\"true\"></i>\n      </div>\n    </div>\n  </button>\n  <div>\n    <div\n      class=\"tw-ml-3 tw-rounded tw-border tw-border-solid tw-border-danger-500 tw-text-danger\"\n      *ngIf=\"!activeOrganization.enabled\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"organizationIsDisabled\" | i18n }}\n      </div>\n    </div>\n    <div\n      class=\"tw-ml-3 tw-rounded tw-border tw-border-solid tw-border-info-500 tw-text-info\"\n      *ngIf=\"activeOrganization.isProviderUser\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"accessingUsingProvider\" | i18n: activeOrganization.providerName }}\n      </div>\n    </div>\n  </div>\n\n  <bit-menu #orgPickerMenu>\n    <ul aria-labelledby=\"pickerButton\" class=\"tw-m-0 tw-p-0\">\n      <li *ngFor=\"let org of organizations\" class=\"tw-flex tw-list-none tw-flex-col\" role=\"none\">\n        <a bitMenuItem [routerLink]=\"['/organizations', org.id]\">\n          <i\n            class=\"bwi bwi-check mr-2\"\n            [ngClass]=\"org.id === activeOrganization.id ? 'visible' : 'invisible'\"\n          >\n            <span class=\"tw-sr-only\">{{ \"currentOrganization\" | i18n }}</span>\n          </i>\n          {{ org.name }}\n        </a>\n      </li>\n      <bit-menu-divider></bit-menu-divider>\n      <li class=\"tw-list-none\" role=\"none\">\n        <a bitMenuItem routerLink=\"/create-organization\">\n          <i class=\"bwi bwi-plus mr-2\"></i>\n          {{ \"newOrganization\" | i18n }}</a\n        >\n      </li>\n    </ul>\n  </bit-menu>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { canAccessOrgAdmin } from \"../organizations/navigation-permissions\";\n\n@Component({\n  selector: \"app-organization-switcher\",\n  templateUrl: \"organization-switcher.component.html\",\n})\nexport class OrganizationSwitcherComponent implements OnInit {\n  constructor(private organizationService: OrganizationService, private i18nService: I18nService) {}\n\n  @Input() activeOrganization: Organization = null;\n  organizations: Organization[] = [];\n\n  loaded = false;\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    const orgs = await this.organizationService.getAll();\n    this.organizations = orgs\n      .filter(canAccessOrgAdmin)\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    this.loaded = true;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"organization\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <app-organization-switcher\n        class=\"my-auto pl-1\"\n        [activeOrganization]=\"organization\"\n      ></app-organization-switcher>\n      <ul class=\"nav nav-tabs\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"vault\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-lock\" aria-hidden=\"true\"></i>\n            {{ \"vault\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showManageTab\">\n          <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-sliders\" aria-hidden=\"true\"></i>\n            {{ \"manage\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showToolsTab\">\n          <a class=\"nav-link\" [routerLink]=\"toolsRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-wrench\" aria-hidden=\"true\"></i>\n            {{ \"tools\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showSettingsTab\">\n          <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-cogs\" aria-hidden=\"true\"></i>\n            {{ \"settings\" | i18n }}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport {\n  canAccessManageTab,\n  canAccessSettingsTab,\n  canAccessToolsTab,\n} from \"../navigation-permissions\";\n\nconst BroadcasterSubscriptionId = \"OrganizationLayoutComponent\";\n\n@Component({\n  selector: \"app-organization-layout\",\n  templateUrl: \"organization-layout.component.html\",\n})\nexport class OrganizationLayoutComponent implements OnInit, OnDestroy {\n  organization: Organization;\n  businessTokenPromise: Promise<any>;\n  private organizationId: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone\n  ) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params: any) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"updatedOrgLicense\":\n            await this.load();\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n  }\n\n  get showManageTab(): boolean {\n    return canAccessManageTab(this.organization);\n  }\n\n  get showToolsTab(): boolean {\n    return canAccessToolsTab(this.organization);\n  }\n\n  get showSettingsTab(): boolean {\n    return canAccessSettingsTab(this.organization);\n  }\n\n  get toolsRoute(): string {\n    return this.organization.canAccessImportExport\n      ? \"tools/import\"\n      : \"tools/exposed-passwords-report\";\n  }\n\n  get manageRoute(): string {\n    let route: string;\n    switch (true) {\n      case this.organization.canManageUsers:\n        route = \"manage/people\";\n        break;\n      case this.organization.canViewAssignedCollections || this.organization.canViewAllCollections:\n        route = \"manage/collections\";\n        break;\n      case this.organization.canManageGroups:\n        route = \"manage/groups\";\n        break;\n      case this.organization.canManagePolicies:\n        route = \"manage/policies\";\n        break;\n      case this.organization.canManageSso:\n        route = \"manage/sso\";\n        break;\n      case this.organization.canManageScim:\n        route = \"manage/scim\";\n        break;\n      case this.organization.canAccessEventLogs:\n        route = \"manage/events\";\n        break;\n    }\n    return route;\n  }\n}\n","export class SelectionReadOnlyRequest {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\n    this.id = id;\n    this.readOnly = readOnly;\n    this.hidePasswords = hidePasswords;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"collectionAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n            appAutofocus\n            [disabled]=\"!this.canSave\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n            [disabled]=\"!this.canSave\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <ng-container *ngIf=\"accessGroups\">\n          <h3 class=\"mt-4 d-flex mb-0\">\n            {{ \"groupAccess\" | i18n }}\n            <div class=\"ml-auto\" *ngIf=\"groups && groups.length && this.canSave\">\n              <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"selectAll\" | i18n }}\n              </button>\n              <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"unselectAll\" | i18n }}\n              </button>\n            </div>\n          </h3>\n          <div *ngIf=\"!groups || !groups.length\">\n            {{ \"noGroupsInList\" | i18n }}\n          </div>\n          <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let g of groups; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.checked\"\n                    name=\"Groups[{{ i }}].Checked\"\n                    [disabled]=\"g.accessAll || !this.canSave\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(g)\">\n                  {{ g.name }}\n                  <ng-container *ngIf=\"g.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter text-muted bwi-fw\"\n                      title=\"{{ 'groupAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"groupAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.hidePasswords\"\n                    name=\"Groups[{{ i }}].HidePasswords\"\n                    [disabled]=\"!g.checked || g.accessAll || !this.canSave\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.readOnly\"\n                    name=\"Groups[{{ i }}].ReadOnly\"\n                    [disabled]=\"!g.checked || g.accessAll || !this.canSave\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"this.canSave\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"this.canDelete\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { CollectionRequest } from \"@bitwarden/common/models/request/collectionRequest\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/groupResponse\";\n\n@Component({\n  selector: \"app-collection-add-edit\",\n  templateUrl: \"collection-add-edit.component.html\",\n})\nexport class CollectionAddEditComponent implements OnInit {\n  @Input() collectionId: string;\n  @Input() organizationId: string;\n  @Input() canSave: boolean;\n  @Input() canDelete: boolean;\n  @Output() onSavedCollection = new EventEmitter();\n  @Output() onDeletedCollection = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  accessGroups = false;\n  title: string;\n  name: string;\n  externalId: string;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  private orgKey: SymmetricCryptoKey;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    const organization = await this.organizationService.get(this.organizationId);\n    this.accessGroups = organization.useGroups;\n    this.editMode = this.loading = this.collectionId != null;\n    if (this.accessGroups) {\n      const groupsResponse = await this.apiService.getGroups(this.organizationId);\n      this.groups = groupsResponse.data\n        .map((r) => r)\n        .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    }\n    this.orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editCollection\");\n      try {\n        const collection = await this.apiService.getCollectionDetails(\n          this.organizationId,\n          this.collectionId\n        );\n        this.name = await this.cryptoService.decryptToUtf8(\n          new EncString(collection.name),\n          this.orgKey\n        );\n        this.externalId = collection.externalId;\n        if (collection.groups != null && this.groups.length > 0) {\n          collection.groups.forEach((s) => {\n            const group = this.groups.filter((g) => !g.accessAll && g.id === s.id);\n            if (group != null && group.length > 0) {\n              (group[0] as any).checked = true;\n              (group[0] as any).readOnly = s.readOnly;\n              (group[0] as any).hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addCollection\");\n    }\n\n    this.groups.forEach((g) => {\n      if (g.accessAll) {\n        (g as any).checked = true;\n      }\n    });\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    if (g.accessAll) {\n      return;\n    }\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n      (g as any).hidePasswords = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    if (this.orgKey == null) {\n      throw new Error(\"No encryption key for this organization.\");\n    }\n\n    const request = new CollectionRequest();\n    request.name = (await this.cryptoService.encrypt(this.name, this.orgKey)).encryptedString;\n    request.externalId = this.externalId;\n    request.groups = this.groups\n      .filter((g) => (g as any).checked && !g.accessAll)\n      .map(\n        (g) => new SelectionReadOnlyRequest(g.id, !!(g as any).readOnly, !!(g as any).hidePasswords)\n      );\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putCollection(\n          this.organizationId,\n          this.collectionId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.postCollection(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedCollectionId\" : \"createdCollectionId\", this.name)\n      );\n      this.onSavedCollection.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteCollection(this.organizationId, this.collectionId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", this.name)\n      );\n      this.onDeletedCollection.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Directive, ElementRef, HostBinding, Input } from \"@angular/core\";\n\ntype BadgeTypes = \"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\";\n\nconst styles: Record<BadgeTypes, string[]> = {\n  primary: [\"tw-bg-primary-500\"],\n  secondary: [\"tw-bg-text-muted\"],\n  success: [\"tw-bg-success-500\"],\n  danger: [\"tw-bg-danger-500\"],\n  warning: [\"tw-bg-warning-500\"],\n  info: [\"tw-bg-info-500\"],\n};\n\nconst hoverStyles: Record<BadgeTypes, string[]> = {\n  primary: [\"hover:tw-bg-primary-700\"],\n  secondary: [\"hover:tw-bg-secondary-700\"],\n  success: [\"hover:tw-bg-success-700\"],\n  danger: [\"hover:tw-bg-danger-700\"],\n  warning: [\"hover:tw-bg-warning-700\"],\n  info: [\"hover:tw-bg-info-700\"],\n};\n\n@Directive({\n  selector: \"span[bitBadge], a[bitBadge], button[bitBadge]\",\n})\nexport class BadgeDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-inline\",\n      \"tw-py-0.5\",\n      \"tw-px-1.5\",\n      \"tw-font-bold\",\n      \"tw-text-center\",\n      \"!tw-text-contrast\",\n      \"tw-rounded\",\n      \"tw-border-none\",\n      \"tw-box-border\",\n      \"tw-whitespace-no-wrap\",\n      \"tw-text-xs\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n      \"focus:tw-ring\",\n      \"focus:tw-ring-offset-2\",\n      \"focus:tw-ring-primary-700\",\n    ]\n      .concat(styles[this.badgeType])\n      .concat(this.hasHoverEffects ? hoverStyles[this.badgeType] : []);\n  }\n\n  @Input() badgeType: BadgeTypes = \"primary\";\n\n  private hasHoverEffects = false;\n\n  constructor(el: ElementRef<Element>) {\n    this.hasHoverEffects = el?.nativeElement?.nodeName != \"SPAN\";\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAccessTitle\">\n          {{ \"userAccess\" | i18n }}\n          <small>{{ entityName }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading || !users\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <cdk-virtual-scroll-viewport\n        itemSize=\"46\"\n        minBufferPx=\"600\"\n        maxBufferPx=\"1200\"\n        [style]=\"scrollViewportStyle\"\n      >\n        <div class=\"modal-body\" *ngIf=\"!loading && users && searchedUsers\">\n          <div class=\"d-flex\">\n            <div class=\"mr-3\">\n              <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n              <input\n                type=\"search\"\n                class=\"form-control form-control-sm\"\n                id=\"search\"\n                placeholder=\"{{ 'search' | i18n }}\"\n                name=\"SearchText\"\n                [(ngModel)]=\"searchText\"\n              />\n            </div>\n            <div class=\"btn-group btn-group-sm\" role=\"group\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: !showSelected }\"\n                (click)=\"filterSelected(false)\"\n              >\n                {{ \"all\" | i18n }}\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: showSelected }\"\n                (click)=\"filterSelected(true)\"\n              >\n                {{ \"selected\" | i18n }}\n                <span bitBadge badgeType=\"info\" *ngIf=\"selectedCount\">{{ selectedCount }}</span>\n              </button>\n            </div>\n          </div>\n          <ng-container *ngIf=\"!searchedUsers.length\">\n            <hr />\n            {{ \"noUsersInList\" | i18n }}\n          </ng-container>\n          <table class=\"table table-hover table-list mb-0\" [hidden]=\"!searchedUsers.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th *ngIf=\"entity === 'collection'\">&nbsp;</th>\n                <th>{{ \"userType\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"hidePasswords\" | i18n }}\n                </th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"readOnly\" | i18n }}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *cdkVirtualFor=\"let u of searchedUsers\" class=\"\">\n                <td class=\"table-list-checkbox\" (click)=\"check(u)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.checked\"\n                    name=\"{{ u.id.substr(0, 8) }}_Checked\"\n                    [disabled]=\"entity === 'collection' && u.accessAll\"\n                    (change)=\"selectedChanged(u)\"\n                    appStopProp\n                  />\n                </td>\n                <td width=\"30\" (click)=\"check(u)\">\n                  <app-avatar\n                    [data]=\"u | userName\"\n                    [email]=\"u.email\"\n                    size=\"25\"\n                    [circle]=\"true\"\n                    [fontSize]=\"14\"\n                  >\n                  </app-avatar>\n                </td>\n                <td>\n                  {{ u.email }}\n                  <span\n                    bitBadge\n                    badgeType=\"secondary\"\n                    *ngIf=\"u.status === organizationUserStatusType.Invited\"\n                    >{{ \"invited\" | i18n }}</span\n                  >\n                  <span\n                    bitBadge\n                    badgeType=\"warning\"\n                    *ngIf=\"u.status === organizationUserStatusType.Accepted\"\n                    >{{ \"accepted\" | i18n }}</span\n                  >\n                  <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n                </td>\n                <td *ngIf=\"entity === 'collection'\">\n                  <ng-container *ngIf=\"u.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter\"\n                      title=\"{{ 'userAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"userAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td>\n                  <span *ngIf=\"u.type === organizationUserType.Owner\">{{ \"owner\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Admin\">{{ \"admin\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Manager\">{{\n                    \"manager\" | i18n\n                  }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.User\">{{ \"user\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Custom\">{{ \"custom\" | i18n }}</span>\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.hidePasswords\"\n                    name=\"{{ u.id.substr(0, 8) }}_HidePasswords\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.readOnly\"\n                    name=\"{{ u.id.substr(0, 8) }}_ReadOnly\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </cdk-virtual-scroll-viewport>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/models/response/organizationUserResponse\";\n\n@Component({\n  selector: \"app-entity-users\",\n  templateUrl: \"entity-users.component.html\",\n  providers: [SearchPipe],\n})\nexport class EntityUsersComponent implements OnInit {\n  @Input() entity: \"group\" | \"collection\";\n  @Input() entityId: string;\n  @Input() entityName: string;\n  @Input() organizationId: string;\n  @Output() onEditedUsers = new EventEmitter();\n\n  organizationUserType = OrganizationUserType;\n  organizationUserStatusType = OrganizationUserStatusType;\n\n  showSelected = false;\n  loading = true;\n  formPromise: Promise<any>;\n  selectedCount = 0;\n  searchText: string;\n\n  private allUsers: OrganizationUserUserDetailsResponse[] = [];\n\n  constructor(\n    private search: SearchPipe,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadUsers();\n    this.loading = false;\n  }\n\n  get users() {\n    if (this.showSelected) {\n      return this.allUsers.filter((u) => (u as any).checked);\n    } else {\n      return this.allUsers;\n    }\n  }\n\n  get searchedUsers() {\n    return this.search.transform(this.users, this.searchText, \"name\", \"email\", \"id\");\n  }\n\n  get scrollViewportStyle() {\n    return `min-height: 120px; height: ${120 + this.searchedUsers.length * 46}px`;\n  }\n\n  async loadUsers() {\n    const users = await this.apiService.getOrganizationUsers(this.organizationId);\n    this.allUsers = users.data.map((r) => r).sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    if (this.entity === \"group\") {\n      const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => u.id === s);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n          }\n        });\n      }\n    } else if (this.entity === \"collection\") {\n      const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => !u.accessAll && u.id === s.id);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n            (user[0] as any).readOnly = s.readOnly;\n            (user[0] as any).hidePasswords = s.hidePasswords;\n          }\n        });\n      }\n    }\n\n    this.allUsers.forEach((u) => {\n      if (this.entity === \"collection\" && u.accessAll) {\n        (u as any).checked = true;\n      }\n      if ((u as any).checked) {\n        this.selectedCount++;\n      }\n    });\n  }\n\n  check(u: OrganizationUserUserDetailsResponse) {\n    if (this.entity === \"collection\" && u.accessAll) {\n      return;\n    }\n    (u as any).checked = !(u as any).checked;\n    this.selectedChanged(u);\n  }\n\n  selectedChanged(u: OrganizationUserUserDetailsResponse) {\n    if ((u as any).checked) {\n      this.selectedCount++;\n    } else {\n      if (this.entity === \"collection\") {\n        (u as any).readOnly = false;\n        (u as any).hidePasswords = false;\n      }\n      this.selectedCount--;\n    }\n  }\n\n  filterSelected(showSelected: boolean) {\n    this.showSelected = showSelected;\n  }\n\n  async submit() {\n    try {\n      if (this.entity === \"group\") {\n        const selections = this.users.filter((u) => (u as any).checked).map((u) => u.id);\n        this.formPromise = this.apiService.putGroupUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      } else {\n        const selections = this.users\n          .filter((u) => (u as any).checked && !u.accessAll)\n          .map(\n            (u) =>\n              new SelectionReadOnlyRequest(u.id, !!(u as any).readOnly, !!(u as any).hidePasswords)\n          );\n        this.formPromise = this.apiService.putCollectionUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedUsers\"));\n      this.onEditedUsers.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"collections\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button\n      type=\"button\"\n      *ngIf=\"this.canCreate\"\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"add()\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newCollection\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging()\n      ? pagedCollections\n      : (collections | search: searchText:'name':'id')) as searchedCollections\n  \"\n>\n  <p *ngIf=\"!searchedCollections.length\">{{ \"noCollectionsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedCollections.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of searchedCollections\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown *ngIf=\"this.canEdit(c) || this.canDelete(c)\">\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canEdit(c)\"\n                (click)=\"users(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item text-danger\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canDelete(c)\"\n                (click)=\"delete(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport {\n  CollectionDetailsResponse,\n  CollectionResponse,\n} from \"@bitwarden/common/models/response/collectionResponse\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\nimport { CollectionAddEditComponent } from \"./collection-add-edit.component\";\nimport { EntityUsersComponent } from \"./entity-users.component\";\n\n@Component({\n  selector: \"app-org-manage-collections\",\n  templateUrl: \"collections.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CollectionsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organization: Organization;\n  canCreate = false;\n  organizationId: string;\n  collections: CollectionView[];\n  assignedCollections: CollectionView[];\n  pagedCollections: CollectionView[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedCollectionsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private collectionService: CollectionService,\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    this.canCreate = this.organization.canCreateNewCollections;\n\n    const decryptCollections = async (r: ListResponse<CollectionResponse>) => {\n      const collections = r.data\n        .filter((c) => c.organizationId === this.organizationId)\n        .map((d) => new Collection(new CollectionData(d as CollectionDetailsResponse)));\n      return await this.collectionService.decryptMany(collections);\n    };\n\n    if (this.organization.canViewAssignedCollections) {\n      const response = await this.apiService.getUserCollections();\n      this.assignedCollections = await decryptCollections(response);\n    }\n\n    if (this.organization.canViewAllCollections) {\n      const response = await this.apiService.getCollections(this.organizationId);\n      this.collections = await decryptCollections(response);\n    } else {\n      this.collections = this.assignedCollections;\n    }\n\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.collections || this.collections.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCollections.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedCollectionsCount > this.pageSize) {\n      pagedSize = this.pagedCollectionsCount;\n    }\n    if (this.collections.length > pagedLength) {\n      this.pagedCollections = this.pagedCollections.concat(\n        this.collections.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCollectionsCount = this.pagedCollections.length;\n    this.didScroll = this.pagedCollections.length > this.pageSize;\n  }\n\n  async edit(collection: CollectionView) {\n    const canCreate = collection == null && this.canCreate;\n    const canEdit = collection != null && this.canEdit(collection);\n    const canDelete = collection != null && this.canDelete(collection);\n\n    if (!(canCreate || canEdit || canDelete)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      CollectionAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.collectionId = collection != null ? collection.id : null;\n        comp.canSave = canCreate || canEdit;\n        comp.canDelete = canDelete;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedCollection.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedCollection.subscribe(() => {\n          modal.close();\n          this.removeCollection(collection);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(collection: CollectionView) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      collection.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteCollection(this.organizationId, collection.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", collection.name)\n      );\n      this.removeCollection(collection);\n    } catch (e) {\n      this.logService.error(e);\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n    }\n  }\n\n  async users(collection: CollectionView) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"collection\";\n        comp.entityId = collection.id;\n        comp.entityName = collection.name;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onEditedUsers.subscribe(() => {\n          this.load();\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedCollections = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.collections && this.collections.length > this.pageSize;\n  }\n\n  canEdit(collection: CollectionView) {\n    if (this.organization.canEditAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canEditAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  canDelete(collection: CollectionView) {\n    if (this.organization.canDeleteAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canDeleteAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  private removeCollection(collection: CollectionView) {\n    const index = this.collections.indexOf(collection);\n    if (index > -1) {\n      this.collections.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventView {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: EventType;\n  installationId: string;\n\n  constructor(data: Required<EventView>) {\n    this.message = data.message;\n    this.humanReadableMessage = data.humanReadableMessage;\n    this.appIcon = data.appIcon;\n    this.appName = data.appName;\n    this.userId = data.userId;\n    this.userName = data.userName;\n    this.userEmail = data.userEmail;\n    this.date = data.date;\n    this.ip = data.ip;\n    this.type = data.type;\n    this.installationId = data.installationId;\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { EventView } from \"@bitwarden/common/models/view/eventView\";\n\nimport { EventService } from \"../core\";\n\n@Directive()\nexport abstract class BaseEventsComponent {\n  loading = true;\n  loaded = false;\n  events: EventView[];\n  start: string;\n  end: string;\n  dirtyDates = true;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  exportPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  abstract readonly exportFileName: string;\n\n  constructor(\n    protected eventService: EventService,\n    protected i18nService: I18nService,\n    protected exportService: ExportService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected fileDownloadService: FileDownloadService\n  ) {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n  }\n\n  async exportEvents() {\n    if (this.appApiPromiseUnfulfilled() || this.dirtyDates) {\n      return;\n    }\n\n    this.loading = true;\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    try {\n      this.exportPromise = this.export(dates[0], dates[1]);\n\n      await this.exportPromise;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    this.exportPromise = null;\n    this.loading = false;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.appApiPromiseUnfulfilled()) {\n      return;\n    }\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    this.loading = true;\n    let events: EventView[] = [];\n    try {\n      const promise = this.loadAndParseEvents(\n        dates[0],\n        dates[1],\n        clearExisting ? null : this.continuationToken\n      );\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      const result = await promise;\n      this.continuationToken = result.continuationToken;\n      events = result.events;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.dirtyDates = false;\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n\n  protected abstract requestEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ): Promise<ListResponse<EventResponse>>;\n  protected abstract getUserName(r: EventResponse, userId: string): { name: string; email: string };\n\n  protected async loadAndParseEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ) {\n    const response = await this.requestEvents(startDate, endDate, continuationToken);\n\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user = this.getUserName(r, userId);\n        const userName = user != null ? user.name : this.i18nService.t(\"unknown\");\n\n        return new EventView({\n          message: eventInfo.message,\n          humanReadableMessage: eventInfo.humanReadableMessage,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: r.installationId != null ? `Installation: ${r.installationId}` : userName,\n          userEmail: user != null ? user.email : \"\",\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n          installationId: r.installationId,\n        });\n      })\n    );\n    return { continuationToken: response.continuationToken, events: events };\n  }\n\n  protected parseDates() {\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return null;\n    }\n    return dates;\n  }\n\n  protected appApiPromiseUnfulfilled() {\n    return this.refreshPromise != null || this.morePromise != null || this.exportPromise != null;\n  }\n\n  private async export(start: string, end: string) {\n    let continuationToken = this.continuationToken;\n    let events = [].concat(this.events);\n\n    while (continuationToken != null) {\n      const result = await this.loadAndParseEvents(start, end, continuationToken);\n      continuationToken = result.continuationToken;\n      events = events.concat(result.events);\n    }\n\n    const data = await this.exportService.getEventExport(events);\n    const fileName = this.exportService.getFileName(this.exportFileName, \"csv\");\n    this.fileDownloadService.download({\n      fileName,\n      blobData: data,\n      blobOptions: { type: \"text/plain\" },\n    });\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"form-inline\">\n      <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"start\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n      <span class=\"mx-2\">-</span>\n      <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"end\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n    </div>\n    <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary ml-3\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        <i\n          class=\"bwi bwi-refresh bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-spin': loaded && refreshForm.loading }\"\n        ></i>\n        {{ \"refresh\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\"\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i>\n        <span>{{ \"export\" | i18n }}</span>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n    <thead>\n      <tr>\n        <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n        <th class=\"border-top-0\" width=\"40\">\n          <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n        </th>\n        <th class=\"border-top-0\" width=\"150\">{{ \"user\" | i18n }}</th>\n        <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of events\">\n        <td>{{ e.date | date: \"medium\" }}</td>\n        <td>\n          <i\n            class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n            title=\"{{ e.appName }}, {{ e.ip }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n        </td>\n        <td>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td [innerHTML]=\"e.message\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    class=\"btn btn-block btn-link btn-submit\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && moreBtn.loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\n\nimport { BaseEventsComponent } from \"../../common/base.events.component\";\nimport { EventService } from \"../../core\";\n\n@Component({\n  selector: \"app-org-events\",\n  templateUrl: \"events.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n  exportFileName = \"org-events\";\n  organizationId: string;\n  organization: Organization;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      eventService,\n      i18nService,\n      exportService,\n      platformUtilsService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      if (this.organization == null || !this.organization.useEvents) {\n        this.router.navigate([\"/organizations\", this.organizationId]);\n        return;\n      }\n\n      await this.load();\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getOrganizationUsers(this.organizationId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n\n    if (this.organization.providerId != null) {\n      try {\n        const provider = await this.providerService.get(this.organization.providerId);\n        if (\n          provider != null &&\n          (await this.providerService.get(this.organization.providerId)).canManageUsers\n        ) {\n          const providerUsersResponse = await this.apiService.getProviderUsers(\n            this.organization.providerId\n          );\n          providerUsersResponse.data.forEach((u) => {\n            const name = this.userNamePipe.transform(u);\n            this.orgUsersUserIdMap.set(u.userId, {\n              name: `${name} (${this.organization.providerName})`,\n              email: u.email,\n            });\n          });\n        }\n      } catch (e) {\n        this.logService.warning(e);\n      }\n    }\n\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsOrganization(\n      this.organizationId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    if (userId == null) {\n      return null;\n    }\n\n    if (this.orgUsersUserIdMap.has(userId)) {\n      return this.orgUsersUserIdMap.get(userId);\n    }\n\n    if (r.providerId != null && r.providerId === this.organization.providerId) {\n      return {\n        name: this.organization.providerName,\n      };\n    }\n\n    return null;\n  }\n}\n","import { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class GroupRequest {\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n  collections: SelectionReadOnlyRequest[] = [];\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"groupAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-2\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"groupAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"groupAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              aria-hidden=\"true\"\n              title=\"{{ 'loading' | i18n }}\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { GroupRequest } from \"@bitwarden/common/models/request/groupRequest\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collectionResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-group-add-edit\",\n  templateUrl: \"group-add-edit.component.html\",\n})\nexport class GroupAddEditComponent implements OnInit {\n  @Input() groupId: string;\n  @Input() organizationId: string;\n  @Output() onSavedGroup = new EventEmitter();\n  @Output() onDeletedGroup = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  name: string;\n  externalId: string;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.groupId != null;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editGroup\");\n      try {\n        const group = await this.apiService.getGroupDetails(this.organizationId, this.groupId);\n        this.access = group.accessAll ? \"all\" : \"selected\";\n        this.name = group.name;\n        this.externalId = group.externalId;\n        if (group.collections != null && this.collections != null) {\n          group.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addGroup\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  async submit() {\n    const request = new GroupRequest();\n    request.name = this.name;\n    request.externalId = this.externalId;\n    request.accessAll = this.access === \"all\";\n    if (!request.accessAll) {\n      request.collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putGroup(this.organizationId, this.groupId, request);\n      } else {\n        this.formPromise = this.apiService.postGroup(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedGroupId\" : \"createdGroupId\", this.name)\n      );\n      this.onSavedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteGroup(this.organizationId, this.groupId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", this.name)\n      );\n      this.onDeletedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"groups\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newGroup\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedGroups : (groups | search: searchText:'name':'id')) as searchedGroups\n  \"\n>\n  <p *ngIf=\"!searchedGroups.length\">{{ \"noGroupsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedGroups.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let g of searchedGroups\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(g)\">{{ g.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(g)\">\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(g)\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/groupResponse\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\nimport { GroupAddEditComponent } from \"./group-add-edit.component\";\n\n@Component({\n  selector: \"app-org-groups\",\n  templateUrl: \"groups.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class GroupsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  groups: GroupResponse[];\n  pagedGroups: GroupResponse[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedGroupsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getGroups(this.organizationId);\n    const groups = response.data != null && response.data.length > 0 ? response.data : [];\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.groups || this.groups.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedGroups.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedGroupsCount > this.pageSize) {\n      pagedSize = this.pagedGroupsCount;\n    }\n    if (this.groups.length > pagedLength) {\n      this.pagedGroups = this.pagedGroups.concat(\n        this.groups.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedGroupsCount = this.pagedGroups.length;\n    this.didScroll = this.pagedGroups.length > this.pageSize;\n  }\n\n  async edit(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      GroupAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.groupId = group != null ? group.id : null;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedGroup.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedGroup.subscribe(() => {\n          modal.close();\n          this.removeGroup(group);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(group: GroupResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      group.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteGroup(this.organizationId, group.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", group.name)\n      );\n      this.removeGroup(group);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async users(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"group\";\n        comp.entityId = group.id;\n        comp.entityName = group.name;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onEditedUsers.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedGroups = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.groups && this.groups.length > this.pageSize;\n  }\n\n  private removeGroup(group: GroupResponse) {\n    const index = this.groups.indexOf(group);\n    if (index > -1) {\n      this.groups.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"organization\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"people\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageUsers\"\n          >\n            {{ \"people\" | i18n }}\n          </a>\n          <a\n            routerLink=\"collections\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canViewAllCollections || organization.canViewAssignedCollections\"\n          >\n            {{ \"collections\" | i18n }}\n          </a>\n          <a\n            routerLink=\"groups\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageGroups\"\n          >\n            {{ \"groups\" | i18n }}\n          </a>\n          <a\n            routerLink=\"policies\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManagePolicies\"\n          >\n            {{ \"policies\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sso\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageSso\"\n          >\n            {{ \"singleSignOn\" | i18n }}\n          </a>\n          <a\n            routerLink=\"scim\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageScim\"\n          >\n            {{ \"scim\" | i18n }}\n          </a>\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canAccessEventLogs\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-manage\",\n  templateUrl: \"manage.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ManageComponent implements OnInit {\n  organization: Organization;\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n    });\n  }\n}\n","export class OrganizationUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class OrganizationUserConfirmRequest {\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-user-confirm\",\n  templateUrl: \"user-confirm.component.html\",\n})\nexport class UserConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() publicKey: Uint8Array;\n  @Output() onConfirmedUser = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      if (this.publicKey != null) {\n        const fingerprint = await this.cryptoService.getFingerprint(\n          this.userId,\n          this.publicKey.buffer\n        );\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    this.onConfirmedUser.emit();\n  }\n}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/models/response/organizationUserResponse\";\nimport { ProviderUserUserDetailsResponse } from \"@bitwarden/common/models/response/provider/providerUserResponse\";\n\nimport { UserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\n\ntype StatusType = OrganizationUserStatusType | ProviderUserStatusType;\n\nconst MaxCheckedCount = 500;\n\n@Directive()\nexport abstract class BasePeopleComponent<\n  UserType extends ProviderUserUserDetailsResponse | OrganizationUserUserDetailsResponse\n> {\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  get allCount() {\n    return this.activeUsers != null ? this.activeUsers.length : 0;\n  }\n\n  get invitedCount() {\n    return this.statusMap.has(this.userStatusType.Invited)\n      ? this.statusMap.get(this.userStatusType.Invited).length\n      : 0;\n  }\n\n  get acceptedCount() {\n    return this.statusMap.has(this.userStatusType.Accepted)\n      ? this.statusMap.get(this.userStatusType.Accepted).length\n      : 0;\n  }\n\n  get confirmedCount() {\n    return this.statusMap.has(this.userStatusType.Confirmed)\n      ? this.statusMap.get(this.userStatusType.Confirmed).length\n      : 0;\n  }\n\n  get revokedCount() {\n    return this.statusMap.has(this.userStatusType.Revoked)\n      ? this.statusMap.get(this.userStatusType.Revoked).length\n      : 0;\n  }\n\n  get showConfirmUsers(): boolean {\n    return (\n      this.activeUsers != null &&\n      this.statusMap != null &&\n      this.activeUsers.length > 1 &&\n      this.confirmedCount > 0 &&\n      this.confirmedCount < 3 &&\n      this.acceptedCount > 0\n    );\n  }\n\n  get showBulkConfirmUsers(): boolean {\n    return this.acceptedCount > 0;\n  }\n\n  abstract userType: typeof OrganizationUserType | typeof ProviderUserType;\n  abstract userStatusType: typeof OrganizationUserStatusType | typeof ProviderUserStatusType;\n\n  loading = true;\n  statusMap = new Map<StatusType, UserType[]>();\n  status: StatusType;\n  users: UserType[] = [];\n  pagedUsers: UserType[] = [];\n  searchText: string;\n  actionPromise: Promise<void>;\n\n  protected allUsers: UserType[] = [];\n  protected activeUsers: UserType[] = [];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedUsersCount = 0;\n\n  constructor(\n    protected apiService: ApiService,\n    private searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cryptoService: CryptoService,\n    protected validationService: ValidationService,\n    protected modalService: ModalService,\n    private logService: LogService,\n    private searchPipe: SearchPipe,\n    protected userNamePipe: UserNamePipe,\n    protected stateService: StateService\n  ) {}\n\n  abstract edit(user: UserType): void;\n  abstract getUsers(): Promise<ListResponse<UserType>>;\n  abstract deleteUser(id: string): Promise<void>;\n  abstract revokeUser(id: string): Promise<void>;\n  abstract restoreUser(id: string): Promise<void>;\n  abstract reinviteUser(id: string): Promise<void>;\n  abstract confirmUser(user: UserType, publicKey: Uint8Array): Promise<void>;\n\n  async load() {\n    const response = await this.getUsers();\n    this.statusMap.clear();\n    this.activeUsers = [];\n    for (const status of Utils.iterateEnum(this.userStatusType)) {\n      this.statusMap.set(status, []);\n    }\n\n    this.allUsers = response.data != null && response.data.length > 0 ? response.data : [];\n    this.allUsers.sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    this.allUsers.forEach((u) => {\n      if (!this.statusMap.has(u.status)) {\n        this.statusMap.set(u.status, [u]);\n      } else {\n        this.statusMap.get(u.status).push(u);\n      }\n      if (u.status !== this.userStatusType.Revoked) {\n        this.activeUsers.push(u);\n      }\n    });\n    this.filter(this.status);\n    this.loading = false;\n  }\n\n  filter(status: StatusType) {\n    this.status = status;\n    if (this.status != null) {\n      this.users = this.statusMap.get(this.status);\n    } else {\n      this.users = this.activeUsers;\n    }\n    // Reset checkbox selecton\n    this.selectAll(false);\n    this.resetPaging();\n  }\n\n  loadMore() {\n    if (!this.users || this.users.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedUsers.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedUsersCount > this.pageSize) {\n      pagedSize = this.pagedUsersCount;\n    }\n    if (this.users.length > pagedLength) {\n      this.pagedUsers = this.pagedUsers.concat(\n        this.users.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedUsersCount = this.pagedUsers.length;\n    this.didScroll = this.pagedUsers.length > this.pageSize;\n  }\n\n  checkUser(user: OrganizationUserUserDetailsResponse, select?: boolean) {\n    (user as any).checked = select == null ? !(user as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n\n    const filteredUsers = this.searchPipe.transform(\n      this.users,\n      this.searchText,\n      \"name\",\n      \"email\",\n      \"id\"\n    );\n\n    const selectCount =\n      select && filteredUsers.length > MaxCheckedCount ? MaxCheckedCount : filteredUsers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkUser(filteredUsers[i], select);\n    }\n  }\n\n  async resetPaging() {\n    this.pagedUsers = [];\n    this.loadMore();\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  protected async removeUserConfirmationDialog(user: UserType) {\n    return this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(user),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n  }\n\n  async remove(user: UserType) {\n    const confirmed = await this.removeUserConfirmationDialog(user);\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.deleteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(user))\n      );\n      this.removeUser(user);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async revoke(user: UserType) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.revokeWarningMessage(),\n      this.i18nService.t(\"revokeUserId\", this.userNamePipe.transform(user)),\n      this.i18nService.t(\"revokeAccess\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.revokeUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"revokedUserId\", this.userNamePipe.transform(user))\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async restore(user: UserType) {\n    this.actionPromise = this.restoreUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"restoredUserId\", this.userNamePipe.transform(user))\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async reinvite(user: UserType) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    this.actionPromise = this.reinviteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"hasBeenReinvited\", this.userNamePipe.transform(user))\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async confirm(user: UserType) {\n    function updateUser(self: BasePeopleComponent<UserType>) {\n      user.status = self.userStatusType.Confirmed;\n      const mapIndex = self.statusMap.get(self.userStatusType.Accepted).indexOf(user);\n      if (mapIndex > -1) {\n        self.statusMap.get(self.userStatusType.Accepted).splice(mapIndex, 1);\n        self.statusMap.get(self.userStatusType.Confirmed).push(user);\n      }\n    }\n\n    const confirmUser = async (publicKey: Uint8Array) => {\n      try {\n        this.actionPromise = this.confirmUser(user, publicKey);\n        await this.actionPromise;\n        updateUser(this);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(user))\n        );\n      } catch (e) {\n        this.validationService.showError(e);\n        throw e;\n      } finally {\n        this.actionPromise = null;\n      }\n    };\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(user.userId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n      if (autoConfirm == null || !autoConfirm) {\n        const [modal] = await this.modalService.openViewRef(\n          UserConfirmComponent,\n          this.confirmModalRef,\n          (comp) => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.userId = user != null ? user.userId : null;\n            comp.publicKey = publicKey;\n            // eslint-disable-next-line rxjs/no-async-subscribe\n            comp.onConfirmedUser.subscribe(async () => {\n              try {\n                comp.formPromise = confirmUser(publicKey);\n                await comp.formPromise;\n                modal.close();\n              } catch (e) {\n                this.logService.error(e);\n              }\n            });\n          }\n        );\n        return;\n      }\n\n      try {\n        const fingerprint = await this.cryptoService.getFingerprint(user.userId, publicKey.buffer);\n        this.logService.info(`User's fingerprint: ${fingerprint.join(\"-\")}`);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      await confirmUser(publicKey);\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.users && this.users.length > this.pageSize;\n  }\n\n  protected revokeWarningMessage(): string {\n    return this.i18nService.t(\"revokeUserConfirmation\");\n  }\n\n  protected getCheckedUsers() {\n    return this.users.filter((u) => (u as any).checked);\n  }\n\n  protected removeUser(user: UserType) {\n    let index = this.users.indexOf(user);\n    if (index > -1) {\n      this.users.splice(index, 1);\n      this.resetPaging();\n    }\n    if (this.statusMap.has(user.status)) {\n      index = this.statusMap.get(user.status).indexOf(user);\n      if (index > -1) {\n        this.statusMap.get(user.status).splice(index, 1);\n      }\n    }\n  }\n}\n","type OrganizationUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class OrganizationUserBulkConfirmRequest {\n  keys: OrganizationUserBulkRequestEntry[];\n\n  constructor(keys: OrganizationUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"confirmUsers\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <app-callout type=\"danger\" *ngIf=\"filteredUsers.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!loading && !done\">\n          <p>\n            {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n            <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n              {{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"fingerprint\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ fingerprints.get(user.id) }}\n              </td>\n            </tr>\n            <tr *ngFor=\"let user of excludedUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"!loading && done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { OrganizationUserBulkConfirmRequest } from \"@bitwarden/common/models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-confirm\",\n  templateUrl: \"bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent implements OnInit {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  excludedUsers: BulkUserDetails[];\n  filteredUsers: BulkUserDetails[];\n  publicKeys: Map<string, Uint8Array> = new Map();\n  fingerprints: Map<string, string> = new Map();\n  statuses: Map<string, string> = new Map();\n\n  loading = true;\n  done = false;\n  error: string;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.excludedUsers = this.users.filter((u) => !this.isAccepted(u));\n    this.filteredUsers = this.users.filter((u) => this.isAccepted(u));\n\n    if (this.filteredUsers.length <= 0) {\n      this.done = true;\n    }\n\n    const response = await this.getPublicKeys();\n\n    for (const entry of response.data) {\n      const publicKey = Utils.fromB64ToArray(entry.key);\n      const fingerprint = await this.cryptoService.getFingerprint(entry.userId, publicKey.buffer);\n      if (fingerprint != null) {\n        this.publicKeys.set(entry.id, publicKey);\n        this.fingerprints.set(entry.id, fingerprint.join(\"-\"));\n      }\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const key = await this.getCryptoKey();\n      const userIdsWithKeys: any[] = [];\n      for (const user of this.filteredUsers) {\n        const publicKey = this.publicKeys.get(user.id);\n        if (publicKey == null) {\n          continue;\n        }\n        const encryptedKey = await this.cryptoService.rsaEncrypt(key.key, publicKey.buffer);\n        userIdsWithKeys.push({\n          id: user.id,\n          key: encryptedKey.encryptedString,\n        });\n      }\n      const response = await this.postConfirmRequest(userIdsWithKeys);\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkConfirmMessage\");\n        this.statuses.set(entry.id, error);\n      });\n\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n    this.loading = false;\n  }\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === OrganizationUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new OrganizationUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postOrganizationUsersPublicKey(this.organizationId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getOrgKey(this.organizationId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new OrganizationUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postOrganizationUserBulkConfirm(this.organizationId, request);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"removeUsers\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error\">\n            {{ removeUsersWarning }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"removeUsers\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-remove\",\n  templateUrl: \"bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading = false;\n  done = false;\n  error: string;\n\n  constructor(protected apiService: ApiService, protected i18nService: I18nService) {}\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.deleteUsers();\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkRemovedMessage\");\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n  }\n\n  protected async deleteUsers() {\n    const request = new OrganizationUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyOrganizationUsers(this.organizationId, request);\n  }\n\n  protected get removeUsersWarning() {\n    return this.i18nService.t(\"removeOrgUsersConfirmation\");\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ bulkTitle }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error && isRevoking\">\n            {{ \"revokeUsersWarning\" | i18n }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ bulkTitle }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ModalConfig } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-restore-revoke\",\n  templateUrl: \"bulk-restore-revoke.component.html\",\n})\nexport class BulkRestoreRevokeComponent {\n  isRevoking: boolean;\n  organizationId: string;\n  users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading = false;\n  done = false;\n  error: string;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    config: ModalConfig\n  ) {\n    this.isRevoking = config.data.isRevoking;\n    this.organizationId = config.data.organizationId;\n    this.users = config.data.users;\n  }\n\n  get bulkTitle() {\n    const titleKey = this.isRevoking ? \"revokeUsers\" : \"restoreUsers\";\n    return this.i18nService.t(titleKey);\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.performBulkUserAction();\n\n      const bulkMessage = this.isRevoking ? \"bulkRevokedMessage\" : \"bulkRestoredMessage\";\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(bulkMessage);\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n  }\n\n  protected async performBulkUserAction() {\n    const request = new OrganizationUserBulkRequest(this.users.map((user) => user.id));\n    if (this.isRevoking) {\n      return await this.apiService.revokeManyOrganizationUsers(this.organizationId, request);\n    } else {\n      return await this.apiService.restoreManyOrganizationUsers(this.organizationId, request);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"bulkConfirmStatus\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              <th>{{ \"status\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tr *ngFor=\"let item of users\">\n            <td width=\"30\">\n              <app-avatar\n                [data]=\"item.user | userName\"\n                [email]=\"item.user.email\"\n                size=\"25\"\n                [circle]=\"true\"\n                [fontSize]=\"14\"\n              ></app-avatar>\n            </td>\n            <td>\n              {{ item.user.email }}\n              <small class=\"text-muted d-block\" *ngIf=\"item.user.name\">{{ item.user.name }}</small>\n            </td>\n            <td class=\"text-danger\" *ngIf=\"item.error\">\n              {{ item.message }}\n            </td>\n            <td *ngIf=\"!item.error\">\n              {{ item.message }}\n            </td>\n          </tr>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\n\nexport interface BulkUserDetails {\n  id: string;\n  name: string;\n  email: string;\n  status: OrganizationUserStatusType | ProviderUserStatusType;\n}\n\ntype BulkStatusEntry = {\n  user: BulkUserDetails;\n  error: boolean;\n  message: string;\n};\n\n@Component({\n  selector: \"app-bulk-status\",\n  templateUrl: \"bulk-status.component.html\",\n})\nexport class BulkStatusComponent {\n  users: BulkStatusEntry[];\n  loading = false;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"eventLogsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"eventLogsTitle\">\n          {{ \"eventLogs\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loaded\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loaded\">\n        <div class=\"d-flex\">\n          <div class=\"form-inline\">\n            <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"start\"\n              placeholder=\"{{ 'startDate' | i18n }}\"\n              [(ngModel)]=\"start\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n            <span class=\"mx-2\">-</span>\n            <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"end\"\n              placeholder=\"{{ 'endDate' | i18n }}\"\n              [(ngModel)]=\"end\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n          </div>\n          <button\n            #refreshBtn\n            [appApiAction]=\"refreshPromise\"\n            type=\"button\"\n            class=\"btn btn-sm btn-outline-primary ml-3\"\n            (click)=\"loadEvents(true)\"\n            [disabled]=\"loaded && refreshBtn.loading\"\n          >\n            <i\n              class=\"bwi bwi-refresh bwi-fw\"\n              [ngClass]=\"{ 'bwi-spin': loaded && refreshBtn.loading }\"\n              aria-hidden=\"true\"\n            ></i>\n            {{ \"refresh\" | i18n }}\n          </button>\n        </div>\n        <hr />\n        <div *ngIf=\"!events || !events.length\">\n          {{ \"noEventsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover mb-0\" *ngIf=\"events && events.length\">\n          <thead>\n            <tr>\n              <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n              <th class=\"border-top-0\" width=\"40\">\n                <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n              </th>\n              <th class=\"border-top-0\" width=\"150\" *ngIf=\"showUser\">{{ \"user\" | i18n }}</th>\n              <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let e of events\">\n              <td>{{ e.date | date: \"medium\" }}</td>\n              <td>\n                <i\n                  class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n                  title=\"{{ e.appName }}, {{ e.ip }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n              </td>\n              <td *ngIf=\"showUser\">\n                <span appA11yTitle=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n              </td>\n              <td [innerHTML]=\"e.message\"></td>\n            </tr>\n          </tbody>\n        </table>\n        <button\n          #moreBtn\n          [appApiAction]=\"morePromise\"\n          type=\"button\"\n          class=\"btn btn-block btn-link btn-submit\"\n          (click)=\"loadEvents(false)\"\n          [disabled]=\"loaded && moreBtn.loading\"\n          *ngIf=\"continuationToken\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"loadMore\" | i18n }}</span>\n        </button>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\n\nimport { EventService } from \"../../core\";\n\n@Component({\n  selector: \"app-entity-events\",\n  templateUrl: \"entity-events.component.html\",\n})\nexport class EntityEventsComponent implements OnInit {\n  @Input() name: string;\n  @Input() entity: \"user\" | \"cipher\";\n  @Input() entityId: string;\n  @Input() organizationId: string;\n  @Input() providerId: string;\n  @Input() showUser = false;\n\n  loading = true;\n  loaded = false;\n  events: any[];\n  start: string;\n  end: string;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n  private orgUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private eventService: EventService,\n    private platformUtilsService: PlatformUtilsService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n    await this.load();\n  }\n\n  async load() {\n    if (this.showUser) {\n      const response = await this.apiService.getOrganizationUsers(this.organizationId);\n      response.data.forEach((u) => {\n        const name = this.userNamePipe.transform(u);\n        this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n        this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n      });\n    }\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.refreshPromise != null || this.morePromise != null) {\n      return;\n    }\n\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return;\n    }\n\n    this.loading = true;\n    let response: ListResponse<EventResponse>;\n    try {\n      let promise: Promise<any>;\n      if (this.entity === \"user\" && this.providerId) {\n        promise = this.apiService.getEventsProviderUser(\n          this.providerId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else if (this.entity === \"user\") {\n        promise = this.apiService.getEventsOrganizationUser(\n          this.organizationId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else {\n        promise = this.apiService.getEventsCipher(\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      }\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      response = await promise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.continuationToken = response.continuationToken;\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user =\n          this.showUser && userId != null && this.orgUsersUserIdMap.has(userId)\n            ? this.orgUsersUserIdMap.get(userId)\n            : null;\n        return {\n          message: eventInfo.message,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: user != null ? user.name : this.showUser ? this.i18nService.t(\"unknown\") : null,\n          userEmail: user != null ? user.email : this.showUser ? \"\" : null,\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n        };\n      })\n    );\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"resetPasswordTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"resetPasswordTitle\">\n          {{ \"resetPassword\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\"\n          >{{ \"resetPasswordLoggedOutWarning\" | i18n: loggedOutWarningName }}\n        </app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          enforcedPolicyMessage=\"{{ 'resetPasswordMasterPasswordPolicyInEffect' | i18n }}\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col form-group\">\n            <div class=\"d-flex\">\n              <label for=\"newPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"ml-auto d-flex\">\n                <a\n                  href=\"#\"\n                  class=\"d-block mr-2 bwi-icon-above-input\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                  (click)=\"generatePassword()\"\n                >\n                  <i class=\"bwi bwi-lg bwi-fw bwi-refresh\" aria-hidden=\"true\"></i>\n                </a>\n              </div>\n            </div>\n            <div class=\"input-group mb-1\">\n              <input\n                id=\"newPassword\"\n                class=\"form-control text-monospace\"\n                appAutofocus\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"NewPassword\"\n                [(ngModel)]=\"newPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"input-group-append\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword()\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                  (click)=\"copy(newPassword)\"\n                >\n                  <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n            <app-password-strength\n              [password]=\"newPassword\"\n              [email]=\"email\"\n              [showText]=\"true\"\n              (passwordStrengthResult)=\"getStrengthResult($event)\"\n            >\n            </app-password-strength>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from \"@angular/core\";\nimport zxcvbn from \"zxcvbn\";\n\nimport { PasswordStrengthComponent } from \"@bitwarden/angular/shared/components/password-strength/password-strength.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { OrganizationUserResetPasswordRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordRequest\";\n\n@Component({\n  selector: \"app-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordComponent implements OnInit {\n  @Input() name: string;\n  @Input() email: string;\n  @Input() id: string;\n  @Input() organizationId: string;\n  @Output() onPasswordReset = new EventEmitter();\n  @ViewChild(PasswordStrengthComponent) passwordStrengthComponent: PasswordStrengthComponent;\n\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  newPassword: string = null;\n  showPassword = false;\n  passwordStrengthResult: zxcvbn.ZXCVBNResult;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    private cryptoService: CryptoService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // Get Enforced Policy Options\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  get loggedOutWarningName() {\n    return this.name != null ? this.name : this.i18nService.t(\"thisUser\");\n  }\n\n  async generatePassword() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    this.newPassword = await this.passwordGenerationService.generatePassword(options);\n    this.passwordStrengthComponent.updatePasswordStrength(this.newPassword);\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"newPassword\").focus();\n  }\n\n  copy(value: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  async submit() {\n    // Validation\n    if (this.newPassword == null || this.newPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n\n    if (this.newPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordMinlength\")\n      );\n      return false;\n    }\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.passwordStrengthResult.score,\n        this.newPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    if (this.passwordStrengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    // Get user Information (kdf type, kdf iterations, resetPasswordKey, private key) and change password\n    try {\n      this.formPromise = this.apiService\n        .getOrganizationUserResetPasswordDetails(this.organizationId, this.id)\n        .then(async (response) => {\n          if (response == null) {\n            throw new Error(this.i18nService.t(\"resetPasswordDetailsError\"));\n          }\n\n          const kdfType = response.kdf;\n          const kdfIterations = response.kdfIterations;\n          const resetPasswordKey = response.resetPasswordKey;\n          const encryptedPrivateKey = response.encryptedPrivateKey;\n\n          // Decrypt Organization's encrypted Private Key with org key\n          const orgSymKey = await this.cryptoService.getOrgKey(this.organizationId);\n          const decPrivateKey = await this.cryptoService.decryptToBytes(\n            new EncString(encryptedPrivateKey),\n            orgSymKey\n          );\n\n          // Decrypt User's Reset Password Key to get EncKey\n          const decValue = await this.cryptoService.rsaDecrypt(resetPasswordKey, decPrivateKey);\n          const userEncKey = new SymmetricCryptoKey(decValue);\n\n          // Create new key and hash new password\n          const newKey = await this.cryptoService.makeKey(\n            this.newPassword,\n            this.email.trim().toLowerCase(),\n            kdfType,\n            kdfIterations\n          );\n          const newPasswordHash = await this.cryptoService.hashPassword(this.newPassword, newKey);\n\n          // Create new encKey for the User\n          const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n          // Create request\n          const request = new OrganizationUserResetPasswordRequest();\n          request.key = newEncKey[1].encryptedString;\n          request.newMasterPasswordHash = newPasswordHash;\n\n          // Change user's password\n          return this.apiService.putOrganizationUserResetPassword(\n            this.organizationId,\n            this.id,\n            request\n          );\n        });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"resetPasswordSuccess\")\n      );\n      this.onPasswordReset.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  getStrengthResult(result: zxcvbn.ZXCVBNResult) {\n    this.passwordStrengthResult = result;\n  }\n}\n","import { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class OrganizationUserInviteRequest {\n  emails: string[] = [];\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","import { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class OrganizationUserUpdateRequest {\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","<div class=\"form-group mb-0\">\n  <div class=\"form-check mt-1 form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [name]=\"pascalize(parentId)\"\n      [id]=\"parentId\"\n      [(ngModel)]=\"parentChecked\"\n      [indeterminate]=\"parentIndeterminate\"\n    />\n    <label class=\"form-check-label font-weight-normal\" [for]=\"parentId\">\n      {{ parentId | i18n }}\n    </label>\n  </div>\n  <div class=\"form-group form-group-child-check mb-0\">\n    <div class=\"form-check mt-1\" *ngFor=\"let c of checkboxes\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        [name]=\"pascalize(c.id)\"\n        [id]=\"c.id\"\n        [ngModel]=\"c.get()\"\n        (ngModelChange)=\"c.set($event)\"\n      />\n      <label class=\"form-check-label font-weight-normal\" [for]=\"c.id\">\n        {{ c.id | i18n }}\n      </label>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-nested-checkbox\",\n  templateUrl: \"nested-checkbox.component.html\",\n})\nexport class NestedCheckboxComponent {\n  @Input() parentId: string;\n  @Input() checkboxes: { id: string; get: () => boolean; set: (v: boolean) => void }[];\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  get parentIndeterminate() {\n    return !this.parentChecked && this.checkboxes.some((c) => c.get());\n  }\n\n  get parentChecked() {\n    return this.checkboxes.every((c) => c.get());\n  }\n\n  set parentChecked(value: boolean) {\n    this.checkboxes.forEach((c) => {\n      c.set(value);\n    });\n  }\n\n  pascalize(s: string) {\n    return Utils.camelToPascalCase(s);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n          <span bitBadge badgeType=\"secondary\" *ngIf=\"isRevoked\">{{ \"revoked\" | i18n }}</span>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/user-types-access-control/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeUser\"\n            [value]=\"organizationUserType.User\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeUser\">\n            {{ \"user\" | i18n }}\n            <small>{{ \"userDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeManager\"\n            [value]=\"organizationUserType.Manager\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeManager\">\n            {{ \"manager\" | i18n }}\n            <small>{{ \"managerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeAdmin\"\n            [value]=\"organizationUserType.Admin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeAdmin\">\n            {{ \"admin\" | i18n }}\n            <small>{{ \"adminDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeOwner\"\n            [value]=\"organizationUserType.Owner\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeOwner\">\n            {{ \"owner\" | i18n }}\n            <small>{{ \"ownerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeCustom\"\n            [value]=\"organizationUserType.Custom\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeCustom\">\n            {{ \"custom\" | i18n }}\n            <small>{{ \"customDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <ng-container *ngIf=\"customUserTypeSelected\">\n          <h3 class=\"mt-4 d-flex\">\n            {{ \"permissions\" | i18n }}\n          </h3>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">Manager Permissions</label>\n                <hr class=\"my-0 mr-2\" />\n                <app-nested-checkbox\n                  parentId=\"manageAssignedCollections\"\n                  [checkboxes]=\"manageAssignedCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n              </div>\n            </div>\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">Admin Permissions</label>\n                <hr class=\"my-0 mr-2\" />\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessEventLogs\"\n                      id=\"accessEventLogs\"\n                      [(ngModel)]=\"permissions.accessEventLogs\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessEventLogs\">\n                      {{ \"accessEventLogs\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessImportExport\"\n                      id=\"accessImportExport\"\n                      [(ngModel)]=\"permissions.accessImportExport\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessImportExport\">\n                      {{ \"accessImportExport\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessReports\"\n                      id=\"accessReports\"\n                      [(ngModel)]=\"permissions.accessReports\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessReports\">\n                      {{ \"accessReports\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <app-nested-checkbox\n                  parentId=\"manageAllCollections\"\n                  [checkboxes]=\"manageAllCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageGroups\"\n                      id=\"manageGroups\"\n                      [(ngModel)]=\"permissions.manageGroups\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageGroups\">\n                      {{ \"manageGroups\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageSso\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.manageSso\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageSso\">\n                      {{ \"manageSso\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"managePolicies\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.managePolicies\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"managePolicies\">\n                      {{ \"managePolicies\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageUsers\"\n                      id=\"manageUsers\"\n                      [(ngModel)]=\"permissions.manageUsers\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageUsers\">\n                      {{ \"manageUsers\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageResetPassword\"\n                      id=\"manageResetPassword\"\n                      [(ngModel)]=\"permissions.manageResetPassword\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageResetPassword\">\n                      {{ \"manageResetPassword\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-3\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"userAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"userAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"restore()\"\n            class=\"btn btn-outline-secondary\"\n            *ngIf=\"editMode && isRevoked\"\n            [disabled]=\"form.loading\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"restoreAccess\" | i18n }}</span>\n          </button>\n          <button\n            type=\"button\"\n            (click)=\"revoke()\"\n            class=\"btn btn-outline-secondary\"\n            *ngIf=\"editMode && !isRevoked\"\n            [disabled]=\"form.loading\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"revokeAccess\" | i18n }}</span>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissionsApi\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { OrganizationUserInviteRequest } from \"@bitwarden/common/models/request/organizationUserInviteRequest\";\nimport { OrganizationUserUpdateRequest } from \"@bitwarden/common/models/request/organizationUserUpdateRequest\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collectionResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Input() usesKeyConnector = false;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n  @Output() onRevokedUser = new EventEmitter();\n  @Output() onRestoredUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  isRevoked = false;\n  title: string;\n  emails: string;\n  type: OrganizationUserType = OrganizationUserType.User;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  organizationUserType = OrganizationUserType;\n\n  manageAllCollectionsCheckboxes = [\n    {\n      id: \"createNewCollections\",\n      get: () => this.permissions.createNewCollections,\n      set: (v: boolean) => (this.permissions.createNewCollections = v),\n    },\n    {\n      id: \"editAnyCollection\",\n      get: () => this.permissions.editAnyCollection,\n      set: (v: boolean) => (this.permissions.editAnyCollection = v),\n    },\n    {\n      id: \"deleteAnyCollection\",\n      get: () => this.permissions.deleteAnyCollection,\n      set: (v: boolean) => (this.permissions.deleteAnyCollection = v),\n    },\n  ];\n\n  manageAssignedCollectionsCheckboxes = [\n    {\n      id: \"editAssignedCollections\",\n      get: () => this.permissions.editAssignedCollections,\n      set: (v: boolean) => (this.permissions.editAssignedCollections = v),\n    },\n    {\n      id: \"deleteAssignedCollections\",\n      get: () => this.permissions.deleteAssignedCollections,\n      set: (v: boolean) => (this.permissions.deleteAssignedCollections = v),\n    },\n  ];\n\n  get customUserTypeSelected(): boolean {\n    return this.type === OrganizationUserType.Custom;\n  }\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.organizationUserId != null;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getOrganizationUser(\n          this.organizationId,\n          this.organizationUserId\n        );\n        this.access = user.accessAll ? \"all\" : \"selected\";\n        this.type = user.type;\n        this.isRevoked = user.status === OrganizationUserStatusType.Revoked;\n        if (user.type === OrganizationUserType.Custom) {\n          this.permissions = user.permissions;\n        }\n        if (user.collections != null && this.collections != null) {\n          user.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  setRequestPermissions(p: PermissionsApi, clearPermissions: boolean) {\n    Object.assign(p, clearPermissions ? new PermissionsApi() : this.permissions);\n    return p;\n  }\n\n  handleDependentPermissions() {\n    // Manage Password Reset must have Manage Users enabled\n    if (this.permissions.manageResetPassword && !this.permissions.manageUsers) {\n      this.permissions.manageUsers = true;\n      (document.getElementById(\"manageUsers\") as HTMLInputElement).checked = true;\n      this.platformUtilsService.showToast(\n        \"info\",\n        null,\n        this.i18nService.t(\"resetPasswordManageUsers\")\n      );\n    }\n  }\n\n  async submit() {\n    let collections: SelectionReadOnlyRequest[] = null;\n    if (this.access !== \"all\") {\n      collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        const request = new OrganizationUserUpdateRequest();\n        request.accessAll = this.access === \"all\";\n        request.type = this.type;\n        request.collections = collections;\n        request.permissions = this.setRequestPermissions(\n          request.permissions ?? new PermissionsApi(),\n          request.type !== OrganizationUserType.Custom\n        );\n        this.formPromise = this.apiService.putOrganizationUser(\n          this.organizationId,\n          this.organizationUserId,\n          request\n        );\n      } else {\n        const request = new OrganizationUserInviteRequest();\n        request.emails = [...new Set(this.emails.trim().split(/\\s*,\\s*/))];\n        request.accessAll = this.access === \"all\";\n        request.type = this.type;\n        request.permissions = this.setRequestPermissions(\n          request.permissions ?? new PermissionsApi(),\n          request.type !== OrganizationUserType.Custom\n        );\n        request.collections = collections;\n        this.formPromise = this.apiService.postOrganizationUserInvite(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const message = this.usesKeyConnector\n      ? \"removeUserConfirmationKeyConnector\"\n      : \"removeOrgUserConfirmation\";\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(message),\n      this.i18nService.t(\"removeUserIdAccess\", this.name),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async revoke() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeUserConfirmation\"),\n      this.i18nService.t(\"revokeUserId\", this.name),\n      this.i18nService.t(\"revokeAccess\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.apiService.revokeOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"revokedUserId\", this.name)\n      );\n      this.isRevoked = true;\n      this.onRevokedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async restore() {\n    if (!this.editMode) {\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.restoreOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"restoredUserId\", this.name)\n      );\n      this.isRevoked = false;\n      this.onRestoredUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export class OrganizationUserUpdateGroupsRequest {\n  groupIds: string[] = [];\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"groupAccessTitle\">\n          {{ \"groupAccess\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <p>{{ \"groupAccessUserDesc\" | i18n }}</p>\n        <div *ngIf=\"!groups || !groups.length\">\n          {{ \"noGroupsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n          <tbody>\n            <tr *ngFor=\"let g of groups; let i = index\">\n              <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"g.checked\"\n                  name=\"Groups[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td (click)=\"check(g)\">\n                {{ g.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { OrganizationUserUpdateGroupsRequest } from \"@bitwarden/common/models/request/organizationUserUpdateGroupsRequest\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/groupResponse\";\n\n@Component({\n  selector: \"app-user-groups\",\n  templateUrl: \"user-groups.component.html\",\n})\nexport class UserGroupsComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Output() onSavedUser = new EventEmitter();\n\n  loading = true;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const groupsResponse = await this.apiService.getGroups(this.organizationId);\n    const groups = groupsResponse.data.map((r) => r);\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n\n    try {\n      const userGroups = await this.apiService.getOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId\n      );\n      if (userGroups != null && this.groups != null) {\n        userGroups.forEach((ug) => {\n          const group = this.groups.filter((g) => g.id === ug);\n          if (group != null && group.length > 0) {\n            (group[0] as any).checked = true;\n          }\n        });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    const request = new OrganizationUserUpdateGroupsRequest();\n    request.groupIds = this.groups.filter((g) => (g as any).checked).map((g) => g.id);\n\n    try {\n      this.formPromise = this.apiService.putOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedGroupsForUser\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"people\" | i18n }}</h1>\n  <div class=\"mt-2 d-flex\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span bitBadge badgeType=\"warning\" *ngIf=\"acceptedCount\">{{ acceptedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Revoked }\"\n        (click)=\"filter(userStatusType.Revoked)\"\n      >\n        {{ \"revoked\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"revokedCount\">{{ revokedCount }}</span>\n      </button>\n    </div>\n    <div class=\"ml-3\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown ml-3\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkRestore()\">\n          <i class=\"bwi bwi-fw bwi-plus-circle\" aria-hidden=\"true\"></i>\n          {{ \"restoreAccess\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkRevoke()\">\n          <i class=\"bwi bwi-fw bwi-minus-circle\" aria-hidden=\"true\"></i>\n          {{ \"revokeAccess\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"usersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"u | userName\"\n              [email]=\"u.email\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            >\n            </app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Revoked\">{{\n              \"revoked\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"u.twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"showEnrolledStatus(u)\">\n              <i\n                class=\"bwi bwi-key\"\n                title=\"{{ 'enrolledPasswordReset' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"enrolledPasswordReset\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.Owner\">{{ \"owner\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Admin\">{{ \"admin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Manager\">{{ \"manager\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.User\">{{ \"user\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Custom\">{{ \"custom\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"groups(u)\"\n                  *ngIf=\"accessGroups\"\n                >\n                  <i class=\"bwi bwi-fw bwi-sitemap\" aria-hidden=\"true\"></i>\n                  {{ \"groups\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"resetPassword(u)\"\n                  *ngIf=\"allowResetPassword(u)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n                  {{ \"resetPassword\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"restore(u)\"\n                  *ngIf=\"u.status === userStatusType.Revoked\"\n                >\n                  <i class=\"bwi bwi-fw bwi-plus-circle\" aria-hidden=\"true\"></i>\n                  {{ \"restoreAccess\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"revoke(u)\"\n                  *ngIf=\"u.status !== userStatusType.Revoked\"\n                >\n                  <i class=\"bwi bwi-fw bwi-minus-circle\" aria-hidden=\"true\"></i>\n                  {{ \"revokeAccess\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #groupsTemplate></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #resetPasswordTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organizationKeysRequest\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"@bitwarden/common/models/request/organizationUserConfirmRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { OrganizationUserBulkResponse } from \"@bitwarden/common/models/response/organizationUserBulkResponse\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/models/response/organizationUserResponse\";\n\nimport { BasePeopleComponent } from \"../../common/base.people.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { BulkRestoreRevokeComponent } from \"./bulk/bulk-restore-revoke.component\";\nimport { BulkStatusComponent } from \"./bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"./entity-events.component\";\nimport { ResetPasswordComponent } from \"./reset-password.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\nimport { UserGroupsComponent } from \"./user-groups.component\";\n\n@Component({\n  selector: \"app-org-people\",\n  templateUrl: \"people.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PeopleComponent\n  extends BasePeopleComponent<OrganizationUserUserDetailsResponse>\n  implements OnInit\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n  @ViewChild(\"resetPasswordTemplate\", { read: ViewContainerRef, static: true })\n  resetPasswordModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = OrganizationUserType;\n  userStatusType = OrganizationUserStatusType;\n\n  organizationId: string;\n  status: OrganizationUserStatusType = null;\n  accessEvents = false;\n  accessGroups = false;\n  canResetPassword = false; // User permission (admin/custom)\n  orgUseResetPassword = false; // Org plan ability\n  orgHasKeys = false; // Org public/private keys\n  orgResetPasswordPolicyEnabled = false;\n  callingUserType: OrganizationUserType = null;\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    private router: Router,\n    searchService: SearchService,\n    validationService: ValidationService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    private syncService: SyncService,\n    stateService: StateService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      const organization = await this.organizationService.get(this.organizationId);\n      this.accessEvents = organization.useEvents;\n      this.accessGroups = organization.useGroups;\n      this.canResetPassword = organization.canManageUsersPassword;\n      this.orgUseResetPassword = organization.useResetPassword;\n      this.callingUserType = organization.type;\n      this.orgHasKeys = organization.hasPublicAndPrivateKeys;\n\n      // Backfill pub/priv key if necessary\n      if (this.canResetPassword && !this.orgHasKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n        const response = await this.organizationApiService.updateKeys(this.organizationId, request);\n        if (response != null) {\n          this.orgHasKeys = response.publicKey != null && response.privateKey != null;\n          await this.syncService.fullSync(true); // Replace oganizations with new data\n        } else {\n          throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n        }\n      }\n\n      await this.load();\n\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n        if (qParams.viewEvents != null) {\n          const user = this.users.filter((u) => u.id === qParams.viewEvents);\n          if (user.length > 0 && user[0].status === OrganizationUserStatusType.Confirmed) {\n            this.events(user[0]);\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const resetPasswordPolicy = await this.policyApiService.getPolicyForOrganization(\n      PolicyType.ResetPassword,\n      this.organizationId\n    );\n    this.orgResetPasswordPolicyEnabled = resetPasswordPolicy?.enabled;\n    super.load();\n  }\n\n  getUsers(): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    return this.apiService.getOrganizationUsers(this.organizationId);\n  }\n\n  deleteUser(id: string): Promise<void> {\n    return this.apiService.deleteOrganizationUser(this.organizationId, id);\n  }\n\n  revokeUser(id: string): Promise<void> {\n    return this.apiService.revokeOrganizationUser(this.organizationId, id);\n  }\n\n  restoreUser(id: string): Promise<void> {\n    return this.apiService.restoreOrganizationUser(this.organizationId, id);\n  }\n\n  reinviteUser(id: string): Promise<void> {\n    return this.apiService.postOrganizationUserReinvite(this.organizationId, id);\n  }\n\n  async confirmUser(\n    user: OrganizationUserUserDetailsResponse,\n    publicKey: Uint8Array\n  ): Promise<void> {\n    const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n    const key = await this.cryptoService.rsaEncrypt(orgKey.key, publicKey.buffer);\n    const request = new OrganizationUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postOrganizationUserConfirm(this.organizationId, user.id, request);\n  }\n\n  allowResetPassword(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    // Hierarchy check\n    let callingUserHasPermission = false;\n\n    switch (this.callingUserType) {\n      case OrganizationUserType.Owner:\n        callingUserHasPermission = true;\n        break;\n      case OrganizationUserType.Admin:\n        callingUserHasPermission = orgUser.type !== OrganizationUserType.Owner;\n        break;\n      case OrganizationUserType.Custom:\n        callingUserHasPermission =\n          orgUser.type !== OrganizationUserType.Owner &&\n          orgUser.type !== OrganizationUserType.Admin;\n        break;\n    }\n\n    // Final\n    return (\n      this.canResetPassword &&\n      callingUserHasPermission &&\n      this.orgUseResetPassword &&\n      this.orgHasKeys &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled &&\n      orgUser.status === OrganizationUserStatusType.Confirmed\n    );\n  }\n\n  showEnrolledStatus(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    return (\n      this.orgUseResetPassword &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled\n    );\n  }\n\n  async edit(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organizationId;\n        comp.organizationUserId = user != null ? user.id : null;\n        comp.usesKeyConnector = user?.usesKeyConnector;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onRevokedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onRestoredUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n\n  async groups(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserGroupsComponent,\n      this.groupsModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organizationId;\n        comp.organizationUserId = user != null ? user.id : null;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkRevoke() {\n    await this.bulkRevokeOrRestore(true);\n  }\n\n  async bulkRestore() {\n    await this.bulkRevokeOrRestore(false);\n  }\n\n  async bulkRevokeOrRestore(isRevoking: boolean) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const ref = this.modalService.open(BulkRestoreRevokeComponent, {\n      allowMultipleModals: true,\n      data: {\n        organizationId: this.organizationId,\n        users: this.getCheckedUsers(),\n        isRevoking: isRevoking,\n      },\n    });\n\n    await ref.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === OrganizationUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new OrganizationUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyOrganizationUserReinvite(\n        this.organizationId,\n        request\n      );\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async events(user: OrganizationUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.organizationId = this.organizationId;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async resetPassword(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      ResetPasswordComponent,\n      this.resetPasswordModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.email = user != null ? user.email : null;\n        comp.organizationId = this.organizationId;\n        comp.id = user != null ? user.id : null;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onPasswordReset.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n\n  protected async removeUserConfirmationDialog(user: OrganizationUserUserDetailsResponse) {\n    const warningMessage = user.usesKeyConnector\n      ? this.i18nService.t(\"removeUserConfirmationKeyConnector\")\n      : this.i18nService.t(\"removeOrgUserConfirmation\");\n\n    return this.platformUtilsService.showDialog(\n      warningMessage,\n      this.i18nService.t(\"removeUserIdAccess\", this.userNamePipe.transform(user)),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n  }\n\n  private async showBulkStatus(\n    users: OrganizationUserUserDetailsResponse[],\n    filteredUsers: OrganizationUserUserDetailsResponse[],\n    request: Promise<ListResponse<OrganizationUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nexport class PolicyRequest {\n  type: PolicyType;\n  enabled: boolean;\n  data: any;\n}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nexport abstract class BasePolicy {\n  abstract name: string;\n  abstract description: string;\n  abstract type: PolicyType;\n  abstract component: any;\n\n  display(organization: Organization) {\n    return true;\n  }\n}\n\n@Directive()\nexport abstract class BasePolicyComponent implements OnInit {\n  @Input() policyResponse: PolicyResponse;\n  @Input() policy: BasePolicy;\n\n  enabled = new UntypedFormControl(false);\n  data: UntypedFormGroup = null;\n\n  ngOnInit(): void {\n    this.enabled.setValue(this.policyResponse.enabled);\n\n    if (this.policyResponse.data != null) {\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    this.data.patchValue(this.policyResponse.data ?? {});\n  }\n\n  buildRequestData() {\n    if (this.data != null) {\n      return this.data.value;\n    }\n\n    return null;\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>) {\n    const request = new PolicyRequest();\n    request.enabled = this.enabled.value;\n    request.type = this.policy.type;\n    request.data = this.buildRequestData();\n\n    return Promise.resolve(request);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"policiesEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"policiesEditTitle\">\n          {{ \"editPolicy\" | i18n }} - {{ policy.name | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n\n      <div class=\"modal-body\">\n        <div class=\"modal-body\" *ngIf=\"loading\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div [hidden]=\"loading\">\n          <p>{{ policy.description | i18n }}</p>\n          <ng-template #policyForm></ng-template>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nimport { BasePolicy, BasePolicyComponent } from \"../policies/base-policy.component\";\n\n@Component({\n  selector: \"app-policy-edit\",\n  templateUrl: \"policy-edit.component.html\",\n})\nexport class PolicyEditComponent {\n  @Input() policy: BasePolicy;\n  @Input() organizationId: string;\n  @Input() policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n  @Output() onSavedPolicy = new EventEmitter();\n\n  @ViewChild(\"policyForm\", { read: ViewContainerRef, static: true })\n  policyFormRef: ViewContainerRef;\n\n  policyType = PolicyType;\n  loading = true;\n  enabled = false;\n  formPromise: Promise<any>;\n  defaultTypes: any[];\n  policyComponent: BasePolicyComponent;\n\n  private policyResponse: PolicyResponse;\n\n  constructor(\n    private policyApiService: PolicyApiServiceAbstraction,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef,\n    private logService: LogService\n  ) {}\n\n  async ngAfterViewInit() {\n    await this.load();\n    this.loading = false;\n\n    const factory = this.componentFactoryResolver.resolveComponentFactory(this.policy.component);\n    this.policyComponent = this.policyFormRef.createComponent(factory)\n      .instance as BasePolicyComponent;\n    this.policyComponent.policy = this.policy;\n    this.policyComponent.policyResponse = this.policyResponse;\n\n    this.cdr.detectChanges();\n  }\n\n  async load() {\n    try {\n      this.policyResponse = await this.policyApiService.getPolicy(\n        this.organizationId,\n        this.policy.type\n      );\n    } catch (e) {\n      if (e.statusCode === 404) {\n        this.policyResponse = new PolicyResponse({ Enabled: false });\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  async submit() {\n    let request: PolicyRequest;\n    try {\n      request = await this.policyComponent.buildRequest(this.policiesEnabledMap);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.policyApiService.putPolicy(\n        this.organizationId,\n        this.policy.type,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedPolicyId\", this.i18nService.t(this.policy.name))\n      );\n      this.onSavedPolicy.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"policies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n  <tbody>\n    <tr *ngFor=\"let p of policies\">\n      <td *ngIf=\"p.display(organization)\">\n        <a href=\"#\" appStopClick (click)=\"edit(p)\">{{ p.name | i18n }}</a>\n        <span bitBadge badgeType=\"success\" *ngIf=\"policiesEnabledMap.get(p.type)\">{{\n          \"on\" | i18n\n        }}</span>\n        <small class=\"text-muted d-block\">{{ p.description | i18n }}</small>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<ng-template #editTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nimport { PolicyListService } from \"../../core\";\nimport { BasePolicy } from \"../policies/base-policy.component\";\n\nimport { PolicyEditComponent } from \"./policy-edit.component\";\n\n@Component({\n  selector: \"app-org-policies\",\n  templateUrl: \"policies.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PoliciesComponent implements OnInit {\n  @ViewChild(\"editTemplate\", { read: ViewContainerRef, static: true })\n  editModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  policies: BasePolicy[];\n  organization: Organization;\n\n  private orgPolicies: PolicyResponse[];\n  private policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n\n  constructor(\n    private route: ActivatedRoute,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyListService: PolicyListService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      this.policies = this.policyListService.getPolicies();\n\n      await this.load();\n\n      // Handle policies component launch from Event message\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        if (qParams.policyId != null) {\n          const policyIdFromEvents: string = qParams.policyId;\n          for (const orgPolicy of this.orgPolicies) {\n            if (orgPolicy.id === policyIdFromEvents) {\n              for (let i = 0; i < this.policies.length; i++) {\n                if (this.policies[i].type === orgPolicy.type) {\n                  this.edit(this.policies[i]);\n                  break;\n                }\n              }\n              break;\n            }\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.policyApiService.getPolicies(this.organizationId);\n    this.orgPolicies = response.data != null && response.data.length > 0 ? response.data : [];\n    this.orgPolicies.forEach((op) => {\n      this.policiesEnabledMap.set(op.type, op.enabled);\n    });\n\n    this.loading = false;\n  }\n\n  async edit(policy: BasePolicy) {\n    const [modal] = await this.modalService.openViewRef(\n      PolicyEditComponent,\n      this.editModalRef,\n      (comp) => {\n        comp.policy = policy;\n        comp.organizationId = this.organizationId;\n        comp.policiesEnabledMap = this.policiesEnabledMap;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedPolicy.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n}\n","import { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationUpdateRequest {\n  name: string;\n  identifier: string;\n  businessName: string;\n  billingEmail: string;\n  keys: OrganizationKeysRequest;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"apiKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"apiKeyTitle\">{{ apiKeyTitle | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ apiKeyDescription | i18n }}</p>\n        <app-user-verification\n          [(ngModel)]=\"masterPassword\"\n          ngDefaultControl\n          name=\"secret\"\n          *ngIf=\"!clientSecret\"\n        >\n        </app-user-verification>\n\n        <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{ apiKeyWarning | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          title=\"{{ 'oauth2ClientCredentials' | i18n }}\"\n          icon=\"bwi bwi-key\"\n          *ngIf=\"clientSecret\"\n        >\n          <p class=\"mb-1\">\n            <strong>client_id:</strong><br />\n            <code>{{ clientId }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>client_secret:</strong><br />\n            <code>{{ clientSecret }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>scope:</strong><br />\n            <code>{{ scope }}</code>\n          </p>\n          <p class=\"mb-0\">\n            <strong>grant_type:</strong><br />\n            <code>{{ grantType }}</code>\n          </p>\n        </app-callout>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!clientSecret\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (isRotation ? \"rotateApiKey\" : \"viewApiKey\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/apiKeyResponse\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-api-key\",\n  templateUrl: \"api-key.component.html\",\n})\nexport class ApiKeyComponent {\n  keyType: string;\n  isRotation: boolean;\n  postKey: (entityId: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  entityId: string;\n  scope: string;\n  grantType: string;\n  apiKeyTitle: string;\n  apiKeyWarning: string;\n  apiKeyDescription: string;\n\n  masterPassword: Verification;\n  formPromise: Promise<ApiKeyResponse>;\n  clientId: string;\n  clientSecret: string;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.postKey(this.entityId, request));\n      const response = await this.formPromise;\n      this.clientSecret = response.apiKey;\n      this.clientId = `${this.keyType}.${this.entityId}`;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-purge-vault\",\n  templateUrl: \"purge-vault.component.html\",\n})\nexport class PurgeVaultComponent {\n  @Input() organizationId?: string = null;\n\n  masterPassword: Verification;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private router: Router,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postPurgeCiphers(request, this.organizationId));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"vaultPurged\"));\n      if (this.organizationId != null) {\n        this.router.navigate([\"organizations\", this.organizationId, \"vault\"]);\n      } else {\n        this.router.navigate([\"vault\"]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"purgeVaultTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"purgeVaultTitle\">{{ \"purgeVault\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ (organizationId ? \"purgeOrgVaultDesc\" : \"purgeVaultDesc\") | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"purgeVaultWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"purgeVault\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteOrganizationTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      *ngIf=\"loaded\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteOrganizationTitle\">{{ \"deleteOrganization\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{\n          \"deletingOrganizationIsPermanentWarning\" | i18n: organizationName\n        }}</app-callout>\n        <p id=\"organizationDeleteDescription\">\n          <ng-container\n            *ngIf=\"\n              deleteOrganizationRequestType === 'InvalidFamiliesForEnterprise';\n              else regularDelete\n            \"\n          >\n            {{ \"orgCreatedSponsorshipInvalid\" | i18n }}\n          </ng-container>\n          <ng-template #regularDelete>\n            <ng-container *ngIf=\"organizationContentSummary.totalItemCount > 0\">\n              {{ \"deletingOrganizationContentWarning\" | i18n: organizationName }}\n              <ul>\n                <li *ngFor=\"let type of organizationContentSummary.itemCountByType\">\n                  {{ type.count }} {{ type.localizationKey | i18n }}\n                </li>\n              </ul>\n              {{ \"deletingOrganizationActiveUserAccountsWarning\" | i18n }}\n            </ng-container>\n          </ng-template>\n        </p>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteOrganization\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nclass CountBasedLocalizationKey {\n  singular: string;\n  plural: string;\n\n  getKey(count: number) {\n    return count == 1 ? this.singular : this.plural;\n  }\n\n  constructor(singular: string, plural: string) {\n    this.singular = singular;\n    this.plural = plural;\n  }\n}\n\nclass OrganizationContentSummaryItem {\n  count: number;\n  get localizationKey(): string {\n    return this.localizationKeyOptions.getKey(this.count);\n  }\n  private localizationKeyOptions: CountBasedLocalizationKey;\n  constructor(count: number, localizationKeyOptions: CountBasedLocalizationKey) {\n    this.count = count;\n    this.localizationKeyOptions = localizationKeyOptions;\n  }\n}\n\nclass OrganizationContentSummary {\n  totalItemCount = 0;\n  itemCountByType: OrganizationContentSummaryItem[] = [];\n}\n\n@Component({\n  selector: \"app-delete-organization\",\n  templateUrl: \"delete-organization.component.html\",\n})\nexport class DeleteOrganizationComponent implements OnInit {\n  organizationId: string;\n  loaded: boolean;\n  deleteOrganizationRequestType: \"InvalidFamiliesForEnterprise\" | \"RegularDelete\" = \"RegularDelete\";\n  organizationName: string;\n  organizationContentSummary: OrganizationContentSummary = new OrganizationContentSummary();\n  @Output() onSuccess: EventEmitter<void> = new EventEmitter();\n\n  masterPassword: Verification;\n  formPromise: Promise<void>;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService,\n    private cipherService: CipherService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    await this.load();\n  }\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.organizationApiService.delete(this.organizationId, request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"organizationDeleted\"),\n        this.i18nService.t(\"organizationDeletedDesc\")\n      );\n      this.onSuccess.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async load() {\n    this.organizationName = (await this.organizationService.get(this.organizationId)).name;\n    this.organizationContentSummary = await this.buildOrganizationContentSummary();\n    this.loaded = true;\n  }\n\n  private async buildOrganizationContentSummary(): Promise<OrganizationContentSummary> {\n    const organizationContentSummary = new OrganizationContentSummary();\n    const organizationItems = (\n      await this.cipherService.getAllFromApiForOrganization(this.organizationId)\n    ).filter((item) => item.deletedDate == null);\n\n    if (organizationItems.length < 1) {\n      return organizationContentSummary;\n    }\n\n    organizationContentSummary.totalItemCount = organizationItems.length;\n    for (const cipherType of Utils.iterateEnum(CipherType)) {\n      const count = this.getOrganizationItemCountByType(organizationItems, cipherType);\n      if (count > 0) {\n        organizationContentSummary.itemCountByType.push(\n          new OrganizationContentSummaryItem(\n            count,\n            this.getOrganizationItemLocalizationKeysByType(CipherType[cipherType])\n          )\n        );\n      }\n    }\n\n    return organizationContentSummary;\n  }\n\n  private getOrganizationItemCountByType(items: CipherView[], type: CipherType) {\n    return items.filter((item) => item.type == type).length;\n  }\n\n  private getOrganizationItemLocalizationKeysByType(type: string): CountBasedLocalizationKey {\n    return new CountBasedLocalizationKey(`type${type}`, `type${type}Plural`);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myOrganization\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"organizationName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"org.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"org.billingEmail\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"businessName\">{{ \"businessName\" | i18n }}</label>\n        <input\n          id=\"businessName\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BusinessName\"\n          [(ngModel)]=\"org.businessName\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"identifier\">{{ \"identifier\" | i18n }}</label>\n        <input\n          id=\"identifier\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Identifier\"\n          [(ngModel)]=\"org.identifier\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <app-avatar data=\"{{ org.name }}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar>\n    </div>\n  </div>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"save\" | i18n }}\n  </bit-submit-button>\n</form>\n<ng-container *ngIf=\"canUseApi\">\n  <div class=\"secondary-header border-0 mb-0\">\n    <h1>{{ \"apiKey\" | i18n }}</h1>\n  </div>\n  <p>\n    {{ \"apiKeyDesc\" | i18n }}\n    <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\n      {{ \"learnMore\" | i18n }}\n    </a>\n  </p>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">\n    {{ \"viewApiKey\" | i18n }}\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">\n    {{ \"rotateApiKey\" | i18n }}\n  </button>\n</ng-container>\n<div class=\"secondary-header border-0 mb-0\">\n  <h1>{{ \"taxInformation\" | i18n }}</h1>\n</div>\n<p>{{ \"taxInformationDesc\" | i18n }}</p>\n<div *ngIf=\"!org || loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #formTax\n  (ngSubmit)=\"submitTaxInfo()\"\n  [appApiAction]=\"taxFormPromise\"\n  ngNativeValidate\n>\n  <app-tax-info></app-tax-info>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"formTax.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteOrganization()\">\n      {{ \"deleteOrganization\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n<ng-template #purgeOrganizationTemplate></ng-template>\n<ng-template #apiKeyTemplate></ng-template>\n<ng-template #rotateApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organizationKeysRequest\";\nimport { OrganizationUpdateRequest } from \"@bitwarden/common/models/request/organizationUpdateRequest\";\nimport { OrganizationResponse } from \"@bitwarden/common/models/response/organizationResponse\";\n\nimport { ApiKeyComponent } from \"../../settings/api-key.component\";\nimport { PurgeVaultComponent } from \"../../settings/purge-vault.component\";\nimport { TaxInfoComponent } from \"../../settings/tax-info.component\";\n\nimport { DeleteOrganizationComponent } from \"./delete-organization.component\";\n\n@Component({\n  selector: \"app-org-account\",\n  templateUrl: \"account.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccountComponent {\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n  @ViewChild(\"purgeOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"apiKeyTemplate\", { read: ViewContainerRef, static: true })\n  apiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateApiKeyModalRef: ViewContainerRef;\n  @ViewChild(TaxInfoComponent) taxInfo: TaxInfoComponent;\n\n  selfHosted = false;\n  canManageBilling = true;\n  loading = true;\n  canUseApi = false;\n  org: OrganizationResponse;\n  formPromise: Promise<boolean>;\n  taxFormPromise: Promise<unknown>;\n\n  private organizationId: string;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private router: Router,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.canManageBilling = (\n        await this.organizationService.get(this.organizationId)\n      ).canManageBilling;\n      try {\n        this.org = await this.organizationApiService.get(this.organizationId);\n        this.canUseApi = this.org.useApi;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationUpdateRequest();\n      request.name = this.org.name;\n      request.businessName = this.org.businessName;\n      request.billingEmail = this.org.billingEmail;\n      request.identifier = this.org.identifier;\n\n      // Backfill pub/priv key if necessary\n      if (!this.org.hasPublicAndPrivateKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n      }\n\n      this.formPromise = this.organizationApiService.save(this.organizationId, request).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"organizationUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async submitTaxInfo() {\n    this.taxFormPromise = this.taxInfo.submitTaxInfo();\n    await this.taxFormPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"taxInfoUpdated\"));\n  }\n\n  async deleteOrganization() {\n    await this.modalService.openViewRef(\n      DeleteOrganizationComponent,\n      this.deleteModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSuccess.subscribe(() => {\n          this.router.navigate([\"/\"]);\n        });\n      }\n    );\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef, (comp) => {\n      comp.organizationId = this.organizationId;\n    });\n  }\n\n  async viewApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.apiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.getOrCreateApiKey.bind(\n        this.organizationApiService\n      );\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyDesc\";\n    });\n  }\n\n  async rotateApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateApiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.isRotation = true;\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.rotateApiKey.bind(this.organizationApiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","export enum TransactionType {\n  Charge = 0,\n  Credit = 1,\n  PromotionalCredit = 2,\n  ReferralCredit = 3,\n  Refund = 4,\n}\n","export class VerifyBankRequest {\n  amount1: number;\n  amount2: number;\n}\n","export class BitPayInvoiceRequest {\n  userId: string;\n  organizationId: string;\n  credit: boolean;\n  amount: number;\n  returnUrl: string;\n  name: string;\n  email: string;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"addCredit\" | i18n }}</h3>\n    <div class=\"mb-4 text-lg\" *ngIf=\"showOptions\">\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-paypal\"\n          [value]=\"paymentMethodType.PayPal\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-paypal\">\n          <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n        >\n      </div>\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-bitcoin\"\n          [value]=\"paymentMethodType.BitPay\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-bitcoin\">\n          <i class=\"bwi bwi-fw bwi-bitcoin\" aria-hidden=\"true\"></i> Bitcoin</label\n        >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"row\">\n        <div class=\"col-4\">\n          <label for=\"creditAmount\">{{ \"amount\" | i18n }}</label>\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\"><span class=\"input-group-text\">$USD</span></div>\n            <input\n              id=\"creditAmount\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"CreditAmount\"\n              [(ngModel)]=\"creditAmount\"\n              (blur)=\"formatAmount()\"\n              required\n            />\n          </div>\n        </div>\n      </div>\n      <small class=\"form-text text-muted\">{{ \"creditDelayed\" | i18n }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading || ppLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n<form #ppButtonForm action=\"{{ ppButtonFormAction }}\" method=\"post\" target=\"_top\">\n  <input type=\"hidden\" name=\"cmd\" value=\"_xclick\" />\n  <input type=\"hidden\" name=\"business\" value=\"{{ ppButtonBusinessId }}\" />\n  <input type=\"hidden\" name=\"button_subtype\" value=\"services\" />\n  <input type=\"hidden\" name=\"no_note\" value=\"1\" />\n  <input type=\"hidden\" name=\"no_shipping\" value=\"1\" />\n  <input type=\"hidden\" name=\"rm\" value=\"1\" />\n  <input type=\"hidden\" name=\"return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"cancel_return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\n  <input type=\"hidden\" name=\"image_url\" value=\"https://bitwarden.com/images/paypal-banner.png\" />\n  <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF:btn_buynow_LG.gif:NonHosted\" />\n  <input type=\"hidden\" name=\"amount\" value=\"{{ creditAmount }}\" />\n  <input type=\"hidden\" name=\"custom\" value=\"{{ ppButtonCustomField }}\" />\n  <input type=\"hidden\" name=\"item_name\" value=\"Bitwarden Account Credit\" />\n  <input type=\"hidden\" name=\"item_number\" value=\"{{ subject }}\" />\n</form>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { PayPalConfig } from \"@bitwarden/common/abstractions/environment.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { BitPayInvoiceRequest } from \"@bitwarden/common/models/request/bitPayInvoiceRequest\";\n\n@Component({\n  selector: \"app-add-credit\",\n  templateUrl: \"add-credit.component.html\",\n})\nexport class AddCreditComponent implements OnInit {\n  @Input() creditAmount: string;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.PayPal;\n  @Input() organizationId: string;\n  @Output() onAdded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(\"ppButtonForm\", { read: ElementRef, static: true }) ppButtonFormRef: ElementRef;\n\n  paymentMethodType = PaymentMethodType;\n  ppButtonFormAction: string;\n  ppButtonBusinessId: string;\n  ppButtonCustomField: string;\n  ppLoading = false;\n  subject: string;\n  returnUrl: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private name: string;\n  private email: string;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    const payPalConfig = process.env.PAYPAL_CONFIG as PayPalConfig;\n    this.ppButtonFormAction = payPalConfig.buttonAction;\n    this.ppButtonBusinessId = payPalConfig.businessId;\n  }\n\n  async ngOnInit() {\n    if (this.organizationId != null) {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"20.00\";\n      }\n      this.ppButtonCustomField = \"organization_id:\" + this.organizationId;\n      const org = await this.organizationService.get(this.organizationId);\n      if (org != null) {\n        this.subject = org.name;\n        this.name = org.name;\n      }\n    } else {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"10.00\";\n      }\n      this.userId = await this.stateService.getUserId();\n      this.subject = await this.stateService.getEmail();\n      this.email = this.subject;\n      this.ppButtonCustomField = \"user_id:\" + this.userId;\n    }\n    this.ppButtonCustomField += \",account_credit:1\";\n    this.returnUrl = window.location.href;\n  }\n\n  async submit() {\n    if (this.creditAmount == null || this.creditAmount === \"\") {\n      return;\n    }\n\n    if (this.method === PaymentMethodType.PayPal) {\n      this.ppButtonFormRef.nativeElement.submit();\n      this.ppLoading = true;\n      return;\n    }\n    if (this.method === PaymentMethodType.BitPay) {\n      try {\n        const req = new BitPayInvoiceRequest();\n        req.email = this.email;\n        req.name = this.name;\n        req.credit = true;\n        req.amount = this.creditAmountNumber;\n        req.organizationId = this.organizationId;\n        req.userId = this.userId;\n        req.returnUrl = this.returnUrl;\n        this.formPromise = this.apiService.postBitPayInvoice(req);\n        const bitPayUrl: string = await this.formPromise;\n        this.platformUtilsService.launchUri(bitPayUrl);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      return;\n    }\n    try {\n      this.onAdded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  formatAmount() {\n    try {\n      if (this.creditAmount != null && this.creditAmount !== \"\") {\n        const floatAmount = Math.abs(parseFloat(this.creditAmount));\n        if (floatAmount > 0) {\n          this.creditAmount = parseFloat((Math.round(floatAmount * 100) / 100).toString())\n            .toFixed(2)\n            .toString();\n          return;\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.creditAmount = \"\";\n  }\n\n  get creditAmountNumber(): number {\n    if (this.creditAmount != null && this.creditAmount !== \"\") {\n      try {\n        return parseFloat(this.creditAmount);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return null;\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../request/organizationTaxInfoUpdateRequest\";\n\nexport class PaymentRequest extends OrganizationTaxInfoUpdateRequest {\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n}\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PaymentRequest } from \"@bitwarden/common/models/request/paymentRequest\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-adjust-payment\",\n  templateUrl: \"adjust-payment.component.html\",\n})\nexport class AdjustPaymentComponent {\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent, { static: true }) taxInfoComponent: TaxInfoComponent;\n\n  @Input() currentType?: PaymentMethodType;\n  @Input() organizationId: string;\n  @Output() onAdjusted = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  paymentMethodType = PaymentMethodType;\n  formPromise: Promise<void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    try {\n      const request = new PaymentRequest();\n      this.formPromise = this.paymentComponent.createPaymentToken().then((result) => {\n        request.paymentToken = result[0];\n        request.paymentMethodType = result[1];\n        request.postalCode = this.taxInfoComponent.taxInfo.postalCode;\n        request.country = this.taxInfoComponent.taxInfo.country;\n        if (this.organizationId == null) {\n          return this.apiService.postAccountPayment(request);\n        } else {\n          request.taxId = this.taxInfoComponent.taxInfo.taxId;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          request.line1 = this.taxInfoComponent.taxInfo.line1;\n          request.line2 = this.taxInfoComponent.taxInfo.line2;\n          request.city = this.taxInfoComponent.taxInfo.city;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          return this.organizationApiService.updatePayment(this.organizationId, request);\n        }\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedPaymentMethod\")\n      );\n      this.onAdjusted.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  changeCountry() {\n    if (this.taxInfoComponent.taxInfo.country === \"US\") {\n      this.paymentComponent.hideBank = !this.organizationId;\n    } else {\n      this.paymentComponent.hideBank = true;\n      if (this.paymentComponent.method === PaymentMethodType.BankAccount) {\n        this.paymentComponent.method = PaymentMethodType.Card;\n        this.paymentComponent.changeMethod();\n      }\n    }\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">\n      {{ (currentType != null ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n    </h3>\n    <app-payment [hideBank]=\"!organizationId\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changeCountry()\"></app-tax-info>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","<div class=\"page-header d-flex\">\n  <h1>\n    {{ \"billing\" | i18n }}\n  </h1>\n  <button\n    (click)=\"load()\"\n    class=\"btn btn-sm btn-outline-primary ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ (isCreditBalance ? \"accountCredit\" : \"accountBalance\") | i18n }}</h2>\n  <p class=\"text-lg\">\n    <strong>{{ creditOrBalance | currency: \"$\" }}</strong>\n  </p>\n  <p>{{ \"creditAppliedDesc\" | i18n }}</p>\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-secondary\"\n    (click)=\"addCredit()\"\n    *ngIf=\"!showAddCredit\"\n  >\n    {{ \"addCredit\" | i18n }}\n  </button>\n  <app-add-credit\n    [organizationId]=\"organizationId\"\n    (onAdded)=\"closeAddCredit(true)\"\n    (onCanceled)=\"closeAddCredit(false)\"\n    *ngIf=\"showAddCredit\"\n  >\n  </app-add-credit>\n  <h2 class=\"spaced-header\">{{ \"paymentMethod\" | i18n }}</h2>\n  <p *ngIf=\"!paymentSource\">{{ \"noPaymentMethod\" | i18n }}</p>\n  <ng-container *ngIf=\"paymentSource\">\n    <app-callout\n      type=\"warning\"\n      title=\"{{ 'verifyBankAccount' | i18n }}\"\n      *ngIf=\"\n        paymentSource.type === paymentMethodType.BankAccount && paymentSource.needsVerification\n      \"\n    >\n      <p>{{ \"verifyBankAccountDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}</p>\n      <form\n        #verifyForm\n        class=\"form-inline\"\n        (ngSubmit)=\"verifyBank()\"\n        [appApiAction]=\"verifyBankPromise\"\n        ngNativeValidate\n      >\n        <label class=\"sr-only\" for=\"verifyAmount1\">{{ \"amount\" | i18n: \"1\" }}</label>\n        <div class=\"input-group mr-2\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">$0.</div>\n          </div>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"verifyAmount1\"\n            placeholder=\"xx\"\n            name=\"Amount1\"\n            [(ngModel)]=\"verifyAmount1\"\n            min=\"1\"\n            max=\"99\"\n            step=\"1\"\n            required\n          />\n        </div>\n        <label class=\"sr-only\" for=\"verifyAmount2\">{{ \"amount\" | i18n: \"2\" }}</label>\n        <div class=\"input-group mr-2\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">$0.</div>\n          </div>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"verifyAmount2\"\n            placeholder=\"xx\"\n            name=\"Amount2\"\n            [(ngModel)]=\"verifyAmount2\"\n            min=\"1\"\n            max=\"99\"\n            step=\"1\"\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          class=\"btn btn-outline-primary btn-submit\"\n          [disabled]=\"verifyForm.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"verifyBankAccount\" | i18n }}</span>\n        </button>\n      </form>\n    </app-callout>\n    <p>\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-credit-card': paymentSource.type === paymentMethodType.Card,\n          'bwi-bank': paymentSource.type === paymentMethodType.BankAccount,\n          'bwi-money': paymentSource.type === paymentMethodType.Check,\n          'bwi-paypal text-primary': paymentSource.type === paymentMethodType.PayPal,\n          'bwi-apple text-muted': paymentSource.type === paymentMethodType.AppleInApp,\n          'bwi-google text-muted': paymentSource.type === paymentMethodType.GoogleInApp\n        }\"\n      ></i>\n      <span *ngIf=\"paymentSourceInApp\">{{ \"inAppPurchase\" | i18n }}</span>\n      {{ paymentSource.description }}\n    </p>\n  </ng-container>\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-secondary\"\n    (click)=\"changePayment()\"\n    *ngIf=\"!showAdjustPayment\"\n  >\n    {{ (paymentSource ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n  </button>\n  <app-adjust-payment\n    [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n    [organizationId]=\"organizationId\"\n    (onAdjusted)=\"closePayment(true)\"\n    (onCanceled)=\"closePayment(false)\"\n    *ngIf=\"showAdjustPayment\"\n  >\n  </app-adjust-payment>\n  <h2 class=\"spaced-header\">{{ \"invoices\" | i18n }}</h2>\n  <p *ngIf=\"!invoices || !invoices.length\">{{ \"noInvoices\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n    <tbody>\n      <tr *ngFor=\"let i of invoices\">\n        <td>{{ i.date | date: \"mediumDate\" }}</td>\n        <td>\n          <a\n            href=\"{{ i.pdfUrl }}\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            class=\"mr-2\"\n            appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n          >\n            <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n          ></a>\n          <a href=\"{{ i.url }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ 'viewInvoice' | i18n }}\">\n            {{ \"invoiceNumber\" | i18n: i.number }}</a\n          >\n        </td>\n        <td>{{ i.amount | currency: \"$\" }}</td>\n        <td>\n          <span *ngIf=\"i.paid\">\n            <i class=\"bwi bwi-check text-success\" aria-hidden=\"true\"></i>\n            {{ \"paid\" | i18n }}\n          </span>\n          <span *ngIf=\"!i.paid\">\n            <i class=\"bwi bwi-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n            {{ \"unpaid\" | i18n }}\n          </span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <h2 class=\"spaced-header\">{{ \"transactions\" | i18n }}</h2>\n  <p *ngIf=\"!transactions || !transactions.length\">{{ \"noTransactions\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n    <tbody>\n      <tr *ngFor=\"let t of transactions\">\n        <td>{{ t.createdDate | date: \"mediumDate\" }}</td>\n        <td>\n          <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n            {{ \"chargeNoun\" | i18n }}\n          </span>\n          <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n        </td>\n        <td>\n          <i\n            class=\"bwi bwi-fw\"\n            *ngIf=\"t.paymentMethodType\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-credit-card': t.paymentMethodType === paymentMethodType.Card,\n              'bwi-bank':\n                t.paymentMethodType === paymentMethodType.BankAccount ||\n                t.paymentMethodType === paymentMethodType.WireTransfer,\n              'bwi-bitcoin text-warning': t.paymentMethodType === paymentMethodType.BitPay,\n              'bwi-paypal text-primary': t.paymentMethodType === paymentMethodType.PayPal\n            }\"\n          ></i>\n          {{ t.details }}\n        </td>\n        <td\n          [ngClass]=\"{ 'text-strike': t.refunded }\"\n          title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n        >\n          {{ t.amount | currency: \"$\" }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <small class=\"text-muted\">* {{ \"chargesStatement\" | i18n: \"BITWARDEN\" }}</small>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { TransactionType } from \"@bitwarden/common/enums/transactionType\";\nimport { VerifyBankRequest } from \"@bitwarden/common/models/request/verifyBankRequest\";\nimport { BillingResponse } from \"@bitwarden/common/models/response/billingResponse\";\n\n@Component({\n  selector: \"app-org-billing\",\n  templateUrl: \"./organization-billing.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class OrganizationBillingComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  showAdjustPayment = false;\n  showAddCredit = false;\n  billing: BillingResponse;\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n  organizationId: string;\n  verifyAmount1: number;\n  verifyAmount2: number;\n\n  verifyBankPromise: Promise<void>;\n\n  // TODO - Make sure to properly split out the billing/invoice and payment method/account during org admin refresh\n\n  constructor(\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    if (this.organizationId != null) {\n      this.billing = await this.organizationApiService.getBilling(this.organizationId);\n    }\n    this.loading = false;\n  }\n\n  async verifyBank() {\n    if (this.loading) {\n      return;\n    }\n\n    try {\n      const request = new VerifyBankRequest();\n      request.amount1 = this.verifyAmount1;\n      request.amount2 = this.verifyAmount2;\n      this.verifyBankPromise = this.organizationApiService.verifyBank(this.organizationId, request);\n      await this.verifyBankPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"verifiedBankAccount\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  addCredit() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"addCredit\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAddCredit = true;\n  }\n\n  closeAddCredit(load: boolean) {\n    this.showAddCredit = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  changePayment() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"changePaymentMethod\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAdjustPayment = true;\n  }\n\n  closePayment(load: boolean) {\n    this.showAdjustPayment = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get isCreditBalance() {\n    return this.billing == null || this.billing.balance <= 0;\n  }\n\n  get creditOrBalance() {\n    return Math.abs(this.billing != null ? this.billing.balance : 0);\n  }\n\n  get paymentSource() {\n    return this.billing != null ? this.billing.paymentSource : null;\n  }\n\n  get paymentSourceInApp() {\n    return (\n      this.paymentSource != null &&\n      (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n        this.paymentSource.type === PaymentMethodType.GoogleInApp)\n    );\n  }\n\n  get invoices() {\n    return this.billing != null ? this.billing.invoices : null;\n  }\n\n  get transactions() {\n    return this.billing != null ? this.billing.transactions : null;\n  }\n}\n","export enum OrganizationApiKeyType {\n  Default = 0,\n  BillingSync = 1,\n  Scim = 2,\n}\n","export enum OrganizationConnectionType {\n  CloudBillingSync = 1,\n  Scim = 2,\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class BillingSyncConfigApi extends BaseResponse {\n  billingSyncKey: string;\n\n  constructor(data: any) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.billingSyncKey = this.getResponseProperty(\"BillingSyncKey\");\n  }\n}\n","export class BillingSyncConfigRequest {\n  constructor(private billingSyncKey: string) {}\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\n\nimport { BillingSyncConfigRequest } from \"./billingSyncConfigRequest\";\nimport { ScimConfigRequest } from \"./scimConfigRequest\";\n\n/**API request config types for OrganizationConnectionRequest */\nexport type OrganizationConnectionRequestConfigs = BillingSyncConfigRequest | ScimConfigRequest;\n\nexport class OrganizationConnectionRequest {\n  constructor(\n    public organizationId: string,\n    public type: OrganizationConnectionType,\n    public enabled: boolean,\n    public config: OrganizationConnectionRequestConfigs\n  ) {}\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"@bitwarden/common/models/api/billingSyncConfigApi\";\nimport { BillingSyncConfigRequest } from \"@bitwarden/common/models/request/billingSyncConfigRequest\";\nimport { OrganizationConnectionRequest } from \"@bitwarden/common/models/request/organizationConnectionRequest\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/models/response/organizationConnectionResponse\";\n\n@Component({\n  selector: \"app-billing-sync-key\",\n  templateUrl: \"billing-sync-key.component.html\",\n})\nexport class BillingSyncKeyComponent {\n  entityId: string;\n  existingConnectionId: string;\n  billingSyncKey: string;\n  setParentConnection: (connection: OrganizationConnectionResponse<BillingSyncConfigApi>) => void;\n\n  formPromise: Promise<OrganizationConnectionResponse<BillingSyncConfigApi>> | Promise<void>;\n\n  constructor(private apiService: ApiService, private logService: LogService) {}\n\n  async submit() {\n    try {\n      const request = new OrganizationConnectionRequest(\n        this.entityId,\n        OrganizationConnectionType.CloudBillingSync,\n        true,\n        new BillingSyncConfigRequest(this.billingSyncKey)\n      );\n      if (this.existingConnectionId == null) {\n        this.formPromise = this.apiService.createOrganizationConnection(\n          request,\n          BillingSyncConfigApi\n        );\n      } else {\n        this.formPromise = this.apiService.updateOrganizationConnection(\n          request,\n          BillingSyncConfigApi,\n          this.existingConnectionId\n        );\n      }\n      const response = (await this\n        .formPromise) as OrganizationConnectionResponse<BillingSyncConfigApi>;\n      this.existingConnectionId = response?.id;\n      this.billingSyncKey = response?.config?.billingSyncKey;\n      this.setParentConnection(response);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async deleteConnection() {\n    this.formPromise = this.apiService.deleteOrganizationConnection(this.existingConnectionId);\n    await this.formPromise;\n    this.setParentConnection(null);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"billingSyncTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"billingSyncTitle\">{{ \"manageBillingSync\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"billingSyncKeyDesc\" | i18n }}</p>\n        <div class=\"form-group\">\n          <label for=\"billingSyncKey\"\n            >{{ \"billingSyncKey\" | i18n }} <small>(</small><small>{{ \"required\" | i18n }}</small\n            ><small>)</small></label\n          >\n          <input\n            id=\"billingSyncKey\"\n            type=\"input\"\n            name=\"billingSyncKey\"\n            class=\"form-control\"\n            [(ngModel)]=\"billingSyncKey\"\n            required\n            appAutofocus\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"deleteConnection()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            [disabled]=\"form.loading\"\n          >\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"form.loading\" aria-hidden=\"true\"></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class OrganizationApiKeyRequest extends SecretVerificationRequest {\n  type: OrganizationApiKeyType = OrganizationApiKeyType.Default;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"billingSyncApiKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"billingSyncApiKeyTitle\">\n          {{ (hasBillingToken ? \"viewBillingSyncToken\" : \"generateBillingSyncToken\") | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-user-verification\n          [(ngModel)]=\"masterPassword\"\n          ngDefaultControl\n          name=\"secret\"\n          *ngIf=\"!clientSecret\"\n        >\n        </app-user-verification>\n        <ng-container *ngIf=\"clientSecret && showRotateScreen\">\n          <p>{{ \"rotateBillingSyncTokenTitle\" | i18n }}</p>\n          <app-callout type=\"warning\">\n            {{ \"rotateBillingSyncTokenWarning\" | i18n }}\n          </app-callout>\n        </ng-container>\n\n        <div *ngIf=\"clientSecret && !showRotateScreen\">\n          <p>{{ \"copyPasteBillingSync\" | i18n }}</p>\n          <label for=\"clientSecret\">Billing Sync Key</label>\n          <div class=\"input-group\">\n            <input\n              id=\"clientSecret\"\n              class=\"form-control text-monospace\"\n              type=\"text\"\n              [(ngModel)]=\"clientSecret\"\n              name=\"clientSecret\"\n              disabled\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                (click)=\"copy()\"\n                [appA11yTitle]=\"'copy' | i18n\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"small text-muted mt-2\" *ngIf=\"showLastSyncText\">\n            <b class=\"font-weight-semibold\">{{ \"lastSync\" | i18n }}:</b>\n            {{ lastSyncDate | date: \"medium\" }}\n          </div>\n          <div class=\"small text-danger mt-2\" *ngIf=\"showAwaitingSyncText\">\n            <i class=\"bwi bwi-error\"></i>\n            {{\n              (daysBetween === 1 ? \"awaitingSyncSingular\" : \"awaitingSyncPlural\")\n                | i18n: daysBetween\n            }}\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!clientSecret || showRotateScreen\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            *ngIf=\"form.loading\"\n          ></i>\n          <span>\n            {{ submitButtonText }}\n          </span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary\"\n          data-dismiss=\"modal\"\n          *ngIf=\"!showRotateScreen\"\n        >\n          {{ \"close\" | i18n }}\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary\"\n          *ngIf=\"showRotateScreen\"\n          (click)=\"cancelRotate()\"\n        >\n          {{ \"cancel\" | i18n }}\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary\"\n          *ngIf=\"clientSecret && !showRotateScreen\"\n          (click)=\"rotateToken()\"\n        >\n          {{ \"rotateToken\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/enums/organizationApiKeyType\";\nimport { OrganizationApiKeyRequest } from \"@bitwarden/common/models/request/organizationApiKeyRequest\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/apiKeyResponse\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-billing-sync-api-key\",\n  templateUrl: \"billing-sync-api-key.component.html\",\n})\nexport class BillingSyncApiKeyComponent {\n  organizationId: string;\n  hasBillingToken: boolean;\n\n  showRotateScreen: boolean;\n  masterPassword: Verification;\n  formPromise: Promise<ApiKeyResponse>;\n  clientSecret?: string;\n  keyRevisionDate?: Date;\n  lastSyncDate?: Date = null;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  copy() {\n    this.platformUtilsService.copyToClipboard(this.clientSecret);\n  }\n\n  async submit() {\n    if (this.showRotateScreen) {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword, OrganizationApiKeyRequest)\n        .then((request) => {\n          request.type = OrganizationApiKeyType.BillingSync;\n          return this.organizationApiService.rotateApiKey(this.organizationId, request);\n        });\n      const response = await this.formPromise;\n      await this.load(response);\n      this.showRotateScreen = false;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"billingSyncApiKeyRotated\")\n      );\n    } else {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword, OrganizationApiKeyRequest)\n        .then((request) => {\n          request.type = OrganizationApiKeyType.BillingSync;\n          return this.organizationApiService.getOrCreateApiKey(this.organizationId, request);\n        });\n      const response = await this.formPromise;\n      await this.load(response);\n    }\n  }\n\n  async load(response: ApiKeyResponse) {\n    this.clientSecret = response.apiKey;\n    this.keyRevisionDate = response.revisionDate;\n    this.hasBillingToken = true;\n    const syncStatus = await this.apiService.getSponsorshipSyncStatus(this.organizationId);\n    this.lastSyncDate = syncStatus.lastSyncDate;\n  }\n\n  cancelRotate() {\n    this.showRotateScreen = false;\n  }\n\n  rotateToken() {\n    this.showRotateScreen = true;\n  }\n\n  private dayDiff(date1: Date, date2: Date): number {\n    const diffTime = Math.abs(date2.getTime() - date1.getTime());\n    return Math.round(diffTime / (1000 * 60 * 60 * 24));\n  }\n\n  get submitButtonText(): string {\n    if (this.showRotateScreen) {\n      return this.i18nService.t(\"rotateToken\");\n    }\n\n    return this.i18nService.t(this.hasBillingToken ? \"continue\" : \"generateToken\");\n  }\n\n  get showLastSyncText(): boolean {\n    // If the keyRevisionDate is later than the lastSyncDate we need to show\n    // a warning that they need to put the billing sync key in their self hosted install\n    return this.lastSyncDate && this.lastSyncDate > this.keyRevisionDate;\n  }\n\n  get showAwaitingSyncText(): boolean {\n    return this.lastSyncDate && this.lastSyncDate <= this.keyRevisionDate;\n  }\n\n  get daysBetween(): number {\n    return this.dayDiff(this.keyRevisionDate, new Date());\n  }\n}\n","export class StorageRequest {\n  storageGbAdjustment: number;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ (add ? \"addStorage\" : \"removeStorage\") | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"storageAdjustment\">{{\n          (add ? \"gbStorageAdd\" : \"gbStorageRemove\") | i18n\n        }}</label>\n        <input\n          id=\"storageAdjustment\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"StroageGbAdjustment\"\n          [(ngModel)]=\"storageAdjustment\"\n          min=\"0\"\n          max=\"99\"\n          step=\"1\"\n          required\n        />\n      </div>\n    </div>\n    <div *ngIf=\"add\" class=\"mb-3\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ storageAdjustment || 0 }} GB &times;\n      {{ storageGbPrice | currency: \"$\" }} = {{ adjustedStorageTotal | currency: \"$\" }} /{{\n        interval | i18n\n      }}\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n    <small class=\"d-block text-muted mt-3\">\n      {{ (add ? \"storageAddNote\" : \"storageRemoveNote\") | i18n }}\n    </small>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StorageRequest } from \"@bitwarden/common/models/request/storageRequest\";\nimport { PaymentResponse } from \"@bitwarden/common/models/response/paymentResponse\";\n\nimport { PaymentComponent } from \"./payment.component\";\n\n@Component({\n  selector: \"app-adjust-storage\",\n  templateUrl: \"adjust-storage.component.html\",\n})\nexport class AdjustStorageComponent {\n  @Input() storageGbPrice = 0;\n  @Input() add = true;\n  @Input() organizationId: string;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter<number>();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n  storageAdjustment = 0;\n  formPromise: Promise<PaymentResponse | void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    try {\n      const request = new StorageRequest();\n      request.storageGbAdjustment = this.storageAdjustment;\n      if (!this.add) {\n        request.storageGbAdjustment *= -1;\n      }\n\n      let paymentFailed = false;\n      const action = async () => {\n        let response: Promise<PaymentResponse>;\n        if (this.organizationId == null) {\n          response = this.formPromise = this.apiService.postAccountStorage(request);\n        } else {\n          response = this.formPromise = this.organizationApiService.updateStorage(\n            this.organizationId,\n            request\n          );\n        }\n        const result = await response;\n        if (result != null && result.paymentIntentClientSecret != null) {\n          try {\n            await this.paymentComponent.handleStripeCardPayment(\n              result.paymentIntentClientSecret,\n              null\n            );\n          } catch {\n            paymentFailed = true;\n          }\n        }\n      };\n      this.formPromise = action();\n      await this.formPromise;\n      this.onAdjusted.emit(this.storageAdjustment);\n      if (paymentFailed) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          null,\n          this.i18nService.t(\"couldNotChargeCardPayInvoice\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"../billing\"], { relativeTo: this.activatedRoute });\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"adjustedStorage\", request.storageGbAdjustment.toString())\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  get adjustedStorageTotal(): number {\n    return this.storageGbPrice * this.storageAdjustment;\n  }\n}\n","export class OrganizationSubscriptionUpdateRequest {\n  constructor(public seatAdjustment: number, public maxAutoscaleSeats?: number) {}\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationSubscriptionUpdateRequest } from \"@bitwarden/common/models/request/organizationSubscriptionUpdateRequest\";\n\n@Component({\n  selector: \"app-adjust-subscription\",\n  templateUrl: \"adjust-subscription.component.html\",\n})\nexport class AdjustSubscription {\n  @Input() organizationId: string;\n  @Input() maxAutoscaleSeats: number;\n  @Input() currentSeatCount: number;\n  @Input() seatPrice = 0;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter();\n\n  formPromise: Promise<void>;\n  limitSubscription: boolean;\n  newSeatCount: number;\n  newMaxSeats: number;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  ngOnInit() {\n    this.limitSubscription = this.maxAutoscaleSeats != null;\n    this.newSeatCount = this.currentSeatCount;\n    this.newMaxSeats = this.maxAutoscaleSeats;\n  }\n\n  async submit() {\n    try {\n      const seatAdjustment = this.newSeatCount - this.currentSeatCount;\n      const request = new OrganizationSubscriptionUpdateRequest(seatAdjustment, this.newMaxSeats);\n      this.formPromise = this.organizationApiService.updateSubscription(\n        this.organizationId,\n        request\n      );\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"subscriptionUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.onAdjusted.emit();\n  }\n\n  limitSubscriptionChanged() {\n    if (!this.limitSubscription) {\n      this.newMaxSeats = null;\n    }\n  }\n\n  get adjustedSeatTotal(): number {\n    return this.newSeatCount * this.seatPrice;\n  }\n\n  get maxSeatTotal(): number {\n    return this.newMaxSeats * this.seatPrice;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"newSeatCount\">{{ \"subscriptionSeats\" | i18n }}</label>\n        <input\n          id=\"newSeatCount\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"NewSeatCount\"\n          [(ngModel)]=\"newSeatCount\"\n          min=\"0\"\n          step=\"1\"\n          required\n        />\n        <small class=\"d-block text-muted mb-4\">\n          <strong>{{ \"total\" | i18n }}:</strong> {{ newSeatCount || 0 }} &times;\n          {{ seatPrice | currency: \"$\" }} = {{ adjustedSeatTotal | currency: \"$\" }} /\n          {{ interval | i18n }}\n        </small>\n      </div>\n    </div>\n    <div class=\"row mb-4\">\n      <div class=\"form-group col-sm\">\n        <div class=\"form-check\">\n          <input\n            id=\"limitSubscription\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"LimitSubscription\"\n            [(ngModel)]=\"limitSubscription\"\n            (change)=\"limitSubscriptionChanged()\"\n          />\n          <label for=\"limitSubscription\">{{ \"limitSubscription\" | i18n }}</label>\n        </div>\n        <small class=\"d-block text-muted\">{{ \"limitSubscriptionDesc\" | i18n }}</small>\n      </div>\n    </div>\n    <div class=\"row mb-4\" [hidden]=\"!limitSubscription\">\n      <div class=\"form-group col-sm\">\n        <label for=\"maxAutoscaleSeats\">{{ \"maxSeatLimit\" | i18n }}</label>\n        <input\n          id=\"maxAutoscaleSeats\"\n          class=\"form-control col-6\"\n          type=\"number\"\n          name=\"MaxAutoscaleSeats\"\n          [(ngModel)]=\"newMaxSeats\"\n          [min]=\"newSeatCount == null ? 1 : newSeatCount\"\n          step=\"1\"\n          [required]=\"limitSubscription\"\n        />\n        <small class=\"d-block text-muted\">\n          <strong>{{ \"maxSeatCost\" | i18n }}:</strong> {{ newMaxSeats || 0 }} &times;\n          {{ seatPrice | currency: \"$\" }} = {{ maxSeatTotal | currency: \"$\" }} /\n          {{ interval | i18n }}\n        </small>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"save\" | i18n }}</span>\n    </button>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\n@Component({\n  selector: \"app-change-plan\",\n  templateUrl: \"change-plan.component.html\",\n})\nexport class ChangePlanComponent {\n  @Input() organizationId: string;\n  @Output() onChanged = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<any>;\n  defaultUpgradePlan: PlanType = PlanType.FamiliesAnnually;\n  defaultUpgradeProduct: ProductType = ProductType.Families;\n\n  constructor(private logService: LogService) {}\n\n  async submit() {\n    try {\n      this.onChanged.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<div class=\"card card-org-plans\">\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h2 class=\"card-body-header\">{{ \"changeBillingPlan\" | i18n }}</h2>\n    <p class=\"mb-0\">{{ \"changeBillingPlanUpgrade\" | i18n }}</p>\n    <app-organization-plans\n      [showFree]=\"false\"\n      [showCancel]=\"true\"\n      [plan]=\"defaultUpgradePlan\"\n      [product]=\"defaultUpgradeProduct\"\n      [organizationId]=\"organizationId\"\n      (onCanceled)=\"cancel()\"\n    >\n    </app-organization-plans>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\n\n@Component({\n  selector: \"app-download-license\",\n  templateUrl: \"download-license.component.html\",\n})\nexport class DownloadLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onDownloaded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  installationId: string;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private fileDownloadService: FileDownloadService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    if (this.installationId == null || this.installationId === \"\") {\n      return;\n    }\n\n    try {\n      this.formPromise = this.organizationApiService.getLicense(\n        this.organizationId,\n        this.installationId\n      );\n      const license = await this.formPromise;\n      const licenseString = JSON.stringify(license, null, 2);\n      this.fileDownloadService.download({\n        fileName: \"bitwarden_organization_license.json\",\n        blobData: licenseString,\n      });\n      this.onDownloaded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"downloadLicense\" | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <div class=\"d-flex\">\n          <label for=\"installationId\">{{ \"enterInstallationId\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/licensing-on-premise/#organization-account-sharing\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"installationId\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"InstallationId\"\n          [(ngModel)]=\"installationId\"\n          required\n        />\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\n\n// Component is used so that the SVG can embed CSS color variables\n@Component({\n  selector: \"app-image-org-subscription-hidden\",\n  templateUrl: \"image-subscription-hidden.component.svg\",\n})\nexport class ImageSubscriptionHiddenComponent {}\n","<svg width=\"216\" height=\"231\" viewBox=\"0 0 216 231\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M133.356 85.6618C133.136 85.43 132.871 85.2457 132.577 85.1198C132.283 84.9939 131.968 84.93 131.648 84.9318H87.8482C87.5289 84.93 87.2113 84.9939 86.9175 85.1198C86.6237 85.2457 86.359 85.43 86.14 85.6618C85.9083 85.8808 85.7239 86.1473 85.598 86.4411C85.4721 86.7349 85.4082 87.0506 85.41 87.37V116.57C85.4192 118.793 85.8499 120.994 86.6802 123.056C87.4705 125.091 88.5326 127.011 89.8375 128.761C91.1789 130.515 92.6808 132.137 94.3233 133.612C95.8472 135.01 97.4532 136.318 99.1304 137.528C100.59 138.565 102.123 139.547 103.729 140.474C105.335 141.401 106.469 142.027 107.131 142.354C107.799 142.682 108.339 142.941 108.741 143.113C109.055 143.264 109.4 143.339 109.748 143.332C110.091 143.337 110.431 143.257 110.737 143.102C111.146 142.923 111.679 142.671 112.354 142.343C113.03 142.014 114.179 141.386 115.756 140.463C117.333 139.539 118.884 138.554 120.355 137.517C122.034 136.306 123.642 134.999 125.169 133.601C126.814 132.128 128.316 130.504 129.655 128.75C130.958 126.998 132.021 125.08 132.813 123.045C133.645 120.983 134.075 118.782 134.083 116.559V87.3591C134.085 87.0415 134.021 86.7276 133.895 86.4356C133.769 86.1436 133.586 85.8808 133.356 85.6618ZM127.71 116.836C127.71 127.421 109.748 136.514 109.748 136.514V91.1879H127.71V116.836Z\" fill=\"var(--color-secondary-700)\"/>\n  <path d=\"M24.6216 122.3C24.7144 123.4 25.6819 124.217 26.7825 124.125C27.8832 124.032 28.7002 123.064 28.6074 121.964L24.6216 122.3ZM151.501 45.7445C152.57 45.4679 153.213 44.3768 152.936 43.3074L148.429 25.8809C148.152 24.8115 147.061 24.1688 145.992 24.4454C144.922 24.722 144.28 25.8131 144.556 26.8825L148.563 42.3728L133.073 46.3793C132.003 46.6559 131.361 47.747 131.637 48.8164C131.914 49.8858 133.005 50.5285 134.074 50.2519L151.501 45.7445ZM28.6074 121.964C26.6788 99.0874 34.4658 75.5543 51.9661 58.054L49.1377 55.2256C30.7695 73.5938 22.5982 98.2999 24.6216 122.3L28.6074 121.964ZM51.9661 58.054C78.5404 31.4797 119.036 27.3026 149.985 45.5315L152.015 42.0849C119.534 22.9534 77.0327 27.3306 49.1377 55.2256L51.9661 58.054Z\" fill=\"var(--color-secondary-700)\"/>\n  <path d=\"M67.4747 185.062C66.4089 185.352 65.7801 186.451 66.0701 187.517L70.797 204.885C71.0871 205.951 72.1862 206.58 73.252 206.29C74.3179 205.999 74.9467 204.9 74.6567 203.834L70.455 188.396L85.8934 184.194C86.9592 183.904 87.5881 182.805 87.298 181.739C87.008 180.674 85.9088 180.045 84.843 180.335L67.4747 185.062ZM192.478 100.283C192.286 99.1952 191.248 98.4697 190.16 98.6625C189.072 98.8552 188.347 99.8931 188.54 100.981L192.478 100.283ZM166.138 172.225C139.813 198.55 99.8271 202.897 68.9932 185.255L67.0068 188.727C99.3669 207.242 141.333 202.687 168.966 175.054L166.138 172.225ZM188.54 100.981C192.985 126.07 185.516 152.847 166.138 172.225L168.966 175.054C189.307 154.713 197.142 126.603 192.478 100.283L188.54 100.981Z\" fill=\"var(--color-secondary-700)\"/>\n  <path d=\"M37.726 108.132C39.283 92.1931 46.1655 76.6765 58.3734 64.4686C75.2893 47.5527 98.5583 40.8618 120.5 44.396\" stroke=\"var(--color-secondary-700)\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n  <path d=\"M180.595 119.132C179.653 136.119 172.693 152.834 159.717 165.811C144.44 181.088 123.982 188.025 104 186.623\" stroke=\"var(--color-secondary-700)\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n  <rect x=\"153.5\" y=\"56.1317\" width=\"49\" height=\"34\" rx=\"2.5\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <path d=\"M153.5 63.6317V63.6317C153.5 66.9454 156.186 69.6317 159.5 69.6317H172.509M202.5 63.6317V63.6317C202.5 66.9454 199.814 69.6317 196.5 69.6317H183.491\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <mask id=\"path-8-inside-1_1000_26057\" fill=\"white\">\n    <rect x=\"172\" y=\"65.6317\" width=\"12\" height=\"9\" rx=\"1.25\"/>\n  </mask>\n  <rect x=\"172\" y=\"65.6317\" width=\"12\" height=\"9\" rx=\"1.25\" stroke=\"var(--color-secondary-700)\" stroke-width=\"6\" mask=\"url(#path-8-inside-1_1000_26057)\"/>\n  <path d=\"M187 54.6317C187 54.6317 187 53.6317 187 52.6317C187 51.6317 186.053 50.6317 185.105 50.6317C184.158 50.6317 171.842 50.6317 170.895 50.6317C169.947 50.6317 169 51.6317 169 52.6317C169 53.6317 169 54.6317 169 54.6317\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <circle cx=\"48\" cy=\"141\" r=\"10.5\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <path d=\"M64.9935 168.5H64.9126H64.8318H64.7512H64.6708H64.5905H64.5104H64.4304H64.3506H64.2709H64.1914H64.1121H64.0329H63.9538H63.8749H63.7962H63.7176H63.6392H63.5609H63.4828H63.4048H63.3269H63.2492H63.1717H63.0943H63.017H62.9399H62.8629H62.7861H62.7094H62.6329H62.5565H62.4802H62.4041H62.3281H62.2523H62.1766H62.101H62.0256H61.9503H61.8751H61.8001H61.7252H61.6504H61.5758H61.5013H61.4269H61.3527H61.2786H61.2046H61.1308H61.0571H60.9835H60.91H60.8367H60.7635H60.6904H60.6175H60.5446H60.4719H60.3993H60.3269H60.2545H60.1823H60.1102H60.0382H59.9664H59.8946H59.823H59.7515H59.6801H59.6088H59.5376H59.4666H59.3956H59.3248H59.2541H59.1835H59.113H59.0426H58.9724H58.9022H58.8322H58.7622H58.6924H58.6226H58.553H58.4835H58.4141H58.3448H58.2756H58.2065H58.1375H58.0686H57.9998H57.9311H57.8625H57.794H57.7256H57.6572H57.589H57.5209H57.4529H57.385H57.3172H57.2494H57.1818H57.1142H57.0468H56.9794H56.9121H56.8449H56.7779H56.7108H56.6439H56.5771H56.5103H56.4437H56.3771H56.3106H56.2442H56.1779H56.1117H56.0455H55.9794H55.9134H55.8475H55.7817H55.7159H55.6502H55.5846H55.5191H55.4537H55.3883H55.323H55.2578H55.1926H55.1275H55.0625H54.9976H54.9328H54.868H54.8032H54.7386H54.674H54.6095H54.5451H54.4807H54.4164H54.3521H54.2879H54.2238H54.1598H54.0958H54.0318H53.968H53.9042H53.8404H53.7767H53.7131H53.6495H53.586H53.5226H53.4592H53.3958H53.3325H53.2693H53.2061H53.143H53.0799H53.0169H52.9539H52.891H52.8281H52.7653H52.7025H52.6398H52.5771H52.5145H52.4519H52.3894H52.3269H52.2645H52.202H52.1397H52.0774H52.0151H51.9528H51.8907H51.8285H51.7664H51.7043H51.6423H51.5803H51.5183H51.4564H51.3945H51.3326H51.2708H51.209H51.1472H51.0855H51.0238H50.9621H50.9005H50.8389H50.7773H50.7157H50.6542H50.5927H50.5312H50.4698H50.4084H50.347H50.2856H50.2243H50.1629H50.1016H50.0404H49.9791H49.9178H49.8566H49.7954H49.7342H49.6731H49.6119H49.5508H49.4896H49.4285H49.3674H49.3064H49.2453H49.1842H49.1232H49.0622H49.0011H48.9401H48.8791H48.8181H48.7571H48.6962H48.6352H48.5742H48.5133H48.4523H48.3913H48.3304H48.2694H48.2085H48.1475H48.0866H48.0257H47.9647H47.9038H47.8428H47.7819H47.7209H47.6599H47.599H47.538H47.477H47.416H47.3551H47.2941H47.2331H47.172H47.111H47.05H46.9889H46.9279H46.8668H46.8057H46.7446H46.6835H46.6224H46.5612H46.5001H46.4389H46.3777H46.3165H46.2553H46.194H46.1328H46.0715H46.0102H45.9489H45.8875H45.8261H45.7647H45.7033H45.6418H45.5804H45.5189H45.4573H45.3958H45.3342H45.2726H45.2109H45.1493H45.0876H45.0258H44.9641H44.9023H44.8404H44.7786H44.7166H44.6547H44.5927H44.5307H44.4687H44.4066H44.3445H44.2823H44.2201H44.1578H44.0956H44.0332H43.9709H43.9084H43.846H43.7835H43.7209H43.6583H43.5957H43.533H43.4703H43.4075H43.3447H43.2818H43.2189H43.1559H43.0929H43.0298H42.9666H42.9034H42.8402H42.7769H42.7135H42.6501H42.5867H42.5231H42.4596H42.3959H42.3322H42.2685H42.2046H42.1408H42.0768H42.0128H41.9487H41.8846H41.8204H41.7562H41.6918H41.6274H41.563H41.4985H41.4339H41.3692H41.3045H41.2397H41.1748H41.1098H41.0448H40.9797H40.9146H40.8493H40.784H40.7186H40.6532H40.5876H40.522H40.4563H40.3905H40.3247H40.2588H40.1928H40.1267H40.0605H39.9942H39.9279H39.8615H39.795H39.7284H39.6617H39.5949H39.5281H39.4611H39.3941H39.327H39.2598H39.1925H39.1251H39.0576H38.9901H38.9224H38.8547H38.7868H38.7189H38.6508H38.5827H38.5145H38.4461H38.3777H38.3092H38.2406H38.1719H38.103H38.0341H37.9651H37.896H37.8267H37.7574H37.688H37.6184H37.5488H37.479H37.4092H37.3392H37.2691H37.199H37.1287H37.0583H36.9878H36.9171H36.8464H36.7755H36.7046H36.6335H36.5623H36.491H36.4196H36.3481H36.2764H36.2046H36.1328H36.0607H35.9886H35.9164H35.844H35.7715H35.6989H35.6262H35.5533H35.4803H35.4072H35.334H35.2606H35.1872H35.1135H35.0398H34.9659H34.8919H34.8178H34.7436H34.6692H34.5947H34.52H34.4452H34.3703H34.2952H34.2201H34.1447H34.0693H33.9937H33.9179H33.8421H33.7661H33.6899H33.6136H33.5372H33.4606H33.3839H33.3071H33.2301H33.1529H33.0756H32.9982H32.9206H32.8429H32.765H32.687H32.6088H32.5305H32.452H32.3734H32.2946H32.2157H32.1367H32.0574H31.978H31.8985H31.8188H31.739H31.659H31.5788H31.4985H31.418H31.3374H31.2566H31.1757H31.0946H31.0133H30.9318H30.8503H30.7685H30.6866H30.6045H30.5222H30.4398H30.3572H30.2745H30.1915C30.0489 168.5 29.9693 168.466 29.9164 168.433C29.8553 168.394 29.7779 168.322 29.702 168.192C29.5361 167.906 29.4608 167.48 29.5197 167.111C30.9235 158.322 38.6474 151.574 47.9925 151.574C57.3375 151.574 65.0615 158.322 66.4652 167.111C66.5751 167.799 66.4037 168.054 66.3124 168.149C66.1888 168.278 65.8364 168.5 64.9935 168.5Z\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <circle cx=\"20\" cy=\"141\" r=\"10.5\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <path d=\"M36.9935 168.5H36.9126H36.8318H36.7512H36.6708H36.5905H36.5104H36.4304H36.3506H36.2709H36.1914H36.1121H36.0329H35.9538H35.8749H35.7962H35.7176H35.6392H35.5609H35.4828H35.4048H35.3269H35.2492H35.1717H35.0943H35.017H34.9399H34.8629H34.7861H34.7094H34.6329H34.5565H34.4802H34.4041H34.3281H34.2523H34.1766H34.101H34.0256H33.9503H33.8751H33.8001H33.7252H33.6504H33.5758H33.5013H33.4269H33.3527H33.2786H33.2046H33.1308H33.0571H32.9835H32.91H32.8367H32.7635H32.6904H32.6175H32.5446H32.4719H32.3993H32.3269H32.2545H32.1823H32.1102H32.0382H31.9664H31.8946H31.823H31.7515H31.6801H31.6088H31.5376H31.4666H31.3956H31.3248H31.2541H31.1835H31.113H31.0426H30.9724H30.9022H30.8322H30.7622H30.6924H30.6226H30.553H30.4835H30.4141H30.3448H30.2756H30.2065H30.1375H30.0686H29.9998H29.9311H29.8625H29.794H29.7256H29.6572H29.589H29.5209H29.4529H29.385H29.3172H29.2494H29.1818H29.1142H29.0468H28.9794H28.9121H28.8449H28.7779H28.7108H28.6439H28.5771H28.5103H28.4437H28.3771H28.3106H28.2442H28.1779H28.1117H28.0455H27.9794H27.9134H27.8475H27.7817H27.7159H27.6502H27.5846H27.5191H27.4537H27.3883H27.323H27.2578H27.1926H27.1275H27.0625H26.9976H26.9328H26.868H26.8032H26.7386H26.674H26.6095H26.5451H26.4807H26.4164H26.3521H26.2879H26.2238H26.1598H26.0958H26.0318H25.968H25.9042H25.8404H25.7767H25.7131H25.6495H25.586H25.5226H25.4592H25.3958H25.3325H25.2693H25.2061H25.143H25.0799H25.0169H24.9539H24.891H24.8281H24.7653H24.7025H24.6398H24.5771H24.5145H24.4519H24.3894H24.3269H24.2645H24.202H24.1397H24.0774H24.0151H23.9528H23.8907H23.8285H23.7664H23.7043H23.6423H23.5803H23.5183H23.4564H23.3945H23.3326H23.2708H23.209H23.1472H23.0855H23.0238H22.9621H22.9005H22.8389H22.7773H22.7157H22.6542H22.5927H22.5312H22.4698H22.4084H22.347H22.2856H22.2243H22.1629H22.1016H22.0404H21.9791H21.9178H21.8566H21.7954H21.7342H21.6731H21.6119H21.5508H21.4896H21.4285H21.3674H21.3064H21.2453H21.1842H21.1232H21.0622H21.0011H20.9401H20.8791H20.8181H20.7571H20.6962H20.6352H20.5742H20.5133H20.4523H20.3913H20.3304H20.2694H20.2085H20.1475H20.0866H20.0257H19.9647H19.9038H19.8428H19.7819H19.7209H19.6599H19.599H19.538H19.477H19.416H19.3551H19.2941H19.2331H19.172H19.111H19.05H18.9889H18.9279H18.8668H18.8057H18.7446H18.6835H18.6224H18.5612H18.5001H18.4389H18.3777H18.3165H18.2553H18.194H18.1328H18.0715H18.0102H17.9489H17.8875H17.8261H17.7647H17.7033H17.6418H17.5804H17.5189H17.4573H17.3958H17.3342H17.2726H17.2109H17.1493H17.0876H17.0258H16.9641H16.9023H16.8404H16.7786H16.7166H16.6547H16.5927H16.5307H16.4687H16.4066H16.3445H16.2823H16.2201H16.1578H16.0956H16.0332H15.9709H15.9084H15.846H15.7835H15.7209H15.6583H15.5957H15.533H15.4703H15.4075H15.3447H15.2818H15.2189H15.1559H15.0929H15.0298H14.9666H14.9034H14.8402H14.7769H14.7135H14.6501H14.5867H14.5231H14.4596H14.3959H14.3322H14.2685H14.2046H14.1408H14.0768H14.0128H13.9487H13.8846H13.8204H13.7562H13.6918H13.6274H13.563H13.4985H13.4339H13.3692H13.3045H13.2397H13.1748H13.1098H13.0448H12.9797H12.9146H12.8493H12.784H12.7186H12.6532H12.5876H12.522H12.4563H12.3905H12.3247H12.2588H12.1928H12.1267H12.0605H11.9942H11.9279H11.8615H11.795H11.7284H11.6617H11.5949H11.5281H11.4611H11.3941H11.327H11.2598H11.1925H11.1251H11.0576H10.9901H10.9224H10.8547H10.7868H10.7189H10.6508H10.5827H10.5145H10.4461H10.3777H10.3092H10.2406H10.1719H10.103H10.0341H9.9651H9.89597H9.82674H9.75741H9.68798H9.61843H9.54879H9.47904H9.40918H9.33921H9.26914H9.19896H9.12867H9.05826H8.98775H8.91713H8.8464H8.77555H8.70459H8.63351H8.56232H8.49102H8.4196H8.34807H8.27641H8.20464H8.13276H8.06075H7.98862H7.91638H7.84401H7.77152H7.69891H7.62617H7.55332H7.48034H7.40723H7.334H7.26064H7.18716H7.11355H7.03981H6.96594H6.89195H6.81782H6.74356H6.66918H6.59466H6.52H6.44522H6.3703H6.29525H6.22006H6.14474H6.06928H5.99368H5.91795H5.84208H5.76607H5.68992H5.61363H5.5372H5.46062H5.38391H5.30705H5.23005H5.15291H5.07562H4.99819H4.92061H4.84288H4.76501H4.68699H4.60882H4.5305H4.45203H4.37342H4.29465H4.21573H4.13665H4.05743H3.97805H3.89851H3.81882H3.73898H3.65898H3.57882H3.49851H3.41804H3.33741H3.25662H3.17566H3.09455H3.01328H2.93185H2.85025H2.76849H2.68657H2.60448H2.52223H2.43981H2.35722H2.27447H2.19155C2.04893 168.5 1.96927 168.466 1.91645 168.433C1.85532 168.394 1.77792 168.322 1.702 168.192C1.53613 167.906 1.46078 167.48 1.51975 167.111C2.92347 158.322 10.6474 151.574 19.9925 151.574C29.3375 151.574 37.0615 158.322 38.4652 167.111C38.5751 167.799 38.4037 168.054 38.3124 168.149C38.1888 168.278 37.8364 168.5 36.9935 168.5Z\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <circle cx=\"34\" cy=\"154\" r=\"10.5\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <path d=\"M50.9935 181.5H50.9126H50.8318H50.7512H50.6708H50.5905H50.5104H50.4304H50.3506H50.2709H50.1914H50.1121H50.0329H49.9538H49.8749H49.7962H49.7176H49.6392H49.5609H49.4828H49.4048H49.3269H49.2492H49.1717H49.0943H49.017H48.9399H48.8629H48.7861H48.7094H48.6329H48.5565H48.4802H48.4041H48.3281H48.2523H48.1766H48.101H48.0256H47.9503H47.8751H47.8001H47.7252H47.6504H47.5758H47.5013H47.4269H47.3527H47.2786H47.2046H47.1308H47.0571H46.9835H46.91H46.8367H46.7635H46.6904H46.6175H46.5446H46.4719H46.3993H46.3269H46.2545H46.1823H46.1102H46.0382H45.9664H45.8946H45.823H45.7515H45.6801H45.6088H45.5376H45.4666H45.3956H45.3248H45.2541H45.1835H45.113H45.0426H44.9724H44.9022H44.8322H44.7622H44.6924H44.6226H44.553H44.4835H44.4141H44.3448H44.2756H44.2065H44.1375H44.0686H43.9998H43.9311H43.8625H43.794H43.7256H43.6572H43.589H43.5209H43.4529H43.385H43.3172H43.2494H43.1818H43.1142H43.0468H42.9794H42.9121H42.8449H42.7779H42.7108H42.6439H42.5771H42.5103H42.4437H42.3771H42.3106H42.2442H42.1779H42.1117H42.0455H41.9794H41.9134H41.8475H41.7817H41.7159H41.6502H41.5846H41.5191H41.4537H41.3883H41.323H41.2578H41.1926H41.1275H41.0625H40.9976H40.9328H40.868H40.8032H40.7386H40.674H40.6095H40.5451H40.4807H40.4164H40.3521H40.2879H40.2238H40.1598H40.0958H40.0318H39.968H39.9042H39.8404H39.7767H39.7131H39.6495H39.586H39.5226H39.4592H39.3958H39.3325H39.2693H39.2061H39.143H39.0799H39.0169H38.9539H38.891H38.8281H38.7653H38.7025H38.6398H38.5771H38.5145H38.4519H38.3894H38.3269H38.2645H38.202H38.1397H38.0774H38.0151H37.9528H37.8907H37.8285H37.7664H37.7043H37.6423H37.5803H37.5183H37.4564H37.3945H37.3326H37.2708H37.209H37.1472H37.0855H37.0238H36.9621H36.9005H36.8389H36.7773H36.7157H36.6542H36.5927H36.5312H36.4698H36.4084H36.347H36.2856H36.2243H36.1629H36.1016H36.0404H35.9791H35.9178H35.8566H35.7954H35.7342H35.6731H35.6119H35.5508H35.4896H35.4285H35.3674H35.3064H35.2453H35.1842H35.1232H35.0622H35.0011H34.9401H34.8791H34.8181H34.7571H34.6962H34.6352H34.5742H34.5133H34.4523H34.3913H34.3304H34.2694H34.2085H34.1475H34.0866H34.0257H33.9647H33.9038H33.8428H33.7819H33.7209H33.6599H33.599H33.538H33.477H33.416H33.3551H33.2941H33.2331H33.172H33.111H33.05H32.9889H32.9279H32.8668H32.8057H32.7446H32.6835H32.6224H32.5612H32.5001H32.4389H32.3777H32.3165H32.2553H32.194H32.1328H32.0715H32.0102H31.9489H31.8875H31.8261H31.7647H31.7033H31.6418H31.5804H31.5189H31.4573H31.3958H31.3342H31.2726H31.2109H31.1493H31.0876H31.0258H30.9641H30.9023H30.8404H30.7786H30.7166H30.6547H30.5927H30.5307H30.4687H30.4066H30.3445H30.2823H30.2201H30.1578H30.0956H30.0332H29.9709H29.9084H29.846H29.7835H29.7209H29.6583H29.5957H29.533H29.4703H29.4075H29.3447H29.2818H29.2189H29.1559H29.0929H29.0298H28.9666H28.9034H28.8402H28.7769H28.7135H28.6501H28.5867H28.5231H28.4596H28.3959H28.3322H28.2685H28.2046H28.1408H28.0768H28.0128H27.9487H27.8846H27.8204H27.7562H27.6918H27.6274H27.563H27.4985H27.4339H27.3692H27.3045H27.2397H27.1748H27.1098H27.0448H26.9797H26.9146H26.8493H26.784H26.7186H26.6532H26.5876H26.522H26.4563H26.3905H26.3247H26.2588H26.1928H26.1267H26.0605H25.9942H25.9279H25.8615H25.795H25.7284H25.6617H25.5949H25.5281H25.4611H25.3941H25.327H25.2598H25.1925H25.1251H25.0576H24.9901H24.9224H24.8547H24.7868H24.7189H24.6508H24.5827H24.5145H24.4461H24.3777H24.3092H24.2406H24.1719H24.103H24.0341H23.9651H23.896H23.8267H23.7574H23.688H23.6184H23.5488H23.479H23.4092H23.3392H23.2691H23.199H23.1287H23.0583H22.9878H22.9171H22.8464H22.7755H22.7046H22.6335H22.5623H22.491H22.4196H22.3481H22.2764H22.2046H22.1328H22.0607H21.9886H21.9164H21.844H21.7715H21.6989H21.6262H21.5533H21.4803H21.4072H21.334H21.2606H21.1872H21.1135H21.0398H20.9659H20.8919H20.8178H20.7436H20.6692H20.5947H20.52H20.4452H20.3703H20.2952H20.2201H20.1447H20.0693H19.9937H19.9179H19.8421H19.7661H19.6899H19.6136H19.5372H19.4606H19.3839H19.3071H19.2301H19.1529H19.0756H18.9982H18.9206H18.8429H18.765H18.687H18.6088H18.5305H18.452H18.3734H18.2946H18.2157H18.1367H18.0574H17.978H17.8985H17.8188H17.739H17.659H17.5788H17.4985H17.418H17.3374H17.2566H17.1757H17.0946H17.0133H16.9318H16.8503H16.7685H16.6866H16.6045H16.5222H16.4398H16.3572H16.2745H16.1915C16.045 181.5 15.9628 181.465 15.9092 181.432C15.8479 181.394 15.772 181.324 15.6978 181.198C15.5354 180.922 15.4617 180.509 15.5193 180.153C16.9196 171.496 24.6325 164.823 33.9925 164.823C43.3524 164.823 51.0654 171.496 52.4657 180.153C52.574 180.823 52.4052 181.064 52.319 181.152C52.1962 181.279 51.8413 181.5 50.9935 181.5Z\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n</svg>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-update-license\",\n  templateUrl: \"update-license.component.html\",\n})\nexport class UpdateLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onUpdated = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    try {\n      const fd = new FormData();\n      fd.append(\"license\", files[0]);\n\n      let updatePromise: Promise<void | unknown> = null;\n      if (this.organizationId == null) {\n        updatePromise = this.apiService.postAccountLicense(fd);\n      } else {\n        updatePromise = this.organizationApiService.updateLicense(this.organizationId, fd);\n      }\n\n      this.formPromise = updatePromise.then(() => {\n        return this.apiService.refreshIdentityToken();\n      });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedLicense\"));\n      this.onUpdated.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"form-group\">\n    <label for=\"file\" class=\"sr-only\">{{ \"licenseFile\" | i18n }}</label>\n    <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n    <small class=\"form-text text-muted\">{{\n      \"licenseFileDesc\"\n        | i18n\n          : (!organizationId\n              ? \"bitwarden_premium_license.json\"\n              : \"bitwarden_organization_license.json\")\n    }}</small>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"submit\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","<div class=\"page-header\">\n  <h1>\n    {{ \"subscription\" | i18n }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<ng-container *ngIf=\"firstLoaded && !userOrg.canManageBilling\">\n  <div class=\"tw-flex tw-flex-col tw-items-center tw-text-info\">\n    <app-image-org-subscription-hidden></app-image-org-subscription-hidden>\n    <p class=\"tw-font-bold\">{{ \"billingManagedByProvider\" | i18n: this.userOrg.providerName }}</p>\n    <p>{{ \"billingContactProviderForAssistance\" | i18n }}</p>\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"sub\">\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</app-callout\n  >\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      #reinstateBtn\n      type=\"button\"\n      class=\"btn btn-outline-secondary btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"reinstateBtn.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </app-callout>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <dl>\n          <dt>{{ \"billingPlan\" | i18n }}</dt>\n          <dd>{{ sub.plan.name }}</dd>\n          <ng-container *ngIf=\"subscription\">\n            <dt>{{ \"status\" | i18n }}</dt>\n            <dd>\n              <span class=\"text-capitalize\">{{\n                isSponsoredSubscription ? \"sponsored\" : subscription.status || \"-\"\n              }}</span>\n              <span bitBadge badgeType=\"warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n                \"pendingCancellation\" | i18n\n              }}</span>\n            </dd>\n            <dt>{{ \"nextCharge\" | i18n }}</dt>\n            <dd>\n              {{\n                nextInvoice\n                  ? (nextInvoice.date | date: \"mediumDate\") +\n                    \", \" +\n                    (nextInvoice.amount | currency: \"$\")\n                  : \"-\"\n              }}\n            </dd>\n          </ng-container>\n        </dl>\n      </div>\n      <div class=\"col-8\" *ngIf=\"subscription\">\n        <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n        <table class=\"table\">\n          <tbody>\n            <tr *ngFor=\"let i of subscription.items\">\n              <td>\n                {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n                {{ i.amount | currency: \"$\" }}\n              </td>\n              <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <ng-container *ngIf=\"userOrg?.providerId != null\">\n        <div class=\"col-sm\">\n          <dl>\n            <dt>{{ \"provider\" | i18n }}</dt>\n            <dd>{{ \"yourProviderIs\" | i18n: userOrg.providerName }}</dd>\n          </dl>\n        </div>\n      </ng-container>\n    </div>\n    <ng-container>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"changePlan()\"\n        *ngIf=\"showChangePlanButton\"\n      >\n        {{ \"changeBillingPlan\" | i18n }}\n      </button>\n      <app-change-plan\n        [organizationId]=\"organizationId\"\n        (onChanged)=\"closeChangePlan(true)\"\n        (onCanceled)=\"closeChangePlan(false)\"\n        *ngIf=\"showChangePlan\"\n      ></app-change-plan>\n    </ng-container>\n    <h2 class=\"spaced-header\">{{ \"manageSubscription\" | i18n }}</h2>\n    <p class=\"mb-4\">{{ subscriptionDesc }}</p>\n    <ng-container\n      *ngIf=\"\n        subscription && canAdjustSeats && !subscription.cancelled && !subscriptionMarkedForCancel\n      \"\n    >\n      <div class=\"mt-3\">\n        <app-adjust-subscription\n          [seatPrice]=\"seatPrice\"\n          [organizationId]=\"organizationId\"\n          [interval]=\"billingInterval\"\n          [currentSeatCount]=\"seats\"\n          [maxAutoscaleSeats]=\"maxAutoscaleSeats\"\n          (onAdjusted)=\"subscriptionAdjusted()\"\n        >\n        </app-adjust-subscription>\n      </div>\n    </ng-container>\n    <button\n      #removeSponsorshipBtn\n      type=\"button\"\n      class=\"btn btn-outline-danger btn-submit\"\n      (click)=\"removeSponsorship()\"\n      [appApiAction]=\"removeSponsorshipPromise\"\n      [disabled]=\"removeSponsorshipBtn.loading\"\n      *ngIf=\"isSponsoredSubscription\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"removeSponsorship\" | i18n }}</span>\n    </button>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary ml-1\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"storageGbPrice\"\n          [add]=\"adjustStorageAdd\"\n          [organizationId]=\"organizationId\"\n          [interval]=\"billingInterval\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n    <!--Switch to i18n-->\n    <h2 class=\"spaced-header\">{{ \"selfHostingTitle\" | i18n }}</h2>\n    <p class=\"mb-4\">\n      {{ \"selfHostingEnterpriseOrganizationSectionCopy\" | i18n }}\n    </p>\n    <div class=\"d-flex\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"canDownloadLicense\"\n        [disabled]=\"showDownloadLicense\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary ml-1\"\n        (click)=\"manageBillingSync()\"\n        *ngIf=\"canManageBillingSync\"\n      >\n        {{ (hasBillingSyncToken ? \"manageBillingSync\" : \"setUpBillingSync\") | i18n }}\n      </button>\n    </div>\n    <div class=\"mt-3\" *ngIf=\"showDownloadLicense\">\n      <app-download-license\n        [organizationId]=\"organizationId\"\n        (onDownloaded)=\"closeDownloadLicense()\"\n        (onCanceled)=\"closeDownloadLicense()\"\n      ></app-download-license>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"additionalOptions\" | i18n }}</h2>\n    <p class=\"mb-4\">\n      {{ \"additionalOptionsDesc\" | i18n }}\n    </p>\n    <div class=\"d-flex\">\n      <button\n        #cancelBtn\n        type=\"button\"\n        class=\"btn btn-outline-danger btn-submit ml-1\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"cancelBtn.loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"selfHosted\">\n    <dl>\n      <dt>{{ \"billingPlan\" | i18n }}</dt>\n      <dd>{{ sub.plan.name }}</dd>\n      <dt>{{ \"expiration\" | i18n }}</dt>\n      <dd *ngIf=\"sub.expiration\">\n        {{ sub.expiration | date: \"mediumDate\" }}\n        <span *ngIf=\"isExpired\" class=\"text-danger ml-2\">\n          <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n          {{ \"licenseIsExpired\" | i18n }}\n        </span>\n      </dd>\n      <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n    </dl>\n    <div>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        href=\"https://vault.bitwarden.com\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        class=\"btn btn-outline-secondary\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          [organizationId]=\"organizationId\"\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        ></app-update-license>\n      </div>\n    </div>\n    <div *ngIf=\"showBillingSyncKey\">\n      <h2 class=\"mt-5\">\n        {{ \"billingSync\" | i18n }}\n      </h2>\n      <p>\n        {{ \"billingSyncDesc\" | i18n }}\n      </p>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"manageBillingSyncSelfHosted()\"\n      >\n        {{ \"manageBillingSync\" | i18n }}\n      </button>\n      <small class=\"form-text text-muted\" *ngIf=\"billingSyncSetUp\">\n        {{ \"lastSync\" | i18n }}:\n        <span *ngIf=\"userOrg.familySponsorshipLastSyncDate != null\">\n          {{ userOrg.familySponsorshipLastSyncDate | date: \"medium\" }}\n        </span>\n        <span *ngIf=\"userOrg.familySponsorshipLastSyncDate == null\">\n          {{ \"never\" | i18n | lowercase }}\n        </span>\n      </small>\n    </div>\n  </ng-container>\n</ng-container>\n<ng-template #setupBillingSyncTemplate></ng-template>\n<ng-template #rotateBillingSyncKeyTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/enums/organizationApiKeyType\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/enums/organizationConnectionType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { BillingSyncConfigApi } from \"@bitwarden/common/models/api/billingSyncConfigApi\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/models/response/organizationConnectionResponse\";\nimport { OrganizationSubscriptionResponse } from \"@bitwarden/common/models/response/organizationSubscriptionResponse\";\n\nimport { BillingSyncKeyComponent } from \"../../settings/billing-sync-key.component\";\n\nimport { BillingSyncApiKeyComponent } from \"./billing-sync-api-key.component\";\n\n@Component({\n  selector: \"app-org-subscription\",\n  templateUrl: \"organization-subscription.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class OrganizationSubscriptionComponent implements OnInit {\n  @ViewChild(\"setupBillingSyncTemplate\", { read: ViewContainerRef, static: true })\n  setupBillingSyncModalRef: ViewContainerRef;\n\n  loading = false;\n  firstLoaded = false;\n  organizationId: string;\n  adjustSeatsAdd = true;\n  showAdjustSeats = false;\n  showAdjustSeatAutoscale = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  showBillingSyncKey = false;\n  showDownloadLicense = false;\n  showChangePlan = false;\n  sub: OrganizationSubscriptionResponse;\n  selfHosted = false;\n  hasBillingSyncToken: boolean;\n\n  userOrg: Organization;\n  existingBillingSyncConnection: OrganizationConnectionResponse<BillingSyncConfigApi>;\n\n  removeSponsorshipPromise: Promise<void>;\n  cancelPromise: Promise<void>;\n  reinstatePromise: Promise<void>;\n\n  @ViewChild(\"rotateBillingSyncKeyTemplate\", { read: ViewContainerRef, static: true })\n  billingSyncKeyViewContainerRef: ViewContainerRef;\n  billingSyncKeyRef: [ModalRef, BillingSyncKeyComponent];\n\n  constructor(\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private logService: LogService,\n    private modalService: ModalService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    this.loading = true;\n    this.userOrg = await this.organizationService.get(this.organizationId);\n    if (this.userOrg.canManageBilling) {\n      this.sub = await this.organizationApiService.getSubscription(this.organizationId);\n    }\n    const apiKeyResponse = await this.organizationApiService.getApiKeyInformation(\n      this.organizationId\n    );\n    this.hasBillingSyncToken = apiKeyResponse.data.some(\n      (i) => i.keyType === OrganizationApiKeyType.BillingSync\n    );\n\n    if (this.selfHosted) {\n      this.showBillingSyncKey = await this.apiService.getCloudCommunicationsEnabled();\n    }\n\n    if (this.showBillingSyncKey) {\n      this.existingBillingSyncConnection = await this.apiService.getOrganizationConnection(\n        this.organizationId,\n        OrganizationConnectionType.CloudBillingSync,\n        BillingSyncConfigApi\n      );\n    }\n\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.organizationApiService.reinstate(this.organizationId);\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.organizationApiService.cancel(this.organizationId);\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async changePlan() {\n    this.showChangePlan = !this.showChangePlan;\n  }\n\n  closeChangePlan(changed: boolean) {\n    this.showChangePlan = false;\n  }\n\n  downloadLicense() {\n    this.showDownloadLicense = !this.showDownloadLicense;\n  }\n\n  async manageBillingSync() {\n    const [ref] = await this.modalService.openViewRef(\n      BillingSyncApiKeyComponent,\n      this.setupBillingSyncModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.hasBillingToken = this.hasBillingSyncToken;\n      }\n    );\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    ref.onClosed.subscribe(async () => {\n      await this.load();\n    });\n  }\n\n  closeDownloadLicense() {\n    this.showDownloadLicense = false;\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(updated: boolean) {\n    this.showUpdateLicense = false;\n    if (updated) {\n      this.load();\n      this.messagingService.send(\"updatedOrgLicense\");\n    }\n  }\n\n  subscriptionAdjusted() {\n    this.load();\n  }\n\n  adjustStorage(add: boolean) {\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  async removeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeSponsorshipConfirmation\"),\n      this.i18nService.t(\"removeSponsorship\"),\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    try {\n      this.removeSponsorshipPromise = this.apiService.deleteRemoveSponsorship(this.organizationId);\n      await this.removeSponsorshipPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removeSponsorshipSuccess\")\n      );\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async manageBillingSyncSelfHosted() {\n    this.billingSyncKeyRef = await this.modalService.openViewRef(\n      BillingSyncKeyComponent,\n      this.billingSyncKeyViewContainerRef,\n      (comp) => {\n        comp.entityId = this.organizationId;\n        comp.existingConnectionId = this.existingBillingSyncConnection?.id;\n        comp.billingSyncKey = this.existingBillingSyncConnection?.config?.billingSyncKey;\n        comp.setParentConnection = (\n          connection: OrganizationConnectionResponse<BillingSyncConfigApi>\n        ) => {\n          this.existingBillingSyncConnection = connection;\n          this.billingSyncKeyRef[0].close();\n        };\n      }\n    );\n  }\n\n  get isExpired() {\n    return (\n      this.sub != null && this.sub.expiration != null && new Date(this.sub.expiration) < new Date()\n    );\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get billingInterval() {\n    const monthly = !this.sub.plan.isAnnual;\n    return monthly ? \"month\" : \"year\";\n  }\n\n  get storageGbPrice() {\n    return this.sub.plan.additionalStoragePricePerGb;\n  }\n\n  get seatPrice() {\n    return this.sub.plan.seatPrice;\n  }\n\n  get seats() {\n    return this.sub.seats;\n  }\n\n  get maxAutoscaleSeats() {\n    return this.sub.maxAutoscaleSeats;\n  }\n\n  get canAdjustSeats() {\n    return this.sub.plan.hasAdditionalSeatsOption;\n  }\n\n  get isSponsoredSubscription(): boolean {\n    return this.sub.subscription?.items.some((i) => i.sponsoredSubscriptionItem);\n  }\n\n  get canDownloadLicense() {\n    return (\n      (this.sub.planType !== PlanType.Free && this.subscription == null) ||\n      (this.subscription != null && !this.subscription.cancelled)\n    );\n  }\n\n  get canManageBillingSync() {\n    return (\n      !this.selfHosted &&\n      (this.sub.planType === PlanType.EnterpriseAnnually ||\n        this.sub.planType === PlanType.EnterpriseMonthly ||\n        this.sub.planType === PlanType.EnterpriseAnnually2019 ||\n        this.sub.planType === PlanType.EnterpriseMonthly2019)\n    );\n  }\n\n  get subscriptionDesc() {\n    if (this.sub.planType === PlanType.Free) {\n      return this.i18nService.t(\"subscriptionFreePlan\", this.sub.seats.toString());\n    } else if (\n      this.sub.planType === PlanType.FamiliesAnnually ||\n      this.sub.planType === PlanType.FamiliesAnnually2019\n    ) {\n      if (this.isSponsoredSubscription) {\n        return this.i18nService.t(\"subscriptionSponsoredFamiliesPlan\", this.sub.seats.toString());\n      } else {\n        return this.i18nService.t(\"subscriptionFamiliesPlan\", this.sub.seats.toString());\n      }\n    } else if (this.sub.maxAutoscaleSeats === this.sub.seats && this.sub.seats != null) {\n      return this.i18nService.t(\"subscriptionMaxReached\", this.sub.seats.toString());\n    } else if (this.sub.maxAutoscaleSeats == null) {\n      return this.i18nService.t(\"subscriptionUserSeatsUnlimitedAutoscale\");\n    } else {\n      return this.i18nService.t(\n        \"subscriptionUserSeatsLimitedAutoscale\",\n        this.sub.maxAutoscaleSeats.toString()\n      );\n    }\n  }\n\n  get showChangePlanButton() {\n    return this.subscription == null && this.sub.planType === PlanType.Free && !this.showChangePlan;\n  }\n\n  get billingSyncSetUp() {\n    return this.existingBillingSyncConnection?.id != null;\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myOrganization\" | i18n }}\n          </a>\n          <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"subscription\" | i18n }}\n          </a>\n          <a\n            routerLink=\"billing\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"showBilling\"\n          >\n            {{ \"billing\" | i18n }}\n          </a>\n          <a\n            routerLink=\"two-factor\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"access2fa\"\n          >\n            {{ \"twoStepLogin\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-org-settings\",\n  templateUrl: \"settings.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SettingsComponent {\n  access2fa = false;\n  showBilling: boolean;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      const organization = await this.organizationService.get(params.organizationId);\n      this.showBilling = !this.platformUtilsService.isSelfHost() && organization.canManageBilling;\n      this.access2fa = organization.use2fa;\n    });\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorDuoRequest extends SecretVerificationRequest {\n  integrationKey: string;\n  secretKey: string;\n  host: string;\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorProviderRequest extends SecretVerificationRequest {\n  type: TwoFactorProviderType;\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { TwoFactorProviderRequest } from \"@bitwarden/common/models/request/twoFactorProviderRequest\";\nimport { AuthResponseBase } from \"@bitwarden/common/types/authResponse\";\n\n@Directive()\nexport abstract class TwoFactorBaseComponent {\n  @Output() onUpdated = new EventEmitter<boolean>();\n\n  type: TwoFactorProviderType;\n  organizationId: string;\n  twoFactorProviderType = TwoFactorProviderType;\n  enabled = false;\n  authed = false;\n\n  protected hashedSecret: string;\n  protected verificationType: VerificationType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected userVerificationService: UserVerificationService\n  ) {}\n\n  protected auth(authResponse: AuthResponseBase) {\n    this.hashedSecret = authResponse.secret;\n    this.verificationType = authResponse.verificationType;\n    this.authed = true;\n  }\n\n  protected async enable(enableFunction: () => Promise<void>) {\n    try {\n      await enableFunction();\n      this.onUpdated.emit(true);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async disable(promise: Promise<unknown>) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepDisableDesc\"),\n      this.i18nService.t(\"disable\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      const request = await this.buildRequestModel(TwoFactorProviderRequest);\n      request.type = this.type;\n      if (this.organizationId != null) {\n        promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\n      } else {\n        promise = this.apiService.putTwoFactorDisable(request);\n      }\n      await promise;\n      this.enabled = false;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"twoStepDisabled\"));\n      this.onUpdated.emit(false);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async buildRequestModel<T extends SecretVerificationRequest>(\n    requestClass: new () => T\n  ) {\n    return this.userVerificationService.buildRequest(\n      {\n        secret: this.hashedSecret,\n        type: this.verificationType,\n      },\n      requestClass,\n      true\n    );\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\nimport { TwoFactorResponse } from \"@bitwarden/common/types/twoFactorResponse\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-two-factor-verify\",\n  templateUrl: \"two-factor-verify.component.html\",\n})\nexport class TwoFactorVerifyComponent {\n  @Input() type: TwoFactorProviderType;\n  @Input() organizationId: string;\n  @Output() onAuthed = new EventEmitter<AuthResponse<TwoFactorResponse>>();\n\n  secret: Verification;\n  formPromise: Promise<TwoFactorResponse>;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async submit() {\n    let hashedSecret: string;\n\n    try {\n      this.formPromise = this.userVerificationService.buildRequest(this.secret).then((request) => {\n        hashedSecret =\n          this.secret.type === VerificationType.MasterPassword\n            ? request.masterPasswordHash\n            : request.otp;\n        return this.apiCall(request);\n      });\n\n      const response = await this.formPromise;\n      this.onAuthed.emit({\n        response: response,\n        secret: hashedSecret,\n        verificationType: this.secret.type,\n      });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private apiCall(request: SecretVerificationRequest): Promise<TwoFactorResponse> {\n    switch (this.type) {\n      case -1 as TwoFactorProviderType:\n        return this.apiService.getTwoFactorRecover(request);\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        if (this.organizationId != null) {\n          return this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\n        } else {\n          return this.apiService.getTwoFactorDuo(request);\n        }\n      case TwoFactorProviderType.Email:\n        return this.apiService.getTwoFactorEmail(request);\n      case TwoFactorProviderType.WebAuthn:\n        return this.apiService.getTwoFactorWebAuthn(request);\n      case TwoFactorProviderType.Authenticator:\n        return this.apiService.getTwoFactorAuthenticator(request);\n      case TwoFactorProviderType.Yubikey:\n        return this.apiService.getTwoFactorYubiKey(request);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"modal-body\">\n    <p>{{ \"twoStepLoginAuthDesc\" | i18n }}</p>\n    <app-user-verification [(ngModel)]=\"secret\" ngDefaultControl name=\"secret\">\n    </app-user-verification>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"continue\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n      {{ \"close\" | i18n }}\n    </button>\n  </div>\n</form>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faDuoTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faDuoTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>Duo</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <strong>{{ \"twoFactorDuoIntegrationKey\" | i18n }}:</strong> {{ ikey }}\n            <br />\n            <strong>{{ \"twoFactorDuoSecretKey\" | i18n }}:</strong> {{ skey }}\n            <br />\n            <strong>{{ \"twoFactorDuoApiHostname\" | i18n }}:</strong> {{ host }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <p>{{ \"twoFactorDuoDesc\" | i18n }}</p>\n            <div class=\"form-group\">\n              <label for=\"ikey\">{{ \"twoFactorDuoIntegrationKey\" | i18n }}</label>\n              <input\n                id=\"ikey\"\n                type=\"text\"\n                name=\"IntegrationKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"ikey\"\n                required\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"skey\">{{ \"twoFactorDuoSecretKey\" | i18n }}</label>\n              <input\n                id=\"skey\"\n                type=\"password\"\n                name=\"SecretKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"skey\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"host\">{{ \"twoFactorDuoApiHostname\" | i18n }}</label>\n              <input\n                id=\"host\"\n                type=\"text\"\n                name=\"Host\"\n                class=\"form-control\"\n                [(ngModel)]=\"host\"\n                placeholder=\"{{ 'ex' | i18n }} api-xxxxxxxx.duosecurity.com\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorDuoRequest } from \"@bitwarden/common/models/request/updateTwoFactorDuoRequest\";\nimport { TwoFactorDuoResponse } from \"@bitwarden/common/models/response/twoFactorDuoResponse\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-duo\",\n  templateUrl: \"two-factor-duo.component.html\",\n})\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Duo;\n  ikey: string;\n  skey: string;\n  host: string;\n  formPromise: Promise<TwoFactorDuoResponse>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorDuoResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorDuoRequest);\n    request.integrationKey = this.ikey;\n    request.secretKey = this.skey;\n    request.host = this.host;\n\n    return super.enable(async () => {\n      if (this.organizationId != null) {\n        this.formPromise = this.apiService.putTwoFactorOrganizationDuo(\n          this.organizationId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.putTwoFactorDuo(request);\n      }\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private processResponse(response: TwoFactorDuoResponse) {\n    this.ikey = response.integrationKey;\n    this.skey = response.secretKey;\n    this.host = response.host;\n    this.enabled = response.enabled;\n  }\n}\n","export class DeviceVerificationRequest {\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(unknownDeviceVerificationEnabled: boolean) {\n    this.unknownDeviceVerificationEnabled = unknownDeviceVerificationEnabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorAuthenticatorRequest extends SecretVerificationRequest {\n  token: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faAuthenticatorTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faAuthenticatorTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"authenticatorAppTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorDesc\" | i18n }}</p>\n            <p>\n              <strong>1. {{ \"twoStepAuthenticatorDownloadApp\" | i18n }}</strong>\n            </p>\n          </ng-container>\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              <p>{{ \"twoStepLoginProviderEnabled\" | i18n }}</p>\n              {{ \"twoStepAuthenticatorReaddDesc\" | i18n }}\n            </app-callout>\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorNeedApp\" | i18n }}</p>\n          </ng-container>\n          <ul class=\"bwi-ul\">\n            <li>\n              <i class=\"bwi bwi-li bwi-apple\"></i>{{ \"iosDevices\" | i18n }}:\n              <a\n                href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-android\"></i>{{ \"androidDevices\" | i18n }}:\n              <a\n                href=\"https://play.google.com/store/apps/details?id=com.authy.authy\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-windows\"></i>{{ \"windowsDevices\" | i18n }}:\n              <a\n                href=\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Microsoft Authenticator</a\n              >\n            </li>\n          </ul>\n          <p>{{ \"twoStepAuthenticatorAppsRecommended\" | i18n }}</p>\n          <p *ngIf=\"!enabled\">\n            <strong>2. {{ \"twoStepAuthenticatorScanCode\" | i18n }}</strong>\n          </p>\n          <hr *ngIf=\"enabled\" />\n          <p class=\"text-center\" [ngClass]=\"{ 'mb-0': enabled }\">\n            <canvas id=\"qr\"></canvas><br />\n            <code appA11yTitle=\"{{ 'key' | i18n }}\">{{ key }}</code>\n          </p>\n          <ng-container *ngIf=\"!enabled\">\n            <label for=\"token\">3. {{ \"twoStepAuthenticatorEnterCode\" | i18n }}</label>\n            <input\n              id=\"token\"\n              type=\"text\"\n              name=\"Token\"\n              class=\"form-control\"\n              [(ngModel)]=\"token\"\n              required\n              appInputVerbatim\n            />\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"@bitwarden/common/models/request/updateTwoFactorAuthenticatorRequest\";\nimport { TwoFactorAuthenticatorResponse } from \"@bitwarden/common/models/response/twoFactorAuthenticatorResponse\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n// NOTE: There are additional options available but these are just the ones we are current using.\n// See: https://github.com/neocotic/qrious#examples\ninterface QRiousOptions {\n  element: HTMLElement;\n  value: string;\n  size: number;\n}\n\ndeclare global {\n  interface Window {\n    QRious: new (options: QRiousOptions) => unknown;\n  }\n}\n\n@Component({\n  selector: \"app-two-factor-authenticator\",\n  templateUrl: \"two-factor-authenticator.component.html\",\n})\nexport class TwoFactorAuthenticatorComponent\n  extends TwoFactorBaseComponent\n  implements OnInit, OnDestroy\n{\n  type = TwoFactorProviderType.Authenticator;\n  key: string;\n  token: string;\n  formPromise: Promise<TwoFactorAuthenticatorResponse>;\n\n  private qrScript: HTMLScriptElement;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    userVerificationService: UserVerificationService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n    this.qrScript = window.document.createElement(\"script\");\n    this.qrScript.src = \"scripts/qrious.min.js\";\n    this.qrScript.async = true;\n  }\n\n  ngOnInit() {\n    window.document.body.appendChild(this.qrScript);\n  }\n\n  ngOnDestroy() {\n    window.document.body.removeChild(this.qrScript);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorAuthenticatorResponse>) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorAuthenticatorRequest);\n    request.token = this.token;\n    request.key = this.key;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorAuthenticatorResponse) {\n    this.token = null;\n    this.enabled = response.enabled;\n    this.key = response.key;\n    const email = await this.stateService.getEmail();\n    window.setTimeout(() => {\n      new window.QRious({\n        element: document.getElementById(\"qr\"),\n        value:\n          \"otpauth://totp/Bitwarden:\" +\n          encodeURIComponent(email) +\n          \"?secret=\" +\n          encodeURIComponent(this.key) +\n          \"&issuer=Bitwarden\",\n        size: 160,\n      });\n    }, 100);\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorEmailRequest extends SecretVerificationRequest {\n  token: string;\n  email: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faEmailTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faEmailTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"emailTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <strong>{{ \"email\" | i18n }}:</strong> {{ email }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <p class=\"d-flex\">\n              <span class=\"mr-3\">{{ \"twoFactorEmailDesc\" | i18n }}</span>\n              <img class=\"float-right ml-auto mfaType1\" alt=\"Email logo\" />\n            </p>\n            <div class=\"form-group\">\n              <label for=\"email\">1. {{ \"twoFactorEmailEnterEmail\" | i18n }}</label>\n              <input\n                id=\"email\"\n                type=\"text\"\n                name=\"Email\"\n                class=\"form-control\"\n                [(ngModel)]=\"email\"\n                required\n                inputmode=\"email\"\n                appInputVerbatim=\"false\"\n              />\n            </div>\n            <div class=\"mb-3 d-flex\">\n              <button\n                #sendBtn\n                type=\"button\"\n                class=\"btn btn-outline-primary btn-sm btn-submit align-self-start\"\n                (click)=\"sendEmail()\"\n                [appApiAction]=\"emailPromise\"\n                [disabled]=\"sendBtn.loading\"\n              >\n                <i\n                  class=\"bwi bwi-spinner bwi-spin\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span>{{ \"sendEmail\" | i18n }}</span>\n              </button>\n              <span class=\"text-success ml-3\" *ngIf=\"sentEmail\">\n                {{ \"verificationCodeEmailSent\" | i18n: sentEmail }}\n              </span>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"token\">2. {{ \"twoFactorEmailEnterCode\" | i18n }}</label>\n              <input\n                id=\"token\"\n                type=\"text\"\n                name=\"Token\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/twoFactorEmailRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"@bitwarden/common/models/request/updateTwoFactorEmailRequest\";\nimport { TwoFactorEmailResponse } from \"@bitwarden/common/models/response/twoFactorEmailResponse\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-email\",\n  templateUrl: \"two-factor-email.component.html\",\n})\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Email;\n  email: string;\n  token: string;\n  sentEmail: string;\n  formPromise: Promise<TwoFactorEmailResponse>;\n  emailPromise: Promise<unknown>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorEmailResponse>) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  async sendEmail() {\n    try {\n      const request = await this.buildRequestModel(TwoFactorEmailRequest);\n      request.email = this.email;\n      this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\n      await this.emailPromise;\n      this.sentEmail = this.email;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorEmailRequest);\n    request.email = this.email;\n    request.token = this.token;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorEmail(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorEmailResponse) {\n    this.token = null;\n    this.email = response.email;\n    this.enabled = response.enabled;\n    if (!this.enabled && (this.email == null || this.email === \"\")) {\n      this.email = await this.stateService.getEmail();\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faRecoveryTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faRecoveryTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"recoveryCodeTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <ng-container *ngIf=\"authed\">\n        <div class=\"modal-body text-center\">\n          <ng-container *ngIf=\"code\">\n            <p>{{ \"twoFactorRecoveryYourCode\" | i18n }}:</p>\n            <code class=\"text-lg\">{{ code }}</code>\n          </ng-container>\n          <ng-container *ngIf=\"!code\">\n            {{ \"twoFactorRecoveryNoCode\" | i18n }}\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\" *ngIf=\"code\">\n            {{ \"printCode\" | i18n }}\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorRecoverResponse } from \"@bitwarden/common/models/response/twoFactorRescoverResponse\";\n\n@Component({\n  selector: \"app-two-factor-recovery\",\n  templateUrl: \"two-factor-recovery.component.html\",\n})\nexport class TwoFactorRecoveryComponent {\n  type = -1;\n  code: string;\n  authed: boolean;\n  twoFactorProviderType = TwoFactorProviderType;\n\n  constructor(private i18nService: I18nService) {}\n\n  auth(authResponse: any) {\n    this.authed = true;\n    this.processResponse(authResponse.response);\n  }\n\n  print() {\n    const w = window.open();\n    w.document.write(\n      '<div style=\"font-size: 18px; text-align: center;\">' +\n        \"<p>\" +\n        this.i18nService.t(\"twoFactorRecoveryYourCode\") +\n        \":</p>\" +\n        \"<code style=\\\"font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;\\\">\" +\n        this.code +\n        \"</code></div>\" +\n        '<p style=\"text-align: center;\">' +\n        new Date() +\n        \"</p>\"\n    );\n    w.onafterprint = () => w.close();\n    w.print();\n  }\n\n  private formatString(s: string) {\n    if (s == null) {\n      return null;\n    }\n    return s\n      .replace(/(.{4})/g, \"$1 \")\n      .trim()\n      .toUpperCase();\n  }\n\n  private processResponse(response: TwoFactorRecoverResponse) {\n    this.code = this.formatString(response.code);\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorWebAuthnDeleteRequest extends SecretVerificationRequest {\n  id: number;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorWebAuthnRequest extends SecretVerificationRequest {\n  deviceResponse: PublicKeyCredential;\n  name: string;\n  id: number;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faU2fTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faU2fTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"webAuthnTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorWebAuthnWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorWebAuthnSupportWeb\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right ml-5 mfaType7\" alt=\"FIDO2 WebAuthn logo'\" />\n          <ul class=\"bwi-ul\">\n            <li\n              *ngFor=\"let k of keys; let i = index\"\n              #removeKeyBtn\n              [appApiAction]=\"k.removePromise\"\n            >\n              <i class=\"bwi bwi-li bwi-key\"></i>\n              <strong *ngIf=\"!k.configured || !k.name\">{{ \"webAuthnkeyX\" | i18n: i + 1 }}</strong>\n              <strong *ngIf=\"k.configured && k.name\">{{ k.name }}</strong>\n              <ng-container *ngIf=\"k.configured && !removeKeyBtn.loading\">\n                <ng-container *ngIf=\"k.migrated\">\n                  <span>{{ \"webAuthnMigrated\" | i18n }}</span>\n                </ng-container>\n              </ng-container>\n              <ng-container *ngIf=\"keysConfiguredCount > 1 && k.configured\">\n                <i\n                  class=\"bwi bwi-spin bwi-spinner text-muted bwi-fw\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  *ngIf=\"removeKeyBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                -\n                <a href=\"#\" appStopClick (click)=\"remove(k)\">{{ \"remove\" | i18n }}</a>\n              </ng-container>\n            </li>\n          </ul>\n          <hr />\n          <p>{{ \"twoFactorWebAuthnAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorU2fGiveName\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fPlugInReadKey\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fSaveForm\" | i18n }}</li>\n          </ol>\n          <div class=\"row\">\n            <div class=\"form-group col-6\">\n              <label for=\"name\">{{ \"name\" | i18n }}</label>\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"Name\"\n                class=\"form-control\"\n                [(ngModel)]=\"name\"\n                [disabled]=\"!keyIdAvailable\"\n              />\n            </div>\n          </div>\n          <button\n            type=\"button\"\n            (click)=\"readKey()\"\n            class=\"btn btn-outline-secondary mr-2\"\n            [disabled]=\"readKeyBtn.loading || webAuthnListening || !keyIdAvailable\"\n            #readKeyBtn\n            [appApiAction]=\"challengePromise\"\n          >\n            {{ \"readKey\" | i18n }}\n          </button>\n          <ng-container *ngIf=\"readKeyBtn.loading\">\n            <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n          </ng-container>\n          <ng-container *ngIf=\"!readKeyBtn.loading\">\n            <ng-container *ngIf=\"webAuthnListening\">\n              <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fWaiting\" | i18n }}...\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnResponse\">\n              <i class=\"bwi bwi-check-circle text-success\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fClickSave\" | i18n }}\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnError\">\n              <i class=\"bwi bwi-exclamation-triangle text-danger\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fProblemReadingTryAgain\" | i18n }}\n            </ng-container>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            [disabled]=\"form.loading || !webAuthnResponse\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              *ngIf=\"form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!form.loading\">{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"disableBtn.loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"@bitwarden/common/models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"@bitwarden/common/models/request/updateTwoFactorWebAuthnRequest\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"@bitwarden/common/models/response/twoFactorWebAuthnResponse\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\ninterface Key {\n  id: number;\n  name: string;\n  configured: boolean;\n  migrated?: boolean;\n  removePromise: Promise<TwoFactorWebAuthnResponse> | null;\n}\n\n@Component({\n  selector: \"app-two-factor-webauthn\",\n  templateUrl: \"two-factor-webauthn.component.html\",\n})\nexport class TwoFactorWebAuthnComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.WebAuthn;\n  name: string;\n  keys: Key[];\n  keyIdAvailable: number = null;\n  keysConfiguredCount = 0;\n  webAuthnError: boolean;\n  webAuthnListening: boolean;\n  webAuthnResponse: PublicKeyCredential;\n  challengePromise: Promise<ChallengeResponse>;\n  formPromise: Promise<TwoFactorWebAuthnResponse>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorWebAuthnResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    if (this.webAuthnResponse == null || this.keyIdAvailable == null) {\n      // Should never happen.\n      return Promise.reject();\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnRequest);\n    request.deviceResponse = this.webAuthnResponse;\n    request.id = this.keyIdAvailable;\n    request.name = this.name;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorWebAuthn(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  disable() {\n    return super.disable(this.formPromise);\n  }\n\n  async remove(key: Key) {\n    if (this.keysConfiguredCount <= 1 || key.removePromise != null) {\n      return;\n    }\n    const name = key.name != null ? key.name : this.i18nService.t(\"webAuthnkeyX\", key.id as any);\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeU2fConfirmation\"),\n      name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnDeleteRequest);\n    request.id = key.id;\n    try {\n      key.removePromise = this.apiService.deleteTwoFactorWebAuthn(request);\n      const response = await key.removePromise;\n      key.removePromise = null;\n      await this.processResponse(response);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async readKey() {\n    if (this.keyIdAvailable == null) {\n      return;\n    }\n    const request = await this.buildRequestModel(SecretVerificationRequest);\n    try {\n      this.challengePromise = this.apiService.getTwoFactorWebAuthnChallenge(request);\n      const challenge = await this.challengePromise;\n      this.readDevice(challenge);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private readDevice(webAuthnChallenge: ChallengeResponse) {\n    // eslint-disable-next-line\n    console.log(\"listening for key...\");\n    this.resetWebAuthn(true);\n\n    navigator.credentials\n      .create({\n        publicKey: webAuthnChallenge,\n      })\n      .then((data: PublicKeyCredential) => {\n        this.ngZone.run(() => {\n          this.webAuthnListening = false;\n          this.webAuthnResponse = data;\n        });\n      })\n      .catch((err) => {\n        // eslint-disable-next-line\n        console.error(err);\n        this.resetWebAuthn(false);\n        // TODO: Should we display the actual error?\n        this.webAuthnError = true;\n      });\n  }\n\n  private resetWebAuthn(listening = false) {\n    this.webAuthnResponse = null;\n    this.webAuthnError = false;\n    this.webAuthnListening = listening;\n  }\n\n  private processResponse(response: TwoFactorWebAuthnResponse) {\n    this.resetWebAuthn();\n    this.keys = [];\n    this.keyIdAvailable = null;\n    this.name = null;\n    this.keysConfiguredCount = 0;\n    for (let i = 1; i <= 5; i++) {\n      if (response.keys != null) {\n        const key = response.keys.filter((k) => k.id === i);\n        if (key.length > 0) {\n          this.keysConfiguredCount++;\n          this.keys.push({\n            id: i,\n            name: key[0].name,\n            configured: true,\n            migrated: key[0].migrated,\n            removePromise: null,\n          });\n          continue;\n        }\n      }\n      this.keys.push({ id: i, name: null, configured: false, removePromise: null });\n      if (this.keyIdAvailable == null) {\n        this.keyIdAvailable = i;\n      }\n    }\n    this.enabled = response.enabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorYubioOtpRequest extends SecretVerificationRequest {\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faYubiKeyTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faYubiKeyTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>YubiKey</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorYubikeyWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorYubikeySupportUsb\" | i18n }}</li>\n              <li>{{ \"twoFactorYubikeySupportMobile\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right mfaType3\" alt=\"YubiKey OTP security key logo\" />\n          <p>{{ \"twoFactorYubikeyAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorYubikeyPlugIn\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySelectKey\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeyTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySaveForm\" | i18n }}</li>\n          </ol>\n          <hr />\n          <div class=\"row\">\n            <div class=\"form-group col-6\" *ngFor=\"let k of keys; let i = index\">\n              <label for=\"key{{ i + 1 }}\">{{ \"yubikeyX\" | i18n: i + 1 }}</label>\n              <input\n                id=\"key{{ i + 1 }}\"\n                type=\"password\"\n                name=\"Key{{ i + 1 }}\"\n                class=\"form-control\"\n                [(ngModel)]=\"k.key\"\n                *ngIf=\"!k.existingKey\"\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"d-flex\" *ngIf=\"k.existingKey\">\n                <span class=\"mr-2\">{{ k.existingKey }}</span>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link text-danger ml-auto\"\n                  (click)=\"remove(k)\"\n                  appA11yTitle=\"{{ 'remove' | i18n }}\"\n                >\n                  <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <strong class=\"d-block mb-2\">{{ \"nfcSupport\" | i18n }}</strong>\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"nfc\" name=\"Nfc\" [(ngModel)]=\"nfc\" />\n            <label class=\"form-check-label\" for=\"nfc\">{{\n              \"twoFactorYubikeySupportsNfc\" | i18n\n            }}</label>\n          </div>\n          <small class=\"form-text text-muted\">{{ \"twoFactorYubikeySupportsNfcDesc\" | i18n }}</small>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"disableBtn.loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"@bitwarden/common/models/request/updateTwoFactorYubioOtpRequest\";\nimport { TwoFactorYubiKeyResponse } from \"@bitwarden/common/models/response/twoFactorYubiKeyResponse\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\ninterface Key {\n  key: string;\n  existingKey: string;\n}\n\n@Component({\n  selector: \"app-two-factor-yubikey\",\n  templateUrl: \"two-factor-yubikey.component.html\",\n})\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Yubikey;\n  keys: Key[];\n  nfc = false;\n\n  formPromise: Promise<TwoFactorYubiKeyResponse>;\n  disablePromise: Promise<unknown>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorYubiKeyResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    const request = await this.buildRequestModel(UpdateTwoFactorYubioOtpRequest);\n    request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\n    request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\n    request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\n    request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\n    request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\n    request.nfc = this.nfc;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorYubiKey(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"yubikeysUpdated\"));\n    });\n  }\n\n  disable() {\n    return super.disable(this.disablePromise);\n  }\n\n  remove(key: Key) {\n    key.existingKey = null;\n    key.key = null;\n  }\n\n  private processResponse(response: TwoFactorYubiKeyResponse) {\n    this.enabled = response.enabled;\n    this.keys = [\n      { key: response.key1, existingKey: this.padRight(response.key1) },\n      { key: response.key2, existingKey: this.padRight(response.key2) },\n      { key: response.key3, existingKey: this.padRight(response.key3) },\n      { key: response.key4, existingKey: this.padRight(response.key4) },\n      { key: response.key5, existingKey: this.padRight(response.key5) },\n    ];\n    this.nfc = response.nfc || !response.enabled;\n  }\n\n  private padRight(str: string, character = \"•\", size = 44) {\n    if (str == null || character == null || str.length >= size) {\n      return str;\n    }\n    const max = (size - str.length) / character.length;\n    for (let i = 0; i < max; i++) {\n      str += character;\n    }\n    return str;\n  }\n}\n","<div\n  class=\"tw-mb-4 tw-box-border tw-rounded tw-border tw-border-l-8 tw-border-solid tw-border-secondary-300 tw-bg-background-alt tw-py-3 tw-px-5 tw-leading-5 tw-text-main\"\n  [ngClass]=\"calloutClass\"\n>\n  <h3\n    class=\"tw-mt-0 tw-mb-2 tw-text-base tw-font-bold tw-uppercase\"\n    [ngClass]=\"headerClass\"\n    *ngIf=\"title\"\n  >\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\ntype CalloutTypes = \"success\" | \"info\" | \"warning\" | \"danger\";\n\nconst defaultIcon: Record<CalloutTypes, string> = {\n  success: \"bwi-check\",\n  info: \"bwi-info-circle\",\n  warning: \"bwi-exclamation-triangle\",\n  danger: \"bwi-error\",\n};\n\nconst defaultI18n: Partial<Record<CalloutTypes, string>> = {\n  warning: \"warning\",\n  danger: \"error\",\n};\n\n@Component({\n  selector: \"bit-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type: CalloutTypes = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() useAlertRole = false;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.icon ??= defaultIcon[this.type];\n    if (this.title == null && defaultI18n[this.type] != null) {\n      this.title = this.i18nService.t(defaultI18n[this.type]);\n    }\n  }\n\n  get calloutClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"tw-border-l-danger-500\";\n      case \"info\":\n        return \"tw-border-l-info-500\";\n      case \"success\":\n        return \"tw-border-l-success-500\";\n      case \"warning\":\n        return \"tw-border-l-warning-500\";\n    }\n  }\n\n  get headerClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"!tw-text-danger\";\n      case \"info\":\n        return \"!tw-text-info\";\n      case \"success\":\n        return \"!tw-text-success\";\n      case \"warning\":\n        return \"!tw-text-warning\";\n    }\n  }\n}\n","import { Directive, OnInit, TemplateRef, ViewContainerRef } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n/**\n * Hides the element if the user has premium.\n */\n@Directive({\n  selector: \"[appNotPremium]\",\n})\nexport class NotPremiumDirective implements OnInit {\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    const premium = await this.stateService.getCanAccessPremium();\n\n    if (premium) {\n      this.viewContainer.clear();\n    } else {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Component({\n  selector: \"app-premium-badge\",\n  template: `\n    <button type=\"button\" *appNotPremium bitBadge badgeType=\"success\" (click)=\"premiumRequired()\">\n      {{ \"premium\" | i18n }}\n    </button>\n  `,\n})\nexport class PremiumBadgeComponent {\n  constructor(private messagingService: MessagingService) {}\n\n  premiumRequired() {\n    this.messagingService.send(\"premiumRequired\");\n  }\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"twoStepLogin\" | i18n }}</h1>\n</div>\n<p *ngIf=\"!organizationId\">{{ \"twoStepLoginDesc\" | i18n }}</p>\n<p *ngIf=\"organizationId\">{{ \"twoStepLoginOrganizationDesc\" | i18n }}</p>\n<bit-callout type=\"warning\" *ngIf=\"!organizationId\">\n  <p>{{ \"twoStepLoginRecoveryWarning\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"recoveryCode()\">\n    {{ \"viewRecoveryCode\" | i18n }}\n  </button>\n</bit-callout>\n<h2 [ngClass]=\"{ 'mt-5': !organizationId }\">\n  {{ \"providers\" | i18n }}\n  <small *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-fw text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </small>\n</h2>\n<bit-callout type=\"warning\" *ngIf=\"showPolicyWarning\">\n  {{ \"twoStepLoginPolicyUserWarning\" | i18n }}\n</bit-callout>\n<ul class=\"list-group list-group-2fa\">\n  <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\">\n    <div class=\"logo-2fa d-flex justify-content-center\">\n      <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n    </div>\n    <div class=\"mx-4\">\n      <h3 class=\"mb-0\">\n        {{ p.name }}\n        <ng-container *ngIf=\"p.enabled\">\n          <i\n            class=\"bwi bwi-check text-success bwi-fw\"\n            title=\"{{ 'enabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"enabled\" | i18n }}</span>\n        </ng-container>\n        <app-premium-badge *ngIf=\"p.premium\"></app-premium-badge>\n      </h3>\n      {{ p.description }}\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        bitButton\n        buttonType=\"secondary\"\n        [disabled]=\"!canAccessPremium && p.premium\"\n        (click)=\"manage(p.type)\"\n      >\n        {{ \"manage\" | i18n }}\n      </button>\n    </div>\n  </li>\n</ul>\n<form *ngIf=\"!loading\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h2 class=\"mt-5 spaced-header\">\n        {{ \"deviceVerification\" | i18n }}\n      </h2>\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"enableDeviceVerification\"\n            name=\"enableDeviceVerification\"\n            disabled=\"{{ !isDeviceVerificationSectionEnabled }}\"\n            [(ngModel)]=\"enableDeviceVerification\"\n          />\n          <label class=\"form-check-label\" for=\"enableDeviceVerification\">\n            {{ \"enableDeviceVerification\" | i18n }}\n          </label>\n        </div>\n        <small class=\"form-text text-muted\">{{ \"deviceVerificationDesc\" | i18n }}</small>\n      </div>\n      <bit-submit-button [loading]=\"form.loading\" *ngIf=\"isDeviceVerificationSectionEnabled\">\n        {{ \"save\" | i18n }}\n      </bit-submit-button>\n    </div>\n  </div>\n</form>\n\n<ng-template #authenticatorTemplate></ng-template>\n<ng-template #recoveryTemplate></ng-template>\n<ng-template #duoTemplate></ng-template>\n<ng-template #emailTemplate></ng-template>\n<ng-template #yubikeyTemplate></ng-template>\n<ng-template #webAuthnTemplate></ng-template>\n","import { Component, OnInit, Type, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { DeviceVerificationRequest } from \"@bitwarden/common/models/request/deviceVerificationRequest\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { TwoFactorAuthenticatorComponent } from \"./two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"./two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"./two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"./two-factor-recovery.component\";\nimport { TwoFactorWebAuthnComponent } from \"./two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"./two-factor-yubikey.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"two-factor-setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorSetupComponent implements OnInit {\n  @ViewChild(\"recoveryTemplate\", { read: ViewContainerRef, static: true })\n  recoveryModalRef: ViewContainerRef;\n  @ViewChild(\"authenticatorTemplate\", { read: ViewContainerRef, static: true })\n  authenticatorModalRef: ViewContainerRef;\n  @ViewChild(\"yubikeyTemplate\", { read: ViewContainerRef, static: true })\n  yubikeyModalRef: ViewContainerRef;\n  @ViewChild(\"duoTemplate\", { read: ViewContainerRef, static: true }) duoModalRef: ViewContainerRef;\n  @ViewChild(\"emailTemplate\", { read: ViewContainerRef, static: true })\n  emailModalRef: ViewContainerRef;\n  @ViewChild(\"webAuthnTemplate\", { read: ViewContainerRef, static: true })\n  webAuthnModalRef: ViewContainerRef;\n\n  organizationId: string;\n  providers: any[] = [];\n  canAccessPremium: boolean;\n  showPolicyWarning = false;\n  loading = true;\n  enableDeviceVerification: boolean;\n  isDeviceVerificationSectionEnabled: boolean;\n  modal: ModalRef;\n  formPromise: Promise<any>;\n\n  constructor(\n    protected apiService: ApiService,\n    protected modalService: ModalService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private stateService: StateService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    try {\n      const deviceVerificationSettings = await this.apiService.getDeviceVerificationSettings();\n      this.isDeviceVerificationSectionEnabled =\n        deviceVerificationSettings.isDeviceVerificationSectionEnabled;\n      this.enableDeviceVerification = deviceVerificationSettings.unknownDeviceVerificationEnabled;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    for (const key in TwoFactorProviders) {\n      // eslint-disable-next-line\n      if (!TwoFactorProviders.hasOwnProperty(key)) {\n        continue;\n      }\n\n      const p = (TwoFactorProviders as any)[key];\n      if (this.filterProvider(p.type)) {\n        continue;\n      }\n\n      this.providers.push({\n        type: p.type,\n        name: p.name,\n        description: p.description,\n        enabled: false,\n        premium: p.premium,\n        sort: p.sort,\n      });\n    }\n\n    this.providers.sort((a: any, b: any) => a.sort - b.sort);\n    await this.load();\n  }\n\n  async load() {\n    this.loading = true;\n    const providerList = await this.getTwoFactorProviders();\n    providerList.data.forEach((p) => {\n      this.providers.forEach((p2) => {\n        if (p.type === p2.type) {\n          p2.enabled = p.enabled;\n        }\n      });\n    });\n    this.evaluatePolicies();\n    this.loading = false;\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.Authenticator: {\n        const authComp = await this.openModal(\n          this.authenticatorModalRef,\n          TwoFactorAuthenticatorComponent\n        );\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        authComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Yubikey: {\n        const yubiComp = await this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        yubiComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Duo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Duo);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Email: {\n        const emailComp = await this.openModal(this.emailModalRef, TwoFactorEmailComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        emailComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Email);\n        });\n        break;\n      }\n      case TwoFactorProviderType.WebAuthn: {\n        const webAuthnComp = await this.openModal(\n          this.webAuthnModalRef,\n          TwoFactorWebAuthnComponent\n        );\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        webAuthnComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.WebAuthn);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  recoveryCode() {\n    this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorProviders();\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type === TwoFactorProviderType.OrganizationDuo;\n  }\n\n  protected async openModal<T>(ref: ViewContainerRef, type: Type<T>): Promise<T> {\n    const [modal, childComponent] = await this.modalService.openViewRef(type, ref);\n    this.modal = modal;\n\n    return childComponent;\n  }\n\n  protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\n    if (!enabled && this.modal != null) {\n      this.modal.close();\n    }\n    this.providers.forEach((p) => {\n      if (p.type === type) {\n        p.enabled = enabled;\n      }\n    });\n    this.evaluatePolicies();\n  }\n\n  private async evaluatePolicies() {\n    if (this.organizationId == null && this.providers.filter((p) => p.enabled).length === 1) {\n      this.showPolicyWarning = await this.policyService.policyAppliesToUser(\n        PolicyType.TwoFactorAuthentication\n      );\n    } else {\n      this.showPolicyWarning = false;\n    }\n  }\n\n  async submit() {\n    try {\n      if (this.enableDeviceVerification) {\n        const email = await this.stateService.getEmail();\n        const confirmed = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\n            \"areYouSureYouWantToEnableDeviceVerificationTheVerificationCodeEmailsWillArriveAtX\",\n            email\n          ),\n          this.i18nService.t(\"deviceVerification\"),\n          this.i18nService.t(\"yes\"),\n          this.i18nService.t(\"no\"),\n          \"warning\"\n        );\n        if (!confirmed) {\n          return;\n        }\n      }\n\n      this.formPromise = this.apiService.putDeviceVerificationSettings(\n        new DeviceVerificationRequest(this.enableDeviceVerification)\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedDeviceVerification\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { TwoFactorDuoComponent } from \"../../settings/two-factor-duo.component\";\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from \"../../settings/two-factor-setup.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"../../settings/two-factor-setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n  constructor(\n    apiService: ApiService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService\n  ) {\n    super(\n      apiService,\n      modalService,\n      messagingService,\n      policyService,\n      stateService,\n      platformUtilsService,\n      i18nService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await super.ngOnInit();\n    });\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.OrganizationDuo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.type = TwoFactorProviderType.OrganizationDuo;\n        duoComp.organizationId = this.organizationId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type !== TwoFactorProviderType.OrganizationDuo;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SecureNoteType } from \"@bitwarden/common/enums/secureNoteType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CardView } from \"@bitwarden/common/models/view/cardView\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\nimport { IdentityView } from \"@bitwarden/common/models/view/identityView\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\nimport { LoginView } from \"@bitwarden/common/models/view/loginView\";\nimport { SecureNoteView } from \"@bitwarden/common/models/view/secureNoteView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n  @Output() onGenerateUsername = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders$: Observable<FolderView[]>;\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n\n  protected writeableCollections: CollectionView[];\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventService: EventService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: \"RuPay\", value: \"RuPay\" },\n      { name: i18nService.t(\"cardBrandMir\"), value: \"Mir\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership)) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders$ = this.folderService.folderViews$;\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generateUsername(): Promise<boolean> {\n    if (this.cipher.login?.username?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwriteUsernameConfirmation\"),\n        this.i18nService.t(\"overwriteUsername\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGenerateUsername.emit();\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (this.cipher.login?.password?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipherService.saveWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { FieldView } from \"@bitwarden/common/models/view/fieldView\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(private i18nService: I18nService, private eventService: EventService) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue = true;\n  @Input() falseValue = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","<ng-container>\n  <h3 class=\"mt-4\">{{ \"customFields\" | i18n }}</h3>\n  <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n    <div\n      role=\"group\"\n      class=\"row\"\n      cdkDrag\n      *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n      attr.aria-label=\"{{ f.name }}\"\n    >\n      <div class=\"col-5 form-group\">\n        <div class=\"d-flex\">\n          <label for=\"fieldName{{ i }}\">{{ \"name\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/custom-fields/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"fieldName{{ i }}\"\n          type=\"text\"\n          name=\"Field.Name{{ i }}\"\n          [(ngModel)]=\"f.name\"\n          class=\"form-control\"\n          appInputVerbatim\n          [disabled]=\"cipher.isDeleted || viewOnly\"\n        />\n      </div>\n      <div class=\"col-7 form-group\">\n        <label for=\"fieldValue{{ i }}\">{{ \"value\" | i18n }}</label>\n        <div class=\"d-flex align-items-center\">\n          <!-- Text -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Text\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              appInputVerbatim\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', 'Field')\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Hidden -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Hidden\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              type=\"{{ f.showValue ? 'text' : 'password' }}\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              class=\"form-control text-monospace\"\n              appInputVerbatim\n              autocomplete=\"new-password\"\n              [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.viewPassword && !f.newField)\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleFieldValue(f)\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n                >\n                </i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', f.type === fieldType.Hidden ? 'H_Field' : 'Field')\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Linked -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Linked\">\n            <select\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              class=\"form-control\"\n              [(ngModel)]=\"f.linkedId\"\n              *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            >\n              <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"flex-fill\">\n            <!-- Boolean -->\n            <input\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              type=\"checkbox\"\n              [(ngModel)]=\"f.value\"\n              *ngIf=\"f.type === fieldType.Boolean\"\n              appTrueFalseValue\n              trueValue=\"true\"\n              falseValue=\"false\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n          </div>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-danger ml-2\"\n            (click)=\"removeField(f)\"\n            appA11yTitle=\"{{ 'remove' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-muted cursor-move\"\n            appA11yTitle=\"{{ 'dragToSort' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-hamburger bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Add new custom field -->\n  <a\n    href=\"#\"\n    appStopClick\n    (click)=\"addField()\"\n    class=\"d-inline-block mb-2\"\n    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n  >\n    <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomField\" | i18n }}\n  </a>\n  <div class=\"row\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n    <div class=\"col-5\">\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" class=\"form-control\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n","import { Component, Input } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"@bitwarden/angular/components/add-edit-custom-fields.component\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  @Input() viewOnly: boolean;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  constructor(i18nService: I18nService, eventService: EventService) {\n    super(i18nService, eventService);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"cipherAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"cipherAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"cipher\">\n        <app-callout type=\"info\" *ngIf=\"allowOwnershipAssignment() && !allowPersonal\">\n          {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n        </app-callout>\n        <div class=\"row\" *ngIf=\"!editMode && !viewOnly\">\n          <div class=\"col-6 form-group\">\n            <label for=\"type\">{{ \"whatTypeOfItem\" | i18n }}</label>\n            <select\n              id=\"type\"\n              name=\"Type\"\n              [(ngModel)]=\"cipher.type\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted\"\n              appAutofocus\n            >\n              <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"cipher.name\"\n              required\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n          </div>\n          <div class=\"col-6 form-group\" *ngIf=\"!organization\">\n            <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n            <select\n              id=\"folder\"\n              name=\"FolderId\"\n              [(ngModel)]=\"cipher.folderId\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            >\n              <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n            </select>\n          </div>\n        </div>\n        <!-- Login -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginUsername\"\n                  class=\"form-control\"\n                  type=\"text\"\n                  name=\"Login.Username\"\n                  [(ngModel)]=\"cipher.login.username\"\n                  appInputVerbatim\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\" *ngIf=\"!cipher.isDeleted\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n                    (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-6 form-group\">\n              <div class=\"d-flex\">\n                <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n                <div class=\"ml-auto d-flex\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n                  <a\n                    href=\"#\"\n                    class=\"d-block mr-2 bwi-icon-above-input\"\n                    appStopClick\n                    appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                    (click)=\"generatePassword()\"\n                    *ngIf=\"cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-fw bwi-generate\" aria-hidden=\"true\"></i>\n                  </a>\n                  <a\n                    href=\"#\"\n                    class=\"d-block bwi-icon-above-input\"\n                    #checkPasswordBtn\n                    appStopClick\n                    appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                    (click)=\"checkPassword()\"\n                    [appApiAction]=\"checkPasswordPromise\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-check-circle\"\n                      [hidden]=\"checkPasswordBtn.loading\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-spinner bwi-spin\"\n                      aria-hidden=\"true\"\n                      [hidden]=\"!checkPasswordBtn.loading\"\n                      title=\"{{ 'loading' | i18n }}\"\n                    ></i>\n                  </a>\n                </div>\n              </div>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginPassword\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Login.Password\"\n                  [(ngModel)]=\"cipher.login.password\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePassword()\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                    (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"tw-flex tw-flex-row\">\n            <div class=\"tw-mb-4 tw-w-1/2\">\n              <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n              <input\n                id=\"loginTotp\"\n                type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n                name=\"Login.Totp\"\n                class=\"form-control text-monospace\"\n                [(ngModel)]=\"cipher.login.totp\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n              />\n            </div>\n            <div class=\"tw-mb-4 tw-ml-4 tw-flex tw-w-1/2 tw-items-end\" [ngClass]=\"{ low: totpLow }\">\n              <div\n                class=\"totp tw-flex tw-flex-row tw-items-center\"\n                *ngIf=\"!cipher.login.totp || !totpCode\"\n              >\n                <span class=\"totp-countdown\">\n                  <span class=\"totp-sec tw-text-muted\">15</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle-muted inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        opacity=\"0.25\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': 40 }\"\n                      ></circle>\n                      <circle\n                        class=\"totp-circle-muted outer\"\n                        opacity=\"0.25\"\n                        r=\"14\"\n                        cy=\"16\"\n                        cx=\"16\"\n                      ></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span\n                  class=\"totp-code tw-mr-3 tw-ml-2 tw-text-muted\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  >--- ---</span\n                >\n                <i class=\"bwi bwi-lg bwi-clone tw-text-muted\" aria-hidden=\"true\"></i>\n              </div>\n              <div class=\"tw-pb-2\" *ngIf=\"!cipher.login.totp || !totpCode\">\n                <app-premium-badge\n                  *ngIf=\"!organization && !cipher.organizationId\"\n                  class=\"ml-3\"\n                ></app-premium-badge>\n                <a\n                  href=\"#\"\n                  appStopClick\n                  bitBadge\n                  badgeType=\"primary\"\n                  class=\"tw-ml-4\"\n                  (click)=\"upgradeOrganization()\"\n                  *ngIf=\"\n                    (organization && !organization.useTotp) ||\n                    (!organization &&\n                      !canAccessPremium &&\n                      cipher.organizationId &&\n                      !cipher.organizationUseTotp)\n                  \"\n                >\n                  {{ \"upgrade\" | i18n }}\n                </a>\n              </div>\n              <div\n                *ngIf=\"cipher.login.totp && totpCode\"\n                class=\"totp tw-flex tw-flex-row tw-items-center\"\n              >\n                <span class=\"totp-countdown\">\n                  <span class=\"totp-sec\">{{ totpSec }}</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                      ></circle>\n                      <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span\n                  class=\"totp-code tw-mr-2 tw-ml-2 tw-mt-1\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  >{{ totpCodeFormatted }}</span\n                >\n                <button\n                  type=\"button\"\n                  class=\"tw-items-center tw-border-none tw-bg-transparent tw-text-primary-500\"\n                  appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n                  (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n                >\n                  <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <ng-container *ngIf=\"cipher.login.hasUris\">\n            <div\n              role=\"group\"\n              class=\"row\"\n              *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n              attr.aria-label=\"{{ 'uriPosition' | i18n: i + 1 }}\"\n            >\n              <div class=\"col-7 form-group\">\n                <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n                <div class=\"input-group\">\n                  <input\n                    class=\"form-control\"\n                    id=\"loginUri{{ i }}\"\n                    type=\"text\"\n                    name=\"Login.Uris[{{ i }}].Uri\"\n                    [(ngModel)]=\"u.uri\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                    placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                    appInputVerbatim\n                  />\n                  <div class=\"input-group-append\">\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'launch' | i18n }}\"\n                      (click)=\"launch(u)\"\n                      [disabled]=\"!u.canLaunch\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n                    </button>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n                      (click)=\"copy(u.uri, 'uri', 'URI')\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-5 form-group\">\n                <div class=\"d-flex\">\n                  <label for=\"loginUriMatch{{ i }}\">\n                    {{ \"matchDetection\" | i18n }}\n                  </label>\n                  <a\n                    class=\"ml-auto\"\n                    href=\"https://bitwarden.com/help/uri-match-detection/\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n                  >\n                    <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n                <div class=\"d-flex\">\n                  <select\n                    class=\"form-control overflow-hidden\"\n                    id=\"loginUriMatch{{ i }}\"\n                    name=\"Login.Uris[{{ i }}].Match\"\n                    [(ngModel)]=\"u.match\"\n                    (change)=\"loginUriMatchChanged(u)\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                  >\n                    <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">\n                      {{ o.name }}\n                    </option>\n                  </select>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-link text-danger ml-2\"\n                    (click)=\"removeUri(u)\"\n                    appA11yTitle=\"{{ 'remove' | i18n }}\"\n                    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n                  >\n                    <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n          <a\n            href=\"#\"\n            appStopClick\n            (click)=\"addUri()\"\n            class=\"d-inline-block mb-3\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n          </a>\n        </ng-container>\n        <!-- Card -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n              <input\n                id=\"cardCardholderName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.CardCardholderName\"\n                [(ngModel)]=\"cipher.card.cardholderName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n              <select\n                id=\"cardBrand\"\n                class=\"form-control\"\n                name=\"Card.Brand\"\n                [(ngModel)]=\"cipher.card.brand\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardNumber\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                  name=\"Card.Number\"\n                  [(ngModel)]=\"cipher.card.number\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardNumber()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{\n                        'bwi-eye': !showCardNumber,\n                        'bwi-eye-slash': showCardNumber\n                      }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n                    (click)=\"copy(cipher.card.number, 'number', 'Number')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n              <select\n                id=\"cardExpMonth\"\n                class=\"form-control\"\n                name=\"Card.ExpMonth\"\n                [(ngModel)]=\"cipher.card.expMonth\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                  {{ o.name }}\n                </option>\n              </select>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n              <input\n                id=\"cardExpYear\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.ExpYear\"\n                [(ngModel)]=\"cipher.card.expYear\"\n                placeholder=\"{{ 'ex' | i18n }} 2019\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardCode\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                  name=\"Card.Code\"\n                  [(ngModel)]=\"cipher.card.code\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardCode()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'securityCode' | i18n }}\"\n                    (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <!-- Identity -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n              <select\n                id=\"idTitle\"\n                class=\"form-control\"\n                name=\"Identity.Title\"\n                [(ngModel)]=\"cipher.identity.title\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                  {{ o.name }}\n                </option>\n              </select>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n              <input\n                id=\"idFirstName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.FirstName\"\n                [(ngModel)]=\"cipher.identity.firstName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n              <input\n                id=\"idMiddleName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.MiddleName\"\n                [(ngModel)]=\"cipher.identity.middleName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n              <input\n                id=\"idLastName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LastName\"\n                [(ngModel)]=\"cipher.identity.lastName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"idUsername\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Username\"\n                [(ngModel)]=\"cipher.identity.username\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n              <input\n                id=\"idCompany\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Company\"\n                [(ngModel)]=\"cipher.identity.company\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n              <input\n                id=\"idSsn\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.SSN\"\n                [(ngModel)]=\"cipher.identity.ssn\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n              <input\n                id=\"idPassportNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PassportNumber\"\n                [(ngModel)]=\"cipher.identity.passportNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n              <input\n                id=\"idLicenseNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LicenseNumber\"\n                [(ngModel)]=\"cipher.identity.licenseNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n              <input\n                id=\"idEmail\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"email\"\n                name=\"Identity.Email\"\n                [(ngModel)]=\"cipher.identity.email\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n              <input\n                id=\"idPhone\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"tel\"\n                name=\"Identity.Phone\"\n                [(ngModel)]=\"cipher.identity.phone\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n              <input\n                id=\"idAddress1\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address1\"\n                [(ngModel)]=\"cipher.identity.address1\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n              <input\n                id=\"idAddress2\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address2\"\n                [(ngModel)]=\"cipher.identity.address2\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n              <input\n                id=\"idAddress3\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address3\"\n                [(ngModel)]=\"cipher.identity.address3\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n              <input\n                id=\"idCity\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.City\"\n                [(ngModel)]=\"cipher.identity.city\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n              <input\n                id=\"idState\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.State\"\n                [(ngModel)]=\"cipher.identity.state\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n              <input\n                id=\"idPostalCode\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PostalCode\"\n                [(ngModel)]=\"cipher.identity.postalCode\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n              <input\n                id=\"idCountry\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Country\"\n                [(ngModel)]=\"cipher.identity.country\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n        </ng-container>\n        <div class=\"form-group\">\n          <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n          <textarea\n            id=\"notes\"\n            name=\"Notes\"\n            rows=\"6\"\n            [(ngModel)]=\"cipher.notes\"\n            [disabled]=\"cipher.isDeleted || viewOnly\"\n            class=\"form-control\"\n          ></textarea>\n        </div>\n        <app-vault-add-edit-custom-fields\n          [cipher]=\"cipher\"\n          [thisCipherType]=\"cipher.type\"\n          [viewOnly]=\"viewOnly\"\n          [copy]=\"copy.bind(this)\"\n        ></app-vault-add-edit-custom-fields>\n        <ng-container *ngIf=\"allowOwnershipAssignment()\">\n          <h3 class=\"mt-4\">{{ \"ownership\" | i18n }}</h3>\n          <div class=\"row\">\n            <div class=\"col-5\">\n              <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n              <select\n                id=\"organizationId\"\n                class=\"form-control\"\n                name=\"OrganizationId\"\n                [(ngModel)]=\"cipher.organizationId\"\n                (change)=\"organizationChanged()\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n          <h3 class=\"mt-4\">{{ \"collections\" | i18n }}</h3>\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <ng-container *ngIf=\"collections && collections.length\">\n            <div class=\"form-check\" *ngFor=\"let c of collections; let i = index\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"c.checked\"\n                id=\"collection-{{ i }}\"\n                name=\"Collection[{{ i }}].Checked\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n              <label class=\"form-check-label\" for=\"collection-{{ i }}\">{{ c.name }}</label>\n            </div>\n          </ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"editMode\">\n          <div class=\"small text-muted mt-4\">\n            <div>\n              <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n              {{ cipher.revisionDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"showRevisionDate\">\n              <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n              {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"hasPasswordHistory\">\n              <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n              <a href=\"#\" appStopClick (click)=\"viewHistory()\" title=\"{{ 'view' | i18n }}\">\n                {{ cipher.passwordHistory.length }}\n              </a>\n            </div>\n            <div class=\"ml-3\" *ngIf=\"viewingPasswordHistory\">\n              <div *ngFor=\"let ph of cipher.passwordHistory\">\n                {{ ph.lastUsedDate | date: \"short\" }} -\n                <span class=\"generated-wrapper text-monospace ml-2\">{{ ph.password }}</span>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"canUseReprompt\">\n          <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [ngModel]=\"reprompt\"\n              (change)=\"repromptChanged()\"\n              id=\"passwordPrompt\"\n              name=\"passwordPrompt\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n            <label class=\"form-check-label\" for=\"passwordPrompt\">{{\n              \"passwordPrompt\" | i18n\n            }}</label>\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (cipher?.isDeleted ? \"restore\" : \"save\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ (viewOnly ? \"close\" : \"cancel\") | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"cipher && !viewOnly\">\n          <button\n            *ngIf=\"!organization && !cipher.isDeleted\"\n            type=\"button\"\n            (click)=\"toggleFavorite()\"\n            class=\"btn btn-link\"\n            appA11yTitle=\"{{ (cipher.favorite ? 'unfavorite' : 'favorite') | i18n }}\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              [ngClass]=\"{ 'bwi-star-f': cipher.favorite, 'bwi-star': !cipher.favorite }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ (cipher.isDeleted ? 'permanentlyDelete' : 'delete') | i18n }}\"\n            *ngIf=\"editMode && !cloneMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/add-edit.component\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  canAccessPremium: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  showRevisionDate = false;\n  hasPasswordHistory = false;\n  viewingPasswordHistory = false;\n  viewOnly = false;\n\n  protected totpInterval: number;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    protected totpService: TotpService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected messagingService: MessagingService,\n    eventService: EventService,\n    protected policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n    this.showRevisionDate = this.cipher.passwordRevisionDisplayDate != null;\n    this.hasPasswordHistory = this.cipher.hasPasswordHistory;\n    this.cleanUp();\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (this.cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = window.setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n  }\n\n  toggleFavorite() {\n    this.cipher.favorite = !this.cipher.favorite;\n  }\n\n  launch(uri: LoginUriView) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (this.editMode) {\n      if (typeI18nKey === \"password\") {\n        this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n      } else if (typeI18nKey === \"securityCode\") {\n        this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n      } else if (aType === \"H_Field\") {\n        this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n      }\n    }\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      const options = (await this.passwordGenerationService.getOptions())[0];\n      this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\n    }\n    return confirmed;\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", {\n      organizationId: this.cipher.organizationId,\n    });\n  }\n\n  showGetPremium() {\n    if (this.canAccessPremium) {\n      return;\n    }\n    if (this.cipher.organizationUseTotp) {\n      this.upgradeOrganization();\n    } else {\n      this.premiumRequired();\n    }\n  }\n\n  viewHistory() {\n    this.viewingPasswordHistory = !this.viewingPasswordHistory;\n  }\n\n  protected cleanUp() {\n    if (this.totpInterval) {\n      window.clearInterval(this.totpInterval);\n    }\n  }\n\n  protected async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  protected allowOwnershipAssignment() {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherCreateRequest } from \"@bitwarden/common/models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"@bitwarden/common/models/request/cipherRequest\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../../vault/add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  organization: Organization;\n  originalCipher: Cipher = null;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    private apiService: ApiService,\n    messagingService: MessagingService,\n    eventService: EventService,\n    policyService: PolicyService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  protected allowOwnershipAssignment() {\n    if (\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    ) {\n      if (this.organization != null) {\n        return this.cloneMode && this.organization.canEditAnyCollection;\n      } else {\n        return !this.editMode || this.cloneMode;\n      }\n    }\n    return false;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    const data = new CipherData(response);\n    this.originalCipher = new Cipher(data);\n    return new Cipher(data);\n  }\n\n  protected encryptCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.encryptCipher();\n    }\n    return this.cipherService.encrypt(this.cipher, null, this.originalCipher);\n  }\n\n  protected async saveCipher(cipher: Cipher) {\n    if (!this.organization.canEditAnyCollection || cipher.organizationId == null) {\n      return super.saveCipher(cipher);\n    }\n    if (this.editMode && !this.cloneMode) {\n      const request = new CipherRequest(cipher);\n      return this.apiService.putCipherAdmin(this.cipherId, request);\n    } else {\n      const request = new CipherCreateRequest(cipher);\n      return this.apiService.postCipherAdmin(request);\n    }\n  }\n\n  protected async deleteCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher();\n    }\n    return this.cipher.isDeleted\n      ? this.apiService.deleteCipherAdmin(this.cipherId)\n      : this.apiService.putDeleteCipherAdmin(this.cipherId);\n  }\n}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { AddEditComponent as OrgAddEditComponent } from \"../../organizations/vault/add-edit.component\";\nimport { AddEditComponent } from \"../../vault/add-edit.component\";\n\n@Directive()\nexport class CipherReportComponent {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n\n  loading = false;\n  hasLoaded = false;\n  ciphers: CipherView[] = [];\n  organization: Organization;\n\n  constructor(\n    private modalService: ModalService,\n    protected messagingService: MessagingService,\n    public requiresPaid: boolean,\n    private stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async load() {\n    this.loading = true;\n    await this.setCiphers();\n    this.loading = false;\n    this.hasLoaded = true;\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (!(await this.repromptCipher(cipher))) {\n      return;\n    }\n\n    const type = this.organization != null ? OrgAddEditComponent : AddEditComponent;\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      type,\n      this.cipherAddEditModalRef,\n      (comp: OrgAddEditComponent | AddEditComponent) => {\n        if (this.organization != null) {\n          (comp as OrgAddEditComponent).organization = this.organization;\n          comp.organizationId = this.organization.id;\n        }\n\n        comp.cipherId = cipher == null ? null : cipher.id;\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n\n  protected async checkAccess(): Promise<boolean> {\n    if (this.organization != null) {\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      if (this.requiresPaid && !this.organization.useTotp) {\n        this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n        return false;\n      }\n    }\n    return true;\n  }\n\n  protected async setCiphers() {\n    this.ciphers = [];\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n  RuPay: \"card-ru-pay\",\n  Mir: \"card-mir\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"exposedPasswordsReport\" | i18n }}</h1>\n</div>\n<p>{{ \"exposedPasswordsReportDesc\" | i18n }}</p>\n<bit-submit-button [loading]=\"loading\" (click)=\"load()\">\n  {{ \"checkExposedPasswords\" | i18n }}\n</bit-submit-button>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noExposedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'exposedPasswordsFound' | i18n }}\" [useAlertRole]=\"true\">\n      {{ \"exposedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"exposedXTimes\" | i18n: (exposedPasswordMap.get(c.id) | number) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-exposed-passwords-report\",\n  templateUrl: \"exposed-passwords-report.component.html\",\n})\nexport class ExposedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  exposedPasswordMap = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  ngOnInit() {\n    this.checkAccess();\n  }\n\n  async load() {\n    if (await this.checkAccess()) {\n      super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const exposedPasswordCiphers: CipherView[] = [];\n    const promises: Promise<void>[] = [];\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const promise = this.auditService.passwordLeaked(c.login.password).then((exposedCount) => {\n        if (exposedCount > 0) {\n          exposedPasswordCiphers.push(c);\n          this.exposedPasswordMap.set(c.id, exposedCount);\n        }\n      });\n      promises.push(promise);\n    });\n    await Promise.all(promises);\n    this.ciphers = exposedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { ExposedPasswordsReportComponent as BaseExposedPasswordsReportComponent } from \"../../reports/pages/exposed-passwords-report.component\";\n\n@Component({\n  selector: \"app-org-exposed-passwords-report\",\n  templateUrl: \"../../reports/pages/exposed-passwords-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ExposedPasswordsReportComponent extends BaseExposedPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private organizationService: OrganizationService,\n    private route: ActivatedRoute,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      auditService,\n      modalService,\n      messagingService,\n      stateService,\n      passwordRepromptService\n    );\n  }\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await this.checkAccess();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"inactive2faReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"inactive2faReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noInactive2fa\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'inactive2faFound' | i18n }}\">\n      {{ \"inactive2faFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <a\n              bitBadge\n              href=\"{{ cipherDocs.get(c.id) }}\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              *ngIf=\"cipherDocs.has(c.id)\"\n            >\n              {{ \"instructions\" | i18n }}</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"inactive-two-factor-report.component.html\",\n})\nexport class InactiveTwoFactorReportComponent extends CipherReportComponent implements OnInit {\n  services = new Map<string, string>();\n  cipherDocs = new Map<string, string>();\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    try {\n      await this.load2fa();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (this.services.size > 0) {\n      const allCiphers = await this.getAllCiphers();\n      const inactive2faCiphers: CipherView[] = [];\n      const promises: Promise<void>[] = [];\n      const docs = new Map<string, string>();\n      allCiphers.forEach((c) => {\n        if (\n          c.type !== CipherType.Login ||\n          (c.login.totp != null && c.login.totp !== \"\") ||\n          !c.login.hasUris ||\n          c.isDeleted\n        ) {\n          return;\n        }\n        for (let i = 0; i < c.login.uris.length; i++) {\n          const u = c.login.uris[i];\n          if (u.uri != null && u.uri !== \"\") {\n            const uri = u.uri.replace(\"www.\", \"\");\n            const domain = Utils.getDomain(uri);\n            if (domain != null && this.services.has(domain)) {\n              if (this.services.get(domain) != null) {\n                docs.set(c.id, this.services.get(domain));\n              }\n              inactive2faCiphers.push(c);\n            }\n          }\n        }\n      });\n      await Promise.all(promises);\n      this.ciphers = inactive2faCiphers;\n      this.cipherDocs = docs;\n    }\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  private async load2fa() {\n    if (this.services.size > 0) {\n      return;\n    }\n    const response = await fetch(new Request(\"https://2fa.directory/api/v3/totp.json\"));\n    if (response.status !== 200) {\n      throw new Error();\n    }\n    const responseJson = await response.json();\n    for (const service of responseJson) {\n      const serviceData = service[1];\n      if (serviceData.domain == null) {\n        continue;\n      }\n      if (serviceData.documentation == null) {\n        continue;\n      }\n      if (serviceData[\"additional-domains\"] != null) {\n        for (const additionalDomain of serviceData[\"additional-domains\"]) {\n          this.services.set(additionalDomain, serviceData.documentation);\n        }\n      }\n      this.services.set(serviceData.domain, serviceData.documentation);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { InactiveTwoFactorReportComponent as BaseInactiveTwoFactorReportComponent } from \"../../reports/pages/inactive-two-factor-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"../../reports/pages/inactive-two-factor-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class InactiveTwoFactorReportComponent extends BaseInactiveTwoFactorReportComponent {\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      modalService,\n      messagingService,\n      stateService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"reusedPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"reusedPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noReusedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'reusedPasswordsFound' | i18n }}\">\n      {{ \"reusedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"reusedXTimes\" | i18n: passwordUseMap.get(c.login.password) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"reused-passwords-report.component.html\",\n})\nexport class ReusedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordUseMap: Map<string, number>;\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const ciphersWithPasswords: CipherView[] = [];\n    this.passwordUseMap = new Map<string, number>();\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      ciphersWithPasswords.push(c);\n      if (this.passwordUseMap.has(c.login.password)) {\n        this.passwordUseMap.set(c.login.password, this.passwordUseMap.get(c.login.password) + 1);\n      } else {\n        this.passwordUseMap.set(c.login.password, 1);\n      }\n    });\n    const reusedPasswordCiphers = ciphersWithPasswords.filter(\n      (c) =>\n        this.passwordUseMap.has(c.login.password) && this.passwordUseMap.get(c.login.password) > 1\n    );\n    this.ciphers = reusedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from an organization view\n    return true;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { ReusedPasswordsReportComponent as BaseReusedPasswordsReportComponent } from \"../../reports/pages/reused-passwords-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"../../reports/pages/reused-passwords-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ReusedPasswordsReportComponent extends BaseReusedPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, modalService, messagingService, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"container page-content\">\n  <ng-container *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"row\">\n      <div class=\"col-3\">\n        <div class=\"card mb-4\" *ngIf=\"organization.canAccessImportExport\">\n          <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n          <div class=\"list-group list-group-flush\">\n            <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"importData\" | i18n }}\n            </a>\n            <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"exportVault\" | i18n }}\n            </a>\n          </div>\n        </div>\n        <div class=\"card\" *ngIf=\"organization.canAccessReports\">\n          <div class=\"card-header d-flex\">\n            {{ \"reports\" | i18n }}\n            <div class=\"ml-auto\">\n              <a\n                href=\"#\"\n                appStopClick\n                bitBadge\n                *ngIf=\"!accessReports\"\n                (click)=\"upgradeOrganization()\"\n              >\n                {{ \"upgrade\" | i18n }}\n              </a>\n            </div>\n          </div>\n          <div class=\"list-group list-group-flush\">\n            <a\n              routerLink=\"exposed-passwords-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"exposedPasswordsReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"reused-passwords-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"reusedPasswordsReport\" | i18n }}\n            </a>\n            <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"weakPasswordsReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"unsecured-websites-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"unsecuredWebsitesReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"inactive-two-factor-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"inactive2faReport\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-9\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </ng-container>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-tools\",\n  templateUrl: \"tools.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ToolsComponent {\n  organization: Organization;\n  accessReports = false;\n  loading = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private messagingService: MessagingService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      this.accessReports = this.organization.useTotp;\n      this.loading = false;\n    });\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"unsecuredWebsitesReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"unsecuredWebsitesReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noUnsecuredWebsites\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'unsecuredWebsitesFound' | i18n }}\">\n      {{ \"unsecuredWebsitesFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"unsecured-websites-report.component.html\",\n})\nexport class UnsecuredWebsitesReportComponent extends CipherReportComponent implements OnInit {\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const unsecuredCiphers = allCiphers.filter((c) => {\n      if (c.type !== CipherType.Login || !c.login.hasUris || c.isDeleted) {\n        return false;\n      }\n      return c.login.uris.some((u) => u.uri != null && u.uri.indexOf(\"http://\") === 0);\n    });\n    this.ciphers = unsecuredCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { UnsecuredWebsitesReportComponent as BaseUnsecuredWebsitesReportComponent } from \"../../reports/pages/unsecured-websites-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"../../reports/pages/unsecured-websites-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class UnsecuredWebsitesReportComponent extends BaseUnsecuredWebsitesReportComponent {\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, modalService, messagingService, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"weakPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"weakPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noWeakPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'weakPasswordsFound' | i18n }}\">\n      {{ \"weakPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge [badgeType]=\"passwordStrengthMap.get(c.id)[1]\">\n              {{ passwordStrengthMap.get(c.id)[0] | i18n }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"weak-passwords-report.component.html\",\n})\nexport class WeakPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordStrengthMap = new Map<string, [string, string]>();\n\n  private passwordStrengthCache = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const weakPasswordCiphers: CipherView[] = [];\n    const isUserNameNotEmpty = (c: CipherView): boolean => {\n      return c.login.username != null && c.login.username.trim() !== \"\";\n    };\n    const getCacheKey = (c: CipherView): string => {\n      return c.login.password + \"_____\" + (isUserNameNotEmpty(c) ? c.login.username : \"\");\n    };\n\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const hasUserName = isUserNameNotEmpty(c);\n      const cacheKey = getCacheKey(c);\n      if (!this.passwordStrengthCache.has(cacheKey)) {\n        let userInput: string[] = [];\n        if (hasUserName) {\n          const atPosition = c.login.username.indexOf(\"@\");\n          if (atPosition > -1) {\n            userInput = userInput\n              .concat(\n                c.login.username\n                  .substr(0, atPosition)\n                  .trim()\n                  .toLowerCase()\n                  .split(/[^A-Za-z0-9]/)\n              )\n              .filter((i) => i.length >= 3);\n          } else {\n            userInput = c.login.username\n              .trim()\n              .toLowerCase()\n              .split(/[^A-Za-z0-9]/)\n              .filter((i) => i.length >= 3);\n          }\n        }\n        const result = this.passwordGenerationService.passwordStrength(\n          c.login.password,\n          userInput.length > 0 ? userInput : null\n        );\n        this.passwordStrengthCache.set(cacheKey, result.score);\n      }\n      const score = this.passwordStrengthCache.get(cacheKey);\n      if (score != null && score <= 2) {\n        this.passwordStrengthMap.set(c.id, this.scoreKey(score));\n        weakPasswordCiphers.push(c);\n      }\n    });\n    weakPasswordCiphers.sort((a, b) => {\n      return (\n        this.passwordStrengthCache.get(getCacheKey(a)) -\n        this.passwordStrengthCache.get(getCacheKey(b))\n      );\n    });\n    this.ciphers = weakPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n\n  private scoreKey(score: number): [string, string] {\n    switch (score) {\n      case 4:\n        return [\"strong\", \"success\"];\n      case 3:\n        return [\"good\", \"primary\"];\n      case 2:\n        return [\"weak\", \"warning\"];\n      default:\n        return [\"veryWeak\", \"danger\"];\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { WeakPasswordsReportComponent as BaseWeakPasswordsReportComponent } from \"../../reports/pages/weak-passwords-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"../../reports/pages/weak-passwords-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class WeakPasswordsReportComponent extends BaseWeakPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      passwordGenerationService,\n      modalService,\n      messagingService,\n      stateService,\n      passwordRepromptService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { GetOrgNameFromIdPipe } from \"./get-organization-name.pipe\";\n\n@NgModule({\n  declarations: [GetOrgNameFromIdPipe],\n  exports: [GetOrgNameFromIdPipe],\n})\nexport class PipesModule {}\n","import { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\n\nexport class VaultService {\n  calculateSearchBarLocalizationString(vaultFilter: VaultFilter): string {\n    if (vaultFilter.status === \"favorites\") {\n      return \"searchFavorites\";\n    }\n    if (vaultFilter.status === \"trash\") {\n      return \"searchTrash\";\n    }\n    if (vaultFilter.cipherType != null) {\n      return \"searchType\";\n    }\n    if (vaultFilter.selectedFolderId != null && vaultFilter.selectedFolderId != \"none\") {\n      return \"searchFolder\";\n    }\n    if (vaultFilter.selectedCollection) {\n      return \"searchCollection\";\n    }\n    if (vaultFilter.selectedOrganizationId != null) {\n      return \"searchOrganization\";\n    }\n    if (vaultFilter.myVaultOnly) {\n      return \"searchMyVault\";\n    }\n\n    return \"searchVault\";\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\nimport { LooseComponentsModule } from \"../../shared/loose-components.module\";\nimport { VaultFilterModule } from \"../vault-filter/vault-filter.module\";\n\nimport { PipesModule } from \"./pipes/pipes.module\";\nimport { VaultService } from \"./vault.service\";\n\n@NgModule({\n  imports: [SharedModule, VaultFilterModule, LooseComponentsModule, PipesModule],\n  exports: [SharedModule, VaultFilterModule, LooseComponentsModule, PipesModule],\n  providers: [\n    {\n      provide: VaultService,\n      useClass: VaultService,\n    },\n  ],\n})\nexport class VaultSharedModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { VaultFilterSharedModule } from \"../../../vault/vault-filter/shared/vault-filter-shared.module\";\n\nimport { VaultFilterComponent } from \"./vault-filter.component\";\n\n@NgModule({\n  imports: [VaultFilterSharedModule],\n  declarations: [VaultFilterComponent],\n  exports: [VaultFilterComponent],\n})\nexport class VaultFilterModule {}\n","import { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherStatus } from \"./cipher-status.model\";\n\nexport type VaultFilterFunction = (cipher: CipherView) => boolean;\n\nexport class VaultFilter {\n  cipherType?: CipherType;\n  selectedCollection = false; // This is needed because of how the \"Unassigned\" collection works. It has a null id.\n  selectedCollectionId?: string;\n  status?: CipherStatus;\n  selectedFolder = false; // This is needed because of how the \"No Folder\" folder works. It has a null id.\n  selectedFolderId?: string;\n  selectedOrganizationId?: string;\n  myVaultOnly = false;\n  refreshCollectionsAndFolders = false;\n\n  constructor(init?: Partial<VaultFilter>) {\n    Object.assign(this, init);\n  }\n\n  resetFilter() {\n    this.cipherType = null;\n    this.status = null;\n    this.selectedCollection = false;\n    this.selectedCollectionId = null;\n    this.selectedFolder = false;\n    this.selectedFolderId = null;\n  }\n\n  resetOrganization() {\n    this.myVaultOnly = false;\n    this.selectedOrganizationId = null;\n    this.resetFilter();\n  }\n\n  buildFilter(): VaultFilterFunction {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.status === \"favorites\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.favorite;\n      }\n      if (this.status === \"trash\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.cipherType != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.cipherType;\n      }\n      if (this.selectedFolder && this.selectedFolderId == null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId == null;\n      }\n      if (this.selectedFolder && this.selectedFolderId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId === this.selectedFolderId;\n      }\n      if (this.selectedCollection && this.selectedCollectionId == null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.organizationId != null &&\n          (cipher.collectionIds == null || cipher.collectionIds.length === 0);\n      }\n      if (this.selectedCollection && this.selectedCollectionId != null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.collectionIds != null && cipher.collectionIds.includes(this.selectedCollectionId);\n      }\n      if (this.selectedOrganizationId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === this.selectedOrganizationId;\n      }\n      if (this.myVaultOnly && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === null;\n      }\n      return cipherPassesFilter;\n    };\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n      this.fileDownloadService.download({\n        fileName: attachment.fileName,\n        blobData: decBuf,\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const encBuf = await EncArrayBuffer.fromResponse(response);\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"attachmentsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"attachmentsTitle\">\n          {{ \"attachments\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <table class=\"table table-hover table-list\" *ngIf=\"cipher && cipher.hasAttachments\">\n          <tbody>\n            <tr *ngFor=\"let a of cipher.attachments\">\n              <td class=\"table-list-icon\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"!a.downloading\" aria-hidden=\"true\"></i>\n                <i\n                  class=\"bwi bwi-spinner bwi-lg bwi-fw bwi-spin\"\n                  *ngIf=\"a.downloading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </td>\n              <td class=\"wrap\">\n                <div class=\"d-flex\">\n                  <a href=\"#\" appStopClick (click)=\"download(a)\">{{ a.fileName }}</a>\n                  <div *ngIf=\"showFixOldAttachments(a)\" class=\"ml-2\">\n                    <a\n                      href=\"https://bitwarden.com/help/attachments/#fixing-old-attachments\"\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      <i\n                        class=\"bwi bwi-exclamation-triangle text-warning\"\n                        title=\"{{ 'attachmentFixDesc' | i18n }}\"\n                        aria-hidden=\"true\"\n                      ></i>\n                      <span class=\"sr-only\">{{ \"attachmentFixDesc\" | i18n }}</span></a\n                    >\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-primary btn-sm m-0 py-0 px-2\"\n                      (click)=\"reupload(a)\"\n                      #reuploadBtn\n                      [appApiAction]=\"reuploadPromises[a.id]\"\n                      [disabled]=\"reuploadBtn.loading\"\n                    >\n                      {{ \"fix\" | i18n }}\n                    </button>\n                  </div>\n                </div>\n                <small>{{ a.sizeName }}</small>\n              </td>\n              <td class=\"table-list-options\" *ngIf=\"!viewOnly\">\n                <button\n                  class=\"btn btn-outline-danger\"\n                  type=\"button\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'delete' | i18n }}\"\n                  (click)=\"delete(a)\"\n                  #deleteBtn\n                  [appApiAction]=\"deletePromises[a.id]\"\n                  [disabled]=\"deleteBtn.loading\"\n                >\n                  <i\n                    class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                    [hidden]=\"deleteBtn.loading\"\n                    aria-hidden=\"true\"\n                  ></i>\n                  <i\n                    class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                    [hidden]=\"!deleteBtn.loading\"\n                    title=\"{{ 'loading' | i18n }}\"\n                    aria-hidden=\"true\"\n                  ></i>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div *ngIf=\"!viewOnly\">\n          <h3>{{ \"newAttachment\" | i18n }}</h3>\n          <label for=\"file\" class=\"sr-only\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n          <small class=\"form-text text-muted\">{{ \"maxFileSize\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.showFixOldAttachments(attachment)) {\n      await this.reuploadCipherAttachment(attachment, false);\n    }\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.cipher.organizationId == null;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"../../vault/attachments.component\";\n\n@Component({\n  selector: \"app-org-vault-attachments\",\n  templateUrl: \"../../vault/attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n  organization: Organization;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      stateService,\n      platformUtilsService,\n      apiService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.organization.canEditAnyCollection && this.showFixOldAttachments(attachment)) {\n      await super.reuploadCipherAttachment(attachment, true);\n    }\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(\n      this.cipherDomain,\n      file,\n      this.organization.canEditAnyCollection\n    );\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipherAttachment(attachmentId);\n    }\n    return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.organization.canEditAnyCollection;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Directive()\nexport class CiphersComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchText: string;\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"ellipsis\",\n})\nexport class EllipsisPipe implements PipeTransform {\n  transform(value: string, limit = 25, completeWords = false, ellipsis = \"...\") {\n    if (value.length <= limit) {\n      return value;\n    }\n    limit -= ellipsis.length;\n    if (completeWords && value.length > limit && value.indexOf(\" \") > 0) {\n      limit = value.substring(0, limit).lastIndexOf(\" \");\n    }\n    return value.substring(0, limit) + ellipsis;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-org-badge\",\n  templateUrl: \"organization-name-badge.component.html\",\n})\nexport class OrganizationNameBadgeComponent implements OnInit {\n  @Input() organizationName: string;\n  @Input() profileName: string;\n\n  @Output() onOrganizationClicked = new EventEmitter<string>();\n\n  color: string;\n  textColor: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit(): void {\n    if (this.organizationName == null || this.organizationName === \"\") {\n      this.organizationName = this.i18nService.t(\"me\");\n      this.color = Utils.stringToColor(this.profileName.toUpperCase());\n    }\n    if (this.color == null) {\n      this.color = Utils.stringToColor(this.organizationName.toUpperCase());\n    }\n    this.textColor = Utils.pickTextColorBasedOnBgColor(this.color);\n  }\n\n  emitOnOrganizationClicked() {\n    this.onOrganizationClicked.emit();\n  }\n}\n","<button\n  bitBadge\n  [style.color]=\"textColor\"\n  [style.background-color]=\"color\"\n  appA11yTitle=\"{{ organizationName }}\"\n  (click)=\"emitOnOrganizationClicked()\"\n>\n  {{ organizationName | ellipsis: 13 }}\n</button>\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Pipe({\n  name: \"orgNameFromId\",\n  pure: true,\n})\nexport class GetOrgNameFromIdPipe implements PipeTransform {\n  transform(value: string, organizations: Organization[]) {\n    const orgName = organizations.find((o) => o.id === value)?.name;\n    return orgName;\n  }\n}\n","<ng-container *ngIf=\"isPaging() ? pagedCiphers : ciphers as filteredCiphers\">\n  <table\n    class=\"table table-hover table-list table-ciphers\"\n    *ngIf=\"filteredCiphers.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of filteredCiphers\">\n        <td (click)=\"checkCipher(c)\" class=\"table-list-checkbox\">\n          <input type=\"checkbox\" [(ngModel)]=\"c.checked\" appStopProp />\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"table-list-icon\">\n          <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"reduced-lh wrap\">\n          <a\n            appStopProp\n            [routerLink]=\"[]\"\n            [queryParams]=\"{ itemId: c.id }\"\n            queryParamsHandling=\"merge\"\n            title=\"{{ 'editItem' | i18n }}\"\n            >{{ c.name }}</a\n          >\n          <ng-container *ngIf=\"c.hasAttachments\">\n            <i\n              class=\"bwi bwi-paperclip\"\n              appStopProp\n              title=\"{{ 'attachments' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            <ng-container *ngIf=\"showFixOldAttachments(c)\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-warning\"\n                appStopProp\n                title=\"{{ 'attachmentsNeedFix' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachmentsNeedFix\" | i18n }}</span>\n            </ng-container>\n          </ng-container>\n          <br />\n          <small appStopProp>{{ c.subTitle }}</small>\n        </td>\n        <td *ngIf=\"organizations.length > 0 && !organization\" class=\"tw-w-28\">\n          <app-org-badge\n            organizationName=\"{{ c.organizationId | orgNameFromId: organizations }}\"\n            profileName=\"{{ profileName }}\"\n            (onOrganizationClicked)=\"onOrganizationClicked(c.organizationId)\"\n          >\n          </app-org-badge>\n        </td>\n        <td class=\"table-list-options\">\n          <button\n            [bitMenuTriggerFor]=\"cipherOptions\"\n            class=\"tw-border-none tw-bg-transparent tw-text-main\"\n            type=\"button\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n          >\n            <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <bit-menu #cipherOptions>\n            <ng-container *ngIf=\"c.type === cipherType.Login && !c.isDeleted\">\n              <button bitMenuItem (click)=\"copy(c, c.login.username, 'username', 'Username')\">\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyUsername\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.password, 'password', 'Password')\"\n                *ngIf=\"c.viewPassword\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyPassword\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.totp, 'verificationCodeTotp', 'TOTP')\"\n                *ngIf=\"displayTotpCopyButton(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyVerificationCode\" | i18n }}\n              </button>\n              <button bitMenuItem *ngIf=\"c.login.canLaunch\" (click)=\"launch(c.login.launchUri)\">\n                <i class=\"bwi bwi-fw bwi-share-square\" aria-hidden=\"true\"></i>\n                {{ \"launch\" | i18n }}\n              </button>\n            </ng-container>\n            <button bitMenuItem (click)=\"attachments(c)\">\n              <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n              {{ \"attachments\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"((!organization && !c.organizationId) || organization) && !c.isDeleted\"\n              (click)=\"clone(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-files\" aria-hidden=\"true\"></i>\n              {{ \"clone\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"!organization && !c.organizationId && !c.isDeleted\"\n              (click)=\"share(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n              {{ \"moveToOrganization\" | i18n }}\n            </button>\n            <button bitMenuItem *ngIf=\"c.organizationId && !c.isDeleted\" (click)=\"collections(c)\">\n              <i class=\"bwi bwi-fw bwi-collection\" aria-hidden=\"true\"></i>\n              {{ \"collections\" | i18n }}\n            </button>\n            <button bitMenuItem *ngIf=\"c.organizationId && accessEvents\" (click)=\"events(c)\">\n              <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n              {{ \"eventLogs\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"restore(c)\" *ngIf=\"c.isDeleted\">\n              <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n              {{ \"restore\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"delete(c)\">\n              <span class=\"tw-text-danger\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ (c.isDeleted ? \"permanentlyDelete\" : \"delete\") | i18n }}\n              </span>\n            </button>\n          </bit-menu>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div class=\"no-items\" *ngIf=\"!filteredCiphers.length\">\n    <ng-container *ngIf=\"!loaded\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </ng-container>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button (click)=\"addCipher()\" class=\"btn btn-outline-primary\" *ngIf=\"showAddNew\">\n        <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n</ng-container>\n","import { Component, EventEmitter, Input, OnDestroy, Output } from \"@angular/core\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"@bitwarden/angular/components/ciphers.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nconst MaxCheckedCount = 500;\n\n@Component({\n  selector: \"app-vault-ciphers\",\n  templateUrl: \"ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnDestroy {\n  @Input() showAddNew = true;\n  @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\n  @Output() onShareClicked = new EventEmitter<CipherView>();\n  @Output() onCollectionsClicked = new EventEmitter<CipherView>();\n  @Output() onCloneClicked = new EventEmitter<CipherView>();\n  @Output() onOrganzationBadgeClicked = new EventEmitter<string>();\n\n  pagedCiphers: CipherView[] = [];\n  pageSize = 200;\n  cipherType = CipherType;\n  actionPromise: Promise<any>;\n  userHasPremiumAccess = false;\n  organizations: Organization[] = [];\n  profileName: string;\n\n  private didScroll = false;\n  private pagedCiphersCount = 0;\n  private refreshing = false;\n\n  constructor(\n    searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cipherService: CipherService,\n    protected eventService: EventService,\n    protected totpService: TotpService,\n    protected stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private tokenService: TokenService\n  ) {\n    super(searchService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  // load() is called after the page loads and the first sync has completed.\n  // Do not use ngOnInit() for anything that requires sync data.\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    await super.load(filter, deleted);\n    this.profileName = await this.tokenService.getName();\n    this.organizations = await this.organizationService.getAll();\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  loadMore() {\n    if (this.ciphers.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCiphers.length;\n    let pagedSize = this.pageSize;\n    if (this.refreshing && pagedLength === 0 && this.pagedCiphersCount > this.pageSize) {\n      pagedSize = this.pagedCiphersCount;\n    }\n    if (this.ciphers.length > pagedLength) {\n      this.pagedCiphers = this.pagedCiphers.concat(\n        this.ciphers.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCiphersCount = this.pagedCiphers.length;\n    this.didScroll = this.pagedCiphers.length > this.pageSize;\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter, this.deleted);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.ciphers.length > this.pageSize;\n  }\n\n  async resetPaging() {\n    this.pagedCiphers = [];\n    this.loadMore();\n  }\n\n  async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n    this.resetPaging();\n  }\n\n  launch(uri: string) {\n    this.platformUtilsService.launchUri(uri);\n  }\n\n  async attachments(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onAttachmentsClicked.emit(c);\n  }\n\n  async share(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onShareClicked.emit(c);\n  }\n\n  collections(c: CipherView) {\n    this.onCollectionsClicked.emit(c);\n  }\n\n  async clone(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onCloneClicked.emit(c);\n  }\n\n  async delete(c: CipherView): Promise<boolean> {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    if (this.actionPromise != null) {\n      return;\n    }\n    const permanent = c.isDeleted;\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        permanent ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(permanent ? \"permanentlyDeleteItem\" : \"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.deleteCipher(c.id, permanent);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(permanent ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async restore(c: CipherView): Promise<boolean> {\n    if (this.actionPromise != null || !c.isDeleted) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.cipherService.restoreWithServer(c.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.repromptCipher(cipher))\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (value === cipher.login.totp) {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n    const selectCount =\n      select && this.ciphers.length > MaxCheckedCount ? MaxCheckedCount : this.ciphers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkCipher(this.ciphers[i], select);\n    }\n  }\n\n  checkCipher(c: CipherView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  getSelected(): CipherView[] {\n    if (this.ciphers == null) {\n      return [];\n    }\n    return this.ciphers.filter((c) => !!(c as any).checked);\n  }\n\n  getSelectedIds(): string[] {\n    return this.getSelected().map((c) => c.id);\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (await this.repromptCipher(cipher)) {\n      super.selectCipher(cipher);\n    }\n  }\n\n  onOrganizationClicked(organizationId: string) {\n    this.onOrganzationBadgeClicked.emit(organizationId);\n  }\n\n  protected deleteCipher(id: string, permanent: boolean) {\n    return permanent\n      ? this.cipherService.deleteWithServer(id)\n      : this.cipherService.softDeleteWithServer(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return c.hasOldAttachments && c.organizationId == null;\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"../../vault/ciphers.component\";\n\n@Component({\n  selector: \"app-org-vault-ciphers\",\n  templateUrl: \"../../vault/ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent {\n  @Output() onEventsClicked = new EventEmitter<CipherView>();\n\n  organization: Organization;\n  accessEvents = false;\n\n  protected allCiphers: CipherView[] = [];\n\n  constructor(\n    searchService: SearchService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cipherService: CipherService,\n    eventService: EventService,\n    totpService: TotpService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService,\n    stateService: StateService,\n    organizationService: OrganizationService,\n    tokenService: TokenService,\n    private apiService: ApiService\n  ) {\n    super(\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cipherService,\n      eventService,\n      totpService,\n      stateService,\n      passwordRepromptService,\n      logService,\n      organizationService,\n      tokenService\n    );\n  }\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    if (this.organization.canEditAnyCollection) {\n      this.accessEvents = this.organization.useEvents;\n      this.allCiphers = await this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    } else {\n      this.allCiphers = (await this.cipherService.getAllDecrypted()).filter(\n        (c) => c.organizationId === this.organization.id\n      );\n    }\n    await this.searchService.indexCiphers(this.organization.id, this.allCiphers);\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    if (this.organization.canViewAllCollections) {\n      await super.applyFilter(filter);\n    } else {\n      const f = (c: CipherView) =>\n        c.organizationId === this.organization.id && (filter == null || filter(c));\n      await super.applyFilter(f);\n    }\n  }\n\n  async search(timeout: number = null) {\n    await super.search(timeout, this.allCiphers);\n  }\n  events(c: CipherView) {\n    this.onEventsClicked.emit(c);\n  }\n\n  protected deleteCipher(id: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher(id, this.deleted);\n    }\n    return this.deleted\n      ? this.apiService.deleteCipherAdmin(id)\n      : this.apiService.putDeleteCipherAdmin(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return this.organization.canEditAnyCollection && c.hasOldAttachments;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"collectionsTitle\">\n          {{ \"collections\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"collectionsDesc\" | i18n }}</p>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"@bitwarden/angular/components/collections.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherCollectionsRequest } from \"@bitwarden/common/models/request/cipherCollectionsRequest\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"../../vault/collections.component\";\n\n@Component({\n  selector: \"app-org-vault-collections\",\n  templateUrl: \"../../vault/collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  organization: Organization;\n\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private apiService: ApiService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n    this.allowSelectNone = true;\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canViewAllCollections) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected loadCipherCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCipherCollections();\n    }\n    return this.collectionIds;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected saveCollections() {\n    if (this.organization.canEditAnyCollection) {\n      const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\n      return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\n    } else {\n      return super.saveCollections();\n    }\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, Observable } from \"rxjs\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\nimport { VaultFilterService } from \"../services/vault-filter.service\";\n\n@Directive()\nexport class VaultFilterComponent implements OnInit {\n  @Input() activeFilter: VaultFilter = new VaultFilter();\n  @Input() hideFolders = false;\n  @Input() hideCollections = false;\n  @Input() hideFavorites = false;\n  @Input() hideTrash = false;\n  @Input() hideOrganizations = false;\n\n  @Output() onFilterChange = new EventEmitter<VaultFilter>();\n  @Output() onAddFolder = new EventEmitter<never>();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n\n  isLoaded = false;\n  collapsedFilterNodes: Set<string>;\n  organizations: Organization[];\n  activePersonalOwnershipPolicy: boolean;\n  activeSingleOrganizationPolicy: boolean;\n  collections: DynamicTreeNode<CollectionView>;\n  folders$: Observable<DynamicTreeNode<FolderView>>;\n\n  constructor(protected vaultFilterService: VaultFilterService) {}\n\n  get displayCollections() {\n    return this.collections?.fullList != null && this.collections.fullList.length > 0;\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.collapsedFilterNodes = await this.vaultFilterService.buildCollapsedFilterNodes();\n    this.organizations = await this.vaultFilterService.buildOrganizations();\n    if (this.organizations != null && this.organizations.length > 0) {\n      this.activePersonalOwnershipPolicy =\n        await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n      this.activeSingleOrganizationPolicy =\n        await this.vaultFilterService.checkForSingleOrganizationPolicy();\n    }\n    this.folders$ = await this.vaultFilterService.buildNestedFolders();\n    this.collections = await this.initCollections();\n    this.isLoaded = true;\n  }\n\n  // overwritten in web for organization vaults\n  async initCollections() {\n    return await this.vaultFilterService.buildCollections();\n  }\n\n  async toggleFilterNodeCollapseState(node: ITreeNodeObject) {\n    if (this.collapsedFilterNodes.has(node.id)) {\n      this.collapsedFilterNodes.delete(node.id);\n    } else {\n      this.collapsedFilterNodes.add(node.id);\n    }\n    await this.vaultFilterService.storeCollapsedFilterNodes(this.collapsedFilterNodes);\n  }\n\n  async applyFilter(filter: VaultFilter) {\n    if (filter.refreshCollectionsAndFolders) {\n      await this.reloadCollectionsAndFolders(filter);\n      filter = await this.pruneInvalidatedFilterSelections(filter);\n    }\n    this.onFilterChange.emit(filter);\n  }\n\n  async reloadCollectionsAndFolders(filter: VaultFilter) {\n    this.folders$ = await this.vaultFilterService.buildNestedFolders(filter.selectedOrganizationId);\n    this.collections = filter.myVaultOnly\n      ? null\n      : await this.vaultFilterService.buildCollections(filter.selectedOrganizationId);\n  }\n\n  async reloadOrganizations() {\n    this.organizations = await this.vaultFilterService.buildOrganizations();\n    this.activePersonalOwnershipPolicy =\n      await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n    this.activeSingleOrganizationPolicy =\n      await this.vaultFilterService.checkForSingleOrganizationPolicy();\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  protected async pruneInvalidatedFilterSelections(filter: VaultFilter): Promise<VaultFilter> {\n    filter = await this.pruneInvalidFolderSelection(filter);\n    filter = this.pruneInvalidCollectionSelection(filter);\n    return filter;\n  }\n\n  protected async pruneInvalidFolderSelection(filter: VaultFilter): Promise<VaultFilter> {\n    if (\n      filter.selectedFolder &&\n      !(await firstValueFrom(this.folders$))?.hasId(filter.selectedFolderId)\n    ) {\n      filter.selectedFolder = false;\n      filter.selectedFolderId = null;\n    }\n    return filter;\n  }\n\n  protected pruneInvalidCollectionSelection(filter: VaultFilter): VaultFilter {\n    if (\n      filter.myVaultOnly ||\n      (filter.selectedCollection &&\n        filter.selectedCollectionId != null &&\n        !this.collections?.hasId(filter.selectedCollectionId))\n    ) {\n      filter.selectedCollection = false;\n      filter.selectedCollectionId = null;\n    }\n    return filter;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class CollectionFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() collectionNodes: DynamicTreeNode<CollectionView>;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  readonly collectionsGrouping: TopLevelTreeNode = {\n    id: \"collections\",\n    name: \"collections\",\n  };\n\n  get collections() {\n    return this.collectionNodes?.fullList;\n  }\n\n  get nestedCollections() {\n    return this.collectionNodes?.nestedList;\n  }\n\n  get show() {\n    return !this.hide && this.collections != null && this.collections.length > 0;\n  }\n\n  isCollapsed(node: ITreeNodeObject) {\n    return this.collapsedFilterNodes.has(node.id);\n  }\n\n  applyFilter(collection: CollectionView) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.selectedCollection = true;\n    this.activeFilter.selectedCollectionId = collection.id;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  async toggleCollapse(node: ITreeNodeObject) {\n    this.onNodeCollapseStateChange.emit(node);\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <div class=\"filter-heading\">\n    <button\n      (click)=\"toggleCollapse(collectionsGrouping)\"\n      [attr.aria-expanded]=\"!isCollapsed(collectionsGrouping)\"\n      aria-controls=\"collection-filters\"\n      title=\"{{ 'toggleCollapse' | i18n }}\"\n      class=\"toggle-button\"\n    >\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-angle-right': isCollapsed(collectionsGrouping),\n          'bwi-angle-down': !isCollapsed(collectionsGrouping)\n        }\"\n        aria-hidden=\"true\"\n      ></i>\n    </button>\n    <h3 class=\"filter-title\">&nbsp;{{ collectionsGrouping.name | i18n }}</h3>\n  </div>\n  <ul id=\"collection-filters\" *ngIf=\"!isCollapsed(collectionsGrouping)\" class=\"filter-options\">\n    <ng-template #recursiveCollections let-collections>\n      <li\n        *ngFor=\"let c of collections\"\n        [ngClass]=\"{\n          active: c.node.id === activeFilter.selectedCollectionId && activeFilter.selectedCollection\n        }\"\n        class=\"filter-option\"\n      >\n        <span class=\"filter-buttons\">\n          <button\n            class=\"toggle-button\"\n            *ngIf=\"c.children.length\"\n            (click)=\"toggleCollapse(c.node)\"\n            title=\"{{ 'toggleCollapse' | i18n }}\"\n            [attr.aria-expanded]=\"!isCollapsed(c.node)\"\n            [attr.aria-controls]=\"c.node.name + '_children'\"\n          >\n            <i\n              class=\"bwi bwi-fw\"\n              [ngClass]=\"{\n                'bwi-angle-right': isCollapsed(c.node),\n                'bwi-angle-down': !isCollapsed(c.node)\n              }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button class=\"filter-button\" (click)=\"applyFilter(c.node)\">\n            <i\n              *ngIf=\"c.children.length === 0\"\n              class=\"bwi bwi-collection bwi-fw\"\n              aria-hidden=\"true\"\n            ></i\n            >&nbsp;{{ c.node.name }}\n          </button>\n        </span>\n        <ul\n          [id]=\"c.node.name + '_children'\"\n          class=\"nested-filter-options\"\n          *ngIf=\"c.children.length && !isCollapsed(c.node)\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: c.children }\"\n          >\n          </ng-container>\n        </ul>\n      </li>\n    </ng-template>\n    <ng-container\n      *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: nestedCollections }\"\n    >\n    </ng-container>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { CollectionFilterComponent as BaseCollectionFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/collection-filter.component\";\n\n@Component({\n  selector: \"app-collection-filter\",\n  templateUrl: \"collection-filter.component.html\",\n})\nexport class CollectionFilterComponent extends BaseCollectionFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class FolderFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() folderNodes: DynamicTreeNode<FolderView>;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n  @Output() onAddFolder = new EventEmitter();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n\n  get folders() {\n    return this.folderNodes?.fullList;\n  }\n\n  get nestedFolders() {\n    return this.folderNodes?.nestedList;\n  }\n\n  readonly foldersGrouping: TopLevelTreeNode = {\n    id: \"folders\",\n    name: \"folders\",\n  };\n\n  applyFilter(folder: FolderView) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.selectedFolder = true;\n    this.activeFilter.selectedFolderId = folder.id;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  isCollapsed(node: ITreeNodeObject) {\n    return this.collapsedFilterNodes.has(node.id);\n  }\n\n  async toggleCollapse(node: ITreeNodeObject) {\n    this.onNodeCollapseStateChange.emit(node);\n  }\n}\n","<ng-container *ngIf=\"!hide\">\n  <div class=\"filter-heading\">\n    <button\n      class=\"toggle-button\"\n      (click)=\"toggleCollapse(foldersGrouping)\"\n      [attr.aria-expanded]=\"!isCollapsed(foldersGrouping)\"\n      aria-controls=\"folder-filters\"\n      title=\"{{ 'toggleCollapse' | i18n }}\"\n    >\n      <i\n        class=\"bwi bwi-fw\"\n        aria-hidden=\"true\"\n        [ngClass]=\"{\n          'bwi-angle-right': isCollapsed(foldersGrouping),\n          'bwi-angle-down': !isCollapsed(foldersGrouping)\n        }\"\n      ></i>\n    </button>\n    <h3 class=\"filter-title\">&nbsp;{{ \"folders\" | i18n }}</h3>\n    <button\n      class=\"text-muted ml-auto add-button\"\n      (click)=\"addFolder()\"\n      appA11yTitle=\"{{ 'addFolder' | i18n }}\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n  <ul id=\"folder-filters\" *ngIf=\"!isCollapsed(foldersGrouping)\" class=\"filter-options\">\n    <ng-template #recursiveFolders let-folders>\n      <li\n        *ngFor=\"let f of folders\"\n        [ngClass]=\"{\n          active: f.node.id === activeFilter.selectedFolderId && activeFilter.selectedFolder\n        }\"\n        class=\"filter-option\"\n      >\n        <span class=\"filter-buttons\">\n          <button\n            *ngIf=\"f.children.length\"\n            title=\"{{ 'toggleCollapse' | i18n }}\"\n            (click)=\"toggleCollapse(f.node)\"\n            [attr.aria-expanded]=\"!isCollapsed(f.node)\"\n            [attr.aria-controls]=\"f.node.name + '_children'\"\n            class=\"toggle-button\"\n          >\n            <i\n              class=\"bwi bwi-fw\"\n              [ngClass]=\"{\n                'bwi-angle-right': isCollapsed(f.node),\n                'bwi-angle-down': !isCollapsed(f.node)\n              }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button class=\"filter-button\" (click)=\"applyFilter(f.node)\">\n            <i *ngIf=\"f.children.length === 0\" class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i\n            >&nbsp;{{ f.node.name }}\n          </button>\n          <button\n            class=\"edit-button\"\n            (click)=\"editFolder(f.node)\"\n            appA11yTitle=\"{{ 'editFolder' | i18n }}\"\n            *ngIf=\"f.node.id\"\n          >\n            <i class=\"bwi bwi-pencil bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </span>\n        <ul\n          [id]=\"f.node.name + '_children'\"\n          class=\"nested-filter-options\"\n          *ngIf=\"f.children.length && !isCollapsed(f.node)\"\n        >\n          <ng-container *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: f.children }\">\n          </ng-container>\n        </ul>\n      </li>\n    </ng-template>\n    <ng-container\n      *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: nestedFolders }\"\n    ></ng-container>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { FolderFilterComponent as BaseFolderFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/folder-filter.component\";\n\n@Component({\n  selector: \"app-folder-filter\",\n  templateUrl: \"folder-filter.component.html\",\n})\nexport class FolderFilterComponent extends BaseFolderFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherStatus } from \"../models/cipher-status.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class StatusFilterComponent {\n  @Input() hideFavorites = false;\n  @Input() hideTrash = false;\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n  @Input() activeFilter: VaultFilter;\n\n  get show() {\n    return !(this.hideFavorites && this.hideTrash);\n  }\n\n  applyFilter(cipherStatus: CipherStatus) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.status = cipherStatus;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <ul class=\"filter-options\">\n    <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.status === 'all' }\">\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('all')\">\n          <i class=\"bwi bwi-fw bwi-filter\" aria-hidden=\"true\"></i>&nbsp;{{ \"allItems\" | i18n }}\n        </button>\n      </span>\n    </li>\n    <li\n      *ngIf=\"!hideFavorites\"\n      class=\"filter-option\"\n      [ngClass]=\"{ active: activeFilter.status === 'favorites' }\"\n    >\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('favorites')\">\n          <i class=\"bwi bwi-fw bwi-star\" aria-hidden=\"true\"></i>&nbsp;{{ \"favorites\" | i18n }}\n        </button>\n      </span>\n    </li>\n    <li\n      *ngIf=\"!hideTrash\"\n      class=\"filter-option\"\n      [ngClass]=\"{ active: activeFilter.status === 'trash' }\"\n    >\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('trash')\">\n          <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>&nbsp;{{ \"trash\" | i18n }}\n        </button>\n      </span>\n    </li>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { StatusFilterComponent as BaseStatusFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/status-filter.component\";\n\n@Component({\n  selector: \"app-status-filter\",\n  templateUrl: \"status-filter.component.html\",\n})\nexport class StatusFilterComponent extends BaseStatusFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\n\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class TypeFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() selectedCipherType: CipherType = null;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  readonly typesNode: TopLevelTreeNode = {\n    id: \"types\",\n    name: \"types\",\n  };\n\n  cipherTypeEnum = CipherType; // used in the template\n\n  get isCollapsed() {\n    return this.collapsedFilterNodes.has(this.typesNode.id);\n  }\n\n  applyFilter(cipherType: CipherType) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.cipherType = cipherType;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  async toggleCollapse() {\n    this.onNodeCollapseStateChange.emit(this.typesNode);\n  }\n}\n","<div class=\"filter-heading\">\n  <button\n    class=\"toggle-button\"\n    [attr.aria-expanded]=\"!isCollapsed\"\n    aria-controls=\"type-filters\"\n    (click)=\"toggleCollapse()\"\n    title=\"{{ 'toggleCollapse' | i18n }}\"\n  >\n    <i\n      class=\"bwi bwi-fw\"\n      aria-hidden=\"true\"\n      [ngClass]=\"{\n        'bwi-angle-right': isCollapsed,\n        'bwi-angle-down': !isCollapsed\n      }\"\n    ></i>\n  </button>\n  <h3>&nbsp;{{ \"types\" | i18n }}</h3>\n</div>\n<ul id=\"type-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Login }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Login)\">\n        <i class=\"bwi bwi-fw bwi-globe\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeLogin\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Card }\">\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Card)\">\n        <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeCard\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Identity }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Identity)\">\n        <i class=\"bwi bwi-fw bwi-id-card\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeIdentity\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.SecureNote }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.SecureNote)\">\n        <i class=\"bwi bwi-fw bwi-sticky-note\" aria-hidden=\"true\"></i>&nbsp;{{\n          \"typeSecureNote\" | i18n\n        }}\n      </button>\n    </span>\n  </li>\n</ul>\n","import { Component } from \"@angular/core\";\n\nimport { TypeFilterComponent as BaseTypeFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/type-filter.component\";\n\n@Component({\n  selector: \"app-type-filter\",\n  templateUrl: \"type-filter.component.html\",\n})\nexport class TypeFilterComponent extends BaseTypeFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\n\nimport { DisplayMode } from \"../models/display-mode\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class OrganizationFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() organizations: Organization[];\n  @Input() activeFilter: VaultFilter;\n  @Input() activePersonalOwnershipPolicy: boolean;\n  @Input() activeSingleOrganizationPolicy: boolean;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  get displayMode(): DisplayMode {\n    let displayMode: DisplayMode = \"organizationMember\";\n    if (this.organizations == null || this.organizations.length < 1) {\n      displayMode = \"noOrganizations\";\n    } else if (this.activePersonalOwnershipPolicy && !this.activeSingleOrganizationPolicy) {\n      displayMode = \"personalOwnershipPolicy\";\n    } else if (!this.activePersonalOwnershipPolicy && this.activeSingleOrganizationPolicy) {\n      displayMode = \"singleOrganizationPolicy\";\n    } else if (this.activePersonalOwnershipPolicy && this.activeSingleOrganizationPolicy) {\n      displayMode = \"singleOrganizationAndPersonalOwnershipPolicies\";\n    }\n\n    return displayMode;\n  }\n\n  get hasActiveFilter() {\n    return this.activeFilter.myVaultOnly || this.activeFilter.selectedOrganizationId != null;\n  }\n\n  readonly organizationGrouping: TopLevelTreeNode = {\n    id: \"vaults\",\n    name: \"allVaults\",\n  };\n\n  async applyOrganizationFilter(organization: Organization) {\n    this.activeFilter.selectedOrganizationId = organization.id;\n    this.activeFilter.myVaultOnly = false;\n    this.activeFilter.refreshCollectionsAndFolders = true;\n    this.applyFilter(this.activeFilter);\n  }\n\n  async applyMyVaultFilter() {\n    this.activeFilter.selectedOrganizationId = null;\n    this.activeFilter.myVaultOnly = true;\n    this.activeFilter.refreshCollectionsAndFolders = true;\n    this.applyFilter(this.activeFilter);\n  }\n\n  clearFilter() {\n    this.activeFilter.myVaultOnly = false;\n    this.activeFilter.selectedOrganizationId = null;\n    this.applyFilter(new VaultFilter(this.activeFilter));\n  }\n\n  private applyFilter(filter: VaultFilter) {\n    this.onFilterChange.emit(filter);\n  }\n\n  async toggleCollapse() {\n    this.onNodeCollapseStateChange.emit(this.organizationGrouping);\n  }\n\n  get isCollapsed() {\n    return this.collapsedFilterNodes.has(this.organizationGrouping.id);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalConfig } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-enroll-master-password-reset\",\n  templateUrl: \"enroll-master-password-reset.component.html\",\n})\nexport class EnrollMasterPasswordReset {\n  organization: Organization;\n\n  verification: Verification;\n  formPromise: Promise<void>;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private modalRef: ModalRef,\n    config: ModalConfig,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    this.organization = config.data.organization;\n  }\n\n  async submit() {\n    let toastStringRef = \"withdrawPasswordResetSuccess\";\n\n    this.formPromise = this.userVerificationService\n      .buildRequest(this.verification, OrganizationUserResetPasswordEnrollmentRequest)\n      .then(async (request) => {\n        // Set variables\n        let keyString: string = null;\n\n        // Retrieve Public Key\n        const orgKeys = await this.organizationApiService.getKeys(this.organization.id);\n        if (orgKeys == null) {\n          throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n        }\n\n        const publicKey = Utils.fromB64ToArray(orgKeys.publicKey);\n\n        // RSA Encrypt user's encKey.key with organization public key\n        const encKey = await this.cryptoService.getEncKey();\n        const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n        keyString = encryptedKey.encryptedString;\n        toastStringRef = \"enrollPasswordResetSuccess\";\n\n        // Create request and execute enrollment\n        request.resetPasswordKey = keyString;\n        await this.apiService.putOrganizationUserResetPasswordEnrollment(\n          this.organization.id,\n          this.organization.userId,\n          request\n        );\n\n        await this.syncService.fullSync(true);\n      });\n    try {\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(toastStringRef));\n      this.modalRef.close();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div\n  class=\"modal fade\"\n  role=\"dialog\"\n  aria-modal=\"true\"\n  aria-labelledby=\"enrollMasterPasswordResetTitle\"\n>\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"enrollMasterPasswordResetTitle\">\n          {{ \"enrollPasswordReset\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">\n          {{ \"resetPasswordEnrollmentWarning\" | i18n }}\n        </app-callout>\n        <app-user-verification [(ngModel)]=\"verification\" name=\"secret\"> </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <bit-submit-button [loading]=\"form.loading\">\n          {{ \"submit\" | i18n }}\n        </bit-submit-button>\n        <button\n          bitButton\n          buttonType=\"secondary\"\n          type=\"button\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span>\n            {{ \"cancel\" | i18n }}\n          </span>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { AfterContentInit, Component, Input } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-link-sso\",\n  templateUrl: \"link-sso.component.html\",\n})\nexport class LinkSsoComponent extends SsoComponent implements AfterContentInit {\n  @Input() organization: Organization;\n  returnUri = \"/settings/organizations\";\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    authService: AuthService,\n    router: Router,\n    route: ActivatedRoute,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    this.returnUri = \"/settings/organizations\";\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngAfterContentInit() {\n    this.identifier = this.organization.identifier;\n  }\n}\n","<a\n  class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main tw-no-underline hover:tw-bg-secondary-100 hover:tw-no-underline focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n  href=\"#\"\n  appStopClick\n  (click)=\"submit(returnUri, true)\"\n>\n  <i class=\"bwi bwi-fw bwi-link\" aria-hidden=\"true\"></i>\n  {{ \"linkSso\" | i18n }}\n</a>\n","<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted tw-m-2\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<div\n  *ngIf=\"loaded\"\n  class=\"tw-flex tw-min-w-[200px] tw-max-w-[300px] tw-flex-col\"\n  [appApiAction]=\"actionPromise\"\n>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && !organization.resetPasswordEnrolled\"\n    class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n    {{ \"enrollPasswordReset\" | i18n }}\n  </button>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && organization.resetPasswordEnrolled\"\n    class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n    {{ \"withdrawPasswordReset\" | i18n }}\n  </button>\n  <ng-container *ngIf=\"organization.useSso && organization.identifier\">\n    <button\n      *ngIf=\"organization.ssoBound; else linkSso\"\n      class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n      (click)=\"unlinkSso(organization)\"\n    >\n      <i class=\"bwi bwi-fw bwi-chain-broken\" aria-hidden=\"true\"></i>\n      {{ \"unlinkSso\" | i18n }}\n    </button>\n    <ng-template #linkSso>\n      <app-link-sso [organization]=\"organization\"> </app-link-sso>\n    </ng-template>\n  </ng-container>\n  <button\n    class=\"text-danger tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"leave(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n    {{ \"leave\" | i18n }}\n  </button>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\n\nimport { EnrollMasterPasswordReset } from \"../../../organizations/users/enroll-master-password-reset.component\";\n\n@Component({\n  selector: \"app-organization-options\",\n  templateUrl: \"organization-options.component.html\",\n})\nexport class OrganizationOptionsComponent {\n  actionPromise: Promise<void | boolean>;\n  policies: Policy[];\n  loaded = false;\n\n  @Input() organization: Organization;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private modalService: ModalService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.policies = await this.policyService.getAll(PolicyType.ResetPassword);\n    this.loaded = true;\n  }\n\n  allowEnrollmentChanges(org: Organization): boolean {\n    if (org.usePolicies && org.useResetPassword && org.hasPublicAndPrivateKeys) {\n      const policy = this.policies.find((p) => p.organizationId === org.id);\n      if (policy != null && policy.enabled) {\n        return org.resetPasswordEnrolled && policy.data.autoEnrollEnabled ? false : true;\n      }\n    }\n\n    return false;\n  }\n\n  showEnrolledStatus(org: Organization): boolean {\n    return (\n      org.useResetPassword &&\n      org.resetPasswordEnrolled &&\n      this.policies.some((p) => p.organizationId === org.id && p.enabled)\n    );\n  }\n\n  async unlinkSso(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"unlinkSsoConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.apiService.deleteSsoUser(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, \"Unlinked SSO\");\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async leave(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.organizationApiService.leave(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async toggleResetPasswordEnrollment(org: Organization) {\n    if (!this.organization.resetPasswordEnrolled) {\n      this.modalService.open(EnrollMasterPasswordReset, {\n        allowMultipleModals: true,\n        data: {\n          organization: org,\n        },\n      });\n    } else {\n      // Remove reset password\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = \"ignored\";\n      request.resetPasswordKey = null;\n      this.actionPromise = this.apiService.putOrganizationUserResetPasswordEnrollment(\n        this.organization.id,\n        this.organization.userId,\n        request\n      );\n      try {\n        await this.actionPromise;\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"withdrawPasswordResetSuccess\")\n        );\n        this.syncService.fullSync(true);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n}\n","<ng-container *ngIf=\"!hide\">\n  <ng-container [ngSwitch]=\"displayMode\">\n    <ng-container *ngSwitchCase=\"'noOrganizations'\">\n      <ul class=\"filter-options\">\n        <li class=\"filter-option active\">\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              [attr.aria-pressed]=\"activeFilter.myVaultOnly\"\n              appA11yTitle=\"{{ 'vault' | i18n }}: {{ 'myVault' | i18n }}\"\n            >\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"myVault\" | i18n }}\n            </button>\n          </span>\n        </li>\n        <li class=\"filter-option\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'personalOwnershipPolicy'\">\n      <div class=\"filter-heading\">\n        <button\n          (click)=\"toggleCollapse()\"\n          title=\"{{ 'toggleCollapse' | i18n }}\"\n          class=\"toggle-button\"\n          [attr.aria-expanded]=\"!isCollapsed\"\n          aria-controls=\"organization-filters\"\n        >\n          <i\n            class=\"bwi bwi-fw\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-right': isCollapsed,\n              'bwi-angle-down': !isCollapsed\n            }\"\n          ></i>\n        </button>\n        <button\n          class=\"filter-button\"\n          (click)=\"clearFilter()\"\n          [ngClass]=\"{ active: !hasActiveFilter }\"\n          appA11yTitle=\"{{ 'vault' | i18n }}: {{ organizationGrouping.name | i18n }}\"\n        >\n          &nbsp;{{ organizationGrouping.name | i18n }}\n        </button>\n      </div>\n      <ul id=\"organization-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n        <li\n          class=\"filter-option\"\n          *ngFor=\"let organization of organizations\"\n          [ngClass]=\"{ active: organization.id === activeFilter.selectedOrganizationId }\"\n        >\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              (click)=\"applyOrganizationFilter(organization)\"\n              [attr.aria-pressed]=\"activeFilter.selectedOrganizationId === organization.id\"\n              appA11yTitle=\"{{ 'vault' | i18n }}: {{ organization.name }}\"\n            >\n              <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n              {{ organization.name }}\n            </button>\n            <ng-container *ngIf=\"organization.id === activeFilter.selectedOrganizationId\">\n              <button [bitMenuTriggerFor]=\"orgMenu\" class=\"org-options ml-auto\">\n                <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu class=\"filter-organization-options\" #orgMenu>\n                <app-organization-options [organization]=\"organization\"></app-organization-options>\n              </bit-menu>\n            </ng-container>\n          </span>\n        </li>\n        <li class=\"filter-option\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'singleOrganizationAndPersonalOwnershipPolicies'\">\n      <div class=\"filter-heading\">\n        <button\n          class=\"filter-button active\"\n          [attr.aria-pressed]=\"activeFilter.selectedOrganizationId === organizations[0].id\"\n          appA11yTitle=\"{{ 'vault' | i18n }}: {{ organizations[0].name }}\"\n        >\n          <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n          {{ organizations[0].name }}\n        </button>\n      </div>\n    </ng-container>\n    <ng-container *ngSwitchDefault>\n      <div class=\"filter-heading\">\n        <button\n          class=\"toggle-button\"\n          title=\"{{ 'toggleCollapse' | i18n }}\"\n          (click)=\"toggleCollapse()\"\n          [attr.aria-expanded]=\"!isCollapsed\"\n          aria-controls=\"organization-filters\"\n        >\n          <i\n            class=\"bwi bwi-fw\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-right': isCollapsed,\n              'bwi-angle-down': !isCollapsed\n            }\"\n          ></i>\n        </button>\n        <button\n          class=\"filter-button\"\n          (click)=\"clearFilter()\"\n          [ngClass]=\"{ active: !hasActiveFilter }\"\n          appA11yTitle=\"{{ 'vault' | i18n }}: {{ organizationGrouping.name | i18n }}\"\n        >\n          &nbsp;{{ organizationGrouping.name | i18n }}\n        </button>\n      </div>\n      <ul id=\"organization-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n        <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.myVaultOnly }\">\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              (click)=\"applyMyVaultFilter()\"\n              appA11yTitle=\"{{ 'vault' | i18n }}: {{ 'myVault' | i18n }}\"\n              [attr.aria-pressed]=\"activeFilter.myVaultOnly\"\n            >\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"myVault\" | i18n }}\n            </button>\n          </span>\n        </li>\n        <li\n          class=\"filter-option\"\n          *ngFor=\"let organization of organizations\"\n          [ngClass]=\"{ active: organization.id === activeFilter.selectedOrganizationId }\"\n        >\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              [ngClass]=\"{ 'disabled-organization': !organization.enabled }\"\n              (click)=\"applyOrganizationFilter(organization)\"\n              appA11yTitle=\"{{ 'vault' | i18n }}: {{ organization.name }}\"\n            >\n              <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n              {{ organization.name }}\n            </button>\n            <span class=\"ml-auto\">\n              <i\n                *ngIf=\"!organization.enabled\"\n                class=\"org-options bwi bwi-fw bwi-exclamation-triangle text-danger\"\n                aria-label=\"{{ 'organizationIsDisabled' | i18n }}\"\n                appA11yTitle=\"{{ 'organizationIsDisabled' | i18n }}\"\n              ></i\n              ><button [bitMenuTriggerFor]=\"orgMenu\" class=\"org-options\">\n                <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu class=\"filter-organization-options\" #orgMenu>\n                <app-organization-options [organization]=\"organization\"></app-organization-options>\n              </bit-menu>\n            </span>\n          </span>\n        </li>\n        <li class=\"filter-option\" *ngIf=\"!(displayMode === 'singleOrganizationPolicy')\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n  </ng-container>\n  <hr />\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { OrganizationFilterComponent as BaseOrganizationFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/organization-filter.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-filter\",\n  templateUrl: \"organization-filter.component.html\",\n})\nexport class OrganizationFilterComponent extends BaseOrganizationFilterComponent {\n  displayText = \"allVaults\";\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {\n    super();\n  }\n\n  async applyOrganizationFilter(organization: Organization) {\n    if (organization.enabled) {\n      //proceed with default behaviour for enabled organizations\n      super.applyOrganizationFilter(organization);\n    } else {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"disabledOrganizationFilterError\")\n      );\n    }\n  }\n}\n","<div class=\"card vault-filters\">\n  <div class=\"container loading-spinner\" *ngIf=\"!isLoaded\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n  </div>\n  <div *ngIf=\"isLoaded\">\n    <div class=\"card-header d-flex\">\n      {{ \"filters\" | i18n }}\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/searching-vault/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"card-body\">\n      <input\n        type=\"search\"\n        placeholder=\"{{ (searchPlaceholder | i18n) || ('searchVault' | i18n) }}\"\n        id=\"search\"\n        class=\"form-control\"\n        [(ngModel)]=\"searchText\"\n        (input)=\"searchTextChanged()\"\n        autocomplete=\"off\"\n        appAutofocus\n      />\n      <app-organization-filter\n        [hide]=\"hideOrganizations\"\n        [activeFilter]=\"activeFilter\"\n        [collapsedFilterNodes]=\"collapsedFilterNodes\"\n        [organizations]=\"organizations\"\n        [activePersonalOwnershipPolicy]=\"activePersonalOwnershipPolicy\"\n        [activeSingleOrganizationPolicy]=\"activeSingleOrganizationPolicy\"\n        (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n        (onFilterChange)=\"applyFilter($event)\"\n      ></app-organization-filter>\n      <div class=\"filter\">\n        <app-status-filter\n          [hideFavorites]=\"hideFavorites\"\n          [hideTrash]=\"hideTrash\"\n          [activeFilter]=\"activeFilter\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-status-filter>\n      </div>\n      <div class=\"filter\">\n        <app-type-filter\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-type-filter>\n      </div>\n      <div class=\"filter\">\n        <app-folder-filter\n          [hide]=\"hideFolders\"\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          [folderNodes]=\"folders$ | async\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n          (onAddFolder)=\"addFolder()\"\n          (onEditFolder)=\"editFolder($event)\"\n        ></app-folder-filter>\n      </div>\n      <div class=\"filter\">\n        <app-collection-filter\n          [hide]=\"hideCollections\"\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          [collectionNodes]=\"collections\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-collection-filter>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { VaultFilterComponent as BaseVaultFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/vault-filter.component\";\n\nimport { VaultFilterService } from \"./shared/vault-filter.service\";\n\n@Component({\n  selector: \"./app-vault-filter\",\n  templateUrl: \"vault-filter.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VaultFilterComponent extends BaseVaultFilterComponent {\n  @Output() onSearchTextChanged = new EventEmitter<string>();\n\n  searchPlaceholder: string;\n  searchText = \"\";\n\n  constructor(protected vaultFilterService: VaultFilterService) {\n    // This empty constructor is required to provide the web vaultFilterService subclass to super()\n    // TODO: refactor this to use proper dependency injection\n    super(vaultFilterService);\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.vaultFilterService.collapsedFilterNodes$.subscribe((nodes) => {\n      this.collapsedFilterNodes = nodes;\n    });\n  }\n\n  searchTextChanged() {\n    this.onSearchTextChanged.emit(this.searchText);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { VaultFilterComponent as BaseVaultFilterComponent } from \"../../../vault/vault-filter/vault-filter.component\";\n\n@Component({\n  selector: \"app-organization-vault-filter\",\n  templateUrl: \"../../../vault/vault-filter/vault-filter.component.html\",\n})\nexport class VaultFilterComponent extends BaseVaultFilterComponent {\n  hideOrganizations = true;\n  hideFavorites = true;\n  hideFolders = true;\n\n  organization: Organization;\n\n  async initCollections() {\n    if (this.organization.canEditAnyCollection) {\n      return await this.vaultFilterService.buildAdminCollections(this.organization.id);\n    }\n    return await this.vaultFilterService.buildCollections(this.organization.id);\n  }\n\n  async reloadCollectionsAndFolders() {\n    this.collections = await this.initCollections();\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherBulkDeleteRequest } from \"@bitwarden/common/models/request/cipherBulkDeleteRequest\";\n\n@Component({\n  selector: \"app-vault-bulk-delete\",\n  templateUrl: \"bulk-delete.component.html\",\n})\nexport class BulkDeleteComponent {\n  @Input() cipherIds: string[] = [];\n  @Input() permanent = false;\n  @Input() organization: Organization;\n  @Output() onDeleted = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  async submit() {\n    if (!this.organization || !this.organization.canEditAnyCollection) {\n      await this.deleteCiphers();\n    } else {\n      await this.deleteCiphersAdmin();\n    }\n\n    await this.formPromise;\n\n    this.onDeleted.emit();\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(this.permanent ? \"permanentlyDeletedItems\" : \"deletedItems\")\n    );\n  }\n\n  private async deleteCiphers() {\n    if (this.permanent) {\n      this.formPromise = await this.cipherService.deleteManyWithServer(this.cipherIds);\n    } else {\n      this.formPromise = await this.cipherService.softDeleteManyWithServer(this.cipherIds);\n    }\n  }\n\n  private async deleteCiphersAdmin() {\n    const deleteRequest = new CipherBulkDeleteRequest(this.cipherIds, this.organization.id);\n    if (this.permanent) {\n      this.formPromise = await this.apiService.deleteManyCiphersAdmin(deleteRequest);\n    } else {\n      this.formPromise = await this.apiService.putDeleteManyCiphersAdmin(deleteRequest);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteSelectedTitle\">\n          {{ (permanent ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{\n          (permanent ? \"permanentlyDeleteSelectedItemsDesc\" : \"deleteSelectedItemsDesc\")\n            | i18n: cipherIds.length\n        }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-danger btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (permanent ? \"permanentlyDelete\" : \"delete\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"moveSelectedTitle\">\n          {{ \"moveSelected\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveSelectedItemsDesc\" | i18n: cipherIds.length }}</p>\n        <div class=\"form-group\">\n          <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n          <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"folderId\" class=\"form-control\">\n            <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\n@Component({\n  selector: \"app-vault-bulk-move\",\n  templateUrl: \"bulk-move.component.html\",\n})\nexport class BulkMoveComponent implements OnInit {\n  @Input() cipherIds: string[] = [];\n  @Output() onMoved = new EventEmitter();\n\n  folderId: string = null;\n  folders$: Observable<FolderView[]>;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService\n  ) {}\n\n  async ngOnInit() {\n    this.folders$ = this.folderService.folderViews$;\n    this.folderId = (await firstValueFrom(this.folders$))[0].id;\n  }\n\n  async submit() {\n    this.formPromise = this.cipherService.moveManyWithServer(this.cipherIds, this.folderId);\n    await this.formPromise;\n    this.onMoved.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"movedItems\"));\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-bulk-restore\",\n  templateUrl: \"bulk-restore.component.html\",\n})\nexport class BulkRestoreComponent {\n  @Input() cipherIds: string[] = [];\n  @Output() onRestored = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async submit() {\n    this.formPromise = this.cipherService.restoreManyWithServer(this.cipherIds);\n    await this.formPromise;\n    this.onRestored.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItems\"));\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"restoreSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"restoreSelectedTitle\">\n          {{ \"restoreSelected\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"restoreSelectedItemsDesc\" | i18n: cipherIds.length }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"restore\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedToOrgTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"moveSelectedToOrgTitle\">\n          {{ \"moveSelectedToOrg\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveManyToOrgDesc\" | i18n }}</p>\n        <p>\n          {{\n            \"moveSelectedItemsCountDesc\"\n              | i18n: this.ciphers.length:shareableCiphers.length:nonShareableCount\n          }}\n        </p>\n        <div class=\"form-group\">\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            class=\"form-control\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [disabled]=\"form.loading || !canSave\"\n          [ngClass]=\"{ loading: form.loading }\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-bulk-share\",\n  templateUrl: \"bulk-share.component.html\",\n})\nexport class BulkShareComponent implements OnInit {\n  @Input() ciphers: CipherView[] = [];\n  @Input() organizationId: string;\n  @Output() onShared = new EventEmitter();\n\n  nonShareableCount = 0;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n  shareableCiphers: CipherView[] = [];\n  formPromise: Promise<any>;\n\n  private writeableCollections: CollectionView[] = [];\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.shareableCiphers = this.ciphers.filter(\n      (c) => !c.hasOldAttachments && c.organizationId == null\n    );\n    this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.filter((c) => !c.readOnly);\n    this.organizations = await this.organizationService.getAll();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  filterCollections() {\n    this.selectAll(false);\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit() {\n    const checkedCollectionIds = this.collections\n      .filter((c) => (c as any).checked)\n      .map((c) => c.id);\n    try {\n      this.formPromise = this.cipherService.shareManyWithServer(\n        this.shareableCiphers,\n        this.organizationId,\n        checkedCollectionIds\n      );\n      await this.formPromise;\n      this.onShared.emit();\n      const orgName =\n        this.organizations.find((o) => o.id === this.organizationId)?.name ??\n        this.i18nService.t(\"organization\");\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"movedItemsToOrg\", orgName)\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n\n  get canSave() {\n    if (\n      this.shareableCiphers != null &&\n      this.shareableCiphers.length > 0 &&\n      this.collections != null\n    ) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"dropdown mr-2\" appListDropdown>\n  <button\n    class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n    type=\"button\"\n    id=\"bulkActionsButton\"\n    data-toggle=\"dropdown\"\n    aria-haspopup=\"true\"\n    aria-expanded=\"false\"\n    appA11yTitle=\"{{ 'options' | i18n }}\"\n  >\n    <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n  </button>\n  <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkMove()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i>\n      {{ \"moveSelected\" | i18n }}\n    </button>\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkShare()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n      {{ \"moveSelectedToOrg\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" (click)=\"bulkRestore()\" *ngIf=\"deleted && !organization\">\n      <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n      {{ \"restoreSelected\" | i18n }}\n    </button>\n    <button class=\"dropdown-item text-danger\" (click)=\"bulkDelete()\">\n      <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n      {{ (deleted ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n    </button>\n    <div class=\"dropdown-divider\"></div>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n      <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n      {{ \"selectAll\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n      <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n      {{ \"unselectAll\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-template #bulkDeleteTemplate></ng-template>\n<ng-template #bulkRestoreTemplate></ng-template>\n<ng-template #bulkMoveTemplate></ng-template>\n<ng-template #bulkShareTemplate></ng-template>\n","import { Component, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { BulkDeleteComponent } from \"./bulk-delete.component\";\nimport { BulkMoveComponent } from \"./bulk-move.component\";\nimport { BulkRestoreComponent } from \"./bulk-restore.component\";\nimport { BulkShareComponent } from \"./bulk-share.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\n\n@Component({\n  selector: \"app-vault-bulk-actions\",\n  templateUrl: \"bulk-actions.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class BulkActionsComponent {\n  @Input() ciphersComponent: CiphersComponent;\n  @Input() deleted: boolean;\n  @Input() organization: Organization;\n\n  @ViewChild(\"bulkDeleteTemplate\", { read: ViewContainerRef, static: true })\n  bulkDeleteModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRestoreTemplate\", { read: ViewContainerRef, static: true })\n  bulkRestoreModalRef: ViewContainerRef;\n  @ViewChild(\"bulkMoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkMoveModalRef: ViewContainerRef;\n  @ViewChild(\"bulkShareTemplate\", { read: ViewContainerRef, static: true })\n  bulkShareModalRef: ViewContainerRef;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async bulkDelete() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkDeleteComponent,\n      this.bulkDeleteModalRef,\n      (comp) => {\n        comp.permanent = this.deleted;\n        comp.cipherIds = selectedIds;\n        comp.organization = this.organization;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeleted.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkRestore() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRestoreComponent,\n      this.bulkRestoreModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestored.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkShare() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedCiphers = this.ciphersComponent.getSelected();\n    if (selectedCiphers.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkShareComponent,\n      this.bulkShareModalRef,\n      (comp) => {\n        comp.ciphers = selectedCiphers;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onShared.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkMove() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkMoveComponent,\n      this.bulkMoveModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onMoved.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  selectAll(select: boolean) {\n    this.ciphersComponent.selectAll(select);\n  }\n\n  private async promptPassword() {\n    const selectedCiphers = this.ciphersComponent.getSelected();\n    const notProtected = !selectedCiphers.find(\n      (cipher) => cipher.reprompt !== CipherRepromptType.None\n    );\n\n    return notProtected || (await this.passwordRepromptService.showPasswordPrompt());\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-organization-vault-filter\n              #vaultFilter\n              [activeFilter]=\"activeFilter\"\n              (onFilterChange)=\"applyVaultFilter($event)\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n            ></app-organization-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"vaultItems\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions\n            [ciphersComponent]=\"ciphersComponent\"\n            [deleted]=\"deleted\"\n            [organization]=\"organization\"\n          >\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm ml-auto\"\n            (click)=\"addCipher()\"\n            *ngIf=\"!deleted\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"bwi bwi-exclamation-triangle\">\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-org-vault-ciphers\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onEventsClicked)=\"viewEvents($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n      >\n      </app-org-vault-ciphers>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #eventsTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { VaultService } from \"../../vault/shared/vault.service\";\nimport { EntityEventsComponent } from \"../manage/entity-events.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { VaultFilterComponent } from \"./vault-filter/vault-filter.component\";\n\nconst BroadcasterSubscriptionId = \"OrgVaultComponent\";\n\n@Component({\n  selector: \"app-org-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true })\n  vaultFilterComponent: VaultFilterComponent;\n  @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n\n  organization: Organization;\n  collectionId: string = null;\n  type: CipherType = null;\n  trashCleanupWarning: string = null;\n  activeFilter: VaultFilter = new VaultFilter();\n\n  // This is a hack to avoid redundant api calls that fetch OrganizationVaultFilterComponent collections\n  // When it makes sense to do so we should leverage some other communication method for change events that isn't directly tied to the query param for organizationId\n  // i.e. exposing the VaultFiltersService to the OrganizationSwitcherComponent to make relevant updates from a change event instead of just depending on the router\n  firstLoaded = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private messagingService: MessagingService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultService: VaultService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  ngOnInit() {\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params: any) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.vaultFilterComponent.organization = this.organization;\n      this.ciphersComponent.organization = this.organization;\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.ciphersComponent.searchText = this.vaultFilterComponent.searchText = qParams.search;\n        if (!this.organization.canViewAllCollections) {\n          await this.syncService.fullSync(false);\n          this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n            this.ngZone.run(async () => {\n              switch (message.command) {\n                case \"syncCompleted\":\n                  if (message.successfully) {\n                    await Promise.all([\n                      this.vaultFilterComponent.reloadCollectionsAndFolders(),\n                      this.ciphersComponent.refresh(),\n                    ]);\n                    this.changeDetectorRef.detectChanges();\n                  }\n                  break;\n              }\n            });\n          });\n        }\n\n        if (this.firstLoaded) {\n          await this.vaultFilterComponent.reloadCollectionsAndFolders();\n        }\n        this.firstLoaded = true;\n\n        await this.ciphersComponent.reload();\n\n        if (qParams.viewEvents != null) {\n          const cipher = this.ciphersComponent.ciphers.filter((c) => c.id === qParams.viewEvents);\n          if (cipher.length > 0) {\n            this.viewEvents(cipher[0]);\n          }\n        }\n\n        /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n        this.route.queryParams.subscribe(async (params) => {\n          const cipherId = getCipherIdFromParams(params);\n          if (cipherId) {\n            if (\n              // Handle users with implicit collection access since they use the admin endpoint\n              this.organization.canEditAnyCollection ||\n              (await this.cipherService.get(cipherId)) != null\n            ) {\n              this.editCipherId(cipherId);\n            } else {\n              this.platformUtilsService.showToast(\n                \"error\",\n                this.i18nService.t(\"errorOccurred\"),\n                this.i18nService.t(\"unknownCipher\")\n              );\n              this.router.navigate([], {\n                queryParams: { cipherId: null, itemId: null },\n                queryParamsHandling: \"merge\",\n              });\n            }\n          }\n        });\n      });\n    });\n  }\n\n  get deleted(): boolean {\n    return this.activeFilter.status === \"trash\";\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async applyVaultFilter(vaultFilter: VaultFilter) {\n    this.ciphersComponent.showAddNew = vaultFilter.status !== \"trash\";\n    this.activeFilter = vaultFilter;\n    await this.ciphersComponent.reload(\n      this.activeFilter.buildFilter(),\n      vaultFilter.status === \"trash\"\n    );\n    this.vaultFilterComponent.searchPlaceholder =\n      this.vaultService.calculateSearchBarLocalizationString(this.activeFilter);\n    this.go();\n  }\n\n  filterSearchText(searchText: string) {\n    this.ciphersComponent.searchText = searchText;\n    this.ciphersComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\n      this.messagingService.send(\"upgradeOrganization\", { organizationId: cipher.organizationId });\n      return;\n    }\n\n    let madeAttachmentChanges = false;\n\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.ciphersComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        if (this.organization.canEditAnyCollection) {\n          comp.collectionIds = cipher.collectionIds;\n          comp.collections = this.vaultFilterComponent.collections.fullList.filter(\n            (c) => !c.readOnly && c.id != null\n          );\n        }\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.organizationId = this.organization.id;\n    component.type = this.type;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.vaultFilterComponent.collections.fullList.filter(\n        (c) => !c.readOnly && c.id != null\n      );\n    }\n    if (this.collectionId != null) {\n      component.collectionIds = [this.collectionId];\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(cipherId: string) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipherId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n    component.organizationId = this.organization.id;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.vaultFilterComponent.collections.fullList.filter(\n        (c) => !c.readOnly && c.id != null\n      );\n    }\n    // Regardless of Admin state, the collection Ids need to passed manually as they are not assigned value\n    // in the add-edit componenet\n    component.collectionIds = cipher.collectionIds;\n  }\n\n  async viewEvents(cipher: CipherView) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = cipher.name;\n      comp.organizationId = this.organization.id;\n      comp.entityId = cipher.id;\n      comp.showUser = true;\n      comp.entity = \"cipher\";\n    });\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        type: this.activeFilter.cipherType,\n        collectionId: this.activeFilter.selectedCollectionId,\n        deleted: this.deleted ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { VaultComponent } from \"./vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VaultComponent,\n    data: { titleId: \"vaults\" },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { VaultSharedModule } from \"../../vault/shared/vault-shared.module\";\n\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { VaultFilterModule } from \"./vault-filter/vault-filter.module\";\nimport { VaultRoutingModule } from \"./vault-routing.module\";\nimport { VaultComponent } from \"./vault.component\";\n\n@NgModule({\n  imports: [VaultSharedModule, VaultRoutingModule, VaultFilterModule],\n  declarations: [VaultComponent, CiphersComponent],\n  exports: [VaultComponent],\n})\nexport class VaultModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"./guards/org-permissions.guard\";\nimport { OrganizationLayoutComponent } from \"./layouts/organization-layout.component\";\nimport { CollectionsComponent } from \"./manage/collections.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { GroupsComponent } from \"./manage/groups.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { PoliciesComponent } from \"./manage/policies.component\";\nimport {\n  canAccessOrgAdmin,\n  canAccessManageTab,\n  canAccessSettingsTab,\n  canAccessToolsTab,\n} from \"./navigation-permissions\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { OrganizationBillingComponent } from \"./settings/organization-billing.component\";\nimport { OrganizationSubscriptionComponent } from \"./settings/organization-subscription.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { TwoFactorSetupComponent } from \"./settings/two-factor-setup.component\";\nimport { ExposedPasswordsReportComponent } from \"./tools/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent } from \"./tools/reused-passwords-report.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./tools/weak-passwords-report.component\";\nimport { VaultModule } from \"./vault/vault.module\";\n\nconst routes: Routes = [\n  {\n    path: \":organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, OrganizationPermissionsGuard],\n    data: {\n      organizationPermissions: canAccessOrgAdmin,\n    },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"vault\" },\n      {\n        path: \"vault\",\n        loadChildren: () => VaultModule,\n      },\n      {\n        path: \"tools\",\n        component: ToolsComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: canAccessToolsTab,\n        },\n        children: [\n          {\n            path: \"\",\n            pathMatch: \"full\",\n            redirectTo: \"import\",\n          },\n          {\n            path: \"\",\n            loadChildren: () =>\n              import(\"./tools/import-export/org-import-export.module\").then(\n                (m) => m.OrganizationImportExportModule\n              ),\n          },\n          {\n            path: \"exposed-passwords-report\",\n            component: ExposedPasswordsReportComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"exposedPasswordsReport\",\n              organizationPermissions: (org: Organization) => org.canAccessReports,\n            },\n          },\n          {\n            path: \"inactive-two-factor-report\",\n            component: InactiveTwoFactorReportComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"inactive2faReport\",\n              organizationPermissions: (org: Organization) => org.canAccessReports,\n            },\n          },\n          {\n            path: \"reused-passwords-report\",\n            component: ReusedPasswordsReportComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"reusedPasswordsReport\",\n              organizationPermissions: (org: Organization) => org.canAccessReports,\n            },\n          },\n          {\n            path: \"unsecured-websites-report\",\n            component: UnsecuredWebsitesReportComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"unsecuredWebsitesReport\",\n              organizationPermissions: (org: Organization) => org.canAccessReports,\n            },\n          },\n          {\n            path: \"weak-passwords-report\",\n            component: WeakPasswordsReportComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"weakPasswordsReport\",\n              organizationPermissions: (org: Organization) => org.canAccessReports,\n            },\n          },\n        ],\n      },\n      {\n        path: \"manage\",\n        component: ManageComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: canAccessManageTab,\n        },\n        children: [\n          {\n            path: \"\",\n            pathMatch: \"full\",\n            redirectTo: \"people\",\n          },\n          {\n            path: \"collections\",\n            component: CollectionsComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"collections\",\n              organizationPermissions: (org: Organization) =>\n                org.canCreateNewCollections ||\n                org.canEditAnyCollection ||\n                org.canDeleteAnyCollection ||\n                org.canEditAssignedCollections ||\n                org.canDeleteAssignedCollections,\n            },\n          },\n          {\n            path: \"events\",\n            component: EventsComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"eventLogs\",\n              organizationPermissions: (org: Organization) => org.canAccessEventLogs,\n            },\n          },\n          {\n            path: \"groups\",\n            component: GroupsComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"groups\",\n              organizationPermissions: (org: Organization) => org.canManageGroups,\n            },\n          },\n          {\n            path: \"people\",\n            component: PeopleComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"people\",\n              organizationPermissions: (org: Organization) =>\n                org.canManageUsers || org.canManageUsersPassword,\n            },\n          },\n          {\n            path: \"policies\",\n            component: PoliciesComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"policies\",\n              organizationPermissions: (org: Organization) => org.canManagePolicies,\n            },\n          },\n        ],\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: { organizationPermissions: canAccessSettingsTab },\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: AccountComponent, data: { titleId: \"myOrganization\" } },\n          {\n            path: \"two-factor\",\n            component: TwoFactorSetupComponent,\n            data: { titleId: \"twoStepLogin\" },\n          },\n          {\n            path: \"billing\",\n            component: OrganizationBillingComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"billing\",\n              organizationPermissions: (org: Organization) => org.canManageBilling,\n            },\n          },\n          {\n            path: \"subscription\",\n            component: OrganizationSubscriptionComponent,\n            data: { titleId: \"subscription\" },\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","export enum PlanSponsorshipType {\n  FamiliesForEnterprise = 0,\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"../../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-family-sponsorship\",\n  templateUrl: \"accept-family-sponsorship.component.html\",\n})\nexport class AcceptFamilySponsorshipComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/setup/families-for-enterprise\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    if (!qParams.register) {\n      this.router.navigate([\"/login\"], { queryParams: { email: qParams.email } });\n    } else {\n      this.router.navigate([\"/register\"], { queryParams: { email: qParams.email } });\n    }\n  }\n}\n","import { PlanSponsorshipType } from \"../../../enums/planSponsorshipType\";\n\nexport class OrganizationSponsorshipRedeemRequest {\n  planSponsorshipType: PlanSponsorshipType;\n  sponsoredOrganizationId: string;\n}\n","<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"sponsoredFamiliesOffer\" | i18n }}</h1>\n  </div>\n  <div *ngIf=\"loading\" class=\"mt-5 d-flex justify-content-center\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </div>\n  <div *ngIf=\"!loading && badToken\" class=\"mt-5 d-flex justify-content-center\">\n    <span>{{ \"badToken\" | i18n }}</span>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    ngNativeValidate\n    *ngIf=\"!loading && !badToken\"\n  >\n    <p>\n      <span>{{ \"acceptBitwardenFamiliesHelp\" | i18n }}</span>\n    </p>\n    <div class=\"form-group col-6\">\n      <label for=\"availableSponsorshipOrg\">{{ \"sponsoredFamiliesSelectOffer\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        [(ngModel)]=\"selectedFamilyOrganizationId\"\n        class=\"form-control\"\n        required\n      >\n        <option value=\"\" disabled>-- {{ \"select\" | i18n }} --</option>\n        <option value=\"createNew\">{{ \"newFamiliesOrganization\" | i18n }}</option>\n        <option *ngFor=\"let o of existingFamilyOrganizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div *ngIf=\"showNewOrganization\" class=\"col-12\">\n      <app-organization-plans></app-organization-plans>\n    </div>\n    <div class=\"form-group col-6\" *ngIf=\"!showNewOrganization\">\n      <button class=\"btn btn-primary mt-2 btn-submit\" [disabled]=\"form.loading\" type=\"submit\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"acceptOffer\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSponsorshipRedeemRequest } from \"@bitwarden/common/models/request/organization/organizationSponsorshipRedeemRequest\";\n\nimport { OrganizationPlansComponent } from \"../../settings/organization-plans.component\";\nimport { DeleteOrganizationComponent } from \"../settings/delete-organization.component\";\n\n@Component({\n  selector: \"families-for-enterprise-setup\",\n  templateUrl: \"families-for-enterprise-setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class FamiliesForEnterpriseSetupComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: false })\n  set organizationPlansComponent(value: OrganizationPlansComponent) {\n    if (!value) {\n      return;\n    }\n\n    value.plan = PlanType.FamiliesAnnually;\n    value.product = ProductType.Families;\n    value.acceptingSponsorship = true;\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    value.onSuccess.subscribe(this.onOrganizationCreateSuccess.bind(this));\n  }\n\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  loading = true;\n  badToken = false;\n  formPromise: Promise<any>;\n\n  token: string;\n  existingFamilyOrganizations: Organization[];\n\n  showNewOrganization = false;\n  _organizationPlansComponent: OrganizationPlansComponent;\n  _selectedFamilyOrganizationId = \"\";\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService,\n    private organizationService: OrganizationService,\n    private modalService: ModalService\n  ) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.token == null;\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"sponsoredFamiliesAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.token = qParams.token;\n\n      await this.syncService.fullSync(true);\n      this.badToken = !(await this.apiService.postPreValidateSponsorshipToken(this.token));\n      this.loading = false;\n\n      this.existingFamilyOrganizations = (await this.organizationService.getAll()).filter(\n        (o) => o.planProductType === ProductType.Families\n      );\n\n      if (this.existingFamilyOrganizations.length === 0) {\n        this.selectedFamilyOrganizationId = \"createNew\";\n      }\n    });\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit(this._selectedFamilyOrganizationId);\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  get selectedFamilyOrganizationId() {\n    return this._selectedFamilyOrganizationId;\n  }\n\n  set selectedFamilyOrganizationId(value: string) {\n    this._selectedFamilyOrganizationId = value;\n    this.showNewOrganization = value === \"createNew\";\n  }\n\n  private async doSubmit(organizationId: string) {\n    try {\n      const request = new OrganizationSponsorshipRedeemRequest();\n      request.planSponsorshipType = PlanSponsorshipType.FamiliesForEnterprise;\n      request.sponsoredOrganizationId = organizationId;\n\n      await this.apiService.postRedeemSponsorship(this.token, request);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"sponsoredFamiliesOfferRedeemed\")\n      );\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      if (this.showNewOrganization) {\n        await this.modalService.openViewRef(\n          DeleteOrganizationComponent,\n          this.deleteModalRef,\n          (comp) => {\n            comp.organizationId = organizationId;\n            comp.deleteOrganizationRequestType = \"InvalidFamiliesForEnterprise\";\n            // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n            comp.onSuccess.subscribe(() => {\n              this.router.navigate([\"/\"]);\n            });\n          }\n        );\n      }\n      this.validationService.showError(this.i18nService.t(\"sponsorshipTokenHasExpired\"));\n    }\n  }\n\n  private async onOrganizationCreateSuccess(value: any) {\n    // Use newly created organization id\n    await this.doSubmit(value.organizationId);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from \"@angular/router\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HasPremiumGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private messagingService: MessagingService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    if (!userHasPremium) {\n      this.messagingService.send(\"premiumRequired\");\n    }\n\n    // Prevent trapping the user on the login page, since that's an awful UX flow\n    if (!userHasPremium && this.router.url === \"/login\") {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    return userHasPremium;\n  }\n}\n","export enum ReportVariant {\n  Enabled = \"Enabled\",\n  RequiresPremium = \"RequiresPremium\",\n  RequiresUpgrade = \"RequiresUpgrade\",\n}\n","<div class=\"page-header\">\n  <h1>{{ \"dataBreachReport\" | i18n }}</h1>\n</div>\n<p>{{ \"breachDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"username\">{{ \"username\" | i18n }}</label>\n      <input\n        id=\"username\"\n        type=\"text\"\n        name=\"Username\"\n        class=\"form-control\"\n        [(ngModel)]=\"username\"\n        required\n      />\n      <small class=\"form-text text-muted\">{{ \"breachCheckUsernameEmail\" | i18n }}</small>\n    </div>\n  </div>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"checkBreaches\" | i18n }}\n  </bit-submit-button>\n</form>\n<div class=\"mt-4\" *ngIf=\"!form.loading && checkedUsername\">\n  <p *ngIf=\"error\">{{ \"reportError\" | i18n }}...</p>\n  <ng-container *ngIf=\"!error\">\n    <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!breachedAccounts.length\">\n      {{ \"breachUsernameNotFound\" | i18n: checkedUsername }}\n    </app-callout>\n    <app-callout type=\"danger\" title=\"{{ 'breachFound' | i18n }}\" *ngIf=\"breachedAccounts.length\">\n      {{ \"breachUsernameFound\" | i18n: checkedUsername:breachedAccounts.length }}\n    </app-callout>\n    <ul class=\"list-group list-group-breach\" *ngIf=\"breachedAccounts.length\">\n      <li *ngFor=\"let a of breachedAccounts\" class=\"list-group-item min-height-fix\">\n        <div class=\"row\">\n          <div class=\"col-2 text-center\">\n            <img [src]=\"a.logoPath\" alt=\"\" class=\"img-fluid\" />\n          </div>\n          <div class=\"col-7\">\n            <h3 class=\"text-lg\">{{ a.title }}</h3>\n            <p [innerHTML]=\"a.description\"></p>\n            <p class=\"mb-1\">{{ \"compromisedData\" | i18n }}:</p>\n            <ul>\n              <li *ngFor=\"let d of a.dataClasses\">{{ d }}</li>\n            </ul>\n          </div>\n          <div class=\"col-3\">\n            <dl>\n              <dt>{{ \"website\" | i18n }}</dt>\n              <dd>{{ a.domain }}</dd>\n              <dt>{{ \"affectedUsers\" | i18n }}</dt>\n              <dd>{{ a.pwnCount | number }}</dd>\n              <dt>{{ \"breachOccurred\" | i18n }}</dt>\n              <dd>{{ a.breachDate | date: \"mediumDate\" }}</dd>\n              <dt>{{ \"breachReported\" | i18n }}</dt>\n              <dd>{{ a.addedDate | date: \"mediumDate\" }}</dd>\n            </dl>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </ng-container>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { BreachAccountResponse } from \"@bitwarden/common/models/response/breachAccountResponse\";\n\n@Component({\n  selector: \"app-breach-report\",\n  templateUrl: \"breach-report.component.html\",\n})\nexport class BreachReportComponent implements OnInit {\n  error = false;\n  username: string;\n  checkedUsername: string;\n  breachedAccounts: BreachAccountResponse[] = [];\n  formPromise: Promise<BreachAccountResponse[]>;\n\n  constructor(private auditService: AuditService, private stateService: StateService) {}\n\n  async ngOnInit() {\n    this.username = await this.stateService.getEmail();\n  }\n\n  async submit() {\n    this.error = false;\n    this.username = this.username.toLowerCase();\n    try {\n      this.formPromise = this.auditService.breachedAccounts(this.username);\n      this.breachedAccounts = await this.formPromise;\n    } catch {\n      this.error = true;\n    }\n    this.checkedUsername = this.username;\n  }\n}\n","class Icon {\n  constructor(readonly svg: string) {}\n}\n\n// We only export the type to prohibit the creation of Icons without using\n// the `svgIcon` template literal tag.\nexport type { Icon };\n\nexport function isIcon(icon: unknown): icon is Icon {\n  return icon instanceof Icon;\n}\n\nexport class DynamicContentNotAllowedError extends Error {\n  constructor() {\n    super(\"Dynamic content in icons is not allowed due to risk of user-injected XSS.\");\n  }\n}\n\nexport function svgIcon(strings: TemplateStringsArray, ...values: unknown[]): Icon {\n  if (values.length > 0) {\n    throw new DynamicContentNotAllowedError();\n  }\n\n  return new Icon(strings[0]);\n}\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportBreach = svgIcon`\n  <svg width=\"58\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.569 74H13.007a7 7 0 0 1-7-7V31.077a7 7 0 0 1 7-7h19.101a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.912V67a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M44.576 69.055H18.015a7 7 0 0 1-7-7V26.132a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.911v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M50 63.698H23.439a7 7 0 0 1-7-7V20.775a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.575A7 7 0 0 1 57 28.35v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M44.648 13.599v3.95a8 8 0 0 0 8 8h4.518\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M23.533 37.736H49.49M23.533 46.802H49.49M23.533 42.269H49.49M23.533 55.456H49.49M23.533 50.923H49.49\" />\n    <path d=\"M1 16.483C1 7.944 8.013 1 16.69 1c8.678 0 15.691 6.944 15.691 15.483 0 8.54-7.013 15.484-15.69 15.484C8.012 31.967 1 25.023 1 16.484Z\" fill=\"#518FFF\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"m16.562 7.979.1 11.538\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <ellipse rx=\"1.252\" ry=\"1.236\" transform=\"rotate(-.479 2802.219 -1964.476) skewX(.012)\" fill=\"#fff\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportExposedPasswords = svgIcon`\n  <svg width=\"101\" height=\"77\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.374 50.192a26.42 26.42 0 0 0 9.111 1.608c14.34 0 25.965-11.372 25.965-25.4 0-.337-.007-.673-.02-1.008h25.299v34.85H32.374v-10.05Z\" fill=\"currentColor\" />\n    <path d=\"M15.805 26.4c0 14.028 11.625 25.4 25.965 25.4s25.964-11.372 25.964-25.4C67.734 12.372 56.11 1 41.77 1 27.43 1 15.805 12.372 15.805 26.4Z\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M27.914 47.849a1 1 0 0 0-2 0h2Zm68.288-26.792a2.12 2.12 0 0 1 2.14 2.11h2c0-2.253-1.83-4.11-4.14-4.11v2Zm2.14 2.11v40.552h2V23.167h-2Zm0 40.552c0 1.172-.958 2.11-2.14 2.11v2c2.25 0 4.14-1.798 4.14-4.11h-2Zm-2.14 2.11H30.054v2h66.148v-2Zm-66.148 0a2.12 2.12 0 0 1-2.14-2.11h-2a4.12 4.12 0 0 0 4.14 4.11v-2Zm-2.14-2.11V47.85h-2v15.87h2Zm39.254-42.662h29.034v-2H67.168v2Z\" fill=\"#fff\" />\n    <path d=\"M67.203 25.56h25.64v34.85H32.487V50.011\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"M47.343 76h31.571\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M57.557 66.83V76M67.771 66.83V76\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"m20.995 42.873-3.972 3.972-14.61 14.61a3.413 3.413 0 0 0 0 4.826v0a3.413 3.413 0 0 0 4.827 0l14.61-14.61 3.972-3.972\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M86.037 32.488H71.845M86.037 37.81H76.28M71.845 37.81h-6.652M86.037 43.132h-6.209M74.95 43.132H61.2M86.037 48.454H71.845M66.967 48.454h-7.54M86.037 53.776H66.08M61.201 53.776h-11.53M44.793 53.776h-7.096\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <rect width=\"40.801\" height=\"9.757\" rx=\"4\" transform=\"matrix(-1 0 0 1 61.201 14.748)\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M16.852 33.375h28.375a4 4 0 0 1 4 4v1.757a4 4 0 0 1-4 4H22.174M66.523 33.375h-3.539a4 4 0 0 0-4 4v3.761c0 1.102.894 1.996 1.996 1.996v0\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportInactiveTwoFactor = svgIcon`\n  <svg width=\"42\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" d=\"M1 13.121h39.595v48.758H1z\" />\n    <rect x=\"1\" y=\"1\" width=\"39.595\" height=\"73\" rx=\"8\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M12.344 8.091h16.907M18.907 67.424h3.025M31.503 32.515c-2.047-4.337-6.717-7.061-11.73-6.414a11.356 11.356 0 0 0-9.125 7.126M10.816 42.016c2.047 4.337 6.718 7.062 11.73 6.414 4.346-.562 7.8-3.51 9.213-7.358\" />\n    <path d=\"m33.584 29.293-1.295 4.625-4.625-1.295M8.523 44.725l1.441-4.581 4.582 1.441\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportReusedPasswords = svgIcon`\n  <svg width=\"102\" height=\"102\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M57.983 15.06a35.664 35.664 0 0 1 14.531 6.27c16.164 11.78 19.585 34.613 7.643 51a37.227 37.227 0 0 1-6.81 7.138m-32.842 6.697a35.708 35.708 0 0 1-11.239-5.495c-16.163-11.78-19.585-34.613-7.642-51a37.55 37.55 0 0 1 3.295-3.929\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M93.909 64.598H7.72c-.708 0-1.275-.662-1.275-1.49V40.273c0-.828.567-1.49 1.275-1.49H93.91c.708 0 1.275.663 1.275 1.49v22.837c.047.827-.567 1.49-1.275 1.49Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M21.532 52.186v-5.965M21.532 52.187l5.748-1.844M21.532 52.186l3.524 4.881M21.531 52.186l-3.47 4.881M21.532 52.187l-5.694-1.844M40.944 52.186v-5.965M40.944 52.187l5.694-1.844M40.944 52.187l3.525 4.88M40.944 52.187l-3.525 4.88M40.944 52.187l-5.694-1.844M54.849 57.337h11.294M74.21 57.337h11.295M41.75 83l.71 4.75-4.75.71M58.664 18.66 56 14.665 59.996 12\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportUnsecuredWebsites = svgIcon`\n  <svg width=\"113\" height=\"76\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1.71 12.983h110.362v55.11a6 6 0 0 1-6 6H7.711a6 6 0 0 1-6-6v-55.11Z\" fill=\"currentColor\" />\n    <rect x=\"1\" y=\"1.073\" width=\"110.5\" height=\"73.454\" rx=\"9\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M89.48 8.048V7.47M96.363 8.048V7.47M103.246 8.048V7.47\" stroke=\"#fff\" stroke-width=\"4\" stroke-linecap=\"round\" />\n    <path d=\"M0 12.983h111.217\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"m93.236 44.384-18.42-11.026 2.93 21.266 5.582-5.237 4.27 6.46 2.98-1.971-4.26-6.446 6.918-3.046Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <rect width=\"96.673\" height=\"6.886\" rx=\"3.443\" transform=\"matrix(-1 0 0 1 104.373 18.721)\" stroke=\"#fff\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportWeakPasswords = svgIcon`\n  <svg width=\"78\" height=\"78\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M66.493 64.415V77H9.979V64.324M9.979 44.065V32.106h56.514v12.148\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"M75.44 64.852H2.085c-.603 0-1.085-.555-1.085-1.25V44.448c0-.694.482-1.25 1.085-1.25H75.44c.603 0 1.085.556 1.085 1.25v19.156c.04.694-.482 1.25-1.085 1.25Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M13.84 54.56v-5.077M13.84 54.56l4.893-1.57M13.84 54.56l3 4.153M13.84 54.56l-2.954 4.153M13.84 54.56l-4.846-1.57M30.363 54.56v-5.077M30.363 54.56l4.846-1.57M30.363 54.56l3 4.153M30.363 54.56l-3 4.153M30.363 54.56l-4.846-1.57M42.197 59.042h9.506M58.57 59.042h9.507\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M20.863 31.364c-.274-5.285 0-15.817 1.093-18.863 1.276-3.554 6.233-10.826 15.856-11.482 4.83-.273 15.2 2.296 18.043 14.763\" stroke=\"#fff\" stroke-width=\"2\" />\n  </svg>\n`;\n","import { ReportBreach } from \"./icons/report-breach.icon\";\nimport { ReportExposedPasswords } from \"./icons/report-exposed-passwords.icon\";\nimport { ReportInactiveTwoFactor } from \"./icons/report-inactive-two-factor.icon\";\nimport { ReportReusedPasswords } from \"./icons/report-reused-passwords.icon\";\nimport { ReportUnsecuredWebsites } from \"./icons/report-unsecured-websites.icon\";\nimport { ReportWeakPasswords } from \"./icons/report-weak-passwords.icon\";\nimport { ReportEntry } from \"./models/report-entry\";\n\nexport enum ReportType {\n  ExposedPasswords = \"exposedPasswords\",\n  ReusedPasswords = \"reusedPasswords\",\n  WeakPasswords = \"weakPasswords\",\n  UnsecuredWebsites = \"unsecuredWebsites\",\n  Inactive2fa = \"inactive2fa\",\n  DataBreach = \"dataBreach\",\n}\n\ntype ReportWithoutVariant = Omit<ReportEntry, \"variant\">;\n\nexport const reports: Record<ReportType, ReportWithoutVariant> = {\n  [ReportType.ExposedPasswords]: {\n    title: \"exposedPasswordsReport\",\n    description: \"exposedPasswordsReportDesc\",\n    route: \"exposed-passwords-report\",\n    icon: ReportExposedPasswords,\n  },\n  [ReportType.ReusedPasswords]: {\n    title: \"reusedPasswordsReport\",\n    description: \"reusedPasswordsReportDesc\",\n    route: \"reused-passwords-report\",\n    icon: ReportReusedPasswords,\n  },\n  [ReportType.WeakPasswords]: {\n    title: \"weakPasswordsReport\",\n    description: \"weakPasswordsReportDesc\",\n    route: \"weak-passwords-report\",\n    icon: ReportWeakPasswords,\n  },\n  [ReportType.UnsecuredWebsites]: {\n    title: \"unsecuredWebsitesReport\",\n    description: \"unsecuredWebsitesReportDesc\",\n    route: \"unsecured-websites-report\",\n    icon: ReportUnsecuredWebsites,\n  },\n  [ReportType.Inactive2fa]: {\n    title: \"inactive2faReport\",\n    description: \"inactive2faReportDesc\",\n    route: \"inactive-two-factor-report\",\n    icon: ReportInactiveTwoFactor,\n  },\n  [ReportType.DataBreach]: {\n    title: \"dataBreachReport\",\n    description: \"breachDesc\",\n    route: \"breach-report\",\n    icon: ReportBreach,\n  },\n};\n","import { Component, HostBinding, Input } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { Icon, isIcon } from \"./icon\";\n\n@Component({\n  selector: \"bit-icon\",\n  template: ``,\n})\nexport class BitIconComponent {\n  @Input() icon: Icon;\n\n  constructor(private domSanitizer: DomSanitizer) {}\n\n  @HostBinding(\"innerHtml\")\n  protected get innerHtml() {\n    if (!isIcon(this.icon)) {\n      return \"\";\n    }\n\n    const svg = this.icon.svg;\n    return this.domSanitizer.bypassSecurityTrustHtml(svg);\n  }\n}\n","<a\n  class=\"tw-block tw-h-full tw-w-72 tw-overflow-hidden tw-rounded tw-border tw-border-solid tw-border-secondary-300 !tw-text-main tw-transition-all hover:tw-scale-105 hover:tw-no-underline focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2\"\n  [routerLink]=\"route\"\n>\n  <div class=\"tw-relative\">\n    <div\n      class=\"tw-flex tw-h-28 tw-bg-background-alt2 tw-text-center tw-text-primary-300\"\n      [ngClass]=\"{ 'tw-grayscale': disabled }\"\n    >\n      <div class=\"tw-m-auto\"><bit-icon [icon]=\"icon\"></bit-icon></div>\n    </div>\n    <div class=\"tw-p-5\" [ngClass]=\"{ 'tw-grayscale': disabled }\">\n      <h3 class=\"tw-mb-4 tw-text-xl tw-font-bold\">{{ title }}</h3>\n      <p class=\"tw-mb-0\">{{ description }}</p>\n    </div>\n    <span\n      bitBadge\n      badgeType=\"success\"\n      class=\"tw-absolute tw-left-2 tw-top-2 tw-leading-none\"\n      *ngIf=\"disabled\"\n    >\n      <ng-container *ngIf=\"requiresPremium\">{{ \"premium\" | i18n }}</ng-container>\n      <ng-container *ngIf=\"!requiresPremium\">{{ \"upgrade\" | i18n }}</ng-container>\n    </span>\n  </div>\n</a>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ReportVariant } from \"../models/report-variant\";\n\n@Component({\n  selector: \"app-report-card\",\n  templateUrl: \"report-card.component.html\",\n})\nexport class ReportCardComponent {\n  @Input() title: string;\n  @Input() description: string;\n  @Input() route: string;\n  @Input() icon: string;\n  @Input() variant: ReportVariant;\n\n  protected get disabled() {\n    return this.variant != ReportVariant.Enabled;\n  }\n\n  protected get requiresPremium() {\n    return this.variant == ReportVariant.RequiresPremium;\n  }\n}\n","<div class=\"tw-inline-grid tw-grid-cols-3 tw-gap-4\">\n  <div *ngFor=\"let report of reports\">\n    <app-report-card\n      [title]=\"report.title | i18n\"\n      [description]=\"report.description | i18n\"\n      [route]=\"report.route\"\n      [variant]=\"report.variant\"\n      [icon]=\"report.icon\"\n    ></app-report-card>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ReportEntry } from \"../models/report-entry\";\n\n@Component({\n  selector: \"app-report-list\",\n  templateUrl: \"report-list.component.html\",\n})\nexport class ReportListComponent {\n  @Input() reports: ReportEntry[];\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { ReportEntry } from \"../models/report-entry\";\nimport { ReportVariant } from \"../models/report-variant\";\nimport { reports, ReportType } from \"../reports\";\n\n@Component({\n  selector: \"app-reports-home\",\n  templateUrl: \"reports-home.component.html\",\n})\nexport class ReportsHomeComponent implements OnInit {\n  reports: ReportEntry[];\n\n  constructor(private stateService: StateService) {}\n\n  async ngOnInit(): Promise<void> {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    const reportRequiresPremium = userHasPremium\n      ? ReportVariant.Enabled\n      : ReportVariant.RequiresPremium;\n\n    this.reports = [\n      {\n        ...reports[ReportType.ExposedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.ReusedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.WeakPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.UnsecuredWebsites],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.Inactive2fa],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.DataBreach],\n        variant: ReportVariant.Enabled,\n      },\n    ];\n  }\n}\n","<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n\n  <div class=\"row mt-4\">\n    <div class=\"col\">\n      <a bitButton routerLink=\"./\" *ngIf=\"!homepage\">\n        <i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i>\n        {{ \"backToReports\" | i18n }}\n      </a>\n    </div>\n  </div>\n</div>\n","<div class=\"page-header\">\n  <h1>{{ \"reports\" | i18n }}</h1>\n</div>\n\n<p>{{ \"reportsDesc\" | i18n }}</p>\n\n<app-report-list [reports]=\"reports\"></app-report-list>\n","import { Component, OnDestroy } from \"@angular/core\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-reports-layout\",\n  templateUrl: \"reports-layout.component.html\",\n})\nexport class ReportsLayoutComponent implements OnDestroy {\n  homepage = true;\n  subscription: Subscription;\n\n  constructor(router: Router) {\n    this.subscription = router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n      .subscribe((event) => {\n        this.homepage = (event as NavigationEnd).url == \"/reports\";\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\n\nimport { HasPremiumGuard } from \"../shared/guards/has-premium.guard\";\n\nimport { BreachReportComponent } from \"./pages/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./pages/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./pages/inactive-two-factor-report.component\";\nimport { ReportsHomeComponent } from \"./pages/reports-home.component\";\nimport { ReusedPasswordsReportComponent } from \"./pages/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./pages/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./pages/weak-passwords-report.component\";\nimport { ReportsLayoutComponent } from \"./reports-layout.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ReportsLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: \"\", pathMatch: \"full\", component: ReportsHomeComponent, data: { homepage: true } },\n      {\n        path: \"breach-report\",\n        component: BreachReportComponent,\n        data: { titleId: \"dataBreachReport\" },\n      },\n      {\n        path: \"reused-passwords-report\",\n        component: ReusedPasswordsReportComponent,\n        data: { titleId: \"reusedPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"unsecured-websites-report\",\n        component: UnsecuredWebsitesReportComponent,\n        data: { titleId: \"unsecuredWebsitesReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"weak-passwords-report\",\n        component: WeakPasswordsReportComponent,\n        data: { titleId: \"weakPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"exposed-passwords-report\",\n        component: ExposedPasswordsReportComponent,\n        data: { titleId: \"exposedPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"inactive-two-factor-report\",\n        component: InactiveTwoFactorReportComponent,\n        data: { titleId: \"inactive2faReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReportsRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { BreachReportComponent } from \"./pages/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./pages/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./pages/inactive-two-factor-report.component\";\nimport { ReportsHomeComponent } from \"./pages/reports-home.component\";\nimport { ReusedPasswordsReportComponent } from \"./pages/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./pages/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./pages/weak-passwords-report.component\";\nimport { ReportCardComponent } from \"./report-card/report-card.component\";\nimport { ReportListComponent } from \"./report-list/report-list.component\";\nimport { ReportsLayoutComponent } from \"./reports-layout.component\";\nimport { ReportsRoutingModule } from \"./reports-routing.module\";\n\n@NgModule({\n  imports: [CommonModule, SharedModule, ReportsRoutingModule],\n  declarations: [\n    BreachReportComponent,\n    ExposedPasswordsReportComponent,\n    InactiveTwoFactorReportComponent,\n    ReportCardComponent,\n    ReportListComponent,\n    ReportsLayoutComponent,\n    ReportsHomeComponent,\n    ReusedPasswordsReportComponent,\n    UnsecuredWebsitesReportComponent,\n    WeakPasswordsReportComponent,\n    WeakPasswordsReportComponent,\n  ],\n})\nexport class ReportsModule {}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccess } from \"../domain/sendAccess\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendAccessView implements View {\n  id: string = null;\n  name: string = null;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  expirationDate: Date = null;\n  creatorIdentifier: string = null;\n\n  constructor(s?: SendAccess) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.type = s.type;\n    this.expirationDate = s.expirationDate;\n    this.creatorIdentifier = s.creatorIdentifier;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccessResponse } from \"../response/sendAccessResponse\";\nimport { SendAccessView } from \"../view/sendAccessView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendAccess extends Domain {\n  id: string;\n  type: SendType;\n  name: EncString;\n  file: SendFile;\n  text: SendText;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(obj?: SendAccessResponse) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n        expirationDate: null,\n        creatorIdentifier: null,\n      },\n      [\"id\", \"expirationDate\", \"creatorIdentifier\"]\n    );\n\n    this.type = obj.type;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendAccessView> {\n    const model = new SendAccessView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n      },\n      null,\n      key\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(key);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(key);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","export class SendAccessRequest {\n  password: string;\n}\n","<form #form (ngSubmit)=\"load()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-center mt-5\">\n    <div class=\"col-12\">\n      <h1 class=\"lead text-center mb-4\">Bitwarden Send</h1>\n    </div>\n    <div class=\"col-12 text-center\" *ngIf=\"creatorIdentifier != null\">\n      <p>{{ \"sendCreatorIdentifier\" | i18n: creatorIdentifier }}</p>\n    </div>\n    <div class=\"col-8\" *ngIf=\"hideEmail\">\n      <app-callout type=\"warning\" title=\"{{ 'warning' | i18n }}\">\n        {{ \"viewSendHiddenEmailWarning\" | i18n }}\n        <a href=\"https://bitwarden.com/help/receive-send/\" target=\"_blank\">{{\n          \"learnMore\" | i18n\n        }}</a\n        >.\n      </app-callout>\n    </div>\n  </div>\n  <div class=\"row justify-content-center\">\n    <div class=\"col-5\">\n      <div class=\"card d-block\">\n        <div class=\"card-body\" *ngIf=\"loading\" class=\"text-center\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && passwordRequired\">\n          <p>{{ \"sendProtectedPassword\" | i18n }}</p>\n          <p>{{ \"sendProtectedPasswordDontKnow\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"password\">{{ \"password\" | i18n }}</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"Password\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"password\"\n              required\n              appInputVerbatim\n              appAutofocus\n            />\n          </div>\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && unavailable\">\n          {{ \"sendAccessUnavailable\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && error\">\n          {{ \"unexpectedError\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && !passwordRequired && send\">\n          <p class=\"text-center\">\n            <b>{{ send.name }}</b>\n          </p>\n          <hr />\n          <!-- Text -->\n          <ng-container *ngIf=\"send.type === sendType.Text\">\n            <app-callout *ngIf=\"send.text.hidden\" type=\"tip\">{{\n              \"sendHiddenByDefault\" | i18n\n            }}</app-callout>\n            <div class=\"form-group\">\n              <textarea\n                id=\"text\"\n                rows=\"8\"\n                name=\"Text\"\n                [(ngModel)]=\"sendText\"\n                class=\"form-control\"\n                readonly\n              ></textarea>\n            </div>\n            <button\n              class=\"btn btn-block btn-link\"\n              type=\"button\"\n              (click)=\"toggleText()\"\n              *ngIf=\"send.text.hidden\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showText, 'bwi-eye-slash': showText }\"\n              ></i>\n              {{ \"toggleVisibility\" | i18n }}\n            </button>\n            <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"copyText()\">\n              <i class=\"bwi bwi-copy\" aria-hidden=\"true\"></i> {{ \"copyValue\" | i18n }}\n            </button>\n          </ng-container>\n          <!-- File -->\n          <ng-container *ngIf=\"send.type === sendType.File\">\n            <p>{{ send.file.fileName }}</p>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              (click)=\"download()\"\n              *ngIf=\"!downloading\"\n            >\n              <i class=\"bwi bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"downloadFile\" | i18n }} ({{ send.file.sizeName }})\n            </button>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              *ngIf=\"downloading\"\n              disabled=\"true\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </ng-container>\n          <p *ngIf=\"expirationDate\" class=\"text-center text-muted\">\n            Expires: {{ expirationDate | date: \"medium\" }}\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 text-center mt-5 text-muted\">\n      <p class=\"mb-0\">\n        {{ \"sendAccessTaglineProductDesc\" | i18n }}<br />\n        {{ \"sendAccessTaglineLearnMore\" | i18n }}\n        <a href=\"https://www.bitwarden.com/products/send?source=web-vault\" target=\"_blank\"\n          >Bitwarden Send</a\n        >\n        {{ \"sendAccessTaglineOr\" | i18n }}\n        <a href=\"https://vault.bitwarden.com/#/register\" target=\"_blank\">{{\n          \"sendAccessTaglineSignUp\" | i18n\n        }}</a>\n        {{ \"sendAccessTaglineTryToday\" | i18n }}\n      </p>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SEND_KDF_ITERATIONS } from \"@bitwarden/common/enums/kdfType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { SendAccess } from \"@bitwarden/common/models/domain/sendAccess\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { SendAccessRequest } from \"@bitwarden/common/models/request/sendAccessRequest\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\nimport { SendAccessResponse } from \"@bitwarden/common/models/response/sendAccessResponse\";\nimport { SendAccessView } from \"@bitwarden/common/models/view/sendAccessView\";\n\n@Component({\n  selector: \"app-send-access\",\n  templateUrl: \"access.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccessComponent implements OnInit {\n  send: SendAccessView;\n  sendType = SendType;\n  downloading = false;\n  loading = true;\n  passwordRequired = false;\n  formPromise: Promise<SendAccessResponse>;\n  password: string;\n  showText = false;\n  unavailable = false;\n  error = false;\n  hideEmail = false;\n\n  private id: string;\n  private key: string;\n  private decKey: SymmetricCryptoKey;\n  private accessRequest: SendAccessRequest;\n\n  constructor(\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private fileDownloadService: FileDownloadService\n  ) {}\n\n  get sendText() {\n    if (this.send == null || this.send.text == null) {\n      return null;\n    }\n    return this.showText ? this.send.text.text : this.send.text.maskedText;\n  }\n\n  get expirationDate() {\n    if (this.send == null || this.send.expirationDate == null) {\n      return null;\n    }\n    return this.send.expirationDate;\n  }\n\n  get creatorIdentifier() {\n    if (this.send == null || this.send.creatorIdentifier == null) {\n      return null;\n    }\n    return this.send.creatorIdentifier;\n  }\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      this.id = params.sendId;\n      this.key = params.key;\n      if (this.key == null || this.id == null) {\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async download() {\n    if (this.send == null || this.decKey == null) {\n      return;\n    }\n\n    if (this.downloading) {\n      return;\n    }\n\n    const downloadData = await this.apiService.getSendFileDownloadData(\n      this.send,\n      this.accessRequest\n    );\n\n    if (Utils.isNullOrWhitespace(downloadData.url)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingSendFile\"));\n      return;\n    }\n\n    this.downloading = true;\n    const response = await fetch(new Request(downloadData.url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      this.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, this.decKey);\n      this.fileDownloadService.download({\n        fileName: this.send.file.fileName,\n        blobData: decBuf,\n        downloadMethod: \"save\",\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    this.downloading = false;\n  }\n\n  copyText() {\n    this.platformUtilsService.copyToClipboard(this.send.text.text);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendTypeText\"))\n    );\n  }\n\n  toggleText() {\n    this.showText = !this.showText;\n  }\n\n  async load() {\n    this.unavailable = false;\n    this.error = false;\n    this.hideEmail = false;\n    const keyArray = Utils.fromUrlB64ToArray(this.key);\n    this.accessRequest = new SendAccessRequest();\n    if (this.password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        this.password,\n        keyArray,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      this.accessRequest.password = Utils.fromBufferToB64(passwordHash);\n    }\n    try {\n      let sendResponse: SendAccessResponse = null;\n      if (this.loading) {\n        sendResponse = await this.apiService.postSendAccess(this.id, this.accessRequest);\n      } else {\n        this.formPromise = this.apiService.postSendAccess(this.id, this.accessRequest);\n        sendResponse = await this.formPromise;\n      }\n      this.passwordRequired = false;\n      const sendAccess = new SendAccess(sendResponse);\n      this.decKey = await this.cryptoService.makeSendKey(keyArray);\n      this.send = await sendAccess.decrypt(this.decKey);\n      this.showText = this.send.text != null ? !this.send.text.hidden : true;\n    } catch (e) {\n      if (e instanceof ErrorResponse) {\n        if (e.statusCode === 401) {\n          this.passwordRequired = true;\n        } else if (e.statusCode === 404) {\n          this.unavailable = true;\n        } else {\n          this.error = true;\n        }\n      }\n    }\n    this.loading = false;\n    this.hideEmail =\n      this.creatorIdentifier == null &&\n      !this.passwordRequired &&\n      !this.loading &&\n      !this.unavailable;\n  }\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\n@Directive()\nexport class SendComponent implements OnInit {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new UntypedFormGroup({\n    selectedDeletionDatePreset: new UntypedFormControl(),\n    selectedExpirationDatePreset: new UntypedFormControl(),\n    defaultDeletionDateTime: new UntypedFormControl(),\n    defaultExpirationDateTime: new UntypedFormControl(),\n    fallbackDeletionDate: new UntypedFormControl(),\n    fallbackDeletionTime: new UntypedFormControl(),\n    fallbackExpirationDate: new UntypedFormControl(),\n    fallbackExpirationTime: new UntypedFormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as UntypedFormControl;\n  }\n\n  get selectedExpirationDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as UntypedFormControl;\n  }\n\n  get defaultDeletionDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as UntypedFormControl;\n  }\n\n  get defaultExpirationDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as UntypedFormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { Send } from \"@bitwarden/common/models/domain/send\";\nimport { SendFileView } from \"@bitwarden/common/models/view/sendFileView\";\nimport { SendTextView } from \"@bitwarden/common/models/view/sendTextView\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  private sendLinkBaseUrl: string;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n    this.disableHideEmail = await this.policyService.policyAppliesToUser(\n      PolicyType.SendOptions,\n      (p) => p.data.disableHideEmail\n    );\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        const copySuccess = await this.copyLinkToClipboard(this.link);\n        if (copySuccess ?? true) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n          );\n        } else {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n            null,\n            this.i18nService.t(\"ok\"),\n            null,\n            \"success\",\n            null\n          );\n          await this.copyLinkToClipboard(this.link);\n        }\n      }\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n}\n","<div class=\"row\" [formGroup]=\"datesForm\">\n  <div class=\"col-6 form-group\">\n    <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n    <ng-template #deletionDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <ng-container *ngSwitchCase=\"'firefox'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              [readOnly]=\"disableSend\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <input\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              type=\"time\"\n              name=\"DeletionTimeDate\"\n              formControlName=\"fallbackDeletionTime\"\n              required\n              placeholder=\"HH:MM AM/PM\"\n              [readOnly]=\"disableSend\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'safari'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              [readOnly]=\"disableSend\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <select\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              [required]=\"!editMode\"\n              formControlName=\"fallbackDeletionTime\"\n              name=\"SafariDeletionTime\"\n            >\n              <option\n                *ngFor=\"let o of safariDeletionTimePresetOptions\"\n                [ngValue]=\"o.twentyFourHour\"\n              >\n                {{ o.twelveHour }}\n              </option>\n            </select>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"deletionDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"DeletionDate\"\n            formControlName=\"defaultDeletionDateTime\"\n            required\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"deletionDate\"\n        name=\"SelectedDeletionDatePreset\"\n        formControlName=\"selectedDeletionDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedDeletionDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"deletionDateDesc\" | i18n }}</div>\n  </div>\n  <div class=\"col-6 form-group\">\n    <div class=\"d-flex\">\n      <label for=\"expirationDate\">{{ \"expirationDate\" | i18n }}</label>\n      <a\n        href=\"#\"\n        appStopClick\n        (click)=\"clearExpiration()\"\n        class=\"ml-auto\"\n        *ngIf=\"editMode && !disabled\"\n      >\n        {{ \"clear\" | i18n }}\n      </a>\n    </div>\n    <ng-template #expirationDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <div *ngSwitchCase=\"'firefox'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n        <!-- non-default cases are not showing up -->\n        <div *ngSwitchCase=\"'safari'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            [required]=\"!editMode\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"expirationDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"ExpirationDate\"\n            formControlName=\"defaultExpirationDateTime\"\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"expirationDate\"\n        name=\"SelectedExpirationDatePreset\"\n        formControlName=\"selectedExpirationDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedExpirationDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"expirationDateDesc\" | i18n }}</div>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"@bitwarden/angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"sendAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"sendAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"send\">\n        <app-callout *ngIf=\"disableSend\">\n          <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n        </app-callout>\n        <app-callout *ngIf=\"!disableSend && disableHideEmail\">\n          <span>{{ \"sendOptionsPolicyInEffect\" | i18n }}</span>\n          <ul class=\"mb-0\">\n            <li>{{ \"sendDisableHideEmailInEffect\" | i18n }}</li>\n          </ul>\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"send.name\"\n              required\n              [readOnly]=\"disableSend\"\n            />\n            <small class=\"form-text text-muted\">{{ \"sendNameDesc\" | i18n }}</small>\n          </div>\n        </div>\n        <div class=\"row\" *ngIf=\"!editMode\">\n          <div class=\"col-6 form-group\">\n            <label>{{ \"whatTypeOfSend\" | i18n }}</label>\n            <div class=\"form-check\" *ngFor=\"let o of typeOptions\">\n              <input\n                class=\"form-check-input\"\n                type=\"radio\"\n                [(ngModel)]=\"send.type\"\n                name=\"Type_{{ o.value }}\"\n                id=\"type_{{ o.value }}\"\n                [value]=\"o.value\"\n                (change)=\"typeChanged(o)\"\n                [checked]=\"send.type === o.value\"\n              />\n              <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n                {{ o.name }}\n              </label>\n            </div>\n          </div>\n        </div>\n        <!-- Text -->\n        <ng-container *ngIf=\"send.type === sendType.Text\">\n          <div class=\"form-group\">\n            <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n            <textarea\n              id=\"text\"\n              name=\"Text.Text\"\n              rows=\"6\"\n              [(ngModel)]=\"send.text.text\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <small class=\"form-text text-muted\">{{ \"sendTextDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.text.hidden\"\n                id=\"text-hidden\"\n                name=\"Text.Hidden\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"text-hidden\">{{\n                \"textHiddenByDefault\" | i18n\n              }}</label>\n            </div>\n          </div>\n        </ng-container>\n        <!-- File -->\n        <ng-container *ngIf=\"send.type === sendType.File\">\n          <div class=\"form-group\">\n            <div *ngIf=\"editMode\">\n              <strong class=\"d-block\">{{ \"file\" | i18n }}</strong>\n              {{ send.file.fileName }} ({{ send.file.sizeName }})\n            </div>\n            <div *ngIf=\"!editMode\">\n              <label for=\"file\">{{ \"file\" | i18n }}</label>\n              <input\n                type=\"file\"\n                id=\"file\"\n                class=\"form-control-file\"\n                name=\"file\"\n                required\n                [disabled]=\"disableSend\"\n              />\n              <small class=\"form-text text-muted\"\n                >{{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}</small\n              >\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-5\">{{ \"share\" | i18n }}</h3>\n        <div class=\"form-group\" *ngIf=\"link\">\n          <label for=\"link\">{{ \"sendLinkLabel\" | i18n }}</label>\n          <input\n            type=\"text\"\n            readonly\n            id=\"link\"\n            name=\"Link\"\n            [(ngModel)]=\"link\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [(ngModel)]=\"copyLink\"\n              id=\"copy-link\"\n              name=\"CopyLink\"\n            />\n            <label class=\"form-check-label\" for=\"copy-link\">{{\n              \"copySendLinkOnSave\" | i18n\n            }}</label>\n          </div>\n        </div>\n        <div\n          id=\"options-header\"\n          class=\"section-header d-flex flex-row align-items-center mt-5\"\n          (click)=\"toggleOptions()\"\n        >\n          <h3 class=\"mb-0 mr-2\">{{ \"options\" | i18n }}</h3>\n          <a class=\"mb-1\" href=\"#\" appStopClick role=\"button\">\n            <i\n              class=\"bwi\"\n              aria-hidden=\"true\"\n              [ngClass]=\"{ 'bwi-angle-down': !showOptions, 'bwi-chevron-up': showOptions }\"\n            ></i>\n          </a>\n        </div>\n        <div id=\"options\" [hidden]=\"!showOptions\">\n          <app-send-efflux-dates\n            [initialDeletionDate]=\"send.deletionDate\"\n            [initialExpirationDate]=\"send.expirationDate\"\n            [editMode]=\"editMode\"\n            [disabled]=\"disableSend\"\n            (datesChanged)=\"setDates($event)\"\n          >\n          </app-send-efflux-dates>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"maxAccessCount\">{{ \"maxAccessCount\" | i18n }}</label>\n              <input\n                id=\"maxAccessCount\"\n                class=\"form-control\"\n                type=\"number\"\n                name=\"MaxAccessCount\"\n                [(ngModel)]=\"send.maxAccessCount\"\n                min=\"1\"\n                [readOnly]=\"disableSend\"\n              />\n              <div class=\"form-text text-muted small\">{{ \"maxAccessCountDesc\" | i18n }}</div>\n            </div>\n            <div class=\"col-6 form-group\" *ngIf=\"editMode\">\n              <label for=\"accessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n              <input\n                id=\"accessCount\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"AccessCount\"\n                readonly\n                [(ngModel)]=\"send.accessCount\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"password\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Password\"\n                  [(ngModel)]=\"password\"\n                  [readOnly]=\"disableSend\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePasswordVisible()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-text text-muted small\">{{ \"sendPasswordDesc\" | i18n }}</div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <div class=\"form-text text-muted small\">{{ \"sendNotesDesc\" | i18n }}</div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.hideEmail\"\n                id=\"hideEmail\"\n                name=\"HideEmail\"\n                [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"hideEmail\">\n                {{ \"hideEmail\" | i18n }}\n              </label>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.disabled\"\n                id=\"disabled\"\n                name=\"Disabled\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"disabled\">{{ \"disableThisSend\" | i18n }}</label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [ngClass]=\"{ loading: form.loading }\"\n          [disabled]=\"form.loading || disableSend\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"send\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    // Copy function on web depends on the modal being open or not. Since this event occurs during a transition\n    // of the modal closing we need to add a small delay to make sure state of the DOM is consistent.\n    return new Promise((resolve) => {\n      window.setTimeout(() => resolve(super.copyLinkToClipboard(link)), 500);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-3 groupings\">\n      <div class=\"card vault-filters\">\n        <div class=\"card-header d-flex\">\n          {{ \"filters\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <input\n            type=\"search\"\n            placeholder=\"{{ searchPlaceholder || ('searchSends' | i18n) }}\"\n            id=\"search\"\n            class=\"form-control\"\n            [(ngModel)]=\"searchText\"\n            (input)=\"searchTextChanged()\"\n            autocomplete=\"off\"\n            appAutofocus\n          />\n          <div class=\"filter\">\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedAll }\">\n                <span class=\"filter-buttons\">\n                  <button bitButton class=\"filter-button\" appStopClick (click)=\"selectAll()\">\n                    <i class=\"bwi bwi-fw bwi-filter\"></i>{{ \"allSends\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n          <div class=\"filter\">\n            <div class=\"filter-heading\">\n              <h3>{{ \"types\" | i18n }}</h3>\n            </div>\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.Text }\">\n                <span class=\"filter-buttons\">\n                  <button\n                    bitButton\n                    class=\"filter-button\"\n                    appStopClick\n                    (click)=\"selectType(sendType.Text)\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-file-text\"></i>{{ \"sendTypeText\" | i18n }}\n                  </button>\n                </span>\n              </li>\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.File }\">\n                <span class=\"filter-buttons\">\n                  <button\n                    bitButton\n                    class=\"filter-button\"\n                    appStopClick\n                    (click)=\"selectType(sendType.File)\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-file\"></i>{{ \"sendTypeFile\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"send\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addSend()\"\n            [disabled]=\"disableSend\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <!--Listing Table-->\n      <table class=\"table table-hover table-list\" *ngIf=\"filteredSends && filteredSends.length\">\n        <tbody>\n          <tr *ngFor=\"let s of filteredSends\">\n            <td class=\"table-list-icon\">\n              <div class=\"icon\" aria-hidden=\"true\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type == sendType.File\"></i>\n                <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type == sendType.Text\"></i>\n              </div>\n            </td>\n            <td class=\"reduced-lh wrap\">\n              <a href=\"#\" appStopClick appStopProp (click)=\"editSend(s)\">{{ s.name }}</a>\n              <ng-container *ngIf=\"s.disabled\">\n                <i\n                  class=\"bwi bwi-exclamation-triangle\"\n                  appStopProp\n                  title=\"{{ 'disabled' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.password\">\n                <i\n                  class=\"bwi bwi-key\"\n                  appStopProp\n                  title=\"{{ 'password' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"password\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.maxAccessCountReached\">\n                <i\n                  class=\"bwi bwi-ban\"\n                  appStopProp\n                  title=\"{{ 'maxAccessCountReached' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.expired\">\n                <i\n                  class=\"bwi bwi-clock\"\n                  appStopProp\n                  title=\"{{ 'expired' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.pendingDelete\">\n                <i\n                  class=\"bwi bwi-trash\"\n                  appStopProp\n                  title=\"{{ 'pendingDeletion' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n              </ng-container>\n              <br />\n              <small appStopProp>{{ s.deletionDate | date: \"medium\" }}</small>\n            </td>\n            <td class=\"table-list-options\">\n              <button\n                [bitMenuTriggerFor]=\"sendOptions\"\n                class=\"tw-border-none tw-bg-transparent tw-text-main\"\n                type=\"button\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu #sendOptions>\n                <button bitMenuItem (click)=\"copy(s)\">\n                  <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                  {{ \"copySendLink\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"removePassword(s)\" *ngIf=\"s.password && !disableSend\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"removePassword\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"delete(s)\">\n                  <span class=\"tw-text-danger\">\n                    <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                    {{ \"delete\" | i18n }}\n                  </span>\n                </button>\n              </bit-menu>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"no-items\" *ngIf=\"filteredSends && !filteredSends.length\">\n        <ng-container *ngIf=\"!loaded\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"loaded\">\n          <img class=\"no-items-image\" aria-hidden=\"true\" />\n          <p>{{ \"noSendsInList\" | i18n }}</p>\n          <button (click)=\"addSend()\" class=\"btn btn-outline-primary\" [disabled]=\"disableSend\">\n            <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #sendAddEdit></ng-template>\n","import { Component, NgZone, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SendComponent as BaseSendComponent } from \"@bitwarden/angular/components/send/send.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\n\nconst BroadcasterSubscriptionId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send\",\n  templateUrl: \"send.component.html\",\n})\nexport class SendComponent extends BaseSendComponent {\n  @ViewChild(\"sendAddEdit\", { read: ViewContainerRef, static: true })\n  sendAddEditModalRef: ViewContainerRef;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    searchService: SearchService,\n    policyService: PolicyService,\n    private modalService: ModalService,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n\n    // Broadcaster subscription - load if sync completes in the background\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n\n    const component = await this.editSend(null);\n    component.type = this.type;\n  }\n\n  async editSend(send: SendView) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.sendAddEditModalRef,\n      (comp) => {\n        comp.sendId = send == null ? null : send.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-deauthorize-sessions\",\n  templateUrl: \"deauthorize-sessions.component.html\",\n})\nexport class DeauthorizeSessionsComponent {\n  masterPassword: Verification;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postSecurityStamp(request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"sessionsDeauthorized\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deAuthTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deAuthTitle\">{{ \"deauthorizeSessions\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deauthorizeSessionsDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deauthorizeSessionsWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deauthorizeSessions\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { AccountService } from \"@bitwarden/common/abstractions/account/account.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-delete-account\",\n  templateUrl: \"delete-account.component.html\",\n})\nexport class DeleteAccountComponent {\n  formPromise: Promise<void>;\n\n  deleteForm = this.formBuilder.group({\n    verification: undefined as Verification | undefined,\n  });\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private formBuilder: FormBuilder,\n    private accountService: AccountService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const verification = this.deleteForm.get(\"verification\").value;\n      this.formPromise = this.accountService.delete(verification);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteAccountTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      [formGroup]=\"deleteForm\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteAccountTitle\">{{ \"deleteAccount\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deleteAccountDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n        <app-user-verification ngDefaultControl formControlName=\"verification\" name=\"verification\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteAccount\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class EmailTokenRequest extends SecretVerificationRequest {\n  newEmail: string;\n  masterPasswordHash: string;\n}\n","import { EmailTokenRequest } from \"./emailTokenRequest\";\n\nexport class EmailRequest extends EmailTokenRequest {\n  newMasterPasswordHash: string;\n  token: string;\n  key: string;\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <app-callout type=\"warning\" *ngIf=\"showTwoFactorEmailWarning\">\n    {{ \"changeEmailTwoFactorWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          [readonly]=\"tokenSent\"\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"newEmail\">{{ \"newEmail\" | i18n }}</label>\n        <input\n          id=\"newEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"NewEmail\"\n          [(ngModel)]=\"newEmail\"\n          required\n          [readonly]=\"tokenSent\"\n          inputmode=\"email\"\n          appInputVerbatim=\"false\"\n        />\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"tokenSent\">\n    <hr />\n    <p>{{ \"changeEmailDesc\" | i18n: newEmail }}</p>\n    <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"token\">{{ \"code\" | i18n }}</label>\n          <input\n            id=\"token\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Token\"\n            [(ngModel)]=\"token\"\n            required\n            appInputVerbatim\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span *ngIf=\"!tokenSent\">{{ \"continue\" | i18n }}</span>\n    <span *ngIf=\"tokenSent\">{{ \"changeEmail\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" *ngIf=\"tokenSent\" (click)=\"reset()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { EmailRequest } from \"@bitwarden/common/models/request/emailRequest\";\nimport { EmailTokenRequest } from \"@bitwarden/common/models/request/emailTokenRequest\";\n\n@Component({\n  selector: \"app-change-email\",\n  templateUrl: \"change-email.component.html\",\n})\nexport class ChangeEmailComponent implements OnInit {\n  masterPassword: string;\n  newEmail: string;\n  token: string;\n  tokenSent = false;\n  showTwoFactorEmailWarning = false;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    const twoFactorProviders = await this.apiService.getTwoFactorProviders();\n    this.showTwoFactorEmailWarning = twoFactorProviders.data.some(\n      (p) => p.type === TwoFactorProviderType.Email && p.enabled\n    );\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    this.newEmail = this.newEmail.trim().toLowerCase();\n    if (!this.tokenSent) {\n      const request = new EmailTokenRequest();\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      try {\n        this.formPromise = this.apiService.postEmailToken(request);\n        await this.formPromise;\n        this.tokenSent = true;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const request = new EmailRequest();\n      request.token = this.token;\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.newEmail,\n        kdf,\n        kdfIterations\n      );\n      request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        newKey\n      );\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n      request.key = newEncKey[1].encryptedString;\n      try {\n        this.formPromise = this.apiService.postEmail(request);\n        await this.formPromise;\n        this.reset();\n        this.platformUtilsService.showToast(\n          \"success\",\n          this.i18nService.t(\"emailChanged\"),\n          this.i18nService.t(\"logBackIn\")\n        );\n        this.messagingService.send(\"logout\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n\n  reset() {\n    this.token = this.newEmail = this.masterPassword = null;\n    this.tokenSent = false;\n  }\n}\n","export class UpdateProfileRequest {\n  name: string;\n  masterPasswordHint: string;\n  culture = \"en-US\"; // deprecated\n\n  constructor(name: string, masterPasswordHint: string) {\n    this.name = name;\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"profile && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"profile.name\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">{{ \"email\" | i18n }}</label>\n        <input\n          id=\"email\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Email\"\n          [(ngModel)]=\"profile.email\"\n          readonly\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"mb-3\">\n        <app-avatar\n          data=\"{{ profile | userName }}\"\n          [email]=\"profile.email\"\n          dynamic=\"true\"\n          size=\"75\"\n          fontSize=\"35\"\n        >\n        </app-avatar>\n      </div>\n      <hr />\n      <p *ngIf=\"fingerprint\">\n        {{ \"yourAccountsFingerprint\" | i18n }}:\n        <a\n          href=\"https://bitwarden.com/help/fingerprint-phrase/\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i></a\n        ><br />\n        <code>{{ fingerprint }}</code>\n      </p>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UpdateProfileRequest } from \"@bitwarden/common/models/request/updateProfileRequest\";\nimport { ProfileResponse } from \"@bitwarden/common/models/response/profileResponse\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"profile.component.html\",\n})\nexport class ProfileComponent implements OnInit {\n  loading = true;\n  profile: ProfileResponse;\n  fingerprint: string;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.profile = await this.apiService.getProfile();\n    this.loading = false;\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    if (fingerprint != null) {\n      this.fingerprint = fingerprint.join(\"-\");\n    }\n  }\n\n  async submit() {\n    try {\n      const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\n      this.formPromise = this.apiService.putProfile(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"accountUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myAccount\" | i18n }}</h1>\n</div>\n<app-profile></app-profile>\n<ng-container *ngIf=\"showChangeEmail\">\n  <div class=\"secondary-header\">\n    <h1>{{ \"changeEmail\" | i18n }}</h1>\n  </div>\n  <app-change-email></app-change-email>\n</ng-container>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button bitButton buttonType=\"danger\" (click)=\"deauthorizeSessions()\">\n      {{ \"deauthorizeSessions\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"deleteAccount()\">\n      {{ \"deleteAccount\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deauthorizeSessionsTemplate></ng-template>\n<ng-template #purgeVaultTemplate></ng-template>\n<ng-template #deleteAccountTemplate></ng-template>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { DeauthorizeSessionsComponent } from \"./deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"./delete-account.component\";\nimport { PurgeVaultComponent } from \"./purge-vault.component\";\n\n@Component({\n  selector: \"app-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"deauthorizeSessionsTemplate\", { read: ViewContainerRef, static: true })\n  deauthModalRef: ViewContainerRef;\n  @ViewChild(\"purgeVaultTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"deleteAccountTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  showChangeEmail = true;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeEmail = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async deauthorizeSessions() {\n    await this.modalService.openViewRef(DeauthorizeSessionsComponent, this.deauthModalRef);\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef);\n  }\n\n  async deleteAccount() {\n    await this.modalService.openViewRef(DeleteAccountComponent, this.deleteModalRef);\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"./organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.plan === \"families\") {\n        this.orgPlansComponent.plan = PlanType.FamiliesAnnually;\n        this.orgPlansComponent.product = ProductType.Families;\n      } else if (qParams.plan === \"teams\") {\n        this.orgPlansComponent.plan = PlanType.TeamsAnnually;\n        this.orgPlansComponent.product = ProductType.Teams;\n      } else if (qParams.plan === \"enterprise\") {\n        this.orgPlansComponent.plan = PlanType.EnterpriseAnnually;\n        this.orgPlansComponent.product = ProductType.Enterprise;\n      }\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"page-header\">\n        <h1>{{ \"newOrganization\" | i18n }}</h1>\n      </div>\n      <p>{{ \"newOrganizationDesc\" | i18n }}</p>\n      <app-organization-plans></app-organization-plans>\n    </div>\n  </div>\n</div>\n","export class UpdateDomainsRequest {\n  equivalentDomains: string[][];\n  excludedGlobalEquivalentDomains: number[];\n}\n","<div class=\"page-header\">\n  <h1>{{ \"domainRules\" | i18n }}</h1>\n</div>\n<p>{{ \"domainRulesDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <h2>{{ \"customEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"form-group d-flex\" *ngFor=\"let d of custom; let i = index; trackBy: indexTrackBy\">\n      <div class=\"flex-fill\">\n        <label for=\"customDomain_{{ i }}\" class=\"sr-only\">{{\n          \"customDomainX\" | i18n: i + 1\n        }}</label>\n        <textarea\n          class=\"form-control\"\n          name=\"CustomDomain[{{ i }}]\"\n          id=\"customDomain_{{ i }}\"\n          [(ngModel)]=\"custom[i]\"\n          placeholder=\"{{ 'ex' | i18n }} google.com, gmail.com\"\n          required\n        ></textarea>\n      </div>\n      <button\n        type=\"button\"\n        class=\"btn btn-link text-danger ml-2\"\n        (click)=\"remove(i)\"\n        appA11yTitle=\"{{ 'remove' | i18n }}\"\n      >\n        <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <button type=\"button\" (click)=\"add()\" class=\"btn btn-outline-secondary btn-sm mb-2\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomDomain\" | i18n }}\n    </button>\n    <small class=\"text-muted d-block mb-3\">{{ \"newCustomDomainDesc\" | i18n }}</small>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n  <h2 class=\"spaced-header\">{{ \"globalEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <table class=\"table table-hover table-list\" *ngIf=\"!loading && global.length > 0\">\n    <tbody>\n      <tr *ngFor=\"let d of global\">\n        <td [ngClass]=\"{ 'table-list-strike': d.excluded }\">{{ d.domains }}</td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"!d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                {{ \"exclude\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-plus\" aria-hidden=\"true\"></i>\n                {{ \"include\" | i18n }}\n              </a>\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"customize(d)\">\n                <i class=\"bwi bwi-fw bwi-cut\" aria-hidden=\"true\"></i>\n                {{ \"customize\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UpdateDomainsRequest } from \"@bitwarden/common/models/request/updateDomainsRequest\";\n\n@Component({\n  selector: \"app-domain-rules\",\n  templateUrl: \"domain-rules.component.html\",\n})\nexport class DomainRulesComponent implements OnInit {\n  loading = true;\n  custom: string[] = [];\n  global: any[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const response = await this.apiService.getSettingsDomains();\n    this.loading = false;\n    if (response.equivalentDomains != null) {\n      this.custom = response.equivalentDomains.map((d) => d.join(\", \"));\n    }\n    if (response.globalEquivalentDomains != null) {\n      this.global = response.globalEquivalentDomains.map((d) => {\n        return {\n          domains: d.domains.join(\", \"),\n          excluded: d.excluded,\n          key: d.type,\n        };\n      });\n    }\n  }\n\n  toggleExcluded(globalDomain: any) {\n    globalDomain.excluded = !globalDomain.excluded;\n  }\n\n  customize(globalDomain: any) {\n    globalDomain.excluded = true;\n    this.custom.push(globalDomain.domains);\n  }\n\n  remove(index: number) {\n    this.custom.splice(index, 1);\n  }\n\n  add() {\n    this.custom.push(\"\");\n  }\n\n  async submit() {\n    const request = new UpdateDomainsRequest();\n    request.excludedGlobalEquivalentDomains = this.global\n      .filter((d) => d.excluded)\n      .map((d) => d.key);\n    if (request.excludedGlobalEquivalentDomains.length === 0) {\n      request.excludedGlobalEquivalentDomains = null;\n    }\n    request.equivalentDomains = this.custom\n      .filter((d) => d != null && d.trim() !== \"\")\n      .map((d) => d.split(\",\").map((d2) => d2.trim()));\n    if (request.equivalentDomains.length === 0) {\n      request.equivalentDomains = null;\n    }\n\n    try {\n      this.formPromise = this.apiService.putSettingsDomains(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"domainsUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  indexTrackBy(index: number, obj: any): any {\n    return index;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\n\n@Component({\n  selector: \"emergency-access-attachments\",\n  templateUrl: \"../vault/attachments.component.html\",\n})\nexport class EmergencyAccessAttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = true;\n  canAccessAttachments = true;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async init() {\n    // Do nothing since cipher is already decoded\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return false;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../vault/add-edit.component.html\",\n})\nexport class EmergencyAddEditComponent extends BaseAddEditComponent {\n  originalCipher: Cipher = null;\n  viewOnly = true;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    messagingService: MessagingService,\n    eventService: EventService,\n    policyService: PolicyService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async load() {\n    this.title = this.i18nService.t(\"viewItem\");\n  }\n\n  protected async loadCipher() {\n    return Promise.resolve(this.originalCipher);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"vault\" | i18n }}</h1>\n</div>\n<div class=\"mt-4\">\n  <ng-container *ngIf=\"ciphers.length\">\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown *ngIf=\"c.hasAttachments\">\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"viewAttachments(c)\">\n                  <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n                  {{ \"attachments\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #attachments></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { EmergencyAccessViewResponse } from \"@bitwarden/common/models/response/emergencyAccessResponse\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { EmergencyAccessAttachmentsComponent } from \"./emergency-access-attachments.component\";\nimport { EmergencyAddEditComponent } from \"./emergency-add-edit.component\";\n\n@Component({\n  selector: \"emergency-access-view\",\n  templateUrl: \"emergency-access-view.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessViewComponent implements OnInit {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n\n  id: string;\n  ciphers: CipherView[] = [];\n  loaded = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private modalService: ModalService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private apiService: ApiService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.route.params.subscribe((qParams) => {\n      if (qParams.id == null) {\n        return this.router.navigate([\"settings/emergency-access\"]);\n      }\n\n      this.id = qParams.id;\n\n      this.load();\n    });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    // eslint-disable-next-line\n    const [_, childComponent] = await this.modalService.openViewRef(\n      EmergencyAddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.cipher = cipher;\n      }\n    );\n\n    return childComponent;\n  }\n\n  async load() {\n    const response = await this.apiService.postEmergencyAccessView(this.id);\n    this.ciphers = await this.getAllCiphers(response);\n    this.loaded = true;\n  }\n\n  async viewAttachments(cipher: CipherView) {\n    await this.modalService.openViewRef(\n      EmergencyAccessAttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipher = cipher;\n        comp.emergencyAccessId = this.id;\n      }\n    );\n  }\n\n  protected async getAllCiphers(response: EmergencyAccessViewResponse): Promise<CipherView[]> {\n    const ciphers = response.ciphers;\n\n    const decCiphers: CipherView[] = [];\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(response.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    const promises: any[] = [];\n    ciphers.forEach((cipherResponse) => {\n      const cipherData = new CipherData(cipherResponse);\n      const cipher = new Cipher(cipherData);\n      promises.push(cipher.decrypt(oldEncKey).then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.cipherService.getLocaleSortingFunction());\n\n    return decCiphers;\n  }\n}\n","export enum EmergencyAccessStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  RecoveryInitiated = 3,\n  RecoveryApproved = 4,\n}\n","export enum EmergencyAccessType {\n  View = 0,\n  Takeover = 1,\n}\n","export class EmergencyAccessConfirmRequest {\n  key: string;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessInviteRequest {\n  email: string;\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessUpdateRequest {\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n  keyEncrypted?: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          <app-premium-badge *ngIf=\"readOnly\"></app-premium-badge>\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteEmergencyContactDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"email\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n            />\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userAccess\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/emergency-access/#user-access\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeView\"\n            [value]=\"emergencyAccessType.View\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeView\">\n            {{ \"view\" | i18n }}\n            <small>{{ \"viewDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeTakeover\"\n            [value]=\"emergencyAccessType.Takeover\"\n            [(ngModel)]=\"type\"\n            [disabled]=\"readOnly\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeTakeover\">\n            {{ \"takeover\" | i18n }}\n            <small>{{ \"takeoverDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-group col-6 mt-4\">\n          <label for=\"waitTime\">{{ \"waitTime\" | i18n }}</label>\n          <select\n            id=\"waitTime\"\n            name=\"waitTime\"\n            [(ngModel)]=\"waitTime\"\n            class=\"form-control\"\n            [disabled]=\"readOnly\"\n          >\n            <option *ngFor=\"let o of waitTimes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n          <small class=\"text-muted\">{{ \"waitTimeDesc\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <bit-submit-button [loading]=\"loading || form.loading\" [disabled]=\"readOnly\">\n          {{ \"save\" | i18n }}\n        </bit-submit-button>\n        <button bitButton buttonType=\"secondary\" type=\"button\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            bitButton\n            buttonType=\"danger\"\n            type=\"button\"\n            (click)=\"delete()\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EmergencyAccessType } from \"@bitwarden/common/enums/emergencyAccessType\";\nimport { EmergencyAccessInviteRequest } from \"@bitwarden/common/models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/models/request/emergencyAccessUpdateRequest\";\n\n@Component({\n  selector: \"emergency-access-add-edit\",\n  templateUrl: \"emergency-access-add-edit.component.html\",\n})\nexport class EmergencyAccessAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() emergencyAccessId: string;\n  @Output() onSaved = new EventEmitter();\n  @Output() onDeleted = new EventEmitter();\n\n  loading = true;\n  readOnly = false;\n  editMode = false;\n  title: string;\n  email: string;\n  type: EmergencyAccessType = EmergencyAccessType.View;\n\n  formPromise: Promise<any>;\n\n  emergencyAccessType = EmergencyAccessType;\n  waitTimes: { name: string; value: number }[];\n  waitTime: number;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.emergencyAccessId != null;\n\n    this.waitTimes = [\n      { name: this.i18nService.t(\"oneDay\"), value: 1 },\n      { name: this.i18nService.t(\"days\", \"2\"), value: 2 },\n      { name: this.i18nService.t(\"days\", \"7\"), value: 7 },\n      { name: this.i18nService.t(\"days\", \"14\"), value: 14 },\n      { name: this.i18nService.t(\"days\", \"30\"), value: 30 },\n      { name: this.i18nService.t(\"days\", \"90\"), value: 90 },\n    ];\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editEmergencyContact\");\n      try {\n        const emergencyAccess = await this.apiService.getEmergencyAccess(this.emergencyAccessId);\n        this.type = emergencyAccess.type;\n        this.waitTime = emergencyAccess.waitTimeDays;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteEmergencyContact\");\n      this.waitTime = this.waitTimes[2].value;\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new EmergencyAccessUpdateRequest();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.putEmergencyAccess(this.emergencyAccessId, request);\n      } else {\n        const request = new EmergencyAccessInviteRequest();\n        request.email = this.email.trim();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.postEmergencyAccessInvite(request);\n      }\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSaved.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    this.onDeleted.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"emergency-access-confirm\",\n  templateUrl: \"emergency-access-confirm.component.html\",\n})\nexport class EmergencyAccessConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() emergencyAccessId: string;\n  @Input() formPromise: Promise<any>;\n  @Output() onConfirmed = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n\n  constructor(\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\n      if (publicKeyResponse != null) {\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n        const fingerprint = await this.cryptoService.getFingerprint(this.userId, publicKey.buffer);\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    try {\n      this.onConfirmed.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export class EmergencyAccessPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ \"takeover\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPassword\"\n                type=\"password\"\n                name=\"NewMasterPasswordHash\"\n                class=\"form-control mb-1\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <app-password-strength\n                [password]=\"masterPassword\"\n                [email]=\"email\"\n                [showText]=\"true\"\n                (passwordStrengthResult)=\"getStrengthResult($event)\"\n              >\n              </app-password-strength>\n            </div>\n          </div>\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"password\"\n                name=\"MasterPasswordRetype\"\n                class=\"form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ChangePasswordComponent } from \"@bitwarden/angular/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { EmergencyAccessPasswordRequest } from \"@bitwarden/common/models/request/emergencyAccessPasswordRequest\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\n@Component({\n  selector: \"emergency-access-takeover\",\n  templateUrl: \"emergency-access-takeover.component.html\",\n})\nexport class EmergencyAccessTakeoverComponent extends ChangePasswordComponent implements OnInit {\n  @Output() onDone = new EventEmitter();\n  @Input() emergencyAccessId: string;\n  @Input() name: string;\n  @Input() email: string;\n  @Input() kdf: KdfType;\n  @Input() kdfIterations: number;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private apiService: ApiService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    const response = await this.apiService.getEmergencyGrantorPolicies(this.emergencyAccessId);\n    if (response.data != null && response.data.length > 0) {\n      const policies = response.data.map(\n        (policyResponse: PolicyResponse) => new Policy(new PolicyData(policyResponse))\n      );\n      this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(\n        policies\n      );\n    }\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    const takeoverResponse = await this.apiService.postEmergencyAccessTakeover(\n      this.emergencyAccessId\n    );\n\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(takeoverResponse.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    if (oldEncKey == null) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"unexpectedError\")\n      );\n      return;\n    }\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      takeoverResponse.kdf,\n      takeoverResponse.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    const encKey = await this.cryptoService.remakeEncKey(key, oldEncKey);\n\n    const request = new EmergencyAccessPasswordRequest();\n    request.newMasterPasswordHash = masterPasswordHash;\n    request.key = encKey[1].encryptedString;\n\n    this.apiService.postEmergencyAccessPassword(this.emergencyAccessId, request);\n\n    try {\n      this.onDone.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"emergencyAccess\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"emergencyAccessDesc\" | i18n }}\n  <a href=\"https://bitwarden.com/help/emergency-access/\" target=\"_blank\" rel=\"noopener\">\n    {{ \"learnMore\" | i18n }}.\n  </a>\n</p>\n\n<p *ngIf=\"isOrganizationOwner\">\n  <b>{{ \"warning\" | i18n }}:</b> {{ \"emergencyAccessOwnerWarning\" | i18n }}\n</p>\n\n<div class=\"page-header d-flex\">\n  <h2>\n    {{ \"trustedEmergencyContacts\" | i18n }}\n    <app-premium-badge></app-premium-badge>\n  </h2>\n  <div class=\"ml-auto d-flex\">\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      type=\"button\"\n      (click)=\"invite()\"\n      [disabled]=\"!canAccessPremium\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-plus bwi-fw\"></i>\n      {{ \"addEmergencyContact\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"trustedContacts && trustedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of trustedContacts; let i = index\">\n      <td width=\"30\">\n        <app-avatar\n          [data]=\"c | userName\"\n          [email]=\"c.email\"\n          size=\"25\"\n          [circle]=\"true\"\n          [fontSize]=\"14\"\n        >\n        </app-avatar>\n      </td>\n      <td>\n        <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.email }}</a>\n        <span\n          bitBadge\n          badgeType=\"secondary\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n          >{{ \"invited\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\">{{\n          \"emergencyAccessRecoveryApproved\" | i18n\n        }}</span>\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"trustedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #trustedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n            (click)=\"reinvite(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"resendInvitation\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n            (click)=\"confirm(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"confirm\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n            (click)=\"approve(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"approve\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryInitiated ||\n              c.status === emergencyAccessStatusType.RecoveryApproved\n            \"\n            (click)=\"reject(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"reject\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!trustedContacts || !trustedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noTrustedContacts\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<div class=\"page-header spaced-header\">\n  <h2>{{ \"designatedEmergencyContacts\" | i18n }}</h2>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"grantedContacts && grantedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of grantedContacts; let i = index\">\n      <td width=\"30\">\n        <app-avatar\n          [data]=\"c | userName\"\n          [email]=\"c.email\"\n          size=\"25\"\n          [circle]=\"true\"\n          [fontSize]=\"14\"\n        >\n        </app-avatar>\n      </td>\n      <td>\n        <span>{{ c.email }}</span>\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.Invited\">{{\n          \"invited\" | i18n\n        }}</span>\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"success\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\"\n          >{{ \"emergencyAccessRecoveryApproved\" | i18n }}</span\n        >\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"grantedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #grantedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Confirmed\"\n            (click)=\"requestAccess(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"requestAccess\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.Takeover\n            \"\n            (click)=\"takeover(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n            {{ \"takeover\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.View\n            \"\n            [routerLink]=\"c.id\"\n          >\n            <i class=\"bwi bwi-fw bwi-eye\" aria-hidden=\"true\"></i>\n            {{ \"view\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!grantedContacts || !grantedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noGrantedAccess\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<ng-template #addEdit></ng-template>\n<ng-template #takeoverTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"@bitwarden/common/enums/emergencyAccessType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EmergencyAccessConfirmRequest } from \"@bitwarden/common/models/request/emergencyAccessConfirmRequest\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n} from \"@bitwarden/common/models/response/emergencyAccessResponse\";\n\nimport { EmergencyAccessAddEditComponent } from \"./emergency-access-add-edit.component\";\nimport { EmergencyAccessConfirmComponent } from \"./emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"./emergency-access-takeover.component\";\n\n@Component({\n  selector: \"emergency-access\",\n  templateUrl: \"emergency-access.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"takeoverTemplate\", { read: ViewContainerRef, static: true })\n  takeoverModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  loaded = false;\n  canAccessPremium: boolean;\n  trustedContacts: EmergencyAccessGranteeDetailsResponse[];\n  grantedContacts: EmergencyAccessGrantorDetailsResponse[];\n  emergencyAccessType = EmergencyAccessType;\n  emergencyAccessStatusType = EmergencyAccessStatusType;\n  actionPromise: Promise<any>;\n  isOrganizationOwner: boolean;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const orgs = await this.organizationService.getAll();\n    this.isOrganizationOwner = orgs.some((o) => o.isOwner);\n    this.load();\n  }\n\n  async load() {\n    this.trustedContacts = (await this.apiService.getEmergencyAccessTrusted()).data;\n    this.grantedContacts = (await this.apiService.getEmergencyAccessGranted()).data;\n    this.loaded = true;\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  async edit(details: EmergencyAccessGranteeDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.emergencyAccessId = details?.id;\n        comp.readOnly = !this.canAccessPremium;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSaved.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeleted.subscribe(() => {\n          modal.close();\n          this.remove(details);\n        });\n      }\n    );\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  async reinvite(contact: EmergencyAccessGranteeDetailsResponse) {\n    if (this.actionPromise != null) {\n      return;\n    }\n    this.actionPromise = this.apiService.postEmergencyAccessReinvite(contact.id);\n    await this.actionPromise;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenReinvited\", contact.email)\n    );\n    this.actionPromise = null;\n  }\n\n  async confirm(contact: EmergencyAccessGranteeDetailsResponse) {\n    function updateUser() {\n      contact.status = EmergencyAccessStatusType.Confirmed;\n    }\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n    if (autoConfirm == null || !autoConfirm) {\n      const [modal] = await this.modalService.openViewRef(\n        EmergencyAccessConfirmComponent,\n        this.confirmModalRef,\n        (comp) => {\n          comp.name = this.userNamePipe.transform(contact);\n          comp.emergencyAccessId = contact.id;\n          comp.userId = contact?.granteeId;\n          // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n          comp.onConfirmed.subscribe(async () => {\n            modal.close();\n\n            comp.formPromise = this.doConfirmation(contact);\n            await comp.formPromise;\n\n            updateUser();\n            this.platformUtilsService.showToast(\n              \"success\",\n              null,\n              this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n            );\n          });\n        }\n      );\n      return;\n    }\n\n    this.actionPromise = this.doConfirmation(contact);\n    await this.actionPromise;\n    updateUser();\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n    );\n    this.actionPromise = null;\n  }\n\n  async remove(\n    details: EmergencyAccessGranteeDetailsResponse | EmergencyAccessGrantorDetailsResponse\n  ) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteEmergencyAccess(details.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(details))\n      );\n\n      if (details instanceof EmergencyAccessGranteeDetailsResponse) {\n        this.removeGrantee(details);\n      } else {\n        this.removeGrantor(details);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async requestAccess(details: EmergencyAccessGrantorDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"requestAccessConfirmation\", details.waitTimeDays.toString()),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"requestAccess\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessInitiate(details.id);\n\n    details.status = EmergencyAccessStatusType.RecoveryInitiated;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"requestSent\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async approve(details: EmergencyAccessGranteeDetailsResponse) {\n    const type = this.i18nService.t(\n      details.type === EmergencyAccessType.View ? \"view\" : \"takeover\"\n    );\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"approveAccessConfirmation\", this.userNamePipe.transform(details), type),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"approve\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessApprove(details.id);\n    details.status = EmergencyAccessStatusType.RecoveryApproved;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyApproved\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async reject(details: EmergencyAccessGranteeDetailsResponse) {\n    await this.apiService.postEmergencyAccessReject(details.id);\n    details.status = EmergencyAccessStatusType.Confirmed;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyRejected\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async takeover(details: EmergencyAccessGrantorDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessTakeoverComponent,\n      this.takeoverModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.email = details.email;\n        comp.emergencyAccessId = details != null ? details.id : null;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDone.subscribe(() => {\n          modal.close();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"passwordResetFor\", this.userNamePipe.transform(details))\n          );\n        });\n      }\n    );\n  }\n\n  private removeGrantee(details: EmergencyAccessGranteeDetailsResponse) {\n    const index = this.trustedContacts.indexOf(details);\n    if (index > -1) {\n      this.trustedContacts.splice(index, 1);\n    }\n  }\n\n  private removeGrantor(details: EmergencyAccessGrantorDetailsResponse) {\n    const index = this.grantedContacts.indexOf(details);\n    if (index > -1) {\n      this.grantedContacts.splice(index, 1);\n    }\n  }\n\n  // Encrypt the master password hash using the grantees public key, and send it to bitwarden for escrow.\n  private async doConfirmation(details: EmergencyAccessGranteeDetailsResponse) {\n    const encKey = await this.cryptoService.getEncKey();\n    const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n    const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n    try {\n      this.logService.debug(\n        \"User's fingerprint: \" +\n          (await this.cryptoService.getFingerprint(details.granteeId, publicKey.buffer)).join(\"-\")\n      );\n    } catch {\n      // Ignore errors since it's just a debug message\n    }\n\n    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n    const request = new EmergencyAccessConfirmRequest();\n    request.key = encryptedKey.encryptedString;\n    await this.apiService.postEmergencyAccessConfirm(details.id, request);\n  }\n}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  UntypedFormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent implements ControlValueAccessor, Validator, OnInit {\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  get exceedsMinimumTimout(): boolean {\n    return (\n      !this.showCustom || this.customTimeInMinutes() > VaultTimeoutInputComponent.MIN_CUSTOM_MINUTES\n    );\n  }\n\n  static CUSTOM_VALUE = -100;\n  static MIN_CUSTOM_MINUTES = 0;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    if (await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout)) {\n      const vaultTimeoutPolicy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout);\n\n      this.vaultTimeoutPolicy = vaultTimeoutPolicy[0];\n      this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n      this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n      this.vaultTimeouts = this.vaultTimeouts.filter(\n        (t) =>\n          t.value <= this.vaultTimeoutPolicy.data.minutes &&\n          (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n          t.value != null\n      );\n      this.validatorChange();\n    }\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    if (!this.exceedsMinimumTimout) {\n      return { minTimeoutError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n\n  private customTimeInMinutes() {\n    return this.form.get(\"custom.hours\")?.value * 60 + this.form.get(\"custom.minutes\")?.value;\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"form-group\">\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n    <small class=\"form-text text-muted\">{{ \"vaultTimeoutDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\" *ngIf=\"showCustom\" formGroupName=\"custom\">\n    <label for=\"customVaultTimeout\">{{ \"customVaultTimeout\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n\n    <small *ngIf=\"!exceedsMinimumTimout\" class=\"tw-text-danger\">\n      <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i> {{ \"vaultCustomTimeoutMinimum\" | i18n }}\n    </small>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"@bitwarden/angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<div class=\"page-header\">\n  <h1>{{ \"preferences\" | i18n }}</h1>\n</div>\n<p>{{ \"preferencesDesc\" | i18n }}</p>\n<form (ngSubmit)=\"submit()\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label>{{ \"vaultTimeoutAction\" | i18n }}</label>\n    <div class=\"form-check form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLock\"\n        value=\"lock\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLock\">\n        {{ \"lock\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLockDesc\" | i18n }}</small>\n      </label>\n    </div>\n    <div class=\"form-check mt-2 form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLogOut\"\n        value=\"logOut\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n        (ngModelChange)=\"vaultTimeoutActionChanged($event)\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLogOut\">\n        {{ \"logOut\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLogOutDesc\" | i18n }}</small>\n      </label>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <div class=\"d-flex\">\n          <label for=\"locale\">{{ \"language\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/localization/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <select id=\"locale\" name=\"Locale\" [(ngModel)]=\"locale\" class=\"form-control\">\n          <option *ngFor=\"let o of localeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"languageDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFavicons\"\n        name=\"enableFavicons\"\n        [(ngModel)]=\"enableFavicons\"\n      />\n      <label class=\"form-check-label\" for=\"enableFavicons\">\n        {{ \"enableFavicon\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/website-icons/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"faviconDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableGravatars\"\n        name=\"enableGravatars\"\n        [(ngModel)]=\"enableGravatars\"\n      />\n      <label class=\"form-check-label\" for=\"enableGravatars\">\n        {{ \"enableGravatars\" | i18n }}\n      </label>\n      <a\n        href=\"https://gravatar.com/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableGravatarsDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFullWidth\"\n        name=\"enableFullWidth\"\n        [(ngModel)]=\"enableFullWidth\"\n      />\n      <label class=\"form-check-label\" for=\"enableFullWidth\">\n        {{ \"enableFullWidth\" | i18n }}\n      </label>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableFullWidthDesc\" | i18n }}</small>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n        <select id=\"theme\" name=\"theme\" [(ngModel)]=\"theme\" class=\"form-control\">\n          <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"themeDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormControl } from \"@angular/forms\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-preferences\",\n  templateUrl: \"preferences.component.html\",\n})\nexport class PreferencesComponent implements OnInit {\n  vaultTimeoutAction = \"lock\";\n  enableFavicons: boolean;\n  enableGravatars: boolean;\n  enableFullWidth: boolean;\n  theme: ThemeType;\n  locale: string;\n  vaultTimeouts: { name: string; value: number }[];\n  localeOptions: any[];\n  themeOptions: any[];\n\n  vaultTimeout: UntypedFormControl = new UntypedFormControl(null);\n\n  private startingLocale: string;\n  private startingTheme: ThemeType;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    private platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private themingService: AbstractThemingService\n  ) {\n    this.vaultTimeouts = [\n      { name: i18nService.t(\"oneMinute\"), value: 1 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: i18nService.t(\"oneHour\"), value: 60 },\n      { name: i18nService.t(\"fourHours\"), value: 240 },\n      { name: i18nService.t(\"onRefresh\"), value: -1 },\n    ];\n    if (this.platformUtilsService.isDev()) {\n      this.vaultTimeouts.push({ name: i18nService.t(\"never\"), value: null });\n    }\n\n    const localeOptions: any[] = [];\n    i18nService.supportedTranslationLocales.forEach((locale) => {\n      let name = locale;\n      if (i18nService.localeNames.has(locale)) {\n        name += \" - \" + i18nService.localeNames.get(locale);\n      }\n      localeOptions.push({ name: name, value: locale });\n    });\n    localeOptions.sort(Utils.getSortFunction(i18nService, \"name\"));\n    localeOptions.splice(0, 0, { name: i18nService.t(\"default\"), value: null });\n    this.localeOptions = localeOptions;\n    this.themeOptions = [\n      { name: i18nService.t(\"themeLight\"), value: ThemeType.Light },\n      { name: i18nService.t(\"themeDark\"), value: ThemeType.Dark },\n      { name: i18nService.t(\"themeSystem\"), value: ThemeType.System },\n    ];\n  }\n\n  async ngOnInit() {\n    this.vaultTimeout.setValue(await this.vaultTimeoutSettingsService.getVaultTimeout());\n    this.vaultTimeoutAction = await this.stateService.getVaultTimeoutAction();\n    this.enableFavicons = !(await this.stateService.getDisableFavicon());\n    this.enableGravatars = await this.stateService.getEnableGravitars();\n    this.enableFullWidth = await this.stateService.getEnableFullWidth();\n\n    this.locale = (await this.stateService.getLocale()) ?? null;\n    this.startingLocale = this.locale;\n\n    this.theme = await this.stateService.getTheme();\n    this.startingTheme = this.theme;\n  }\n\n  async submit() {\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutRangeError\")\n      );\n      return;\n    }\n\n    await this.vaultTimeoutSettingsService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    await this.stateService.setDisableFavicon(!this.enableFavicons);\n    await this.stateService.setEnableGravitars(this.enableGravatars);\n    await this.stateService.setEnableFullWidth(this.enableFullWidth);\n    this.messagingService.send(\"setFullWidth\");\n    if (this.theme !== this.startingTheme) {\n      await this.themingService.updateConfiguredTheme(this.theme);\n      this.startingTheme = this.theme;\n    }\n    await this.stateService.setLocale(this.locale);\n    if (this.locale !== this.startingLocale) {\n      window.location.reload();\n    } else {\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"preferencesUpdated\")\n      );\n    }\n  }\n\n  async vaultTimeoutActionChanged(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutAction = \"lock\";\n        return;\n      }\n    }\n    this.vaultTimeoutAction = newValue;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nimport { FolderRequest } from \"./folderRequest\";\n\nexport class FolderWithIdRequest extends FolderRequest {\n  id: string;\n\n  constructor(folder: Folder) {\n    super(folder);\n    this.id = folder.id;\n  }\n}\n","import { Send } from \"../domain/send\";\n\nimport { SendRequest } from \"./sendRequest\";\n\nexport class SendWithIdRequest extends SendRequest {\n  id: string;\n\n  constructor(send: Send) {\n    super(send);\n    this.id = send.id;\n  }\n}\n","import { CipherWithIdRequest } from \"./cipherWithIdRequest\";\nimport { FolderWithIdRequest } from \"./folderWithIdRequest\";\nimport { SendWithIdRequest } from \"./sendWithIdRequest\";\n\nexport class UpdateKeyRequest {\n  ciphers: CipherWithIdRequest[] = [];\n  folders: FolderWithIdRequest[] = [];\n  sends: SendWithIdRequest[] = [];\n  masterPasswordHash: string;\n  privateKey: string;\n  key: string;\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"changeMasterPassword\" | i18n }}</h1>\n</div>\n\n<bit-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</bit-callout>\n<app-callout\n  type=\"info\"\n  [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n  *ngIf=\"enforcedPolicyOptions\"\n>\n</app-callout>\n\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n        <input\n          id=\"currentMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"currentMasterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n        <input\n          id=\"newMasterPassword\"\n          type=\"password\"\n          name=\"NewMasterPasswordHash\"\n          class=\"form-control mb-1\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n        <app-password-strength\n          [password]=\"masterPassword\"\n          [email]=\"email\"\n          [showText]=\"true\"\n          (passwordStrengthResult)=\"getStrengthResult($event)\"\n        >\n        </app-password-strength>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n        <input\n          id=\"masterPasswordRetype\"\n          type=\"password\"\n          name=\"MasterPasswordRetype\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPasswordRetype\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"masterPasswordHint\">{{ \"masterPassHintLabel\" | i18n }}</label>\n    <input\n      id=\"masterPasswordHint\"\n      class=\"form-control\"\n      maxlength=\"50\"\n      type=\"text\"\n      name=\"MasterPasswordHint\"\n      [(ngModel)]=\"masterPasswordHint\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"rotateEncKey\"\n        name=\"RotateEncKey\"\n        [(ngModel)]=\"rotateEncKey\"\n        (change)=\"rotateEncKeyClicked()\"\n      />\n      <label class=\"form-check-label\" for=\"rotateEncKey\">\n        {{ \"rotateAccountEncKey\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"changeMasterPassword\" | i18n }}\n  </bit-submit-button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"@bitwarden/angular/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/enums/emergencyAccessStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/models/request/cipherWithIdRequest\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/models/request/emergencyAccessUpdateRequest\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/models/request/folderWithIdRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { PasswordRequest } from \"@bitwarden/common/models/request/passwordRequest\";\nimport { SendWithIdRequest } from \"@bitwarden/common/models/request/sendWithIdRequest\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/updateKeyRequest\";\n\n@Component({\n  selector: \"app-change-password\",\n  templateUrl: \"change-password.component.html\",\n})\nexport class ChangePasswordComponent extends BaseChangePasswordComponent {\n  rotateEncKey = false;\n  currentMasterPassword: string;\n  masterPasswordHint: string;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private syncService: SyncService,\n    private apiService: ApiService,\n    private sendService: SendService,\n    private organizationService: OrganizationService,\n    private keyConnectorService: KeyConnectorService,\n    private router: Router,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      this.router.navigate([\"/settings/security/two-factor\"]);\n    }\n\n    this.masterPasswordHint = (await this.apiService.getProfile()).masterPasswordHint;\n    await super.ngOnInit();\n  }\n\n  async rotateEncKeyClicked() {\n    if (this.rotateEncKey) {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      let hasOldAttachments = false;\n      if (ciphers != null) {\n        for (let i = 0; i < ciphers.length; i++) {\n          if (ciphers[i].organizationId == null && ciphers[i].hasOldAttachments) {\n            hasOldAttachments = true;\n            break;\n          }\n        }\n      }\n\n      if (hasOldAttachments) {\n        const learnMore = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"oldAttachmentsNeedFixDesc\"),\n          null,\n          this.i18nService.t(\"learnMore\"),\n          this.i18nService.t(\"close\"),\n          \"warning\"\n        );\n        if (learnMore) {\n          this.platformUtilsService.launchUri(\n            \"https://bitwarden.com/help/attachments/#add-storage-space\"\n          );\n        }\n        this.rotateEncKey = false;\n        return;\n      }\n\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateEncryptionKeyWarning\") +\n          \" \" +\n          this.i18nService.t(\"updateEncryptionKeyExportWarning\") +\n          \" \" +\n          this.i18nService.t(\"rotateEncKeyConfirmation\"),\n        this.i18nService.t(\"rotateEncKeyTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        this.rotateEncKey = false;\n      }\n    }\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    await super.submit();\n  }\n\n  async setupSubmitActions() {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n\n    if (this.rotateEncKey) {\n      await this.syncService.fullSync(true);\n    }\n\n    return super.setupSubmitActions();\n  }\n\n  async performSubmitActions(\n    newMasterPasswordHash: string,\n    newKey: SymmetricCryptoKey,\n    newEncKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const request = new PasswordRequest();\n    request.masterPasswordHash = await this.cryptoService.hashPassword(\n      this.currentMasterPassword,\n      null\n    );\n    request.masterPasswordHint = this.masterPasswordHint;\n    request.newMasterPasswordHash = newMasterPasswordHash;\n    request.key = newEncKey[1].encryptedString;\n\n    try {\n      if (this.rotateEncKey) {\n        this.formPromise = this.apiService.postPassword(request).then(() => {\n          return this.updateKey(newKey, request.newMasterPasswordHash);\n        });\n      } else {\n        this.formPromise = this.apiService.postPassword(request);\n      }\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  private async updateKey(key: SymmetricCryptoKey, masterPasswordHash: string) {\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = masterPasswordHash;\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    const sends = await this.sendService.getAll();\n    await Promise.all(\n      sends.map(async (send) => {\n        const cryptoKey = await this.cryptoService.decryptToBytes(send.key, null);\n        send.key = (await this.cryptoService.encrypt(cryptoKey, encKey[0])) ?? send.key;\n        request.sends.push(new SendWithIdRequest(send));\n      })\n    );\n\n    await this.apiService.postAccountKey(request);\n\n    await this.updateEmergencyAccesses(encKey[0]);\n\n    await this.updateAllResetPasswordKeys(encKey[0], masterPasswordHash);\n  }\n\n  private async updateEmergencyAccesses(encKey: SymmetricCryptoKey) {\n    const emergencyAccess = await this.apiService.getEmergencyAccessTrusted();\n    const allowedStatuses = [\n      EmergencyAccessStatusType.Confirmed,\n      EmergencyAccessStatusType.RecoveryInitiated,\n      EmergencyAccessStatusType.RecoveryApproved,\n    ];\n\n    const filteredAccesses = emergencyAccess.data.filter((d) => allowedStatuses.includes(d.status));\n\n    for (const details of filteredAccesses) {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      const updateRequest = new EmergencyAccessUpdateRequest();\n      updateRequest.type = details.type;\n      updateRequest.waitTimeDays = details.waitTimeDays;\n      updateRequest.keyEncrypted = encryptedKey.encryptedString;\n\n      await this.apiService.putEmergencyAccess(details.id, updateRequest);\n    }\n  }\n\n  private async updateAllResetPasswordKeys(encKey: SymmetricCryptoKey, masterPasswordHash: string) {\n    const orgs = await this.organizationService.getAll();\n\n    for (const org of orgs) {\n      // If not already enrolled, skip\n      if (!org.resetPasswordEnrolled) {\n        continue;\n      }\n\n      // Retrieve public key\n      const response = await this.organizationApiService.getKeys(org.id);\n      const publicKey = Utils.fromB64ToArray(response?.publicKey);\n\n      // Re-enroll - encrpyt user's encKey.key with organization public key\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Create/Execute request\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = masterPasswordHash;\n      request.resetPasswordKey = encryptedKey.encryptedString;\n\n      await this.apiService.putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request);\n    }\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { PasswordRequest } from \"./passwordRequest\";\n\nexport class KdfRequest extends PasswordRequest {\n  kdf: KdfType;\n  kdfIterations: number;\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"encKeySettings\" | i18n }}</h1>\n</div>\n<bit-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</bit-callout>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"kdfMasterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"kdfMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdf\">{{ \"kdfAlgorithm\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://en.wikipedia.org/wiki/Key_derivation_function\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <select id=\"kdf\" name=\"Kdf\" [(ngModel)]=\"kdf\" class=\"form-control\" required>\n          <option *ngFor=\"let o of kdfOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdfIterations\">{{ \"kdfIterations\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://bitwarden.com/help/what-encryption-is-used/#pbkdf2\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <input\n          id=\"kdfIterations\"\n          type=\"number\"\n          min=\"5000\"\n          max=\"2000000\"\n          name=\"KdfIterations\"\n          class=\"form-control\"\n          [(ngModel)]=\"kdfIterations\"\n          required\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <div class=\"small form-text text-muted\">\n          <p>{{ \"kdfIterationsDesc\" | i18n: (recommendedKdfIterations | number) }}</p>\n          <strong>{{ \"warning\" | i18n }}</strong\n          >: {{ \"kdfIterationsWarning\" | i18n: (50000 | number) }}\n        </div>\n      </div>\n    </div>\n  </div>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"changeKdf\" | i18n }}\n  </bit-submit-button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { KdfRequest } from \"@bitwarden/common/models/request/kdfRequest\";\n\n@Component({\n  selector: \"app-change-kdf\",\n  templateUrl: \"change-kdf.component.html\",\n})\nexport class ChangeKdfComponent implements OnInit {\n  masterPassword: string;\n  kdfIterations: number;\n  kdf = KdfType.PBKDF2_SHA256;\n  kdfOptions: any[] = [];\n  formPromise: Promise<any>;\n  recommendedKdfIterations = DEFAULT_KDF_ITERATIONS;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.kdfOptions = [{ name: \"PBKDF2 SHA-256\", value: KdfType.PBKDF2_SHA256 }];\n  }\n\n  async ngOnInit() {\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    const request = new KdfRequest();\n    request.kdf = this.kdf;\n    request.kdfIterations = this.kdfIterations;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n    const email = await this.stateService.getEmail();\n    const newKey = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email,\n      this.kdf,\n      this.kdfIterations\n    );\n    request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      newKey\n    );\n    const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n    request.key = newEncKey[1].encryptedString;\n    try {\n      this.formPromise = this.apiService.postAccountKdf(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"encKeySettingsChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<app-change-kdf *ngIf=\"showChangeKdf\"></app-change-kdf>\n<div\n  [ngClass]=\"{ 'tabbed-header': !showChangeKdf, 'secondary-header': showChangeKdf }\"\n  class=\"border-0 mb-0\"\n>\n  <h1>{{ \"apiKey\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"userApiKeyDesc\" | i18n }}\n</p>\n<button bitButton buttonType=\"secondary\" (click)=\"viewUserApiKey()\">\n  {{ \"viewApiKey\" | i18n }}\n</button>\n<button bitButton buttonType=\"secondary\" (click)=\"rotateUserApiKey()\">\n  {{ \"rotateApiKey\" | i18n }}\n</button>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { ApiKeyComponent } from \"./api-key.component\";\n\n@Component({\n  selector: \"app-security-keys\",\n  templateUrl: \"security-keys.component.html\",\n})\nexport class SecurityKeysComponent implements OnInit {\n  @ViewChild(\"viewUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  viewUserApiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateUserApiKeyModalRef: ViewContainerRef;\n\n  showChangeKdf = true;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private modalService: ModalService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeKdf = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async viewUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.viewUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"userApiKeyDesc\";\n    });\n  }\n\n  async rotateUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.isRotation = true;\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserRotateApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\">\n  <ul class=\"nav nav-tabs\">\n    <ng-container *ngIf=\"showChangePassword\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"change-password\" routerLinkActive=\"active\">\n          {{ \"masterPassword\" | i18n }}\n        </a>\n      </li>\n    </ng-container>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"two-factor\" routerLinkActive=\"active\">\n        {{ \"twoStepLogin\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"security-keys\" routerLinkActive=\"active\">\n        {{ \"keys\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\n\n@Component({\n  selector: \"app-security\",\n  templateUrl: \"security.component.html\",\n})\nexport class SecurityComponent {\n  showChangePassword = true;\n\n  constructor(private keyConnectorService: KeyConnectorService) {}\n\n  async ngOnInit() {\n    this.showChangePassword = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { ChangePasswordComponent } from \"./change-password.component\";\nimport { SecurityKeysComponent } from \"./security-keys.component\";\nimport { SecurityComponent } from \"./security.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SecurityComponent,\n    data: { titleId: \"security\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"change-password\" },\n      {\n        path: \"change-password\",\n        component: ChangePasswordComponent,\n        data: { titleId: \"masterPassword\" },\n      },\n      {\n        path: \"two-factor\",\n        component: TwoFactorSetupComponent,\n        data: { titleId: \"twoStepLogin\" },\n      },\n      {\n        path: \"security-keys\",\n        component: SecurityKeysComponent,\n        data: { titleId: \"keys\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SecurityRoutingModule {}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"accountSettings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myAccount\" | i18n }}\n          </a>\n          <a routerLink=\"security\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"security\" | i18n }}\n          </a>\n          <a routerLink=\"preferences\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"preferences\" | i18n }}\n          </a>\n          <a\n            routerLink=\"subscription\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"!hideSubscription\"\n          >\n            {{ \"subscription\" | i18n }}\n          </a>\n          <a routerLink=\"domain-rules\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"domainRules\" | i18n }}\n          </a>\n          <a routerLink=\"emergency-access\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"emergencyAccess\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sponsored-families\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"hasFamilySponsorshipAvailable\"\n          >\n            {{ \"sponsoredFamilies\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\nimport { StateService } from \"../core\";\n\nconst BroadcasterSubscriptionId = \"SettingsComponent\";\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  premium: boolean;\n  selfHosted: boolean;\n  hasFamilySponsorshipAvailable: boolean;\n  hideSubscription: boolean;\n\n  constructor(\n    private tokenService: TokenService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"purchasedPremium\":\n            await this.load();\n            break;\n          default:\n        }\n      });\n    });\n\n    this.selfHosted = await this.platformUtilsService.isSelfHost();\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    this.premium = await this.stateService.getHasPremiumPersonally();\n    this.hasFamilySponsorshipAvailable = await this.organizationService.canManageSponsorships();\n    const hasPremiumFromOrg = await this.stateService.getHasPremiumFromOrganization();\n    let billing = null;\n    if (!this.selfHosted) {\n      billing = await this.apiService.getUserBillingHistory();\n    }\n    this.hideSubscription =\n      !this.premium && hasPremiumFromOrg && (this.selfHosted || billing?.hasNoHistory);\n  }\n}\n","import { AbstractControl, AsyncValidatorFn, ValidationErrors } from \"@angular/forms\";\n\nexport function notAllowedValueAsync(\n  valueGetter: () => Promise<string>,\n  caseInsensitive = false\n): AsyncValidatorFn {\n  return async (control: AbstractControl): Promise<ValidationErrors | null> => {\n    let notAllowedValue = await valueGetter();\n    let controlValue = control.value;\n    if (caseInsensitive) {\n      notAllowedValue = notAllowedValue.toLowerCase();\n      controlValue = controlValue.toLowerCase();\n    }\n\n    if (controlValue === notAllowedValue) {\n      return {\n        notAllowedValue: true,\n      };\n    }\n  };\n}\n","<td>\n  {{ sponsoringOrg.familySponsorshipFriendlyName }}\n</td>\n<td>{{ sponsoringOrg.name }}</td>\n<td>\n  <span [ngClass]=\"statusClass\">{{ statusMessage }}</span>\n</td>\n<td class=\"table-action-right\">\n  <div class=\"dropdown\" appListDropdown>\n    <button\n      *ngIf=\"!sponsoringOrg.familySponsorshipToDelete\"\n      class=\"btn btn-outline-secondary dropdown-toggle\"\n      type=\"button\"\n      id=\"dropdownMenuButton\"\n      data-toggle=\"dropdown\"\n      aria-haspopup=\"true\"\n      aria-expanded=\"false\"\n      appA11yTitle=\"{{ 'options' | i18n }}\"\n    >\n      <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n    </button>\n    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n      <button\n        #resendEmailBtn\n        *ngIf=\"!isSelfHosted && !sponsoringOrg.familySponsorshipValidUntil\"\n        [appApiAction]=\"resendEmailPromise\"\n        class=\"dropdown-item btn-submit\"\n        [disabled]=\"resendEmailBtn.loading\"\n        (click)=\"resendEmail()\"\n        [attr.aria-label]=\"'resendEmailLabel' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"resendEmail\" | i18n }}</span>\n      </button>\n      <button\n        #revokeSponsorshipBtn\n        [appApiAction]=\"revokeSponsorshipPromise\"\n        class=\"dropdown-item text-danger btn-submit\"\n        [disabled]=\"revokeSponsorshipBtn.loading\"\n        (click)=\"revokeSponsorship()\"\n        [attr.aria-label]=\"'revokeAccount' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"remove\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</td>\n","import { formatDate } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output, OnInit } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"[sponsoring-org-row]\",\n  templateUrl: \"sponsoring-org-row.component.html\",\n})\nexport class SponsoringOrgRowComponent implements OnInit {\n  @Input() sponsoringOrg: Organization = null;\n  @Input() isSelfHosted = false;\n\n  @Output() sponsorshipRemoved = new EventEmitter();\n\n  statusMessage = \"loading\";\n  statusClass: \"text-success\" | \"text-danger\" = \"text-success\";\n\n  revokeSponsorshipPromise: Promise<any>;\n  resendEmailPromise: Promise<any>;\n\n  private locale = \"\";\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private logService: LogService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.locale = await firstValueFrom(this.i18nService.locale$);\n\n    this.setStatus(\n      this.isSelfHosted,\n      this.sponsoringOrg.familySponsorshipToDelete,\n      this.sponsoringOrg.familySponsorshipValidUntil,\n      this.sponsoringOrg.familySponsorshipLastSyncDate\n    );\n  }\n\n  async revokeSponsorship() {\n    try {\n      this.revokeSponsorshipPromise = this.doRevokeSponsorship();\n      await this.revokeSponsorshipPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.revokeSponsorshipPromise = null;\n  }\n\n  async resendEmail() {\n    this.resendEmailPromise = this.apiService.postResendSponsorshipOffer(this.sponsoringOrg.id);\n    await this.resendEmailPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailSent\"));\n    this.resendEmailPromise = null;\n  }\n\n  get isSentAwaitingSync() {\n    return this.isSelfHosted && !this.sponsoringOrg.familySponsorshipLastSyncDate;\n  }\n\n  private async doRevokeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeSponsorshipConfirmation\"),\n      `${this.i18nService.t(\"remove\")} ${this.sponsoringOrg.familySponsorshipFriendlyName}?`,\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    await this.apiService.deleteRevokeSponsorship(this.sponsoringOrg.id);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reclaimedFreePlan\"));\n    this.sponsorshipRemoved.emit();\n  }\n\n  private setStatus(\n    selfHosted: boolean,\n    toDelete?: boolean,\n    validUntil?: Date,\n    lastSyncDate?: Date\n  ) {\n    /*\n     * Possible Statuses:\n     * Requested (self-hosted only)\n     * Sent\n     * Active\n     * RequestRevoke\n     * RevokeWhenExpired\n     */\n\n    if (toDelete && validUntil) {\n      // They want to delete but there is a valid until date which means there is an active sponsorship\n      this.statusMessage = this.i18nService.t(\n        \"revokeWhenExpired\",\n        formatDate(validUntil, \"MM/dd/yyyy\", this.locale)\n      );\n      this.statusClass = \"text-danger\";\n    } else if (toDelete) {\n      // They want to delete and we don't have a valid until date so we can\n      // this should only happen on a self-hosted install\n      this.statusMessage = this.i18nService.t(\"requestRemoved\");\n      this.statusClass = \"text-danger\";\n    } else if (validUntil) {\n      // They don't want to delete and they have a valid until date\n      // that means they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"active\");\n      this.statusClass = \"text-success\";\n    } else if (selfHosted && lastSyncDate) {\n      // We are on a self-hosted install and it has been synced but we have not gotten\n      // a valid until date so we can't know if they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else if (!selfHosted) {\n      // We are in cloud and all other status checks have been false therefore we have\n      // sent the request but it hasn't been accepted yet\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else {\n      // We are on a self-hosted install and we have not synced yet\n      this.statusMessage = this.i18nService.t(\"requested\");\n      this.statusClass = \"text-success\";\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"sponsoredFamilies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"!loading\">\n  <p>\n    {{ \"sponsoredFamiliesEligible\" | i18n }}\n  </p>\n  <div>\n    {{ \"sponsoredFamiliesInclude\" | i18n }}:\n    <ul class=\"inset-list\">\n      <li>{{ \"sponsoredFamiliesPremiumAccess\" | i18n }}</li>\n      <li>{{ \"sponsoredFamiliesSharedCollections\" | i18n }}</li>\n    </ul>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    [formGroup]=\"sponsorshipForm\"\n    ngNativeValidate\n    *ngIf=\"anyOrgsAvailable\"\n  >\n    <div class=\"form-group col-7\">\n      <label for=\"availableSponsorshipOrg\">{{ \"familiesSponsoringOrgSelect\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        formControlName=\"selectedSponsorshipOrgId\"\n        class=\"form-control\"\n        required\n      >\n        <option disabled=\"true\" value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option *ngFor=\"let o of availableSponsorshipOrgs\" [ngValue]=\"o.id\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"form-group col-7\">\n      <label for=\"sponsorshipEmail\">{{ \"sponsoredFamiliesEmail\" | i18n }}:</label>\n      <input\n        id=\"sponsorshipEmail\"\n        class=\"form-control\"\n        inputmode=\"email\"\n        formControlName=\"sponsorshipEmail\"\n        name=\"sponsorshipEmail\"\n        required\n        [attr.aria-invalid]=\"sponsorshipEmailControl.invalid\"\n      />\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.notAllowedValue\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"cannotSponsorSelf\" | i18n }}\n      </small>\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.email\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"invalidEmail\" | i18n }}\n      </small>\n    </div>\n    <div class=\"form-group col-7\">\n      <button class=\"btn btn-primary btn-submit mt-2\" type=\"submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"redeem\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n  <ng-container *ngIf=\"anyActiveSponsorships\">\n    <div class=\"border-bottom\">\n      <table class=\"table table-hover table-list\">\n        <thead>\n          <tr>\n            <th>{{ \"recipient\" | i18n }}</th>\n            <th>{{ \"sponsoringOrg\" | i18n }}</th>\n            <th>{{ \"status\" | i18n }}</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <ng-container *ngFor=\"let o of activeSponsorshipOrgs\">\n            <tr\n              sponsoring-org-row\n              [sponsoringOrg]=\"o\"\n              [isSelfHosted]=\"isSelfHosted\"\n              (sponsorshipRemoved)=\"load(true)\"\n            ></tr>\n          </ng-container>\n        </tbody>\n      </table>\n    </div>\n    <small>{{ \"sponsoredFamiliesLeaveCopy\" | i18n }}</small>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from \"@angular/forms\";\n\nimport { notAllowedValueAsync } from \"@bitwarden/angular/validators/notAllowedValueAsync.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-sponsored-families\",\n  templateUrl: \"sponsored-families.component.html\",\n})\nexport class SponsoredFamiliesComponent implements OnInit {\n  loading = false;\n\n  availableSponsorshipOrgs: Organization[] = [];\n  activeSponsorshipOrgs: Organization[] = [];\n\n  // Conditional display properties\n  formPromise: Promise<any>;\n\n  sponsorshipForm: UntypedFormGroup;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private formBuilder: UntypedFormBuilder,\n    private stateService: StateService\n  ) {\n    this.sponsorshipForm = this.formBuilder.group({\n      selectedSponsorshipOrgId: [\n        \"\",\n        {\n          validators: [Validators.required],\n        },\n      ],\n      sponsorshipEmail: [\n        \"\",\n        {\n          validators: [Validators.email],\n          asyncValidators: [\n            notAllowedValueAsync(async () => await this.stateService.getEmail(), true),\n          ],\n          updateOn: \"blur\",\n        },\n      ],\n    });\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async submit() {\n    this.formPromise = this.apiService.postCreateSponsorship(\n      this.sponsorshipForm.value.selectedSponsorshipOrgId,\n      {\n        sponsoredEmail: this.sponsorshipForm.value.sponsorshipEmail,\n        planSponsorshipType: PlanSponsorshipType.FamiliesForEnterprise,\n        friendlyName: this.sponsorshipForm.value.sponsorshipEmail,\n      }\n    );\n\n    await this.formPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"sponsorshipCreated\"));\n    this.formPromise = null;\n    this.resetForm();\n    await this.load(true);\n  }\n\n  async load(forceReload = false) {\n    if (this.loading) {\n      return;\n    }\n\n    this.loading = true;\n    if (forceReload) {\n      await this.syncService.fullSync(true);\n    }\n\n    const allOrgs = await this.organizationService.getAll();\n    this.availableSponsorshipOrgs = allOrgs.filter((org) => org.familySponsorshipAvailable);\n\n    this.activeSponsorshipOrgs = allOrgs.filter(\n      (org) => org.familySponsorshipFriendlyName !== null\n    );\n\n    if (this.availableSponsorshipOrgs.length === 1) {\n      this.sponsorshipForm.patchValue({\n        selectedSponsorshipOrgId: this.availableSponsorshipOrgs[0].id,\n      });\n    }\n    this.loading = false;\n  }\n\n  get sponsorshipEmailControl() {\n    return this.sponsorshipForm.controls[\"sponsorshipEmail\"];\n  }\n\n  private async resetForm() {\n    this.sponsorshipForm.reset();\n  }\n\n  get anyActiveSponsorships(): boolean {\n    return this.activeSponsorshipOrgs.length > 0;\n  }\n\n  get anyOrgsAvailable(): boolean {\n    return this.availableSponsorshipOrgs.length > 0;\n  }\n\n  get isSelfHosted(): boolean {\n    return this.platformUtilsService.isSelfHost();\n  }\n}\n","<div class=\"tabbed-header d-flex\">\n  <h1>\n    {{ \"paymentMethod\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ (isCreditBalance ? \"accountCredit\" : \"accountBalance\") | i18n }}</h2>\n  <p class=\"text-lg\">\n    <strong>{{ creditOrBalance | currency: \"$\" }}</strong>\n  </p>\n  <p>{{ \"creditAppliedDesc\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"addCredit()\" *ngIf=\"!showAddCredit\">\n    {{ \"addCredit\" | i18n }}\n  </button>\n  <app-add-credit\n    (onAdded)=\"closeAddCredit(true)\"\n    (onCanceled)=\"closeAddCredit(false)\"\n    *ngIf=\"showAddCredit\"\n  >\n  </app-add-credit>\n  <h2 class=\"spaced-header\">{{ \"paymentMethod\" | i18n }}</h2>\n  <p *ngIf=\"!paymentSource\">{{ \"noPaymentMethod\" | i18n }}</p>\n  <ng-container *ngIf=\"paymentSource\">\n    <p>\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-credit-card': paymentSource.type === paymentMethodType.Card,\n          'bwi-bank': paymentSource.type === paymentMethodType.BankAccount,\n          'bwi-money': paymentSource.type === paymentMethodType.Check,\n          'bwi-paypal text-primary': paymentSource.type === paymentMethodType.PayPal,\n          'bwi-apple text-muted': paymentSource.type === paymentMethodType.AppleInApp,\n          'bwi-google text-muted': paymentSource.type === paymentMethodType.GoogleInApp\n        }\"\n      ></i>\n      <span *ngIf=\"paymentSourceInApp\">{{ \"inAppPurchase\" | i18n }}</span>\n      {{ paymentSource.description }}\n    </p>\n  </ng-container>\n  <button bitButton buttonType=\"secondary\" (click)=\"changePayment()\" *ngIf=\"!showAdjustPayment\">\n    {{ (paymentSource ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n  </button>\n  <app-adjust-payment\n    [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n    (onAdjusted)=\"closePayment(true)\"\n    (onCanceled)=\"closePayment(false)\"\n    *ngIf=\"showAdjustPayment\"\n  >\n  </app-adjust-payment>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { BillingPaymentResponse } from \"@bitwarden/common/models/response/billingPaymentResponse\";\n\n@Component({\n  selector: \"app-payment-method\",\n  templateUrl: \"payment-method.component.html\",\n})\nexport class PaymentMethodComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  showAdjustPayment = false;\n  showAddCredit = false;\n  billing: BillingPaymentResponse;\n  paymentMethodType = PaymentMethodType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    if (this.platformUtilsService.isSelfHost()) {\n      this.router.navigate([\"/settings/subscription\"]);\n    }\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    this.billing = await this.apiService.getUserBillingPayment();\n    this.loading = false;\n  }\n\n  addCredit() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"addCredit\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAddCredit = true;\n  }\n\n  closeAddCredit(load: boolean) {\n    this.showAddCredit = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  changePayment() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"changePaymentMethod\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAdjustPayment = true;\n  }\n\n  closePayment(load: boolean) {\n    this.showAdjustPayment = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get isCreditBalance() {\n    return this.billing == null || this.billing.balance <= 0;\n  }\n\n  get creditOrBalance() {\n    return Math.abs(this.billing != null ? this.billing.balance : 0);\n  }\n\n  get paymentSource() {\n    return this.billing != null ? this.billing.paymentSource : null;\n  }\n\n  get paymentSourceInApp() {\n    return (\n      this.paymentSource != null &&\n      (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n        this.paymentSource.type === PaymentMethodType.GoogleInApp)\n    );\n  }\n}\n","<div *ngIf=\"selfHosted\" class=\"page-header\">\n  <h1>{{ \"subscription\" | i18n }}</h1>\n</div>\n<div *ngIf=\"!selfHosted\" class=\"tabbed-header\">\n  <h1>{{ \"goPremium\" | i18n }}</h1>\n</div>\n<bit-callout\n  type=\"info\"\n  *ngIf=\"canAccessPremium\"\n  title=\"{{ 'youHavePremiumAccess' | i18n }}\"\n  icon=\"bwi bwi-star-f\"\n>\n  {{ \"alreadyPremiumFromOrg\" | i18n }}\n</bit-callout>\n<bit-callout type=\"success\">\n  <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n  <ul class=\"bwi-ul\">\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpStorage\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTwoStep\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpEmergency\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpReports\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTotp\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpSupport\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpFuture\" | i18n }}\n    </li>\n  </ul>\n  <p class=\"text-lg\" [ngClass]=\"{ 'mb-0': !selfHosted }\">\n    {{ \"premiumPrice\" | i18n: (premiumPrice | currency: \"$\") }}\n  </p>\n  <a\n    bitButton\n    href=\"https://vault.bitwarden.com/#/settings/premium\"\n    target=\"_blank\"\n    rel=\"noopener\"\n    buttonType=\"secondary\"\n    *ngIf=\"selfHosted\"\n  >\n    {{ \"purchasePremium\" | i18n }}\n  </a>\n</bit-callout>\n<ng-container *ngIf=\"selfHosted\">\n  <p>{{ \"uploadLicenseFilePremium\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_premium_license.json\"\n      }}</small>\n    </div>\n    <bit-submit-button [loading]=\"form.loading\">\n      {{ \"submit\" | i18n }}\n    </bit-submit-button>\n  </form>\n</ng-container>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\">\n  <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n      <input\n        id=\"additionalStorage\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"AdditionalStorageGb\"\n        [(ngModel)]=\"additionalStorage\"\n        min=\"0\"\n        max=\"99\"\n        step=\"1\"\n        placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n      />\n      <small class=\"text-muted form-text\">{{\n        \"additionalStorageIntervalDesc\"\n          | i18n: \"1 GB\":(storageGbPrice | currency: \"$\"):(\"year\" | i18n)\n      }}</small>\n    </div>\n  </div>\n  <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n  {{ \"premiumMembership\" | i18n }}: {{ premiumPrice | currency: \"$\" }} <br />\n  {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} GB &times;\n  {{ storageGbPrice | currency: \"$\" }} =\n  {{ additionalStorageTotal | currency: \"$\" }}\n  <hr class=\"my-3\" />\n  <h2 class=\"spaced-header mb-4\">{{ \"paymentInformation\" | i18n }}</h2>\n  <app-payment [hideBank]=\"true\"></app-payment>\n  <app-tax-info></app-tax-info>\n  <div id=\"price\" class=\"my-4\">\n    <div class=\"text-muted text-sm\">\n      {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n      <br />\n      <ng-container>\n        {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n      </ng-container>\n    </div>\n    <hr class=\"my-1 col-3 ml-0\" />\n    <p class=\"text-lg\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{ \"year\" | i18n }}\n    </p>\n  </div>\n  <small class=\"text-muted font-italic\">{{ \"paymentChargedAnnually\" | i18n }}</small>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"submit\" | i18n }}\n  </bit-submit-button>\n</form>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\n\n  canAccessPremium = false;\n  selfHosted = false;\n  premiumPrice = 10;\n  storageGbPrice = 4;\n  additionalStorage = 0;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const premiumPersonally = await this.stateService.getHasPremiumPersonally();\n    if (premiumPersonally) {\n      this.router.navigate([\"/settings/subscription/user-subscription\"]);\n      return;\n    }\n  }\n\n  async submit() {\n    let files: FileList = null;\n    if (this.selfHosted) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n    }\n\n    try {\n      if (this.selfHosted) {\n        if (!this.tokenService.getEmailVerified()) {\n          this.platformUtilsService.showToast(\n            \"error\",\n            this.i18nService.t(\"errorOccurred\"),\n            this.i18nService.t(\"verifyEmailFirst\")\n          );\n          return;\n        }\n\n        const fd = new FormData();\n        fd.append(\"license\", files[0]);\n        this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\n          return this.finalizePremium();\n        });\n      } else {\n        this.formPromise = this.paymentComponent\n          .createPaymentToken()\n          .then((result) => {\n            const fd = new FormData();\n            fd.append(\"paymentMethodType\", result[1].toString());\n            if (result[0] != null) {\n              fd.append(\"paymentToken\", result[0]);\n            }\n            fd.append(\"additionalStorageGb\", (this.additionalStorage || 0).toString());\n            fd.append(\"country\", this.taxInfoComponent.taxInfo.country);\n            fd.append(\"postalCode\", this.taxInfoComponent.taxInfo.postalCode);\n            return this.apiService.postPremium(fd);\n          })\n          .then((paymentResponse) => {\n            if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\n              return this.paymentComponent.handleStripeCardPayment(\n                paymentResponse.paymentIntentClientSecret,\n                () => this.finalizePremium()\n              );\n            } else {\n              return this.finalizePremium();\n            }\n          });\n      }\n      await this.formPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async finalizePremium() {\n    await this.apiService.refreshIdentityToken();\n    await this.syncService.fullSync(true);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"premiumUpdated\"));\n    this.messagingService.send(\"purchasedPremium\");\n    this.router.navigate([\"/settings/subscription/user-subscription\"]);\n  }\n\n  get additionalStorageTotal(): number {\n    return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\n  }\n\n  get subtotal(): number {\n    return this.premiumPrice + this.additionalStorageTotal;\n  }\n\n  get taxCharges(): number {\n    return this.taxInfoComponent != null && this.taxInfoComponent.taxRate != null\n      ? (this.taxInfoComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total(): number {\n    return this.subtotal + this.taxCharges || 0;\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\" *ngIf=\"!selfHosted\">\n  <ul class=\"nav nav-tabs\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [routerLink]=\"subscriptionRoute\" routerLinkActive=\"active\">\n        {{ \"subscription\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"payment-method\" routerLinkActive=\"active\">\n        {{ \"paymentMethod\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"billing-history\" routerLinkActive=\"active\">\n        {{ \"billingHistory\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-subscription\",\n  templateUrl: \"subscription.component.html\",\n})\nexport class SubscriptionComponent {\n  hasPremium: boolean;\n  selfHosted: boolean;\n\n  constructor(\n    private stateService: StateService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.hasPremium = await this.stateService.getHasPremiumPersonally();\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  get subscriptionRoute(): string {\n    return this.hasPremium ? \"user-subscription\" : \"premium\";\n  }\n}\n","<div class=\"tabbed-header d-flex\">\n  <h1>\n    {{ \"billingHistory\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ \"invoices\" | i18n }}</h2>\n  <p *ngIf=\"!invoices || !invoices.length\">{{ \"noInvoices\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n    <tbody>\n      <tr *ngFor=\"let i of invoices\">\n        <td>{{ i.date | date: \"mediumDate\" }}</td>\n        <td>\n          <a\n            href=\"{{ i.pdfUrl }}\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            class=\"mr-2\"\n            appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n          >\n            <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n          ></a>\n          <a href=\"{{ i.url }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ 'viewInvoice' | i18n }}\">\n            {{ \"invoiceNumber\" | i18n: i.number }}</a\n          >\n        </td>\n        <td>{{ i.amount | currency: \"$\" }}</td>\n        <td>\n          <span *ngIf=\"i.paid\">\n            <i class=\"bwi bwi-check text-success\" aria-hidden=\"true\"></i>\n            {{ \"paid\" | i18n }}\n          </span>\n          <span *ngIf=\"!i.paid\">\n            <i class=\"bwi bwi-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n            {{ \"unpaid\" | i18n }}\n          </span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <h2 class=\"spaced-header\">{{ \"transactions\" | i18n }}</h2>\n  <p *ngIf=\"!transactions || !transactions.length\">{{ \"noTransactions\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n    <tbody>\n      <tr *ngFor=\"let t of transactions\">\n        <td>{{ t.createdDate | date: \"mediumDate\" }}</td>\n        <td>\n          <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n            {{ \"chargeNoun\" | i18n }}\n          </span>\n          <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n        </td>\n        <td>\n          <i\n            class=\"bwi bwi-fw\"\n            *ngIf=\"t.paymentMethodType\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-credit-card': t.paymentMethodType === paymentMethodType.Card,\n              'bwi-bank':\n                t.paymentMethodType === paymentMethodType.BankAccount ||\n                t.paymentMethodType === paymentMethodType.WireTransfer,\n              'bwi-bitcoin text-warning': t.paymentMethodType === paymentMethodType.BitPay,\n              'bwi-paypal text-primary': t.paymentMethodType === paymentMethodType.PayPal\n            }\"\n          ></i>\n          {{ t.details }}\n        </td>\n        <td\n          [ngClass]=\"{ 'text-strike': t.refunded }\"\n          title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n        >\n          {{ t.amount | currency: \"$\" }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <small class=\"text-muted\">* {{ \"chargesStatement\" | i18n: \"BITWARDEN\" }}</small>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { TransactionType } from \"@bitwarden/common/enums/transactionType\";\nimport { BillingHistoryResponse } from \"@bitwarden/common/models/response/billingHistoryResponse\";\n\n@Component({\n  selector: \"app-user-billing\",\n  templateUrl: \"user-billing-history.component.html\",\n})\nexport class UserBillingHistoryComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  billing: BillingHistoryResponse;\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    if (this.platformUtilsService.isSelfHost()) {\n      this.router.navigate([\"/settings/subscription\"]);\n    }\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    this.billing = await this.apiService.getUserBillingHistory();\n    this.loading = false;\n  }\n\n  get invoices() {\n    return this.billing != null ? this.billing.invoices : null;\n  }\n\n  get transactions() {\n    return this.billing != null ? this.billing.transactions : null;\n  }\n}\n","<div\n  [ngClass]=\"{\n    'page-header': selfHosted,\n    'tabbed-header': !selfHosted\n  }\"\n>\n  <h1>\n    {{ title }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"sub\">\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</bit-callout\n  >\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      bitButton\n      type=\"button\"\n      buttonType=\"secondary\"\n      #reinstateBtn\n      class=\"btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"reinstateBtn.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </bit-callout>\n  <dl *ngIf=\"selfHosted\">\n    <dt>{{ \"expiration\" | i18n }}</dt>\n    <dd *ngIf=\"sub.expiration\">{{ sub.expiration | date: \"mediumDate\" }}</dd>\n    <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n  </dl>\n  <div class=\"row\" *ngIf=\"!selfHosted\">\n    <div class=\"col-4\">\n      <dl>\n        <dt>{{ \"status\" | i18n }}</dt>\n        <dd>\n          <span class=\"text-capitalize\">{{ (subscription && subscription.status) || \"-\" }}</span>\n          <span bitBadge badgeType=\"warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n            \"pendingCancellation\" | i18n\n          }}</span>\n        </dd>\n        <dt>{{ \"nextCharge\" | i18n }}</dt>\n        <dd>\n          {{\n            nextInvoice\n              ? (nextInvoice.date | date: \"mediumDate\") +\n                \", \" +\n                (nextInvoice.amount | currency: \"$\")\n              : \"-\"\n          }}\n        </dd>\n      </dl>\n    </div>\n    <div class=\"col-8\" *ngIf=\"subscription\">\n      <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n      <table class=\"table\">\n        <tbody>\n          <tr *ngFor=\"let i of subscription.items\">\n            <td>\n              {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n              {{ i.amount | currency: \"$\" }}\n            </td>\n            <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <ng-container *ngIf=\"selfHosted\">\n    <div>\n      <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        bitButton\n        buttonType=\"secondary\"\n        href=\"https://vault.bitwarden.com/#/settings/subscription\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        >\n        </app-update-license>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"d-flex\">\n      <button\n        bitButton\n        type=\"button\"\n        buttonType=\"secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"!subscription || !subscription.cancelled\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        bitButton\n        #cancelBtn\n        type=\"button\"\n        buttonType=\"danger\"\n        class=\"btn-submit tw-ml-auto\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"cancelBtn.loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            bitButton\n            type=\"button\"\n            buttonType=\"secondary\"\n            class=\"tw-ml-1\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"4\"\n          [add]=\"adjustStorageAdd\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SubscriptionResponse } from \"@bitwarden/common/models/response/subscriptionResponse\";\n\n@Component({\n  selector: \"app-user-subscription\",\n  templateUrl: \"user-subscription.component.html\",\n})\nexport class UserSubscriptionComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  sub: SubscriptionResponse;\n  selfHosted = false;\n\n  cancelPromise: Promise<any>;\n  reinstatePromise: Promise<any>;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private router: Router,\n    private logService: LogService,\n    private fileDownloadService: FileDownloadService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.stateService.getHasPremiumPersonally()) {\n      this.loading = true;\n      this.sub = await this.apiService.getUserSubscription();\n    } else {\n      this.router.navigate([\"/settings/subscription/premium\"]);\n      return;\n    }\n\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.apiService.postReinstatePremium();\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.apiService.postCancelPremium();\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  downloadLicense() {\n    if (this.loading) {\n      return;\n    }\n\n    const licenseString = JSON.stringify(this.sub.license, null, 2);\n    this.fileDownloadService.download({\n      fileName: \"bitwarden_premium_license.json\",\n      blobData: licenseString,\n    });\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(load: boolean) {\n    this.showUpdateLicense = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  adjustStorage(add: boolean) {\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(add ? \"addStorage\" : \"removeStorage\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get usingInAppPurchase() {\n    return this.sub != null ? this.sub.usingInAppPurchase : false;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.selfHosted ? \"subscription\" : \"premiumMembership\");\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { PaymentMethodComponent } from \"./payment-method.component\";\nimport { PremiumComponent } from \"./premium.component\";\nimport { SubscriptionComponent } from \"./subscription.component\";\nimport { UserBillingHistoryComponent } from \"./user-billing-history.component\";\nimport { UserSubscriptionComponent } from \"./user-subscription.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SubscriptionComponent,\n    data: { titleId: \"subscription\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"premium\" },\n      {\n        path: \"user-subscription\",\n        component: UserSubscriptionComponent,\n        data: { titleId: \"premiumMembership\" },\n      },\n      {\n        path: \"premium\",\n        component: PremiumComponent,\n        data: { titleId: \"goPremium\" },\n      },\n      {\n        path: \"payment-method\",\n        component: PaymentMethodComponent,\n        data: { titleId: \"paymentMethod\" },\n      },\n      {\n        path: \"billing-history\",\n        component: UserBillingHistoryComponent,\n        data: { titleId: \"billingHistory\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SubscriptionRoutingModule {}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { PasswordGeneratorPolicyOptions } from \"@bitwarden/common/models/domain/passwordGeneratorPolicyOptions\";\n\n@Directive()\nexport class GeneratorComponent implements OnInit {\n  @Input() comingFromAddEdit = false;\n  @Input() type: string;\n  @Output() onSelected = new EventEmitter<string>();\n\n  usernameGeneratingPromise: Promise<string>;\n  typeOptions: any[];\n  passTypeOptions: any[];\n  usernameTypeOptions: any[];\n  subaddressOptions: any[];\n  catchallOptions: any[];\n  forwardOptions: any[];\n  usernameOptions: any = {};\n  passwordOptions: any = {};\n  username = \"-\";\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPasswordPolicyOptions: PasswordGeneratorPolicyOptions;\n  usernameWebsite: string = null;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected usernameGenerationService: UsernameGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected stateService: StateService,\n    protected i18nService: I18nService,\n    protected logService: LogService,\n    protected route: ActivatedRoute,\n    private win: Window\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"username\"), value: \"username\" },\n    ];\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n    this.usernameTypeOptions = [\n      {\n        name: i18nService.t(\"plusAddressedEmail\"),\n        value: \"subaddress\",\n        desc: i18nService.t(\"plusAddressedEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"catchallEmail\"),\n        value: \"catchall\",\n        desc: i18nService.t(\"catchallEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"forwardedEmail\"),\n        value: \"forwarded\",\n        desc: i18nService.t(\"forwardedEmailDesc\"),\n      },\n      { name: i18nService.t(\"randomWord\"), value: \"word\" },\n    ];\n    this.subaddressOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.catchallOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.forwardOptions = [\n      { name: \"SimpleLogin\", value: \"simplelogin\" },\n      { name: \"AnonAddy\", value: \"anonaddy\" },\n      { name: \"Firefox Relay\", value: \"firefoxrelay\" },\n      { name: \"Fastmail\", value: \"fastmail\" },\n      { name: \"DuckDuckGo\", value: \"duckduckgo\" },\n    ];\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const passwordOptionsResponse = await this.passwordGenerationService.getOptions();\n      this.passwordOptions = passwordOptionsResponse[0];\n      this.enforcedPasswordPolicyOptions = passwordOptionsResponse[1];\n      this.avoidAmbiguous = !this.passwordOptions.ambiguous;\n      this.passwordOptions.type =\n        this.passwordOptions.type === \"passphrase\" ? \"passphrase\" : \"password\";\n\n      this.usernameOptions = await this.usernameGenerationService.getOptions();\n      if (this.usernameOptions.type == null) {\n        this.usernameOptions.type = \"word\";\n      }\n      if (\n        this.usernameOptions.subaddressEmail == null ||\n        this.usernameOptions.subaddressEmail === \"\"\n      ) {\n        this.usernameOptions.subaddressEmail = await this.stateService.getEmail();\n      }\n      if (this.usernameWebsite == null) {\n        this.usernameOptions.subaddressType = this.usernameOptions.catchallType = \"random\";\n      } else {\n        this.usernameOptions.website = this.usernameWebsite;\n        const websiteOption = { name: this.i18nService.t(\"websiteName\"), value: \"website-name\" };\n        this.subaddressOptions.push(websiteOption);\n        this.catchallOptions.push(websiteOption);\n      }\n\n      if (this.type !== \"username\" && this.type !== \"password\") {\n        if (qParams.type === \"username\" || qParams.type === \"password\") {\n          this.type = qParams.type;\n        } else {\n          const generatorOptions = await this.stateService.getGeneratorOptions();\n          this.type = generatorOptions?.type ?? \"password\";\n        }\n      }\n      if (this.regenerateWithoutButtonPress()) {\n        await this.regenerate();\n      }\n    });\n  }\n\n  async typeChanged() {\n    await this.stateService.setGeneratorOptions({ type: this.type });\n    if (this.regenerateWithoutButtonPress()) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    if (this.type === \"password\") {\n      await this.regeneratePassword();\n    } else if (this.type === \"username\") {\n      await this.regenerateUsername();\n    }\n  }\n\n  async sliderChanged() {\n    this.savePasswordOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizePasswordOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n  }\n\n  async savePasswordOptions(regenerate = true) {\n    this.normalizePasswordOptions();\n    await this.passwordGenerationService.saveOptions(this.passwordOptions);\n\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regeneratePassword();\n    }\n  }\n\n  async saveUsernameOptions(regenerate = true) {\n    await this.usernameGenerationService.saveOptions(this.usernameOptions);\n    if (this.usernameOptions.type === \"forwarded\") {\n      this.username = \"-\";\n    }\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regenerateUsername();\n    }\n  }\n\n  async regeneratePassword() {\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  regenerateUsername() {\n    return this.generateUsername();\n  }\n\n  async generateUsername() {\n    try {\n      this.usernameGeneratingPromise = this.usernameGenerationService.generateUsername(\n        this.usernameOptions\n      );\n      this.username = await this.usernameGeneratingPromise;\n      if (this.username === \"\" || this.username === null) {\n        this.username = \"-\";\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  copy() {\n    const password = this.type === \"password\";\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(\n      password ? this.password : this.username,\n      copyOptions\n    );\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(password ? \"password\" : \"username\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.type === \"password\" ? this.password : this.username);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  regenerateWithoutButtonPress() {\n    return this.type !== \"username\" || this.usernameOptions.type !== \"forwarded\";\n  }\n\n  private normalizePasswordOptions() {\n    // Application level normalize options depedent on class variables\n    this.passwordOptions.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.passwordOptions.uppercase &&\n      !this.passwordOptions.lowercase &&\n      !this.passwordOptions.number &&\n      !this.passwordOptions.special\n    ) {\n      this.passwordOptions.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(\n      this.passwordOptions,\n      this.enforcedPasswordPolicyOptions\n    );\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { GeneratedPasswordHistory } from \"@bitwarden/common/models/domain/generatedPasswordHistory\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: \"colorPassword\" })\nexport class ColorPasswordPipe implements PipeTransform {\n  transform(password: string) {\n    const template = (character: string, type: string) =>\n      `<span class=\"password-${type}\">${character}</span>`;\n    const colorizedPassword = this.generateTemplate(password, template);\n    return colorizedPassword;\n  }\n\n  protected generateTemplate(\n    password: string,\n    templateGenerator: (chararacter: string, type: string, index?: number) => string\n  ) {\n    // Convert to an array to handle cases that stings have special characters, ie: emoji.\n    const passwordArray = Array.from(password);\n    let colorizedPassword = \"\";\n    for (let i = 0; i < passwordArray.length; i++) {\n      let character = passwordArray[i];\n      let isSpecial = false;\n      // Sanitize HTML first.\n      switch (character) {\n        case \"&\":\n          character = \"&amp;\";\n          isSpecial = true;\n          break;\n        case \"<\":\n          character = \"&lt;\";\n          isSpecial = true;\n          break;\n        case \">\":\n          character = \"&gt;\";\n          isSpecial = true;\n          break;\n        case \" \":\n          character = \"&nbsp;\";\n          isSpecial = true;\n          break;\n        default:\n          break;\n      }\n      let type = \"letter\";\n      if (character.match(Utils.regexpEmojiPresentation)) {\n        type = \"emoji\";\n      } else if (isSpecial || character.match(/[^\\w ]/)) {\n        type = \"special\";\n      } else if (character.match(/\\d/)) {\n        type = \"number\";\n      }\n      colorizedPassword += templateGenerator(character, type, i);\n    }\n    return colorizedPassword;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"passHistoryTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"passHistoryTitle\">{{ \"passwordHistory\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"history.length\">\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item d-flex\" *ngFor=\"let h of history\">\n            <div class=\"password-row\">\n              <div\n                class=\"text-monospace generated-wrapper\"\n                [innerHTML]=\"h.password | colorPassword\"\n                appSelectCopy\n              ></div>\n              <small class=\"text-muted\">{{ h.date | date: \"medium\" }}</small>\n            </div>\n            <div class=\"ml-auto\">\n              <button\n                class=\"btn btn-link\"\n                appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                (click)=\"copy(h.password)\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!history.length\">\n        {{ \"noPasswordsInList\" | i18n }}\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"clear()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'clear' | i18n }}\"\n          >\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"@bitwarden/angular/components/password-generator-history.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"generator\" | i18n }}</h1>\n</div>\n<app-callout type=\"info\" *ngIf=\"enforcedPasswordPolicyOptions?.inEffect() && type === 'password'\">\n  {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n</app-callout>\n<div class=\"card card-generated bg-light my-4\">\n  <div class=\"card-body\">\n    <div\n      *ngIf=\"type === 'password'\"\n      class=\"generated-wrapper\"\n      [innerHTML]=\"password | colorPassword\"\n      appSelectCopy\n    ></div>\n    <div\n      *ngIf=\"type === 'username'\"\n      class=\"generated-wrapper\"\n      [innerHTML]=\"username | colorPassword\"\n      appSelectCopy\n    ></div>\n  </div>\n</div>\n<div class=\"form-group\" role=\"radiogroup\" aria-labelledby=\"typeHeading\">\n  <label id=\"typeHeading\" class=\"d-block\">{{ \"whatWouldYouLikeToGenerate\" | i18n }}</label>\n  <div class=\"form-check form-check-inline\" *ngFor=\"let o of typeOptions\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      [(ngModel)]=\"type\"\n      name=\"Type\"\n      id=\"type_{{ o.value }}\"\n      [value]=\"o.value\"\n      (change)=\"typeChanged()\"\n      [checked]=\"type === o.value\"\n    />\n    <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n      {{ o.name }}\n    </label>\n  </div>\n</div>\n<ng-container *ngIf=\"type === 'password'\">\n  <div aria-labelledby=\"passwordTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <label id=\"passwordTypeHeading\" class=\"d-block\">{{ \"passwordType\" | i18n }}</label>\n    <div class=\"form-check form-check-inline\" *ngFor=\"let o of passTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"passwordOptions.type\"\n        name=\"PasswordType\"\n        id=\"passwordType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"savePasswordOptions()\"\n        [checked]=\"passwordOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"passwordType_{{ o.value }}\">\n        {{ o.name }}\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"passwordOptions.type === 'passphrase'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n        <input\n          id=\"num-words\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"3\"\n          max=\"20\"\n          [(ngModel)]=\"passwordOptions.numWords\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n        <input\n          id=\"word-separator\"\n          class=\"form-control\"\n          type=\"text\"\n          maxlength=\"1\"\n          [(ngModel)]=\"passwordOptions.wordSeparator\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"capitalize\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.capitalize\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.capitalize\"\n        />\n        <label for=\"capitalize\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"include-number\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.includeNumber\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.includeNumber\"\n        />\n        <label for=\"include-number\" class=\"form-check-label\">{{ \"includeNumber\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"passwordOptions.type === 'password'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"length\">{{ \"length\" | i18n }}</label>\n        <input\n          id=\"length\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"5\"\n          max=\"128\"\n          [(ngModel)]=\"passwordOptions.length\"\n          (blur)=\"savePasswordOptions()\"\n          (change)=\"lengthChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n        <input\n          id=\"min-number\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minNumber\"\n          (change)=\"minNumberChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n        <input\n          id=\"min-special\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minSpecial\"\n          (change)=\"minSpecialChanged()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"uppercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.uppercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useUppercase\"\n          attr.aria-label=\"{{ 'uppercase' | i18n }}\"\n        />\n        <label for=\"uppercase\" class=\"form-check-label\">A-Z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"lowercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.lowercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useLowercase\"\n          attr.aria-label=\"{{ 'lowercase' | i18n }}\"\n        />\n        <label for=\"lowercase\" class=\"form-check-label\">a-z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"numbers\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.number\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useNumbers\"\n          attr.aria-label=\"{{ 'numbers' | i18n }}\"\n        />\n        <label for=\"numbers\" class=\"form-check-label\">0-9</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"special\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.special\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useSpecial\"\n          attr.aria-label=\"{{ 'specialCharacters' | i18n }}\"\n        />\n        <label for=\"special\" class=\"form-check-label\">!@#$%^&amp;*</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"ambiguous\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"avoidAmbiguous\"\n        />\n        <label for=\"ambiguous\" class=\"form-check-label\">{{ \"ambiguous\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"d-flex\">\n    <div>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\">\n        {{ \"regeneratePassword\" | i18n }}\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n        {{ \"copyPassword\" | i18n }}\n      </button>\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"history()\"\n        appA11yTitle=\"{{ 'passwordHistory' | i18n }}\"\n      >\n        <i class=\"bwi bwi-clock bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'username'\">\n  <div aria-labelledby=\"usernameTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <div class=\"d-block\">\n      <label id=\"usernameTypeHeading\">{{ \"usernameType\" | i18n }}</label>\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/generator/#username-types\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"form-check\" *ngFor=\"let o of usernameTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"usernameOptions.type\"\n        name=\"UsernameType\"\n        id=\"usernameType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"saveUsernameOptions()\"\n        [checked]=\"usernameOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"usernameType_{{ o.value }}\">\n        {{ o.name }}\n        <div class=\"small text-muted\">{{ o.desc }}</div>\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'forwarded'\">\n    <div class=\"form-group\">\n      <label class=\"d-block\">{{ \"service\" | i18n }}</label>\n      <div class=\"form-check\" *ngFor=\"let o of forwardOptions\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          [(ngModel)]=\"usernameOptions.forwardedService\"\n          name=\"ForwardType\"\n          id=\"forwardtype_{{ o.value }}\"\n          [value]=\"o.value\"\n          (change)=\"saveUsernameOptions()\"\n          [checked]=\"usernameOptions.forwardedService === o.value\"\n        />\n        <label class=\"form-check-label\" for=\"forwardtype_{{ o.value }}\">\n          {{ o.name }}\n        </label>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'simplelogin'\">\n      <div class=\"form-group col-4\">\n        <label for=\"simplelogin-apikey\">{{ \"apiKey\" | i18n }}</label>\n        <input\n          id=\"simplelogin-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedSimpleLoginApiKey\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'duckduckgo'\">\n      <div class=\"form-group col-4\">\n        <label for=\"duckduckgo-apikey\">{{ \"apiKey\" | i18n }}</label>\n        <input\n          id=\"duckduckgo-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          name=\"DuckDudkGoApiKey\"\n          [(ngModel)]=\"usernameOptions.forwardedDuckDuckGoToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'anonaddy'\">\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"anonaddy-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-domain\">{{ \"domainName\" | i18n }}</label>\n        <input\n          id=\"anonaddy-domain\"\n          class=\"form-control\"\n          type=\"text\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyDomain\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'firefoxrelay'\">\n      <div class=\"form-group col-4\">\n        <label for=\"firefox-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"firefox-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedFirefoxApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'fastmail'\">\n      <div class=\"form-group col-4\">\n        <label for=\"fastmail-apiToken\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"fastmail-apiToken\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedFastmailApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'subaddress'\">\n    <div class=\"form-group col-4\">\n      <label for=\"subaddress-email\">{{ \"emailAddress\" | i18n }}</label>\n      <input\n        id=\"subaddress-email\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.subaddressEmail\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'catchall'\">\n    <div class=\"form-group col-4\">\n      <label for=\"catchall-domain\">{{ \"domainName\" | i18n }}</label>\n      <input\n        id=\"catchall-domain\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.catchallDomain\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'word'\">\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            id=\"capitalizeUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordCapitalize\"\n          />\n          <label for=\"capitalizeUsername\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n        </div>\n        <div class=\"form-check\">\n          <input\n            id=\"includeNumberUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordIncludeNumber\"\n          />\n          <label for=\"includeNumberUsername\" class=\"form-check-label\">{{\n            \"includeNumber\" | i18n\n          }}</label>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <div #form [appApiAction]=\"usernameGeneratingPromise\">\n    <button\n      type=\"button\"\n      class=\"btn btn-submit btn-primary\"\n      (click)=\"regenerate()\"\n      [disabled]=\"form.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"regenerateUsername\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n      {{ \"copyUsername\" | i18n }}\n    </button>\n  </div>\n</ng-container>\n<ng-template #historyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { GeneratorComponent as BaseGeneratorComponent } from \"@bitwarden/angular/components/generator.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\n\nimport { PasswordGeneratorHistoryComponent } from \"./password-generator-history.component\";\n\n@Component({\n  selector: \"app-generator\",\n  templateUrl: \"generator.component.html\",\n})\nexport class GeneratorComponent extends BaseGeneratorComponent {\n  @ViewChild(\"historyTemplate\", { read: ViewContainerRef, static: true })\n  historyModalRef: ViewContainerRef;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    usernameGenerationService: UsernameGenerationService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService,\n    route: ActivatedRoute,\n    private modalService: ModalService\n  ) {\n    super(\n      passwordGenerationService,\n      usernameGenerationService,\n      platformUtilsService,\n      stateService,\n      i18nService,\n      logService,\n      route,\n      window\n    );\n    if (platformUtilsService.isSelfHost()) {\n      // Cannot use Firefox Relay on self hosted web vaults due to CORS issues with Firefox Relay API\n      this.forwardOptions.splice(\n        this.forwardOptions.findIndex((o) => o.value === \"firefoxrelay\"),\n        1\n      );\n    }\n  }\n\n  async history() {\n    await this.modalService.openViewRef(PasswordGeneratorHistoryComponent, this.historyModalRef);\n  }\n\n  lengthChanged() {\n    document.getElementById(\"length\").focus();\n  }\n\n  minNumberChanged() {\n    document.getElementById(\"min-number\").focus();\n  }\n\n  minSpecialChanged() {\n    document.getElementById(\"min-special\").focus();\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-tools\",\n  templateUrl: \"tools.component.html\",\n})\nexport class ToolsComponent implements OnInit {\n  canAccessPremium = false;\n\n  constructor(private stateService: StateService, private messagingService: MessagingService) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card mb-4\">\n        <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"generator\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"generator\" | i18n }}\n          </a>\n          <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"importData\" | i18n }}\n          </a>\n          <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"exportVault\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/models/request/cipherWithIdRequest\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/models/request/folderWithIdRequest\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/updateKeyRequest\";\n\n@Component({\n  selector: \"app-update-key\",\n  templateUrl: \"update-key.component.html\",\n})\nexport class UpdateKeyComponent {\n  masterPassword: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (hasEncKey) {\n      return;\n    }\n\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.makeRequest().then((request) => {\n        return this.apiService.postAccountKey(request);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"keyUpdated\"),\n        this.i18nService.t(\"logBackInOthersToo\"),\n        { timeout: 15000 }\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async makeRequest(): Promise<UpdateKeyRequest> {\n    const key = await this.cryptoService.getKey();\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n\n    await this.syncService.fullSync(true);\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    return request;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"updateEncKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"updateEncKeyTitle\">{{ \"updateEncryptionKey\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"updateEncryptionKeyShortDesc\" | i18n }} {{ \"updateEncryptionKeyDesc\" | i18n }}\n          <a\n            href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            >{{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <app-callout type=\"warning\">{{ \"updateEncryptionKeyWarning\" | i18n }}</app-callout>\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appAutofocus\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"updateEncryptionKey\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    protected folderService: FolderService,\n    protected folderApiService: FolderApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderApiService.save(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderApiService.delete(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"folderAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"folderAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"folder.name\"\n          required\n          appAutofocus\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"@bitwarden/angular/components/folder-add-edit.component\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  constructor(\n    folderService: FolderService,\n    folderApiService: FolderApiServiceAbstraction,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(folderService, folderApiService, i18nService, platformUtilsService, logService);\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Directive()\nexport class ShareComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n\n  protected writeableCollections: CollectionView[] = [];\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n    const orgs = await this.organizationService.getAll();\n    this.organizations = orgs\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"))\n      .filter((o) => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgName =\n      this.organizations.find((o) => o.id === this.organizationId)?.name ??\n      this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"shareTitle\">\n          {{ \"moveToOrganization\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!organizations || !organizations.length\">\n        {{ \"noOrganizationsList\" | i18n }}\n      </div>\n      <div class=\"modal-body\" *ngIf=\"organizations && organizations.length\">\n        <p>{{ \"moveToOrgDesc\" | i18n }}</p>\n        <div class=\"form-group\">\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            class=\"form-control\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [disabled]=\"form.loading || !canSave\"\n          [ngClass]=\"{ loading: form.loading }\"\n          *ngIf=\"organizations && organizations.length\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <a\n          href=\"#\"\n          routerLink=\"/create-organization\"\n          class=\"btn btn-primary\"\n          *ngIf=\"!organizations || !organizations.length\"\n        >\n          {{ \"newOrganization\" | i18n }}\n        </a>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { ShareComponent as BaseShareComponent } from \"@bitwarden/angular/components/share.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\nexport class ShareComponent extends BaseShareComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-verify-email\",\n  templateUrl: \"verify-email.component.html\",\n})\nexport class VerifyEmailComponent {\n  actionPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async send() {\n    if (this.actionPromise != null) {\n      return;\n    }\n    try {\n      this.actionPromise = this.apiService.postAccountVerifyEmail();\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"checkInboxForVerification\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","<div class=\"card border-warning\">\n  <div class=\"card-header bg-warning text-white\">\n    <i class=\"bwi bwi-envelope bwi-fw\" aria-hidden=\"true\"></i> {{ \"verifyEmail\" | i18n }}\n  </div>\n  <div class=\"card-body\">\n    <p>{{ \"verifyEmailDesc\" | i18n }}</p>\n    <button\n      type=\"button\"\n      class=\"btn btn-block btn-outline-secondary btn-submit\"\n      #sendBtn\n      [appApiAction]=\"actionPromise\"\n      [disabled]=\"sendBtn.loading\"\n      (click)=\"send()\"\n    >\n      <i class=\"bwi bwi-spin bwi-spinner\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>\n        {{ \"sendEmail\" | i18n }}\n      </span>\n    </button>\n  </div>\n</div>\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-vault-filter\n              #vaultFilter\n              [activeFilter]=\"activeFilter\"\n              (onFilterChange)=\"applyVaultFilter($event)\"\n              (onAddFolder)=\"addFolder()\"\n              (onEditFolder)=\"editFolder($event.id)\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n            ></app-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div [ngClass]=\"{ 'col-6': isShowingCards, 'col-9': !isShowingCards }\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"vaultItems\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions\n            [ciphersComponent]=\"ciphersComponent\"\n            [deleted]=\"activeFilter.status === 'trash'\"\n          >\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addCipher()\"\n            *ngIf=\"activeFilter.status !== 'trash'\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout\n        type=\"warning\"\n        *ngIf=\"activeFilter.status === 'trash'\"\n        icon=\"bwi-exclamation-triangle\"\n      >\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-vault-ciphers\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onShareClicked)=\"shareCipher($event)\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n        (onOrganzationBadgeClicked)=\"applyOrganizationFilter($event)\"\n      >\n      </app-vault-ciphers>\n    </div>\n    <div class=\"col-3\">\n      <div class=\"card border-warning mb-4\" *ngIf=\"showUpdateKey\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateKeyTitle\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateEncryptionKeyShortDesc\" | i18n }}</p>\n          <button class=\"btn btn-block btn-outline-secondary\" type=\"button\" (click)=\"updateKey()\">\n            {{ \"updateEncryptionKey\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-verify-email *ngIf=\"showVerifyEmail\" class=\"d-block mb-4\"></app-verify-email>\n      <div class=\"card border-warning mb-4\" *ngIf=\"showBrowserOutdated\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateBrowser\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateBrowserDesc\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            target=\"_blank\"\n            href=\"https://browser-update.org/update-browser.html\"\n            rel=\"noopener\"\n          >\n            {{ \"updateBrowser\" | i18n }}\n          </a>\n        </div>\n      </div>\n      <div class=\"card border-success mb-4\" *ngIf=\"showPremiumCallout\">\n        <div class=\"card-header bg-success text-white\">\n          <i class=\"bwi bwi-star-f bwi-fw\" aria-hidden=\"true\"></i> {{ \"goPremium\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            routerLink=\"/settings/subscription/premium\"\n          >\n            {{ \"goPremium\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #folderAddEdit></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #share></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #updateKeyTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { FolderAddEditComponent } from \"./folder-add-edit.component\";\nimport { ShareComponent } from \"./share.component\";\nimport { VaultService } from \"./shared/vault.service\";\nimport { VaultFilterService } from \"./vault-filter/shared/vault-filter.service\";\nimport { VaultFilterComponent } from \"./vault-filter/vault-filter.component\";\n\nconst BroadcasterSubscriptionId = \"VaultComponent\";\n\n@Component({\n  selector: \"app-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true }) filterComponent: VaultFilterComponent;\n  @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"folderAddEdit\", { read: ViewContainerRef, static: true })\n  folderAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"share\", { read: ViewContainerRef, static: true }) shareModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"updateKeyTemplate\", { read: ViewContainerRef, static: true })\n  updateKeyModalRef: ViewContainerRef;\n\n  folderId: string = null;\n  myVaultOnly = false;\n  showVerifyEmail = false;\n  showBrowserOutdated = false;\n  showUpdateKey = false;\n  showPremiumCallout = false;\n  trashCleanupWarning: string = null;\n  activeFilter: VaultFilter = new VaultFilter();\n\n  constructor(\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private tokenService: TokenService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private vaultService: VaultService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService,\n    private vaultFilterService: VaultFilterService\n  ) {}\n\n  async ngOnInit() {\n    this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\n    this.showBrowserOutdated = window.navigator.userAgent.indexOf(\"MSIE\") !== -1;\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      await this.syncService.fullSync(false);\n      const canAccessPremium = await this.stateService.getCanAccessPremium();\n      this.showPremiumCallout =\n        !this.showVerifyEmail && !canAccessPremium && !this.platformUtilsService.isSelfHost();\n\n      this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n      this.filterComponent.reloadOrganizations();\n      this.showUpdateKey = !(await this.cryptoService.hasEncKey());\n\n      const cipherId = getCipherIdFromParams(params);\n\n      if (cipherId) {\n        const cipherView = new CipherView();\n        cipherView.id = cipherId;\n        if (params.action === \"clone\") {\n          await this.cloneCipher(cipherView);\n        } else if (params.action === \"edit\") {\n          await this.editCipher(cipherView);\n        }\n      }\n      await this.ciphersComponent.reload();\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.subscribe(async (params) => {\n        const cipherId = getCipherIdFromParams(params);\n        if (cipherId) {\n          if ((await this.cipherService.get(cipherId)) != null) {\n            this.editCipherId(cipherId);\n          } else {\n            this.platformUtilsService.showToast(\n              \"error\",\n              this.i18nService.t(\"errorOccurred\"),\n              this.i18nService.t(\"unknownCipher\")\n            );\n            this.router.navigate([], {\n              queryParams: { itemId: null, cipherId: null },\n              queryParamsHandling: \"merge\",\n            });\n          }\n        }\n      });\n\n      this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n        this.ngZone.run(async () => {\n          switch (message.command) {\n            case \"syncCompleted\":\n              if (message.successfully) {\n                await Promise.all([\n                  this.filterComponent.reloadCollectionsAndFolders(this.activeFilter),\n                  this.filterComponent.reloadOrganizations(),\n                  this.ciphersComponent.load(this.ciphersComponent.filter),\n                ]);\n                this.changeDetectorRef.detectChanges();\n              }\n              break;\n          }\n        });\n      });\n    });\n  }\n\n  get isShowingCards() {\n    return (\n      this.showBrowserOutdated ||\n      this.showPremiumCallout ||\n      this.showUpdateKey ||\n      this.showVerifyEmail\n    );\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async applyVaultFilter(vaultFilter: VaultFilter) {\n    this.ciphersComponent.showAddNew = vaultFilter.status !== \"trash\";\n    this.activeFilter = vaultFilter;\n    await this.ciphersComponent.reload(\n      this.activeFilter.buildFilter(),\n      vaultFilter.status === \"trash\"\n    );\n    this.filterComponent.searchPlaceholder = this.vaultService.calculateSearchBarLocalizationString(\n      this.activeFilter\n    );\n    this.go();\n  }\n\n  async applyOrganizationFilter(orgId: string) {\n    if (orgId == null) {\n      this.activeFilter.resetOrganization();\n      this.activeFilter.myVaultOnly = true;\n    } else {\n      this.activeFilter.selectedOrganizationId = orgId;\n    }\n    await this.vaultFilterService.ensureVaultFiltersAreExpanded();\n    await this.applyVaultFilter(this.activeFilter);\n  }\n\n  filterSearchText(searchText: string) {\n    this.ciphersComponent.searchText = searchText;\n    this.ciphersComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (cipher.organizationId == null && !canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    } else if (cipher.organizationId != null) {\n      const org = await this.organizationService.get(cipher.organizationId);\n      if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\n        this.messagingService.send(\"upgradeOrganization\", {\n          organizationId: cipher.organizationId,\n        });\n        return;\n      }\n    }\n\n    let madeAttachmentChanges = false;\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onReuploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.ciphersComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async shareCipher(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      ShareComponent,\n      this.shareModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSharedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addFolder() {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = null;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n      }\n    );\n  }\n\n  async editFolder(folderId: string) {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = folderId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.type = this.activeFilter.cipherType;\n    component.folderId = this.folderId === \"none\" ? null : this.folderId;\n    if (this.activeFilter.selectedCollectionId != null) {\n      const collection = this.filterComponent.collections.fullList.filter(\n        (c) => c.id === this.activeFilter.selectedCollectionId\n      );\n      if (collection.length > 0) {\n        component.organizationId = collection[0].organizationId;\n        component.collectionIds = [this.activeFilter.selectedCollectionId];\n      }\n    }\n    if (this.activeFilter.selectedFolderId && this.activeFilter.selectedFolder) {\n      component.folderId = this.activeFilter.selectedFolderId;\n    }\n    if (this.activeFilter.selectedOrganizationId) {\n      component.organizationId = this.activeFilter.selectedOrganizationId;\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(id: string) {\n    const cipher = await this.cipherService.get(id);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n  }\n\n  async updateKey() {\n    await this.modalService.openViewRef(UpdateKeyComponent, this.updateKeyModalRef);\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        favorites: this.activeFilter.status === \"favorites\" ? true : null,\n        type: this.activeFilter.cipherType,\n        folderId: this.activeFilter.selectedFolderId,\n        collectionId: this.activeFilter.selectedCollectionId,\n        deleted: this.activeFilter.status === \"trash\" ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { VaultComponent } from \"./vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VaultComponent,\n    data: { titleId: \"vaults\" },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { OrganizationBadgeModule } from \"./organization-badge/organization-badge.module\";\nimport { VaultSharedModule } from \"./shared/vault-shared.module\";\nimport { VaultRoutingModule } from \"./vault-routing.module\";\nimport { VaultComponent } from \"./vault.component\";\n\n@NgModule({\n  imports: [VaultSharedModule, VaultRoutingModule, OrganizationBadgeModule],\n  declarations: [VaultComponent, CiphersComponent],\n  exports: [VaultComponent],\n})\nexport class VaultModule {}\n","import { NgModule } from \"@angular/core\";\nimport { Route, RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { LockGuard } from \"@bitwarden/angular/guards/lock.guard\";\nimport { UnauthGuard } from \"@bitwarden/angular/guards/unauth.guard\";\n\nimport { flagEnabled, Flags } from \"../utils/flags\";\n\nimport { AcceptEmergencyComponent } from \"./accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"./accounts/accept-organization.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RecoverDeleteComponent } from \"./accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"./accounts/recover-two-factor.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TrialInitiationComponent } from \"./accounts/trial-initiation/trial-initiation.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"./accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"./accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"./accounts/verify-recover-delete.component\";\nimport { HomeGuard } from \"./guards/home.guard\";\nimport { FrontendLayoutComponent } from \"./layouts/frontend-layout.component\";\nimport { UserLayoutComponent } from \"./layouts/user-layout.component\";\nimport { OrganizationsRoutingModule } from \"./organizations/organization-routing.module\";\nimport { AcceptFamilySponsorshipComponent } from \"./organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"./organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ReportsModule } from \"./reports\";\nimport { AccessComponent } from \"./send/access.component\";\nimport { SendComponent } from \"./send/send.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { CreateOrganizationComponent } from \"./settings/create-organization.component\";\nimport { DomainRulesComponent } from \"./settings/domain-rules.component\";\nimport { EmergencyAccessViewComponent } from \"./settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"./settings/emergency-access.component\";\nimport { PreferencesComponent } from \"./settings/preferences.component\";\nimport { SecurityRoutingModule } from \"./settings/security-routing.module\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"./settings/sponsored-families.component\";\nimport { SubscriptionRoutingModule } from \"./settings/subscription-routing.module\";\nimport { GeneratorComponent } from \"./tools/generator.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { VaultModule } from \"./vault/vault.module\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    data: { doNotSaveUrl: true },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        children: [], // Children lets us have an empty component.\n        canActivate: [HomeGuard], // Redirects either to vault, login or lock page.\n      },\n      { path: \"login\", component: LoginComponent, canActivate: [UnauthGuard] },\n      { path: \"2fa\", component: TwoFactorComponent, canActivate: [UnauthGuard] },\n      {\n        path: \"register\",\n        component: RegisterComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"createAccount\" },\n      },\n      buildFlaggedRoute(\"showTrial\", {\n        path: \"trial\",\n        component: TrialInitiationComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"startTrial\" },\n      }),\n      {\n        path: \"sso\",\n        component: SsoComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"enterpriseSingleSignOn\" },\n      },\n      {\n        path: \"set-password\",\n        component: SetPasswordComponent,\n        data: { titleId: \"setMasterPassword\" },\n      },\n      {\n        path: \"hint\",\n        component: HintComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"passwordHint\" },\n      },\n      {\n        path: \"lock\",\n        component: LockComponent,\n        canActivate: [LockGuard],\n      },\n      { path: \"verify-email\", component: VerifyEmailTokenComponent },\n      {\n        path: \"accept-organization\",\n        component: AcceptOrganizationComponent,\n        data: { titleId: \"joinOrganization\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-emergency\",\n        component: AcceptEmergencyComponent,\n        data: { titleId: \"acceptEmergency\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-families-for-enterprise\",\n        component: AcceptFamilySponsorshipComponent,\n        data: { titleId: \"acceptFamilySponsorship\", doNotSaveUrl: false },\n      },\n      { path: \"recover\", pathMatch: \"full\", redirectTo: \"recover-2fa\" },\n      {\n        path: \"recover-2fa\",\n        component: RecoverTwoFactorComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"recoverAccountTwoStep\" },\n      },\n      {\n        path: \"recover-delete\",\n        component: RecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"verify-recover-delete\",\n        component: VerifyRecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"send/:sendId/:key\",\n        component: AccessComponent,\n        data: { title: \"Bitwarden Send\" },\n      },\n      {\n        path: \"update-temp-password\",\n        component: UpdateTempPasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updateTempPassword\" },\n      },\n      {\n        path: \"update-password\",\n        component: UpdatePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updatePassword\" },\n      },\n      {\n        path: \"remove-password\",\n        component: RemovePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"removeMasterPassword\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    component: UserLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"vault\",\n        loadChildren: () => VaultModule,\n      },\n      { path: \"sends\", component: SendComponent, data: { title: \"Send\" } },\n      {\n        path: \"create-organization\",\n        component: CreateOrganizationComponent,\n        data: { titleId: \"newOrganization\" },\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: AccountComponent, data: { titleId: \"myAccount\" } },\n          {\n            path: \"preferences\",\n            component: PreferencesComponent,\n            data: { titleId: \"preferences\" },\n          },\n          {\n            path: \"security\",\n            loadChildren: () => SecurityRoutingModule,\n          },\n          {\n            path: \"domain-rules\",\n            component: DomainRulesComponent,\n            data: { titleId: \"domainRules\" },\n          },\n          {\n            path: \"subscription\",\n            loadChildren: () => SubscriptionRoutingModule,\n          },\n          {\n            path: \"emergency-access\",\n            children: [\n              {\n                path: \"\",\n                component: EmergencyAccessComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n              {\n                path: \":id\",\n                component: EmergencyAccessViewComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n            ],\n          },\n          {\n            path: \"sponsored-families\",\n            component: SponsoredFamiliesComponent,\n            data: { titleId: \"sponsoredFamilies\" },\n          },\n        ],\n      },\n      {\n        path: \"tools\",\n        component: ToolsComponent,\n        canActivate: [AuthGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"generator\" },\n          {\n            path: \"\",\n            loadChildren: () =>\n              import(\"./tools/import-export/import-export.module\").then(\n                (m) => m.ImportExportModule\n              ),\n          },\n          {\n            path: \"generator\",\n            component: GeneratorComponent,\n            data: { titleId: \"generator\" },\n          },\n        ],\n      },\n      {\n        path: \"reports\",\n        loadChildren: () => ReportsModule,\n      },\n      { path: \"setup/families-for-enterprise\", component: FamiliesForEnterpriseSetupComponent },\n    ],\n  },\n  {\n    path: \"organizations\",\n    loadChildren: () => OrganizationsRoutingModule,\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      paramsInheritanceStrategy: \"always\",\n      // enableTracing: true,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class OssRoutingModule {}\n\nexport function buildFlaggedRoute(flagName: keyof Flags, route: Route): Route {\n  return flagEnabled(flagName)\n    ? route\n    : {\n        path: route.path,\n        redirectTo: \"/\",\n      };\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { VerticalStepContentComponent } from \"./vertical-step-content.component\";\nimport { VerticalStep } from \"./vertical-step.component\";\nimport { VerticalStepperComponent } from \"./vertical-stepper.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [VerticalStepperComponent, VerticalStep, VerticalStepContentComponent],\n  exports: [VerticalStepperComponent, VerticalStep],\n})\nexport class VerticalStepperModule {}\n","import { CdkStepperModule } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { FormFieldModule } from \"@bitwarden/components\";\n\nimport { OrganizationCreateModule } from \"../../organizations/create/organization-create.module\";\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\nimport { RegisterFormModule } from \"../register-form/register-form.module\";\n\nimport { BillingComponent } from \"./billing.component\";\nimport { ConfirmationDetailsComponent } from \"./confirmation-details.component\";\nimport { AbmEnterpriseContentComponent } from \"./content/abm-enterprise-content.component\";\nimport { AbmTeamsContentComponent } from \"./content/abm-teams-content.component\";\nimport { CnetEnterpriseContentComponent } from \"./content/cnet-enterprise-content.component\";\nimport { CnetIndividualContentComponent } from \"./content/cnet-individual-content.component\";\nimport { CnetTeamsContentComponent } from \"./content/cnet-teams-content.component\";\nimport { DefaultContentComponent } from \"./content/default-content.component\";\nimport { EnterpriseContentComponent } from \"./content/enterprise-content.component\";\nimport { Enterprise1ContentComponent } from \"./content/enterprise1-content.component\";\nimport { Enterprise2ContentComponent } from \"./content/enterprise2-content.component\";\nimport { LogoCnetComponent } from \"./content/logo-cnet.component\";\nimport { LogoForbesComponent } from \"./content/logo-forbes.component\";\nimport { LogoUSNewsComponent } from \"./content/logo-us-news.component\";\nimport { TeamsContentComponent } from \"./content/teams-content.component\";\nimport { Teams1ContentComponent } from \"./content/teams1-content.component\";\nimport { Teams2ContentComponent } from \"./content/teams2-content.component\";\nimport { TrialInitiationComponent } from \"./trial-initiation.component\";\nimport { VerticalStepperModule } from \"./vertical-stepper/vertical-stepper.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    CdkStepperModule,\n    VerticalStepperModule,\n    FormFieldModule,\n    RegisterFormModule,\n    OrganizationCreateModule,\n    LooseComponentsModule,\n  ],\n  declarations: [\n    TrialInitiationComponent,\n    EnterpriseContentComponent,\n    TeamsContentComponent,\n    ConfirmationDetailsComponent,\n    BillingComponent,\n    DefaultContentComponent,\n    EnterpriseContentComponent,\n    Enterprise1ContentComponent,\n    Enterprise2ContentComponent,\n    TeamsContentComponent,\n    Teams1ContentComponent,\n    Teams2ContentComponent,\n    CnetEnterpriseContentComponent,\n    CnetIndividualContentComponent,\n    CnetTeamsContentComponent,\n    AbmEnterpriseContentComponent,\n    AbmTeamsContentComponent,\n    LogoCnetComponent,\n    LogoForbesComponent,\n    LogoUSNewsComponent,\n  ],\n  exports: [TrialInitiationComponent],\n  providers: [TitleCasePipe],\n})\nexport class TrialInitiationModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule],\n  declarations: [EntityUsersComponent],\n  exports: [EntityUsersComponent],\n})\nexport class OrganizationManageModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\n\nimport { EnrollMasterPasswordReset } from \"./enroll-master-password-reset.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule, LooseComponentsModule],\n  declarations: [EnrollMasterPasswordReset],\n  exports: [EnrollMasterPasswordReset],\n})\nexport class OrganizationUserModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { TrialInitiationModule } from \"./accounts/trial-initiation/trial-initiation.module\";\nimport { OrganizationCreateModule } from \"./organizations/create/organization-create.module\";\nimport { OrganizationManageModule } from \"./organizations/manage/organization-manage.module\";\nimport { OrganizationUserModule } from \"./organizations/users/organization-user.module\";\nimport { LooseComponentsModule, SharedModule } from \"./shared\";\nimport { OrganizationBadgeModule } from \"./vault/organization-badge/organization-badge.module\";\nimport { VaultFilterModule } from \"./vault/vault-filter/vault-filter.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    OrganizationManageModule,\n    OrganizationUserModule,\n    OrganizationCreateModule,\n  ],\n  exports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n  ],\n  bootstrap: [],\n})\nexport class OssModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nconst routes: Routes = [{ path: \"**\", redirectTo: \"\" }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WildcardRoutingModule {}\n","export class ProviderAddOrganizationRequest {\n  organizationId: string;\n  key: string;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProviderAddOrganizationRequest } from \"@bitwarden/common/models/request/provider/providerAddOrganizationRequest\";\n\n@Injectable()\nexport class WebProviderService {\n  constructor(\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private apiService: ApiService\n  ) {}\n\n  async addOrganizationToProvider(providerId: string, organizationId: string) {\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const providerKey = await this.cryptoService.getProviderKey(providerId);\n\n    const encryptedOrgKey = await this.cryptoService.encrypt(orgKey.key, providerKey);\n\n    const request = new ProviderAddOrganizationRequest();\n    request.organizationId = organizationId;\n    request.key = encryptedOrgKey.encryptedString;\n\n    const response = await this.apiService.postProviderAddOrganization(providerId, request);\n    await this.syncService.fullSync(true);\n    return response;\n  }\n\n  async detachOrganizastion(providerId: string, organizationId: string): Promise<any> {\n    await this.apiService.deleteProviderOrganization(providerId, organizationId);\n    await this.syncService.fullSync(true);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"addTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"addTitle\">\n          {{ \"addExistingOrganization\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <ng-container *ngIf=\"!loading\">\n          <table class=\"table table-hover table-list\">\n            <tr *ngFor=\"let o of organizations\">\n              <td width=\"30\">\n                <app-avatar [data]=\"o.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\n              </td>\n              <td>\n                {{ o.name }}\n              </td>\n              <td>\n                <button\n                  class=\"btn btn-outline-secondary pull-right\"\n                  (click)=\"add(o)\"\n                  [disabled]=\"formPromise\"\n                >\n                  Add\n                </button>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\n@Component({\n  selector: \"provider-add-organization\",\n  templateUrl: \"add-organization.component.html\",\n})\nexport class AddOrganizationComponent implements OnInit {\n  @Input() providerId: string;\n  @Input() organizations: Organization[];\n  @Output() onAddedOrganization = new EventEmitter();\n\n  provider: Provider;\n  formPromise: Promise<any>;\n  loading = true;\n\n  constructor(\n    private providerService: ProviderService,\n    private webProviderService: WebProviderService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private validationService: ValidationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    if (this.providerId == null) {\n      return;\n    }\n\n    this.provider = await this.providerService.get(this.providerId);\n\n    this.loading = false;\n  }\n\n  async add(organization: Organization) {\n    if (this.formPromise) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"addOrganizationConfirmation\", organization.name, this.provider.name),\n      organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.webProviderService.addOrganizationToProvider(\n        this.providerId,\n        organization.id\n      );\n      await this.formPromise;\n    } catch (e) {\n      this.validationService.showError(e);\n      return;\n    } finally {\n      this.formPromise = null;\n    }\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"organizationJoinedProvider\")\n    );\n    this.onAddedOrganization.emit();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Injectable()\nexport class ProviderPermissionsGuard implements CanActivate {\n  constructor(\n    private providerService: ProviderService,\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const provider = await this.providerService.get(route.params.providerId);\n    if (provider == null) {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    if (!provider.isProviderAdmin && !provider.enabled) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"providerIsDisabled\"));\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    const permissionsCallback: (provider: Provider) => boolean = route.data?.providerPermissions;\n    const hasSpecifiedPermissions = permissionsCallback == null || permissionsCallback(provider);\n\n    if (!hasSpecifiedPermissions) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"accessDenied\"));\n      return this.router.createUrlTree([\"/providers\", provider.id]);\n    }\n\n    return true;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header d-flex\">\n    <h1>{{ \"providers\" | i18n }}</h1>\n  </div>\n  <p *ngIf=\"!loaded\" class=\"text-muted\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"loaded\">\n    <table class=\"table table-hover table-list\" *ngIf=\"providers && providers.length\">\n      <tbody>\n        <tr *ngFor=\"let p of providers\">\n          <td width=\"30\">\n            <app-avatar [data]=\"p.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" [routerLink]=\"['/providers', p.id]\">{{ p.name }}</a>\n            <ng-container *ngIf=\"!p.enabled\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-danger\"\n                title=\"{{ 'providerIsDisabled' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"providerIsDisabled\" | i18n }}</span>\n            </ng-container>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"app-providers\",\n  templateUrl: \"providers.component.html\",\n})\nexport class ProvidersComponent implements OnInit {\n  providers: Provider[];\n  loaded = false;\n  actionPromise: Promise<any>;\n\n  constructor(private providerService: ProviderService, private i18nService: I18nService) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    await this.load();\n  }\n\n  async load() {\n    const providers = await this.providerService.getAll();\n    providers.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.providers = providers;\n    this.loaded = true;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"clients\" | i18n }}</h1>\n\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <a class=\"btn btn-sm btn-outline-primary ml-3\" routerLink=\"create\" *ngIf=\"manageOrganizations\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newClientOrganization\" | i18n }}\n    </a>\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"addExistingOrganization()\"\n      *ngIf=\"manageOrganizations && showAddExisting\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"addExistingOrganization\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<ng-container\n  *ngIf=\"!loading && (clients | search: searchText:'organizationName':'id') as searchedClients\"\n>\n  <p *ngIf=\"!searchedClients.length\">{{ \"noClientsInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedClients.length\">\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <thead>\n        <tr>\n          <th colspan=\"2\">{{ \"name\" | i18n }}</th>\n          <th>{{ \"numberOfUsers\" | i18n }}</th>\n          <th>{{ \"billingPlan\" | i18n }}</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let o of searchedClients\">\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"o.organizationName\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            ></app-avatar>\n          </td>\n          <td>\n            <a [routerLink]=\"['/organizations', o.organizationId]\">{{ o.organizationName }}</a>\n          </td>\n          <td>\n            <span>{{ o.userCount }}</span>\n            <span *ngIf=\"o.seats != null\"> / {{ o.seats }}</span>\n          </td>\n          <td>\n            <span>{{ o.plan }}</span>\n          </td>\n          <td class=\"table-list-options\" *ngIf=\"manageOrganizations\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(o)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n\n<ng-template #add></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ProviderOrganizationOrganizationDetailsResponse } from \"@bitwarden/common/models/response/provider/providerOrganizationResponse\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\nimport { AddOrganizationComponent } from \"./add-organization.component\";\n\nconst DisallowedPlanTypes = [\n  PlanType.Free,\n  PlanType.FamiliesAnnually2019,\n  PlanType.FamiliesAnnually,\n];\n\n@Component({\n  templateUrl: \"clients.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ClientsComponent implements OnInit {\n  @ViewChild(\"add\", { read: ViewContainerRef, static: true }) addModalRef: ViewContainerRef;\n\n  providerId: string;\n  searchText: string;\n  addableOrganizations: Organization[];\n  loading = true;\n  manageOrganizations = false;\n  showAddExisting = false;\n\n  clients: ProviderOrganizationOrganizationDetailsResponse[];\n  pagedClients: ProviderOrganizationOrganizationDetailsResponse[];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n  protected actionPromise: Promise<unknown>;\n  private pagedClientsCount = 0;\n\n  constructor(\n    private route: ActivatedRoute,\n    private providerService: ProviderService,\n    private apiService: ApiService,\n    private searchService: SearchService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private validationService: ValidationService,\n    private webProviderService: WebProviderService,\n    private logService: LogService,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n\n      await this.load();\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderClients(this.providerId);\n    this.clients = response.data != null && response.data.length > 0 ? response.data : [];\n    this.manageOrganizations =\n      (await this.providerService.get(this.providerId)).type === ProviderUserType.ProviderAdmin;\n    const candidateOrgs = (await this.organizationService.getAll()).filter(\n      (o) => o.isOwner && o.providerId == null\n    );\n    const allowedOrgsIds = await Promise.all(\n      candidateOrgs.map((o) => this.organizationApiService.get(o.id))\n    ).then((orgs) =>\n      orgs.filter((o) => !DisallowedPlanTypes.includes(o.planType)).map((o) => o.id)\n    );\n    this.addableOrganizations = candidateOrgs.filter((o) => allowedOrgsIds.includes(o.id));\n\n    this.showAddExisting = this.addableOrganizations.length !== 0;\n    this.loading = false;\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.clients && this.clients.length > this.pageSize;\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  async resetPaging() {\n    this.pagedClients = [];\n    this.loadMore();\n  }\n\n  loadMore() {\n    if (!this.clients || this.clients.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedClients.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedClientsCount > this.pageSize) {\n      pagedSize = this.pagedClientsCount;\n    }\n    if (this.clients.length > pagedLength) {\n      this.pagedClients = this.pagedClients.concat(\n        this.clients.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedClientsCount = this.pagedClients.length;\n    this.didScroll = this.pagedClients.length > this.pageSize;\n  }\n\n  async addExistingOrganization() {\n    const [modal] = await this.modalService.openViewRef(\n      AddOrganizationComponent,\n      this.addModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.organizations = this.addableOrganizations;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onAddedOrganization.subscribe(async () => {\n          try {\n            await this.load();\n            modal.close();\n          } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n          }\n        });\n      }\n    );\n  }\n\n  async remove(organization: ProviderOrganizationOrganizationDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"detachOrganizationConfirmation\"),\n      organization.organizationName,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.webProviderService.detachOrganizastion(\n      this.providerId,\n      organization.id\n    );\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"detachedOrganization\", organization.organizationName)\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationPlansComponent } from \"src/app/settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  providerId: string;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n    });\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"newClientOrganization\" | i18n }}</h1>\n</div>\n<p>{{ \"newClientOrganizationDesc\" | i18n }}</p>\n<app-organization-plans [providerId]=\"providerId\"></app-organization-plans>\n","export class ProviderUserAcceptRequest {\n  token: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ providerName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinProviderDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ProviderUserAcceptRequest } from \"@bitwarden/common/models/request/provider/providerUserAcceptRequest\";\n\nimport { BaseAcceptComponent } from \"src/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-provider\",\n  templateUrl: \"accept-provider.component.html\",\n})\nexport class AcceptProviderComponent extends BaseAcceptComponent {\n  providerName: string;\n\n  failedMessage = \"providerInviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"providerUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    private apiService: ApiService,\n    platformUtilService: PlatformUtilsService\n  ) {\n    super(router, platformUtilService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params) {\n    const request = new ProviderUserAcceptRequest();\n    request.token = qParams.token;\n\n    await this.apiService.postProviderUserAccept(\n      qParams.providerId,\n      qParams.providerUserId,\n      request\n    );\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"providerInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params) {\n    this.providerName = qParams.providerName;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"form-inline\">\n      <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"start\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n      <span class=\"mx-2\">-</span>\n      <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"end\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n    </div>\n    <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary ml-3\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        <i\n          class=\"bwi bwi-refresh bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-spin': loaded && refreshForm.loading }\"\n        ></i>\n        {{ \"refresh\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\"\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i>\n        <span>{{ \"export\" | i18n }}</span>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n    <thead>\n      <tr>\n        <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n        <th class=\"border-top-0\" width=\"40\">\n          <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n        </th>\n        <th class=\"border-top-0\" width=\"150\">{{ \"user\" | i18n }}</th>\n        <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of events\">\n        <td>{{ e.date | date: \"medium\" }}</td>\n        <td>\n          <i\n            class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n            title=\"{{ e.appName }}, {{ e.ip }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n        </td>\n        <td>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td [innerHTML]=\"e.message\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    class=\"btn btn-block btn-link btn-submit\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && moreBtn.loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\n\nimport { BaseEventsComponent } from \"src/app/common/base.events.component\";\nimport { EventService } from \"src/app/core\";\n\n@Component({\n  selector: \"provider-events\",\n  templateUrl: \"events.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n  exportFileName = \"provider-events\";\n  providerId: string;\n\n  private providerUsersUserIdMap = new Map<string, any>();\n  private providerUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    private providerService: ProviderService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      eventService,\n      i18nService,\n      exportService,\n      platformUtilsService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n      if (provider == null || !provider.useEvents) {\n        this.router.navigate([\"/providers\", this.providerId]);\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderUsers(this.providerId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.providerUsersIdMap.set(u.id, { name: name, email: u.email });\n      this.providerUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsProvider(\n      this.providerId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    return userId != null && this.providerUsersUserIdMap.has(userId)\n      ? this.providerUsersUserIdMap.get(userId)\n      : null;\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"provider\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"people\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canManageUsers\"\n          >\n            {{ \"people\" | i18n }}\n          </a>\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canAccessEventLogs && accessEvents\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"provider-manage\",\n  templateUrl: \"manage.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ManageComponent implements OnInit {\n  provider: Provider;\n  accessEvents = false;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.provider = await this.providerService.get(params.providerId);\n      this.accessEvents = this.provider.useEvents;\n    });\n  }\n}\n","export class ProviderUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class ProviderUserConfirmRequest {\n  key: string;\n}\n","type ProviderUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class ProviderUserBulkConfirmRequest {\n  keys: ProviderUserBulkRequestEntry[];\n\n  constructor(keys: ProviderUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserBulkConfirmRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkRequest\";\n\nimport { BulkConfirmComponent as OrganizationBulkConfirmComponent } from \"src/app/organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkUserDetails } from \"src/app/organizations/manage/bulk/bulk-status.component\";\n\n@Component({\n  templateUrl:\n    \"../../../../../../../apps/web/src/app/organizations/manage/bulk/bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent extends OrganizationBulkConfirmComponent {\n  @Input() providerId: string;\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === ProviderUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new ProviderUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postProviderUsersPublicKey(this.providerId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getProviderKey(this.providerId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new ProviderUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postProviderUserBulkConfirm(this.providerId, request);\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkRequest\";\n\nimport { BulkRemoveComponent as OrganizationBulkRemoveComponent } from \"src/app/organizations/manage/bulk/bulk-remove.component\";\n\n@Component({\n  templateUrl:\n    \"../../../../../../../apps/web/src/app/organizations/manage/bulk/bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent extends OrganizationBulkRemoveComponent {\n  @Input() providerId: string;\n\n  async deleteUsers() {\n    const request = new ProviderUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyProviderUsers(this.providerId, request);\n  }\n\n  protected get removeUsersWarning() {\n    return this.i18nService.t(\"removeUsersWarning\");\n  }\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserInviteRequest {\n  emails: string[] = [];\n  type: ProviderUserType;\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserUpdateRequest {\n  type: ProviderUserType;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"providerInviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/provider-users/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeServiceUser\"\n            [value]=\"userType.ServiceUser\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeServiceUser\">\n            {{ \"serviceUser\" | i18n }}\n            <small>{{ \"serviceUserDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeProviderAdmin\"\n            [value]=\"userType.ProviderAdmin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeProviderAdmin\">\n            {{ \"providerAdmin\" | i18n }}\n            <small>{{ \"providerAdminDesc\" | i18n }}</small>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissionsApi\";\nimport { ProviderUserInviteRequest } from \"@bitwarden/common/models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"@bitwarden/common/models/request/provider/providerUserUpdateRequest\";\n\n@Component({\n  selector: \"provider-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() providerUserId: string;\n  @Input() providerId: string;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  emails: string;\n  type: ProviderUserType = ProviderUserType.ServiceUser;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  userType = ProviderUserType;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.providerUserId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getProviderUser(this.providerId, this.providerUserId);\n        this.type = user.type;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new ProviderUserUpdateRequest();\n        request.type = this.type;\n        this.formPromise = this.apiService.putProviderUser(\n          this.providerId,\n          this.providerUserId,\n          request\n        );\n      } else {\n        const request = new ProviderUserInviteRequest();\n        request.emails = this.emails.trim().split(/\\s*,\\s*/);\n        request.type = this.type;\n        this.formPromise = this.apiService.postProviderUserInvite(this.providerId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteProviderUser(this.providerId, this.providerUserId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"people\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span bitBadge badgeType=\"warning\" *ngIf=\"acceptedCount\">{{ acceptedCount }}</span>\n      </button>\n    </div>\n    <div class=\"ml-3\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown ml-3\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"providerUsersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"u | userName\"\n              [email]=\"u.email\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            >\n            </app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"u.twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.ProviderAdmin\">{{ \"providerAdmin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.ServiceUser\">{{ \"serviceUser\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Custom\">{{ \"custom\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"groups(u)\"\n                  *ngIf=\"accessGroups\"\n                >\n                  <i class=\"bwi bwi-fw bwi-sitemap\" aria-hidden=\"true\"></i>\n                  {{ \"groups\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"@bitwarden/common/models/request/provider/providerUserConfirmRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { ProviderUserBulkResponse } from \"@bitwarden/common/models/response/provider/providerUserBulkResponse\";\nimport { ProviderUserUserDetailsResponse } from \"@bitwarden/common/models/response/provider/providerUserResponse\";\n\nimport { BasePeopleComponent } from \"src/app/common/base.people.component\";\nimport { BulkStatusComponent } from \"src/app/organizations/manage/bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"src/app/organizations/manage/entity-events.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\n\n@Component({\n  selector: \"provider-people\",\n  templateUrl: \"people.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PeopleComponent\n  extends BasePeopleComponent<ProviderUserUserDetailsResponse>\n  implements OnInit\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = ProviderUserType;\n  userStatusType = ProviderUserStatusType;\n  providerId: string;\n  accessEvents = false;\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    private router: Router,\n    searchService: SearchService,\n    validationService: ValidationService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    stateService: StateService,\n    private providerService: ProviderService\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n\n      if (!provider.canManageUsers) {\n        this.router.navigate([\"../\"], { relativeTo: this.route });\n        return;\n      }\n\n      this.accessEvents = provider.useEvents;\n\n      await this.load();\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n        if (qParams.viewEvents != null) {\n          const user = this.users.filter((u) => u.id === qParams.viewEvents);\n          if (user.length > 0 && user[0].status === ProviderUserStatusType.Confirmed) {\n            this.events(user[0]);\n          }\n        }\n      });\n    });\n  }\n\n  getUsers(): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    return this.apiService.getProviderUsers(this.providerId);\n  }\n\n  deleteUser(id: string): Promise<any> {\n    return this.apiService.deleteProviderUser(this.providerId, id);\n  }\n\n  revokeUser(id: string): Promise<any> {\n    // Not implemented.\n    return null;\n  }\n\n  restoreUser(id: string): Promise<any> {\n    // Not implemented.\n    return null;\n  }\n\n  reinviteUser(id: string): Promise<any> {\n    return this.apiService.postProviderUserReinvite(this.providerId, id);\n  }\n\n  async confirmUser(user: ProviderUserUserDetailsResponse, publicKey: Uint8Array): Promise<any> {\n    const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n    const key = await this.cryptoService.rsaEncrypt(providerKey.key, publicKey.buffer);\n    const request = new ProviderUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postProviderUserConfirm(this.providerId, user.id, request);\n  }\n\n  async edit(user: ProviderUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.providerId = this.providerId;\n        comp.providerUserId = user != null ? user.id : null;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n      }\n    );\n  }\n\n  async events(user: ProviderUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.providerId = this.providerId;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === ProviderUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new ProviderUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyProviderUserReinvite(this.providerId, request);\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  private async showBulkStatus(\n    users: ProviderUserUserDetailsResponse[],\n    filteredUsers: ProviderUserUserDetailsResponse[],\n    request: Promise<ListResponse<ProviderUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"provider\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <div class=\"my-auto d-flex align-items-center pl-1\">\n        <app-avatar [data]=\"provider.name\" size=\"45\" [circle]=\"true\"></app-avatar>\n        <div class=\"org-name ml-3\">\n          <span>{{ provider.name }}</span>\n          <small class=\"text-muted\">{{ \"provider\" | i18n }}</small>\n        </div>\n        <div class=\"ml-3 card border-danger text-danger bg-transparent\" *ngIf=\"!provider.enabled\">\n          <div class=\"card-body py-2\">\n            <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {{ \"providerIsDisabled\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"clients\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i>\n            {{ \"clients\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showManageTab\">\n          <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-sliders\" aria-hidden=\"true\"></i>\n            {{ \"manage\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showSettingsTab\">\n          <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-cogs\" aria-hidden=\"true\"></i>\n            {{ \"settings\" | i18n }}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"providers-layout\",\n  templateUrl: \"providers-layout.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ProvidersLayoutComponent {\n  provider: Provider;\n  private providerId: string;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    this.provider = await this.providerService.get(this.providerId);\n  }\n\n  get showMenuBar() {\n    return this.showManageTab || this.showSettingsTab;\n  }\n\n  get showManageTab() {\n    return this.provider.canManageUsers || this.provider.canAccessEventLogs;\n  }\n\n  get showSettingsTab() {\n    return this.provider.isProviderAdmin;\n  }\n\n  get manageRoute(): string {\n    switch (true) {\n      case this.provider.canManageUsers:\n        return \"manage/people\";\n      case this.provider.canAccessEventLogs:\n        return \"manage/events\";\n    }\n  }\n}\n","export class ProviderUpdateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myProvider\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"provider && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"provider.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"provider.billingEmail\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <app-avatar data=\"{{ provider.name }}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProviderUpdateRequest } from \"@bitwarden/common/models/request/provider/providerUpdateRequest\";\nimport { ProviderResponse } from \"@bitwarden/common/models/response/provider/providerResponse\";\n\n@Component({\n  selector: \"provider-account\",\n  templateUrl: \"account.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccountComponent {\n  selfHosted = false;\n  loading = true;\n  provider: ProviderResponse;\n  formPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  private providerId: string;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      try {\n        this.provider = await this.apiService.getProvider(this.providerId);\n      } catch (e) {\n        this.logService.error(`Handled exception: ${e}`);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new ProviderUpdateRequest();\n      request.name = this.provider.name;\n      request.businessName = this.provider.businessName;\n      request.billingEmail = this.provider.billingEmail;\n\n      this.formPromise = this.apiService.putProvider(this.providerId, request).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerUpdated\"));\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\n\n@Component({\n  selector: \"provider-settings\",\n  templateUrl: \"settings.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SettingsComponent {\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      await this.providerService.get(params.providerId);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myProvider\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setupProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"setupProviderLoginDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"src/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-setup-provider\",\n  templateUrl: \"setup-provider.component.html\",\n})\nexport class SetupProviderComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/providers/setup\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    // Empty\n  }\n}\n","export class ProviderSetupRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  token: string;\n  key: string;\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"setupProvider\" | i18n }}</h1>\n  </div>\n  <p>{{ \"setupProviderDesc\" | i18n }}</p>\n\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"loading\">\n    <h2 class=\"mt-5\">{{ \"generalInformation\" | i18n }}</h2>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required />\n      </div>\n      <div class=\"form-group col-6\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"billingEmail\"\n          required\n        />\n      </div>\n    </div>\n\n    <div class=\"mt-4\">\n      <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"submit\" | i18n }}</span>\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n        {{ \"cancel\" | i18n }}\n      </button>\n    </div>\n  </form>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProviderSetupRequest } from \"@bitwarden/common/models/request/provider/providerSetupRequest\";\n\n@Component({\n  selector: \"provider-setup\",\n  templateUrl: \"setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SetupComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  formPromise: Promise<any>;\n\n  providerId: string;\n  token: string;\n  name: string;\n  billingEmail: string;\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService\n  ) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.providerId == null || qParams.email == null || qParams.token == null;\n\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"emergencyInviteAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.providerId = qParams.providerId;\n      this.token = qParams.token;\n\n      // Check if provider exists, redirect if it does\n      try {\n        const provider = await this.apiService.getProvider(this.providerId);\n        if (provider.name != null) {\n          this.router.navigate([\"/providers\", provider.id], { replaceUrl: true });\n        }\n      } catch (e) {\n        this.validationService.showError(e);\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit();\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  async doSubmit() {\n    try {\n      const shareKey = await this.cryptoService.makeShareKey();\n      const key = shareKey[0].encryptedString;\n\n      const request = new ProviderSetupRequest();\n      request.name = this.name;\n      request.billingEmail = this.billingEmail;\n      request.token = this.token;\n      request.key = key;\n\n      const provider = await this.apiService.postProviderSetup(this.providerId, request);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerSetup\"));\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/providers\", provider.id]);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\nimport { FrontendLayoutComponent } from \"src/app/layouts/frontend-layout.component\";\nimport { ProvidersComponent } from \"src/app/providers/providers.component\";\n\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { ProviderPermissionsGuard } from \"./guards/provider-permissions.guard\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    component: ProvidersComponent,\n  },\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    children: [\n      {\n        path: \"setup-provider\",\n        component: SetupProviderComponent,\n        data: { titleId: \"setupProvider\" },\n      },\n      {\n        path: \"accept-provider\",\n        component: AcceptProviderComponent,\n        data: { titleId: \"acceptProvider\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"setup\",\n        component: SetupComponent,\n      },\n      {\n        path: \":providerId\",\n        component: ProvidersLayoutComponent,\n        canActivate: [ProviderPermissionsGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"clients\" },\n          { path: \"clients/create\", component: CreateOrganizationComponent },\n          { path: \"clients\", component: ClientsComponent, data: { titleId: \"clients\" } },\n          {\n            path: \"manage\",\n            component: ManageComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"people\",\n              },\n              {\n                path: \"people\",\n                component: PeopleComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"people\",\n                  providerPermissions: (provider: Provider) => provider.canManageUsers,\n                },\n              },\n              {\n                path: \"events\",\n                component: EventsComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"eventLogs\",\n                  providerPermissions: (provider: Provider) => provider.canAccessEventLogs,\n                },\n              },\n            ],\n          },\n          {\n            path: \"settings\",\n            component: SettingsComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"account\",\n              },\n              {\n                path: \"account\",\n                component: AccountComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"myProvider\",\n                  providerPermissions: (provider: Provider) => provider.isProviderAdmin,\n                },\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProvidersRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { ComponentFactoryResolver, NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\n\nimport { OssModule } from \"src/app/oss.module\";\n\nimport { AddOrganizationComponent } from \"./clients/add-organization.component\";\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { ProviderPermissionsGuard } from \"./guards/provider-permissions.guard\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { BulkConfirmComponent } from \"./manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./manage/bulk/bulk-remove.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { UserAddEditComponent } from \"./manage/user-add-edit.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { ProvidersRoutingModule } from \"./providers-routing.module\";\nimport { WebProviderService } from \"./services/webProvider.service\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, OssModule, JslibModule, ProvidersRoutingModule],\n  declarations: [\n    AcceptProviderComponent,\n    AccountComponent,\n    AddOrganizationComponent,\n    BulkConfirmComponent,\n    BulkRemoveComponent,\n    ClientsComponent,\n    CreateOrganizationComponent,\n    EventsComponent,\n    ManageComponent,\n    PeopleComponent,\n    ProvidersLayoutComponent,\n    SettingsComponent,\n    SetupComponent,\n    SetupProviderComponent,\n    UserAddEditComponent,\n  ],\n  providers: [WebProviderService, ProviderPermissionsGuard],\n})\nexport class ProvidersModule {\n  constructor(modalService: ModalService, componentFactoryResolver: ComponentFactoryResolver) {\n    modalService.registerComponentFactoryResolver(\n      AddOrganizationComponent,\n      componentFactoryResolver\n    );\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { ProvidersModule } from \"./providers/providers.module\";\n\nconst routes: Routes = [\n  {\n    path: \"providers\",\n    loadChildren: () => ProvidersModule,\n  },\n  {\n    path: \"sm\",\n    loadChildren: async () => (await import(\"./sm/sm.module\")).SecretsManagerModule,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class DisableSendPolicy extends BasePolicy {\n  name = \"disableSend\";\n  description = \"disableSendPolicyDesc\";\n  type = PolicyType.DisableSend;\n  component = DisableSendPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-send\",\n  templateUrl: \"disable-send.component.html\",\n})\nexport class DisableSendPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"disableSendExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minComplexity\">{{ \"minComplexityScore\" | i18n }}</label>\n      <select\n        id=\"minComplexity\"\n        name=\"minComplexity\"\n        formControlName=\"minComplexity\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of passwordScores\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"8\"\n        name=\"minLength\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireUpper\"\n      name=\"requireUpper\"\n      formControlName=\"requireUpper\"\n    />\n    <label class=\"form-check-label\" for=\"requireUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireLower\"\n      name=\"requireLower\"\n      formControlName=\"requireLower\"\n    />\n    <label class=\"form-check-label\" for=\"requireLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireNumbers\"\n      name=\"requireNumbers\"\n      formControlName=\"requireNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"requireNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireSpecial\"\n      name=\"requireSpecial\"\n      formControlName=\"requireSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"requireSpecial\">!@#$%^&amp;*</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class MasterPasswordPolicy extends BasePolicy {\n  name = \"masterPassPolicyTitle\";\n  description = \"masterPassPolicyDesc\";\n  type = PolicyType.MasterPassword;\n  component = MasterPasswordPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-master-password\",\n  templateUrl: \"master-password.component.html\",\n})\nexport class MasterPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    minComplexity: [null],\n    minLength: [null],\n    requireUpper: [null],\n    requireLower: [null],\n    requireNumbers: [null],\n    requireSpecial: [null],\n  });\n\n  passwordScores: { name: string; value: number }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    i18nService: I18nService,\n    private organizationService: OrganizationService\n  ) {\n    super();\n\n    this.passwordScores = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"weak\") + \" (0)\", value: 0 },\n      { name: i18nService.t(\"weak\") + \" (1)\", value: 1 },\n      { name: i18nService.t(\"weak\") + \" (2)\", value: 2 },\n      { name: i18nService.t(\"good\") + \" (3)\", value: 3 },\n      { name: i18nService.t(\"strong\") + \" (4)\", value: 4 },\n    ];\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group mb-0\">\n      <label for=\"defaultType\">{{ \"defaultType\" | i18n }}</label>\n      <select\n        id=\"defaultType\"\n        name=\"defaultType\"\n        formControlName=\"defaultType\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of defaultTypes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n  </div>\n  <h3 class=\"mt-4\">{{ \"password\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minLength\"\n        min=\"5\"\n        max=\"128\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumbers\">{{ \"minNumbers\" | i18n }}</label>\n      <input\n        id=\"minNumbers\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumbers\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minNumbers\"\n      />\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minSpecial\">{{ \"minSpecial\" | i18n }}</label>\n      <input\n        id=\"minSpecial\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minSpecial\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minSpecial\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useUpper\"\n      formControlName=\"useUpper\"\n      name=\"useUpper\"\n    />\n    <label class=\"form-check-label\" for=\"useUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useLower\"\n      name=\"useLower\"\n      formControlName=\"useLower\"\n    />\n    <label class=\"form-check-label\" for=\"useLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useNumbers\"\n      name=\"useNumbers\"\n      formControlName=\"useNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"useNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useSpecial\"\n      name=\"useSpecial\"\n      formControlName=\"useSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"useSpecial\">!@#$%^&amp;*</label>\n  </div>\n  <h3 class=\"mt-4\">{{ \"passphrase\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumberWords\">{{ \"minimumNumberOfWords\" | i18n }}</label>\n      <input\n        id=\"minNumberWords\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumberWords\"\n        min=\"3\"\n        max=\"20\"\n        formControlName=\"minNumberWords\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"capitalize\"\n      name=\"capitalize\"\n      formControlName=\"capitalize\"\n    />\n    <label class=\"form-check-label\" for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"includeNumber\"\n      name=\"includeNumber\"\n      formControlName=\"includeNumber\"\n    />\n    <label class=\"form-check-label\" for=\"includeNumber\">{{ \"includeNumber\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PasswordGeneratorPolicy extends BasePolicy {\n  name = \"passwordGenerator\";\n  description = \"passwordGeneratorPolicyDesc\";\n  type = PolicyType.PasswordGenerator;\n  component = PasswordGeneratorPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-password-generator\",\n  templateUrl: \"password-generator.component.html\",\n})\nexport class PasswordGeneratorPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    defaultType: [null],\n    minLength: [null],\n    useUpper: [null],\n    useLower: [null],\n    useNumbers: [null],\n    useSpecial: [null],\n    minNumbers: [null],\n    minSpecial: [null],\n    minNumberWords: [null],\n    capitalize: [null],\n    includeNumber: [null],\n  });\n\n  defaultTypes: { name: string; value: string }[];\n\n  constructor(private formBuilder: UntypedFormBuilder, i18nService: I18nService) {\n    super();\n\n    this.defaultTypes = [\n      { name: i18nService.t(\"userPreference\"), value: null },\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PersonalOwnershipPolicy extends BasePolicy {\n  name = \"personalOwnership\";\n  description = \"personalOwnershipPolicyDesc\";\n  type = PolicyType.PersonalOwnership;\n  component = PersonalOwnershipPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-personal-ownership\",\n  templateUrl: \"personal-ownership.component.html\",\n})\nexport class PersonalOwnershipPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"personalOwnershipExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class RequireSsoPolicy extends BasePolicy {\n  name = \"requireSso\";\n  description = \"requireSsoPolicyDesc\";\n  type = PolicyType.RequireSso;\n  component = RequireSsoPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useSso;\n  }\n}\n\n@Component({\n  selector: \"policy-require-sso\",\n  templateUrl: \"require-sso.component.html\",\n})\nexport class RequireSsoPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n<app-callout type=\"warning\">\n  {{ \"requireSsoExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<app-callout type=\"warning\">\n  {{ \"resetPasswordPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"resetPasswordPolicyAutoEnroll\" | i18n }}</h3>\n  <p>{{ \"resetPasswordPolicyAutoEnrollDescription\" | i18n }}</p>\n  <app-callout type=\"warning\">\n    {{ \"resetPasswordPolicyAutoEnrollWarning\" | i18n }}\n  </app-callout>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"autoEnrollEnabled\"\n      name=\"AutoEnrollEnabled\"\n      formControlName=\"autoEnrollEnabled\"\n    />\n    <label class=\"form-check-label\" for=\"autoEnrollEnabled\">\n      {{ \"resetPasswordPolicyAutoEnrollCheckbox\" | i18n }}\n    </label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class ResetPasswordPolicy extends BasePolicy {\n  name = \"resetPasswordPolicy\";\n  description = \"resetPasswordPolicyDescription\";\n  type = PolicyType.ResetPassword;\n  component = ResetPasswordPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useResetPassword;\n  }\n}\n\n@Component({\n  selector: \"policy-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    autoEnrollEnabled: false,\n  });\n\n  defaultTypes: { name: string; value: string }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private organizationService: OrganizationService\n  ) {\n    super();\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SendOptionsPolicy extends BasePolicy {\n  name = \"sendOptions\";\n  description = \"sendOptionsPolicyDesc\";\n  type = PolicyType.SendOptions;\n  component = SendOptionsPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-send-options\",\n  templateUrl: \"send-options.component.html\",\n})\nexport class SendOptionsPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    disableHideEmail: false,\n  });\n\n  constructor(private formBuilder: UntypedFormBuilder) {\n    super();\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"sendOptionsExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"disableHideEmail\"\n      name=\"DisableHideEmail\"\n      formControlName=\"disableHideEmail\"\n    />\n    <label class=\"form-check-label\" for=\"disableHideEmail\">{{ \"disableHideEmail\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SingleOrgPolicy extends BasePolicy {\n  name = \"singleOrg\";\n  description = \"singleOrgDesc\";\n  type = PolicyType.SingleOrg;\n  component = SingleOrgPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-single-org\",\n  templateUrl: \"single-org.component.html\",\n})\nexport class SingleOrgPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    if (!this.enabled.value) {\n      if (policiesEnabledMap.get(PolicyType.RequireSso) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"requireSso\"))\n        );\n      }\n\n      if (policiesEnabledMap.get(PolicyType.MaximumVaultTimeout) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"maximumVaultTimeoutLabel\"))\n        );\n      }\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"singleOrgPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class TwoFactorAuthenticationPolicy extends BasePolicy {\n  name = \"twoStepLoginPolicyTitle\";\n  description = \"twoStepLoginPolicyDesc\";\n  type = PolicyType.TwoFactorAuthentication;\n  component = TwoFactorAuthenticationPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-two-factor-authentication\",\n  templateUrl: \"two-factor-authentication.component.html\",\n})\nexport class TwoFactorAuthenticationPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"twoStepLoginPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { DOCUMENT } from \"@angular/common\";\nimport { Component, Inject, NgZone, OnDestroy, OnInit, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport * as jq from \"jquery\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport Swal from \"sweetalert2\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { InternalFolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SettingsService } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\n\nimport { PolicyListService, RouterService } from \"./core\";\nimport { DisableSendPolicy } from \"./organizations/policies/disable-send.component\";\nimport { MasterPasswordPolicy } from \"./organizations/policies/master-password.component\";\nimport { PasswordGeneratorPolicy } from \"./organizations/policies/password-generator.component\";\nimport { PersonalOwnershipPolicy } from \"./organizations/policies/personal-ownership.component\";\nimport { RequireSsoPolicy } from \"./organizations/policies/require-sso.component\";\nimport { ResetPasswordPolicy } from \"./organizations/policies/reset-password.component\";\nimport { SendOptionsPolicy } from \"./organizations/policies/send-options.component\";\nimport { SingleOrgPolicy } from \"./organizations/policies/single-org.component\";\nimport { TwoFactorAuthenticationPolicy } from \"./organizations/policies/two-factor-authentication.component\";\n\nconst BroadcasterSubscriptionId = \"AppComponent\";\nconst IdleTimeout = 60000 * 10; // 10 minutes\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"app.component.html\",\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  private lastActivity: number = null;\n  private idleTimer: number = null;\n  private isIdle = false;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private broadcasterService: BroadcasterService,\n    private folderService: InternalFolderService,\n    private settingsService: SettingsService,\n    private syncService: SyncService,\n    private passwordGenerationService: PasswordGenerationService,\n    private cipherService: CipherService,\n    private authService: AuthService,\n    private router: Router,\n    private toastrService: ToastrService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    private vaultTimeoutService: VaultTimeoutService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private sanitizer: DomSanitizer,\n    private searchService: SearchService,\n    private notificationsService: NotificationsService,\n    private routerService: RouterService,\n    private stateService: StateService,\n    private eventService: EventService,\n    private policyService: InternalPolicyService,\n    protected policyListService: PolicyListService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  ngOnInit() {\n    this.i18nService.locale$.pipe(takeUntil(this.destroy$)).subscribe((locale) => {\n      this.document.documentElement.lang = locale;\n    });\n\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousemove = () => this.recordActivity();\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"loggedIn\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"loggedOut\":\n            this.routerService.setPreviousUrl(null);\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"unlocked\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"authBlocked\":\n            this.routerService.setPreviousUrl(message.url);\n            this.router.navigate([\"/\"]);\n            break;\n          case \"logout\":\n            this.logOut(!!message.expired);\n            break;\n          case \"lockVault\":\n            await this.vaultTimeoutService.lock();\n            break;\n          case \"locked\":\n            this.notificationsService.updateConnection(false);\n            this.router.navigate([\"lock\"]);\n            break;\n          case \"lockedUrl\":\n            this.routerService.setPreviousUrl(message.url);\n            break;\n          case \"syncStarted\":\n            break;\n          case \"syncCompleted\":\n            break;\n          case \"upgradeOrganization\": {\n            const upgradeConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"upgradeOrganizationDesc\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (upgradeConfirmed) {\n              this.router.navigate([\n                \"organizations\",\n                message.organizationId,\n                \"settings\",\n                \"billing\",\n              ]);\n            }\n            break;\n          }\n          case \"premiumRequired\": {\n            const premiumConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"premiumRequiredDesc\"),\n              this.i18nService.t(\"premiumRequired\"),\n              this.i18nService.t(\"upgrade\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (premiumConfirmed) {\n              this.router.navigate([\"settings/subscription/premium\"]);\n            }\n            break;\n          }\n          case \"emailVerificationRequired\": {\n            const emailVerificationConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"emailVerificationRequiredDesc\"),\n              this.i18nService.t(\"emailVerificationRequired\"),\n              this.i18nService.t(\"learnMore\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (emailVerificationConfirmed) {\n              this.platformUtilsService.launchUri(\n                \"https://bitwarden.com/help/create-bitwarden-account/\"\n              );\n            }\n            break;\n          }\n          case \"showToast\":\n            this.showToast(message);\n            break;\n          case \"setFullWidth\":\n            this.setFullWidth();\n            break;\n          case \"convertAccountToKeyConnector\":\n            this.router.navigate([\"/remove-password\"]);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n\n    this.router.events.pipe(takeUntil(this.destroy$)).subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        const modals = Array.from(document.querySelectorAll(\".modal\"));\n        for (const modal of modals) {\n          (jq(modal) as any).modal(\"hide\");\n        }\n\n        if (document.querySelector(\".swal-modal\") != null) {\n          Swal.close(undefined);\n        }\n      }\n    });\n\n    this.policyListService.addPolicies([\n      new TwoFactorAuthenticationPolicy(),\n      new MasterPasswordPolicy(),\n      new ResetPasswordPolicy(),\n      new PasswordGeneratorPolicy(),\n      new SingleOrgPolicy(),\n      new RequireSsoPolicy(),\n      new PersonalOwnershipPolicy(),\n      new DisableSendPolicy(),\n      new SendOptionsPolicy(),\n    ]);\n\n    this.setFullWidth();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private async logOut(expired: boolean) {\n    await this.eventService.uploadEvents();\n    const userId = await this.stateService.getUserId();\n    await Promise.all([\n      this.eventService.clearEvents(),\n      this.syncService.setLastSync(new Date(0)),\n      this.cryptoService.clearKeys(),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(),\n      this.keyConnectorService.clear(),\n    ]);\n\n    this.searchService.clearIndex();\n    this.authService.logOut(async () => {\n      if (expired) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          this.i18nService.t(\"loggedOut\"),\n          this.i18nService.t(\"loginExpired\")\n        );\n      }\n\n      await this.stateService.clean({ userId: userId });\n      Swal.close();\n      this.router.navigate([\"/\"]);\n    });\n  }\n\n  private async recordActivity() {\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    this.stateService.setLastActive(now);\n    // Idle states\n    if (this.isIdle) {\n      this.isIdle = false;\n      this.idleStateChanged();\n    }\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idleTimer = window.setTimeout(() => {\n      if (!this.isIdle) {\n        this.isIdle = true;\n        this.idleStateChanged();\n      }\n    }, IdleTimeout);\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private idleStateChanged() {\n    if (this.isIdle) {\n      this.notificationsService.disconnectFromInactivity();\n    } else {\n      this.notificationsService.reconnectFromActivity();\n    }\n  }\n\n  private async setFullWidth() {\n    const enableFullWidth = await this.stateService.getEnableFullWidth();\n    if (enableFullWidth) {\n      document.body.classList.add(\"full-width\");\n    } else {\n      document.body.classList.remove(\"full-width\");\n    }\n  }\n}\n","<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"src/app/organizations/policies/base-policy.component\";\n\nexport class DisablePersonalVaultExportPolicy extends BasePolicy {\n  name = \"disablePersonalVaultExport\";\n  description = \"disablePersonalVaultExportDesc\";\n  type = PolicyType.DisablePersonalVaultExport;\n  component = DisablePersonalVaultExportPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-personal-vault-export\",\n  templateUrl: \"disable-personal-vault-export.component.html\",\n})\nexport class DisablePersonalVaultExportPolicyComponent extends BasePolicyComponent {}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\n\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"src/app/organizations/policies/base-policy.component\";\n\nexport class MaximumVaultTimeoutPolicy extends BasePolicy {\n  name = \"maximumVaultTimeout\";\n  description = \"maximumVaultTimeoutDesc\";\n  type = PolicyType.MaximumVaultTimeout;\n  component = MaximumVaultTimeoutPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-maximum-timeout\",\n  templateUrl: \"maximum-vault-timeout.component.html\",\n})\nexport class MaximumVaultTimeoutPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    hours: [null],\n    minutes: [null],\n  });\n\n  constructor(private formBuilder: UntypedFormBuilder, private i18nService: I18nService) {\n    super();\n  }\n\n  loadData() {\n    const minutes = this.policyResponse.data?.minutes;\n\n    if (minutes == null) {\n      return;\n    }\n\n    this.data.patchValue({\n      hours: Math.floor(minutes / 60),\n      minutes: minutes % 60,\n    });\n  }\n\n  buildRequestData() {\n    if (this.data.value.hours == null && this.data.value.minutes == null) {\n      return null;\n    }\n\n    return {\n      minutes: this.data.value.hours * 60 + this.data.value.minutes,\n    };\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    const data = this.buildRequestData();\n    if (data?.minutes == null || data?.minutes <= 0) {\n      throw new Error(this.i18nService.t(\"invalidMaximumVaultTimeout\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <label for=\"hours\">{{ \"maximumVaultTimeoutLabel\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AppComponent as BaseAppComponent } from \"src/app/app.component\";\n\nimport { DisablePersonalVaultExportPolicy } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicy } from \"./policies/maximum-vault-timeout.component\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"../../../../apps/web/src/app/app.component.html\",\n})\nexport class AppComponent extends BaseAppComponent {\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.policyListService.addPolicies([\n      new MaximumVaultTimeoutPolicy(),\n      new DisablePersonalVaultExportPolicy(),\n    ]);\n  }\n}\n","import { ScimProviderType } from \"@bitwarden/common/enums/scimProviderType\";\n\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class ScimConfigApi extends BaseResponse {\n  enabled: boolean;\n  scimProvider: ScimProviderType;\n\n  constructor(data: any) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.scimProvider = this.getResponseProperty(\"ScimProvider\");\n  }\n}\n","import { ScimProviderType } from \"@bitwarden/common/enums/scimProviderType\";\n\nexport class ScimConfigRequest {\n  constructor(private enabled: boolean, private scimProvider: ScimProviderType = null) {}\n}\n","<div class=\"page-header\">\n  <h1>{{ \"scim\" | i18n }}</h1>\n</div>\n\n<p>{{ \"scimDescription\" | i18n }}</p>\n\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  [formGroup]=\"formData\"\n  *ngIf=\"!loading\"\n>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n        aria-describedby=\"scimEnabledCheckboxDescHelpText\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"scimEnabledCheckboxDesc\" | i18n }}</label>\n      <div id=\"scimEnabledCheckboxDescHelpText\">\n        <small class=\"form-text text-muted\">{{ \"scimEnabledCheckboxDescHelpText\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n\n  <bit-form-field *ngIf=\"showScimSettings\">\n    <bit-label>{{ \"scimUrl\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"endpointUrl\" />\n    <button\n      type=\"button\"\n      bitSuffix\n      bitButton\n      (click)=\"copyScimUrl()\"\n      [appA11yTitle]=\"'copyScimUrl' | i18n\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-clone\"></i>\n    </button>\n  </bit-form-field>\n\n  <bit-form-field *ngIf=\"showScimSettings\">\n    <bit-label>{{ \"scimApiKey\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"clientSecret\" />\n    <ng-container #rotateButton [appApiAction]=\"rotatePromise\">\n      <button\n        [disabled]=\"rotateButton.loading\"\n        type=\"button\"\n        bitSuffix\n        bitButton\n        (click)=\"rotateScimKey()\"\n        [appA11yTitle]=\"'rotateScimKey' | i18n\"\n      >\n        <i\n          aria-hidden=\"true\"\n          class=\"bwi bwi-lg bwi-generate\"\n          [ngClass]=\"{ 'bwi-spin': rotateButton.loading }\"\n        ></i>\n      </button>\n    </ng-container>\n    <button\n      type=\"button\"\n      bitSuffix\n      bitButton\n      (click)=\"copyScimKey()\"\n      [appA11yTitle]=\"'copyScimKey' | i18n\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-clone\"></i>\n    </button>\n    <bit-hint>{{ \"scimApiKeyHelperText\" | i18n }}</bit-hint>\n  </bit-form-field>\n\n  <bit-submit-button buttonType=\"primary\" [loading]=\"form.loading\" [disabled]=\"form.loading\">\n    {{ \"save\" | i18n }}\n  </bit-submit-button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormBuilder, FormControl } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/enums/organizationApiKeyType\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/enums/organizationConnectionType\";\nimport { ScimConfigApi } from \"@bitwarden/common/models/api/scimConfigApi\";\nimport { OrganizationApiKeyRequest } from \"@bitwarden/common/models/request/organizationApiKeyRequest\";\nimport { OrganizationConnectionRequest } from \"@bitwarden/common/models/request/organizationConnectionRequest\";\nimport { ScimConfigRequest } from \"@bitwarden/common/models/request/scimConfigRequest\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/apiKeyResponse\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/models/response/organizationConnectionResponse\";\n\n@Component({\n  selector: \"app-org-manage-scim\",\n  templateUrl: \"scim.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ScimComponent implements OnInit {\n  loading = true;\n  organizationId: string;\n  existingConnectionId: string;\n  formPromise: Promise<OrganizationConnectionResponse<ScimConfigApi>>;\n  rotatePromise: Promise<ApiKeyResponse>;\n  enabled = new FormControl(false);\n  showScimSettings = false;\n\n  formData = this.formBuilder.group({\n    endpointUrl: new FormControl({ value: \"\", disabled: true }),\n    clientSecret: new FormControl({ value: \"\", disabled: true }),\n  });\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private environmentService: EnvironmentService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    const connection = await this.apiService.getOrganizationConnection(\n      this.organizationId,\n      OrganizationConnectionType.Scim,\n      ScimConfigApi\n    );\n    await this.setConnectionFormValues(connection);\n  }\n\n  async loadApiKey() {\n    const apiKeyRequest = new OrganizationApiKeyRequest();\n    apiKeyRequest.type = OrganizationApiKeyType.Scim;\n    apiKeyRequest.masterPasswordHash = \"N/A\";\n    const apiKeyResponse = await this.organizationApiService.getOrCreateApiKey(\n      this.organizationId,\n      apiKeyRequest\n    );\n    this.formData.setValue({\n      endpointUrl: this.getScimEndpointUrl(),\n      clientSecret: apiKeyResponse.apiKey,\n    });\n  }\n\n  async copyScimUrl() {\n    this.platformUtilsService.copyToClipboard(this.getScimEndpointUrl());\n  }\n\n  async rotateScimKey() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"rotateScimKeyWarning\"),\n      this.i18nService.t(\"rotateScimKey\"),\n      this.i18nService.t(\"rotateKey\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    const request = new OrganizationApiKeyRequest();\n    request.type = OrganizationApiKeyType.Scim;\n    request.masterPasswordHash = \"N/A\";\n\n    this.rotatePromise = this.organizationApiService.rotateApiKey(this.organizationId, request);\n\n    try {\n      const response = await this.rotatePromise;\n      this.formData.setValue({\n        endpointUrl: this.getScimEndpointUrl(),\n        clientSecret: response.apiKey,\n      });\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"scimApiKeyRotated\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.rotatePromise = null;\n  }\n\n  async copyScimKey() {\n    this.platformUtilsService.copyToClipboard(this.formData.get(\"clientSecret\").value);\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationConnectionRequest(\n        this.organizationId,\n        OrganizationConnectionType.Scim,\n        true,\n        new ScimConfigRequest(this.enabled.value)\n      );\n      if (this.existingConnectionId == null) {\n        this.formPromise = this.apiService.createOrganizationConnection(request, ScimConfigApi);\n      } else {\n        this.formPromise = this.apiService.updateOrganizationConnection(\n          request,\n          ScimConfigApi,\n          this.existingConnectionId\n        );\n      }\n      const response = (await this.formPromise) as OrganizationConnectionResponse<ScimConfigApi>;\n      await this.setConnectionFormValues(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"scimSettingsSaved\"));\n    } catch (e) {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  getScimEndpointUrl() {\n    return this.environmentService.getScimUrl() + \"/\" + this.organizationId;\n  }\n\n  private async setConnectionFormValues(connection: OrganizationConnectionResponse<ScimConfigApi>) {\n    this.existingConnectionId = connection?.id;\n    if (connection !== null && connection.config?.enabled) {\n      this.showScimSettings = true;\n      this.enabled.setValue(true);\n      this.formData.setValue({\n        endpointUrl: this.getScimEndpointUrl(),\n        clientSecret: \"\",\n      });\n      await this.loadApiKey();\n    } else {\n      this.showScimSettings = false;\n      this.enabled.setValue(false);\n    }\n    this.loading = false;\n  }\n}\n","import { AbstractControl, ValidationErrors, Validators } from \"@angular/forms\";\n\n/**\n * Runs Validators.required on a field only if it's dirty. This prevents error messages from being displayed\n * to the user prematurely.\n */\nexport function dirtyRequired(control: AbstractControl): ValidationErrors | null {\n  return control.dirty ? Validators.required(control) : null;\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\n\nexport class OrganizationSsoRequest {\n  enabled = false;\n  data: SsoConfigApi;\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { SsoConfigApi } from \"../api/ssoConfigApi\";\n\nimport { View } from \"./view\";\n\nexport class SsoConfigView extends View {\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  openId: {\n    authority: string;\n    clientId: string;\n    clientSecret: string;\n    metadataAddress: string;\n    redirectBehavior: OpenIdConnectRedirectBehavior;\n    getClaimsFromUserInfoEndpoint: boolean;\n    additionalScopes: string;\n    additionalUserIdClaimTypes: string;\n    additionalEmailClaimTypes: string;\n    additionalNameClaimTypes: string;\n    acrValues: string;\n    expectedReturnAcrValue: string;\n  };\n\n  saml: {\n    spNameIdFormat: Saml2NameIdFormat;\n    spOutboundSigningAlgorithm: string;\n    spSigningBehavior: Saml2SigningBehavior;\n    spMinIncomingSigningAlgorithm: boolean;\n    spWantAssertionsSigned: boolean;\n    spValidateCertificates: boolean;\n\n    idpEntityId: string;\n    idpBindingType: Saml2BindingType;\n    idpSingleSignOnServiceUrl: string;\n    idpSingleLogoutServiceUrl: string;\n    idpX509PublicCert: string;\n    idpOutboundSigningAlgorithm: string;\n    idpAllowUnsolicitedAuthnResponse: boolean;\n    idpAllowOutboundLogoutRequests: boolean;\n    idpWantAuthnRequestsSigned: boolean;\n  };\n\n  constructor(api: SsoConfigApi) {\n    super();\n    if (api == null) {\n      return;\n    }\n\n    this.configType = api.configType;\n\n    this.keyConnectorEnabled = api.keyConnectorEnabled;\n    this.keyConnectorUrl = api.keyConnectorUrl;\n\n    if (this.configType === SsoType.OpenIdConnect) {\n      this.openId = {\n        authority: api.authority,\n        clientId: api.clientId,\n        clientSecret: api.clientSecret,\n        metadataAddress: api.metadataAddress,\n        redirectBehavior: api.redirectBehavior,\n        getClaimsFromUserInfoEndpoint: api.getClaimsFromUserInfoEndpoint,\n        additionalScopes: api.additionalScopes,\n        additionalUserIdClaimTypes: api.additionalUserIdClaimTypes,\n        additionalEmailClaimTypes: api.additionalEmailClaimTypes,\n        additionalNameClaimTypes: api.additionalNameClaimTypes,\n        acrValues: api.acrValues,\n        expectedReturnAcrValue: api.expectedReturnAcrValue,\n      };\n    } else if (this.configType === SsoType.Saml2) {\n      this.saml = {\n        spNameIdFormat: api.spNameIdFormat,\n        spOutboundSigningAlgorithm: api.spOutboundSigningAlgorithm,\n        spSigningBehavior: api.spSigningBehavior,\n        spMinIncomingSigningAlgorithm: api.spMinIncomingSigningAlgorithm,\n        spWantAssertionsSigned: api.spWantAssertionsSigned,\n        spValidateCertificates: api.spValidateCertificates,\n\n        idpEntityId: api.idpEntityId,\n        idpBindingType: api.idpBindingType,\n        idpSingleSignOnServiceUrl: api.idpSingleSignOnServiceUrl,\n        idpSingleLogoutServiceUrl: api.idpSingleLogoutServiceUrl,\n        idpX509PublicCert: api.idpX509PublicCert,\n        idpOutboundSigningAlgorithm: api.idpOutboundSigningAlgorithm,\n        idpAllowUnsolicitedAuthnResponse: api.idpAllowUnsolicitedAuthnResponse,\n        idpWantAuthnRequestsSigned: api.idpWantAuthnRequestsSigned,\n\n        // Value is inverted in the view model (allow instead of disable)\n        idpAllowOutboundLogoutRequests:\n          api.idpDisableOutboundLogoutRequests == null\n            ? null\n            : !api.idpDisableOutboundLogoutRequests,\n      };\n    }\n  }\n}\n","export class View {}\n","import { Directive, ElementRef, OnDestroy, OnInit } from \"@angular/core\";\nimport { NgControl } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\n\n@Directive({\n  selector: \"[appA11yInvalid]\",\n})\nexport class A11yInvalidDirective implements OnDestroy, OnInit {\n  private sub: Subscription;\n\n  constructor(private el: ElementRef<HTMLInputElement>, private formControlDirective: NgControl) {}\n\n  ngOnInit() {\n    this.sub = this.formControlDirective.control.statusChanges.subscribe((status) => {\n      if (status === \"INVALID\") {\n        this.el.nativeElement.setAttribute(\"aria-invalid\", \"true\");\n      } else if (status === \"VALID\") {\n        this.el.nativeElement.setAttribute(\"aria-invalid\", \"false\");\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub?.unsubscribe();\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"input[appInputStripSpaces]\",\n})\nexport class InputStripSpacesDirective {\n  constructor(private el: ElementRef<HTMLInputElement>) {}\n\n  @HostListener(\"input\") onInput() {\n    this.el.nativeElement.value = this.el.nativeElement.value.replace(/ /g, \"\");\n  }\n}\n","import { Directive, Input, OnInit, Self } from \"@angular/core\";\nimport { ControlValueAccessor, UntypedFormControl, NgControl, Validators } from \"@angular/forms\";\n\nimport { dirtyRequired } from \"@bitwarden/angular/validators/dirty.validator\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Directive()\nexport abstract class BaseCvaComponent implements ControlValueAccessor, OnInit {\n  get describedById() {\n    return this.showDescribedBy ? this.controlId + \"Desc\" : null;\n  }\n\n  get showDescribedBy() {\n    return this.helperText != null || this.controlDir.control.hasError(\"required\");\n  }\n\n  get isRequired() {\n    return (\n      this.controlDir.control.hasValidator(Validators.required) ||\n      this.controlDir.control.hasValidator(dirtyRequired)\n    );\n  }\n\n  @Input() label: string;\n  @Input() controlId: string;\n  @Input() helperText: string;\n\n  internalControl = new UntypedFormControl(\"\");\n\n  protected onChange: any;\n  protected onTouched: any;\n\n  constructor(@Self() public controlDir: NgControl) {\n    this.controlDir.valueAccessor = this;\n  }\n\n  ngOnInit() {\n    this.internalControl.valueChanges.subscribe(this.onValueChangesInternal);\n  }\n\n  onBlurInternal() {\n    this.onTouched();\n  }\n\n  // CVA interfaces\n  writeValue(value: string) {\n    this.internalControl.setValue(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if (isDisabled) {\n      this.internalControl.disable();\n    } else {\n      this.internalControl.enable();\n    }\n  }\n\n  protected onValueChangesInternal: any = (value: string) => this.onChange(value);\n  // End CVA interfaces\n}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [attr.id]=\"controlId\"\n      [attr.aria-describedby]=\"describedById\"\n      [formControl]=\"internalControl\"\n      (blur)=\"onBlurInternal()\"\n    />\n    <label class=\"form-check-label\" [attr.for]=\"controlId\">{{ label }}</label>\n  </div>\n  <small *ngIf=\"showDescribedBy\" [attr.id]=\"describedById\" class=\"form-text text-muted\">{{\n    helperText\n  }}</small>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-checkbox\",\n  templateUrl: \"input-checkbox.component.html\",\n})\nexport class InputCheckboxComponent extends BaseCvaComponent {}\n","<div class=\"form-group\">\n  <label [attr.for]=\"controlId\">\n    {{ label }}\n    <small *ngIf=\"isRequired\" class=\"text-muted form-text d-inline\"\n      >({{ \"required\" | i18n }})</small\n    >\n  </label>\n  <input\n    [formControl]=\"internalControl\"\n    class=\"form-control\"\n    [attr.id]=\"controlId\"\n    [attr.aria-describedby]=\"describedById\"\n    [attr.aria-invalid]=\"controlDir.control.invalid\"\n    (blur)=\"onBlurInternal()\"\n  />\n  <div *ngIf=\"showDescribedBy\" [attr.id]=\"describedById\">\n    <small\n      *ngIf=\"helperText != null && !controlDir.control.hasError(helperTextSameAsError)\"\n      class=\"form-text text-muted\"\n    >\n      {{ helperText }}\n    </small>\n    <small class=\"error-inline\" *ngIf=\"controlDir.control.hasError('required')\" role=\"alert\">\n      <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n      <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n      {{\n        controlDir.control.hasError(helperTextSameAsError)\n          ? helperText\n          : (\"fieldRequiredError\" | i18n: label)\n      }}\n    </small>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-text[label][controlId]\",\n  templateUrl: \"input-text.component.html\",\n})\nexport class InputTextComponent extends BaseCvaComponent implements OnInit {\n  @Input() helperTextSameAsError: string;\n  @Input() requiredErrorMessage: string;\n  @Input() stripSpaces = false;\n\n  transformValue: (value: string) => string = null;\n\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.stripSpaces) {\n      this.transformValue = this.doStripSpaces;\n    }\n  }\n\n  writeValue(value: string) {\n    this.internalControl.setValue(value == null ? \"\" : value);\n  }\n\n  protected onValueChangesInternal: any = (value: string) => {\n    let newValue = value;\n    if (this.transformValue != null) {\n      newValue = this.transformValue(value);\n      this.internalControl.setValue(newValue, { emitEvent: false });\n    }\n    this.onChange(newValue);\n  };\n\n  protected onValueChangeInternal(value: string) {\n    let newValue = value;\n    if (this.transformValue != null) {\n      newValue = this.transformValue(value);\n      this.internalControl.setValue(newValue, { emitEvent: false });\n    }\n  }\n\n  private doStripSpaces(value: string) {\n    return value.replace(/ /g, \"\");\n  }\n}\n","<div class=\"form-group\">\n  <label>{{ label }}</label>\n  <div class=\"input-group\">\n    <input class=\"form-control\" readonly [value]=\"controlValue\" />\n    <div class=\"input-group-append\" *ngIf=\"showLaunch\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        appA11yTitle=\"{{ 'launch' | i18n }}\"\n        (click)=\"launchUri(controlValue)\"\n      >\n        <i class=\"bwi bwi-lg bwi-external-link\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <div class=\"input-group-append\" *ngIf=\"showCopy\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n        (click)=\"copy(controlValue)\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-text-readonly\",\n  templateUrl: \"input-text-readonly.component.html\",\n})\nexport class InputTextReadOnlyComponent {\n  @Input() controlValue: string;\n  @Input() label: string;\n  @Input() showCopy = true;\n  @Input() showLaunch = false;\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  copy(value: string) {\n    this.platformUtilsService.copyToClipboard(value);\n  }\n\n  launchUri(url: string) {\n    this.platformUtilsService.launchUri(url);\n  }\n}\n","<div class=\"form-group\">\n  <label [attr.for]=\"controlId\">\n    {{ label }}\n    <small *ngIf=\"isRequired\" class=\"text-muted form-text d-inline\"\n      >({{ \"required\" | i18n }})</small\n    >\n  </label>\n  <select\n    class=\"form-control\"\n    [attr.id]=\"controlId\"\n    [attr.aria-invalid]=\"controlDir.control.invalid\"\n    [formControl]=\"internalControl\"\n    (blur)=\"onBlurInternal()\"\n  >\n    <option *ngFor=\"let o of selectOptions\" [ngValue]=\"o.value\" disabled=\"{{ o.disabled }}\">\n      {{ o.name }}\n    </option>\n  </select>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { SelectOptions } from \"@bitwarden/angular/interfaces/selectOptions\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-select\",\n  templateUrl: \"select.component.html\",\n})\nexport class SelectComponent extends BaseCvaComponent {\n  @Input() selectOptions: SelectOptions[];\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"singleSignOn\" | i18n }}</h1>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [formGroup]=\"ssoConfigForm\"\n  [appApiAction]=\"formPromise\"\n  *ngIf=\"!loading\"\n>\n  <p>\n    {{ \"ssoPolicyHelpStart\" | i18n }}\n    <a routerLink=\"../policies\">{{ \"ssoPolicyHelpLink\" | i18n }}</a>\n    {{ \"ssoPolicyHelpEnd\" | i18n }}\n    <br />\n    {{ \"ssoPolicyHelpKeyConnector\" | i18n }}\n  </p>\n\n  <!-- Root form -->\n  <ng-container>\n    <app-input-checkbox\n      controlId=\"enabled\"\n      [formControl]=\"enabled\"\n      [label]=\"'allowSso' | i18n\"\n      [helperText]=\"'allowSsoDesc' | i18n\"\n    ></app-input-checkbox>\n\n    <div class=\"form-group\">\n      <label>{{ \"memberDecryptionOption\" | i18n }}</label>\n      <div class=\"form-check form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionPass\"\n          [value]=\"false\"\n          formControlName=\"keyConnectorEnabled\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionPass\">\n          {{ \"masterPass\" | i18n }}\n          <small>{{ \"memberDecryptionPassDesc\" | i18n }}</small>\n        </label>\n      </div>\n      <div class=\"form-check mt-2 form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionKey\"\n          [value]=\"true\"\n          formControlName=\"keyConnectorEnabled\"\n          [attr.disabled]=\"!organization.useKeyConnector || null\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionKey\">\n          {{ \"keyConnector\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/about-key-connector/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n          <small>{{ \"memberDecryptionKeyConnectorDesc\" | i18n }}</small>\n        </label>\n      </div>\n    </div>\n\n    <!-- Key Connector -->\n    <ng-container *ngIf=\"ssoConfigForm.get('keyConnectorEnabled').value\">\n      <app-callout type=\"warning\" [useAlertRole]=\"true\">\n        {{ \"keyConnectorWarning\" | i18n }}\n      </app-callout>\n\n      <div class=\"form-group\">\n        <label for=\"keyConnectorUrl\">\n          {{ \"keyConnectorUrl\" | i18n }}\n          <small class=\"text-muted form-text d-inline\">({{ \"required\" | i18n }})</small>\n        </label>\n        <div class=\"input-group\">\n          <input\n            class=\"form-control\"\n            formControlName=\"keyConnectorUrl\"\n            id=\"keyConnectorUrl\"\n            aria-describedby=\"keyConnectorUrlDesc\"\n            (change)=\"haveTestedKeyConnector = false\"\n            appInputStripSpaces\n            appA11yInvalid\n          />\n          <div class=\"input-group-append\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary\"\n              (click)=\"validateKeyConnectorUrl()\"\n              [disabled]=\"!enableTestKeyConnector\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n                *ngIf=\"keyConnectorUrl.pending\"\n              ></i>\n              <span *ngIf=\"!keyConnectorUrl.pending\">\n                {{ \"keyConnectorTest\" | i18n }}\n              </span>\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"haveTestedKeyConnector\" id=\"keyConnectorUrlDesc\" aria-live=\"polite\">\n          <small\n            class=\"error-inline\"\n            *ngIf=\"keyConnectorUrl.hasError('invalidUrl'); else keyConnectorSuccess\"\n          >\n            <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n            <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n            {{ \"keyConnectorTestFail\" | i18n }}\n          </small>\n          <ng-template #keyConnectorSuccess>\n            <small class=\"text-success\">\n              <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n              {{ \"keyConnectorTestSuccess\" | i18n }}\n            </small>\n          </ng-template>\n        </div>\n      </div>\n    </ng-container>\n\n    <app-select\n      controlId=\"type\"\n      [label]=\"'type' | i18n\"\n      [selectOptions]=\"ssoTypeOptions\"\n      formControlName=\"configType\"\n    >\n    </app-select>\n  </ng-container>\n\n  <!-- OIDC -->\n  <div\n    *ngIf=\"ssoConfigForm.get('configType').value === ssoType.OpenIdConnect\"\n    [formGroup]=\"openIdForm\"\n  >\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"openIdConnectConfig\" | i18n }}</h2>\n\n      <app-input-text-readonly\n        [label]=\"'callbackPath' | i18n\"\n        [controlValue]=\"callbackPath\"\n      ></app-input-text-readonly>\n\n      <app-input-text-readonly\n        [label]=\"'signedOutCallbackPath' | i18n\"\n        [controlValue]=\"signedOutCallbackPath\"\n      ></app-input-text-readonly>\n\n      <app-input-text\n        [label]=\"'authority' | i18n\"\n        controlId=\"authority\"\n        [stripSpaces]=\"true\"\n        formControlName=\"authority\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'clientId' | i18n\"\n        controlId=\"clientId\"\n        [stripSpaces]=\"true\"\n        formControlName=\"clientId\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'clientSecret' | i18n\"\n        controlId=\"clientSecret\"\n        [stripSpaces]=\"true\"\n        formControlName=\"clientSecret\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'metadataAddress' | i18n\"\n        controlId=\"metadataAddress\"\n        [stripSpaces]=\"true\"\n        [helperText]=\"'openIdAuthorityRequired' | i18n\"\n        formControlName=\"metadataAddress\"\n      ></app-input-text>\n\n      <app-select\n        controlId=\"redirectBehavior\"\n        [label]=\"'oidcRedirectBehavior' | i18n\"\n        [selectOptions]=\"connectRedirectOptions\"\n        formControlName=\"redirectBehavior\"\n      >\n      </app-select>\n\n      <app-input-checkbox\n        controlId=\"getClaimsFromUserInfoEndpoint\"\n        formControlName=\"getClaimsFromUserInfoEndpoint\"\n        [label]=\"'getClaimsFromUserInfoEndpoint' | i18n\"\n      ></app-input-checkbox>\n\n      <!-- Optional customizations -->\n      <div\n        class=\"section-header d-flex flex-row align-items-center mt-3 mb-3\"\n        (click)=\"toggleOpenIdCustomizations()\"\n      >\n        <h3 class=\"mb-0 mr-2\" id=\"customizations-header\">\n          {{ \"openIdOptionalCustomizations\" | i18n }}\n        </h3>\n        <button\n          class=\"mb-1 btn btn-link\"\n          type=\"button\"\n          appStopClick\n          role=\"button\"\n          aria-controls=\"customizations\"\n          [attr.aria-expanded]=\"showOpenIdCustomizations\"\n          aria-labelledby=\"customizations-header\"\n        >\n          <i\n            class=\"bwi\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-down': !showOpenIdCustomizations,\n              'bwi-chevron-up': showOpenIdCustomizations\n            }\"\n          ></i>\n        </button>\n      </div>\n      <div id=\"customizations\" [hidden]=\"!showOpenIdCustomizations\">\n        <app-input-text\n          [label]=\"'additionalScopes' | i18n\"\n          controlId=\"additionalScopes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalScopes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'additionalUserIdClaimTypes' | i18n\"\n          controlId=\"additionalUserIdClaimTypes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalUserIdClaimTypes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'additionalEmailClaimTypes' | i18n\"\n          controlId=\"additionalEmailClaimTypes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalEmailClaimTypes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'additionalNameClaimTypes' | i18n\"\n          controlId=\"additionalNameClaimTypes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalNameClaimTypes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'acrValues' | i18n\"\n          controlId=\"acrValues\"\n          helperText=\"acr_values\"\n          formControlName=\"acrValues\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'expectedReturnAcrValue' | i18n\"\n          controlId=\"expectedReturnAcrValue\"\n          helperText=\"acr_validation\"\n          formControlName=\"expectedReturnAcrValue\"\n        ></app-input-text>\n      </div>\n    </div>\n  </div>\n\n  <!-- SAML2 SP -->\n  <div *ngIf=\"ssoConfigForm.get('configType').value === ssoType.Saml2\" [formGroup]=\"samlForm\">\n    <!-- SAML2 SP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlSpConfig\" | i18n }}</h2>\n\n      <app-input-text-readonly\n        [label]=\"'spEntityId' | i18n\"\n        [controlValue]=\"spEntityId\"\n      ></app-input-text-readonly>\n\n      <app-input-text-readonly\n        [label]=\"'spMetadataUrl' | i18n\"\n        [controlValue]=\"spMetadataUrl\"\n        [showLaunch]=\"true\"\n      ></app-input-text-readonly>\n\n      <app-input-text-readonly\n        [label]=\"'spAcsUrl' | i18n\"\n        [controlValue]=\"spAcsUrl\"\n      ></app-input-text-readonly>\n\n      <app-select\n        controlId=\"spNameIdFormat\"\n        [label]=\"'spNameIdFormat' | i18n\"\n        [selectOptions]=\"saml2NameIdFormatOptions\"\n        formControlName=\"spNameIdFormat\"\n      >\n      </app-select>\n\n      <app-select\n        controlId=\"spOutboundSigningAlgorithm\"\n        [label]=\"'spOutboundSigningAlgorithm' | i18n\"\n        [selectOptions]=\"samlSigningAlgorithmOptions\"\n        formControlName=\"spOutboundSigningAlgorithm\"\n      >\n      </app-select>\n\n      <app-select\n        controlId=\"spSigningBehavior\"\n        [label]=\"'spSigningBehavior' | i18n\"\n        [selectOptions]=\"saml2SigningBehaviourOptions\"\n        formControlName=\"spSigningBehavior\"\n      >\n      </app-select>\n\n      <app-select\n        controlId=\"spMinIncomingSigningAlgorithm\"\n        [label]=\"'spMinIncomingSigningAlgorithm' | i18n\"\n        [selectOptions]=\"samlSigningAlgorithmOptions\"\n        formControlName=\"spMinIncomingSigningAlgorithm\"\n      >\n      </app-select>\n\n      <app-input-checkbox\n        controlId=\"spWantAssertionsSigned\"\n        formControlName=\"spWantAssertionsSigned\"\n        [label]=\"'spWantAssertionsSigned' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"spValidateCertificates\"\n        formControlName=\"spValidateCertificates\"\n        [label]=\"'spValidateCertificates' | i18n\"\n      ></app-input-checkbox>\n    </div>\n\n    <!-- SAML2 IDP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlIdpConfig\" | i18n }}</h2>\n\n      <app-input-text\n        [label]=\"'idpEntityId' | i18n\"\n        controlId=\"idpEntityId\"\n        formControlName=\"idpEntityId\"\n      ></app-input-text>\n\n      <app-select\n        controlId=\"idpBindingType\"\n        [label]=\"'idpBindingType' | i18n\"\n        [selectOptions]=\"saml2BindingTypeOptions\"\n        formControlName=\"idpBindingType\"\n      >\n      </app-select>\n\n      <app-input-text\n        [label]=\"'idpSingleSignOnServiceUrl' | i18n\"\n        controlId=\"idpSingleSignOnServiceUrl\"\n        [helperText]=\"'idpSingleSignOnServiceUrlRequired' | i18n\"\n        [stripSpaces]=\"true\"\n        formControlName=\"idpSingleSignOnServiceUrl\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'idpSingleLogoutServiceUrl' | i18n\"\n        controlId=\"idpSingleLogoutServiceUrl\"\n        [stripSpaces]=\"true\"\n        formControlName=\"idpSingleLogoutServiceUrl\"\n      ></app-input-text>\n\n      <div class=\"form-group\">\n        <label for=\"idpX509PublicCert\">\n          {{ \"idpX509PublicCert\" | i18n }}\n          <small class=\"text-muted form-text d-inline\">({{ \"required\" | i18n }})</small>\n        </label>\n        <textarea\n          formControlName=\"idpX509PublicCert\"\n          class=\"form-control form-control-sm text-monospace\"\n          rows=\"6\"\n          id=\"idpX509PublicCert\"\n          appA11yInvalid\n          aria-describedby=\"idpX509PublicCertDesc\"\n        ></textarea>\n        <small\n          id=\"idpX509PublicCertDesc\"\n          class=\"error-inline\"\n          role=\"alert\"\n          *ngIf=\"samlForm.get('idpX509PublicCert').hasError('required')\"\n        >\n          <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n          {{ \"fieldRequiredError\" | i18n: (\"idpX509PublicCert\" | i18n) }}\n        </small>\n      </div>\n\n      <app-select\n        controlId=\"idpOutboundSigningAlgorithm\"\n        [label]=\"'idpOutboundSigningAlgorithm' | i18n\"\n        [selectOptions]=\"samlSigningAlgorithmOptions\"\n        formControlName=\"idpOutboundSigningAlgorithm\"\n      >\n      </app-select>\n\n      <!--TODO: Uncomment once Unsolicited IdP Response is supported-->\n      <!-- <app-input-checkbox\n        controlId=\"idpAllowUnsolicitedAuthnResponse\"\n        formControlName=\"idpAllowUnsolicitedAuthnResponse\"\n        [label]=\"'idpAllowUnsolicitedAuthnResponse' | i18n\"\n      ></app-input-checkbox> -->\n\n      <app-input-checkbox\n        controlId=\"idpAllowOutboundLogoutRequests\"\n        formControlName=\"idpAllowOutboundLogoutRequests\"\n        [label]=\"'idpAllowOutboundLogoutRequests' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"idpWantAuthnRequestsSigned\"\n        formControlName=\"idpWantAuthnRequestsSigned\"\n        [label]=\"'idpSignAuthenticationRequests' | i18n\"\n      ></app-input-checkbox>\n    </div>\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n  <div\n    id=\"errorSummary\"\n    class=\"error-summary text-danger\"\n    *ngIf=\"this.getErrorCount(ssoConfigForm) as errorCount\"\n  >\n    <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n    {{\n      (errorCount === 1 ? \"formErrorSummarySingle\" : \"formErrorSummaryPlural\") | i18n: errorCount\n    }}\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { AbstractControl, UntypedFormBuilder, UntypedFormGroup } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { SelectOptions } from \"@bitwarden/angular/interfaces/selectOptions\";\nimport { dirtyRequired } from \"@bitwarden/angular/validators/dirty.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"@bitwarden/common/enums/ssoEnums\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SsoConfigApi } from \"@bitwarden/common/models/api/ssoConfigApi\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSsoRequest } from \"@bitwarden/common/models/request/organization/organizationSsoRequest\";\nimport { OrganizationSsoResponse } from \"@bitwarden/common/models/response/organization/organizationSsoResponse\";\nimport { SsoConfigView } from \"@bitwarden/common/models/view/ssoConfigView\";\n\nconst defaultSigningAlgorithm = \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\";\n\n@Component({\n  selector: \"app-org-manage-sso\",\n  templateUrl: \"sso.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SsoComponent implements OnInit {\n  readonly ssoType = SsoType;\n\n  readonly ssoTypeOptions: SelectOptions[] = [\n    { name: this.i18nService.t(\"selectType\"), value: SsoType.None, disabled: true },\n    { name: \"OpenID Connect\", value: SsoType.OpenIdConnect },\n    { name: \"SAML 2.0\", value: SsoType.Saml2 },\n  ];\n\n  readonly samlSigningAlgorithms = [\n    \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha384\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha512\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\",\n  ];\n\n  readonly saml2SigningBehaviourOptions: SelectOptions[] = [\n    {\n      name: \"If IdP Wants Authn Requests Signed\",\n      value: Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned,\n    },\n    { name: \"Always\", value: Saml2SigningBehavior.Always },\n    { name: \"Never\", value: Saml2SigningBehavior.Never },\n  ];\n  readonly saml2BindingTypeOptions: SelectOptions[] = [\n    { name: \"Redirect\", value: Saml2BindingType.HttpRedirect },\n    { name: \"HTTP POST\", value: Saml2BindingType.HttpPost },\n  ];\n  readonly saml2NameIdFormatOptions: SelectOptions[] = [\n    { name: \"Not Configured\", value: Saml2NameIdFormat.NotConfigured },\n    { name: \"Unspecified\", value: Saml2NameIdFormat.Unspecified },\n    { name: \"Email Address\", value: Saml2NameIdFormat.EmailAddress },\n    { name: \"X.509 Subject Name\", value: Saml2NameIdFormat.X509SubjectName },\n    { name: \"Windows Domain Qualified Name\", value: Saml2NameIdFormat.WindowsDomainQualifiedName },\n    { name: \"Kerberos Principal Name\", value: Saml2NameIdFormat.KerberosPrincipalName },\n    { name: \"Entity Identifier\", value: Saml2NameIdFormat.EntityIdentifier },\n    { name: \"Persistent\", value: Saml2NameIdFormat.Persistent },\n    { name: \"Transient\", value: Saml2NameIdFormat.Transient },\n  ];\n\n  readonly connectRedirectOptions: SelectOptions[] = [\n    { name: \"Redirect GET\", value: OpenIdConnectRedirectBehavior.RedirectGet },\n    { name: \"Form POST\", value: OpenIdConnectRedirectBehavior.FormPost },\n  ];\n\n  showOpenIdCustomizations = false;\n\n  loading = true;\n  haveTestedKeyConnector = false;\n  organizationId: string;\n  organization: Organization;\n  formPromise: Promise<OrganizationSsoResponse>;\n\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  enabled = this.formBuilder.control(false);\n\n  openIdForm = this.formBuilder.group(\n    {\n      authority: [\"\", dirtyRequired],\n      clientId: [\"\", dirtyRequired],\n      clientSecret: [\"\", dirtyRequired],\n      metadataAddress: [],\n      redirectBehavior: [OpenIdConnectRedirectBehavior.RedirectGet, dirtyRequired],\n      getClaimsFromUserInfoEndpoint: [],\n      additionalScopes: [],\n      additionalUserIdClaimTypes: [],\n      additionalEmailClaimTypes: [],\n      additionalNameClaimTypes: [],\n      acrValues: [],\n      expectedReturnAcrValue: [],\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  samlForm = this.formBuilder.group(\n    {\n      spNameIdFormat: [Saml2NameIdFormat.NotConfigured],\n      spOutboundSigningAlgorithm: [defaultSigningAlgorithm],\n      spSigningBehavior: [Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned],\n      spMinIncomingSigningAlgorithm: [defaultSigningAlgorithm],\n      spWantAssertionsSigned: [],\n      spValidateCertificates: [],\n\n      idpEntityId: [\"\", dirtyRequired],\n      idpBindingType: [Saml2BindingType.HttpRedirect],\n      idpSingleSignOnServiceUrl: [],\n      idpSingleLogoutServiceUrl: [],\n      idpX509PublicCert: [\"\", dirtyRequired],\n      idpOutboundSigningAlgorithm: [defaultSigningAlgorithm],\n      idpAllowUnsolicitedAuthnResponse: [],\n      idpAllowOutboundLogoutRequests: [true],\n      idpWantAuthnRequestsSigned: [],\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  ssoConfigForm = this.formBuilder.group({\n    configType: [SsoType.None],\n    keyConnectorEnabled: [false],\n    keyConnectorUrl: [\"\"],\n    openId: this.openIdForm,\n    saml: this.samlForm,\n  });\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.ssoConfigForm.get(\"configType\").valueChanges.subscribe((newType: SsoType) => {\n      if (newType === SsoType.OpenIdConnect) {\n        this.openIdForm.enable();\n        this.samlForm.disable();\n      } else if (newType === SsoType.Saml2) {\n        this.openIdForm.disable();\n        this.samlForm.enable();\n      } else {\n        this.openIdForm.disable();\n        this.samlForm.disable();\n      }\n    });\n\n    this.samlForm\n      .get(\"spSigningBehavior\")\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n      .valueChanges.subscribe(() =>\n        this.samlForm.get(\"idpX509PublicCert\").updateValueAndValidity()\n      );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    const ssoSettings = await this.organizationApiService.getSso(this.organizationId);\n    this.populateForm(ssoSettings);\n\n    this.callbackPath = ssoSettings.urls.callbackPath;\n    this.signedOutCallbackPath = ssoSettings.urls.signedOutCallbackPath;\n    this.spEntityId = ssoSettings.urls.spEntityId;\n    this.spMetadataUrl = ssoSettings.urls.spMetadataUrl;\n    this.spAcsUrl = ssoSettings.urls.spAcsUrl;\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.validateForm(this.ssoConfigForm);\n\n    if (this.ssoConfigForm.get(\"keyConnectorEnabled\").value) {\n      await this.validateKeyConnectorUrl();\n    }\n\n    if (!this.ssoConfigForm.valid) {\n      this.readOutErrors();\n      return;\n    }\n\n    const request = new OrganizationSsoRequest();\n    request.enabled = this.enabled.value;\n    request.data = SsoConfigApi.fromView(this.ssoConfigForm.value as SsoConfigView);\n\n    this.formPromise = this.organizationApiService.updateSso(this.organizationId, request);\n\n    try {\n      const response = await this.formPromise;\n      this.populateForm(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"ssoSettingsSaved\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  async validateKeyConnectorUrl() {\n    if (this.haveTestedKeyConnector) {\n      return;\n    }\n\n    this.keyConnectorUrl.markAsPending();\n\n    try {\n      await this.apiService.getKeyConnectorAlive(this.keyConnectorUrl.value);\n      this.keyConnectorUrl.updateValueAndValidity();\n    } catch {\n      this.keyConnectorUrl.setErrors({\n        invalidUrl: true,\n      });\n    }\n\n    this.haveTestedKeyConnector = true;\n  }\n\n  toggleOpenIdCustomizations() {\n    this.showOpenIdCustomizations = !this.showOpenIdCustomizations;\n  }\n\n  getErrorCount(form: UntypedFormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof UntypedFormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n\n  get enableTestKeyConnector() {\n    return (\n      this.ssoConfigForm.get(\"keyConnectorEnabled\").value &&\n      !Utils.isNullOrWhitespace(this.keyConnectorUrl?.value)\n    );\n  }\n\n  get keyConnectorUrl() {\n    return this.ssoConfigForm.get(\"keyConnectorUrl\");\n  }\n\n  get samlSigningAlgorithmOptions(): SelectOptions[] {\n    return this.samlSigningAlgorithms.map((algorithm) => ({ name: algorithm, value: algorithm }));\n  }\n\n  private validateForm(form: UntypedFormGroup) {\n    Object.values(form.controls).forEach((control: AbstractControl) => {\n      if (control.disabled) {\n        return;\n      }\n\n      if (control instanceof UntypedFormGroup) {\n        this.validateForm(control);\n      } else {\n        control.markAsDirty();\n        control.markAsTouched();\n        control.updateValueAndValidity();\n      }\n    });\n  }\n\n  private populateForm(ssoSettings: OrganizationSsoResponse) {\n    this.enabled.setValue(ssoSettings.enabled);\n    if (ssoSettings.data != null) {\n      const ssoConfigView = new SsoConfigView(ssoSettings.data);\n      this.ssoConfigForm.patchValue(ssoConfigView);\n    }\n  }\n\n  private readOutErrors() {\n    const errorText = this.i18nService.t(\"error\");\n    const errorCount = this.getErrorCount(this.ssoConfigForm);\n    const errorCountText = this.i18nService.t(\n      errorCount === 1 ? \"formErrorSummarySingle\" : \"formErrorSummaryPlural\",\n      errorCount.toString()\n    );\n\n    const div = document.createElement(\"div\");\n    div.className = \"sr-only\";\n    div.id = \"srErrorCount\";\n    div.setAttribute(\"aria-live\", \"polite\");\n    div.innerText = errorText + \": \" + errorCountText;\n\n    const existing = document.getElementById(\"srErrorCount\");\n    if (existing != null) {\n      existing.remove();\n    }\n\n    document.body.append(div);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"src/app/organizations/guards/org-permissions.guard\";\nimport { OrganizationLayoutComponent } from \"src/app/organizations/layouts/organization-layout.component\";\nimport { ManageComponent } from \"src/app/organizations/manage/manage.component\";\nimport { canAccessManageTab } from \"src/app/organizations/navigation-permissions\";\n\nimport { ScimComponent } from \"./manage/scim.component\";\nimport { SsoComponent } from \"./manage/sso.component\";\n\nconst routes: Routes = [\n  {\n    path: \"organizations/:organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, OrganizationPermissionsGuard],\n    children: [\n      {\n        path: \"manage\",\n        component: ManageComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: canAccessManageTab,\n        },\n        children: [\n          {\n            path: \"sso\",\n            component: SsoComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              organizationPermissions: (org: Organization) => org.canManageSso,\n            },\n          },\n          {\n            path: \"scim\",\n            component: ScimComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              organizationPermissions: (org: Organization) => org.canManageScim,\n            },\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"src/app/shared/shared.module\";\n\nimport { InputCheckboxComponent } from \"./components/input-checkbox.component\";\nimport { InputTextReadOnlyComponent } from \"./components/input-text-readonly.component\";\nimport { InputTextComponent } from \"./components/input-text.component\";\nimport { SelectComponent } from \"./components/select.component\";\nimport { ScimComponent } from \"./manage/scim.component\";\nimport { SsoComponent } from \"./manage/sso.component\";\nimport { OrganizationsRoutingModule } from \"./organizations-routing.module\";\n\n// Form components are for use in the SSO Configuration Form only and should not be exported for use elsewhere.\n// They will be deprecated by the Component Library.\n@NgModule({\n  imports: [SharedModule, OrganizationsRoutingModule],\n  declarations: [\n    InputCheckboxComponent,\n    InputTextComponent,\n    InputTextReadOnlyComponent,\n    SelectComponent,\n    SsoComponent,\n    ScimComponent,\n  ],\n})\nexport class OrganizationsModule {}\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\n\nimport { CoreModule } from \"src/app/core\";\nimport { OssRoutingModule } from \"src/app/oss-routing.module\";\nimport { OssModule } from \"src/app/oss.module\";\nimport { WildcardRoutingModule } from \"src/app/wildcard-routing.module\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { OrganizationsModule } from \"./organizations/organizations.module\";\nimport { DisablePersonalVaultExportPolicyComponent } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicyComponent } from \"./policies/maximum-vault-timeout.component\";\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    OssModule,\n    JslibModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CoreModule,\n    InfiniteScrollModule,\n    DragDropModule,\n    AppRoutingModule,\n    OssRoutingModule,\n    OrganizationsModule, // Must be after OssRoutingModule for competing routes to resolve properly\n    RouterModule,\n    WildcardRoutingModule, // Needs to be last to catch all non-existing routes\n  ],\n  declarations: [\n    AppComponent,\n    DisablePersonalVaultExportPolicyComponent,\n    MaximumVaultTimeoutPolicyComponent,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport \"bootstrap\";\nimport \"jquery\";\nimport \"popper.js\";\n\nrequire(\"src/scss/styles.scss\");\nrequire(\"src/scss/tailwind.css\");\n\nimport { AppModule } from \"./app/app.module\";\n\nif (process.env.NODE_ENV === \"production\") {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Collects the user's master password, or if they are using Key Connector, prompts for an OTP via email.\n * This is exposed to the parent component via the ControlValueAccessor interface (e.g. bind it to a FormControl).\n * Use UserVerificationService to verify the user's input.\n */\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class UserVerificationComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.secret.valueChanges.subscribe((secret: string) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: Utils.isNullOrWhitespace(secret) ? null : secret,\n    });\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\n\nimport { ValidationService } from \"../services/validation.service\";\n\n/**\n * Provides error handling, in particular for any error returned by the server in an api call.\n * Attach it to a <form> element and provide the name of the class property that will hold the api call promise.\n * e.g. <form [appApiAction]=\"this.formPromise\">\n * Any errors/rejections that occur will be intercepted and displayed as error toasts.\n */\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if ((e as ErrorResponse).captchaRequired) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface CardRuleEntry {\n  cardLength: number;\n  blocks: number[];\n}\n\n// See https://baymard.com/checkout-usability/credit-card-patterns for\n// all possible credit card spacing patterns. For now, we just handle\n// the below.\nconst numberFormats: Record<string, CardRuleEntry[]> = {\n  Visa: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Mastercard: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Maestro: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 13, blocks: [4, 4, 5] },\n    { cardLength: 15, blocks: [4, 6, 5] },\n    { cardLength: 19, blocks: [4, 4, 4, 4, 3] },\n  ],\n  Discover: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  \"Diners Club\": [{ cardLength: 14, blocks: [4, 6, 4] }],\n  JCB: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  UnionPay: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 19, blocks: [6, 13] },\n  ],\n  Amex: [{ cardLength: 15, blocks: [4, 6, 5] }],\n  Mir: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 17, blocks: [5, 4, 4, 4] },\n    { cardLength: 18, blocks: [6, 4, 4, 4] },\n    { cardLength: 19, blocks: [7, 4, 4, 4] },\n  ],\n  Other: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n};\n\n@Pipe({ name: \"creditCardNumber\" })\nexport class CreditCardNumberPipe implements PipeTransform {\n  transform(creditCardNumber: string, brand: string): string {\n    let rules = numberFormats[brand];\n\n    if (rules == null) {\n      rules = numberFormats[\"Other\"];\n    }\n\n    const cardLength = creditCardNumber.length;\n\n    let matchingRule = rules.find((r) => r.cardLength == cardLength);\n    if (matchingRule == null) {\n      matchingRule = rules[0];\n    }\n\n    const blocks = matchingRule.blocks;\n\n    const chunks: string[] = [];\n    let total = 0;\n\n    blocks.forEach((c) => {\n      chunks.push(creditCardNumber.slice(total, total + c));\n      total += c;\n    });\n\n    // Append the remaining part\n    if (cardLength > total) {\n      chunks.push(creditCardNumber.slice(total));\n    }\n\n    return chunks.join(\" \");\n  }\n}\n","import { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AvatarComponent } from \"./components/avatar.component\";\nimport { CalloutComponent } from \"./components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"./components/export-scope-callout.component\";\nimport { IconComponent } from \"./components/icon.component\";\nimport { BitwardenToastModule } from \"./components/toastr.component\";\nimport { A11yInvalidDirective } from \"./directives/a11y-invalid.directive\";\nimport { A11yTitleDirective } from \"./directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"./directives/api-action.directive\";\nimport { AutofocusDirective } from \"./directives/autofocus.directive\";\nimport { BoxRowDirective } from \"./directives/box-row.directive\";\nimport { FallbackSrcDirective } from \"./directives/fallback-src.directive\";\nimport { InputStripSpacesDirective } from \"./directives/input-strip-spaces.directive\";\nimport { InputVerbatimDirective } from \"./directives/input-verbatim.directive\";\nimport { NotPremiumDirective } from \"./directives/not-premium.directive\";\nimport { SelectCopyDirective } from \"./directives/select-copy.directive\";\nimport { StopClickDirective } from \"./directives/stop-click.directive\";\nimport { StopPropDirective } from \"./directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"./directives/true-false-value.directive\";\nimport { ColorPasswordCountPipe } from \"./pipes/color-password-count.pipe\";\nimport { ColorPasswordPipe } from \"./pipes/color-password.pipe\";\nimport { CreditCardNumberPipe } from \"./pipes/credit-card-number.pipe\";\nimport { EllipsisPipe } from \"./pipes/ellipsis.pipe\";\nimport { I18nPipe } from \"./pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"./pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"./pipes/search.pipe\";\nimport { UserNamePipe } from \"./pipes/user-name.pipe\";\nimport { PasswordStrengthComponent } from \"./shared/components/password-strength/password-strength.component\";\n\n@NgModule({\n  imports: [\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    AvatarComponent,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  exports: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    AvatarComponent,\n    BitwardenToastModule,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  providers: [CreditCardNumberPipe, DatePipe, I18nPipe, SearchPipe, UserNamePipe],\n})\nexport class JslibModule {}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform(\n    items: any[],\n    searchText: string,\n    prop1?: string,\n    prop2?: string,\n    prop3?: string\n  ): any[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (\n        prop1 != null &&\n        i[prop1] != null &&\n        i[prop1].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop2 != null &&\n        i[prop2] != null &&\n        i[prop2].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop3 != null &&\n        i[prop3] != null &&\n        i[prop3].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals?: boolean;\n  replaceTopModal?: boolean;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config: ModalConfig = {}) {\n    const { replaceTopModal = false, allowMultipleModals = false } = config;\n\n    if (this.modalCount > 0 && replaceTopModal) {\n      this.topModal.instance.close();\n    }\n\n    if (this.modalCount > 0 && !allowMultipleModals) {\n      return;\n    }\n\n    const [modalRef] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  closeAll(): void {\n    this.modalList.forEach((modal) => modal.instance.close());\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\n\n@Injectable()\nexport class ValidationService {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nexport class DynamicTreeNode<T extends CollectionView | FolderView> {\n  fullList: T[];\n  nestedList: TreeNode<T>[];\n\n  hasId(id: string): boolean {\n    return this.fullList != null && this.fullList.filter((i: T) => i.id === id).length > 0;\n  }\n\n  constructor(init?: Partial<DynamicTreeNode<T>>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { firstValueFrom, from, mergeMap, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ServiceUtils } from \"@bitwarden/common/misc/serviceUtils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\n\nconst NestingDelimiter = \"/\";\n\n@Injectable()\nexport class VaultFilterService {\n  constructor(\n    protected stateService: StateService,\n    protected organizationService: OrganizationService,\n    protected folderService: FolderService,\n    protected cipherService: CipherService,\n    protected collectionService: CollectionService,\n    protected policyService: PolicyService\n  ) {}\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await this.stateService.setCollapsedGroupings(Array.from(collapsedFilterNodes));\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    return new Set(await this.stateService.getCollapsedGroupings());\n  }\n\n  async buildOrganizations(): Promise<Organization[]> {\n    return await this.organizationService.getAll();\n  }\n\n  buildNestedFolders(organizationId?: string): Observable<DynamicTreeNode<FolderView>> {\n    const transformation = async (storedFolders: FolderView[]) => {\n      let folders: FolderView[];\n      if (organizationId != null) {\n        const ciphers = await this.cipherService.getAllDecrypted();\n        const orgCiphers = ciphers.filter((c) => c.organizationId == organizationId);\n        folders = storedFolders.filter(\n          (f) =>\n            orgCiphers.filter((oc) => oc.folderId == f.id).length > 0 ||\n            ciphers.filter((c) => c.folderId == f.id).length < 1\n        );\n      } else {\n        folders = storedFolders;\n      }\n      const nestedFolders = await this.getAllFoldersNested(folders);\n      return new DynamicTreeNode<FolderView>({\n        fullList: folders,\n        nestedList: nestedFolders,\n      });\n    };\n\n    return this.folderService.folderViews$.pipe(\n      mergeMap((folders) => from(transformation(folders)))\n    );\n  }\n\n  async buildCollections(organizationId?: string): Promise<DynamicTreeNode<CollectionView>> {\n    const storedCollections = await this.collectionService.getAllDecrypted();\n    let collections: CollectionView[];\n    if (organizationId != null) {\n      collections = storedCollections.filter((c) => c.organizationId === organizationId);\n    } else {\n      collections = storedCollections;\n    }\n    const nestedCollections = await this.collectionService.getAllNested(collections);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: collections,\n      nestedList: nestedCollections,\n    });\n  }\n\n  async checkForSingleOrganizationPolicy(): Promise<boolean> {\n    return await this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n  }\n\n  async checkForPersonalOwnershipPolicy(): Promise<boolean> {\n    return await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership);\n  }\n\n  protected async getAllFoldersNested(folders: FolderView[]): Promise<TreeNode<FolderView>[]> {\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getFolderNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllFoldersNested(\n      await firstValueFrom(this.folderService.folderViews$)\n    );\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n}\n","import { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { DeviceVerificationRequest } from \"../models/request/deviceVerificationRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationConnectionRequest } from \"../models/request/organizationConnectionRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { RegisterResponse } from \"../models/response/authentication/registerResponse\";\nimport { BillingHistoryResponse } from \"../models/response/billingHistoryResponse\";\nimport { BillingPaymentResponse } from \"../models/response/billingPaymentResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DeviceVerificationResponse } from \"../models/response/deviceVerificationResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organizationConnectionResponse\";\nimport { OrganizationExportResponse } from \"../models/response/organizationExportResponse\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organizationSponsorshipSyncStatusResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SsoPreValidateResponse } from \"../models/response/ssoPreValidateResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport abstract class ApiService {\n  send: (\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ) => Promise<any>;\n\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | ApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<RegisterResponse>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<void>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postConvertToKeyConnector: () => Promise<void>;\n\n  getUserBillingHistory: () => Promise<BillingHistoryResponse>;\n  getUserBillingPayment: () => Promise<BillingPaymentResponse>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getFullCipherDetails: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getCollectionDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionGroupDetailsResponse>;\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n  getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroup: (organizationId: string, id: string) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getOrganizationUser: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserDetailsResponse>;\n  getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n  getOrganizationUsers: (\n    organizationId: string\n  ) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n  getOrganizationUserResetPasswordDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserResetPasswordDetailsReponse>;\n  postOrganizationUserInvite: (\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ) => Promise<any>;\n  postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n  postManyOrganizationUserReinvite: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  postOrganizationUserAccept: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ) => Promise<any>;\n  postOrganizationUserConfirm: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ) => Promise<any>;\n  postOrganizationUsersPublicKey: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n  postOrganizationUserBulkConfirm: (\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  putOrganizationUser: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ) => Promise<any>;\n  putOrganizationUserGroups: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPasswordEnrollment: (\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ) => Promise<void>;\n  putOrganizationUserResetPassword: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ) => Promise<any>;\n  deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  revokeOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  revokeManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  restoreOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  restoreManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  getSync: () => Promise<SyncResponse>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n  getDeviceVerificationSettings: () => Promise<DeviceVerificationResponse>;\n  putDeviceVerificationSettings: (\n    request: DeviceVerificationRequest\n  ) => Promise<DeviceVerificationResponse>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n  getCloudCommunicationsEnabled: () => Promise<boolean>;\n  abstract getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId: string\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  deleteOrganizationConnection: (id: string) => Promise<void>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<void>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<SsoPreValidateResponse>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  getSponsorshipSyncStatus: (\n    sponsoredOrgId: string\n  ) => Promise<OrganizationSponsorshipSyncStatusResponse>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n  getOrganizationExport: (organizationId: string) => Promise<OrganizationExportResponse>;\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  saveWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: any, b: any) => number;\n  sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  getKeyForUserEncryption: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuffer: EncArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","import { EventType } from \"../enums/eventType\";\n\nexport abstract class EventService {\n  collect: (\n    eventType: EventType,\n    cipherId?: string,\n    uploadImmediately?: boolean,\n    organizationId?: string\n  ) => Promise<any>;\n  uploadEvents: (userId?: string) => Promise<any>;\n  clearEvents: (userId?: string) => Promise<any>;\n}\n","import { EventView } from \"../models/view/eventView\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport abstract class FileDownloadService {\n  download: (request: FileDownloadRequest) => void;\n}\n","import { Observable } from \"rxjs\";\n\nimport { FolderData } from \"../../models/data/folderData\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { FolderView } from \"../../models/view/folderView\";\n\nexport abstract class FolderService {\n  folders$: Observable<Folder[]>;\n  folderViews$: Observable<FolderView[]>;\n\n  clearCache: () => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  /**\n   * @deprecated Only use in CLI!\n   */\n  getAllDecryptedFromState: () => Promise<FolderView[]>;\n}\n\nexport abstract class InternalFolderService extends FolderService {\n  upsert: (folder: FolderData | FolderData[]) => Promise<void>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<void>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nexport abstract class I18nService {\n  locale$: Observable<string>;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { Organization } from \"../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n}\n","import { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport abstract class OrganizationService {\n  get: (id: string) => Promise<Organization>;\n  getByIdentifier: (identifier: string) => Promise<Organization>;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  save: (orgs: { [id: string]: OrganizationData }) => Promise<any>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: (userId?: string) => Promise<boolean>;\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  getApplicationVersion: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  supportsSecureStorage: () => boolean;\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { PolicyResponse } from \"../../models/response/policyResponse\";\n\nexport abstract class PolicyService {\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n\n  getMasterPasswordPolicyOptions: (policies?: Policy[]) => Promise<MasterPasswordPolicyOptions>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n\nexport abstract class InternalPolicyService extends PolicyService {\n  upsert: (policy: PolicyData) => Promise<any>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { LocalData } from \"../models/data/localData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport { Account, AccountSettingsSettings } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts: BehaviorSubject<{ [userId: string]: T }>;\n  activeAccount$: Observable<string>;\n  activeAccountUnlocked$: Observable<boolean>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getHasPremiumPersonally: (options?: StorageOptions) => Promise<boolean>;\n  setHasPremiumPersonally: (value: boolean, options?: StorageOptions) => Promise<void>;\n  setHasPremiumFromOrganization: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getHasPremiumFromOrganization: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecodedToken: (options?: StorageOptions) => Promise<any>;\n  setDecodedToken: (value: any, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableGravitars: (options?: StorageOptions) => Promise<boolean>;\n  setEnableGravitars: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<{ [orgId: string]: EncryptedOrganizationKeyData }>;\n  setEncryptedOrganizationKeys: (\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<{ [cipherId: string]: LocalData }>;\n  setLocalData: (\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getUsernameGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setUsernameGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getGeneratorOptions: (options?: StorageOptions) => Promise<any>;\n  setGeneratorOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  getSettings: (options?: StorageOptions) => Promise<AccountSettingsSettings>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  setSettings: (value: AccountSettingsSettings, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  getServerConfig: (options?: StorageOptions) => Promise<ServerConfigData>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  setServerConfig: (value: ServerConfigData, options?: StorageOptions) => Promise<void>;\n}\n","import { Observable } from \"rxjs\";\n\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../models/response/notificationResponse\";\nimport { SyncEventArgs } from \"../../types/syncEventArgs\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  sync$: Observable<SyncEventArgs>;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\nimport { Verification } from \"../../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n  OrganizationUser_Revoked = 1511,\n  OrganizationUser_Restored = 1512,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n  Organization_SponsorshipsSynced = 1608,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_KDF_ITERATIONS = 100000;\nexport const SEND_KDF_ITERATIONS = 100000;\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/itemView\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/treeNode\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","export function getDomain(host: string): string | null {\n  return null;\n}\n\nexport function isValid(host: string): boolean {\n  return true;\n}\n","/* eslint-disable no-useless-escape */\nimport * as tldjs from \"tldjs\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\n\nimport { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\ndeclare global {\n  /* eslint-disable-next-line no-var */\n  var bitwardenContainerService: BitwardenContainerService;\n}\n\ninterface BitwardenContainerService {\n  getCryptoService: () => CryptoService;\n  getEncryptService: () => AbstractEncryptService;\n}\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: typeof global = null;\n  static tldEndingRegex =\n    /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n\n    if (Utils.isNode) {\n      Utils.global = global;\n    } else if (Utils.isBrowser) {\n      Utils.global = window;\n    } else {\n      // If it's not browser or node then it must be a service worker\n      Utils.global = self;\n    }\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = Utils.global.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return Utils.global.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.hostname !== \"\" ? url.hostname : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    let httpUrl = uriString.startsWith(\"http://\") || uriString.startsWith(\"https://\");\n    if (\n      !httpUrl &&\n      uriString.indexOf(\"://\") < 0 &&\n      Utils.tldEndingRegex.test(uriString) &&\n      uriString.indexOf(\"@\") < 0\n    ) {\n      uriString = \"http://\" + uriString;\n      httpUrl = true;\n    }\n\n    if (httpUrl) {\n      try {\n        const url = Utils.getUrlObject(uriString);\n        const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n        if (!validHostname) {\n          return null;\n        }\n\n        if (url.hostname === \"localhost\" || Utils.validIpAddress(url.hostname)) {\n          return url.hostname;\n        }\n\n        const urlDomain =\n          tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n        return urlDomain != null ? urlDomain : url.hostname;\n      } catch (e) {\n        // Invalid domain, try another approach below.\n      }\n    }\n\n    try {\n      const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n      if (domain != null) {\n        return domain;\n      }\n    } catch {\n      return null;\n    }\n\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction(i18nService: I18nService, prop: string) {\n    return (a: any, b: any) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop], b[prop])\n        : a[prop].localeCompare(b[prop]);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  /**\n   * There are a few ways to calculate text color for contrast, this one seems to fit accessibility guidelines best.\n   * https://stackoverflow.com/a/3943023/6869691\n   *\n   * @param {string} bgColor\n   * @param {number} [threshold] see stackoverflow link above\n   * @param {boolean} [svgTextFill]\n   * Indicates if this method is performed on an SVG <text> 'fill' attribute (e.g. <text fill=\"black\"></text>).\n   * This check is necessary because the '!important' tag cannot be used in a 'fill' attribute.\n   */\n  static pickTextColorBasedOnBgColor(bgColor: string, threshold = 186, svgTextFill = false) {\n    const bgColorHexNums = bgColor.charAt(0) === \"#\" ? bgColor.substring(1, 7) : bgColor;\n    const r = parseInt(bgColorHexNums.substring(0, 2), 16); // hexToR\n    const g = parseInt(bgColorHexNums.substring(2, 4), 16); // hexToG\n    const b = parseInt(bgColorHexNums.substring(4, 6), 16); // hexToB\n    const blackColor = svgTextFill ? \"black\" : \"black !important\";\n    const whiteColor = svgTextFill ? \"white\" : \"white !important\";\n    return r * 0.299 + g * 0.587 + b * 0.114 > threshold ? blackColor : whiteColor;\n  }\n\n  static stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  /**\n   * @throws Will throw an error if the ContainerService has not been attached to the window object\n   */\n  static getContainerService(): BitwardenContainerService {\n    if (this.global.bitwardenContainerService == null) {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n    return this.global.bitwardenContainerService;\n  }\n\n  private static validIpAddress(ipString: string): boolean {\n    const ipRegex =\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return ipRegex.test(ipString);\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (typeof window !== \"undefined\") {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { LoginUriApi } from \"./loginUriApi\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { AttachmentResponse } from \"../response/attachmentResponse\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/cardApi\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipherResponse\";\n\nimport { AttachmentData } from \"./attachmentData\";\nimport { CardData } from \"./cardData\";\nimport { FieldData } from \"./fieldData\";\nimport { IdentityData } from \"./identityData\";\nimport { LoginData } from \"./loginData\";\nimport { PasswordHistoryData } from \"./passwordHistoryData\";\nimport { SecureNoteData } from \"./secureNoteData\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/fieldApi\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../api/identityApi\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { LoginApi } from \"../api/loginApi\";\n\nimport { LoginUriData } from \"./loginUriData\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/passwordHistoryResponse\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachmentData\";\nimport { AttachmentView } from \"../view/attachmentView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string; // Readable size, ex: \"4.2 KB\" or \"1.43 GB\"\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      view.key = await this.decryptAttachmentKey(orgId, encKey);\n    }\n\n    return view;\n  }\n\n  private async decryptAttachmentKey(orgId: string, encKey?: SymmetricCryptoKey) {\n    try {\n      if (encKey == null) {\n        encKey = await this.getKeyForDecryption(orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      const decValue = await encryptService.decryptToBytes(this.key, encKey);\n      return new SymmetricCryptoKey(decValue);\n    } catch (e) {\n      // TODO: error?\n    }\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n}\n","import { CardData } from \"../data/cardData\";\nimport { CardView } from \"../view/cardView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { LocalData } from \"../data/localData\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secureNote\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Cipher extends Domain {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: LocalData;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, localData: LocalData = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      [\"id\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n}\n","import { CollectionData } from \"../data/collectionData\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IEncrypted } from \"@bitwarden/common/interfaces/IEncrypted\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncString implements IEncrypted {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      this.initFromData(encryptedStringOrType as EncryptionType, data, iv, mac);\n    } else {\n      this.initFromEncryptedString(encryptedStringOrType as string);\n    }\n  }\n\n  get ivBytes(): ArrayBuffer {\n    return this.iv == null ? null : Utils.fromB64ToArray(this.iv).buffer;\n  }\n\n  get macBytes(): ArrayBuffer {\n    return this.mac == null ? null : Utils.fromB64ToArray(this.mac).buffer;\n  }\n\n  get dataBytes(): ArrayBuffer {\n    return this.data == null ? null : Utils.fromB64ToArray(this.data).buffer;\n  }\n\n  toJSON() {\n    return this.encryptedString;\n  }\n\n  static fromJSON(obj: Jsonify<EncString>): EncString {\n    return new EncString(obj);\n  }\n\n  private initFromData(encType: EncryptionType, data: string, iv: string, mac: string) {\n    if (iv != null) {\n      this.encryptedString = encType + \".\" + iv + \"|\" + data;\n    } else {\n      this.encryptedString = encType + \".\" + data;\n    }\n\n    // mac\n    if (mac != null) {\n      this.encryptedString += \"|\" + mac;\n    }\n\n    this.encryptionType = encType;\n    this.data = data;\n    this.iv = iv;\n    this.mac = mac;\n  }\n\n  private initFromEncryptedString(encryptedString: string) {\n    this.encryptedString = encryptedString as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const { encType, encPieces } = this.parseEncryptedString(this.encryptedString);\n    this.encryptionType = encType;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  private parseEncryptedString(encryptedString: string): {\n    encType: EncryptionType;\n    encPieces: string[];\n  } {\n    const headerPieces = encryptedString.split(\".\");\n    let encType: EncryptionType;\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = encryptedString.split(\"|\");\n      encType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    return {\n      encType,\n      encPieces,\n    };\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    try {\n      if (key == null) {\n        key = await this.getKeyForDecryption(orgId);\n      }\n      if (key == null) {\n        throw new Error(\"No key to decrypt EncString with orgId \" + orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      this.decryptedValue = await encryptService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/fieldData\";\nimport { FieldView } from \"../view/fieldView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FolderData } from \"../data/folderData\";\nimport { FolderView } from \"../view/folderView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n\n  static fromJSON(obj: Jsonify<Folder>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new Folder(), obj, { name: EncString.fromJSON(obj.name), revisionDate });\n  }\n}\n","import { IdentityData } from \"../data/identityData\";\nimport { IdentityView } from \"../view/identityView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n}\n","import { LoginData } from \"../data/loginData\";\nimport { LoginView } from \"../view/loginView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { LoginUri } from \"./loginUri\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/loginUriData\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n        match: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","import { PasswordHistoryData } from \"../data/passwordHistoryData\";\nimport { PasswordHistoryView } from \"../view/passwordHistoryView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(this, obj, {\n      password: null,\n    });\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secureNoteData\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nimport Domain from \"./domainBase\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n\n  toJSON() {\n    // The whole object is constructed from the initial key, so just store the B64 key\n    return { keyB64: this.keyB64 };\n  }\n\n  static fromJSON(obj: Jsonify<SymmetricCryptoKey>): SymmetricCryptoKey {\n    if (obj == null) {\n      return null;\n    }\n\n    const arrayBuffer = Utils.fromB64ToArray(obj.keyB64).buffer;\n    return new SymmetricCryptoKey(arrayBuffer);\n  }\n}\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/encString\";\nimport { CardView } from \"../view/cardView\";\n\nexport class CardExport {\n  static template(): CardExport {\n    const req = new CardExport();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: CardExport, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: CardExport, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/encString\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/fieldView\";\n\nexport class FieldExport {\n  static template(): FieldExport {\n    const req = new FieldExport();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: FieldExport, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: FieldExport, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identityView\";\n\nexport class IdentityExport {\n  static template(): IdentityExport {\n    const req = new IdentityExport();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: IdentityExport, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: IdentityExport, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/encString\";\nimport { LoginUri as LoginUriDomain } from \"../domain/loginUri\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nexport class LoginUriExport {\n  static template(): LoginUriExport {\n    const req = new LoginUriExport();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUriExport, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUriExport, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/loginView\";\n\nimport { LoginUriExport } from \"./loginUriExport\";\n\nexport class LoginExport {\n  static template(): LoginExport {\n    const req = new LoginExport();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: LoginExport, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUriExport.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: LoginExport, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUriExport.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUriExport[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secureNote\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nexport class SecureNoteExport {\n  static template(): SecureNoteExport {\n    const req = new SecureNoteExport();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNoteExport, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNoteExport, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/encString\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { CardExport } from \"./cardExport\";\nimport { FieldExport } from \"./fieldExport\";\nimport { IdentityExport } from \"./identityExport\";\nimport { LoginExport } from \"./loginExport\";\nimport { SecureNoteExport } from \"./secureNoteExport\";\n\nexport class CipherExport {\n  static template(): CipherExport {\n    const req = new CipherExport();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: CipherExport, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => FieldExport.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = LoginExport.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteExport.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = CardExport.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityExport.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: CipherExport, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => FieldExport.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = LoginExport.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNoteExport.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = CardExport.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = IdentityExport.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: FieldExport[];\n  login: LoginExport;\n  secureNote: SecureNoteExport;\n  card: CardExport;\n  identity: IdentityExport;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      } else {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new LoginExport(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteExport(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardExport(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityExport(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { CipherExport } from \"./cipherExport\";\n\nexport class CipherWithIdExport extends CipherExport {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/encString\";\nimport { CollectionView } from \"../view/collectionView\";\n\nexport class CollectionExport {\n  static template(): CollectionExport {\n    const req = new CollectionExport();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: CollectionExport, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: CollectionExport, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport { CollectionExport } from \"./collectionExport\";\n\nexport class CollectionWithIdExport extends CollectionExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nexport class FolderExport {\n  static template(): FolderExport {\n    const req = new FolderExport();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: FolderExport, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: FolderExport, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nimport { FolderExport } from \"./folderExport\";\n\nexport class FolderWithIdExport extends FolderExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachmentRequest\";\nimport { PasswordHistoryRequest } from \"./passwordHistoryRequest\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Collection } from \"../domain/collection\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class CollectionRequest {\n  name: string;\n  externalId: string;\n  groups: SelectionReadOnlyRequest[] = [];\n\n  constructor(collection?: Collection) {\n    if (collection == null) {\n      return;\n    }\n    this.name = collection.name ? collection.name.encryptedString : null;\n    this.externalId = collection.externalId;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (status === 429) {\n      this.message = \"Rate limit exceeded. Try again later.\";\n    } else if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<AttachmentView>>): AttachmentView {\n    const key = obj.key == null ? null : SymmetricCryptoKey.fromJSON(obj.key);\n    return Object.assign(new AttachmentView(), obj, { key: key });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CardView>>): CardView {\n    return Object.assign(new CardView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { LocalData } from \"../data/localData\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachmentView\";\nimport { CardView } from \"./cardView\";\nimport { FieldView } from \"./fieldView\";\nimport { IdentityView } from \"./identityView\";\nimport { LoginView } from \"./loginView\";\nimport { PasswordHistoryView } from \"./passwordHistoryView\";\nimport { SecureNoteView } from \"./secureNoteView\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View {\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: LocalData;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CipherView>>): CipherView {\n    const view = new CipherView();\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => AttachmentView.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => FieldView.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => PasswordHistoryView.fromJSON(ph));\n\n    Object.assign(view, obj, {\n      revisionDate: revisionDate,\n      deletedDate: deletedDate,\n      attachments: attachments,\n      fields: fields,\n      passwordHistory: passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        view.card = CardView.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityView.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        view.login = LoginView.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteView.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return view;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\nimport { CollectionGroupDetailsResponse } from \"../response/collectionResponse\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<FieldView>>): FieldView {\n    return Object.assign(new FieldView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n\n  static fromJSON(obj: Jsonify<FolderView>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new FolderView(), obj, { revisionDate });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<IdentityView>>): IdentityView {\n    return Object.assign(new IdentityView(), obj);\n  }\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/loginUri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginUriView>>): LoginUriView {\n    return Object.assign(new LoginUriView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./itemView\";\nimport { LoginUriView } from \"./loginUriView\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginView>>): LoginView {\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUriView.fromJSON(uri));\n\n    return Object.assign(new LoginView(), obj, {\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<PasswordHistoryView>>): PasswordHistoryView {\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new PasswordHistoryView(), obj, {\n      lastUsedDate: lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secureNote\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<SecureNoteView>>): SecureNoteView {\n    return Object.assign(new SecureNoteView(), obj);\n  }\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","import { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { Input, HostBinding, Directive } from \"@angular/core\";\n\nexport type ButtonTypes = \"primary\" | \"secondary\" | \"danger\";\n\nconst buttonStyles: Record<ButtonTypes, string[]> = {\n  primary: [\n    \"tw-border-primary-500\",\n    \"tw-bg-primary-500\",\n    \"!tw-text-contrast\",\n    \"hover:tw-bg-primary-700\",\n    \"hover:tw-border-primary-700\",\n    \"disabled:tw-bg-primary-500/60\",\n    \"disabled:tw-border-primary-500/60\",\n    \"disabled:!tw-text-contrast/60\",\n    \"disabled:tw-bg-clip-padding\",\n  ],\n  secondary: [\n    \"tw-bg-transparent\",\n    \"tw-border-text-muted\",\n    \"!tw-text-muted\",\n    \"hover:tw-bg-secondary-500\",\n    \"hover:tw-border-secondary-500\",\n    \"hover:!tw-text-contrast\",\n    \"disabled:tw-bg-transparent\",\n    \"disabled:tw-border-text-muted/60\",\n    \"disabled:!tw-text-muted/60\",\n  ],\n  danger: [\n    \"tw-bg-transparent\",\n    \"tw-border-danger-500\",\n    \"!tw-text-danger\",\n    \"hover:tw-bg-danger-500\",\n    \"hover:tw-border-danger-500\",\n    \"hover:!tw-text-contrast\",\n    \"disabled:tw-bg-transparent\",\n    \"disabled:tw-border-danger-500/60\",\n    \"disabled:!tw-text-danger/60\",\n  ],\n};\n\n@Directive({\n  selector: \"button[bitButton], a[bitButton]\",\n})\nexport class ButtonDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-font-semibold\",\n      \"tw-py-1.5\",\n      \"tw-px-3\",\n      \"tw-rounded\",\n      \"tw-transition\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      \"tw-text-center\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n      \"focus-visible:tw-ring\",\n      \"focus-visible:tw-ring-offset-2\",\n      \"focus-visible:tw-ring-primary-700\",\n      \"focus-visible:tw-z-10\",\n    ]\n      .concat(\n        this.block == null || this.block === false ? [\"tw-inline-block\"] : [\"tw-w-full\", \"tw-block\"]\n      )\n      .concat(buttonStyles[this.buttonType ?? \"secondary\"]);\n  }\n\n  @Input() buttonType: ButtonTypes = null;\n  @Input() block?: boolean;\n}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-error\",\n  template: `<i class=\"bwi bwi-error\"></i> {{ displayError }}`,\n  host: {\n    class: \"tw-block tw-mt-1 tw-text-danger\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorComponent {\n  @HostBinding() id = `bit-error-${nextId++}`;\n\n  @Input() error: [string, any];\n\n  constructor(private i18nService: I18nService) {}\n\n  get displayError() {\n    switch (this.error[0]) {\n      case \"required\":\n        return this.i18nService.t(\"inputRequired\");\n      case \"email\":\n        return this.i18nService.t(\"inputEmail\");\n      case \"minlength\":\n        return this.i18nService.t(\"inputMinLength\", this.error[1]?.requiredLength);\n      default:\n        // Attempt to show a custom error message.\n        if (this.error[1]?.message) {\n          return this.error[1]?.message;\n        }\n\n        return this.error;\n    }\n  }\n}\n","<label class=\"tw-mb-1 tw-block tw-font-semibold tw-text-main\" [attr.for]=\"input.id\">\n  <ng-content select=\"bit-label\"></ng-content>\n  <span *ngIf=\"input.required\" class=\"tw-text-xs tw-font-normal\"> ({{ \"required\" | i18n }})</span>\n</label>\n<div class=\"tw-flex\">\n  <div *ngIf=\"prefixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitPrefix]\"></ng-content>\n  </div>\n  <ng-content></ng-content>\n  <div *ngIf=\"suffixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitSuffix]\"></ng-content>\n  </div>\n</div>\n<ng-container [ngSwitch]=\"input.hasError\">\n  <ng-content select=\"bit-hint\" *ngSwitchCase=\"false\"></ng-content>\n  <bit-error [error]=\"input.error\" *ngSwitchCase=\"true\"></bit-error>\n</ng-container>\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChild,\n  ContentChildren,\n  QueryList,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { BitInputDirective } from \"../input/input.directive\";\n\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitHintComponent } from \"./hint.component\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n@Component({\n  selector: \"bit-form-field\",\n  templateUrl: \"./form-field.component.html\",\n  host: {\n    class: \"tw-mb-6 tw-block\",\n  },\n})\nexport class BitFormFieldComponent implements AfterContentChecked {\n  @ContentChild(BitInputDirective) input: BitInputDirective;\n  @ContentChild(BitHintComponent) hint: BitHintComponent;\n\n  @ViewChild(BitErrorComponent) error: BitErrorComponent;\n\n  @ContentChildren(BitPrefixDirective) prefixChildren: QueryList<BitPrefixDirective>;\n  @ContentChildren(BitSuffixDirective) suffixChildren: QueryList<BitSuffixDirective>;\n\n  ngAfterContentChecked(): void {\n    if (this.error) {\n      this.input.ariaDescribedBy = this.error.id;\n    } else if (this.hint) {\n      this.input.ariaDescribedBy = this.hint.id;\n    } else {\n      this.input.ariaDescribedBy = undefined;\n    }\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitInputDirective } from \"./input.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitInputDirective],\n  exports: [BitInputDirective],\n})\nexport class InputModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { I18nPipe } from \"./i18n.pipe\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [I18nPipe],\n  exports: [CommonModule, I18nPipe],\n})\nexport class SharedModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { BitInputDirective } from \"../input/input.directive\";\nimport { InputModule } from \"../input/input.module\";\nimport { SharedModule } from \"../shared\";\n\nimport { BitErrorSummary } from \"./error-summary.component\";\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitFormFieldComponent } from \"./form-field.component\";\nimport { BitHintComponent } from \"./hint.component\";\nimport { BitLabel } from \"./label.directive\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n@NgModule({\n  imports: [SharedModule, InputModule],\n  exports: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitHintComponent,\n    BitInputDirective,\n    BitLabel,\n    BitPrefixDirective,\n    BitSuffixDirective,\n  ],\n  declarations: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitHintComponent,\n    BitLabel,\n    BitPrefixDirective,\n    BitSuffixDirective,\n  ],\n})\nexport class FormFieldModule {}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"bit-hint\",\n  host: {\n    class: \"tw-text-muted tw-inline-block tw-mt-1\",\n  },\n})\nexport class BitHintComponent {\n  @HostBinding() id = `bit-hint-${nextId++}`;\n}\n","import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"bit-label\",\n})\nexport class BitLabel {}\n","import { Directive, HostBinding, Input } from \"@angular/core\";\n\nexport const PrefixClasses = [\n  \"tw-block\",\n  \"tw-px-3\",\n  \"tw-py-1.5\",\n  \"tw-bg-background-alt\",\n  \"tw-border\",\n  \"tw-border-solid\",\n  \"tw-border-secondary-500\",\n  \"tw-text-muted\",\n  \"tw-rounded-none\",\n  \"disabled:!tw-text-muted\",\n  \"disabled:tw-border-secondary-500\",\n];\n\n@Directive({\n  selector: \"[bitPrefix]\",\n})\nexport class BitPrefixDirective {\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\"tw-border-r-0\", \"first:tw-rounded-l\"]);\n  }\n}\n","import { Directive, HostBinding, Input } from \"@angular/core\";\n\nimport { PrefixClasses } from \"./prefix.directive\";\n\n@Directive({\n  selector: \"[bitSuffix]\",\n})\nexport class BitSuffixDirective {\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\"tw-border-l-0\", \"last:tw-rounded-r\"]);\n  }\n}\n","import { Directive, HostBinding, Input, Optional, Self } from \"@angular/core\";\nimport { NgControl, Validators } from \"@angular/forms\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"input[bitInput], select[bitInput], textarea[bitInput]\",\n})\nexport class BitInputDirective {\n  @HostBinding(\"class\") @Input() get classList() {\n    return [\n      \"tw-block\",\n      \"tw-w-full\",\n      \"tw-px-3\",\n      \"tw-py-1.5\",\n      \"tw-bg-background-alt\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      this.hasError ? \"tw-border-danger-500\" : \"tw-border-secondary-500\",\n      \"tw-text-main\",\n      \"tw-placeholder-text-muted\",\n      // Rounded\n      \"tw-rounded-none\",\n      \"first:tw-rounded-l\",\n      \"last:tw-rounded-r\",\n      // Focus\n      \"focus:tw-outline-none\",\n      \"focus:tw-border-primary-700\",\n      \"focus:tw-ring-1\",\n      \"focus:tw-ring-primary-700\",\n      \"focus:tw-z-10\",\n      \"disabled:tw-bg-secondary-100\",\n    ].filter((s) => s != \"\");\n  }\n\n  @HostBinding() @Input() id = `bit-input-${nextId++}`;\n\n  @HostBinding(\"attr.aria-describedby\") ariaDescribedBy: string;\n\n  @HostBinding(\"attr.aria-invalid\") get ariaInvalid() {\n    return this.hasError ? true : undefined;\n  }\n\n  @HostBinding()\n  @Input()\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value: any) {\n    this._required = value != null && value !== false;\n  }\n  private _required: boolean;\n\n  @Input() hasPrefix = false;\n  @Input() hasSuffix = false;\n\n  get hasError() {\n    return this.ngControl?.status === \"INVALID\" && this.ngControl?.touched;\n  }\n\n  get error(): [string, any] {\n    const key = Object.keys(this.ngControl.errors)[0];\n    return [key, this.ngControl.errors[key]];\n  }\n  constructor(@Optional() @Self() private ngControl: NgControl) {}\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n/**\n * Temporarily duplicate this pipe\n */\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + {\"182\":\"2ba110875f11c42217e0\",\"290\":\"b4598b21db1861ee6db4\",\"477\":\"e882d21429c04bcbe47c\",\"584\":\"238f402a694e2a33f299\",\"754\":\"2b88ef012a5d3980e035\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t148: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_web_vault\"] = self[\"webpackChunk_bitwarden_web_vault\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [734], () => (__webpack_require__(92114)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","inProgress","dataWebpackPrefix","RegisterFormModule","OrganizationCreateModule","OrganizationPermissionsGuard","constructor","router","organizationService","platformUtilsService","i18nService","syncService","canActivate","route","state","this","getLastSync","fullSync","org","get","params","organizationId","createUrlTree","isOwner","enabled","showToast","t","permissionsCallback","data","organizationPermissions","cipherId","root","queryParamMap","queryParams","itemId","id","canAccessToolsTab","canAccessImportExport","canAccessReports","canAccessSettingsTab","canAccessManageTab","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","canEditAssignedCollections","canDeleteAssignedCollections","canAccessEventLogs","canManageGroups","canManageUsers","canManagePolicies","canManageSso","canManageScim","canAccessOrgAdmin","LooseComponentsModule","BadgeModule","ButtonModule","CalloutModule","MenuModule","SubmitButtonModule","IconModule","SharedModule","OrganizationBadgeModule","VaultFilterSharedModule","VaultFilterService","stateService","folderService","cipherService","collectionService","policyService","apiService","super","_collapsedFilterNodes","collapsedFilterNodes$","asObservable","buildCollapsedFilterNodes","nodes","next","storeCollapsedFilterNodes","collapsedFilterNodes","ensureVaultFiltersAreExpanded","has","delete","buildAdminCollections","result","collectionResponse","getCollections","length","collectionDomains","map","r","decryptMany","noneCollection","name","push","nestedCollections","getAllNested","fullList","nestedList","VaultFilterModule","WINDOW","MEMORY_STORAGE","SECURE_STORAGE","STATE_FACTORY","STATE_SERVICE_USE_CACHE","LOGOUT_CALLBACK","LOCKED_CALLBACK","LOCALES_DIRECTORY","SYSTEM_LANGUAGE","LOG_MAC_FAILURES","ThemeType","ThemeBuilder","configuredTheme","systemTheme","effectiveTheme","System","updateSystemTheme","updateConfiguredTheme","ThemingService","window","document","_theme","BehaviorSubject","theme$","pipe","filter","x","monitorThemeChanges","getTheme","getSystemTheme","monitorConfiguredThemeChanges","monitorSystemThemeChanges","getValue","theme","setTheme","subscribe","documentElement","classList","remove","Light","Dark","Nord","SolarizedDark","add","matchMedia","matches","fromEvent","event","AbstractThemingService","AbstractEncryptService","AccountApiService","AccountService","AppIdService","AuditService","AuthService","BroadcasterService","ConfigApiServiceAbstraction","CryptoFunctionService","EnvironmentService","FileUploadService","FolderApiServiceAbstraction","FormValidationErrorsService","MessagingService","NotificationsService","OrganizationApiServiceAbstraction","PasswordGenerationService","PasswordRepromptService","PolicyApiServiceAbstraction","ProviderService","SearchService","indexedEntityId","SendService","SettingsService","StateMigrationService","AbstractStorageService","TokenService","TotpService","TwoFactorService","UserVerificationApiServiceAbstraction","StateVersion","UsernameGenerationService","VaultTimeoutService","VaultTimeoutSettingsService","AccountFactory","accountConstructor","create","args","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","createGlobal","createAccount","EnvironmentUrls","base","api","identity","icons","notifications","events","webVault","keyConnector","EncryptionPair","DataEncryptionPair","TemporaryDataEncryption","AccountData","ciphers","folders","sends","collections","policies","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","privateKey","AccountProfile","environmentUrls","pinProtected","vaultTimeoutAction","AccountTokens","init","keys","profile","settings","tokens","Object","assign","WindowState","stateVersion","One","DeviceType","DeviceRequest","appId","type","getDevice","getDeviceString","identifier","pushToken","TokenRequest","twoFactor","device","alterIdentityTokenHeaders","headers","setTwoFactor","toIdentityToken","clientId","obj","scope","client_id","deviceType","deviceIdentifier","deviceName","token","provider","twoFactorToken","twoFactorProvider","twoFactorRemember","remember","ApiTokenRequest","clientSecret","startsWith","grant_type","client_secret","TokenRequestTwoFactor","ApiKeyResponse","response","apiKey","getResponseProperty","revisionDate","Date","AttachmentResponse","url","fileName","key","size","sizeName","PasswordHistoryResponse","password","lastUsedDate","CipherResponse","folderId","notes","favorite","edit","viewPassword","organizationUseTotp","collectionIds","deletedDate","login","card","secureNote","fields","f","attachments","a","passwordHistory","h","reprompt","AttachmentUploadDataResponse","attachmentId","fileUploadType","cipherResponse","cipherMiniResponse","RegisterResponse","captchaBypassToken","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","BillingTransactionResponse","i","BillingInvoiceResponse","cardBrand","description","needsVerification","pdfUrl","number","paid","date","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","details","BillingHistoryResponse","hasNoHistory","BillingPaymentResponse","BreachAccountResponse","addedDate","breachDate","dataClasses","domain","isActive","isVerified","logoPath","modifiedDate","pwnCount","title","SelectionReadOnlyResponse","readOnly","hidePasswords","CollectionResponse","externalId","CollectionDetailsResponse","CollectionGroupDetailsResponse","groups","g","DeviceVerificationResponse","isDeviceVerificationSectionEnabled","unknownDeviceVerificationEnabled","GlobalDomainResponse","domains","excluded","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","EmergencyAccessGranteeDetailsResponse","granteeId","email","status","waitTimeDays","creationDate","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","keyEncrypted","kdf","kdfIterations","EmergencyAccessViewResponse","c","EventResponse","userId","providerId","collectionId","groupId","policyId","organizationUserId","providerUserId","providerOrganizationId","actingUserId","ipAddress","installationId","GroupResponse","accessAll","GroupDetailsResponse","IdentityCaptchaResponse","siteKey","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","resetMasterPassword","forcePasswordReset","apiUseKeyConnector","keyConnectorUrl","IdentityTwoFactorResponse","twoFactorProviders2","Map","captchaToken","twoFactorProviders","prop","hasOwnProperty","set","parseInt","KeyConnectorUserKeyResponse","ListResponse","dr","continuationToken","OrganizationConnectionResponse","configType","rawConfig","config","OrganizationExportResponse","OrganizationSponsorshipSyncStatusResponse","lastSyncDate","OrganizationUserBulkPublicKeyResponse","OrganizationUserBulkResponse","error","PermissionsApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","manageScim","OrganizationUserResponse","permissions","resetPasswordEnrolled","OrganizationUserUserDetailsResponse","twoFactorEnabled","usesKeyConnector","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","resetPasswordKey","encryptedPrivateKey","ProfileOrganizationResponse","usePolicies","useGroups","useDirectory","useEvents","useTotp","use2fa","useApi","useSso","useKeyConnector","useScim","useResetPassword","selfHost","usersGetPremium","seats","maxCollections","maxStorageGb","hasPublicAndPrivateKeys","ssoBound","providerName","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","keyConnectorEnabled","familySponsorshipLastSyncDateString","familySponsorshipLastSyncDate","familySponsorshipValidUntilString","familySponsorshipValidUntil","familySponsorshipToDelete","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","organizations","providers","providerOrganizations","emailVerified","masterPasswordHint","premiumPersonally","premiumFromOrganization","culture","securityStamp","o","PaymentResponse","userProfile","paymentIntentClientSecret","success","PlanResponse","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","hasTotp","has2fa","hasApi","hasSso","hasResetPassword","upgradeSortOrder","displaySortOrder","legacyYear","disabled","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","PolicyResponse","PreloginResponse","ProviderOrganizationResponse","userCount","plan","ProviderOrganizationOrganizationDetailsResponse","organizationName","ProviderResponse","businessName","billingEmail","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","SendFileApi","SendTextApi","text","hidden","SendAccessResponse","file","expirationDate","creatorIdentifier","SendFileDownloadDataResponse","SendResponse","accessId","maxAccessCount","accessCount","deletionDate","disable","hideEmail","SendFileUploadDataResponse","sendResponse","SsoPreValidateResponse","SubscriptionResponse","storageName","storageGb","license","expiration","usingInAppPurchase","subscription","upcomingInvoice","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","items","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","interval","sponsoredSubscriptionItem","FolderResponse","SyncResponse","p","s","TaxInfoResponse","taxId","taxIdType","line1","line2","city","postalCode","country","TaxRateResponse","rate","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","host","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","code","TwoFactorWebAuthnResponse","k","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","excludeCredentials","buffer","extensions","pubKeyCredParams","rp","timeout","user","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","publicKey","HtmlStorageLocation","cryptoFunctionService","passwordLeaked","hashBytes","hash","toUpperCase","hashStart","substr","hashEnding","nativeFetch","Request","match","split","find","v","breachedAccounts","username","getHibpBreach","e","statusCode","Error","limit","throttleKey","AuthenticationStatus","KeySuffixOptions","TwoFactorProviderType","target","propertyKey","descriptor","originalMethod","value","allThrottles","throttles","getThrottles","argsThrottleKey","queue","Promise","resolve","reject","exec","onFinally","splice","indexOf","apply","then","val","catch","err","AuthenticationType","AuthResult","captchaSiteKey","requiresCaptcha","requiresTwoFactor","KeysRequest","LogInStrategy","cryptoService","tokenService","appIdService","messagingService","logService","twoFactorService","logInTwoFactor","captchaResponse","tokenRequest","startLogIn","clearSelectedProvider","postIdentityToken","processTwoFactorResponse","processCaptchaResponse","processTokenResponse","onSuccessfulLogin","buildDeviceRequest","getAppId","buildTwoFactor","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","Remember","saveAccountInformation","tokenResponse","accountInformation","decodeToken","addAccount","sub","hasPremiumPersonally","premium","kdfType","setTwoFactorToken","setEncKey","setEncPrivateKey","createKeyPairForOldAccount","send","setProviders","makeKeyPair","postAccountKeys","encryptedString","HashPurpose","ApiLogInStrategy","environmentService","keyConnectorService","getKeyConnectorUrl","getAndSetKey","logIn","credentials","setApiKeyClientId","setApiKeyClientSecret","PasswordTokenRequest","masterPasswordHash","PasswordLogInStrategy","authService","setKey","setKeyHash","localHashedPassword","masterPassword","makePreloginKey","hashPassword","LocalAuthorization","hashedPassword","SsoTokenRequest","codeVerifier","redirectUri","code_verifier","redirect_uri","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","orgId","redirectUrl","PreloginRequest","sequentialize","cacheKey","caches","cache","getCache","argsCacheKey","EncArrayBuffer","encryptionType","dataBytes","ivBytes","macBytes","encBytes","Uint8Array","encType","minimumLength","ENC_TYPE_LENGTH","throwDecryptionError","slice","static","arrayBuffer","b64","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","sort","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","clear","clearTimeout","setTimeout","lastUsedIndex","Math","max","cipher","localData","lastLaunched","y","valueOf","getNextIndex","CipherBulkDeleteRequest","ids","CipherBulkMoveRequest","CipherBulkRestoreRequest","CipherWithIdRequest","CipherBulkShareRequest","forEach","CipherCollectionsRequest","CipherCreateRequest","CipherShareRequest","DomainMatchBlacklist","Set","CipherService","settingsService","fileUploadService","searchService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","encrypt","model","originalCipher","existingCipher","decrypt","ph","passwordRevisionDate","hasFields","existingHiddenFields","hiddenFields","ef","matchedField","getOrgKey","all","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","promises","encAttachments","attachment","promise","fieldsModel","self","encFields","reduce","field","encField","encryptField","fieldModel","linkedId","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","getAll","getAllDecrypted","getUserId","decCiphers","hasKey","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","folder","isDeleted","getAllDecryptedForUrl","includeOtherTypes","defaultMatch","eqDomainsPromise","firstValueFrom","settings$","eqDomain","concat","matchingDomains","getDefaultUriMatch","uris","u","uri","domainUrlHost","urlHost","RegExp","test","getAllFromApiForOrganization","getCiphersOrganization","getLastUsedForUrl","autofillOnPageLoad","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","getTime","setLocalData","decryptedCipherCache","cached","updateLastLaunchedDate","saveNeverDomain","getNeverDomains","setNeverDomains","saveWithServer","request","postCipherCreate","postCipher","putCipher","upsert","shareWithServer","attachmentPromises","shareAttachmentWithServer","encCipher","putShareCipher","shareManyWithServer","encCiphers","putShareCiphers","toCipherData","saveAttachmentWithServer","unencryptedFile","admin","reader","FileReader","readAsArrayBuffer","onload","evt","cData","saveAttachmentRawWithServer","onerror","filename","encFileName","dataEncKey","makeEncKey","encData","encryptToBytes","fileSize","byteLength","adminRequest","uploadDataResponse","postCipherAttachment","uploadCipherAttachment","getSingleMessage","legacyServerAttachmentFileUpload","fd","FormData","blob","Blob","append","Buffer","from","filepath","contentType","postCipherAttachmentAdminLegacy","postCipherAttachmentLegacy","saveCollectionsWithServer","putCipherCollections","replace","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","putMoveCiphers","deleteWithServer","deleteCipher","deleteManyWithServer","deleteManyCiphers","deleteAttachment","deleteAttachmentWithServer","deleteCipherAttachment","b","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","collator","compare","localeCompare","softDelete","setDeletedDate","toISOString","softDeleteWithServer","putDeleteCipher","softDeleteManyWithServer","putDeleteManyCiphers","restore","clearDeletedDate","Array","restoreWithServer","putRestoreCipher","restoreManyWithServer","putRestoreManyCiphers","restores","attachmentView","attachmentResponse","toString","encBuf","fromResponse","decBuf","decryptFromBytes","postShareCipherAttachment","theProp","theObj","modelProp","totp","loginUri","cardholderName","brand","expMonth","expYear","firstName","middleName","lastName","address1","address2","address3","company","phone","ssn","passportNumber","licenseNumber","lastUsed","autofillOnPageLoadDefault","getAutoFillOnPageLoadDefault","clearSortedCiphers","ServerConfigResponse","version","gitHash","server","ThirdPartyServerConfigResponse","environment","EnvironmentServerConfigResponse","vault","sso","ServerConfigData","serverConfigReponse","ThirdPartyServerConfigData","utcDate","EnvironmentServerConfigData","ServerConfig","serverConfigData","getAgeInMilliseconds","isValid","expiresSoon","EEFLongWordList","BaseEncryptedOrganizationKey","EncryptedOrganizationKey","ProviderEncryptedOrganizationKey","decValue","rsaDecrypt","toData","providerKey","getProviderKey","decryptToBytes","CryptoService","encryptService","platformUtilService","setCryptoMasterKey","storeKey","keyHash","encKey","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","orgs","providerOrgs","encOrgKeyData","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","getKey","keySuffix","inMemoryKey","getCryptoMasterKey","Auto","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","warning","clearSecretKeyStore","getKeyHash","compareAndUpdateKeyHash","storedKeyHash","localKeyHash","serverKeyHash","ServerAuthorization","getEncKey","getEncKeyHelper","getPublicKey","inMemoryPublicKey","getPrivateKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","getFingerprint","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","getOrgKeys","decryptedOrganizationKeys","getDecryptedOrganizationKeys","getEncryptedOrganizationKeys","encOrgKey","fromData","decOrgKey","orgKeys","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","hasKeyInMemory","hasKeyStored","Biometric","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","hasEncKey","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearPinProtectedKey","setEncryptedPinProtected","clearKeys","toggleKey","makeKey","salt","pbkdf2","makeKeyFromPin","pin","protectedKeyCs","pinProtectedKey","getEncryptedPinProtected","pinKey","makePinKey","decKey","makeShareKey","shareKey","randomBytes","rsaEncrypt","keyPair","rsaGenerateKeyPair","stretchKey","makeSendKey","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","getKeyForUserEncryption","buildEncKey","remakeEncKey","plainValue","encValue","privateKeyValue","headerPieces","encPieces","alg","encString","keyForEnc","decryptToUtf8","encBuffer","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","keyB64","getVaultTimeout","getBiometricUnlock","supportsSecureStorage","getCryptoMasterKeyBiometric","newKey","macKey","minimumEntropy","entropyPerWord","log","numWords","hashArr","phrase","hashNumber","remainder","mod","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","symmetricCryptoKey","EncryptedObject","EventData","EventRequest","EventExport","message","humanReadableMessage","appIcon","appName","userName","userEmail","ip","FileUploadType","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","Headers","toUTCString","searchParams","body","method","blobResponse","fetch","baseUrl","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","start","blockData","blockHeaders","blockRequest","blockResponse","json","blockListUrl","blockListXml","expiry","isNaN","setTime","now","utfBlockId","blockIdList","xml","Version","year","month","day","parts","Number","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","apiCall","FolderData","OrganizationUserType","SetKeyConnectorKeyRequest","orgIdentifier","KeyConnectorUserKeyRequest","NotificationType","NotificationResponse","contextId","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","OrganizationUserStatusType","Organization","isProviderUser","canAccess","Owner","Confirmed","isManager","Manager","Admin","isAdmin","canViewAllCollections","canViewAssignedCollections","canManageUsersPassword","isExemptFromPolicies","canManageBilling","hasProvider","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","SsoConfigApi","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","view","OpenIdConnect","openId","Saml2","saml","idpAllowOutboundLogoutRequests","OrganizationSsoResponse","urls","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","OrganizationApiKeyInformationResponse","keyType","OrganizationAutoEnrollStatusResponse","resetPasswordEnabled","KeysResponse","OrganizationKeysResponse","OrganizationResponse","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","planType","maxAutoscaleSeats","OrganizationSubscriptionResponse","GeneratedPasswordHistory","PasswordGeneratorPolicyOptions","defaultType","minLength","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","capitalize","includeNumber","inEffect","DefaultOptions","ambiguous","minNumber","uppercase","minUppercase","lowercase","minLowercase","special","minSpecial","wordSeparator","PolicyData","Policy","ResetPasswordPolicyOptions","autoEnrollEnabled","ProviderUserStatusType","ProviderUserType","Provider","isProviderAdmin","canCreateOrganizations","ProviderAdmin","SendType","indexing","index","immediateSearchLocales","defaultSearchableMinLength","searchableMinLength","locale$","locale","registeredPipeline","lunr","Pipeline","registerFunction","normalizeAccentsPipelineFunction","isSearchable","query","normalizeSearchQuery","builder","Builder","pipeline","ref","boost","extractor","subTitle","uriExtractor","fieldExtractor","attachmentExtractor","build","info","searchCiphers","results","trim","toLowerCase","isArray","every","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","search","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","deleted","hasUris","some","searchSends","toLocaleLowerCase","sendsMatched","lowPriorityMatched","joined","join","hasAttachments","lastIndexOf","hostname","protocolIndex","queryIndex","substring","searchableFields","metadata","includes","normalize","SendFileData","SendTextData","SendData","Text","File","SendFileView","SendTextView","maskedText","SendView","urlB64Key","maxAccessCountReached","expired","pendingDelete","SendFile","buildDomainModel","decryptObj","SendText","Send","getCryptoService","cryptoKey","SendRequest","fileLength","StorageLocation","ProviderData","State","globals","accounts","authenticatedAccounts","accountActivity","partialKeys","storageService","secureStorageService","memoryStorageService","stateMigrationService","stateFactory","useAccountCache","activeAccountSubject","activeAccount$","activeAccountUnlockedSubject","activeAccountUnlocked$","hasBeenInited","isRecoveredSession","accountDiskCache","concatMap","needsMigration","migrate","setState","createGlobals","initAccountState","updateState","syncAccountFromDisk","storedActiveUser","activeUserId","pushAccounts","diskAccount","getAccountFromDisk","account","setAccountEnvironmentUrls","save","scaffoldNewAccountStorage","setLastActive","setActiveUser","clearDecryptedDataForActiveUser","clean","options","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getAccessToken","getTimeoutBasedStorageOptions","getAccount","setAccessToken","saveAccount","getAddEditCipherInfo","addEditCipherInfo","setAddEditCipherInfo","getAlwaysShowDock","getGlobals","defaultOnDiskOptions","alwaysShowDock","setAlwaysShowDock","saveGlobals","getApiKeyClientId","apiKeyClientId","getApiKeyClientSecret","apiKeyClientSecret","getAutoConfirmFingerPrints","autoConfirmFingerPrints","setAutoConfirmFingerprints","autoFillOnPageLoadDefault","setAutoFillOnPageLoadDefault","getBiometricAwaitingAcceptance","biometricAwaitingAcceptance","setBiometricAwaitingAcceptance","getBiometricFingerprintValidated","biometricFingerprintValidated","setBiometricFingerprintValidated","getBiometricText","biometricText","setBiometricText","biometricUnlock","setBiometricUnlock","getCanAccessPremium","getIsAuthenticated","getHasPremiumPersonally","getHasPremiumFromOrganization","setHasPremiumPersonally","hasPremiumFromOrganization","getOrganizations","setHasPremiumFromOrganization","getClearClipboard","defaultOnDiskLocalOptions","clearClipboard","setClearClipboard","getCollapsedGroupings","collapsedGroupings","setCollapsedGroupings","getConvertAccountToKeyConnector","convertAccountToKeyConnector","setConvertAccountToKeyConnector","cryptoMasterKey","nextValue","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","getDecodedToken","decodedToken","setDecodedToken","decrypted","getDecryptedCollections","setDecryptedCollections","getDecryptedPasswordGenerationHistory","setDecryptedPasswordGenerationHistory","getDecryptedPinProtected","setDecryptedPinProtected","getDecryptedPolicies","setDecryptedPolicies","decryptedSerialized","getDecryptedSends","setDecryptedSends","defaultUriMatch","setDefaultUriMatch","getDisableAddLoginNotification","disableAddLoginNotification","setDisableAddLoginNotification","getDisableAutoBiometricsPrompt","disableAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","getDisableAutoTotpCopy","disableAutoTotpCopy","setDisableAutoTotpCopy","getDisableBadgeCounter","disableBadgeCounter","setDisableBadgeCounter","getDisableChangedPasswordNotification","disableChangedPasswordNotification","setDisableChangedPasswordNotification","getDisableContextMenuItem","disableContextMenuItem","setDisableContextMenuItem","getDisableFavicon","disableFavicon","setDisableFavicon","getDisableGa","disableGa","setDisableGa","getDontShowCardsCurrentTab","dontShowCardsCurrentTab","setDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","dontShowIdentitiesCurrentTab","setDontShowIdentitiesCurrentTab","getEmail","setEmail","getEmailVerified","setEmailVerified","getEnableAlwaysOnTop","accountPreference","enableAlwaysOnTop","globalPreference","setEnableAlwaysOnTop","getEnableAutoFillOnPageLoad","enableAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","enableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","enableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","enableCloseToTray","setEnableCloseToTray","getEnableFullWidth","enableFullWidth","setEnableFullWidth","getEnableGravitars","enableGravitars","setEnableGravitars","getEnableMinimizeToTray","enableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","enableStartToTray","setEnableStartToTray","getEnableTray","enableTray","setEnableTray","defaultOnDiskMemoryOptions","encrypted","getEncryptedCollections","setEncryptedCollections","getEncryptedFolders","setEncryptedFolders","getEncryptedPasswordGenerationHistory","setEncryptedPasswordGenerationHistory","getEncryptedPolicies","setEncryptedPolicies","getEncryptedSends","setEncryptedSends","getEntityId","entityId","setEntityId","getEntityType","entityType","setEntityType","getEnvironmentUrls","getGlobalEnvironmentUrls","setEnvironmentUrls","getEquivalentDomains","setEquivalentDomains","getEventCollection","eventCollection","setEventCollection","getEverBeenUnlocked","everBeenUnlocked","setEverBeenUnlocked","getForcePasswordReset","setForcePasswordReset","getInstalledVersion","installedVersion","setInstalledVersion","getKdfIterations","setKdfIterations","getKdfType","setKdfType","getLastActive","lastSync","setLastSync","getLocale","setLocale","getMainWindowSize","mainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","minimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","neverDomains","getNoAutoPromptBiometrics","noAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","noAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","openAtLogin","setOpenAtLogin","getOrganizationInvitation","organizationInvitation","setOrganizationInvitation","setOrganizations","getPasswordGenerationOptions","passwordGenerationOptions","setPasswordGenerationOptions","getUsernameGenerationOptions","usernameGenerationOptions","setUsernameGenerationOptions","getGeneratorOptions","generatorOptions","setGeneratorOptions","getProtectedPin","protectedPin","setProtectedPin","getProviders","publicKeySerialized","getRefreshToken","setRefreshToken","getRememberedEmail","rememberedEmail","setRememberedEmail","getSecurityStamp","setSecurityStamp","getSettings","setSettings","getSsoCodeVerifier","ssoCodeVerifier","setSsoCodeVerifier","getSsoOrgIdentifier","ssoOrganizationIdentifier","setSsoOrganizationIdentifier","getSsoState","ssoState","setSsoState","getUsesKeyConnector","setUsesKeyConnector","vaultTimeout","setVaultTimeout","getVaultTimeoutAction","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","setServerConfig","serverConfig","getServerConfig","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","htmlStorageLocation","Local","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deepClone","JSON","parse","stringify","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","stateUpdater","updatedState","withPrototype","converter","originalResult","String","prototype","getOwnPropertyDescriptors","withPrototypeForArrayMembers","memberConstructor","memberConverter","withPrototypeForObjectValues","valuesConstructor","valuesConverter","entries","withPrototypeForMap","decoded","setTokens","clientIdClientSecret","setToken","setClientId","setClientSecret","getClientId","getClientSecret","getToken","clearTwoFactorToken","clearToken","storedToken","getTokenExpirationDate","exp","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","round","tokenNeedsRefresh","minutes","email_verified","getName","getIssuer","iss","getIsExternal","amr","v1Keys","autoConfirmFingerprints","enableBiometric","enableGravatars","encOrgKeys","encPrivate","history","lastActive","ssoIdentifier","stamp","usesConnector","v1KeyPrefixes","currentStateVersion","getCurrentStateVersion","Latest","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","Four","getAuthenticatedAccounts","migratedAccount","migrateAccountFrom4To5","setCurrentStateVersion","Five","migrateAccountFrom5To6","Six","clearV1Keys","clearingUserId","keyPrefix","defaultAccount","accountSettings","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","legacyEtmKey","authenticationStatus","authenticatedUserIds","encryptedOrgKeys","newVersion","OrganizationData","SyncService","sendService","providerService","folderApiService","logoutCallback","syncInProgress","_sync","Subject","sync$","toJSON","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","refreshIdentityToken","getSync","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","syncUpsertFolder","notification","isEdit","localFolder","remoteFolder","syncDeleteFolder","syncUpsertCipher","shouldUpdate","localCipher","checkCollections","remoteCipher","getFullCipherDetails","syncDeleteCipher","syncUpsertSend","localSend","remoteSend","getSend","sendId","syncDeleteSend","successfully","getAccountRevisionDate","userNeedsMigration","setConvertAccountRequired","removeConvertAccountRequired","eqDomains","global","B32Chars","SteamChars","TwoFactorProviders","Authenticator","priority","Yubikey","Duo","OrganizationDuo","Email","WebAuthn","VerifyOTPRequest","OTP","SecretVerificationRequest","AnonAddyForwarder","generate","anonaddy","requestInit","redirect","Authorization","website","DuckDuckGoForwarder","address","FastmailForwarder","accountId","getAccountId","using","methodCalls","emailPrefix","fastmail","prefix","methodResponses","created","notCreated","primaryAccounts","FirefoxRelayForwarder","generated_for","full_address","ForwarderOptions","FastmailForwarderOptions","AnonAddyForwarderOptions","SimpleLoginForwarder","Authentication","note","alias","wordCapitalize","wordIncludeNumber","subaddressType","catchallType","forwardedService","forwardedAnonAddyDomain","DecryptParameters","AuthGuard","routerState","authStatus","getAuthStatus","LoggedOut","Locked","promptBiometric","getConvertAccountRequired","LockGuard","homepage","loginpage","UnauthGuard","subscribers","messageCallback","unsubscribe","modalRef","showPassword","togglePassword","submit","close","modalService","component","protectedFields","showPasswordPrompt","open","allowMultipleModals","onClosedPromise","JslibServicesModule","provide","useValue","useFactory","translationLocale","deps","navigator","language","useClass","makeAndGetAppId","getAnonymousAppId","existingId","guid","logInStrategy","strategy","clearState","saveState","logOut","callback","authingWithApiKey","authingWithSso","authingWithPassword","Unlocked","preloginResponse","postPrelogin","startSessionTimeout","clearSessionTimeout","sessionTimeout","P","injector","_folders","_folderViews","folders$","folderViews$","unlocked","updateObservables","getAllDecryptedFromState","values","decryptFolders","updates","cId","foldersMap","decryptFolderPromises","decryptedFolders","noneFolder","useExisting","postFolder","putFolder","deleteFolder","deleteAccount","accountApiService","userVerificationService","verification","verificationRequest","buildRequest","collection","decCollections","decryptedCollections","collectionCopy","getNested","urlsSubject","scimUrl","setUrlsFromStorage","hasBaseUrl","getNotificationsUrl","notificationsUrl","getWebVaultUrl","webVaultUrl","getSendUrl","getIconsUrl","iconsUrl","getApiUrl","apiUrl","getIdentityUrl","identityUrl","getEventsUrl","eventsUrl","getScimUrl","envUrls","setUrls","formatUrl","scim","getUrls","isCloud","getCode","period","digits","keyB32","isOtpAuth","isSteamAuth","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","floor","timeBytes","keyBytes","b32ToBytes","sign","offset","binary","otp","fullCode","trunc","getTimeInterval","l","b32ToHex","cleanedInput","bits","hex","byteIndex","charAt","chunk","signature","hmac","generatePassword","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","enforcedPolicyOptions","getPasswordGeneratorPolicyOptions","currentPolicy","useUpper","useLower","minNumbers","saveOptions","getHistory","decryptHistory","addHistory","currentHistory","matchesPrevious","unshift","pop","newHistory","encryptHistory","passwordStrength","userInputs","globalUserInputs","finalUserInputs","normalizeOptions","str","num","item","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","generateUsername","generateCatchall","generateSubaddress","generateForwarded","generateWord","word","zeroPad","subaddressEmail","atIndex","emailBeginning","emailEnding","subaddressString","randomString","catchallDomain","startString","forwarder","forwarderOptions","forwardedSimpleLoginApiKey","forwardedAnonAddyApiToken","forwardedFirefoxApiToken","forwardedFastmailApiToken","forwardedDuckDuckGoToken","charSet","width","customUserAgent","isWebClient","isDesktopClient","IEBrowser","ChromeBrowser","EdgeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","UnknownBrowser","VivaldiBrowser","WindowsDesktop","MacOsDesktop","LinuxDesktop","Accept","identityToken","getClientType","qsStringify","getCredentials","responseJson","isJsonResponse","TwoFactorProviders2","HCaptcha_SiteKey","doAuthRefresh","getProfile","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","isDev","postEmailToken","postEmail","postPassword","setPassword","postSetKeyConnectorKey","postSecurityStamp","postPasswordHint","postRegister","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountVerifyPassword","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","getSsoUserIdentifier","postUserApiKey","postUserRotateApiKey","putUpdateTempPassword","postConvertToKeyConnector","getUserBillingHistory","getUserBillingPayment","postSendAccess","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCipherAdmin","postCipherAdmin","putCipherAdmin","deleteCipherAdmin","deleteManyCiphersAdmin","putCipherCollectionsAdmin","postPurgeCiphers","path","postImportCiphers","postImportOrganizationCiphers","putDeleteCipherAdmin","putDeleteManyCiphersAdmin","putRestoreCipherAdmin","getAttachmentData","emergencyAccessId","deleteCipherAttachmentAdmin","renewAttachmentUploadUrl","postAttachmentFile","getCollectionDetails","getUserCollections","getCollectionUsers","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteCollectionUser","getGroupDetails","getGroups","getGroupUsers","postGroup","putGroup","putGroupUsers","deleteGroup","deleteGroupUser","getOrganizationUser","getOrganizationUserGroups","getOrganizationUsers","getOrganizationUserResetPasswordDetails","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPasswordEnrollment","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","revokeOrganizationUser","revokeManyOrganizationUsers","restoreOrganizationUser","restoreManyOrganizationUsers","getPlans","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","btoa","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","postTwoFactorEmail","getDeviceVerificationSettings","putDeviceVerificationSettings","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getCloudCommunicationsEnabled","getOrganizationConnection","createOrganizationConnection","updateOrganizationConnection","organizationConnectionId","deleteOrganizationConnection","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","postProviderCreateOrganization","deleteProviderOrganization","getEvents","end","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProvider","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","getUserPublicKey","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getOrganizationExport","getApplicationVersion","preValidateSso","encodeURIComponent","postCreateSponsorship","sponsoredOrgId","isSelfHost","getSponsorshipSyncStatus","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","doRefreshToken","doApiTokenRefresh","deviceRequest","authed","hasResponse","alterHeaders","requestUrl","URL","href","tokenError","isTextResponse","Message","typeHeader","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","_settings","setVaultTimeoutOptions","action","currentAction","isPinLockSet","isBiometricLockSet","policyAppliesToUser","policy","vaultTimeoutSettingsService","lockedCallback","loggedOutCallback","inited","checkOnInterval","startCheck","checkVaultTimeout","setInterval","isViewOpen","shouldLock","executeTimeoutAction","lock","pinSet","vaultTimeoutSeconds","getExport","format","getEncryptedExport","getDecryptedExport","getPasswordProtectedExport","clearText","encKeyValidation","encText","jsonDoc","passwordProtected","encKeyValidation_DO_NOT_EDIT","getOrganizationEncryptedExport","getOrganizationDecryptedExport","getEventExport","getFileName","extension","getFullYear","padNumber","getMonth","getDate","getHours","getMinutes","getSeconds","decFolders","exportCiphers","buildCommonCipher","exportData","exportPromises","decCol","decCipher","collectionsMap","orgKey","padCharacter","numString","login_uri","login_username","login_password","login_totp","connected","inactive","reconnectTimer","signalrConnection","off","stop","withUrl","accessTokenFactory","skipNegotiation","transport","withHubProtocol","on","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","sync","reconnectFromActivity","disconnectFromInactivity","isAuthenticated","payloadUserId","UserId","myUserId","random","win","crypto","subtle","algorithm","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","n","okm","md","valueBytes","toByteString","update","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","hmacFast","bytes","getBytes","compareFast","rand","Uint32Array","putInt32","aesEncrypt","iv","aesDecryptFastParameters","mac","meta","encKeyByteString","macKeyByteString","encKeyB64","macData","macKeyB64","aesDecryptFast","parameters","dataBuffer","decipher","finish","output","aesDecrypt","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","arr","getRandomValues","buf","logMacFailures","plainBuf","encObj","macLen","resolveLegacyKey","fastParams","computedMac","logMacFailed","encThing","msg","uploadEvents","collect","eventType","uploadImmediately","orgIds","req","clearEvents","decryptedPolicies","diskPolicies","getMasterPasswordPolicyOptions","minComplexity","requireUpper","requireLower","requireNumbers","requireSpecial","evaluateMasterPassword","newPassword","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","mapPoliciesFromToken","policiesResponse","policyType","policyFilter","filteredPolicies","policySet","Accepted","isExcemptFromPolicies","organization","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","getPolicyForOrganization","getMasterPasswordPoliciesForInvitedUsers","putPolicy","fileData","passwordHash","ArrayBuffer","encryptFileData","parseFile","decSends","sendData","legacyServerSendFileUpload","removePasswordWithServer","loggedInUsingSso","requiredByOrganization","getManagingOrganization","userIsNotUsingKeyConnector","migrateUser","keyConnectorRequest","handleKeyConnectorError","userKeyResponse","keyArr","pubKey","privKey","setPasswordRequest","userVerificationApiService","requestClass","alreadyHashed","validateInput","secret","verifyUser","postAccountVerifyOTP","requestOTP","postAccountRequestOTP","getByIdentifier","canManageSponsorships","hasOrganizations","selectedTwoFactorProviderType","getSupportedProviders","twoFactorProvidersData","supportsDuo","supportsWebAuthn","getDefaultProvider","webAuthnSupported","providerType","providerPriority","_value","setSelectedProvider","clearProviders","getFormValidationErrors","controls","errors","control","controlErrors","keyError","controlName","errorName","getBilling","getSubscription","getLicense","getAutoEnrollStatus","createLicense","updatePayment","upgrade","updateSubscription","updateSeats","updateStorage","verifyBank","cancel","reinstate","leave","updateLicense","importDirectory","getOrCreateApiKey","getApiKeyInformation","organizationApiKeyType","rotateApiKey","updateTaxInfo","getKeys","updateKeys","getSso","updateSso","configApiService","_serverConfig","serverConfig$","switchMap","timer","E","buildServerConfig","fetchServerConfig","MemoryStorageService","store","BroadcasterMessagingService","broadcasterService","subscriber","arg","command","getDefaultDateFilters","setDate","toDateTimeLocalString","formatDateFilters","filterStart","filterEnd","getEventInfo","ev","EventOptions","appInfo","getAppInfo","getEventMessage","humanReadableMsg","formatCipherId","getShortId","formatCollectionId","formatGroupId","formatOrgUserId","formatPolicyId","p1","formatProviderUserId","formatProviderOrganizationId","Android","iOS","UWP","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","shortId","cipherInfo","makeAnchor","setAttribute","outerHTML","createElement","innerHTML","pad","norm","abs","HtmlStorageService","localStorage","getItem","sessionStorage","setItem","removeItem","ContainerService","attachToGlobal","bitwardenContainerService","getEncryptService","InitService","notificationsService","vaultTimeoutService","eventLoggingService","themingService","location","origin","ModalService","componentFactoryResolver","applicationRef","el","modalOpen","setupHandlers","onCreated","first","modals","querySelectorAll","modal","show","shown","focus","closed","onClose","PasswordRepromptComponent","PolicyListService","addPolicies","RouterService","activatedRoute","titleService","previousUrl","undefined","currentUrl","child","firstChild","titleId","snapshot","rawTitle","updateUrl","doNotSaveUrl","newTitle","setTitle","setPreviousUrl","getPreviousUrl","AccountSettings","Account","StateService","getRememberEmail","rememberEmail","setRememberEmail","FileDownloadBuilder","_request","blobOptions","fileType","blobData","downloadMethod","fileNameLower","endsWith","WebFileDownloadService","download","isSafari","createObjectURL","style","position","appendChild","click","removeChild","ClientType","WebPlatformUtilsService","browserCache","userAgent","chrome","Web","isFirefox","isChrome","isEdge","isOpera","isVivaldi","isMacAppStore","launchUri","sameWindow","rel","PublicKeyCredential","showDialog","confirmText","cancelText","bodyIsHtml","iconClasses","bootstrapModal","querySelector","removeAttribute","iconHtmlStr","confirmed","heightAuto","buttonsStyling","icon","iconHtml","html","titleText","showCancelButton","cancelButtonText","showConfirmButton","confirmButtonText","copyToClipboard","doc","clipboardData","setData","queryCommandSupported","textarea","textContent","copyEl","contains","select","execCommand","debug","console","warn","readFromClipboard","supportsBiometric","authenticateBiometric","CoreModule","parentModule","initService","multi","systemLanguage","localesDirectory","getLocalesJson","_locale","ReplaySubject","supportedTranslationLocales","localeNames","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","p2","p3","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","filePath","localesResult","migrationStateFrom1To2","getFlags","envFlags","flag","flags","EmergencyAccessAcceptRequest","BaseAcceptComponent","loading","requiredParameters","failedShortMessage","failedMessage","ngOnInit","qParams","errorMessage","authedHandler","unauthedHandler","navigate","AcceptEmergencyComponent","actionPromise","OrganizationUserAcceptRequest","AcceptOrganizationComponent","policyApiService","organizationApiService","prepareAcceptRequest","orgName","performResetPasswordAutoEnroll","encryptedKey","policyList","PasswordHintRequest","HintComponent","successRoute","formPromise","onSuccessfulSubmit","ngZone","pinLock","webVaultHostname","invalidPinAttempts","activeAccountSubscription","load","ngOnDestroy","handlePinRequiredUnlock","handleMasterPasswordRequiredUnlock","unlockBiometric","biometricLock","doContinue","input","getElementById","isStable","onStable","take","doUnlockWithPin","failed","setKeyAndContinue","doUnlockWithMasterPassword","passwordValid","decPin","hideInput","vaultUrl","LockComponent","routerService","navigateByUrl","PasswordLogInCredentials","SsoLogInCredentials","CaptchaIFrame","iframeId","successCallback","errorCallback","infoCallback","parseFunction","parseMessage","bind","connectorLink","sendMessage","iframe","src","contentWindow","postMessage","base64Encode","fromCharCode","cleanup","removeEventListener","createParams","URLSearchParams","parent","initComponent","addEventListener","validMessage","parsedMessage","height","CaptchaProtectedComponent","setupCaptcha","captcha","showCaptcha","handleCaptchaRequired","passwordGenerationService","twoFactorRoute","forcePasswordResetRoute","alwaysRememberEmail","selfHostedDomain","focusInput","onSuccessfulLoginTwoFactorNavigate","onSuccessfulLoginForceResetNavigate","onSuccessfulLoginNavigate","launchSsoBrowser","ssoRedirectUri","passwordOptions","numbers","codeVerifierHash","codeChallenge","webUrl","LoginComponent","showResetPasswordAutoEnrollWarning","goAfterLogIn","invite","resetPasswordPolicy","enforcedPasswordPolicyOptions","strengthResult","getPasswordStrengthUserInput","masterPasswordScore","score","policiesData","userInput","atPosition","DeleteRecoverRequest","RecoverDeleteComponent","TwoFactorRecoveryRequest","RecoverTwoFactorComponent","recoveryCode","InputsFieldMatch","matchTo","inputsMatchError","inputsDoesntMatchError","fieldMatchTo","formGroup","fieldCtrl","fieldMatchToCtrl","setErrors","RegisterRequest","referenceData","formValidationErrorService","formBuilder","isInTrialFlow","createdAccount","showTerms","showErrorSummary","group","confirmMasterPassword","hint","validateInputsDoesntMatch","acceptPolicies","acceptPoliciesValidation","validator","validateFormInputsMatch","accountCreated","registerResponse","registerAccount","buildRegisterRequest","successful","captchaRequired","emit","getStrengthResult","passwordStrengthResult","getPasswordScoreText","color","getErrorToastMessage","shift","errorTag","required","validateRegistration","markAllAsTouched","hasError","invalid","errorText","orgInvite","loginResponse","ReferenceEventRequest","PasswordStrengthComponent","showText","passwordScoreColor","scoreWidth","updatePasswordStrength","masterPasswordScoreColor","masterPasswordScoreText","ngOnChanges","masterPasswordStrengthTimeout","setPasswordScoreText","BitErrorSummary","errorCount","getErrorCount","errorString","form","acc","SubmitButtonComponent","buttonType","block","RegisterFormComponent","referenceDataValue","queryParamEmail","setValue","RegisterComponent","showCreateOrgMessage","layout","flow","reference","cookie","continuing","leaving","convert","RemovePasswordComponent","OrganizationUserResetPasswordEnrollmentRequest","SetPasswordRequest","strongPassword","setupSubmitActions","performSubmitActions","masterPasswordRetype","syncLoading","resetPasswordAutoEnroll","onSetPasswordSuccess","userEncKey","resetRequest","onSuccessfulChangePassword","confirmField","SetPasswordComponent","loggingIn","changePasswordRoute","checkState","getOrgIdentifierFromState","returnUri","includeUserIdentifier","initiateSsoFormPromise","authorizeUrl","buildAuthorizeUrl","userIdentifier","orgIdFromState","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","PlanType","ProductType","SsoComponent","storedIdentifier","VerticalStep","subLabel","applyBorder","VerticalStepContentComponent","onSelectStep","selected","selectStep","selectStepByIndex","VerticalStepperComponent","activeClass","isNextButtonHidden","steps","selectedIndex","isStepDisabled","_","completed","changedBusinessOwned","OrganizationInformationComponent","nameOnly","createOrganization","isProvider","acceptingSponsorship","LogoForbesComponent","LogoUSNewsComponent","EnterpriseContentComponent","TeamsContentComponent","ConfirmationDetailsComponent","PaymentMethodType","OrganizationCreateRequest","OrganizationKeysRequest","OrganizationUpgradeRequest","ProviderOrganizationCreateRequest","clientOwnerEmail","organizationCreateRequest","changeMethod","bank","lightInputColor","lightInputPlaceholderColor","darkInputColor","darkInputPlaceholderColor","PaymentComponent","showMethods","showOptions","Card","hideBank","hidePaypal","hideCredit","trialFlow","destroy$","routing_number","account_number","account_holder_name","account_holder_type","currency","btInstance","stripe","stripeElements","stripeCardNumberElement","stripeCardExpiryElement","stripeCardCvcElement","stripeScript","async","Stripe","elements","setStripeElement","btScript","StripeElementStyle","fontFamily","fontSize","fontSmoothing","StripeElementClasses","empty","PayPal","BankAccount","Credit","head","complete","btStylesheet","braintree","dropin","authorization","container","paymentOptionPriority","paypal","buttonStyle","label","shape","tagline","createErr","instance","createPaymentToken","requestPaymentMethod","nonce","handleCardSetup","setupIntent","payment_method","createToken","handleStripeCardPayment","handleCardPayment","paymentIntent","classes","placeholder","mount","takeUntil","TaxInfoUpdateRequest","OrganizationTaxInfoUpdateRequest","taxInfo","TaxInfoComponent","onCountryChanged","includeTaxId","pristine","taxRates","taxRate","localTaxRate","getTaxInfoRequest","submitTaxInfo","hasChanged","changeCountry","changedProduct","changedCountry","changedOwnedBusiness","OrganizationPlansComponent","showFree","showCancel","Free","onSuccess","onCanceled","onTrialBillingSuccess","selfHosted","productTypes","singleOrgPolicyBlock","discount","businessOwned","premiumAccessAddon","additionalStorage","additionalSeats","plans","Enterprise","Teams","Families","addValidators","selectedPlan","selectedPlanInterval","selectableProducts","validPlans","Custom","familyPlan","FamiliesAnnually","selectablePlans","additionalStoragePriceMonthly","seatPriceMonthly","additionalStorageTotal","seatTotal","subtotal","subTotal","freeTrial","taxCharges","taxComponent","total","paymentDesc","TeamsAnnually","paymentComponent","userHasBlockingSingleOrgPolicy","doSubmit","collectionCt","createSelfHosted","createCloudHosted","updateOrganization","subLabelText","billingSubLabelText","additionalStorageGb","billingAddressCountry","billingAddressPostalCode","orgShareKey","collectionName","tokenResult","paymentToken","taxIdNumber","billingAddressLine1","billingAddressLine2","billingAddressCity","billingAddressState","providerRequest","files","price","BillingComponent","previousStep","patchValue","orgInfoForm","stepBack","DefaultContentComponent","Enterprise1ContentComponent","Enterprise2ContentComponent","Teams1ContentComponent","Teams2ContentComponent","LogoCnetComponent","CnetEnterpriseContentComponent","CnetIndividualContentComponent","CnetTeamsContentComponent","AbmEnterpriseContentComponent","AbmTeamsContentComponent","billingSuccess","stepSelectionChange","navigateToOrgVault","navigateToOrgInvite","TrialInitiationComponent","titleCasePipe","orgInfoSubLabel","orgLabel","billingSubLabel","accountCreateOnly","validOrgs","orgInfoFormGroup","referenceDataId","referenceId","setupFamilySponsorship","transform","EnterpriseAnnually","previouslySelectedIndex","verticalStepper","previous","WebAuthnIFrame","webAuthnNewTab","btnText","allow","TwoFactorEmailRequest","webAuthnReady","selectedProviderType","webAuthn","twoFactorEmail","loginRoute","webAuthnAllow","authing","needsLock","cleanupWebAuthn","providerData","authWebAuthn","Host","sig_request","Signature","submit_callback","sig","sendEmail","doToast","emailPromise","Window","onProviderSelected","onRecoverSelected","choose","recover","TwoFactorOptionsComponent","TwoFactorComponent","anotherMethod","openViewRef","twoFactorOptionsModal","comp","PasswordRequest","currentMasterPassword","newMasterPasswordHash","UpdatePasswordComponent","OrganizationUserResetPasswordRequest","UpdateTempPasswordRequest","newPasswordHash","newEncKey","UpdateTempPasswordComponent","VerifyEmailRequest","VerifyEmailTokenComponent","VerifyDeleteRecoverRequest","VerifyRecoverDeleteComponent","HomeGuard","FrontendLayoutComponent","FooterComponent","AvatarComponent","sanitizer","charCount","textColor","fontWeight","dynamic","circle","chars","upperData","getFirstLetters","unicodeSafeSubstring","charObj","getCharText","svg","getSvg","svgHtml","unescape","count","svgTag","backgroundColor","character","textTag","characters","StopPropDirective","onClick","$event","stopPropagation","MenuItemDirective","elementRef","role","tabIndex","nativeElement","MenuComponent","ngAfterContentInit","keyManager","menuItems","withWrap","MenuTriggerForDirective","viewContainerRef","overlay","isOpen","hasPopup","defaultMenuConfig","panelClass","hasBackdrop","backdropClass","scrollStrategy","scrollStrategies","reposition","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","withLockedPosition","withFlexibleDimensions","withPush","toggleMenu","destroyMenu","openMenu","disposeAll","menu","overlayRef","templatePortal","templateRef","attach","closedEventsSub","getClosedEvents","keyDownEventsSub","keydownEvents","onKeydown","detachments","escKey","backdrop","backdropClick","menuClosed","mergeWith","dispose","MenuDividerComponent","NavbarComponent","buildOrganizations","run","UserLayoutComponent","OrganizationSwitcherComponent","activeOrganization","loaded","BroadcasterSubscriptionId","OrganizationLayoutComponent","showManageTab","showToolsTab","showSettingsTab","toolsRoute","manageRoute","SelectionReadOnlyRequest","selectAll","check","CollectionAddEditComponent","onSavedCollection","onDeletedCollection","editMode","accessGroups","groupsResponse","checked","deletePromise","styles","primary","secondary","danger","hoverStyles","BadgeDirective","badgeType","hasHoverEffects","nodeName","selectedChanged","filterSelected","EntityUsersComponent","onEditedUsers","organizationUserType","organizationUserStatusType","showSelected","selectedCount","allUsers","loadUsers","users","searchedUsers","searchText","scrollViewportStyle","entity","selections","loadMore","CollectionsComponent","canCreate","didScroll","pageSize","pagedCollectionsCount","decryptCollections","assignedCollections","resetPaging","pagedLength","pagedCollections","pagedSize","canEdit","canDelete","addEditModalRef","canSave","removeCollection","usersModalRef","entityName","isSearching","isPaging","searching","EventView","BaseEventsComponent","eventService","exportService","fileDownloadService","dirtyDates","defaultDates","exportEvents","appApiPromiseUnfulfilled","dates","parseDates","exportPromise","export","loadEvents","clearExisting","loadAndParseEvents","refreshPromise","morePromise","startDate","endDate","requestEvents","eventInfo","getUserName","exportFileName","EventsComponent","userNamePipe","orgUsersUserIdMap","GroupRequest","GroupAddEditComponent","onSavedGroup","onDeletedGroup","access","loadCollections","GroupsComponent","pagedGroupsCount","pagedGroups","removeGroup","ManageComponent","OrganizationUserBulkRequest","OrganizationUserConfirmRequest","UserConfirmComponent","onConfirmedUser","dontAskAgain","fingerprint","BasePeopleComponent","validationService","searchPipe","statusMap","pagedUsers","activeUsers","pagedUsersCount","allCount","invitedCount","userStatusType","Invited","acceptedCount","confirmedCount","revokedCount","Revoked","showConfirmUsers","showBulkConfirmUsers","getUsers","checkUser","filteredUsers","selectCount","removeUserConfirmationDialog","deleteUser","removeUser","showError","revoke","revokeWarningMessage","revokeUser","restoreUser","reinvite","reinviteUser","confirm","confirmUser","mapIndex","updateUser","publicKeyResponse","autoConfirm","confirmModalRef","getCheckedUsers","OrganizationUserBulkConfirmRequest","publicKeys","fingerprints","statuses","done","excludedUsers","isAccepted","getPublicKeys","entry","getCryptoKey","userIdsWithKeys","postConfirmRequest","deleteUsers","removeUsersWarning","BulkRestoreRevokeComponent","isRevoking","bulkTitle","titleKey","performBulkUserAction","bulkMessage","BulkStatusComponent","EntityEventsComponent","showUser","orgUsersIdMap","ResetPasswordComponent","onPasswordReset","loggedOutWarningName","passwordStrengthComponent","copy","orgSymKey","decPrivateKey","OrganizationUserInviteRequest","emails","OrganizationUserUpdateRequest","NestedCheckboxComponent","onSavedUser","onDeletedUser","parentIndeterminate","parentChecked","checkboxes","pascalize","handleDependentPermissions","UserAddEditComponent","onRevokedUser","onRestoredUser","isRevoked","User","showCustom","manageAllCollectionsCheckboxes","manageAssignedCollectionsCheckboxes","customUserTypeSelected","setRequestPermissions","clearPermissions","OrganizationUserUpdateGroupsRequest","groupIds","UserGroupsComponent","userGroups","ug","bulkConfirm","resetPassword","PeopleComponent","userType","accessEvents","canResetPassword","orgUseResetPassword","orgHasKeys","orgResetPasswordPolicyEnabled","callingUserType","viewEvents","allowResetPassword","orgUser","callingUserHasPermission","showEnrolledStatus","groupsModalRef","bulkRemove","bulkRemoveModalRef","bulkRevoke","bulkRevokeOrRestore","bulkRestore","bulkReinvite","showBulkStatus","bulkConfirmModalRef","eventsModalRef","resetPasswordModalRef","warningMessage","successfullMessage","childComponent","bulkStatusModalRef","onShown","keyedErrors","keyedFilteredUsers","PolicyRequest","BasePolicy","display","BasePolicyComponent","policyResponse","loadData","buildRequestData","policiesEnabledMap","PolicyEditComponent","cdr","onSavedPolicy","ngAfterViewInit","factory","resolveComponentFactory","policyComponent","policyFormRef","createComponent","detectChanges","Enabled","PoliciesComponent","policyListService","policyIdFromEvents","orgPolicy","orgPolicies","op","editModalRef","OrganizationUpdateRequest","ApiKeyComponent","postKey","PurgeVaultComponent","CountBasedLocalizationKey","singular","plural","OrganizationContentSummaryItem","localizationKeyOptions","localizationKey","OrganizationContentSummary","totalItemCount","itemCountByType","DeleteOrganizationComponent","deleteOrganizationRequestType","organizationContentSummary","buildOrganizationContentSummary","organizationItems","cipherType","getOrganizationItemCountByType","getOrganizationItemLocalizationKeysByType","viewApiKey","AccountComponent","canUseApi","taxFormPromise","deleteOrganization","deleteModalRef","purgeVault","purgeModalRef","apiKeyModalRef","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","rotateApiKeyModalRef","isRotation","TransactionType","VerifyBankRequest","BitPayInvoiceRequest","AddCreditComponent","onAdded","ppLoading","payPalConfig","ppButtonFormAction","ppButtonBusinessId","creditAmount","ppButtonCustomField","subject","returnUrl","ppButtonFormRef","BitPay","credit","creditAmountNumber","bitPayUrl","formatAmount","floatAmount","parseFloat","toFixed","PaymentRequest","AdjustPaymentComponent","onAdjusted","taxInfoComponent","addCredit","closeAddCredit","changePayment","closePayment","OrganizationBillingComponent","firstLoaded","showAdjustPayment","showAddCredit","transactionType","billing","amount1","verifyAmount1","amount2","verifyAmount2","verifyBankPromise","paymentSourceInApp","isCreditBalance","creditOrBalance","AppleInApp","GoogleInApp","OrganizationApiKeyType","OrganizationConnectionType","BillingSyncConfigApi","billingSyncKey","BillingSyncConfigRequest","OrganizationConnectionRequest","BillingSyncKeyComponent","CloudBillingSync","existingConnectionId","setParentConnection","deleteConnection","OrganizationApiKeyRequest","Default","cancelRotate","rotateToken","BillingSyncApiKeyComponent","showRotateScreen","BillingSync","keyRevisionDate","hasBillingToken","syncStatus","dayDiff","date1","date2","diffTime","submitButtonText","showLastSyncText","showAwaitingSyncText","daysBetween","StorageRequest","AdjustStorageComponent","storageGbPrice","storageAdjustment","storageGbAdjustment","paymentFailed","relativeTo","adjustedStorageTotal","OrganizationSubscriptionUpdateRequest","seatAdjustment","AdjustSubscription","limitSubscription","newSeatCount","currentSeatCount","newMaxSeats","limitSubscriptionChanged","adjustedSeatTotal","maxSeatTotal","ChangePlanComponent","onChanged","defaultUpgradePlan","defaultUpgradeProduct","DownloadLicenseComponent","onDownloaded","licenseString","ImageSubscriptionHiddenComponent","UpdateLicenseComponent","onUpdated","updatePromise","changePlan","closeChangePlan","subscriptionAdjusted","removeSponsorship","adjustStorage","closeStorage","downloadLicense","manageBillingSync","closeDownloadLicense","closeUpdateLicense","manageBillingSyncSelfHosted","OrganizationSubscriptionComponent","adjustSeatsAdd","showAdjustSeats","showAdjustSeatAutoscale","adjustStorageAdd","showAdjustStorage","showUpdateLicense","showBillingSyncKey","showDownloadLicense","showChangePlan","userOrg","apiKeyResponse","hasBillingSyncToken","existingBillingSyncConnection","reinstatePromise","cancelPromise","changed","setupBillingSyncModalRef","onClosed","updated","removeSponsorshipPromise","billingSyncKeyRef","billingSyncKeyViewContainerRef","connection","isExpired","subscriptionMarkedForCancel","nextInvoice","storagePercentage","storageProgressWidth","billingInterval","canAdjustSeats","isSponsoredSubscription","canDownloadLicense","canManageBillingSync","EnterpriseMonthly","EnterpriseAnnually2019","EnterpriseMonthly2019","subscriptionDesc","FamiliesAnnually2019","showChangePlanButton","billingSyncSetUp","SettingsComponent","access2fa","showBilling","UpdateTwoFactorDuoRequest","TwoFactorProviderRequest","TwoFactorBaseComponent","twoFactorProviderType","auth","authResponse","hashedSecret","verificationType","enable","enableFunction","buildRequestModel","TwoFactorVerifyComponent","onAuthed","TwoFactorDuoComponent","processResponse","ikey","skey","DeviceVerificationRequest","UpdateTwoFactorAuthenticatorRequest","TwoFactorAuthenticatorComponent","qrScript","QRious","element","UpdateTwoFactorEmailRequest","TwoFactorEmailComponent","sentEmail","print","TwoFactorRecoveryComponent","w","write","onafterprint","formatString","UpdateTwoFactorWebAuthnDeleteRequest","UpdateTwoFactorWebAuthnRequest","readKey","TwoFactorWebAuthnComponent","keyIdAvailable","keysConfiguredCount","webAuthnResponse","removePromise","challengePromise","readDevice","webAuthnChallenge","resetWebAuthn","webAuthnListening","webAuthnError","listening","configured","UpdateTwoFactorYubioOtpRequest","TwoFactorYubiKeyComponent","disablePromise","existingKey","padRight","defaultIcon","defaultI18n","CalloutComponent","useAlertRole","calloutClass","headerClass","NotPremiumDirective","viewContainer","createEmbeddedView","premiumRequired","PremiumBadgeComponent","manage","showPolicyWarning","canAccessPremium","deviceVerificationSettings","enableDeviceVerification","filterProvider","evaluatePolicies","openModal","authenticatorModalRef","updateStatus","yubikeyModalRef","duoModalRef","emailModalRef","webAuthnModalRef","recoveryModalRef","TwoFactorSetupComponent","duoComp","auditService","passwordRepromptService","cloneMode","onSavedCipher","onDeletedCipher","onRestoredCipher","onCancelled","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","onGenerateUsername","showCardNumber","showCardCode","ownershipOptions","currentDate","allowPersonal","canUseReprompt","typeOptions","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","uriMatchOptions","autofillOnPageLoadOptions","myEmail","writeableCollections","loadCipher","organizationChanged","previousCipherId","encryptCipher","saveCipher","addUri","removeUri","trackByFunction","share","editCollections","restorePromise","restoreCipher","toggleCardNumber","toggleCardCode","toggleUriOptions","loginUriMatchChanged","checkPassword","checkPasswordPromise","repromptChanged","addFieldType","linkedFieldOptions","fieldType","addFieldTypeOptions","addFieldLinkedTypeOption","changes","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","newField","removeField","toggleFieldValue","showValue","drop","previousIndex","currentIndex","linkedFieldOption","i18nKey","TrueFalseValueDirective","renderer","trueValue","falseValue","propagateChange","onHostChange","writeValue","setProperty","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","AddEditCustomFieldsComponent","upgradeOrganization","launch","viewHistory","toggleFavorite","totpService","showRevisionDate","hasPasswordHistory","viewingPasswordHistory","viewOnly","passwordRevisionDisplayDate","cleanUp","totpUpdateCode","totpTick","totpInterval","canLaunch","typeI18nKey","aType","showGetPremium","clearInterval","totpCode","half","totpCodeFormatted","allowOwnershipAssignment","intervalSeconds","totpSec","totpDash","totpLow","AddEditComponent","CipherReportComponent","requiresPaid","hasLoaded","setCiphers","selectCipher","repromptCipher","cipherAddEditModalRef","checkAccess","FallbackSrcDirective","onError","appFallbackSrc","cardIcons","Visa","Mastercard","Amex","Discover","JCB","Maestro","UnionPay","RuPay","Mir","IconComponent","image","fallbackImage","imageEnabled","setLoginIcon","setCardIcon","hostnameUri","isWebsite","exposedPasswordMap","allCiphers","getAllCiphers","exposedPasswordCiphers","exposedCount","canManageCipher","ExposedPasswordsReportComponent","manageableCiphers","services","cipherDocs","load2fa","inactive2faCiphers","docs","service","serviceData","documentation","additionalDomain","InactiveTwoFactorReportComponent","ciphersWithPasswords","passwordUseMap","reusedPasswordCiphers","ReusedPasswordsReportComponent","ToolsComponent","unsecuredCiphers","UnsecuredWebsitesReportComponent","passwordStrengthMap","passwordStrengthCache","weakPasswordCiphers","isUserNameNotEmpty","getCacheKey","hasUserName","scoreKey","WeakPasswordsReportComponent","PipesModule","VaultService","calculateSearchBarLocalizationString","vaultFilter","selectedFolderId","selectedCollection","selectedOrganizationId","myVaultOnly","VaultSharedModule","VaultFilter","selectedFolder","refreshCollectionsAndFolders","resetFilter","selectedCollectionId","resetOrganization","buildFilter","cipherPassesFilter","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","hasUpdatedKey","fileEl","saveCipherAttachment","cipherDomain","downloading","canAccessAttachments","reuploadCipherAttachment","foundAttachment","a2","reupload","showFixOldAttachments","AttachmentsComponent","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","searchPlaceholder","searchPending","searchTimeout","deletedFilter","applyFilter","reload","refresh","indexedCiphers","doSearch","rightClickCipher","addCipher","addCipherOptions","EllipsisPipe","completeWords","ellipsis","OrganizationNameBadgeComponent","onOrganizationClicked","profileName","emitOnOrganizationClicked","GetOrgNameFromIdPipe","clone","checkCipher","showAddNew","onAttachmentsClicked","onShareClicked","onCollectionsClicked","onCloneClicked","onOrganzationBadgeClicked","pagedCiphers","userHasPremiumAccess","pagedCiphersCount","refreshing","permanent","displayTotpCopyButton","getSelected","getSelectedIds","hasOldAttachments","CiphersComponent","onEventsClicked","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","vaultFilterService","activeFilter","hideFolders","hideCollections","hideFavorites","hideTrash","hideOrganizations","onFilterChange","onAddFolder","onEditFolder","isLoaded","displayCollections","activePersonalOwnershipPolicy","checkForPersonalOwnershipPolicy","activeSingleOrganizationPolicy","checkForSingleOrganizationPolicy","buildNestedFolders","initCollections","buildCollections","toggleFilterNodeCollapseState","node","reloadCollectionsAndFolders","pruneInvalidatedFilterSelections","reloadOrganizations","addFolder","editFolder","pruneInvalidFolderSelection","pruneInvalidCollectionSelection","hasId","hide","onNodeCollapseStateChange","collectionsGrouping","collectionNodes","isCollapsed","toggleCollapse","CollectionFilterComponent","foldersGrouping","folderNodes","nestedFolders","FolderFilterComponent","cipherStatus","StatusFilterComponent","selectedCipherType","typesNode","cipherTypeEnum","TypeFilterComponent","organizationGrouping","displayMode","hasActiveFilter","applyOrganizationFilter","applyMyVaultFilter","clearFilter","EnrollMasterPasswordReset","toastStringRef","keyString","LinkSsoComponent","toggleResetPasswordEnrollment","unlinkSso","OrganizationOptionsComponent","allowEnrollmentChanges","OrganizationFilterComponent","displayText","searchTextChanged","onSearchTextChanged","VaultFilterComponent","BulkDeleteComponent","cipherIds","onDeleted","deleteCiphersAdmin","deleteCiphers","deleteRequest","BulkMoveComponent","onMoved","BulkRestoreComponent","onRestored","BulkShareComponent","onShared","nonShareableCount","shareableCiphers","allCollections","filterCollections","checkedCollectionIds","bulkMove","bulkShare","BulkActionsComponent","bulkDelete","promptPassword","selectedIds","ciphersComponent","bulkDeleteModalRef","bulkRestoreModalRef","selectedCiphers","bulkShareModalRef","bulkMoveModalRef","VaultComponent","changeDetectorRef","vaultService","trashCleanupWarning","vaultFilterComponent","getCipherIdFromParams","editCipherId","queryParamsHandling","applyVaultFilter","go","filterSearchText","editCipherAttachments","madeAttachmentChanges","attachmentsModalRef","editCipherCollections","collectionsModalRef","editCipher","cloneCipher","replaceUrl","routes","VaultRoutingModule","VaultModule","children","pathMatch","redirectTo","loadChildren","m","OrganizationImportExportModule","OrganizationsRoutingModule","PlanSponsorshipType","AcceptFamilySponsorshipComponent","register","OrganizationSponsorshipRedeemRequest","FamiliesForEnterpriseSetupComponent","badToken","showNewOrganization","_selectedFamilyOrganizationId","organizationPlansComponent","onOrganizationCreateSuccess","existingFamilyOrganizations","selectedFamilyOrganizationId","planSponsorshipType","FamiliesForEnterprise","sponsoredOrganizationId","HasPremiumGuard","userHasPremium","ReportVariant","BreachReportComponent","checkedUsername","Icon","DynamicContentNotAllowedError","svgIcon","strings","ReportBreach","ReportExposedPasswords","ReportInactiveTwoFactor","ReportReusedPasswords","ReportUnsecuredWebsites","ReportWeakPasswords","ReportType","reports","ExposedPasswords","ReusedPasswords","WeakPasswords","UnsecuredWebsites","Inactive2fa","DataBreach","BitIconComponent","domSanitizer","innerHtml","bypassSecurityTrustHtml","ReportCardComponent","variant","requiresPremium","RequiresPremium","ReportListComponent","ReportsHomeComponent","reportRequiresPremium","ReportsLayoutComponent","ReportsRoutingModule","ReportsModule","SendAccessView","SendAccess","SendAccessRequest","toggleText","copyText","AccessComponent","sendType","passwordRequired","unavailable","sendText","downloadData","accessRequest","keyArray","sendAccess","disableSend","filteredSends","hasSearched","onSuccessfulLoad","applyTextSearch","removePassword","onSuccessfulRemovePassword","onSuccessfulDelete","link","clearSelections","selectedAll","selectType","selectedType","BrowserPath","DateField","DatePreset","datePipe","onSavedSend","onDeletedSend","copyLink","disableHideEmail","alertShown","sendLinkBaseUrl","isDateTimeLocalSupported","setDates","loadSend","hasPassword","encryptSend","encSend","uploadPromise","copySuccess","copyLinkToClipboard","typeChanged","toggleOptions","togglePasswordVisible","datesChanged","datesForm","selectedDeletionDatePreset","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","expirationDatePresets","Never","browserPath","Firefox","Safari","formattedDeletionDate","miliseconds","formattedExpirationDate","safariDeletionTimePresetOptions","safariTimePresetOptions","DeletionDate","safariExpirationTimePresetOptions","ExpriationDate","nextWeek","setInitialFormValues","emitDates","valueChanges","onDeletionDatePresetSelect","clearExpiration","initialDeletionDate","toTimeString","initialExpirationDate","twentyFourHour","noon","midnight","ams","pms","hour","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","EffluxDatesComponent","editSend","addSend","SendComponent","sendAddEditModalRef","DeauthorizeSessionsComponent","DeleteAccountComponent","accountService","deleteForm","EmailTokenRequest","EmailRequest","reset","ChangeEmailComponent","tokenSent","showTwoFactorEmailWarning","newEmail","UpdateProfileRequest","ProfileComponent","showChangeEmail","deauthorizeSessions","deauthModalRef","CreateOrganizationComponent","orgPlansComponent","UpdateDomainsRequest","toggleExcluded","customize","DomainRulesComponent","custom","globalDomain","excludedGlobalEquivalentDomains","d2","indexTrackBy","EmergencyAccessAttachmentsComponent","EmergencyAddEditComponent","viewAttachments","EmergencyAccessViewComponent","oldKeyBuffer","oldEncKey","cipherData","EmergencyAccessStatusType","EmergencyAccessType","EmergencyAccessConfirmRequest","EmergencyAccessInviteRequest","EmergencyAccessUpdateRequest","EmergencyAccessAddEditComponent","onSaved","View","emergencyAccessType","waitTimes","emergencyAccess","waitTime","EmergencyAccessConfirmComponent","onConfirmed","EmergencyAccessPasswordRequest","EmergencyAccessTakeoverComponent","onDone","takeoverResponse","approve","requestAccess","takeover","EmergencyAccessComponent","emergencyAccessStatusType","isOrganizationOwner","trustedContacts","grantedContacts","contact","doConfirmation","removeGrantee","removeGrantor","RecoveryInitiated","RecoveryApproved","takeoverModalRef","hours","CUSTOM_VALUE","exceedsMinimumTimout","customTimeInMinutes","MIN_CUSTOM_MINUTES","vaultTimeoutPolicy","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","vaultTimeouts","validatorChange","onChange","current","onTouched","validate","policyError","minTimeoutError","registerOnValidatorChange","VaultTimeoutInputComponent","PreferencesComponent","localeOptions","themeOptions","enableFavicons","startingLocale","startingTheme","valid","vaultTimeoutActionChanged","newValue","FolderWithIdRequest","SendWithIdRequest","UpdateKeyRequest","ChangePasswordComponent","rotateEncKey","rotateEncKeyClicked","updateKey","updateEmergencyAccesses","updateAllResetPasswordKeys","allowedStatuses","filteredAccesses","updateRequest","KdfRequest","ChangeKdfComponent","kdfOptions","recommendedKdfIterations","SecurityKeysComponent","showChangeKdf","viewUserApiKey","viewUserApiKeyModalRef","rotateUserApiKey","rotateUserApiKeyModalRef","SecurityComponent","showChangePassword","SecurityRoutingModule","hasFamilySponsorshipAvailable","hasPremiumFromOrg","hideSubscription","notAllowedValueAsync","valueGetter","caseInsensitive","notAllowedValue","controlValue","resendEmail","SponsoringOrgRowComponent","sponsoringOrg","isSelfHosted","sponsorshipRemoved","statusMessage","statusClass","setStatus","revokeSponsorship","revokeSponsorshipPromise","doRevokeSponsorship","resendEmailPromise","isSentAwaitingSync","toDelete","validUntil","SponsoredFamiliesComponent","availableSponsorshipOrgs","activeSponsorshipOrgs","sponsorshipForm","selectedSponsorshipOrgId","validators","sponsorshipEmail","asyncValidators","updateOn","sponsoredEmail","friendlyName","resetForm","forceReload","allOrgs","sponsorshipEmailControl","anyActiveSponsorships","anyOrgsAvailable","PaymentMethodComponent","PremiumComponent","premiumPrice","finalizePremium","paymentResponse","SubscriptionComponent","hasPremium","subscriptionRoute","UserBillingHistoryComponent","UserSubscriptionComponent","SubscriptionRoutingModule","usernameGenerationService","comingFromAddEdit","onSelected","usernameOptions","avoidAmbiguous","usernameWebsite","passTypeOptions","usernameTypeOptions","desc","subaddressOptions","catchallOptions","forwardOptions","passwordOptionsResponse","websiteOption","regenerateWithoutButtonPress","regenerate","regeneratePassword","regenerateUsername","sliderChanged","savePasswordOptions","sliderInput","normalizePasswordOptions","saveUsernameOptions","usernameGeneratingPromise","copyOptions","SelectCopyDirective","onCopy","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","ColorPasswordPipe","generateTemplate","templateGenerator","passwordArray","colorizedPassword","isSpecial","PasswordGeneratorHistoryComponent","lengthChanged","minNumberChanged","minSpecialChanged","GeneratorComponent","findIndex","historyModalRef","UpdateKeyComponent","makeRequest","onSavedFolder","onDeletedFolder","FolderAddEditComponent","onSharedCipher","cipherView","ShareComponent","VerifyEmailComponent","showVerifyEmail","showBrowserOutdated","showUpdateKey","showPremiumCallout","filterComponent","isShowingCards","shareCipher","shareModalRef","folderAddEditModalRef","updateKeyModalRef","favorites","flagName","ImportExportModule","OssRoutingModule","useHash","paramsInheritanceStrategy","VerticalStepperModule","TrialInitiationModule","OrganizationManageModule","OrganizationUserModule","OssModule","WildcardRoutingModule","ProviderAddOrganizationRequest","WebProviderService","addOrganizationToProvider","encryptedOrgKey","detachOrganizastion","AddOrganizationComponent","webProviderService","onAddedOrganization","ProviderPermissionsGuard","providerPermissions","ProvidersComponent","addExistingOrganization","DisallowedPlanTypes","ClientsComponent","manageOrganizations","showAddExisting","pagedClientsCount","clients","candidateOrgs","allowedOrgsIds","addableOrganizations","pagedClients","addModalRef","ProviderUserAcceptRequest","AcceptProviderComponent","providerUsersUserIdMap","providerUsersIdMap","ProviderUserBulkRequest","ProviderUserConfirmRequest","ProviderUserBulkConfirmRequest","BulkConfirmComponent","BulkRemoveComponent","ProviderUserInviteRequest","ProviderUserUpdateRequest","ServiceUser","ProvidersLayoutComponent","showMenuBar","ProviderUpdateRequest","SetupProviderComponent","ProviderSetupRequest","SetupComponent","ProvidersRoutingModule","ProvidersModule","registerComponentFactoryResolver","SecretsManagerModule","AppRoutingModule","DisableSendPolicy","DisableSendPolicyComponent","MasterPasswordPolicy","MasterPasswordPolicyComponent","showKeyConnectorInfo","passwordScores","PasswordGeneratorPolicy","PasswordGeneratorPolicyComponent","defaultTypes","PersonalOwnershipPolicy","PersonalOwnershipPolicyComponent","RequireSsoPolicy","RequireSsoPolicyComponent","singleOrgEnabled","ResetPasswordPolicy","ResetPasswordPolicyComponent","SendOptionsPolicy","SendOptionsPolicyComponent","SingleOrgPolicy","SingleOrgPolicyComponent","TwoFactorAuthenticationPolicy","TwoFactorAuthenticationPolicyComponent","toastrService","lastActivity","idleTimer","isIdle","lang","runOutsideAngular","onmousemove","recordActivity","onmousedown","ontouchstart","onclick","onscroll","onkeypress","setFullWidth","idleStateChanged","sanitize","enableHtml","trustedHtml","timeOut","DisablePersonalVaultExportPolicy","DisablePersonalVaultExportPolicyComponent","MaximumVaultTimeoutPolicy","MaximumVaultTimeoutPolicyComponent","AppComponent","ScimConfigApi","scimProvider","ScimConfigRequest","copyScimUrl","rotateScimKey","copyScimKey","ScimComponent","showScimSettings","formData","endpointUrl","Scim","setConnectionFormValues","loadApiKey","apiKeyRequest","getScimEndpointUrl","rotatePromise","dirtyRequired","dirty","OrganizationSsoRequest","SsoConfigView","A11yInvalidDirective","formControlDirective","statusChanges","InputStripSpacesDirective","onInput","BaseCvaComponent","controlDir","internalControl","onValueChangesInternal","valueAccessor","describedById","showDescribedBy","controlId","helperText","isRequired","hasValidator","onBlurInternal","InputCheckboxComponent","InputTextComponent","stripSpaces","transformValue","emitEvent","doStripSpaces","onValueChangeInternal","InputTextReadOnlyComponent","showCopy","showLaunch","SelectComponent","validateKeyConnectorUrl","toggleOpenIdCustomizations","defaultSigningAlgorithm","ssoType","ssoTypeOptions","None","samlSigningAlgorithms","saml2SigningBehaviourOptions","IfIdpWantAuthnRequestsSigned","Always","saml2BindingTypeOptions","HttpRedirect","HttpPost","saml2NameIdFormatOptions","NotConfigured","Unspecified","EmailAddress","X509SubjectName","WindowsDomainQualifiedName","KerberosPrincipalName","EntityIdentifier","Persistent","Transient","connectRedirectOptions","RedirectGet","FormPost","showOpenIdCustomizations","haveTestedKeyConnector","openIdForm","samlForm","ssoConfigForm","newType","updateValueAndValidity","ssoSettings","populateForm","validateForm","readOutErrors","fromView","markAsPending","invalidUrl","enableTestKeyConnector","samlSigningAlgorithmOptions","markAsDirty","markAsTouched","ssoConfigView","errorCountText","div","className","innerText","existing","OrganizationsModule","AppModule","bootstrapModule","preserveWhitespaces","calloutStyle","enforcedPolicyMessage","getPasswordScoreAlertDisplay","ModalRef","_onCreated","_onClose","_onClosed","_onShow","_onShown","onShow","lastResult","toPromise","UserVerificationComponent","disableRequestOTP","sentCode","processChanges","opacity","A11yTitleDirective","appA11yTitle","hasAttribute","ApiActionDirective","appApiAction","AutofocusDirective","appAutofocus","condition","autofocus","InputVerbatimDirective","appInputVerbatim","disableComplete","StopClickDirective","preventDefault","BitwardenToast","toastPackage","BitwardenToastGlobalConfig","toastComponent","BitwardenToastModule","ngModule","default","numberFormats","cardLength","blocks","Other","CreditCardNumberPipe","creditCardNumber","rules","matchingRule","chunks","JslibModule","forRoot","maxOpened","autoDismiss","closeButton","I18nPipe","SearchPipe","prop1","prop2","prop3","UserNamePipe","DynamicModalComponent","cd","focusTrapFactory","loadChildComponent","childComponentType","setComponentParameters","componentRef","focusTrap","focusFirstTabbableElementWhenReady","componentType","componentFactory","modalContentRef","destroy","getFocus","autoFocusEl","ModalInjector","_parentInjector","_additionalTokens","notFoundValue","ModalConfig","modalList","factoryResolvers","modalCount","topModal","modalComponentRef","openInternal","insert","hostView","replaceTopModal","closeAll","attachToDom","createModalComponent","attachView","domElem","rootNodes","detachView","modalEl","dialogEl","zIndex","prepend","closeElement","WeakMap","ValidationService","defaultErrorMessage","validationErrors","getAllMessages","DynamicTreeNode","transformation","storedFolders","orgCiphers","oc","getAllFoldersNested","storedCollections","folderCopy","getFolderNested","ApiService","CollectionService","EventService","ExportService","FileDownloadService","FolderService","InternalFolderService","I18nService","KeyConnectorService","LogService","OrganizationService","PlatformUtilsService","PolicyService","InternalPolicyService","UserVerificationService","CipherRepromptType","CipherType","EncryptionType","EventType","FieldType","KdfType","DEFAULT_KDF_TYPE","PBKDF2_SHA256","DEFAULT_KDF_ITERATIONS","SEND_KDF_ITERATIONS","LoginLinkedId","CardLinkedId","IdentityLinkedId","PolicyType","SecureNoteType","UriMatchType","VerificationType","LinkedMetadata","_i18nKey","TreeNode","ServiceUtils","nodeTree","partIndex","delimiter","partName","nestedTraverse","newPartName","getTreeNodeObject","getDomain","nodeURL","Utils","isNode","process","release","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","binaryString","atob","charCodeAt","fromB64ToArray","fromUrlB64ToB64","strUtf8","fromB64toUrlB64","fromBufferToB64","b64Str","encodedString","decodeURIComponent","escape","call","urlB64Str","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","uriString","getUrl","httpUrl","tldEndingRegex","getUrlObject","validIpAddress","urlDomain","pair","source","bgColor","threshold","svgTextFill","bgColorHexNums","ipString","mobile","vendor","opera","hasProtocol","anchor","regexpEmojiPresentation","CardApi","FieldApi","IdentityApi","LoginApi","LoginUriApi","SecureNoteApi","AttachmentData","CardData","CipherData","CollectionData","FieldData","IdentityData","LoginData","LoginUriData","PasswordHistoryData","SecureNoteData","Attachment","decryptAttachmentKey","getKeyForDecryption","toAttachmentData","buildDataModel","toCardData","Cipher","decAttachment","decField","decPh","toLoginData","toSecureNoteData","toIdentityData","toFieldData","toPasswordHistoryData","Collection","Domain","dataObj","notEncList","objProp","notEncStringList","viewModel","mapProp","EncString","encryptedStringOrType","initFromData","initFromEncryptedString","parseEncryptedString","decryptedValue","Field","Folder","Identity","Login","toLoginUriData","LoginUri","MasterPasswordPolicyOptions","Password","SecureNote","SymmetricCryptoKey","CardExport","FieldExport","IdentityExport","LoginUriExport","LoginExport","toView","toDomain","SecureNoteExport","CipherExport","CipherWithIdExport","CollectionExport","CollectionWithIdExport","FolderExport","FolderWithIdExport","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","CollectionRequest","FolderRequest","BaseResponse","propertyName","exactName","otherCasePropertyName","ErrorResponse","identityResponse","errorModel","responseErrorModel","messages","lastSep","AttachmentView","CardView","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","formatYear","CipherView","linkedFieldValue","linkedFieldI18nKey","CollectionView","FieldView","showCount","maskedValue","FolderView","IdentityView","_firstName","_lastName","fullName","fullAddress","fullAddressPart2","addressPart2","ItemView","CanLaunchWhitelist","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","hostnameOrUri","hostOrUri","LoginView","maskedPassword","PasswordHistoryView","SecureNoteView","LogLevelType","ConsoleLogService","timersMap","Debug","Info","Warning","level","buttonStyles","ButtonDirective","nextId","BitErrorComponent","displayError","requiredLength","BitFormFieldComponent","ngAfterContentChecked","ariaDescribedBy","InputModule","FormFieldModule","BitHintComponent","BitLabel","PrefixClasses","BitPrefixDirective","BitSuffixDirective","BitInputDirective","ngControl","hasPrefix","hasSuffix","ariaInvalid","_required","touched","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","chunkId","miniCssF","globalThis","Function","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","nc","onScriptComplete","prev","doneFns","parentNode","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}