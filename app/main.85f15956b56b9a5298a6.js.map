{"version":3,"file":"app/main.85f15956b56b9a5298a6.js","mappings":"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,oBACxE,mDACF,0D,sCAdK,iFAEmB,yEAMlB,sDAIwB,iG,yDAoF9B,gCACE,6DACE,e,sBACF,oBACA,8DACE,gEACE,mEACE,wEAAqC,sCAAmB,oBACxD,gEACA,sFAIA,yDACF,uDACF,qDACA,kEACE,oEACE,wEAAqC,oCAAiB,oBACtD,gEACA,sEACE,wEACE,4EAKE,iIALF,oBAOA,4EACE,gB,uBACF,oBACF,2DACF,yDACA,sEACE,wEACE,4EAKE,oIALF,oBAOA,4EACE,gB,uBACF,oBACF,2DACF,yDACA,sEACE,wEACE,4EAKE,+HALF,oBAOA,4EACE,gB,uBACF,oBACF,2DACF,yDACA,sFAIA,yDACA,sEACE,wEACE,4EAKE,8HALF,oBAOA,4EACE,gB,uBACF,oBACF,2DACF,yDACA,sEACE,wEACE,4EAKE,2HALF,oBAOA,4EACE,gB,uBACF,oBACF,2DACF,yDACA,sEACE,wEACE,4EAKE,gIALF,oBAOA,6EACE,iB,wBACF,oBACF,4DACF,0DACA,wEACE,0EACE,8EAKE,6HAAqC,wGALvC,oBAQA,8EACE,iB,wBACF,oBACF,4DACF,0DACA,wEACE,0EACE,8EAKE,qIAA6C,wGAL/C,oBAQA,8EACE,iB,wBACF,oBACF,4DACF,0DACF,wDACF,sDACF,oDACF,2D,sCA5II,gHASM,uFAgBI,4EAGA,yIAWA,8EAGA,4IAWA,yEAGA,uIAMJ,iFAUI,wEAGA,sIAWA,qEAGA,mIAWA,0EAGA,yIAWA,uEAIA,sIAWA,+EAIA,+I,yDAoBZ,gCACE,mEAAsB,kGAAmB,MACvC,e,sBACF,oBACA,mEAAsB,kGAAmB,MACvC,e,sBACF,oBACF,kD,MALI,iHAGA,oH,uBAiCJ,6BACE,e,sBACF,qB,MADE,wH,yDAeE,4BACE,mEAAgC,qHAC9B,wEAEE,iGAFF,oBAMF,wDACA,mEAAI,qHACF,eACF,oBACA,oEACE,0EAEE,uGAFF,oBAMF,yDACA,qEACE,0EAEE,kGAFF,oBAMF,yDACF,uD,sCAvBM,kFADA,qCAMF,8FAME,wFADA,2CAA6B,uBAS7B,mFADA,sCAAwB,wB,0BApClC,kCAI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","sources":["webpack://@bitwarden/web-vault/webpack/runtime/chunk loaded","webpack://@bitwarden/web-vault/webpack/runtime/load script","webpack://@bitwarden/web-vault/./src/app/modules/loose-components.module.ts","webpack://@bitwarden/web-vault/./src/app/modules/organizations/create/organization-create.module.ts","webpack://@bitwarden/web-vault/./src/app/modules/pipes/pipes.module.ts","webpack://@bitwarden/web-vault/./src/app/modules/register-form/register-form.module.ts","webpack://@bitwarden/web-vault/./src/app/modules/shared.module.ts","webpack://@bitwarden/web-vault/./src/app/modules/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/./src/app/modules/vault-filter/vault-filter.service.ts","webpack://@bitwarden/web-vault/./src/app/modules/vault/modules/organization-badge/organization-badge.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/guards/permissions.guard.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authenticationStatus.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/messaging.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/auth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/lock.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/unauth.guard.ts","webpack://@bitwarden/web-vault/./src/utils/flags.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessAcceptRequest.ts","webpack://@bitwarden/web-vault/./src/app/common/base.accept.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserAcceptRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/passwordHintRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/hint.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/enums/hashPurpose.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/keySuffixOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/secretVerificationRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/services/router.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/a11y-title.directive.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authenticationType.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/logInCredentials.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/captcha_iframe.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/iframe_component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/captchaProtected.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/login.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/policyData.ts","webpack://@bitwarden/web-vault/./src/abstractions/state.service.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/login.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/deleteRecoverRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/twoFactorRecoveryRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/inputsFieldMatch.validator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/keysRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/registerRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/register.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/policy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/referenceEventRequest.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/label.directive.ts","webpack://@bitwarden/web-vault/./src/app/components/password-strength.component.html","webpack://@bitwarden/web-vault/./src/app/components/password-strength.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/submit-button/submit-button.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/submit-button/submit-button.component.html","webpack://@bitwarden/web-vault/./src/app/modules/register-form/register-form.component.html","webpack://@bitwarden/web-vault/./src/app/modules/register-form/register-form.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/register.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/remove-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserResetPasswordEnrollmentRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/setPasswordRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/set-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/sso.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/twoFactorProviderType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/webauthn_iframe.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/tokenRequestTwoFactor.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/twoFactorEmailRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/twoFactor.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/twoFactor.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal.ref.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/dynamic-modal.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal-injector.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/modal.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-click.directive.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/passwordRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/update-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserResetPasswordRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTempPasswordRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/update-temp-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verifyEmailRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verifyDeleteRecoverRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.html","webpack://@bitwarden/web-vault/./src/app/guards/home.guard.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/services/navigation-permissions.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-prop.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/avatar.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.html","webpack://@bitwarden/web-vault/./src/app/modules/vertical-stepper/vertical-step.component.html","webpack://@bitwarden/web-vault/./src/app/modules/vertical-stepper/vertical-step.component.ts","webpack://@bitwarden/web-vault/./src/app/modules/vertical-stepper/vertical-step-content.component.html","webpack://@bitwarden/web-vault/./src/app/modules/vertical-stepper/vertical-step-content.component.ts","webpack://@bitwarden/web-vault/./src/app/modules/vertical-stepper/vertical-stepper.component.html","webpack://@bitwarden/web-vault/./src/app/modules/vertical-stepper/vertical-stepper.component.ts","webpack://@bitwarden/web-vault/./src/app/modules/organizations/create/organization-information.component.html","webpack://@bitwarden/web-vault/./src/app/modules/organizations/create/organization-information.component.ts","webpack://@bitwarden/web-vault/./src/app/modules/trial-initiation/teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/modules/trial-initiation/teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/modules/trial-initiation/enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/modules/trial-initiation/enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/modules/trial-initiation/families-content.component.ts","webpack://@bitwarden/web-vault/./src/app/modules/trial-initiation/families-content.component.html","webpack://@bitwarden/web-vault/./src/app/modules/trial-initiation/trial-initiation.component.html","webpack://@bitwarden/web-vault/./src/app/modules/trial-initiation/trial-initiation.component.ts","webpack://@bitwarden/web-vault/./src/app/modules/vault/vault.service.ts","webpack://@bitwarden/web-vault/./src/app/modules/vault/vault.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/modules/vault-filter/models/vault-filter.model.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherWithIdRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/folderWithIdRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateKeyRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/true-false-value.directive.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.html","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/not-premium.directive.ts","webpack://@bitwarden/web-vault/./src/app/components/premium-badge.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.html","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/search.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/ciphers.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/fallback-src.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/icon.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/icon.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/ellipsis.pipe.ts","webpack://@bitwarden/web-vault/./src/app/modules/vault/modules/organization-badge/organization-name-badge.component.ts","webpack://@bitwarden/web-vault/./src/app/modules/vault/modules/organization-badge/organization-name-badge.component.html","webpack://@bitwarden/web-vault/./src/app/modules/pipes/get-organization-name.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/ciphers.component.html","webpack://@bitwarden/web-vault/./src/app/vault/ciphers.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.html","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/folder/folder-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/share.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/modules/vault-filter/vault-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserType.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/modules/vault-filter/components/organization-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/organization.ts","webpack://@bitwarden/web-vault/./src/app/modules/organizations/users/enroll-master-password-reset.component.ts","webpack://@bitwarden/web-vault/./src/app/modules/organizations/users/enroll-master-password-reset.component.html","webpack://@bitwarden/web-vault/./src/app/modules/vault-filter/components/link-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/modules/vault-filter/components/link-sso.component.html","webpack://@bitwarden/web-vault/./src/app/modules/vault-filter/components/organization-options.component.html","webpack://@bitwarden/web-vault/./src/app/modules/vault-filter/components/organization-options.component.ts","webpack://@bitwarden/web-vault/./src/app/modules/vault-filter/components/organization-filter.component.html","webpack://@bitwarden/web-vault/./src/app/modules/vault-filter/components/organization-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/modules/vault-filter/components/status-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/modules/vault-filter/components/status-filter.component.html","webpack://@bitwarden/web-vault/./src/app/modules/vault-filter/components/status-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/modules/vault-filter/components/type-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/modules/vault-filter/components/type-filter.component.html","webpack://@bitwarden/web-vault/./src/app/modules/vault-filter/components/type-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/modules/vault-filter/components/folder-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/modules/vault-filter/components/folder-filter.component.html","webpack://@bitwarden/web-vault/./src/app/modules/vault-filter/components/folder-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/modules/vault-filter/components/collection-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/modules/vault-filter/components/collection-filter.component.html","webpack://@bitwarden/web-vault/./src/app/modules/vault-filter/components/collection-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/modules/vault-filter/vault-filter.component.html","webpack://@bitwarden/web-vault/./src/app/modules/vault-filter/vault-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkDeleteRequest.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.html","webpack://@bitwarden/web-vault/./src/app/modules/vault/modules/individual-vault/individual-vault.component.html","webpack://@bitwarden/web-vault/./src/app/modules/vault/modules/individual-vault/individual-vault.component.ts","webpack://@bitwarden/web-vault/./src/app/modules/vault/modules/individual-vault/individual-vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/modules/vault/modules/individual-vault/individual-vault.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/deviceType.ts","webpack://@bitwarden/web-vault/./src/app/services/event.service.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherCreateRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/ciphers.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherCollectionsRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/modules/vault-filter/organization-vault-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/modules/vault/modules/organization-vault/organization-vault.component.html","webpack://@bitwarden/web-vault/./src/app/modules/vault/modules/organization-vault/organization-vault.component.ts","webpack://@bitwarden/web-vault/./src/app/modules/vault/modules/organization-vault/organization-vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/modules/vault/modules/organization-vault/organization-vault.module.ts","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.html","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/selectionReadOnlyRequest.ts","webpack://@bitwarden/web-vault/./src/app/modules/organizations/manage/entity-users.component.html","webpack://@bitwarden/web-vault/./src/app/modules/organizations/manage/entity-users.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collection-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collection-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/eventView.ts","webpack://@bitwarden/web-vault/./src/app/common/base.events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/events.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/groupRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationKeysRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserBulkRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserConfirmRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/common/base.people.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserBulkConfirmRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-deactivate.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-deactivate.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/permissionsApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserInviteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.html","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserUpdateGroupsRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/policyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/policyRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/base-policy.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policy-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policy-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/services/policy-list.service.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policies.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policies.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.html","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/taxInfoUpdateRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationTaxInfoUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.html","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/paymentMethodType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/transactionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verifyBankRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/bitPayInvoiceRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/paymentRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/themeType.ts","webpack://@bitwarden/web-vault/./src/scss/export.module.scss","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.abstraction.ts","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-billing.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-billing.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationApiKeyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationConnectionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/billingSyncConfigApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/billingSyncConfigRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationConnectionRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-sync-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-sync-key.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationApiKeyRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/productType.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/billing-sync-api-key.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/billing-sync-api-key.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/image-subscription-hidden.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/image-subscription-hidden.component.svg","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationCreateRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUpgradeRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerOrganizationCreateRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.html","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/change-plan.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/change-plan.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationSubscriptionUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/adjust-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/adjust-subscription.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/storageRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.html","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/download-license.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/download-license.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorDuoRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/twoFactorProviderRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-base.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/deviceVerificationRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorAuthenticatorRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorEmailRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorWebAuthnDeleteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorWebAuthnRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorYubioOtpRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/cipher-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/exposed-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/inactive-two-factor-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/reused-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/unsecured-websites-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/weak-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/organization-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planSponsorshipType.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organizationSponsorshipRedeemRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/breach-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/breach-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/report-card.component.html","webpack://@bitwarden/web-vault/./src/app/reports/report-card.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/report-list.component.html","webpack://@bitwarden/web-vault/./src/app/reports/report-list.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.component.html","webpack://@bitwarden/web-vault/./src/app/reports/reports.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/sendType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendFileView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendTextView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendAccessView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sendFile.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sendText.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sendAccess.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/sendAccessRequest.ts","webpack://@bitwarden/web-vault/./src/app/send/access.component.html","webpack://@bitwarden/web-vault/./src/app/send/access.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/send.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/send.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendView.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.html","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/send.component.html","webpack://@bitwarden/web-vault/./src/app/send/send.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.html","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateProfileRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.html","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emailTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emailRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateDomainsRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.html","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/emergencyAccessStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/emergencyAccessType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessConfirmRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/attachmentResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/passwordHistoryResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/cipherResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/emergencyAccessResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessInviteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessPasswordRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.html","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.html","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/sendFileApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/sendTextApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/sendRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/sendWithIdRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/kdfRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/notAllowedValueAsync.validator.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.html","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-billing-history.component.html","webpack://@bitwarden/web-vault/./src/app/settings/user-billing-history.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/generator.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/password-generator-history.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/select-copy.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/color-password.pipe.ts","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.html","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.html","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/oss-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/modules/organizations/manage/organization-manage.module.ts","webpack://@bitwarden/web-vault/./src/app/modules/organizations/users/organization-user.module.ts","webpack://@bitwarden/web-vault/./src/app/modules/vertical-stepper/vertical-stepper.module.ts","webpack://@bitwarden/web-vault/./src/app/modules/trial-initiation/trial-initiation.module.ts","webpack://@bitwarden/web-vault/./src/app/oss.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/themeBuilder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/stateVersion.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/ssoEnums.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/abstractEncrypt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/storage.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/accountFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/globalStateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/stateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/environmentUrls.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/account.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/windowState.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/globalState.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/deviceRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/tokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/apiTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/apiKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/attachmentUploadDataResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billingResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billingHistoryResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billingPaymentResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/breachAccountResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/selectionReadOnlyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/collectionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/deviceVerificationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/globalDomainResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/domainsResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/eventResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/groupResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identityCaptchaResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identityTokenResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identityTwoFactorResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/keyConnectorUserKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/listResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/ssoConfigApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization/organizationSsoResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationApiKeyInformationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationAutoEnrollStatusResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationConnectionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/keysResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationKeysResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/planResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationSponsorshipSyncStatusResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/subscriptionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationSubscriptionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationUserBulkResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationUserResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileOrganizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileProviderOrganizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileProviderResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/paymentResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/preloginResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerOrganizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerUserBulkResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerUserResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendAccessResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendFileDownloadDataResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendFileUploadDataResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/ssoPreValidateResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/folderResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/syncResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/taxInfoResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/taxRateResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorDuoResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorEmailResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorProviderResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorRescoverResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/userKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/htmlStorageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/throttle.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/authResult.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/logIn.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/apiLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/passwordTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/ssoTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/preloginRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/sequentialize.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sortedCiphersCache.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkMoveRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkRestoreRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkShareRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherShareRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/wordlist.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encArrayBuffer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encryptedObject.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encryptedOrganizationKey.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/eventData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/eventRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/eventExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fileUploadType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/azureFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/bitwardenFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/folderData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/account/setKeyConnectorKeyRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/keyConnectorUserKeyRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/notificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/notificationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/generatedPasswordHistory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/provider.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/sendFileData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/sendTextData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/sendData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/storageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/providerData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/organizationData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/sync.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/account/verifyOTPRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/decryptParameters.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/jslib-services.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/folder/folder.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/folder/folder-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/webCryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/encrypt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/event.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/keyConnector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/userVerification.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/memoryStorage.service.ts","webpack://@bitwarden/web-vault/./src/models/account.ts","webpack://@bitwarden/web-vault/./src/services/broadcasterMessaging.service.ts","webpack://@bitwarden/web-vault/./src/services/htmlStorage.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/blur-click.directive.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.html","webpack://@bitwarden/web-vault/./src/services/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/clientType.ts","webpack://@bitwarden/web-vault/./src/services/webPlatformUtils.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/container.service.ts","webpack://@bitwarden/web-vault/./src/app/services/init.service.ts","webpack://@bitwarden/web-vault/./src/app/services/modal.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownloadBuilder.ts","webpack://@bitwarden/web-vault/./src/app/services/webFileDownload.service.ts","webpack://@bitwarden/web-vault/./src/app/services/services.module.ts","webpack://@bitwarden/web-vault/./src/models/globalState.ts","webpack://@bitwarden/web-vault/./src/services/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/i18n.service.ts","webpack://@bitwarden/web-vault/./src/services/stateMigration.service.ts","webpack://@bitwarden/web-vault/./src/services/state.service.ts","webpack://@bitwarden/web-vault/./src/app/wildcard-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerAddOrganizationRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/services/webProvider.service.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/add-organization.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/add-organization.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/guards/provider-type.guard.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/guards/provider.guard.ts","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.html","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/clients.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/clients.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/create-organization.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserAcceptRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/accept-provider.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/accept-provider.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/events.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/events.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/manage.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/manage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserBulkRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserConfirmRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserBulkConfirmRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserInviteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserUpdateRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/people.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/people.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-layout.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-layout.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUpdateRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/account.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/account.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/settings.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup-provider.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup-provider.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerSetupRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-routing.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.html","webpack://@bitwarden/web-vault/./src/app/app.component.ts","webpack://@bitwarden/web-vault/./src/app/app.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/disable-personal-vault-export.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/disable-personal-vault-export.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/maximum-vault-timeout.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/maximum-vault-timeout.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/dirty.validator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organizationSsoRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/ssoConfigView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/view.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/base-cva.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-checkbox.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-checkbox.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/select.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/select.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-strip-spaces.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/a11y-invalid.directive.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text-readonly.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text-readonly.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/sso.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/sso.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/organizations-routing.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/organizations.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/main.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/user-verification.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/user-verification.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/api-action.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/autofocus.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-verbatim.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/toastr.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/credit-card-number.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/jslib.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/modules/vault-filter/models/dynamic-tree-node.model.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/modules/vault-filter/vault-filter.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/i18n.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/search.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/user-name.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/validation.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/event.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/folder/folder.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/keyConnector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/log.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/platformUtils.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/sync.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/userVerification.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/cipherRepromptType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/cipherType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/encryptionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/eventType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fieldType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/kdfType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/linkedIdType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/permissions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/policyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/secureNoteType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/uriMatchType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/verificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/linkedFieldOption.decorator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/treeNode.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/serviceUtils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/tldjs.noop.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/utils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/cardApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/fieldApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/identityApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/loginApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/loginUriApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/secureNoteApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/attachmentData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/cardData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/cipherData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/collectionData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/fieldData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/identityData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/loginData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/loginUriData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/passwordHistoryData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/secureNoteData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/attachmentView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/attachment.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/card.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/cipher.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/collection.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/domainBase.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encString.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/field.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/folder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/identity.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/login.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/loginUri.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/password.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/secureNote.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/symmetricCryptoKey.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cardExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/fieldExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/identityExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/loginUriExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/loginExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/secureNoteExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipherExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipherWithIdsExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collectionExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collectionWithIdExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folderExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folderWithIdExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/attachmentRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/collectionRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/folderRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/baseResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/errorResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/cardView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/cipherView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/collectionView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/fieldView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/folderView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/identityView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/itemView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/loginUriView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/loginView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/passwordHistoryView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/secureNoteView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/logLevelType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/consoleLog.service.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error-summary.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/hint.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/prefix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/suffix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/banner/banner.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/banner/banner.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/banner/banner.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/submit-button/submit-button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-item.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-trigger-for.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.ts","webpack://@bitwarden/web-vault/webpack/bootstrap","webpack://@bitwarden/web-vault/webpack/runtime/compat get default export","webpack://@bitwarden/web-vault/webpack/runtime/define property getters","webpack://@bitwarden/web-vault/webpack/runtime/ensure chunk","webpack://@bitwarden/web-vault/webpack/runtime/get javascript chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/get mini-css chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/global","webpack://@bitwarden/web-vault/webpack/runtime/hasOwnProperty shorthand","webpack://@bitwarden/web-vault/webpack/runtime/make namespace object","webpack://@bitwarden/web-vault/webpack/runtime/node module decorator","webpack://@bitwarden/web-vault/webpack/runtime/publicPath","webpack://@bitwarden/web-vault/webpack/runtime/jsonp chunk loading","webpack://@bitwarden/web-vault/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"@bitwarden/web-vault:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","import { NgModule } from \"@angular/core\";\n\nimport { UserVerificationComponent } from \"@bitwarden/angular/components/user-verification.component\";\n\nimport { AcceptEmergencyComponent } from \"../accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"../accounts/accept-organization.component\";\nimport { HintComponent } from \"../accounts/hint.component\";\nimport { LockComponent } from \"../accounts/lock.component\";\nimport { LoginComponent } from \"../accounts/login.component\";\nimport { RecoverDeleteComponent } from \"../accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"../accounts/recover-two-factor.component\";\nimport { RegisterComponent } from \"../accounts/register.component\";\nimport { RemovePasswordComponent } from \"../accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"../accounts/set-password.component\";\nimport { SsoComponent } from \"../accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"../accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"../accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"../accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"../accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"../accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"../accounts/verify-recover-delete.component\";\nimport { NestedCheckboxComponent } from \"../components/nested-checkbox.component\";\nimport { OrganizationSwitcherComponent } from \"../components/organization-switcher.component\";\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\nimport { PremiumBadgeComponent } from \"../components/premium-badge.component\";\nimport { FooterComponent } from \"../layouts/footer.component\";\nimport { FrontendLayoutComponent } from \"../layouts/frontend-layout.component\";\nimport { NavbarComponent } from \"../layouts/navbar.component\";\nimport { UserLayoutComponent } from \"../layouts/user-layout.component\";\nimport { OrganizationLayoutComponent } from \"../organizations/layouts/organization-layout.component\";\nimport { BulkConfirmComponent as OrgBulkConfirmComponent } from \"../organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkDeactivateComponent as OrgBulkDeactivateomponent } from \"../organizations/manage/bulk/bulk-deactivate.component\";\nimport { BulkRemoveComponent as OrgBulkRemoveComponent } from \"../organizations/manage/bulk/bulk-remove.component\";\nimport { BulkStatusComponent as OrgBulkStatusComponent } from \"../organizations/manage/bulk/bulk-status.component\";\nimport { CollectionAddEditComponent as OrgCollectionAddEditComponent } from \"../organizations/manage/collection-add-edit.component\";\nimport { CollectionsComponent as OrgManageCollectionsComponent } from \"../organizations/manage/collections.component\";\nimport { EntityEventsComponent as OrgEntityEventsComponent } from \"../organizations/manage/entity-events.component\";\nimport { EventsComponent as OrgEventsComponent } from \"../organizations/manage/events.component\";\nimport { GroupAddEditComponent as OrgGroupAddEditComponent } from \"../organizations/manage/group-add-edit.component\";\nimport { GroupsComponent as OrgGroupsComponent } from \"../organizations/manage/groups.component\";\nimport { ManageComponent as OrgManageComponent } from \"../organizations/manage/manage.component\";\nimport { PeopleComponent as OrgPeopleComponent } from \"../organizations/manage/people.component\";\nimport { PoliciesComponent as OrgPoliciesComponent } from \"../organizations/manage/policies.component\";\nimport { PolicyEditComponent as OrgPolicyEditComponent } from \"../organizations/manage/policy-edit.component\";\nimport { ResetPasswordComponent as OrgResetPasswordComponent } from \"../organizations/manage/reset-password.component\";\nimport { UserAddEditComponent as OrgUserAddEditComponent } from \"../organizations/manage/user-add-edit.component\";\nimport { UserConfirmComponent as OrgUserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\nimport { UserGroupsComponent as OrgUserGroupsComponent } from \"../organizations/manage/user-groups.component\";\nimport { DisableSendPolicyComponent } from \"../organizations/policies/disable-send.component\";\nimport { MasterPasswordPolicyComponent } from \"../organizations/policies/master-password.component\";\nimport { PasswordGeneratorPolicyComponent } from \"../organizations/policies/password-generator.component\";\nimport { PersonalOwnershipPolicyComponent } from \"../organizations/policies/personal-ownership.component\";\nimport { RequireSsoPolicyComponent } from \"../organizations/policies/require-sso.component\";\nimport { ResetPasswordPolicyComponent } from \"../organizations/policies/reset-password.component\";\nimport { SendOptionsPolicyComponent } from \"../organizations/policies/send-options.component\";\nimport { SingleOrgPolicyComponent } from \"../organizations/policies/single-org.component\";\nimport { TwoFactorAuthenticationPolicyComponent } from \"../organizations/policies/two-factor-authentication.component\";\nimport { AccountComponent as OrgAccountComponent } from \"../organizations/settings/account.component\";\nimport { AdjustSubscription } from \"../organizations/settings/adjust-subscription.component\";\nimport { BillingSyncApiKeyComponent } from \"../organizations/settings/billing-sync-api-key.component\";\nimport { ChangePlanComponent } from \"../organizations/settings/change-plan.component\";\nimport { DeleteOrganizationComponent } from \"../organizations/settings/delete-organization.component\";\nimport { DownloadLicenseComponent } from \"../organizations/settings/download-license.component\";\nimport { ImageSubscriptionHiddenComponent as OrgSubscriptionHiddenComponent } from \"../organizations/settings/image-subscription-hidden.component\";\nimport { OrganizationBillingComponent } from \"../organizations/settings/organization-billing.component\";\nimport { OrganizationSubscriptionComponent } from \"../organizations/settings/organization-subscription.component\";\nimport { SettingsComponent as OrgSettingComponent } from \"../organizations/settings/settings.component\";\nimport { TwoFactorSetupComponent as OrgTwoFactorSetupComponent } from \"../organizations/settings/two-factor-setup.component\";\nimport { AcceptFamilySponsorshipComponent } from \"../organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"../organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent } from \"../organizations/tools/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent } from \"../organizations/tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent } from \"../organizations/tools/reused-passwords-report.component\";\nimport { ToolsComponent as OrgToolsComponent } from \"../organizations/tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent } from \"../organizations/tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent } from \"../organizations/tools/weak-passwords-report.component\";\nimport { AddEditComponent as OrgAddEditComponent } from \"../organizations/vault/add-edit.component\";\nimport { AttachmentsComponent as OrgAttachmentsComponent } from \"../organizations/vault/attachments.component\";\nimport { CiphersComponent as OrgCiphersComponent } from \"../organizations/vault/ciphers.component\";\nimport { CollectionsComponent as OrgCollectionsComponent } from \"../organizations/vault/collections.component\";\nimport { ProvidersComponent } from \"../providers/providers.component\";\nimport { BreachReportComponent } from \"../reports/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"../reports/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"../reports/inactive-two-factor-report.component\";\nimport { ReportCardComponent } from \"../reports/report-card.component\";\nimport { ReportListComponent } from \"../reports/report-list.component\";\nimport { ReportsComponent } from \"../reports/reports.component\";\nimport { ReusedPasswordsReportComponent } from \"../reports/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"../reports/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"../reports/weak-passwords-report.component\";\nimport { AccessComponent } from \"../send/access.component\";\nimport { AddEditComponent as SendAddEditComponent } from \"../send/add-edit.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"../send/efflux-dates.component\";\nimport { SendComponent } from \"../send/send.component\";\nimport { AccountComponent } from \"../settings/account.component\";\nimport { AddCreditComponent } from \"../settings/add-credit.component\";\nimport { AdjustPaymentComponent } from \"../settings/adjust-payment.component\";\nimport { AdjustStorageComponent } from \"../settings/adjust-storage.component\";\nimport { ApiKeyComponent } from \"../settings/api-key.component\";\nimport { BillingSyncKeyComponent } from \"../settings/billing-sync-key.component\";\nimport { ChangeEmailComponent } from \"../settings/change-email.component\";\nimport { ChangeKdfComponent } from \"../settings/change-kdf.component\";\nimport { ChangePasswordComponent } from \"../settings/change-password.component\";\nimport { CreateOrganizationComponent } from \"../settings/create-organization.component\";\nimport { DeauthorizeSessionsComponent } from \"../settings/deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"../settings/delete-account.component\";\nimport { DomainRulesComponent } from \"../settings/domain-rules.component\";\nimport { EmergencyAccessAddEditComponent } from \"../settings/emergency-access-add-edit.component\";\nimport { EmergencyAccessAttachmentsComponent } from \"../settings/emergency-access-attachments.component\";\nimport { EmergencyAccessConfirmComponent } from \"../settings/emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"../settings/emergency-access-takeover.component\";\nimport { EmergencyAccessViewComponent } from \"../settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"../settings/emergency-access.component\";\nimport { EmergencyAddEditComponent } from \"../settings/emergency-add-edit.component\";\nimport { OrganizationPlansComponent } from \"../settings/organization-plans.component\";\nimport { PaymentMethodComponent } from \"../settings/payment-method.component\";\nimport { PaymentComponent } from \"../settings/payment.component\";\nimport { PreferencesComponent } from \"../settings/preferences.component\";\nimport { PremiumComponent } from \"../settings/premium.component\";\nimport { ProfileComponent } from \"../settings/profile.component\";\nimport { PurgeVaultComponent } from \"../settings/purge-vault.component\";\nimport { SecurityKeysComponent } from \"../settings/security-keys.component\";\nimport { SecurityComponent } from \"../settings/security.component\";\nimport { SettingsComponent } from \"../settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"../settings/sponsored-families.component\";\nimport { SponsoringOrgRowComponent } from \"../settings/sponsoring-org-row.component\";\nimport { SubscriptionComponent } from \"../settings/subscription.component\";\nimport { TaxInfoComponent } from \"../settings/tax-info.component\";\nimport { TwoFactorAuthenticatorComponent } from \"../settings/two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"../settings/two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"../settings/two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"../settings/two-factor-recovery.component\";\nimport { TwoFactorSetupComponent } from \"../settings/two-factor-setup.component\";\nimport { TwoFactorVerifyComponent } from \"../settings/two-factor-verify.component\";\nimport { TwoFactorWebAuthnComponent } from \"../settings/two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"../settings/two-factor-yubikey.component\";\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\nimport { UpdateLicenseComponent } from \"../settings/update-license.component\";\nimport { UserBillingHistoryComponent } from \"../settings/user-billing-history.component\";\nimport { UserSubscriptionComponent } from \"../settings/user-subscription.component\";\nimport { VaultTimeoutInputComponent } from \"../settings/vault-timeout-input.component\";\nimport { VerifyEmailComponent } from \"../settings/verify-email.component\";\nimport { GeneratorComponent } from \"../tools/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"../tools/password-generator-history.component\";\nimport { ToolsComponent } from \"../tools/tools.component\";\nimport { AddEditCustomFieldsComponent } from \"../vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"../vault/add-edit.component\";\nimport { AttachmentsComponent } from \"../vault/attachments.component\";\nimport { BulkActionsComponent } from \"../vault/bulk-actions.component\";\nimport { BulkDeleteComponent } from \"../vault/bulk-delete.component\";\nimport { BulkMoveComponent } from \"../vault/bulk-move.component\";\nimport { BulkRestoreComponent } from \"../vault/bulk-restore.component\";\nimport { BulkShareComponent } from \"../vault/bulk-share.component\";\nimport { CiphersComponent } from \"../vault/ciphers.component\";\nimport { CollectionsComponent } from \"../vault/collections.component\";\nimport { FolderAddEditComponent } from \"../vault/folder-add-edit.component\";\nimport { ShareComponent } from \"../vault/share.component\";\n\nimport { OrganizationCreateModule } from \"./organizations/create/organization-create.module\";\nimport { PipesModule } from \"./pipes/pipes.module\";\nimport { RegisterFormModule } from \"./register-form/register-form.module\";\nimport { SharedModule } from \"./shared.module\";\nimport { VaultFilterModule } from \"./vault-filter/vault-filter.module\";\nimport { OrganizationBadgeModule } from \"./vault/modules/organization-badge/organization-badge.module\";\n\n// Please do not add to this list of declarations - we should refactor these into modules when doing so makes sense until there are none left.\n// If you are building new functionality, please create or extend a feature module instead.\n@NgModule({\n  imports: [\n    SharedModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    PipesModule,\n    OrganizationCreateModule,\n    RegisterFormModule,\n  ],\n  declarations: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptFamilySponsorshipComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    AdjustSubscription,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    BillingSyncApiKeyComponent,\n    BillingSyncKeyComponent,\n    BreachReportComponent,\n    BulkActionsComponent,\n    BulkDeleteComponent,\n    BulkMoveComponent,\n    BulkRestoreComponent,\n    BulkShareComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    ChangePlanComponent,\n    CiphersComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DeleteOrganizationComponent,\n    DisableSendPolicyComponent,\n    DomainRulesComponent,\n    DownloadLicenseComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    ExposedPasswordsReportComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    InactiveTwoFactorReportComponent,\n    LockComponent,\n    LoginComponent,\n    MasterPasswordPolicyComponent,\n    NavbarComponent,\n    NestedCheckboxComponent,\n    OrganizationSwitcherComponent,\n    OrgAccountComponent,\n    OrgAddEditComponent,\n    OrganizationBillingComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrganizationSubscriptionComponent,\n    OrgAttachmentsComponent,\n    OrgBulkConfirmComponent,\n    OrgBulkDeactivateomponent,\n    OrgBulkRemoveComponent,\n    OrgBulkStatusComponent,\n    OrgCiphersComponent,\n    OrgCollectionAddEditComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgGroupAddEditComponent,\n    OrgGroupsComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgPeopleComponent,\n    OrgPoliciesComponent,\n    OrgPolicyEditComponent,\n    OrgResetPasswordComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgSettingComponent,\n    OrgToolsComponent,\n    OrgTwoFactorSetupComponent,\n    OrgSubscriptionHiddenComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserAddEditComponent,\n    OrgUserConfirmComponent,\n    OrgUserGroupsComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordGeneratorPolicyComponent,\n    PasswordRepromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PersonalOwnershipPolicyComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RegisterComponent,\n    RemovePasswordComponent,\n    ReportCardComponent,\n    ReportListComponent,\n    ReportsComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    ReusedPasswordsReportComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SendOptionsPolicyComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SingleOrgPolicyComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UnsecuredWebsitesReportComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    UserBillingHistoryComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n    WeakPasswordsReportComponent,\n  ],\n  exports: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    AdjustSubscription,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    BreachReportComponent,\n    BulkActionsComponent,\n    BulkDeleteComponent,\n    BulkMoveComponent,\n    BulkRestoreComponent,\n    BulkShareComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    ChangePlanComponent,\n    CiphersComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DeleteOrganizationComponent,\n    DisableSendPolicyComponent,\n    DomainRulesComponent,\n    DownloadLicenseComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    ExposedPasswordsReportComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    InactiveTwoFactorReportComponent,\n    LockComponent,\n    LoginComponent,\n    MasterPasswordPolicyComponent,\n    NavbarComponent,\n    NestedCheckboxComponent,\n    OrganizationSwitcherComponent,\n    OrgAccountComponent,\n    OrgAddEditComponent,\n    OrganizationBillingComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrganizationSubscriptionComponent,\n    OrgAttachmentsComponent,\n    OrgBulkConfirmComponent,\n    OrgBulkDeactivateomponent,\n    OrgBulkRemoveComponent,\n    OrgBulkStatusComponent,\n    OrgCiphersComponent,\n    OrgCollectionAddEditComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgGroupAddEditComponent,\n    OrgGroupsComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgPeopleComponent,\n    OrgPoliciesComponent,\n    OrgPolicyEditComponent,\n    OrgResetPasswordComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgSettingComponent,\n    OrgToolsComponent,\n    OrgTwoFactorSetupComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserAddEditComponent,\n    OrgUserConfirmComponent,\n    OrgUserGroupsComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordGeneratorPolicyComponent,\n    PasswordRepromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PersonalOwnershipPolicyComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RegisterComponent,\n    RemovePasswordComponent,\n    ReportCardComponent,\n    ReportListComponent,\n    ReportsComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    ReusedPasswordsReportComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SendOptionsPolicyComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SingleOrgPolicyComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UnsecuredWebsitesReportComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    UserBillingHistoryComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n    WeakPasswordsReportComponent,\n  ],\n})\nexport class LooseComponentsModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared.module\";\n\nimport { OrganizationInformationComponent } from \"./organization-information.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationInformationComponent],\n  exports: [OrganizationInformationComponent],\n})\nexport class OrganizationCreateModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { GetOrgNameFromIdPipe } from \"./get-organization-name.pipe\";\n\n@NgModule({\n  imports: [],\n  declarations: [GetOrgNameFromIdPipe],\n  exports: [GetOrgNameFromIdPipe],\n})\nexport class PipesModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared.module\";\n\nimport { RegisterFormComponent } from \"./register-form.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [RegisterFormComponent],\n  exports: [RegisterFormComponent],\n})\nexport class RegisterFormModule {}\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { DatePipe, registerLocaleData, CommonModule } from \"@angular/common\";\nimport localeAf from \"@angular/common/locales/af\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEo from \"@angular/common/locales/eo\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\nimport { ToastrModule } from \"ngx-toastr\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport {\n  BadgeModule,\n  ButtonModule,\n  CalloutModule,\n  FormFieldModule,\n  SubmitButtonModule,\n  MenuModule,\n} from \"@bitwarden/components\";\n\nimport { PasswordStrengthComponent } from \"../components/password-strength.component\";\n\nregisterLocaleData(localeAf, \"af\");\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEo, \"eo\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n\n@NgModule({\n  declarations: [PasswordStrengthComponent],\n  imports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    InfiniteScrollModule,\n    JslibModule,\n    ReactiveFormsModule,\n    RouterModule,\n    BadgeModule,\n    ButtonModule,\n    CalloutModule,\n    ToastrModule,\n    BadgeModule,\n    ButtonModule,\n    MenuModule,\n    FormFieldModule,\n    SubmitButtonModule,\n  ],\n  exports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    InfiniteScrollModule,\n    JslibModule,\n    ReactiveFormsModule,\n    RouterModule,\n    BadgeModule,\n    ButtonModule,\n    CalloutModule,\n    ToastrModule,\n    BadgeModule,\n    ButtonModule,\n    MenuModule,\n    FormFieldModule,\n    PasswordStrengthComponent,\n    SubmitButtonModule,\n  ],\n  providers: [DatePipe],\n  bootstrap: [],\n})\nexport class SharedModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared.module\";\n\nimport { CollectionFilterComponent } from \"./components/collection-filter.component\";\nimport { FolderFilterComponent } from \"./components/folder-filter.component\";\nimport { LinkSsoComponent } from \"./components/link-sso.component\";\nimport { OrganizationFilterComponent } from \"./components/organization-filter.component\";\nimport { OrganizationOptionsComponent } from \"./components/organization-options.component\";\nimport { StatusFilterComponent } from \"./components/status-filter.component\";\nimport { TypeFilterComponent } from \"./components/type-filter.component\";\nimport { OrganizationVaultFilterComponent } from \"./organization-vault-filter.component\";\nimport { VaultFilterComponent } from \"./vault-filter.component\";\nimport { VaultFilterService } from \"./vault-filter.service\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [\n    VaultFilterComponent,\n    CollectionFilterComponent,\n    FolderFilterComponent,\n    OrganizationFilterComponent,\n    OrganizationOptionsComponent,\n    StatusFilterComponent,\n    TypeFilterComponent,\n    OrganizationVaultFilterComponent,\n    LinkSsoComponent,\n  ],\n  exports: [VaultFilterComponent, OrganizationVaultFilterComponent],\n  providers: [VaultFilterService],\n})\nexport class VaultFilterModule {}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { DynamicTreeNode } from \"@bitwarden/angular/modules/vault-filter/models/dynamic-tree-node.model\";\nimport { VaultFilterService as BaseVaultFilterService } from \"@bitwarden/angular/modules/vault-filter/vault-filter.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collectionResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Injectable()\nexport class VaultFilterService extends BaseVaultFilterService {\n  private _collapsedFilterNodes = new BehaviorSubject<Set<string>>(null);\n  collapsedFilterNodes$: Observable<Set<string>> = this._collapsedFilterNodes.asObservable();\n\n  constructor(\n    stateService: StateService,\n    organizationService: OrganizationService,\n    folderService: FolderService,\n    cipherService: CipherService,\n    collectionService: CollectionService,\n    policyService: PolicyService,\n    private i18nService: I18nService,\n    protected apiService: ApiService\n  ) {\n    super(\n      stateService,\n      organizationService,\n      folderService,\n      cipherService,\n      collectionService,\n      policyService\n    );\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    const nodes = await super.buildCollapsedFilterNodes();\n    this._collapsedFilterNodes.next(nodes);\n    return nodes;\n  }\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await super.storeCollapsedFilterNodes(collapsedFilterNodes);\n    this._collapsedFilterNodes.next(collapsedFilterNodes);\n  }\n\n  async ensureVaultFiltersAreExpanded() {\n    const collapsedFilterNodes = await super.buildCollapsedFilterNodes();\n    if (!collapsedFilterNodes.has(\"vaults\")) {\n      return;\n    }\n    collapsedFilterNodes.delete(\"vaults\");\n    await this.storeCollapsedFilterNodes(collapsedFilterNodes);\n  }\n\n  async buildAdminCollections(organizationId: string) {\n    let result: CollectionView[] = [];\n    const collectionResponse = await this.apiService.getCollections(organizationId);\n    if (collectionResponse?.data != null && collectionResponse.data.length) {\n      const collectionDomains = collectionResponse.data.map(\n        (r: CollectionDetailsResponse) => new Collection(new CollectionData(r))\n      );\n      result = await this.collectionService.decryptMany(collectionDomains);\n    }\n\n    const noneCollection = new CollectionView();\n    noneCollection.name = this.i18nService.t(\"unassigned\");\n    noneCollection.organizationId = organizationId;\n    result.push(noneCollection);\n\n    const nestedCollections = await this.collectionService.getAllNested(result);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: result,\n      nestedList: nestedCollections,\n    });\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared.module\";\n\nimport { OrganizationNameBadgeComponent } from \"./organization-name-badge.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationNameBadgeComponent],\n  exports: [OrganizationNameBadgeComponent],\n})\nexport class OrganizationBadgeModule {}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { Permissions } from \"@bitwarden/common/enums/permissions\";\n\n@Injectable()\nexport class PermissionsGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private syncService: SyncService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    // TODO: We need to fix this issue once and for all.\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n\n    const org = await this.organizationService.get(route.params.organizationId);\n    if (org == null) {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    if (!org.isOwner && !org.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"organizationIsDisabled\")\n      );\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    const permissions = route.data == null ? [] : (route.data.permissions as Permissions[]);\n    if (permissions != null && !org.hasAnyPermission(permissions)) {\n      // Handle linkable ciphers for organizations the user only has view access to\n      // https://bitwarden.atlassian.net/browse/EC-203\n      const cipherId =\n        state.root.queryParamMap.get(\"itemId\") || state.root.queryParamMap.get(\"cipherId\");\n      if (cipherId) {\n        return this.router.createUrlTree([\"/vault\"], {\n          queryParams: {\n            itemId: cipherId,\n          },\n        });\n      }\n\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"accessDenied\"));\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    return true;\n  }\n}\n","export enum AuthenticationStatus {\n  LoggedOut = 0,\n  Locked = 1,\n  Unlocked = 2,\n}\n","import { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  logIn: (\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n  getAuthStatus: (userId?: string) => Promise<AuthenticationStatus>;\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      this.messagingService.send(\"authBlocked\", { url: routerState.url });\n      return false;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      return this.router.createUrlTree([\"lock\"], { queryParams: { promptBiometric: true } });\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      return this.router.createUrlTree([\"/remove-password\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class LockGuard implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return true;\n    }\n\n    const redirectUrl =\n      authStatus === AuthenticationStatus.LoggedOut ? this.loginpage : this.homepage;\n\n    return this.router.createUrlTree([redirectUrl]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class UnauthGuard implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return true;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"lock\"]);\n    }\n\n    return this.router.createUrlTree([this.homepage]);\n  }\n}\n","export type Flags = {\n  showTrial?: boolean;\n};\n\nexport type FlagName = keyof Flags;\n\nexport function flagEnabled(flag: FlagName): boolean {\n  return flags()[flag] == null || flags()[flag];\n}\n\nfunction flags(): Flags {\n  const envFlags = process.env.FLAGS as string | Flags;\n\n  if (typeof envFlags === \"string\") {\n    return JSON.parse(envFlags) as Flags;\n  } else {\n    return envFlags as Flags;\n  }\n}\n","export class EmergencyAccessAcceptRequest {\n  token: string;\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Directive()\nexport abstract class BaseAcceptComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  actionPromise: Promise<any>;\n\n  protected requiredParameters: string[] = [];\n  protected failedShortMessage = \"inviteAcceptFailedShort\";\n  protected failedMessage = \"inviteAcceptFailed\";\n\n  constructor(\n    protected router: Router,\n    protected platformUtilService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService\n  ) {}\n\n  abstract authedHandler(qParams: Params): Promise<void>;\n  abstract unauthedHandler(qParams: Params): Promise<void>;\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      let error = this.requiredParameters.some((e) => qParams?.[e] == null || qParams[e] === \"\");\n      let errorMessage: string = null;\n      if (!error) {\n        this.authed = await this.stateService.getIsAuthenticated();\n\n        if (this.authed) {\n          try {\n            await this.authedHandler(qParams);\n          } catch (e) {\n            error = true;\n            errorMessage = e.message;\n          }\n        } else {\n          this.email = qParams.email;\n          await this.unauthedHandler(qParams);\n        }\n      }\n\n      if (error) {\n        const message =\n          errorMessage != null\n            ? this.i18nService.t(this.failedShortMessage, errorMessage)\n            : this.i18nService.t(this.failedMessage);\n        this.platformUtilService.showToast(\"error\", null, message, { timeout: 10000 });\n        this.router.navigate([\"/\"]);\n      }\n\n      this.loading = false;\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"emergencyAccess\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ name }}\n          </p>\n          <p>{{ \"acceptEmergencyAccess\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessAcceptRequest } from \"@bitwarden/common/models/request/emergencyAccessAcceptRequest\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-emergency\",\n  templateUrl: \"accept-emergency.component.html\",\n})\nexport class AcceptEmergencyComponent extends BaseAcceptComponent {\n  name: string;\n\n  protected requiredParameters: string[] = [\"id\", \"name\", \"email\", \"token\"];\n  protected failedShortMessage = \"emergencyInviteAcceptFailedShort\";\n  protected failedMessage = \"emergencyInviteAcceptFailed\";\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    const request = new EmergencyAccessAcceptRequest();\n    request.token = qParams.token;\n    this.actionPromise = this.apiService.postEmergencyAccessAccept(qParams.id, request);\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"emergencyInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    this.name = qParams.name;\n    if (this.name != null) {\n      // Fix URL encoding of space issue with Angular\n      this.name = this.name.replace(/\\+/g, \" \");\n    }\n  }\n}\n","export class OrganizationUserAcceptRequest {\n  token: string;\n  // Used to auto-enroll in master password reset\n  resetPasswordKey: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img src=\"../../images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinOrganization\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ orgName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinOrganizationDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { OrganizationUserAcceptRequest } from \"@bitwarden/common/models/request/organizationUserAcceptRequest\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-organization\",\n  templateUrl: \"accept-organization.component.html\",\n})\nexport class AcceptOrganizationComponent extends BaseAcceptComponent {\n  orgName: string;\n\n  protected requiredParameters: string[] = [\"organizationId\", \"organizationUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService,\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private logService: LogService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    this.actionPromise = this.prepareAcceptRequest(qParams).then(async (request) => {\n      await this.apiService.postOrganizationUserAccept(\n        qParams.organizationId,\n        qParams.organizationUserId,\n        request\n      );\n    });\n\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"inviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    this.orgName = qParams.organizationName;\n    if (this.orgName != null) {\n      // Fix URL encoding of space issue with Angular\n      this.orgName = this.orgName.replace(/\\+/g, \" \");\n    }\n    await this.stateService.setOrganizationInvitation(qParams);\n  }\n\n  private async prepareAcceptRequest(qParams: Params): Promise<OrganizationUserAcceptRequest> {\n    const request = new OrganizationUserAcceptRequest();\n    request.token = qParams.token;\n\n    if (await this.performResetPasswordAutoEnroll(qParams)) {\n      const response = await this.apiService.getOrganizationKeys(qParams.organizationId);\n\n      if (response == null) {\n        throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n      }\n\n      const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n      // RSA Encrypt user's encKey.key with organization public key\n      const encKey = await this.cryptoService.getEncKey();\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Add reset password key to accept request\n      request.resetPasswordKey = encryptedKey.encryptedString;\n    }\n    return request;\n  }\n\n  private async performResetPasswordAutoEnroll(qParams: any): Promise<boolean> {\n    let policyList: Policy[] = null;\n    try {\n      const policies = await this.apiService.getPoliciesByToken(\n        qParams.organizationId,\n        qParams.token,\n        qParams.email,\n        qParams.organizationUserId\n      );\n      policyList = this.policyService.mapPoliciesFromToken(policies);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (policyList != null) {\n      const result = this.policyService.getResetPasswordPolicyOptions(\n        policyList,\n        qParams.organizationId\n      );\n      // Return true if policy enabled and auto-enroll enabled\n      return result[1] && result[0].autoEnrollEnabled;\n    }\n\n    return false;\n  }\n}\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"@bitwarden/angular/components/hint.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService);\n  }\n}\n","import { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PasswordHintRequest } from \"@bitwarden/common/models/request/passwordHintRequest\";\n\nexport class HintComponent {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"passwordHint\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n            <small class=\"form-text text-muted\">{{ \"enterEmailToGetHint\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n}\n","export abstract class VaultTimeoutService {\n  checkVaultTimeout: () => Promise<void>;\n  lock: (allowSoftLock?: boolean, userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: () => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"@bitwarden/common/enums/keySuffixOptions\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\n\n@Directive()\nexport class LockComponent implements OnInit {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    // Load the first and observe updates\n    await this.load();\n    this.stateService.activeAccount.subscribe(async () => {\n      await this.load();\n    });\n  }\n\n  async submit() {\n    if (this.pinLock && (this.pin == null || this.pin === \"\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n    if (!this.pinLock && (this.masterPassword == null || this.masterPassword === \"\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    if (this.pinLock) {\n      let failed = true;\n      try {\n        if (this.pinSet[0]) {\n          const key = await this.cryptoService.makeKeyFromPin(\n            this.pin,\n            this.email,\n            kdf,\n            kdfIterations,\n            await this.stateService.getDecryptedPinProtected()\n          );\n          const encKey = await this.cryptoService.getEncKey(key);\n          const protectedPin = await this.stateService.getProtectedPin();\n          const decPin = await this.cryptoService.decryptToUtf8(\n            new EncString(protectedPin),\n            encKey\n          );\n          failed = decPin !== this.pin;\n          if (!failed) {\n            await this.setKeyAndContinue(key);\n          }\n        } else {\n          const key = await this.cryptoService.makeKeyFromPin(\n            this.pin,\n            this.email,\n            kdf,\n            kdfIterations\n          );\n          failed = false;\n          await this.setKeyAndContinue(key);\n        }\n      } catch {\n        failed = true;\n      }\n\n      if (failed) {\n        this.invalidPinAttempts++;\n        if (this.invalidPinAttempts >= 5) {\n          this.messagingService.send(\"logout\");\n          return;\n        }\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"invalidPin\")\n        );\n      }\n    } else {\n      const key = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email,\n        kdf,\n        kdfIterations\n      );\n      const storedKeyHash = await this.cryptoService.getKeyHash();\n\n      let passwordValid = false;\n\n      if (storedKeyHash != null) {\n        passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n      } else {\n        const request = new SecretVerificationRequest();\n        const serverKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.ServerAuthorization\n        );\n        request.masterPasswordHash = serverKeyHash;\n        try {\n          this.formPromise = this.apiService.postAccountVerifyPassword(request);\n          await this.formPromise;\n          passwordValid = true;\n          const localKeyHash = await this.cryptoService.hashPassword(\n            this.masterPassword,\n            key,\n            HashPurpose.LocalAuthorization\n          );\n          await this.cryptoService.setKeyHash(localKeyHash);\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n\n      if (passwordValid) {\n        if (this.pinSet[0]) {\n          const protectedPin = await this.stateService.getProtectedPin();\n          const encKey = await this.cryptoService.getEncKey(key);\n          const decPin = await this.cryptoService.decryptToUtf8(\n            new EncString(protectedPin),\n            encKey\n          );\n          const pinKey = await this.cryptoService.makePinKey(\n            decPin,\n            this.email,\n            kdf,\n            kdfIterations\n          );\n          await this.stateService.setDecryptedPinProtected(\n            await this.cryptoService.encrypt(key.key, pinKey)\n          );\n        }\n        await this.setKeyAndContinue(key);\n      } else {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"invalidMasterPassword\")\n        );\n      }\n    }\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setBiometricLocked(false);\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { ActivatedRoute, NavigationEnd, Router } from \"@angular/router\";\nimport { filter } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Injectable()\nexport class RouterService {\n  private previousUrl: string = undefined;\n  private currentUrl: string = undefined;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    i18nService: I18nService\n  ) {\n    this.currentUrl = this.router.url;\n\n    router.events\n      .pipe(filter((e) => e instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => {\n        this.currentUrl = event.url;\n\n        let title = i18nService.t(\"pageTitle\", \"Bitwarden\");\n        let child = this.activatedRoute.firstChild;\n        while (child.firstChild) {\n          child = child.firstChild;\n        }\n\n        const titleId: string = child?.snapshot?.data?.titleId;\n        const rawTitle: string = child?.snapshot?.data?.title;\n        const updateUrl = !child?.snapshot?.data?.doNotSaveUrl ?? true;\n\n        if (titleId != null || rawTitle != null) {\n          const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\n          if (newTitle != null && newTitle !== \"\") {\n            title = newTitle + \" | \" + title;\n          }\n        }\n        this.titleService.setTitle(title);\n        if (updateUrl) {\n          this.setPreviousUrl(this.currentUrl);\n        }\n      });\n  }\n\n  getPreviousUrl() {\n    return this.previousUrl;\n  }\n\n  setPreviousUrl(url: string) {\n    this.previousUrl = url;\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LockComponent as BaseLockComponent } from \"@bitwarden/angular/components/lock.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\n\nimport { RouterService } from \"../services/router.service\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    environmentService: EnvironmentService,\n    private routerService: RouterService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.onSuccessfulSubmit = async () => {\n      const previousUrl = this.routerService.getPreviousUrl();\n      if (previousUrl && previousUrl !== \"/\" && previousUrl.indexOf(\"lock\") === -1) {\n        this.successRoute = previousUrl;\n      }\n      this.router.navigateByUrl(this.successRoute);\n    };\n  }\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  Api = 2,\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"text-center mb-4\">\n        <i class=\"bwi bwi-lock bwi-4x text-muted\" aria-hidden=\"true\"></i>\n      </p>\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"yourVaultIsLocked\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appAutofocus\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"text-muted form-text\">\n              {{ \"loggedInAsEmailOn\" | i18n: email:webVaultHostname }}\n            </small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-unlock\" aria-hidden=\"true\"></i> {{ \"unlock\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { AuthenticationType } from \"../../enums/authenticationType\";\nimport { TokenRequestTwoFactor } from \"../request/identityToken/tokenRequestTwoFactor\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class ApiLogInCredentials {\n  readonly type = AuthenticationType.Api;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"@bitwarden/common/misc/captcha_iframe\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: any) => Promise<string>;\n  generatePassphrase: (options: any) => Promise<string>;\n  getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: any\n  ) => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: any) => Promise<any>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\n}\n","import { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { Directive, Input, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() email = \"\";\n  @Input() rememberEmail = true;\n\n  masterPassword = \"\";\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected alwaysRememberEmail = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n  }\n\n  async ngOnInit() {\n    if (this.email == null || this.email === \"\") {\n      this.email = await this.stateService.getRememberedEmail();\n      if (this.email == null) {\n        this.email = \"\";\n      }\n    }\n    if (!this.alwaysRememberEmail) {\n      this.rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n    }\n    if (Utils.isBrowser && !Utils.isNode) {\n      this.focusInput();\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        this.email,\n        this.masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (this.rememberEmail || this.alwaysRememberEmail) {\n        await this.stateService.setRememberedEmail(this.email);\n      } else {\n        await this.stateService.setRememberedEmail(null);\n      }\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  protected focusInput() {\n    document\n      .getElementById(this.email == null || this.email === \"\" ? \"email\" : \"masterPassword\")\n      .focus();\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policyResponse\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { StateService as BaseStateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storageOptions\";\n\nimport { Account } from \"src/models/account\";\n\nexport abstract class StateService extends BaseStateService<Account> {\n  getRememberEmail: (options?: StorageOptions) => Promise<boolean>;\n  setRememberEmail: (value: boolean, options?: StorageOptions) => Promise<void>;\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"mb-2 logo logo-themed\" alt=\"Bitwarden\" />\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"loginOrCreateNewAccount\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"showResetPasswordAutoEnrollWarning\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"form-text\">\n              <a routerLink=\"/hint\">{{ \"getMasterPasswordHint\" | i18n }}</a>\n            </small>\n          </div>\n          <div class=\"form-check mb-3\">\n            <input\n              type=\"checkbox\"\n              class=\"form-check-input\"\n              id=\"rememberEmail\"\n              name=\"RememberEmail\"\n              [(ngModel)]=\"rememberEmail\"\n            />\n            <label class=\"form-check-label\" for=\"rememberEmail\">{{ \"rememberEmail\" | i18n }}</label>\n          </div>\n          <div class=\"mb-n3\" [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n            >\n              <i class=\"bwi bwi-pencil-square\" aria-hidden=\"true\"></i>\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n          <div class=\"d-flex\">\n            <a routerLink=\"/sso\" class=\"btn btn-outline-secondary btn-block mt-2\">\n              <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i> {{ \"enterpriseSingleSignOn\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { LoginComponent as BaseLoginComponent } from \"@bitwarden/angular/components/login.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nimport { StateService } from \"../../abstractions/state.service\";\nimport { RouterService } from \"../services/router.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent {\n  showResetPasswordAutoEnrollWarning = false;\n  enforcedPasswordPolicyOptions: MasterPasswordPolicyOptions;\n  policies: ListResponse<PolicyResponse>;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    private route: ActivatedRoute,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private policyService: PolicyService,\n    logService: LogService,\n    ngZone: NgZone,\n    protected stateService: StateService,\n    private messagingService: MessagingService,\n    private routerService: RouterService\n  ) {\n    super(\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone\n    );\n    this.onSuccessfulLogin = async () => {\n      this.messagingService.send(\"setFullWidth\");\n    };\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n      if (qParams.premium != null) {\n        this.routerService.setPreviousUrl(\"/settings/premium\");\n      } else if (qParams.org != null) {\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n          queryParams: { token: qParams.sponsorshipToken },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      await super.ngOnInit();\n      this.rememberEmail = await this.stateService.getRememberEmail();\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      let policyList: Policy[] = null;\n      try {\n        this.policies = await this.apiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        policyList = this.policyService.mapPoliciesFromToken(this.policies);\n      } catch (e) {\n        this.logService.error(e);\n      }\n\n      if (policyList != null) {\n        const resetPasswordPolicy = this.policyService.getResetPasswordPolicyOptions(\n          policyList,\n          invite.organizationId\n        );\n        // Set to true if policy enabled and auto-enroll enabled\n        this.showResetPasswordAutoEnrollWarning =\n          resetPasswordPolicy[1] && resetPasswordPolicy[0].autoEnrollEnabled;\n\n        this.enforcedPasswordPolicyOptions =\n          await this.policyService.getMasterPasswordPolicyOptions(policyList);\n      }\n    }\n  }\n\n  async goAfterLogIn() {\n    // Check master password against policy\n    if (this.enforcedPasswordPolicyOptions != null) {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      const masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n\n      // If invalid, save policies and require update\n      if (\n        !this.policyService.evaluateMasterPassword(\n          masterPasswordScore,\n          this.masterPassword,\n          this.enforcedPasswordPolicyOptions\n        )\n      ) {\n        const policiesData: { [id: string]: PolicyData } = {};\n        this.policies.data.map((p) => (policiesData[p.id] = new PolicyData(p)));\n        await this.policyService.replace(policiesData);\n        this.router.navigate([\"update-password\"]);\n        return;\n      }\n    }\n\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  async submit() {\n    await this.stateService.setRememberEmail(this.rememberEmail);\n    if (!this.rememberEmail) {\n      await this.stateService.setRememberedEmail(null);\n    }\n    await super.submit();\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","export class DeleteRecoverRequest {\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { DeleteRecoverRequest } from \"@bitwarden/common/models/request/deleteRecoverRequest\";\n\n@Component({\n  selector: \"app-recover-delete\",\n  templateUrl: \"recover-delete.component.html\",\n})\nexport class RecoverDeleteComponent {\n  email: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new DeleteRecoverRequest();\n      request.email = this.email.trim().toLowerCase();\n      this.formPromise = this.apiService.postAccountRecoverDelete(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deleteRecoverEmailSent\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>{{ \"deleteRecoverDesc\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorRecoveryRequest extends SecretVerificationRequest {\n  recoveryCode: string;\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorRecoveryRequest } from \"@bitwarden/common/models/request/twoFactorRecoveryRequest\";\n\n@Component({\n  selector: \"app-recover-two-factor\",\n  templateUrl: \"recover-two-factor.component.html\",\n})\nexport class RecoverTwoFactorComponent {\n  email: string;\n  masterPassword: string;\n  recoveryCode: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new TwoFactorRecoveryRequest();\n      request.recoveryCode = this.recoveryCode.replace(/\\s/g, \"\").toLowerCase();\n      request.email = this.email.trim().toLowerCase();\n      const key = await this.authService.makePreloginKey(this.masterPassword, request.email);\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n      this.formPromise = this.apiService.postTwoFactorRecover(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"twoStepRecoverDisabled\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"recoverAccountTwoStep\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>\n            {{ \"recoverAccountTwoStepDesc\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/lost-two-step-device/\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              >{{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"password\"\n              name=\"MasterPassword\"\n              class=\"form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"recoveryCode\">{{ \"recoveryCodeTitle\" | i18n }}</label>\n            <input\n              id=\"recoveryCode\"\n              class=\"text-monospace form-control\"\n              type=\"text\"\n              name=\"RecoveryCode\"\n              [(ngModel)]=\"recoveryCode\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { AbstractControl, FormGroup, ValidatorFn } from \"@angular/forms\";\n\nimport { FormGroupControls } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\n\nexport class InputsFieldMatch {\n  //check to ensure two fields do not have the same value\n  static validateInputsDoesntMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? {\n              inputsMatchError: {\n                message: errorMessage,\n              },\n            }\n          : null;\n      }\n\n      return null;\n    };\n  }\n\n  //check to ensure two fields have the same value\n  static validateInputsMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? null\n          : {\n              inputsDoesntMatchError: {\n                message: errorMessage,\n              },\n            };\n      }\n\n      return null;\n    };\n  }\n\n  //checks the formGroup if two fields have the same value and validation is controlled from either field\n  static validateFormInputsMatch(field: string, fieldMatchTo: string, errorMessage: string) {\n    return (formGroup: FormGroup) => {\n      const fieldCtrl = formGroup.controls[field];\n      const fieldMatchToCtrl = formGroup.controls[fieldMatchTo];\n\n      if (fieldCtrl.value !== fieldMatchToCtrl.value) {\n        fieldMatchToCtrl.setErrors({\n          inputsDoesntMatchError: {\n            message: errorMessage,\n          },\n        });\n      } else {\n        fieldMatchToCtrl.setErrors(null);\n      }\n    };\n  }\n}\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captchaProtectedRequest\";\nimport { KeysRequest } from \"./keysRequest\";\nimport { ReferenceEventRequest } from \"./referenceEventRequest\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { AbstractControl } from \"@angular/forms\";\nexport interface AllValidationErrors {\n  controlName: string;\n  errorName: string;\n}\n\nexport interface FormGroupControls {\n  [key: string]: AbstractControl;\n}\n\nexport abstract class FormValidationErrorsService {\n  getFormValidationErrors: (controls: FormGroupControls) => AllValidationErrors[];\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { AbstractControl, FormBuilder, ValidatorFn, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { InputsFieldMatch } from \"@bitwarden/angular/validators/inputsFieldMatch.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keysRequest\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\nimport { RegisterRequest } from \"@bitwarden/common/models/request/registerRequest\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() isInTrialFlow = false;\n  @Output() createdAccount = new EventEmitter<string>();\n\n  showPassword = false;\n  formPromise: Promise<any>;\n  masterPasswordScore: number;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  showErrorSummary = false;\n\n  formGroup = this.formBuilder.group(\n    {\n      email: [\"\", [Validators.required, Validators.email]],\n      name: [\"\"],\n      masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      confirmMasterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      hint: [\n        null,\n        [\n          InputsFieldMatch.validateInputsDoesntMatch(\n            \"masterPassword\",\n            this.i18nService.t(\"hintEqualsPassword\")\n          ),\n        ],\n      ],\n      acceptPolicies: [false, [this.acceptPoliciesValidation()]],\n    },\n    {\n      validator: InputsFieldMatch.validateFormInputsMatch(\n        \"masterPassword\",\n        \"confirmMasterPassword\",\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      ),\n    }\n  );\n\n  protected successRoute = \"login\";\n  private masterPasswordStrengthTimeout: any;\n\n  constructor(\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected formBuilder: FormBuilder,\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  get masterPasswordScoreWidth() {\n    return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n  }\n\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  async submit(showToast = true) {\n    let email = this.formGroup.get(\"email\")?.value;\n    let name = this.formGroup.get(\"name\")?.value;\n    const masterPassword = this.formGroup.get(\"masterPassword\")?.value;\n    const hint = this.formGroup.get(\"hint\")?.value;\n\n    this.formGroup.markAllAsTouched();\n    this.showErrorSummary = true;\n\n    if (this.formGroup.get(\"acceptPolicies\").hasError(\"required\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesRequired\")\n      );\n      return;\n    }\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return;\n    }\n\n    //desktop, browser\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return;\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return;\n      }\n    }\n\n    name = name === \"\" ? null : name;\n    email = email.trim().toLowerCase();\n    const kdf = DEFAULT_KDF_TYPE;\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      email,\n      name,\n      hashedPassword,\n      hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n\n    try {\n      this.formPromise = this.apiService.postRegister(request);\n      try {\n        await this.formPromise;\n      } catch (e) {\n        if (this.handleCaptchaRequired(e)) {\n          return;\n        } else {\n          throw e;\n        }\n      }\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"newAccountCreated\"));\n      if (this.isInTrialFlow) {\n        this.createdAccount.emit(this.formGroup.get(\"email\")?.value);\n      } else {\n        this.router.navigate([this.successRoute], { queryParams: { email: email } });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  updatePasswordStrength() {\n    const masterPassword = this.formGroup.get(\"masterPassword\")?.value;\n\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const email = this.formGroup.get(\"email\")?.value;\n    const name = this.formGroup.get(\"name\").value;\n    const atPosition = email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (name != null && name !== \"\") {\n      userInput = userInput.concat(name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        case \"inputsDoesntMatchError\":\n          return this.i18nService.t(\"masterPassDoesntMatch\");\n        case \"inputsMatchError\":\n          return this.i18nService.t(\"hintEqualsPassword\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  //validation would be ignored on selfhosted\n  private acceptPoliciesValidation(): ValidatorFn {\n    return (control: AbstractControl) => {\n      const ctrlValue = control.value;\n\n      return !ctrlValue && this.showTerms ? { required: true } : null;\n    };\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policyData\";\n\nimport Domain from \"./domainBase\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","export class ReferenceEventRequest {\n  id: string;\n  layout: string;\n  flow: string;\n}\n","import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"bit-label\",\n})\nexport class BitLabel {}\n","<div class=\"progress\">\n  <div\n    class=\"progress-bar {{ color }}\"\n    role=\"progressbar\"\n    [ngStyle]=\"{ width: scoreWidth + '%' }\"\n    attr.aria-valuenow=\"{{ scoreWidth }}\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n  >\n    <ng-container *ngIf=\"showText && text\">\n      {{ text }}\n    </ng-container>\n  </div>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-password-strength\",\n  templateUrl: \"password-strength.component.html\",\n})\nexport class PasswordStrengthComponent implements OnChanges {\n  @Input() score?: number;\n  @Input() showText = false;\n\n  scoreWidth = 0;\n  color = \"bg-danger\";\n  text: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnChanges(): void {\n    this.scoreWidth = this.score == null ? 0 : (this.score + 1) * 20;\n    switch (this.score) {\n      case 4:\n        this.color = \"bg-success\";\n        this.text = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        this.color = \"bg-primary\";\n        this.text = this.i18nService.t(\"good\");\n        break;\n      case 2:\n        this.color = \"bg-warning\";\n        this.text = this.i18nService.t(\"weak\");\n        break;\n      default:\n        this.color = \"bg-danger\";\n        this.text = this.score != null ? this.i18nService.t(\"weak\") : null;\n        break;\n    }\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ButtonTypes } from \"../button\";\n\n@Component({\n  selector: \"bit-submit-button\",\n  templateUrl: \"./submit-button.component.html\",\n})\nexport class SubmitButtonComponent {\n  @Input() buttonType: ButtonTypes = \"primary\";\n  @Input() disabled = false;\n  @Input() loading: boolean;\n}\n","<button bitButton type=\"submit\" [buttonType]=\"buttonType\" [disabled]=\"loading || disabled\">\n  <span class=\"tw-relative\">\n    <span [ngClass]=\"{ 'tw-invisible': loading }\">\n      <ng-content></ng-content>\n    </span>\n    <span class=\"tw-absolute tw-inset-0\" [ngClass]=\"{ 'tw-invisible': !loading }\">\n      <i class=\"bwi bwi-spinner bwi-lg bwi-spin tw-align-baseline\" aria-hidden=\"true\"></i>\n    </span>\n  </span>\n</button>\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"tw-container tw-mx-auto\"\n  [formGroup]=\"formGroup\"\n>\n  <div>\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"emailAddress\" | i18n }}</bit-label>\n        <input bitInput type=\"email\" formControlName=\"email\" />\n        <bit-hint>{{ \"emailAddressDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"name\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"name\" />\n        <bit-hint>{{ \"yourNameDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <app-callout\n        type=\"info\"\n        [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n        *ngIf=\"enforcedPolicyOptions\"\n      >\n      </app-callout>\n      <bit-form-field>\n        <bit-label>{{ \"masterPass\" | i18n }}</bit-label>\n        <input\n          bitInput\n          (input)=\"updatePasswordStrength()\"\n          type=\"{{ showPassword ? 'text' : 'password' }}\"\n          formControlName=\"masterPassword\"\n        />\n        <button type=\"button\" bitSuffix bitButton (click)=\"togglePassword()\">\n          <i\n            aria-hidden=\"true\"\n            class=\"bwi bwi-lg bwi-eye\"\n            [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n          ></i>\n        </button>\n        <bit-hint>\n          <span class=\"tw-font-semibold\">Important:</span>\n          {{ \"masterPassImportant\" | i18n }}\n        </bit-hint>\n      </bit-form-field>\n      <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n      </app-password-strength>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"reTypeMasterPass\" | i18n }}</bit-label>\n        <input\n          bitInput\n          type=\"{{ showPassword ? 'text' : 'password' }}\"\n          formControlName=\"confirmMasterPassword\"\n        />\n        <button type=\"button\" bitSuffix bitButton (click)=\"togglePassword()\">\n          <i\n            aria-hidden=\"true\"\n            class=\"bwi bwi-lg bwi-eye\"\n            [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n          ></i>\n        </button>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"masterPassHint\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"hint\" />\n        <bit-hint>{{ \"masterPassHintDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div [hidden]=\"!showCaptcha()\">\n      <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n    </div>\n\n    <div class=\"tw-flex tw-items-start tw-mb-3\" *ngIf=\"showTerms\">\n      <div class=\"tw-flex tw-items-center tw-h-6\">\n        <input\n          class=\"tw-w-4 tw-rounded tw-border tw-border-gray-300\"\n          bitInput\n          type=\"checkbox\"\n          formControlName=\"acceptPolicies\"\n        />\n      </div>\n      <bit-label class=\"ml-2\">\n        {{ \"acceptPolicies\" | i18n }}<br />\n        <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n          \"termsOfService\" | i18n\n        }}</a\n        >,\n        <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n          \"privacyPolicy\" | i18n\n        }}</a>\n      </bit-label>\n    </div>\n\n    <div class=\"tw-flex tw-mb-3\">\n      <bit-submit-button [loading]=\"form.loading\">{{ \"createAccount\" | i18n }}</bit-submit-button>\n      <a\n        bitButton\n        buttonType=\"secondary\"\n        routerLink=\"/login\"\n        class=\"tw-inline-flex tw-items-center tw-ml-3 tw-px-3\"\n      >\n        <i class=\"bwi bwi-sign-in tw-mr-2\"></i>\n        {{ \"logIn\" | i18n }}\n      </a>\n    </div>\n    <bit-error-summary *ngIf=\"showErrorSummary\" [formGroup]=\"formGroup\"></bit-error-summary>\n  </div>\n</form>\n","import { Component, Input } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\n\n@Component({\n  selector: \"app-register-form\",\n  templateUrl: \"./register-form.component.html\",\n})\nexport class RegisterFormComponent extends BaseRegisterComponent {\n  @Input() queryParamEmail: string;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n  showErrorSummary = false;\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: FormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n\n    if (this.queryParamEmail) {\n      this.formGroup.get(\"email\")?.setValue(this.queryParamEmail);\n    }\n  }\n\n  async submit() {\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.masterPasswordScore,\n        this.formGroup.get(\"masterPassword\")?.value,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    await super.submit(false);\n  }\n}\n","<div class=\"layout\" [ngClass]=\"['layout', layout]\">\n  <!-- TEAMS 1 Header -->\n  <header\n    class=\"header\"\n    *ngIf=\"\n      layout === 'default' ||\n      layout === 'teams' ||\n      layout === 'teams1' ||\n      layout === 'teams2' ||\n      layout === 'enterprise' ||\n      layout === 'enterprise1' ||\n      layout === 'enterprise2' ||\n      layout === 'cnetcmpgnent' ||\n      layout === 'cnetcmpgnteams' ||\n      layout === 'cnetcmpgnind'\n    \"\n  >\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-7\">\n          <img\n            alt=\"Bitwarden\"\n            class=\"logo mb-2\"\n            src=\"../../images/register-layout/logo-horizontal-white.svg\"\n          />\n        </div>\n      </div>\n    </div>\n  </header>\n\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-7\" *ngIf=\"layout\">\n        <div class=\"mt-5\">\n          <!-- Default Body -->\n          <div\n            *ngIf=\"\n              layout === 'teams' ||\n              layout === 'enterprise' ||\n              layout === 'enterprise1' ||\n              layout === 'default'\n            \"\n          >\n            <h1>The Bitwarden Password Manager</h1>\n            <h2>\n              Trusted by millions of individuals, teams, and organizations worldwide for secure\n              password storage and sharing.\n            </h2>\n            <p>Store logins, secure notes, and more</p>\n            <p>Collaborate and share securely</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- Teams & Enterprise Body -->\n          <div *ngIf=\"layout === 'teams1' || layout === 'teams2' || layout === 'enterprise2'\">\n            <h1>\n              Start Your <span *ngIf=\"layout === 'teams1' || layout === 'teams1'\">Teams<br /></span\n              ><span *ngIf=\"layout === 'enterprise2'\">Enterprise</span> Free Trial Now\n            </h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Collaborate and share securely</p>\n            <p>Deploy and manage quickly and easily</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- CNET Campaign Teams & Enterprise Body -->\n          <div *ngIf=\"layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnent'\">\n            <h1>\n              Start Your <span *ngIf=\"layout === 'cnetcmpgnteams'\">Teams<br /></span\n              ><span *ngIf=\"layout === 'cnetcmpgnent'\">Enterprise</span> Free Trial Now\n            </h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Collaborate and share securely</p>\n            <p>Deploy and manage quickly and easily</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- CNET Campaign Premium Body -->\n          <div *ngIf=\"layout === 'cnetcmpgnind'\">\n            <h1>Start Your Premium Account Now</h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Store logins, secure notes, and more</p>\n            <p>Secure your account with advanced two-step login</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n        </div>\n      </div>\n      <div [ngClass]=\"{ 'col-5': layout, 'col-12': !layout }\">\n        <div class=\"row justify-content-md-center mt-5\">\n          <div [ngClass]=\"{ 'col-5': !layout, 'col-12': layout }\">\n            <h1 class=\"lead text-center mb-4\" *ngIf=\"!layout\">{{ \"createAccount\" | i18n }}</h1>\n            <div class=\"card d-block\">\n              <div class=\"card-body\">\n                <app-callout\n                  title=\"{{ 'createOrganizationStep1' | i18n }}\"\n                  type=\"info\"\n                  icon=\"bwi bwi-thumb-tack\"\n                  *ngIf=\"showCreateOrgMessage\"\n                >\n                  {{ \"createOrganizationCreatePersonalAccount\" | i18n }}\n                </app-callout>\n                <app-register-form\n                  [queryParamEmail]=\"email\"\n                  [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n                ></app-register-form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-7 d-flex align-items-center\">\n        <div\n          *ngIf=\"\n            layout === 'cnetcmpgnent' || layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnind'\n          \"\n        >\n          <figure>\n            <figcaption>\n              <cite>\n                <img\n                  src=\"../../images/register-layout/cnet-logo.svg\"\n                  class=\"w-25 d-block mx-auto\"\n                  alt=\"cnet logo\"\n                />\n              </cite>\n            </figcaption>\n            <blockquote class=\"mx-auto text-center px-4\">\n              \"No more excuses; start using Bitwarden today. The identity you save could be your\n              own. The money definitely will be.\"\n            </blockquote>\n          </figure>\n        </div>\n\n        <div\n          *ngIf=\"\n            layout === 'teams' ||\n            layout === 'teams1' ||\n            layout === 'teams2' ||\n            layout === 'enterprise' ||\n            layout === 'enterprise1' ||\n            layout === 'enterprise2' ||\n            layout === 'default'\n          \"\n        >\n          <figure>\n            <figcaption>\n              <cite>\n                <img\n                  src=\"../../images/register-layout/forbes-logo.svg\"\n                  class=\"w-25 d-block mx-auto\"\n                  alt=\"Forbes Logo\"\n                />\n              </cite>\n            </figcaption>\n            <blockquote class=\"mx-auto text-center px-4\">\n              “Bitwarden boasts the backing of some of the world's best security experts and an\n              attractive, easy-to-use interface”\n            </blockquote>\n          </figure>\n        </div>\n      </div>\n      <div\n        *ngIf=\"\n          layout === 'cnetcmpgnent' || layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnind'\n        \"\n        class=\"col-5 d-flex align-items-center justify-content-center\"\n      >\n        <img\n          src=\"../../images/register-layout/usnews-360-badge.svg\"\n          class=\"w-50 d-block\"\n          alt=\"US News 360 Reviews Best Password Manager\"\n        />\n      </div>\n      <div\n        *ngIf=\"\n          layout === 'teams' ||\n          layout === 'teams1' ||\n          layout === 'teams2' ||\n          layout === 'enterprise' ||\n          layout === 'enterprise1' ||\n          layout === 'enterprise2' ||\n          layout === 'default'\n        \"\n        class=\"col-5 d-flex align-items-center justify-content-center\"\n      >\n        <img\n          src=\"../../images/register-layout/usnews-360-badge.svg\"\n          class=\"w-50 d-block\"\n          alt=\"US News 360 Reviews Best Password Manager\"\n        />\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\n\nimport { RouterService } from \"../services/router.service\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"register.component.html\",\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n  email = \"\";\n  showCreateOrgMessage = false;\n  layout = \"\";\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n  private policies: Policy[];\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: FormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    environmentService: EnvironmentService,\n    logService: LogService,\n    private routerService: RouterService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      this.referenceData = new ReferenceEventRequest();\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n      if (qParams.premium != null) {\n        this.routerService.setPreviousUrl(\"/settings/premium\");\n      } else if (qParams.org != null) {\n        this.showCreateOrgMessage = true;\n        this.referenceData.flow = qParams.org;\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      if (qParams.layout != null) {\n        this.layout = this.referenceData.layout = qParams.layout;\n      }\n      if (qParams.reference != null) {\n        this.referenceData.id = qParams.reference;\n      } else {\n        this.referenceData.id = (\"; \" + document.cookie)\n          .split(\"; reference=\")\n          .pop()\n          .split(\";\")\n          .shift();\n      }\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        // After logging in redirect them to setup the families sponsorship\n        const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n          queryParams: { plan: qParams.sponsorshipToken },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      if (this.referenceData.id === \"\") {\n        this.referenceData.id = null;\n      }\n    });\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      try {\n        const policies = await this.apiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        if (policies.data != null) {\n          const policiesData = policies.data.map((p) => new PolicyData(p));\n          this.policies = policiesData.map((p) => new Policy(p));\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (this.policies != null) {\n      this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(\n        this.policies\n      );\n    }\n\n    await super.ngOnInit();\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<any>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.apiService.postLeaveOrganization(this.organization.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"removeMasterPassword\" | i18n }}</p>\n      <hr />\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-block\"\n            (click)=\"convert()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"continuing\"\n            ></i>\n            {{ \"removeMasterPassword\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-block\"\n            (click)=\"leave()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"leaving\"\n            ></i>\n            {{ \"leaveOrganization\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"@bitwarden/angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class OrganizationUserResetPasswordEnrollmentRequest extends SecretVerificationRequest {\n  resetPasswordKey: string;\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keysRequest\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  masterPasswordScore: number;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  private masterPasswordStrengthTimeout: any;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.enforcedPolicyOptions ??= await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      this.masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  updatePasswordStrength() {\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keysRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { SetPasswordRequest } from \"@bitwarden/common/models/request/setPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.apiService.getOrganizationAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = DEFAULT_KDF_TYPE;\n    this.kdfIterations = DEFAULT_KDF_ITERATIONS;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.apiService.getOrganizationKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.masterPasswordHash = masterPasswordHash;\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.apiService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body text-center\" *ngIf=\"syncLoading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!syncLoading\">\n          <app-callout type=\"info\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"resetPasswordAutoEnroll\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  (input)=\"updatePasswordStrength()\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n            <small class=\"form-text text-muted\">{{ \"masterPassDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"@bitwarden/angular/components/set-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService\n    );\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { SsoLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\nimport { SsoPreValidateResponse } from \"@bitwarden/common/models/response/ssoPreValidateResponse\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<SsoPreValidateResponse>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return;\n    }\n\n    this.initiateSsoFormPromise = this.apiService.preValidateSso(this.identifier);\n    const response = await this.initiateSsoFormPromise;\n\n    const authorizeUrl = await this.buildAuthorizeUrl(\n      returnUri,\n      includeUserIdentifier,\n      response.token\n    );\n    this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean,\n    token?: string\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier) +\n      \"&ssoToken=\" +\n      encodeURIComponent(token);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n\n      // TODO: Key Connector Service should pass this error message to the logout callback instead of displaying here\n      if (e.message === \"Key Connector error\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorError\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  class=\"container\"\n  [appApiAction]=\"initiateSsoFormPromise\"\n  ngNativeValidate\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"logo mb-2 logo-themed\" alt=\"Bitwarden\" />\n      <div class=\"card d-block mt-4\">\n        <div class=\"card-body\" *ngIf=\"loggingIn\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loggingIn\">\n          <p>{{ \"ssoLogInWithOrgIdentifier\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"identifier\">{{ \"organizationIdentifier\" | i18n }}</label>\n            <input\n              id=\"identifier\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Identifier\"\n              [(ngModel)]=\"identifier\"\n              required\n              appAutofocus\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SsoComponent as BaseSsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      } else {\n        const storedIdentifier = await this.stateService.getSsoOrgIdentifier();\n        if (storedIdentifier != null) {\n          this.identifier = storedIdentifier;\n        }\n      }\n    });\n  }\n\n  async submit() {\n    await this.stateService.setSsoOrganizationIdentifier(this.identifier);\n    if (this.clientId === \"browser\") {\n      document.cookie = `ssoHandOffMessage=${this.i18nService.t(\"ssoHandOff\")};SameSite=strict`;\n    }\n    super.submit();\n  }\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { TwoFactorProviderType } from \"../../../enums/twoFactorProviderType\";\n\nexport class TokenRequestTwoFactor {\n  constructor(\n    public provider: TwoFactorProviderType = null,\n    public token: string = null,\n    public remember: boolean = false\n  ) {}\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n  deviceIdentifier: string;\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { WebAuthnIFrame } from \"@bitwarden/common/misc/webauthn_iframe\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { TokenRequestTwoFactor } from \"@bitwarden/common/models/request/identityToken/tokenRequestTwoFactor\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService,\n    protected appIdService: AppIdService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      new TokenRequestTwoFactor(this.selectedProviderType, this.token, this.remember),\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      request.deviceIdentifier = await this.appIdService.getAppId();\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithApiKey()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals = false;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config?: ModalConfig) {\n    if (!(config?.allowMultipleModals ?? false) && this.modalCount > 0) {\n      return;\n    }\n\n    // eslint-disable-next-line\n    const [modalRef, _] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"twoStepOptionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"twoStepOptionsTitle\">{{ \"twoStepOptions\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"list-group list-group-flush-2fa\">\n          <div *ngFor=\"let p of providers\" class=\"list-group-item list-group-item-action\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ p.name }}</h3>\n                {{ p.description }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-describedby]=\"p.name\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"choose(p)\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"list-group-item list-group-item-action\" (click)=\"recover()\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img class=\"recovery-code-img\" alt=\"rc logo\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ \"recoveryCodeTitle\" | i18n }}</h3>\n                {{ \"recoveryCodeDesc\" | i18n }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-descibedby]=\"'recoveryCodeTitle' | i18n\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"recover()\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"@bitwarden/angular/components/two-factor-options.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"container\"\n  ngNativeValidate\n  autocomplete=\"off\"\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div\n      class=\"col-5\"\n      [ngClass]=\"{\n        'col-9':\n          selectedProviderType === providerType.Duo ||\n          selectedProviderType === providerType.OrganizationDuo\n      }\"\n    >\n      <p class=\"lead text-center mb-4\">{{ title }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Email ||\n              selectedProviderType === providerType.Authenticator\n            \"\n          >\n            <p *ngIf=\"selectedProviderType === providerType.Authenticator\">\n              {{ \"enterVerificationCodeApp\" | i18n }}\n            </p>\n            <p *ngIf=\"selectedProviderType === providerType.Email\">\n              {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n            </p>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"text\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                inputmode=\"tel\"\n                appInputVerbatim\n              />\n              <small class=\"form-text\" *ngIf=\"selectedProviderType === providerType.Email\">\n                <a\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"sendEmail(true)\"\n                  [appApiAction]=\"emailPromise\"\n                  *ngIf=\"selectedProviderType === providerType.Email\"\n                >\n                  {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n                </a>\n              </small>\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n            <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n            <picture>\n              <source srcset=\"../../images/yubikey.avif\" type=\"image/avif\" />\n              <source srcset=\"../../images/yubikey.webp\" type=\"image/webp\" />\n              <img src=\"../../images/yubikey.jpg\" class=\"rounded img-fluid mb-3\" alt=\"\" />\n            </picture>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"password\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn\">\n            <div id=\"web-authn-frame\" class=\"mb-3\">\n              <iframe id=\"webauthn_iframe\" [allow]=\"webAuthnAllow\"></iframe>\n            </div>\n          </ng-container>\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Duo ||\n              selectedProviderType === providerType.OrganizationDuo\n            \"\n          >\n            <div id=\"duo-frame\" class=\"mb-3\">\n              <iframe id=\"duo_iframe\"></iframe>\n            </div>\n          </ng-container>\n          <i\n            class=\"bwi bwi-spinner text-muted bwi-spin pull-right\"\n            title=\"{{ 'loading' | i18n }}\"\n            *ngIf=\"form.loading && selectedProviderType === providerType.WebAuthn\"\n            aria-hidden=\"true\"\n          ></i>\n          <div class=\"form-check\" *ngIf=\"selectedProviderType != null\">\n            <input\n              id=\"remember\"\n              type=\"checkbox\"\n              name=\"Remember\"\n              class=\"form-check-input\"\n              [(ngModel)]=\"remember\"\n            />\n            <label for=\"remember\" class=\"form-check-label\">{{ \"rememberMe\" | i18n }}</label>\n          </div>\n          <ng-container *ngIf=\"selectedProviderType == null\">\n            <p>{{ \"noTwoStepProviders\" | i18n }}</p>\n            <p>{{ \"noTwoStepProviders2\" | i18n }}</p>\n          </ng-container>\n          <hr />\n          <div [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n          <div class=\"d-flex mb-3\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n              *ngIf=\"\n                selectedProviderType != null &&\n                selectedProviderType !== providerType.Duo &&\n                selectedProviderType !== providerType.OrganizationDuo &&\n                selectedProviderType !== providerType.WebAuthn\n              \"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n          <div class=\"text-center\">\n            <a href=\"#\" appStopClick (click)=\"anotherMethod()\">{{\n              \"useAnotherTwoStepMethod\" | i18n\n            }}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<ng-template #twoFactorOptions></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"@bitwarden/angular/components/two-factor.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { RouterService } from \"../services/router.service\";\n\nimport { TwoFactorOptionsComponent } from \"./two-factor-options.component\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  @ViewChild(\"twoFactorOptions\", { read: ViewContainerRef, static: true })\n  twoFactorOptionsModal: ViewContainerRef;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    private modalService: ModalService,\n    route: ActivatedRoute,\n    logService: LogService,\n    twoFactorService: TwoFactorService,\n    appIdService: AppIdService,\n    private routerService: RouterService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService,\n      appIdService\n    );\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async anotherMethod() {\n    const [modal] = await this.modalService.openViewRef(\n      TwoFactorOptionsComponent,\n      this.twoFactorOptionsModal,\n      (comp) => {\n        comp.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\n          modal.close();\n          this.selectedProviderType = provider;\n          await this.init();\n        });\n        comp.onRecoverSelected.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async goAfterLogIn() {\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class PasswordRequest extends SecretVerificationRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { Directive } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { PasswordRequest } from \"@bitwarden/common/models/request/passwordRequest\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdatePasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n  currentMasterPassword: string;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    protected router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async cancel() {\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n\n    const secret: Verification = {\n      type: VerificationType.MasterPassword,\n      secret: this.currentMasterPassword,\n    };\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return false;\n    }\n\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create Request\n      const request = new PasswordRequest();\n      request.masterPasswordHash = await this.cryptoService.hashPassword(\n        this.currentMasterPassword,\n        null\n      );\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.key = encKey[1].encryptedString;\n\n      // Update user's password\n      this.apiService.postPassword(request);\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"masterPasswordInvalidWarning\" | i18n }} </app-callout>\n          <app-callout\n            type=\"info\"\n            [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n            *ngIf=\"enforcedPolicyOptions\"\n          ></app-callout>\n\n          <form\n            #form\n            (ngSubmit)=\"submit()\"\n            [appApiAction]=\"formPromise\"\n            ngNativeValidate\n            autocomplete=\"off\"\n          >\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"currentMasterPassword\"\n                    type=\"password\"\n                    name=\"MasterPasswordHash\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"currentMasterPassword\"\n                    required\n                    appInputVerbatim\n                  />\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"newMasterPassword\"\n                    type=\"password\"\n                    name=\"NewMasterPasswordHash\"\n                    class=\"form-control mb-1\"\n                    [(ngModel)]=\"masterPassword\"\n                    (input)=\"updatePasswordStrength()\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                  <app-password-strength\n                    [score]=\"masterPasswordScore\"\n                    [showText]=\"true\"\n                  ></app-password-strength>\n                </div>\n              </div>\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"masterPasswordRetype\"\n                    type=\"password\"\n                    name=\"MasterPasswordRetype\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"masterPasswordRetype\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n              <i\n                class=\"fa fa-spinner fa-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"changeMasterPassword\" | i18n }}</span>\n            </button>\n            <button (click)=\"cancel()\" type=\"button\" class=\"btn btn-outline-secondary\">\n              <span>{{ \"cancel\" | i18n }}</span>\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { UpdatePasswordComponent as BaseUpdatePasswordComponent } from \"@bitwarden/angular/components/update-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\n\n@Component({\n  selector: \"app-update-password\",\n  templateUrl: \"update-password.component.html\",\n})\nexport class UpdatePasswordComponent extends BaseUpdatePasswordComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      userVerificationService,\n      logService\n    );\n  }\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { OrganizationUserResetPasswordRequest } from \"./organizationUserResetPasswordRequest\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { UpdateTempPasswordRequest } from \"@bitwarden/common/models/request/updateTempPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"updateMasterPasswordWarning\" | i18n }} </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  (input)=\"updatePasswordStrength()\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"@bitwarden/angular/components/update-temp-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    syncService: SyncService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","export class VerifyEmailRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VerifyEmailRequest } from \"@bitwarden/common/models/request/verifyEmailRequest\";\n\n@Component({\n  selector: \"app-verify-email-token\",\n  templateUrl: \"verify-email-token.component.html\",\n})\nexport class VerifyEmailTokenComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null) {\n        try {\n          await this.apiService.postAccountVerifyEmailToken(\n            new VerifyEmailRequest(qParams.userId, qParams.token)\n          );\n          if (await this.stateService.getIsAuthenticated()) {\n            await this.apiService.refreshIdentityToken();\n          }\n          this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailVerified\"));\n          this.router.navigate([\"/\"]);\n          return;\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"emailVerifiedFailed\"));\n      this.router.navigate([\"/\"]);\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","export class VerifyDeleteRecoverRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { VerifyDeleteRecoverRequest } from \"@bitwarden/common/models/request/verifyDeleteRecoverRequest\";\n\n@Component({\n  selector: \"app-verify-recover-delete\",\n  templateUrl: \"verify-recover-delete.component.html\",\n})\nexport class VerifyRecoverDeleteComponent implements OnInit {\n  email: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private token: string;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null && qParams.email != null) {\n        this.userId = qParams.userId;\n        this.token = qParams.token;\n        this.email = qParams.email;\n      } else {\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    try {\n      const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\n      this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n          <p class=\"text-center\">\n            <strong>{{ email }}</strong>\n          </p>\n          <p>{{ \"deleteRecoverConfirmDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-danger btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"deleteAccount\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class HomeGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return this.router.createUrlTree([\"/login\"], { queryParams: route.queryParams });\n    }\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"/lock\"], { queryParams: route.queryParams });\n    }\n    return this.router.createUrlTree([\"/vault\"], { queryParams: route.queryParams });\n  }\n}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-frontend-layout\",\n  templateUrl: \"frontend-layout.component.html\",\n})\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n    document.body.classList.add(\"layout_frontend\");\n  }\n\n  ngOnDestroy() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<router-outlet></router-outlet>\n<div class=\"container my-5 text-muted text-center\">\n  &copy; {{ year }} Bitwarden Inc. <br />\n  {{ \"versionNumber\" | i18n: version }}\n</div>\n","import { Permissions } from \"@bitwarden/common/enums/permissions\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nconst permissions = {\n  manage: [\n    Permissions.CreateNewCollections,\n    Permissions.EditAnyCollection,\n    Permissions.DeleteAnyCollection,\n    Permissions.EditAssignedCollections,\n    Permissions.DeleteAssignedCollections,\n    Permissions.AccessEventLogs,\n    Permissions.ManageGroups,\n    Permissions.ManageUsers,\n    Permissions.ManagePolicies,\n    Permissions.ManageSso,\n  ],\n  tools: [Permissions.AccessImportExport, Permissions.AccessReports],\n  settings: [Permissions.ManageOrganization],\n};\n\nexport class NavigationPermissionsService {\n  static getPermissions(route: keyof typeof permissions | \"admin\") {\n    if (route === \"admin\") {\n      return Object.values(permissions).reduce((previous, current) => previous.concat(current), []);\n    }\n\n    return permissions[route];\n  }\n\n  static canAccessAdmin(organization: Organization): boolean {\n    return (\n      this.canAccessTools(organization) ||\n      this.canAccessSettings(organization) ||\n      this.canAccessManage(organization)\n    );\n  }\n\n  static canAccessTools(organization: Organization): boolean {\n    return organization.hasAnyPermission(NavigationPermissionsService.getPermissions(\"tools\"));\n  }\n\n  static canAccessSettings(organization: Organization): boolean {\n    return organization.hasAnyPermission(NavigationPermissionsService.getPermissions(\"settings\"));\n  }\n\n  static canAccessManage(organization: Organization): boolean {\n    return organization.hasAnyPermission(NavigationPermissionsService.getPermissions(\"manage\"));\n  }\n}\n","import { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","import { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","export abstract class BroadcasterService {\n  send: (message: any, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: any) => any) => void;\n  unsubscribe: (id: string) => void;\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-avatar\",\n  template:\n    '<img *ngIf=\"src\" [src]=\"sanitizer.bypassSecurityTrustResourceUrl(src)\" title=\"{{data}}\" ' +\n    \"[ngClass]=\\\"{'rounded-circle': circle}\\\">\",\n})\nexport class AvatarComponent implements OnChanges, OnInit {\n  @Input() data: string;\n  @Input() email: string;\n  @Input() size = 45;\n  @Input() charCount = 2;\n  @Input() textColor = \"#ffffff\";\n  @Input() fontSize = 20;\n  @Input() fontWeight = 300;\n  @Input() dynamic = false;\n  @Input() circle = false;\n\n  src: string;\n\n  constructor(\n    public sanitizer: DomSanitizer,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    if (!this.dynamic) {\n      this.generate();\n    }\n  }\n\n  ngOnChanges() {\n    if (this.dynamic) {\n      this.generate();\n    }\n  }\n\n  private async generate() {\n    const enableGravatars = await this.stateService.getEnableGravitars();\n    if (enableGravatars && this.email != null) {\n      const hashBytes = await this.cryptoFunctionService.hash(\n        this.email.toLowerCase().trim(),\n        \"md5\"\n      );\n      const hash = Utils.fromBufferToHex(hashBytes).toLowerCase();\n      this.src = \"https://www.gravatar.com/avatar/\" + hash + \"?s=\" + this.size + \"&r=pg&d=retro\";\n    } else {\n      let chars: string = null;\n      const upperData = this.data.toUpperCase();\n\n      if (this.charCount > 1) {\n        chars = this.getFirstLetters(upperData, this.charCount);\n      }\n      if (chars == null) {\n        chars = this.unicodeSafeSubstring(upperData, this.charCount);\n      }\n\n      // If the chars contain an emoji, only show it.\n      if (chars.match(Utils.regexpEmojiPresentation)) {\n        chars = chars.match(Utils.regexpEmojiPresentation)[0];\n      }\n\n      const charObj = this.getCharText(chars);\n      const color = this.stringToColor(upperData);\n      const svg = this.getSvg(this.size, color);\n      svg.appendChild(charObj);\n      const html = window.document.createElement(\"div\").appendChild(svg).outerHTML;\n      const svgHtml = window.btoa(unescape(encodeURIComponent(html)));\n      this.src = \"data:image/svg+xml;base64,\" + svgHtml;\n    }\n  }\n\n  private stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  private getFirstLetters(data: string, count: number): string {\n    const parts = data.split(\" \");\n    if (parts.length > 1) {\n      let text = \"\";\n      for (let i = 0; i < count; i++) {\n        text += this.unicodeSafeSubstring(parts[i], 1);\n      }\n      return text;\n    }\n    return null;\n  }\n\n  private getSvg(size: number, color: string): HTMLElement {\n    const svgTag = window.document.createElement(\"svg\");\n    svgTag.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    svgTag.setAttribute(\"pointer-events\", \"none\");\n    svgTag.setAttribute(\"width\", size.toString());\n    svgTag.setAttribute(\"height\", size.toString());\n    svgTag.style.backgroundColor = color;\n    svgTag.style.width = size + \"px\";\n    svgTag.style.height = size + \"px\";\n    return svgTag;\n  }\n\n  private getCharText(character: string): HTMLElement {\n    const textTag = window.document.createElement(\"text\");\n    textTag.setAttribute(\"text-anchor\", \"middle\");\n    textTag.setAttribute(\"y\", \"50%\");\n    textTag.setAttribute(\"x\", \"50%\");\n    textTag.setAttribute(\"dy\", \"0.35em\");\n    textTag.setAttribute(\"pointer-events\", \"auto\");\n    textTag.setAttribute(\"fill\", this.textColor);\n    textTag.setAttribute(\n      \"font-family\",\n      '\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,' +\n        'sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"'\n    );\n    textTag.textContent = character;\n    textTag.style.fontWeight = this.fontWeight.toString();\n    textTag.style.fontSize = this.fontSize + \"px\";\n    return textTag;\n  }\n\n  private unicodeSafeSubstring(str: string, count: number) {\n    const characters = str.match(/./gu);\n    return characters != null ? characters.slice(0, count).join(\"\") : \"\";\n  }\n}\n","<nav class=\"navbar navbar-expand navbar-dark\" [ngClass]=\"{ 'nav-background-alt': selfHosted }\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\" appA11yTitle=\"{{ 'pageTitle' | i18n: 'Bitwarden' }}\">\n      <i class=\"bwi bwi-shield\" aria-hidden=\"true\"></i>\n    </a>\n    <div class=\"collapse navbar-collapse\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/vault\">{{ \"vaults\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/sends\">{{ \"send\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/tools\">{{ \"tools\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/reports\">{{ \"reports\" | i18n }}</a>\n        </li>\n        <li *ngIf=\"organizations.length >= 1\" class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" [routerLink]=\"['/organizations', organizations[0].id]\">{{\n            \"organizations\" | i18n\n          }}</a>\n        </li>\n        <ng-container *ngIf=\"providers.length >= 1\">\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length == 1\">\n            <a class=\"nav-link\" [routerLink]=\"['/providers', providers[0].id]\">{{\n              \"provider\" | i18n\n            }}</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length > 1\">\n            <a class=\"nav-link\" routerLink=\"/providers\">{{ \"provider\" | i18n }}</a>\n          </li>\n        </ng-container>\n      </ul>\n    </div>\n    <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\">\n      <li>\n        <button\n          [bitMenuTriggerFor]=\"accountMenu\"\n          class=\"tw-border-0 tw-bg-transparent tw-text-alt2 tw-opacity-70 hover:tw-opacity-90\"\n        >\n          <i class=\"bwi bwi-user-circle bwi-lg\" aria-hidden=\"true\"></i>\n          <i class=\"bwi bwi-caret-down bwi-sm\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu class=\"dropdown-menu\" #accountMenu>\n          <div class=\"tw-max-w-[300px] tw-min-w-[200px] tw-flex tw-flex-col\">\n            <div\n              class=\"tw-flex tw-items-center tw-leading-tight tw-text-info tw-py-1 tw-px-4\"\n              *ngIf=\"name\"\n              appStopProp\n            >\n              <app-avatar\n                [data]=\"name\"\n                [email]=\"email\"\n                size=\"25\"\n                fontSize=\"14\"\n                [circle]=\"true\"\n              ></app-avatar>\n              <div class=\"tw-ml-2 tw-block tw-overflow-hidden tw-whitespace-nowrap\">\n                <span>{{ \"loggedInAs\" | i18n }}</span>\n                <small class=\"tw-text-muted tw-block tw-overflow-hidden tw-whitespace-nowrap\">{{\n                  name\n                }}</small>\n              </div>\n            </div>\n            <bit-menu-divider></bit-menu-divider>\n            <a bitMenuItem routerLink=\"/settings/account\">\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"accountSettings\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/help/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-question-circle\" aria-hidden=\"true\"></i>\n              {{ \"getHelp\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/download/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"getApps\" | i18n }}\n            </a>\n            <bit-menu-divider></bit-menu-divider>\n            <button bitMenuItem type=\"button\" (click)=\"lock()\">\n              <i class=\"bwi bwi-fw bwi-lock\" aria-hidden=\"true\"></i>\n              {{ \"lockNow\" | i18n }}\n            </button>\n            <button bitMenuItem type=\"button\" (click)=\"logOut()\">\n              <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </bit-menu>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, NgZone, OnInit } from \"@angular/core\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\nimport { NavigationPermissionsService as OrgNavigationPermissionsService } from \"../organizations/services/navigation-permissions.service\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"navbar.component.html\",\n})\nexport class NavbarComponent implements OnInit {\n  selfHosted = false;\n  name: string;\n  email: string;\n  providers: Provider[] = [];\n  organizations: Organization[] = [];\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private providerService: ProviderService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private i18nService: I18nService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone\n  ) {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.name = await this.tokenService.getName();\n    this.email = await this.tokenService.getEmail();\n    if (this.name == null || this.name.trim() === \"\") {\n      this.name = this.email;\n    }\n\n    // Ensure providers and organizations are loaded\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n    this.providers = await this.providerService.getAll();\n\n    this.organizations = await this.buildOrganizations();\n\n    this.broadcasterService.subscribe(this.constructor.name, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"organizationCreated\":\n            if (this.organizations.length < 1) {\n              this.organizations = await this.buildOrganizations();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  async buildOrganizations() {\n    const allOrgs = await this.organizationService.getAll();\n    return allOrgs\n      .filter((org) => OrgNavigationPermissionsService.canAccessAdmin(org))\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  lock() {\n    this.messagingService.send(\"lockVault\");\n  }\n\n  logOut() {\n    this.messagingService.send(\"logout\");\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-footer\",\n  templateUrl: \"footer.component.html\",\n})\nexport class FooterComponent implements OnInit {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n  }\n}\n","<div class=\"container footer text-muted\">\n  <div class=\"row\">\n    <div class=\"col\">&copy; {{ year }} Bitwarden Inc.</div>\n    <div class=\"col text-center\"></div>\n    <div class=\"col text-right\">\n      {{ \"versionNumber\" | i18n: version }}\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-user-layout\",\n  templateUrl: \"user-layout.component.html\",\n})\nexport class UserLayoutComponent implements OnInit {\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","<ng-template>\n  <div\n    class=\"tw-pl-7 tw-inline-block tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300 tw-w-10/12\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { CdkStep } from \"@angular/cdk/stepper\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-vertical-step\",\n  templateUrl: \"vertical-step.component.html\",\n  providers: [{ provide: CdkStep, useExisting: VerticalStep }],\n})\nexport class VerticalStep extends CdkStep {\n  @Input() subLabel = \"\";\n}\n","<div class=\"tw-m-2.5 tw-text-center tw-h-16\">\n  <button\n    (click)=\"selectStep()\"\n    [disabled]=\"disabled\"\n    class=\"tw-w-full tw-flex tw-border-none tw-bg-transparent tw-items-center\"\n    [ngClass]=\"{\n      'hover:tw-bg-secondary-100': !disabled && step.editable\n    }\"\n    [attr.aria-expanded]=\"selected\"\n  >\n    <span\n      class=\"tw-rounded-full tw-font-bold tw-leading-9 tw-mr-3.5 tw-w-9\"\n      *ngIf=\"!step.completed\"\n      [ngClass]=\"{\n        'tw-text-contrast tw-bg-primary-500': selected,\n        'tw-text-main tw-bg-secondary-300': !selected && !disabled && step.editable,\n        'tw-text-muted tw-bg-transparent': disabled\n      }\"\n    >\n      {{ stepNumber }}\n    </span>\n    <span\n      class=\"tw-text-contrast tw-bg-primary-500 tw-rounded-full tw-font-bold tw-leading-9 tw-mr-3.5 tw-w-9\"\n      *ngIf=\"step.completed\"\n    >\n      <i class=\"bwi bwi-fw bwi-check tw-p-1\" aria-hidden=\"true\"></i>\n    </span>\n    <div\n      class=\"tw-text-left tw-txt-main tw-leading-snug tw-h-12 tw-mt-3.5\"\n      [ngClass]=\"{\n        'tw-font-bold': selected\n      }\"\n    >\n      <p\n        class=\"main-label text tw-text-main tw-mb-1\"\n        [ngClass]=\"{\n          'tw-mt-1': !step.subLabel\n        }\"\n      >\n        {{ step.label }}\n      </p>\n      <p class=\"sub-label small tw-text-muted\">{{ step.subLabel }}</p>\n    </div>\n  </button>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { VerticalStep } from \"./vertical-step.component\";\n\n@Component({\n  selector: \"app-vertical-step-content\",\n  templateUrl: \"vertical-step-content.component.html\",\n})\nexport class VerticalStepContentComponent {\n  @Output() onSelectStep = new EventEmitter<void>();\n\n  @Input() disabled = false;\n  @Input() selected = false;\n  @Input() step: VerticalStep;\n  @Input() stepNumber: number;\n\n  selectStep() {\n    this.onSelectStep.emit();\n  }\n}\n","<div>\n  <ul class=\"tw-flex tw-list-none tw-flex-col tw-flex-wrap tw-p-5\">\n    <li *ngFor=\"let step of steps; let i = index; let isLast = last\">\n      <app-vertical-step-content\n        [disabled]=\"isStepDisabled(i)\"\n        [selected]=\"selectedIndex === i\"\n        [step]=\"step\"\n        [stepNumber]=\"i + 1\"\n        (onSelectStep)=\"selectStepByIndex(i)\"\n      ></app-vertical-step-content>\n      <div\n        class=\"tw-pl-7 tw-inline-block\"\n        *ngIf=\"selectedIndex === i\"\n        [ngTemplateOutlet]=\"selected ? selected.content : null\"\n      ></div>\n      <div\n        class=\"tw-h-6 tw-ml-8 tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300\"\n        *ngIf=\"!isLast && !(selectedIndex === i)\"\n      ></div>\n    </li>\n  </ul>\n</div>\n","import { CdkStepper } from \"@angular/cdk/stepper\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-vertical-stepper\",\n  templateUrl: \"vertical-stepper.component.html\",\n  providers: [{ provide: CdkStepper, useExisting: VerticalStepperComponent }],\n})\nexport class VerticalStepperComponent extends CdkStepper {\n  @Input()\n  activeClass = \"active\";\n\n  isNextButtonHidden() {\n    return !(this.steps.length === this.selectedIndex + 1);\n  }\n\n  isStepDisabled(index: number) {\n    if (this.selectedIndex !== index) {\n      return this.selectedIndex === index - 1\n        ? !this.steps.find((_, i) => i == index - 1)?.completed\n        : true;\n    }\n    return false;\n  }\n\n  selectStepByIndex(index: number): void {\n    this.selectedIndex = index;\n  }\n}\n","<form #form [formGroup]=\"formGroup\" *ngIf=\"nameOnly\">\n  <bit-form-field>\n    <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"name\" />\n  </bit-form-field>\n</form>\n<form #form [formGroup]=\"formGroup\" *ngIf=\"!nameOnly\">\n  <h2>{{ \"generalInformation\" | i18n }}</h2>\n  <div class=\"tw-flex tw-w-full tw-space-x-4\" *ngIf=\"createOrganization\">\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n      <input bitInput type=\"text\" formControlName=\"name\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"billingEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"billingEmail\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\" *ngIf=\"isProvider\">\n      <bit-label>{{ \"clientOwnerEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"clientOwnerEmail\" />\n    </bit-form-field>\n  </div>\n  <div *ngIf=\"!isProvider && !acceptingSponsorship\">\n    <input\n      type=\"checkbox\"\n      name=\"businessOwned\"\n      formControlName=\"businessOwned\"\n      (change)=\"changedBusinessOwned.emit()\"\n    />\n    <bit-label for=\"businessOwned\" class=\"tw-mb-3\">{{ \"accountOwnedBusiness\" | i18n }}</bit-label>\n    <div class=\"tw-mt-4\" *ngIf=\"formGroup.controls['businessOwned'].value\">\n      <bit-form-field class=\"tw-w-1/2\">\n        <bit-label>{{ \"businessName\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"businessName\" />\n      </bit-form-field>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-org-info\",\n  templateUrl: \"organization-information.component.html\",\n})\nexport class OrganizationInformationComponent {\n  @Input() nameOnly = false;\n  @Input() createOrganization = true;\n  @Input() isProvider = false;\n  @Input() acceptingSponsorship = false;\n  @Input() formGroup: FormGroup;\n  @Output() changedBusinessOwned = new EventEmitter<void>();\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams-content\",\n  templateUrl: \"teams-content.component.html\",\n})\nexport class TeamsContentComponent {}\n","<h1 class=\"!tw-text-alt2\">You've chosen Bitwarden for Teams</h1>\n<div class=\"tw-pt-24\">\n  <h2>What you can do with Btiwarden for Teams</h2>\n</div>\n<div class=\"tw-text-3xl tw-text-main tw-mt-12\">\n  <p class=\"tw-mt-2.5 tw-mb-20\">Collaborate and share securely</p>\n  <p class=\"tw-mt-2.5 tw-mb-20\">Deploy and manage quickly and easily</p>\n  <p class=\"tw-mt-2.5 tw-mb-20\">Access anywhere on any device</p>\n  <p class=\"tw-mt-2.5 tw-mb-20\">Create your account to get started</p>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise-content\",\n  templateUrl: \"enterprise-content.component.html\",\n})\nexport class EnterpriseContentComponent {}\n","<h1 class=\"!tw-text-alt2\">You've chosen Bitwarden for Enterprise</h1>\n<div class=\"tw-pt-24\">\n  <h2>What you can do with Bitwarden for Enterprise</h2>\n</div>\n\n<div class=\"tw-text-3xl tw-text-main tw-mt-12\">\n  <p class=\"tw-mt-2.5 tw-mb-20\">Collaborate and share securely</p>\n  <p class=\"tw-mt-2.5 tw-mb-20\">Deploy and manage quickly and easily</p>\n  <p class=\"tw-mt-2.5 tw-mb-20\">Access anywhere on any device</p>\n  <p class=\"tw-mt-2.5 tw-mb-20\">Create your account to get started</p>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-families-content\",\n  templateUrl: \"families-content.component.html\",\n})\nexport class FamiliesContentComponent {}\n","<h1 class=\"!tw-text-alt2\">You've chosen Bitwarden for Families</h1>\n<div class=\"tw-pt-24\">\n  <h2>\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<div class=\"tw-text-3xl tw-text-main tw-mt-12\">\n  <p class=\"tw-mt-2.5 tw-mb-20\">Collaborate and share securely</p>\n  <p class=\"tw-mt-2.5 tw-mb-20\">Deploy and manage quickly and easily</p>\n  <p class=\"tw-mt-2.5 tw-mb-20\">Access anywhere on any device</p>\n  <p class=\"tw-mt-2.5 tw-mb-20\">Create your account to get started</p>\n</div>\n","<div\n  class=\"tw-bg-background-alt2 tw-h-96 tw--mt-48 tw-absolute tw--skew-y-3 tw-w-full tw--z-10\"\n></div>\n\n<div class=\"tw-flex tw-max-w-screen-xl tw-min-w-4xl tw-mx-auto tw-px-4\">\n  <div class=\"tw-w-1/2\">\n    <img\n      alt=\"Bitwarden\"\n      style=\"height: 50px; width: 335px\"\n      class=\"tw-mt-6\"\n      src=\"../../images/register-layout/logo-horizontal-white.svg\"\n    />\n    <!-- This is to for illustrative purposes and content will be replaced by marketing -->\n    <div class=\"tw-pt-12\">\n      <!-- Teams Body -->\n      <app-teams-content *ngIf=\"org === 'teams'\"></app-teams-content>\n      <!-- Enterprise Body -->\n      <app-enterprise-content *ngIf=\"org === 'enterprise'\"></app-enterprise-content>\n      <!-- Families Body -->\n      <app-families-content *ngIf=\"org === 'families'\"></app-families-content>\n    </div>\n  </div>\n  <div class=\"tw-w-1/2\">\n    <div class=\"tw-pt-56\">\n      <div class=\"tw-rounded tw-border tw-border-solid tw-bg-background tw-border-secondary-300\">\n        <div class=\"tw-h-12 tw-flex tw-items-center tw-rounded-t tw-bg-secondary-100 tw-w-full\">\n          <h2 class=\"tw-uppercase tw-pl-4 tw-text-base tw-mb-0 tw-font-bold\">\n            Start your 7-Day free trial of Bitwarden for {{ org }}\n          </h2>\n        </div>\n        <app-vertical-stepper #stepper linear (selectionChange)=\"stepSelectionChange($event)\">\n          <app-vertical-step label=\"Create Account\" [editable]=\"false\" [subLabel]=\"email\">\n            <app-register-form\n              [isInTrialFlow]=\"true\"\n              (createdAccount)=\"createdAccount($event)\"\n            ></app-register-form>\n          </app-vertical-step>\n          <app-vertical-step label=\"Organization Information\" [subLabel]=\"orgInfoSubLabel\">\n            <app-org-info [nameOnly]=\"true\" [formGroup]=\"orgInfoFormGroup\"></app-org-info>\n            <button\n              bitButton\n              buttonType=\"primary\"\n              [disabled]=\"orgInfoFormGroup.get('name').hasError('required')\"\n              cdkStepperNext\n            >\n              Next\n            </button>\n          </app-vertical-step>\n          <app-vertical-step label=\"Billing\">\n            <!-- Replace with Billing step -->\n            <p>This is content of \"Step 3\"</p>\n            <button bitButton buttonType=\"secondary\" cdkStepperPrevious>Back</button>\n            <button bitButton buttonType=\"primary\" cdkStepperNext>Complete step</button>\n          </app-vertical-step>\n          <app-vertical-step label=\"Confirmation Details\" subLabel=\"Fancy sub label\">\n            <!-- Replace with Confirmation details step -->\n            <p>This is any content of \"Step 4\"</p>\n            <button bitButton buttonType=\"primary\" cdkStepperNext>Complete</button>\n          </app-vertical-step>\n        </app-vertical-stepper>\n      </div>\n    </div>\n  </div>\n</div>\n","import { StepperSelectionEvent } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs\";\n\nimport { VerticalStepperComponent } from \"../vertical-stepper/vertical-stepper.component\";\n\n@Component({\n  selector: \"app-trial\",\n  templateUrl: \"trial-initiation.component.html\",\n})\nexport class TrialInitiationComponent implements OnInit {\n  email = \"\";\n  org = \"teams\";\n  orgInfoSubLabel = \"\";\n  @ViewChild(\"stepper\", { static: true }) verticalStepper: VerticalStepperComponent;\n\n  orgInfoFormGroup = this.formBuilder.group({\n    name: [\"\", [Validators.required]],\n    additionalStorage: [0, [Validators.min(0), Validators.max(99)]],\n    additionalSeats: [0, [Validators.min(0), Validators.max(100000)]],\n    businessName: [\"\"],\n    plan: [],\n    product: [],\n  });\n\n  constructor(\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private titleCasePipe: TitleCasePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n      if (qParams.org) {\n        this.org = qParams.org;\n      }\n    });\n  }\n\n  stepSelectionChange(event: StepperSelectionEvent) {\n    // Set org info sub label\n    if (event.selectedIndex === 1 && this.orgInfoFormGroup.controls.name.value === \"\") {\n      this.orgInfoSubLabel =\n        \"Enter your \" + this.titleCasePipe.transform(this.org) + \" organization information\";\n    } else if (event.previouslySelectedIndex === 1) {\n      this.orgInfoSubLabel = this.orgInfoFormGroup.controls.name.value;\n    }\n  }\n\n  createdAccount(email: string) {\n    this.email = email;\n    this.verticalStepper.next();\n  }\n}\n","import { VaultFilter } from \"@bitwarden/angular/modules/vault-filter/models/vault-filter.model\";\n\nexport class VaultService {\n  calculateSearchBarLocalizationString(vaultFilter: VaultFilter): string {\n    if (vaultFilter.status === \"favorites\") {\n      return \"searchFavorites\";\n    }\n    if (vaultFilter.status === \"trash\") {\n      return \"searchTrash\";\n    }\n    if (vaultFilter.cipherType != null) {\n      return \"searchType\";\n    }\n    if (vaultFilter.selectedFolderId != null && vaultFilter.selectedFolderId != \"none\") {\n      return \"searchFolder\";\n    }\n    if (vaultFilter.selectedCollection) {\n      return \"searchCollection\";\n    }\n    if (vaultFilter.selectedOrganizationId != null) {\n      return \"searchOrganization\";\n    }\n    if (vaultFilter.myVaultOnly) {\n      return \"searchMyVault\";\n    }\n\n    return \"searchVault\";\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule } from \"../loose-components.module\";\nimport { SharedModule } from \"../shared.module\";\nimport { VaultFilterModule } from \"../vault-filter/vault-filter.module\";\n\nimport { VaultService } from \"./vault.service\";\n\n@NgModule({\n  imports: [SharedModule, VaultFilterModule, LooseComponentsModule],\n  exports: [SharedModule, VaultFilterModule, LooseComponentsModule],\n  providers: [\n    {\n      provide: VaultService,\n      useClass: VaultService,\n    },\n  ],\n})\nexport class VaultModule {}\n","import { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherStatus } from \"./cipher-status.model\";\n\nexport type VaultFilterFunction = (cipher: CipherView) => boolean;\n\nexport class VaultFilter {\n  cipherType?: CipherType;\n  selectedCollection = false; // This is needed because of how the \"Unassigned\" collection works. It has a null id.\n  selectedCollectionId?: string;\n  status?: CipherStatus;\n  selectedFolder = false; // This is needed because of how the \"No Folder\" folder works. It has a null id.\n  selectedFolderId?: string;\n  selectedOrganizationId?: string;\n  myVaultOnly = false;\n  refreshCollectionsAndFolders = false;\n\n  constructor(init?: Partial<VaultFilter>) {\n    Object.assign(this, init);\n  }\n\n  resetFilter() {\n    this.cipherType = null;\n    this.status = null;\n    this.selectedCollection = false;\n    this.selectedCollectionId = null;\n    this.selectedFolder = false;\n    this.selectedFolderId = null;\n  }\n\n  resetOrganization() {\n    this.myVaultOnly = false;\n    this.selectedOrganizationId = null;\n    this.resetFilter();\n  }\n\n  buildFilter(): VaultFilterFunction {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.status === \"favorites\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.favorite;\n      }\n      if (this.status === \"trash\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.cipherType != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.cipherType;\n      }\n      if (this.selectedFolder && this.selectedFolderId == null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId == null;\n      }\n      if (this.selectedFolder && this.selectedFolderId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId === this.selectedFolderId;\n      }\n      if (this.selectedCollection && this.selectedCollectionId == null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.organizationId != null &&\n          (cipher.collectionIds == null || cipher.collectionIds.length === 0);\n      }\n      if (this.selectedCollection && this.selectedCollectionId != null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.collectionIds != null && cipher.collectionIds.includes(this.selectedCollectionId);\n      }\n      if (this.selectedOrganizationId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === this.selectedOrganizationId;\n      }\n      if (this.myVaultOnly && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === null;\n      }\n      return cipherPassesFilter;\n    };\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nimport { FolderRequest } from \"./folderRequest\";\n\nexport class FolderWithIdRequest extends FolderRequest {\n  id: string;\n\n  constructor(folder: Folder) {\n    super(folder);\n    this.id = folder.id;\n  }\n}\n","import { CipherWithIdRequest } from \"./cipherWithIdRequest\";\nimport { FolderWithIdRequest } from \"./folderWithIdRequest\";\nimport { SendWithIdRequest } from \"./sendWithIdRequest\";\n\nexport class UpdateKeyRequest {\n  ciphers: CipherWithIdRequest[] = [];\n  folders: FolderWithIdRequest[] = [];\n  sends: SendWithIdRequest[] = [];\n  masterPasswordHash: string;\n  privateKey: string;\n  key: string;\n}\n","import { Component } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/models/request/cipherWithIdRequest\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/models/request/folderWithIdRequest\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/updateKeyRequest\";\n\n@Component({\n  selector: \"app-update-key\",\n  templateUrl: \"update-key.component.html\",\n})\nexport class UpdateKeyComponent {\n  masterPassword: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (hasEncKey) {\n      return;\n    }\n\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.makeRequest().then((request) => {\n        return this.apiService.postAccountKey(request);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"keyUpdated\"),\n        this.i18nService.t(\"logBackInOthersToo\"),\n        { timeout: 15000 }\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async makeRequest(): Promise<UpdateKeyRequest> {\n    const key = await this.cryptoService.getKey();\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n\n    await this.syncService.fullSync(true);\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    return request;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"updateEncKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"updateEncKeyTitle\">{{ \"updateEncryptionKey\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"updateEncryptionKeyShortDesc\" | i18n }} {{ \"updateEncryptionKeyDesc\" | i18n }}\n          <a\n            href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            >{{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <app-callout type=\"warning\">{{ \"updateEncryptionKeyWarning\" | i18n }}</app-callout>\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appAutofocus\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"updateEncryptionKey\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Deactivated = -1,\n}\n","import { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SecureNoteType } from \"@bitwarden/common/enums/secureNoteType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CardView } from \"@bitwarden/common/models/view/cardView\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\nimport { IdentityView } from \"@bitwarden/common/models/view/identityView\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\nimport { LoginView } from \"@bitwarden/common/models/view/loginView\";\nimport { SecureNoteView } from \"@bitwarden/common/models/view/secureNoteView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n  @Output() onGenerateUsername = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders$: Observable<FolderView[]>;\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n\n  protected writeableCollections: CollectionView[];\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventService: EventService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: \"RuPay\", value: \"RuPay\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership)) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders$ = this.folderService.folderViews$;\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generateUsername(): Promise<boolean> {\n    if (this.cipher.login?.username?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwriteUsernameConfirmation\"),\n        this.i18nService.t(\"overwriteUsername\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGenerateUsername.emit();\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (this.cipher.login?.password?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipherService.saveWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n}\n","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { FieldView } from \"@bitwarden/common/models/view/fieldView\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(private i18nService: I18nService, private eventService: EventService) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue = true;\n  @Input() falseValue = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","<ng-container>\n  <h3 class=\"mt-4\">{{ \"customFields\" | i18n }}</h3>\n  <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n    <div\n      class=\"row\"\n      cdkDrag\n      *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n    >\n      <div class=\"col-5 form-group\">\n        <div class=\"d-flex\">\n          <label for=\"fieldName{{ i }}\">{{ \"name\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/custom-fields/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"fieldName{{ i }}\"\n          type=\"text\"\n          name=\"Field.Name{{ i }}\"\n          [(ngModel)]=\"f.name\"\n          class=\"form-control\"\n          appInputVerbatim\n          [disabled]=\"cipher.isDeleted || viewOnly\"\n        />\n      </div>\n      <div class=\"col-7 form-group\">\n        <label for=\"fieldValue{{ i }}\">{{ \"value\" | i18n }}</label>\n        <div class=\"d-flex align-items-center\">\n          <!-- Text -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Text\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              appInputVerbatim\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', 'Field')\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Hidden -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Hidden\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              type=\"{{ f.showValue ? 'text' : 'password' }}\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              class=\"form-control text-monospace\"\n              appInputVerbatim\n              autocomplete=\"new-password\"\n              [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.viewPassword && !f.newField)\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleFieldValue(f)\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n                >\n                </i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', f.type === fieldType.Hidden ? 'H_Field' : 'Field')\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Linked -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Linked\">\n            <select\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              class=\"form-control\"\n              [(ngModel)]=\"f.linkedId\"\n              *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            >\n              <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"flex-fill\">\n            <!-- Boolean -->\n            <input\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              type=\"checkbox\"\n              [(ngModel)]=\"f.value\"\n              *ngIf=\"f.type === fieldType.Boolean\"\n              appTrueFalseValue\n              trueValue=\"true\"\n              falseValue=\"false\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n          </div>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-danger ml-2\"\n            (click)=\"removeField(f)\"\n            appA11yTitle=\"{{ 'remove' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-muted cursor-move\"\n            appA11yTitle=\"{{ 'dragToSort' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-hamburger bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Add new custom field -->\n  <a\n    href=\"#\"\n    appStopClick\n    (click)=\"addField()\"\n    class=\"d-inline-block mb-2\"\n    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n  >\n    <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomField\" | i18n }}\n  </a>\n  <div class=\"row\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n    <div class=\"col-5\">\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" class=\"form-control\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n","import { Component, Input } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"@bitwarden/angular/components/add-edit-custom-fields.component\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  @Input() viewOnly: boolean;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  constructor(i18nService: I18nService, eventService: EventService) {\n    super(i18nService, eventService);\n  }\n}\n","import { Directive, OnInit, TemplateRef, ViewContainerRef } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n/**\n * Hides the element if the user has premium.\n */\n@Directive({\n  selector: \"[appNotPremium]\",\n})\nexport class NotPremiumDirective implements OnInit {\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    const premium = await this.stateService.getCanAccessPremium();\n\n    if (premium) {\n      this.viewContainer.clear();\n    } else {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Component({\n  selector: \"app-premium-badge\",\n  template: `\n    <button type=\"button\" *appNotPremium bitBadge badgeType=\"success\" (click)=\"premiumRequired()\">\n      {{ \"premium\" | i18n }}\n    </button>\n  `,\n})\nexport class PremiumBadgeComponent {\n  constructor(private messagingService: MessagingService) {}\n\n  premiumRequired() {\n    this.messagingService.send(\"premiumRequired\");\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"cipherAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"cipherAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"cipher\">\n        <app-callout type=\"info\" *ngIf=\"allowOwnershipAssignment() && !allowPersonal\">\n          {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n        </app-callout>\n        <div class=\"row\" *ngIf=\"!editMode && !viewOnly\">\n          <div class=\"col-6 form-group\">\n            <label for=\"type\">{{ \"whatTypeOfItem\" | i18n }}</label>\n            <select\n              id=\"type\"\n              name=\"Type\"\n              [(ngModel)]=\"cipher.type\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted\"\n              appAutofocus\n            >\n              <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"cipher.name\"\n              required\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n          </div>\n          <div class=\"col-6 form-group\" *ngIf=\"!organization\">\n            <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n            <select\n              id=\"folder\"\n              name=\"FolderId\"\n              [(ngModel)]=\"cipher.folderId\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            >\n              <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n            </select>\n          </div>\n        </div>\n        <!-- Login -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginUsername\"\n                  class=\"form-control\"\n                  type=\"text\"\n                  name=\"Login.Username\"\n                  [(ngModel)]=\"cipher.login.username\"\n                  appInputVerbatim\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\" *ngIf=\"!cipher.isDeleted\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n                    (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-6 form-group\">\n              <div class=\"d-flex\">\n                <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n                <div class=\"ml-auto d-flex\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n                  <a\n                    href=\"#\"\n                    class=\"d-block mr-2 bwi-icon-above-input\"\n                    appStopClick\n                    appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                    (click)=\"generatePassword()\"\n                    *ngIf=\"cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-fw bwi-generate\" aria-hidden=\"true\"></i>\n                  </a>\n                  <a\n                    href=\"#\"\n                    class=\"d-block bwi-icon-above-input\"\n                    #checkPasswordBtn\n                    appStopClick\n                    appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                    (click)=\"checkPassword()\"\n                    [appApiAction]=\"checkPasswordPromise\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-check-circle\"\n                      [hidden]=\"checkPasswordBtn.loading\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-spinner bwi-spin\"\n                      aria-hidden=\"true\"\n                      [hidden]=\"!checkPasswordBtn.loading\"\n                      title=\"{{ 'loading' | i18n }}\"\n                    ></i>\n                  </a>\n                </div>\n              </div>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginPassword\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Login.Password\"\n                  [(ngModel)]=\"cipher.login.password\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePassword()\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                    (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n              <input\n                id=\"loginTotp\"\n                type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n                name=\"Login.Totp\"\n                class=\"form-control text-monospace\"\n                [(ngModel)]=\"cipher.login.totp\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group totp d-flex align-items-end\" [ngClass]=\"{ low: totpLow }\">\n              <div *ngIf=\"!cipher.login.totp || !totpCode\">\n                <img\n                  src=\"../../images/totp-countdown.png\"\n                  id=\"totpImage\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  class=\"ml-2\"\n                />\n                <app-premium-badge\n                  *ngIf=\"!organization && !cipher.organizationId\"\n                  class=\"ml-3\"\n                ></app-premium-badge>\n                <a\n                  href=\"#\"\n                  appStopClick\n                  bitBadge\n                  badgeType=\"primary\"\n                  class=\"tw-ml-4\"\n                  (click)=\"upgradeOrganization()\"\n                  *ngIf=\"\n                    (organization && !organization.useTotp) ||\n                    (!organization &&\n                      !canAccessPremium &&\n                      cipher.organizationId &&\n                      !cipher.organizationUseTotp)\n                  \"\n                >\n                  {{ \"upgrade\" | i18n }}\n                </a>\n              </div>\n              <div *ngIf=\"cipher.login.totp && totpCode\" class=\"d-flex align-items-center\">\n                <span class=\"totp-countdown mr-3 ml-2\">\n                  <span class=\"totp-sec\">{{ totpSec }}</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                      ></circle>\n                      <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span class=\"totp-code mr-2\" title=\"{{ 'verificationCodeTotp' | i18n }}\">{{\n                  totpCodeFormatted\n                }}</span>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link\"\n                  appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n                  (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n                >\n                  <i class=\"bwi bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <ng-container *ngIf=\"cipher.login.hasUris\">\n            <div\n              class=\"row\"\n              *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n            >\n              <div class=\"col-7 form-group\">\n                <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n                <div class=\"input-group\">\n                  <input\n                    class=\"form-control\"\n                    id=\"loginUri{{ i }}\"\n                    type=\"text\"\n                    name=\"Login.Uris[{{ i }}].Uri\"\n                    [(ngModel)]=\"u.uri\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                    placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                    appInputVerbatim\n                  />\n                  <div class=\"input-group-append\">\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'launch' | i18n }}\"\n                      (click)=\"launch(u)\"\n                      [disabled]=\"!u.canLaunch\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n                    </button>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n                      (click)=\"copy(u.uri, 'uri', 'URI')\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-5 form-group\">\n                <div class=\"d-flex\">\n                  <label for=\"loginUriMatch{{ i }}\">\n                    {{ \"matchDetection\" | i18n }}\n                  </label>\n                  <a\n                    class=\"ml-auto\"\n                    href=\"https://bitwarden.com/help/uri-match-detection/\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n                  >\n                    <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n                <div class=\"d-flex\">\n                  <select\n                    class=\"form-control overflow-hidden\"\n                    id=\"loginUriMatch{{ i }}\"\n                    name=\"Login.Uris[{{ i }}].Match\"\n                    [(ngModel)]=\"u.match\"\n                    (change)=\"loginUriMatchChanged(u)\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                  >\n                    <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">\n                      {{ o.name }}\n                    </option>\n                  </select>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-link text-danger ml-2\"\n                    (click)=\"removeUri(u)\"\n                    appA11yTitle=\"{{ 'remove' | i18n }}\"\n                    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n                  >\n                    <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n          <a\n            href=\"#\"\n            appStopClick\n            (click)=\"addUri()\"\n            class=\"d-inline-block mb-3\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n          </a>\n        </ng-container>\n        <!-- Card -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n              <input\n                id=\"cardCardholderName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.CardCardholderName\"\n                [(ngModel)]=\"cipher.card.cardholderName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n              <select\n                id=\"cardBrand\"\n                class=\"form-control\"\n                name=\"Card.Brand\"\n                [(ngModel)]=\"cipher.card.brand\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardNumber\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                  name=\"Card.Number\"\n                  [(ngModel)]=\"cipher.card.number\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardNumber()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{\n                        'bwi-eye': !showCardNumber,\n                        'bwi-eye-slash': showCardNumber\n                      }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n                    (click)=\"copy(cipher.card.number, 'number', 'Number')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n              <select\n                id=\"cardExpMonth\"\n                class=\"form-control\"\n                name=\"Card.ExpMonth\"\n                [(ngModel)]=\"cipher.card.expMonth\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                  {{ o.name }}\n                </option>\n              </select>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n              <input\n                id=\"cardExpYear\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.ExpYear\"\n                [(ngModel)]=\"cipher.card.expYear\"\n                placeholder=\"{{ 'ex' | i18n }} 2019\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardCode\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                  name=\"Card.Code\"\n                  [(ngModel)]=\"cipher.card.code\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardCode()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'securityCode' | i18n }}\"\n                    (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <!-- Identity -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n              <select\n                id=\"idTitle\"\n                class=\"form-control\"\n                name=\"Identity.Title\"\n                [(ngModel)]=\"cipher.identity.title\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                  {{ o.name }}\n                </option>\n              </select>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n              <input\n                id=\"idFirstName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.FirstName\"\n                [(ngModel)]=\"cipher.identity.firstName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n              <input\n                id=\"idMiddleName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.MiddleName\"\n                [(ngModel)]=\"cipher.identity.middleName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n              <input\n                id=\"idLastName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LastName\"\n                [(ngModel)]=\"cipher.identity.lastName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"idUsername\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Username\"\n                [(ngModel)]=\"cipher.identity.username\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n              <input\n                id=\"idCompany\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Company\"\n                [(ngModel)]=\"cipher.identity.company\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n              <input\n                id=\"idSsn\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.SSN\"\n                [(ngModel)]=\"cipher.identity.ssn\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n              <input\n                id=\"idPassportNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PassportNumber\"\n                [(ngModel)]=\"cipher.identity.passportNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n              <input\n                id=\"idLicenseNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LicenseNumber\"\n                [(ngModel)]=\"cipher.identity.licenseNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n              <input\n                id=\"idEmail\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"email\"\n                name=\"Identity.Email\"\n                [(ngModel)]=\"cipher.identity.email\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n              <input\n                id=\"idPhone\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"tel\"\n                name=\"Identity.Phone\"\n                [(ngModel)]=\"cipher.identity.phone\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n              <input\n                id=\"idAddress1\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address1\"\n                [(ngModel)]=\"cipher.identity.address1\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n              <input\n                id=\"idAddress2\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address2\"\n                [(ngModel)]=\"cipher.identity.address2\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n              <input\n                id=\"idAddress3\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address3\"\n                [(ngModel)]=\"cipher.identity.address3\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n              <input\n                id=\"idCity\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.City\"\n                [(ngModel)]=\"cipher.identity.city\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n              <input\n                id=\"idState\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.State\"\n                [(ngModel)]=\"cipher.identity.state\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n              <input\n                id=\"idPostalCode\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PostalCode\"\n                [(ngModel)]=\"cipher.identity.postalCode\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n              <input\n                id=\"idCountry\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Country\"\n                [(ngModel)]=\"cipher.identity.country\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n        </ng-container>\n        <div class=\"form-group\">\n          <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n          <textarea\n            id=\"notes\"\n            name=\"Notes\"\n            rows=\"6\"\n            [(ngModel)]=\"cipher.notes\"\n            [disabled]=\"cipher.isDeleted || viewOnly\"\n            class=\"form-control\"\n          ></textarea>\n        </div>\n        <app-vault-add-edit-custom-fields\n          [cipher]=\"cipher\"\n          [thisCipherType]=\"cipher.type\"\n          [viewOnly]=\"viewOnly\"\n          [copy]=\"copy.bind(this)\"\n        ></app-vault-add-edit-custom-fields>\n        <ng-container *ngIf=\"allowOwnershipAssignment()\">\n          <h3 class=\"mt-4\">{{ \"ownership\" | i18n }}</h3>\n          <div class=\"row\">\n            <div class=\"col-5\">\n              <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n              <select\n                id=\"organizationId\"\n                class=\"form-control\"\n                name=\"OrganizationId\"\n                [(ngModel)]=\"cipher.organizationId\"\n                (change)=\"organizationChanged()\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n          <h3 class=\"mt-4\">{{ \"collections\" | i18n }}</h3>\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <ng-container *ngIf=\"collections && collections.length\">\n            <div class=\"form-check\" *ngFor=\"let c of collections; let i = index\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"c.checked\"\n                id=\"collection-{{ i }}\"\n                name=\"Collection[{{ i }}].Checked\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n              <label class=\"form-check-label\" for=\"collection-{{ i }}\">{{ c.name }}</label>\n            </div>\n          </ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"editMode\">\n          <div class=\"small text-muted mt-4\">\n            <div>\n              <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n              {{ cipher.revisionDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"showRevisionDate\">\n              <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n              {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"hasPasswordHistory\">\n              <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n              <a href=\"#\" appStopClick (click)=\"viewHistory()\" title=\"{{ 'view' | i18n }}\">\n                {{ cipher.passwordHistory.length }}\n              </a>\n            </div>\n            <div class=\"ml-3\" *ngIf=\"viewingPasswordHistory\">\n              <div *ngFor=\"let ph of cipher.passwordHistory\">\n                {{ ph.lastUsedDate | date: \"short\" }} -\n                <span class=\"generated-wrapper text-monospace ml-2\">{{ ph.password }}</span>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"canUseReprompt\">\n          <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [ngModel]=\"reprompt\"\n              (change)=\"repromptChanged()\"\n              id=\"passwordPrompt\"\n              name=\"passwordPrompt\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n            <label class=\"form-check-label\" for=\"passwordPrompt\">{{\n              \"passwordPrompt\" | i18n\n            }}</label>\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (cipher?.isDeleted ? \"restore\" : \"save\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ (viewOnly ? \"close\" : \"cancel\") | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"cipher && !viewOnly\">\n          <button\n            *ngIf=\"!organization && !cipher.isDeleted\"\n            type=\"button\"\n            (click)=\"toggleFavorite()\"\n            class=\"btn btn-link\"\n            appA11yTitle=\"{{ (cipher.favorite ? 'unfavorite' : 'favorite') | i18n }}\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              [ngClass]=\"{ 'bwi-star-f': cipher.favorite, 'bwi-star': !cipher.favorite }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ (cipher.isDeleted ? 'permanentlyDelete' : 'delete') | i18n }}\"\n            *ngIf=\"editMode && !cloneMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/add-edit.component\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  canAccessPremium: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  showRevisionDate = false;\n  hasPasswordHistory = false;\n  viewingPasswordHistory = false;\n  viewOnly = false;\n\n  protected totpInterval: number;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    protected totpService: TotpService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected messagingService: MessagingService,\n    eventService: EventService,\n    protected policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n    this.showRevisionDate = this.cipher.passwordRevisionDisplayDate != null;\n    this.hasPasswordHistory = this.cipher.hasPasswordHistory;\n    this.cleanUp();\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (this.cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = window.setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n  }\n\n  toggleFavorite() {\n    this.cipher.favorite = !this.cipher.favorite;\n  }\n\n  launch(uri: LoginUriView) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (this.editMode) {\n      if (typeI18nKey === \"password\") {\n        this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n      } else if (typeI18nKey === \"securityCode\") {\n        this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n      } else if (aType === \"H_Field\") {\n        this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n      }\n    }\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      const options = (await this.passwordGenerationService.getOptions())[0];\n      this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\n    }\n    return confirmed;\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", {\n      organizationId: this.cipher.organizationId,\n    });\n  }\n\n  viewHistory() {\n    this.viewingPasswordHistory = !this.viewingPasswordHistory;\n  }\n\n  protected cleanUp() {\n    if (this.totpInterval) {\n      window.clearInterval(this.totpInterval);\n    }\n  }\n\n  protected async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  protected allowOwnershipAssignment() {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const buf = await response.arrayBuffer();\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n      this.fileDownloadService.download({\n        fileName: attachment.fileName,\n        blobData: decBuf,\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const buf = await response.arrayBuffer();\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"attachmentsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"attachmentsTitle\">\n          {{ \"attachments\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <table class=\"table table-hover table-list\" *ngIf=\"cipher && cipher.hasAttachments\">\n          <tbody>\n            <tr *ngFor=\"let a of cipher.attachments\">\n              <td class=\"table-list-icon\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"!a.downloading\" aria-hidden=\"true\"></i>\n                <i\n                  class=\"bwi bwi-spinner bwi-lg bwi-fw bwi-spin\"\n                  *ngIf=\"a.downloading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </td>\n              <td class=\"wrap\">\n                <div class=\"d-flex\">\n                  <a href=\"#\" appStopClick (click)=\"download(a)\">{{ a.fileName }}</a>\n                  <div *ngIf=\"showFixOldAttachments(a)\" class=\"ml-2\">\n                    <a\n                      href=\"https://bitwarden.com/help/attachments/#fixing-old-attachments\"\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      <i\n                        class=\"bwi bwi-exclamation-triangle text-warning\"\n                        title=\"{{ 'attachmentFixDesc' | i18n }}\"\n                        aria-hidden=\"true\"\n                      ></i>\n                      <span class=\"sr-only\">{{ \"attachmentFixDesc\" | i18n }}</span></a\n                    >\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-primary btn-sm m-0 py-0 px-2\"\n                      (click)=\"reupload(a)\"\n                      #reuploadBtn\n                      [appApiAction]=\"reuploadPromises[a.id]\"\n                      [disabled]=\"reuploadBtn.loading\"\n                    >\n                      {{ \"fix\" | i18n }}\n                    </button>\n                  </div>\n                </div>\n                <small>{{ a.sizeName }}</small>\n              </td>\n              <td class=\"table-list-options\" *ngIf=\"!viewOnly\">\n                <button\n                  class=\"btn btn-outline-danger\"\n                  type=\"button\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'delete' | i18n }}\"\n                  (click)=\"delete(a)\"\n                  #deleteBtn\n                  [appApiAction]=\"deletePromises[a.id]\"\n                  [disabled]=\"deleteBtn.loading\"\n                >\n                  <i\n                    class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                    [hidden]=\"deleteBtn.loading\"\n                    aria-hidden=\"true\"\n                  ></i>\n                  <i\n                    class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                    [hidden]=\"!deleteBtn.loading\"\n                    title=\"{{ 'loading' | i18n }}\"\n                    aria-hidden=\"true\"\n                  ></i>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div *ngIf=\"!viewOnly\">\n          <h3>{{ \"newAttachment\" | i18n }}</h3>\n          <label for=\"file\" class=\"sr-only\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n          <small class=\"form-text text-muted\">{{ \"maxFileSize\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.showFixOldAttachments(attachment)) {\n      await this.reuploadCipherAttachment(attachment, false);\n    }\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.cipher.organizationId == null;\n  }\n}\n","import { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Directive()\nexport class CiphersComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchText: string;\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n  RuPay: \"card-ru-pay\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"ellipsis\",\n})\nexport class EllipsisPipe implements PipeTransform {\n  transform(value: string, limit = 25, completeWords = false, ellipsis = \"...\") {\n    if (value.length <= limit) {\n      return value;\n    }\n    limit -= ellipsis.length;\n    if (completeWords && value.length > limit && value.indexOf(\" \") > 0) {\n      limit = value.substring(0, limit).lastIndexOf(\" \");\n    }\n    return value.substring(0, limit) + ellipsis;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-org-badge\",\n  templateUrl: \"organization-name-badge.component.html\",\n})\nexport class OrganizationNameBadgeComponent implements OnInit {\n  @Input() organizationName: string;\n  @Input() profileName: string;\n\n  @Output() onOrganizationClicked = new EventEmitter<string>();\n\n  color: string;\n  textColor: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit(): void {\n    if (this.organizationName == null || this.organizationName === \"\") {\n      this.organizationName = this.i18nService.t(\"me\");\n      this.color = this.stringToColor(this.profileName.toUpperCase());\n    }\n    if (this.color == null) {\n      this.color = this.stringToColor(this.organizationName.toUpperCase());\n    }\n    this.textColor = this.pickTextColorBasedOnBgColor();\n  }\n\n  // This value currently isn't stored anywhere, only calculated in the app-avatar component\n  // Once we are allowing org colors to be changed and saved, change this out\n  private stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  // There are a few ways to calculate text color for contrast, this one seems to fit accessibility guidelines best.\n  // https://stackoverflow.com/a/3943023/6869691\n  private pickTextColorBasedOnBgColor() {\n    const color = this.color.charAt(0) === \"#\" ? this.color.substring(1, 7) : this.color;\n    const r = parseInt(color.substring(0, 2), 16); // hexToR\n    const g = parseInt(color.substring(2, 4), 16); // hexToG\n    const b = parseInt(color.substring(4, 6), 16); // hexToB\n    return r * 0.299 + g * 0.587 + b * 0.114 > 186 ? \"black !important\" : \"white !important\";\n  }\n\n  emitOnOrganizationClicked() {\n    this.onOrganizationClicked.emit();\n  }\n}\n","<button\n  bitBadge\n  [style.color]=\"textColor\"\n  [style.background-color]=\"color\"\n  appA11yTitle=\"{{ organizationName }}\"\n  (click)=\"emitOnOrganizationClicked()\"\n>\n  {{ organizationName | ellipsis: 13 }}\n</button>\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Pipe({\n  name: \"orgNameFromId\",\n  pure: true,\n})\nexport class GetOrgNameFromIdPipe implements PipeTransform {\n  transform(value: string, organizations: Organization[]) {\n    const orgName = organizations.find((o) => o.id === value)?.name;\n    return orgName;\n  }\n}\n","<ng-container *ngIf=\"isPaging() ? pagedCiphers : ciphers as filteredCiphers\">\n  <table\n    class=\"table table-hover table-list table-ciphers\"\n    *ngIf=\"filteredCiphers.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of filteredCiphers\">\n        <td (click)=\"checkCipher(c)\" class=\"table-list-checkbox\">\n          <input type=\"checkbox\" [(ngModel)]=\"c.checked\" appStopProp />\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"table-list-icon\">\n          <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"reduced-lh wrap\">\n          <a\n            appStopProp\n            [routerLink]=\"[]\"\n            [queryParams]=\"{ itemId: c.id }\"\n            queryParamsHandling=\"merge\"\n            title=\"{{ 'editItem' | i18n }}\"\n            >{{ c.name }}</a\n          >\n          <ng-container *ngIf=\"c.hasAttachments\">\n            <i\n              class=\"bwi bwi-paperclip\"\n              appStopProp\n              title=\"{{ 'attachments' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            <ng-container *ngIf=\"showFixOldAttachments(c)\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-warning\"\n                appStopProp\n                title=\"{{ 'attachmentsNeedFix' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachmentsNeedFix\" | i18n }}</span>\n            </ng-container>\n          </ng-container>\n          <br />\n          <small appStopProp>{{ c.subTitle }}</small>\n        </td>\n        <td *ngIf=\"organizations.length > 0 && !organization\" class=\"tw-w-28\">\n          <app-org-badge\n            organizationName=\"{{ c.organizationId | orgNameFromId: organizations }}\"\n            profileName=\"{{ profileName }}\"\n            (onOrganizationClicked)=\"onOrganizationClicked(c.organizationId)\"\n          >\n          </app-org-badge>\n        </td>\n        <td class=\"table-list-options\">\n          <button\n            [bitMenuTriggerFor]=\"cipherOptions\"\n            class=\"tw-border-none tw-bg-transparent tw-text-main\"\n            type=\"button\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n          >\n            <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <bit-menu #cipherOptions>\n            <ng-container *ngIf=\"c.type === cipherType.Login && !c.isDeleted\">\n              <button bitMenuItem (click)=\"copy(c, c.login.username, 'username', 'Username')\">\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyUsername\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.password, 'password', 'Password')\"\n                *ngIf=\"c.viewPassword\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyPassword\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.totp, 'verificationCodeTotp', 'TOTP')\"\n                *ngIf=\"displayTotpCopyButton(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyVerificationCode\" | i18n }}\n              </button>\n              <button bitMenuItem *ngIf=\"c.login.canLaunch\" (click)=\"launch(c.login.launchUri)\">\n                <i class=\"bwi bwi-fw bwi-share-square\" aria-hidden=\"true\"></i>\n                {{ \"launch\" | i18n }}\n              </button>\n            </ng-container>\n            <button bitMenuItem (click)=\"attachments(c)\">\n              <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n              {{ \"attachments\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"((!organization && !c.organizationId) || organization) && !c.isDeleted\"\n              (click)=\"clone(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-files\" aria-hidden=\"true\"></i>\n              {{ \"clone\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"!organization && !c.organizationId && !c.isDeleted\"\n              (click)=\"share(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n              {{ \"moveToOrganization\" | i18n }}\n            </button>\n            <button bitMenuItem *ngIf=\"c.organizationId && !c.isDeleted\" (click)=\"collections(c)\">\n              <i class=\"bwi bwi-fw bwi-collection\" aria-hidden=\"true\"></i>\n              {{ \"collections\" | i18n }}\n            </button>\n            <button bitMenuItem *ngIf=\"c.organizationId && accessEvents\" (click)=\"events(c)\">\n              <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n              {{ \"eventLogs\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"restore(c)\" *ngIf=\"c.isDeleted\">\n              <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n              {{ \"restore\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"delete(c)\">\n              <span class=\"tw-text-danger\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ (c.isDeleted ? \"permanentlyDelete\" : \"delete\") | i18n }}\n              </span>\n            </button>\n          </bit-menu>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div class=\"no-items\" *ngIf=\"!filteredCiphers.length\">\n    <ng-container *ngIf=\"!loaded\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </ng-container>\n    <ng-container *ngIf=\"loaded\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button (click)=\"addCipher()\" class=\"btn btn-outline-primary\" *ngIf=\"showAddNew\">\n        <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n</ng-container>\n","import { Component, EventEmitter, Input, OnDestroy, Output } from \"@angular/core\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"@bitwarden/angular/components/ciphers.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nconst MaxCheckedCount = 500;\n\n@Component({\n  selector: \"app-vault-ciphers\",\n  templateUrl: \"ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnDestroy {\n  @Input() showAddNew = true;\n  @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\n  @Output() onShareClicked = new EventEmitter<CipherView>();\n  @Output() onCollectionsClicked = new EventEmitter<CipherView>();\n  @Output() onCloneClicked = new EventEmitter<CipherView>();\n  @Output() onOrganzationBadgeClicked = new EventEmitter<string>();\n\n  pagedCiphers: CipherView[] = [];\n  pageSize = 200;\n  cipherType = CipherType;\n  actionPromise: Promise<any>;\n  userHasPremiumAccess = false;\n  organizations: Organization[] = [];\n  profileName: string;\n\n  private didScroll = false;\n  private pagedCiphersCount = 0;\n  private refreshing = false;\n\n  constructor(\n    searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cipherService: CipherService,\n    protected eventService: EventService,\n    protected totpService: TotpService,\n    protected stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private tokenService: TokenService\n  ) {\n    super(searchService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  // load() is called after the page loads and the first sync has completed.\n  // Do not use ngOnInit() for anything that requires sync data.\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    await super.load(filter, deleted);\n    this.profileName = await this.tokenService.getName();\n    this.organizations = await this.organizationService.getAll();\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  loadMore() {\n    if (this.ciphers.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCiphers.length;\n    let pagedSize = this.pageSize;\n    if (this.refreshing && pagedLength === 0 && this.pagedCiphersCount > this.pageSize) {\n      pagedSize = this.pagedCiphersCount;\n    }\n    if (this.ciphers.length > pagedLength) {\n      this.pagedCiphers = this.pagedCiphers.concat(\n        this.ciphers.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCiphersCount = this.pagedCiphers.length;\n    this.didScroll = this.pagedCiphers.length > this.pageSize;\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter, this.deleted);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.ciphers.length > this.pageSize;\n  }\n\n  async resetPaging() {\n    this.pagedCiphers = [];\n    this.loadMore();\n  }\n\n  async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n    this.resetPaging();\n  }\n\n  launch(uri: string) {\n    this.platformUtilsService.launchUri(uri);\n  }\n\n  async attachments(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onAttachmentsClicked.emit(c);\n  }\n\n  async share(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onShareClicked.emit(c);\n  }\n\n  collections(c: CipherView) {\n    this.onCollectionsClicked.emit(c);\n  }\n\n  async clone(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onCloneClicked.emit(c);\n  }\n\n  async delete(c: CipherView): Promise<boolean> {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    if (this.actionPromise != null) {\n      return;\n    }\n    const permanent = c.isDeleted;\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        permanent ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(permanent ? \"permanentlyDeleteItem\" : \"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.deleteCipher(c.id, permanent);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(permanent ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async restore(c: CipherView): Promise<boolean> {\n    if (this.actionPromise != null || !c.isDeleted) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.cipherService.restoreWithServer(c.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.repromptCipher(cipher))\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (value === cipher.login.totp) {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n    const selectCount =\n      select && this.ciphers.length > MaxCheckedCount ? MaxCheckedCount : this.ciphers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkCipher(this.ciphers[i], select);\n    }\n  }\n\n  checkCipher(c: CipherView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  getSelected(): CipherView[] {\n    if (this.ciphers == null) {\n      return [];\n    }\n    return this.ciphers.filter((c) => !!(c as any).checked);\n  }\n\n  getSelectedIds(): string[] {\n    return this.getSelected().map((c) => c.id);\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (await this.repromptCipher(cipher)) {\n      super.selectCipher(cipher);\n    }\n  }\n\n  onOrganizationClicked(organizationId: string) {\n    this.onOrganzationBadgeClicked.emit(organizationId);\n  }\n\n  protected deleteCipher(id: string, permanent: boolean) {\n    return permanent\n      ? this.cipherService.deleteWithServer(id)\n      : this.cipherService.softDeleteWithServer(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return c.hasOldAttachments && c.organizationId == null;\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"collectionsTitle\">\n          {{ \"collections\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"collectionsDesc\" | i18n }}</p>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"@bitwarden/angular/components/collections.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Folder } from \"@bitwarden/common/models/domain/folder\";\nimport { FolderResponse } from \"@bitwarden/common/models/response/folderResponse\";\n\nexport class FolderApiServiceAbstraction {\n  save: (folder: Folder) => Promise<any>;\n  delete: (id: string) => Promise<any>;\n  get: (id: string) => Promise<FolderResponse>;\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    protected folderService: FolderService,\n    protected folderApiService: FolderApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderApiService.save(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderApiService.delete(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"folderAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"folderAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"folder.name\"\n          required\n          appAutofocus\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"@bitwarden/angular/components/folder-add-edit.component\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  constructor(\n    folderService: FolderService,\n    folderApiService: FolderApiServiceAbstraction,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(folderService, folderApiService, i18nService, platformUtilsService, logService);\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Directive()\nexport class ShareComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n\n  protected writeableCollections: CollectionView[] = [];\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n    const orgs = await this.organizationService.getAll();\n    this.organizations = orgs\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"))\n      .filter((o) => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgName =\n      this.organizations.find((o) => o.id === this.organizationId)?.name ??\n      this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"shareTitle\">\n          {{ \"moveToOrganization\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!organizations || !organizations.length\">\n        {{ \"noOrganizationsList\" | i18n }}\n      </div>\n      <div class=\"modal-body\" *ngIf=\"organizations && organizations.length\">\n        <p>{{ \"moveToOrgDesc\" | i18n }}</p>\n        <div class=\"form-group\">\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            class=\"form-control\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [disabled]=\"form.loading || !canSave\"\n          [ngClass]=\"{ loading: form.loading }\"\n          *ngIf=\"organizations && organizations.length\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <a\n          href=\"#\"\n          routerLink=\"/create-organization\"\n          class=\"btn btn-primary\"\n          *ngIf=\"!organizations || !organizations.length\"\n        >\n          {{ \"newOrganization\" | i18n }}\n        </a>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { ShareComponent as BaseShareComponent } from \"@bitwarden/angular/components/share.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\nexport class ShareComponent extends BaseShareComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, Observable } from \"rxjs\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"./models/dynamic-tree-node.model\";\nimport { VaultFilter } from \"./models/vault-filter.model\";\nimport { VaultFilterService } from \"./vault-filter.service\";\n\n@Directive()\nexport class VaultFilterComponent implements OnInit {\n  @Input() activeFilter: VaultFilter = new VaultFilter();\n  @Input() hideFolders = false;\n  @Input() hideCollections = false;\n  @Input() hideFavorites = false;\n  @Input() hideTrash = false;\n  @Input() hideOrganizations = false;\n\n  @Output() onFilterChange = new EventEmitter<VaultFilter>();\n  @Output() onAddFolder = new EventEmitter<never>();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n\n  isLoaded = false;\n  collapsedFilterNodes: Set<string>;\n  organizations: Organization[];\n  activePersonalOwnershipPolicy: boolean;\n  activeSingleOrganizationPolicy: boolean;\n  collections: DynamicTreeNode<CollectionView>;\n  folders$: Observable<DynamicTreeNode<FolderView>>;\n\n  constructor(protected vaultFilterService: VaultFilterService) {}\n\n  get displayCollections() {\n    return this.collections?.fullList != null && this.collections.fullList.length > 0;\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.collapsedFilterNodes = await this.vaultFilterService.buildCollapsedFilterNodes();\n    this.organizations = await this.vaultFilterService.buildOrganizations();\n    if (this.organizations != null && this.organizations.length > 0) {\n      this.activePersonalOwnershipPolicy =\n        await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n      this.activeSingleOrganizationPolicy =\n        await this.vaultFilterService.checkForSingleOrganizationPolicy();\n    }\n    this.folders$ = await this.vaultFilterService.buildNestedFolders();\n    this.collections = await this.initCollections();\n    this.isLoaded = true;\n  }\n\n  // overwritten in web for organization vaults\n  async initCollections() {\n    return await this.vaultFilterService.buildCollections();\n  }\n\n  async toggleFilterNodeCollapseState(node: ITreeNodeObject) {\n    if (this.collapsedFilterNodes.has(node.id)) {\n      this.collapsedFilterNodes.delete(node.id);\n    } else {\n      this.collapsedFilterNodes.add(node.id);\n    }\n    await this.vaultFilterService.storeCollapsedFilterNodes(this.collapsedFilterNodes);\n  }\n\n  async applyFilter(filter: VaultFilter) {\n    if (filter.refreshCollectionsAndFolders) {\n      await this.reloadCollectionsAndFolders(filter);\n      filter = await this.pruneInvalidatedFilterSelections(filter);\n    }\n    this.onFilterChange.emit(filter);\n  }\n\n  async reloadCollectionsAndFolders(filter: VaultFilter) {\n    this.folders$ = await this.vaultFilterService.buildNestedFolders(filter.selectedOrganizationId);\n    this.collections = filter.myVaultOnly\n      ? null\n      : await this.vaultFilterService.buildCollections(filter.selectedOrganizationId);\n  }\n\n  async reloadOrganizations() {\n    this.organizations = await this.vaultFilterService.buildOrganizations();\n    this.activePersonalOwnershipPolicy =\n      await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n    this.activeSingleOrganizationPolicy =\n      await this.vaultFilterService.checkForSingleOrganizationPolicy();\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  protected async pruneInvalidatedFilterSelections(filter: VaultFilter): Promise<VaultFilter> {\n    filter = await this.pruneInvalidFolderSelection(filter);\n    filter = this.pruneInvalidCollectionSelection(filter);\n    return filter;\n  }\n\n  protected async pruneInvalidFolderSelection(filter: VaultFilter): Promise<VaultFilter> {\n    if (\n      filter.selectedFolder &&\n      !(await firstValueFrom(this.folders$))?.hasId(filter.selectedFolderId)\n    ) {\n      filter.selectedFolder = false;\n      filter.selectedFolderId = null;\n    }\n    return filter;\n  }\n\n  protected pruneInvalidCollectionSelection(filter: VaultFilter): VaultFilter {\n    if (\n      filter.myVaultOnly ||\n      (filter.selectedCollection &&\n        filter.selectedCollectionId != null &&\n        !this.collections?.hasId(filter.selectedCollectionId))\n    ) {\n      filter.selectedCollection = false;\n      filter.selectedCollectionId = null;\n    }\n    return filter;\n  }\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\n\nimport { DisplayMode } from \"../models/display-mode\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class OrganizationFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() organizations: Organization[];\n  @Input() activeFilter: VaultFilter;\n  @Input() activePersonalOwnershipPolicy: boolean;\n  @Input() activeSingleOrganizationPolicy: boolean;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  get displayMode(): DisplayMode {\n    let displayMode: DisplayMode = \"organizationMember\";\n    if (this.organizations == null || this.organizations.length < 1) {\n      displayMode = \"noOrganizations\";\n    } else if (this.activePersonalOwnershipPolicy && !this.activeSingleOrganizationPolicy) {\n      displayMode = \"personalOwnershipPolicy\";\n    } else if (!this.activePersonalOwnershipPolicy && this.activeSingleOrganizationPolicy) {\n      displayMode = \"singleOrganizationPolicy\";\n    } else if (this.activePersonalOwnershipPolicy && this.activeSingleOrganizationPolicy) {\n      displayMode = \"singleOrganizationAndPersonalOwnershipPolicies\";\n    }\n\n    return displayMode;\n  }\n\n  get hasActiveFilter() {\n    return this.activeFilter.myVaultOnly || this.activeFilter.selectedOrganizationId != null;\n  }\n\n  readonly organizationGrouping: TopLevelTreeNode = {\n    id: \"vaults\",\n    name: \"allVaults\",\n  };\n\n  async applyOrganizationFilter(organization: Organization) {\n    this.activeFilter.selectedOrganizationId = organization.id;\n    this.activeFilter.myVaultOnly = false;\n    this.activeFilter.refreshCollectionsAndFolders = true;\n    this.applyFilter(this.activeFilter);\n  }\n\n  async applyMyVaultFilter() {\n    this.activeFilter.selectedOrganizationId = null;\n    this.activeFilter.myVaultOnly = true;\n    this.activeFilter.refreshCollectionsAndFolders = true;\n    this.applyFilter(this.activeFilter);\n  }\n\n  clearFilter() {\n    this.activeFilter.myVaultOnly = false;\n    this.activeFilter.selectedOrganizationId = null;\n    this.applyFilter(new VaultFilter(this.activeFilter));\n  }\n\n  private applyFilter(filter: VaultFilter) {\n    this.onFilterChange.emit(filter);\n  }\n\n  async toggleCollapse() {\n    this.onNodeCollapseStateChange.emit(this.organizationGrouping);\n  }\n\n  get isCollapsed() {\n    return this.collapsedFilterNodes.has(this.organizationGrouping.id);\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { Permissions } from \"../../enums/permissions\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { OrganizationData } from \"../data/organizationData\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useResetPassword = obj.useResetPassword;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = obj.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = obj.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = obj.familySponsorshipToDelete;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return this.isAdmin || this.permissions.accessEventLogs;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return this.isAdmin || this.permissions.manageGroups;\n  }\n\n  get canManageSso() {\n    return this.isAdmin || this.permissions.manageSso;\n  }\n\n  get canManagePolicies() {\n    return this.isAdmin || this.permissions.managePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n\n  hasAnyPermission(permissions: Permissions[]) {\n    const specifiedPermissions =\n      (permissions.includes(Permissions.AccessEventLogs) && this.canAccessEventLogs) ||\n      (permissions.includes(Permissions.AccessImportExport) && this.canAccessImportExport) ||\n      (permissions.includes(Permissions.AccessReports) && this.canAccessReports) ||\n      (permissions.includes(Permissions.CreateNewCollections) && this.canCreateNewCollections) ||\n      (permissions.includes(Permissions.EditAnyCollection) && this.canEditAnyCollection) ||\n      (permissions.includes(Permissions.DeleteAnyCollection) && this.canDeleteAnyCollection) ||\n      (permissions.includes(Permissions.EditAssignedCollections) &&\n        this.canEditAssignedCollections) ||\n      (permissions.includes(Permissions.DeleteAssignedCollections) &&\n        this.canDeleteAssignedCollections) ||\n      (permissions.includes(Permissions.ManageGroups) && this.canManageGroups) ||\n      (permissions.includes(Permissions.ManageOrganization) && this.isOwner) ||\n      (permissions.includes(Permissions.ManagePolicies) && this.canManagePolicies) ||\n      (permissions.includes(Permissions.ManageUsers) && this.canManageUsers) ||\n      (permissions.includes(Permissions.ManageUsersPassword) && this.canManageUsersPassword) ||\n      (permissions.includes(Permissions.ManageSso) && this.canManageSso) ||\n      (permissions.includes(Permissions.ManageBilling) && this.canManageBilling);\n\n    return specifiedPermissions && (this.enabled || this.isOwner);\n  }\n\n  get canManageBilling() {\n    return this.isOwner && (this.isProviderUser || !this.hasProvider);\n  }\n\n  get hasProvider() {\n    return this.providerId != null || this.providerName != null;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalConfig } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-enroll-master-password-reset\",\n  templateUrl: \"enroll-master-password-reset.component.html\",\n})\nexport class EnrollMasterPasswordReset {\n  organization: Organization;\n\n  verification: Verification;\n  formPromise: Promise<any>;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private modalRef: ModalRef,\n    config: ModalConfig\n  ) {\n    this.organization = config.data.organization;\n  }\n\n  async submit() {\n    let toastStringRef = \"withdrawPasswordResetSuccess\";\n\n    this.formPromise = this.userVerificationService\n      .buildRequest(this.verification, OrganizationUserResetPasswordEnrollmentRequest)\n      .then(async (request) => {\n        // Set variables\n        let keyString: string = null;\n\n        // Retrieve Public Key\n        const orgKeys = await this.apiService.getOrganizationKeys(this.organization.id);\n        if (orgKeys == null) {\n          throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n        }\n\n        const publicKey = Utils.fromB64ToArray(orgKeys.publicKey);\n\n        // RSA Encrypt user's encKey.key with organization public key\n        const encKey = await this.cryptoService.getEncKey();\n        const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n        keyString = encryptedKey.encryptedString;\n        toastStringRef = \"enrollPasswordResetSuccess\";\n\n        // Create request and execute enrollment\n        request.resetPasswordKey = keyString;\n        await this.apiService.putOrganizationUserResetPasswordEnrollment(\n          this.organization.id,\n          this.organization.userId,\n          request\n        );\n\n        await this.syncService.fullSync(true);\n      });\n    try {\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(toastStringRef));\n      this.modalRef.close();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div\n  class=\"modal fade\"\n  role=\"dialog\"\n  aria-modal=\"true\"\n  aria-labelledby=\"enrollMasterPasswordResetTitle\"\n>\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"enrollMasterPasswordResetTitle\">\n          {{ \"enrollPasswordReset\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">\n          {{ \"resetPasswordEnrollmentWarning\" | i18n }}\n        </app-callout>\n        <app-user-verification [(ngModel)]=\"verification\" name=\"secret\"> </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <bit-submit-button [loading]=\"form.loading\">\n          {{ \"submit\" | i18n }}\n        </bit-submit-button>\n        <button\n          bitButton\n          buttonType=\"secondary\"\n          type=\"button\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span>\n            {{ \"cancel\" | i18n }}\n          </span>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { AfterContentInit, Component, Input } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-link-sso\",\n  templateUrl: \"link-sso.component.html\",\n})\nexport class LinkSsoComponent extends SsoComponent implements AfterContentInit {\n  @Input() organization: Organization;\n  returnUri = \"/settings/organizations\";\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    authService: AuthService,\n    router: Router,\n    route: ActivatedRoute,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    this.returnUri = \"/settings/organizations\";\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngAfterContentInit() {\n    this.identifier = this.organization.identifier;\n  }\n}\n","<a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"submit(returnUri, true)\">\n  <i class=\"bwi bwi-fw bwi-link\" aria-hidden=\"true\"></i>\n  {{ \"linkSso\" | i18n }}\n</a>\n","<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted tw-m-2\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<div\n  *ngIf=\"loaded\"\n  class=\"tw-max-w-[300px] tw-min-w-[200px] tw-flex tw-flex-col\"\n  [appApiAction]=\"actionPromise\"\n>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && !organization.resetPasswordEnrolled\"\n    class=\"dropdown-item\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n    {{ \"enrollPasswordReset\" | i18n }}\n  </button>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && organization.resetPasswordEnrolled\"\n    class=\"dropdown-item\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n    {{ \"withdrawPasswordReset\" | i18n }}\n  </button>\n  <ng-container *ngIf=\"organization.useSso && organization.identifier\">\n    <button\n      *ngIf=\"organization.ssoBound; else linkSso\"\n      class=\"dropdown-item\"\n      (click)=\"unlinkSso(organization)\"\n    >\n      <i class=\"bwi bwi-fw bwi-chain-broken\" aria-hidden=\"true\"></i>\n      {{ \"unlinkSso\" | i18n }}\n    </button>\n    <ng-template #linkSso>\n      <app-link-sso [organization]=\"organization\"> </app-link-sso>\n    </ng-template>\n  </ng-container>\n  <button class=\"dropdown-item text-danger\" (click)=\"leave(organization)\">\n    <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n    {{ \"leave\" | i18n }}\n  </button>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\n\nimport { EnrollMasterPasswordReset } from \"../../organizations/users/enroll-master-password-reset.component\";\n\n@Component({\n  selector: \"app-organization-options\",\n  templateUrl: \"organization-options.component.html\",\n})\nexport class OrganizationOptionsComponent {\n  actionPromise: Promise<any>;\n  policies: Policy[];\n  loaded = false;\n\n  @Input() organization: Organization;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private modalService: ModalService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.policies = await this.policyService.getAll(PolicyType.ResetPassword);\n    this.loaded = true;\n  }\n\n  allowEnrollmentChanges(org: Organization): boolean {\n    if (org.usePolicies && org.useResetPassword && org.hasPublicAndPrivateKeys) {\n      const policy = this.policies.find((p) => p.organizationId === org.id);\n      if (policy != null && policy.enabled) {\n        return org.resetPasswordEnrolled && policy.data.autoEnrollEnabled ? false : true;\n      }\n    }\n\n    return false;\n  }\n\n  showEnrolledStatus(org: Organization): boolean {\n    return (\n      org.useResetPassword &&\n      org.resetPasswordEnrolled &&\n      this.policies.some((p) => p.organizationId === org.id && p.enabled)\n    );\n  }\n\n  async unlinkSso(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"unlinkSsoConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.apiService.deleteSsoUser(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, \"Unlinked SSO\");\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async leave(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.apiService.postLeaveOrganization(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async toggleResetPasswordEnrollment(org: Organization) {\n    if (!this.organization.resetPasswordEnrolled) {\n      this.modalService.open(EnrollMasterPasswordReset, {\n        allowMultipleModals: true,\n        data: {\n          organization: org,\n        },\n      });\n    } else {\n      // Remove reset password\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = \"ignored\";\n      request.resetPasswordKey = null;\n      this.actionPromise = this.apiService.putOrganizationUserResetPasswordEnrollment(\n        this.organization.id,\n        this.organization.userId,\n        request\n      );\n      try {\n        await this.actionPromise;\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"withdrawPasswordResetSuccess\")\n        );\n        this.syncService.fullSync(true);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n}\n","<ng-container *ngIf=\"!hide\">\n  <ng-container [ngSwitch]=\"displayMode\">\n    <ng-container *ngSwitchCase=\"'noOrganizations'\">\n      <ul class=\"filter-options\">\n        <li class=\"filter-option active\">\n          <span class=\"filter-buttons\">\n            <button class=\"filter-button\">\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"myVault\" | i18n }}\n            </button>\n          </span>\n        </li>\n        <li class=\"filter-option\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'personalOwnershipPolicy'\">\n      <div class=\"filter-heading\">\n        <button\n          (click)=\"toggleCollapse()\"\n          title=\"{{ 'toggleCollapse' | i18n }}\"\n          class=\"toggle-button\"\n          [attr.aria-expanded]=\"!isCollapsed\"\n          aria-controls=\"organization-filters\"\n        >\n          <i\n            class=\"bwi bwi-fw\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-right': isCollapsed,\n              'bwi-angle-down': !isCollapsed\n            }\"\n          ></i>\n        </button>\n        <button\n          class=\"filter-button\"\n          (click)=\"clearFilter()\"\n          [ngClass]=\"{ active: !hasActiveFilter }\"\n        >\n          &nbsp;{{ organizationGrouping.name | i18n }}\n        </button>\n      </div>\n      <ul id=\"organization-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n        <li\n          class=\"filter-option\"\n          *ngFor=\"let organization of organizations\"\n          [ngClass]=\"{ active: organization.id === activeFilter.selectedOrganizationId }\"\n        >\n          <span class=\"filter-buttons\">\n            <button class=\"filter-button\" (click)=\"applyOrganizationFilter(organization)\">\n              <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n              {{ organization.name }}\n            </button>\n            <ng-container *ngIf=\"organization.id === activeFilter.selectedOrganizationId\">\n              <button [bitMenuTriggerFor]=\"orgMenu\" class=\"org-options ml-auto\">\n                <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu class=\"filter-organization-options\" #orgMenu>\n                <app-organization-options [organization]=\"organization\"></app-organization-options>\n              </bit-menu>\n            </ng-container>\n          </span>\n        </li>\n        <li class=\"filter-option\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'singleOrganizationAndPersonalOwnershipPolicies'\">\n      <div class=\"filter-heading\">\n        <button class=\"filter-button active\">\n          <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n          {{ organizations[0].name }}\n        </button>\n      </div>\n    </ng-container>\n    <ng-container *ngSwitchDefault>\n      <div class=\"filter-heading\">\n        <button\n          class=\"toggle-button\"\n          title=\"{{ 'toggleCollapse' | i18n }}\"\n          (click)=\"toggleCollapse()\"\n          [attr.aria-expanded]=\"!isCollapsed\"\n          aria-controls=\"organization-filters\"\n        >\n          <i\n            class=\"bwi bwi-fw\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-right': isCollapsed,\n              'bwi-angle-down': !isCollapsed\n            }\"\n          ></i>\n        </button>\n        <button\n          class=\"filter-button\"\n          (click)=\"clearFilter()\"\n          [ngClass]=\"{ active: !hasActiveFilter }\"\n        >\n          &nbsp;{{ organizationGrouping.name | i18n }}\n        </button>\n      </div>\n      <ul id=\"organization-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n        <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.myVaultOnly }\">\n          <span class=\"filter-buttons\">\n            <button class=\"filter-button\" (click)=\"applyMyVaultFilter()\">\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"myVault\" | i18n }}\n            </button>\n          </span>\n        </li>\n        <li\n          class=\"filter-option\"\n          *ngFor=\"let organization of organizations\"\n          [ngClass]=\"{ active: organization.id === activeFilter.selectedOrganizationId }\"\n        >\n          <span class=\"filter-buttons\">\n            <button class=\"filter-button\" (click)=\"applyOrganizationFilter(organization)\">\n              <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n              {{ organization.name }}\n              <i\n                *ngIf=\"!organization.enabled\"\n                class=\"bwi bwi-fw bwi-exclamation-triangle text-danger\"\n                aria-label=\"{{ 'organizationIsDisabled' | i18n }}\"\n                appA11yTitle=\"{{ 'organizationIsDisabled' | i18n }}\"\n              ></i>\n            </button>\n            <ng-container>\n              <button [bitMenuTriggerFor]=\"orgMenu\" class=\"org-options ml-auto\">\n                <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu class=\"filter-organization-options\" #orgMenu>\n                <app-organization-options [organization]=\"organization\"></app-organization-options>\n              </bit-menu>\n            </ng-container>\n          </span>\n        </li>\n        <li class=\"filter-option\" *ngIf=\"!(displayMode === 'singleOrganizationPolicy')\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n  </ng-container>\n  <hr />\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { OrganizationFilterComponent as BaseOrganizationFilterComponent } from \"@bitwarden/angular/modules/vault-filter/components/organization-filter.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-filter\",\n  templateUrl: \"organization-filter.component.html\",\n})\nexport class OrganizationFilterComponent extends BaseOrganizationFilterComponent {\n  displayText = \"allVaults\";\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {\n    super();\n  }\n\n  async applyOrganizationFilter(organization: Organization) {\n    if (organization.enabled) {\n      //proceed with default behaviour for enabled organizations\n      super.applyOrganizationFilter(organization);\n    } else {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"disabledOrganizationFilterError\")\n      );\n    }\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherStatus } from \"../models/cipher-status.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class StatusFilterComponent {\n  @Input() hideFavorites = false;\n  @Input() hideTrash = false;\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n  @Input() activeFilter: VaultFilter;\n\n  get show() {\n    return !(this.hideFavorites && this.hideTrash);\n  }\n\n  applyFilter(cipherStatus: CipherStatus) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.status = cipherStatus;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <ul class=\"filter-options\">\n    <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.status === 'all' }\">\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('all')\">\n          <i class=\"bwi bwi-fw bwi-filter\" aria-hidden=\"true\"></i>&nbsp;{{ \"allItems\" | i18n }}\n        </button>\n      </span>\n    </li>\n    <li\n      *ngIf=\"!hideFavorites\"\n      class=\"filter-option\"\n      [ngClass]=\"{ active: activeFilter.status === 'favorites' }\"\n    >\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('favorites')\">\n          <i class=\"bwi bwi-fw bwi-star\" aria-hidden=\"true\"></i>&nbsp;{{ \"favorites\" | i18n }}\n        </button>\n      </span>\n    </li>\n    <li\n      *ngIf=\"!hideTrash\"\n      class=\"filter-option\"\n      [ngClass]=\"{ active: activeFilter.status === 'trash' }\"\n    >\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('trash')\">\n          <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>&nbsp;{{ \"trash\" | i18n }}\n        </button>\n      </span>\n    </li>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { StatusFilterComponent as BaseStatusFilterComponent } from \"@bitwarden/angular/modules/vault-filter/components/status-filter.component\";\n\n@Component({\n  selector: \"app-status-filter\",\n  templateUrl: \"status-filter.component.html\",\n})\nexport class StatusFilterComponent extends BaseStatusFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\n\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class TypeFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() selectedCipherType: CipherType = null;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  readonly typesNode: TopLevelTreeNode = {\n    id: \"types\",\n    name: \"types\",\n  };\n\n  cipherTypeEnum = CipherType; // used in the template\n\n  get isCollapsed() {\n    return this.collapsedFilterNodes.has(this.typesNode.id);\n  }\n\n  applyFilter(cipherType: CipherType) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.cipherType = cipherType;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  async toggleCollapse() {\n    this.onNodeCollapseStateChange.emit(this.typesNode);\n  }\n}\n","<div class=\"filter-heading\">\n  <button\n    class=\"toggle-button\"\n    [attr.aria-expanded]=\"!isCollapsed\"\n    aria-controls=\"type-filters\"\n    (click)=\"toggleCollapse()\"\n    title=\"{{ 'toggleCollapse' | i18n }}\"\n  >\n    <i\n      class=\"bwi bwi-fw\"\n      aria-hidden=\"true\"\n      [ngClass]=\"{\n        'bwi-angle-right': isCollapsed,\n        'bwi-angle-down': !isCollapsed\n      }\"\n    ></i>\n  </button>\n  <h3>&nbsp;{{ \"types\" | i18n }}</h3>\n</div>\n<ul id=\"type-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Login }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Login)\">\n        <i class=\"bwi bwi-fw bwi-globe\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeLogin\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Card }\">\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Card)\">\n        <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeCard\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Identity }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Identity)\">\n        <i class=\"bwi bwi-fw bwi-id-card\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeIdentity\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.SecureNote }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.SecureNote)\">\n        <i class=\"bwi bwi-fw bwi-sticky-note\" aria-hidden=\"true\"></i>&nbsp;{{\n          \"typeSecureNote\" | i18n\n        }}\n      </button>\n    </span>\n  </li>\n</ul>\n","import { Component } from \"@angular/core\";\n\nimport { TypeFilterComponent as BaseTypeFilterComponent } from \"@bitwarden/angular/modules/vault-filter/components/type-filter.component\";\n\n@Component({\n  selector: \"app-type-filter\",\n  templateUrl: \"type-filter.component.html\",\n})\nexport class TypeFilterComponent extends BaseTypeFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class FolderFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() folderNodes: DynamicTreeNode<FolderView>;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n  @Output() onAddFolder = new EventEmitter();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n\n  get folders() {\n    return this.folderNodes?.fullList;\n  }\n\n  get nestedFolders() {\n    return this.folderNodes?.nestedList;\n  }\n\n  readonly foldersGrouping: TopLevelTreeNode = {\n    id: \"folders\",\n    name: \"folders\",\n  };\n\n  applyFilter(folder: FolderView) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.selectedFolder = true;\n    this.activeFilter.selectedFolderId = folder.id;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  isCollapsed(node: ITreeNodeObject) {\n    return this.collapsedFilterNodes.has(node.id);\n  }\n\n  async toggleCollapse(node: ITreeNodeObject) {\n    this.onNodeCollapseStateChange.emit(node);\n  }\n}\n","<ng-container *ngIf=\"!hide\">\n  <div class=\"filter-heading\">\n    <button\n      class=\"toggle-button\"\n      (click)=\"toggleCollapse(foldersGrouping)\"\n      [attr.aria-expanded]=\"!isCollapsed(foldersGrouping)\"\n      aria-controls=\"folder-filters\"\n      title=\"{{ 'toggleCollapse' | i18n }}\"\n    >\n      <i\n        class=\"bwi bwi-fw\"\n        aria-hidden=\"true\"\n        [ngClass]=\"{\n          'bwi-angle-right': isCollapsed(foldersGrouping),\n          'bwi-angle-down': !isCollapsed(foldersGrouping)\n        }\"\n      ></i>\n    </button>\n    <h3 class=\"filter-title\">&nbsp;{{ \"folders\" | i18n }}</h3>\n    <button\n      class=\"text-muted ml-auto add-button\"\n      (click)=\"addFolder()\"\n      appA11yTitle=\"{{ 'addFolder' | i18n }}\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n  <ul id=\"folder-filters\" *ngIf=\"!isCollapsed(foldersGrouping)\" class=\"filter-options\">\n    <ng-template #recursiveFolders let-folders>\n      <li\n        *ngFor=\"let f of folders\"\n        [ngClass]=\"{\n          active: f.node.id === activeFilter.selectedFolderId && activeFilter.selectedFolder\n        }\"\n        class=\"filter-option\"\n      >\n        <span class=\"filter-buttons\">\n          <button\n            *ngIf=\"f.children.length\"\n            title=\"{{ 'toggleCollapse' | i18n }}\"\n            (click)=\"toggleCollapse(f.node)\"\n            [attr.aria-expanded]=\"!isCollapsed(f.node)\"\n            [attr.aria-controls]=\"f.node.name + '_children'\"\n            class=\"toggle-button\"\n          >\n            <i\n              class=\"bwi bwi-fw\"\n              [ngClass]=\"{\n                'bwi-angle-right': isCollapsed(f.node),\n                'bwi-angle-down': !isCollapsed(f.node)\n              }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button class=\"filter-button\" (click)=\"applyFilter(f.node)\">\n            <i *ngIf=\"f.children.length === 0\" class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i\n            >&nbsp;{{ f.node.name }}\n          </button>\n          <button\n            class=\"edit-button\"\n            (click)=\"editFolder(f.node)\"\n            appA11yTitle=\"{{ 'editFolder' | i18n }}\"\n            *ngIf=\"f.node.id\"\n          >\n            <i class=\"bwi bwi-pencil bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </span>\n        <ul\n          [id]=\"f.node.name + '_children'\"\n          class=\"nested-filter-options\"\n          *ngIf=\"f.children.length && !isCollapsed(f.node)\"\n        >\n          <ng-container *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: f.children }\">\n          </ng-container>\n        </ul>\n      </li>\n    </ng-template>\n    <ng-container\n      *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: nestedFolders }\"\n    ></ng-container>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { FolderFilterComponent as BaseFolderFilterComponent } from \"@bitwarden/angular/modules/vault-filter/components/folder-filter.component\";\n\n@Component({\n  selector: \"app-folder-filter\",\n  templateUrl: \"folder-filter.component.html\",\n})\nexport class FolderFilterComponent extends BaseFolderFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class CollectionFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() collectionNodes: DynamicTreeNode<CollectionView>;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  readonly collectionsGrouping: TopLevelTreeNode = {\n    id: \"collections\",\n    name: \"collections\",\n  };\n\n  get collections() {\n    return this.collectionNodes?.fullList;\n  }\n\n  get nestedCollections() {\n    return this.collectionNodes?.nestedList;\n  }\n\n  get show() {\n    return !this.hide && this.collections != null && this.collections.length > 0;\n  }\n\n  isCollapsed(node: ITreeNodeObject) {\n    return this.collapsedFilterNodes.has(node.id);\n  }\n\n  applyFilter(collection: CollectionView) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.selectedCollection = true;\n    this.activeFilter.selectedCollectionId = collection.id;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  async toggleCollapse(node: ITreeNodeObject) {\n    this.onNodeCollapseStateChange.emit(node);\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <div class=\"filter-heading\">\n    <button\n      (click)=\"toggleCollapse(collectionsGrouping)\"\n      [attr.aria-expanded]=\"!isCollapsed(collectionsGrouping)\"\n      aria-controls=\"collection-filters\"\n      title=\"{{ 'toggleCollapse' | i18n }}\"\n      class=\"toggle-button\"\n    >\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-angle-right': isCollapsed(collectionsGrouping),\n          'bwi-angle-down': !isCollapsed(collectionsGrouping)\n        }\"\n        aria-hidden=\"true\"\n      ></i>\n    </button>\n    <h3 class=\"filter-title\">&nbsp;{{ collectionsGrouping.name | i18n }}</h3>\n  </div>\n  <ul id=\"collection-filters\" *ngIf=\"!isCollapsed(collectionsGrouping)\" class=\"filter-options\">\n    <ng-template #recursiveCollections let-collections>\n      <li\n        *ngFor=\"let c of collections\"\n        [ngClass]=\"{\n          active: c.node.id === activeFilter.selectedCollectionId && activeFilter.selectedCollection\n        }\"\n        class=\"filter-option\"\n      >\n        <span class=\"filter-buttons\">\n          <button\n            class=\"toggle-button\"\n            *ngIf=\"c.children.length\"\n            (click)=\"toggleCollapse(c.node)\"\n            title=\"{{ 'toggleCollapse' | i18n }}\"\n            [attr.aria-expanded]=\"!isCollapsed(c.node)\"\n            [attr.aria-controls]=\"c.node.name + '_children'\"\n          >\n            <i\n              class=\"bwi bwi-fw\"\n              [ngClass]=\"{\n                'bwi-angle-right': isCollapsed(c.node),\n                'bwi-angle-down': !isCollapsed(c.node)\n              }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button class=\"filter-button\" (click)=\"applyFilter(c.node)\">\n            <i\n              *ngIf=\"c.children.length === 0\"\n              class=\"bwi bwi-collection bwi-fw\"\n              aria-hidden=\"true\"\n            ></i\n            >&nbsp;{{ c.node.name }}\n          </button>\n        </span>\n        <ul\n          [id]=\"c.node.name + '_children'\"\n          class=\"nested-filter-options\"\n          *ngIf=\"c.children.length && !isCollapsed(c.node)\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: c.children }\"\n          >\n          </ng-container>\n        </ul>\n      </li>\n    </ng-template>\n    <ng-container\n      *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: nestedCollections }\"\n    >\n    </ng-container>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { CollectionFilterComponent as BaseCollectionFilterComponent } from \"@bitwarden/angular/modules/vault-filter/components/collection-filter.component\";\n\n@Component({\n  selector: \"app-collection-filter\",\n  templateUrl: \"collection-filter.component.html\",\n})\nexport class CollectionFilterComponent extends BaseCollectionFilterComponent {}\n","<div class=\"card vault-filters\">\n  <div class=\"container loading-spinner\" *ngIf=\"!isLoaded\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n  </div>\n  <div *ngIf=\"isLoaded\">\n    <div class=\"card-header d-flex\">\n      {{ \"filters\" | i18n }}\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/searching-vault/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"card-body\">\n      <input\n        type=\"search\"\n        placeholder=\"{{ (searchPlaceholder | i18n) || ('searchVault' | i18n) }}\"\n        id=\"search\"\n        class=\"form-control\"\n        [(ngModel)]=\"searchText\"\n        (input)=\"searchTextChanged()\"\n        autocomplete=\"off\"\n        appAutofocus\n      />\n      <app-organization-filter\n        [hide]=\"hideOrganizations\"\n        [activeFilter]=\"activeFilter\"\n        [collapsedFilterNodes]=\"collapsedFilterNodes\"\n        [organizations]=\"organizations\"\n        [activePersonalOwnershipPolicy]=\"activePersonalOwnershipPolicy\"\n        [activeSingleOrganizationPolicy]=\"activeSingleOrganizationPolicy\"\n        (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n        (onFilterChange)=\"applyFilter($event)\"\n      ></app-organization-filter>\n      <div class=\"filter\">\n        <app-status-filter\n          [hideFavorites]=\"hideFavorites\"\n          [hideTrash]=\"hideTrash\"\n          [activeFilter]=\"activeFilter\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-status-filter>\n      </div>\n      <div class=\"filter\">\n        <app-type-filter\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-type-filter>\n      </div>\n      <div class=\"filter\">\n        <app-folder-filter\n          [hide]=\"hideFolders\"\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          [folderNodes]=\"folders$ | async\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n          (onAddFolder)=\"addFolder()\"\n          (onEditFolder)=\"editFolder($event)\"\n        ></app-folder-filter>\n      </div>\n      <div class=\"filter\">\n        <app-collection-filter\n          [hide]=\"hideCollections\"\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          [collectionNodes]=\"collections\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-collection-filter>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { VaultFilterComponent as BaseVaultFilterComponent } from \"@bitwarden/angular/modules/vault-filter/vault-filter.component\";\n\nimport { VaultFilterService } from \"./vault-filter.service\";\n\n@Component({\n  selector: \"app-vault-filter\",\n  templateUrl: \"vault-filter.component.html\",\n})\nexport class VaultFilterComponent extends BaseVaultFilterComponent {\n  @Output() onSearchTextChanged = new EventEmitter<string>();\n\n  searchPlaceholder: string;\n  searchText = \"\";\n\n  constructor(protected vaultFilterService: VaultFilterService) {\n    // This empty constructor is required to provide the web vaultFilterService subclass to super()\n    // TODO: refactor this to use proper dependency injection\n    super(vaultFilterService);\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.vaultFilterService.collapsedFilterNodes$.subscribe((nodes) => {\n      this.collapsedFilterNodes = nodes;\n    });\n  }\n\n  searchTextChanged() {\n    this.onSearchTextChanged.emit(this.searchText);\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherBulkDeleteRequest } from \"@bitwarden/common/models/request/cipherBulkDeleteRequest\";\n\n@Component({\n  selector: \"app-vault-bulk-delete\",\n  templateUrl: \"bulk-delete.component.html\",\n})\nexport class BulkDeleteComponent {\n  @Input() cipherIds: string[] = [];\n  @Input() permanent = false;\n  @Input() organization: Organization;\n  @Output() onDeleted = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  async submit() {\n    if (!this.organization || !this.organization.canEditAnyCollection) {\n      await this.deleteCiphers();\n    } else {\n      await this.deleteCiphersAdmin();\n    }\n\n    await this.formPromise;\n\n    this.onDeleted.emit();\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(this.permanent ? \"permanentlyDeletedItems\" : \"deletedItems\")\n    );\n  }\n\n  private async deleteCiphers() {\n    if (this.permanent) {\n      this.formPromise = await this.cipherService.deleteManyWithServer(this.cipherIds);\n    } else {\n      this.formPromise = await this.cipherService.softDeleteManyWithServer(this.cipherIds);\n    }\n  }\n\n  private async deleteCiphersAdmin() {\n    const deleteRequest = new CipherBulkDeleteRequest(this.cipherIds, this.organization.id);\n    if (this.permanent) {\n      this.formPromise = await this.apiService.deleteManyCiphersAdmin(deleteRequest);\n    } else {\n      this.formPromise = await this.apiService.putDeleteManyCiphersAdmin(deleteRequest);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteSelectedTitle\">\n          {{ (permanent ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{\n          (permanent ? \"permanentlyDeleteSelectedItemsDesc\" : \"deleteSelectedItemsDesc\")\n            | i18n: cipherIds.length\n        }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-danger btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (permanent ? \"permanentlyDelete\" : \"delete\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"moveSelectedTitle\">\n          {{ \"moveSelected\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveSelectedItemsDesc\" | i18n: cipherIds.length }}</p>\n        <div class=\"form-group\">\n          <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n          <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"folderId\" class=\"form-control\">\n            <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\n@Component({\n  selector: \"app-vault-bulk-move\",\n  templateUrl: \"bulk-move.component.html\",\n})\nexport class BulkMoveComponent implements OnInit {\n  @Input() cipherIds: string[] = [];\n  @Output() onMoved = new EventEmitter();\n\n  folderId: string = null;\n  folders$: Observable<FolderView[]>;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService\n  ) {}\n\n  async ngOnInit() {\n    this.folders$ = this.folderService.folderViews$;\n    this.folderId = (await firstValueFrom(this.folders$))[0].id;\n  }\n\n  async submit() {\n    this.formPromise = this.cipherService.moveManyWithServer(this.cipherIds, this.folderId);\n    await this.formPromise;\n    this.onMoved.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"movedItems\"));\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-bulk-restore\",\n  templateUrl: \"bulk-restore.component.html\",\n})\nexport class BulkRestoreComponent {\n  @Input() cipherIds: string[] = [];\n  @Output() onRestored = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async submit() {\n    this.formPromise = this.cipherService.restoreManyWithServer(this.cipherIds);\n    await this.formPromise;\n    this.onRestored.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItems\"));\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"restoreSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"restoreSelectedTitle\">\n          {{ \"restoreSelected\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"restoreSelectedItemsDesc\" | i18n: cipherIds.length }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"restore\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedToOrgTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"moveSelectedToOrgTitle\">\n          {{ \"moveSelectedToOrg\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveManyToOrgDesc\" | i18n }}</p>\n        <p>\n          {{\n            \"moveSelectedItemsCountDesc\"\n              | i18n: this.ciphers.length:shareableCiphers.length:nonShareableCount\n          }}\n        </p>\n        <div class=\"form-group\">\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            class=\"form-control\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [disabled]=\"form.loading || !canSave\"\n          [ngClass]=\"{ loading: form.loading }\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-bulk-share\",\n  templateUrl: \"bulk-share.component.html\",\n})\nexport class BulkShareComponent implements OnInit {\n  @Input() ciphers: CipherView[] = [];\n  @Input() organizationId: string;\n  @Output() onShared = new EventEmitter();\n\n  nonShareableCount = 0;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n  shareableCiphers: CipherView[] = [];\n  formPromise: Promise<any>;\n\n  private writeableCollections: CollectionView[] = [];\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.shareableCiphers = this.ciphers.filter(\n      (c) => !c.hasOldAttachments && c.organizationId == null\n    );\n    this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.filter((c) => !c.readOnly);\n    this.organizations = await this.organizationService.getAll();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  filterCollections() {\n    this.selectAll(false);\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit() {\n    const checkedCollectionIds = this.collections\n      .filter((c) => (c as any).checked)\n      .map((c) => c.id);\n    try {\n      this.formPromise = this.cipherService.shareManyWithServer(\n        this.shareableCiphers,\n        this.organizationId,\n        checkedCollectionIds\n      );\n      await this.formPromise;\n      this.onShared.emit();\n      const orgName =\n        this.organizations.find((o) => o.id === this.organizationId)?.name ??\n        this.i18nService.t(\"organization\");\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"movedItemsToOrg\", orgName)\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n\n  get canSave() {\n    if (\n      this.shareableCiphers != null &&\n      this.shareableCiphers.length > 0 &&\n      this.collections != null\n    ) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"dropdown mr-2\" appListDropdown>\n  <button\n    class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n    type=\"button\"\n    id=\"bulkActionsButton\"\n    data-toggle=\"dropdown\"\n    aria-haspopup=\"true\"\n    aria-expanded=\"false\"\n    appA11yTitle=\"{{ 'options' | i18n }}\"\n  >\n    <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n  </button>\n  <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkMove()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i>\n      {{ \"moveSelected\" | i18n }}\n    </button>\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkShare()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n      {{ \"moveSelectedToOrg\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" (click)=\"bulkRestore()\" *ngIf=\"deleted && !organization\">\n      <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n      {{ \"restoreSelected\" | i18n }}\n    </button>\n    <button class=\"dropdown-item text-danger\" (click)=\"bulkDelete()\">\n      <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n      {{ (deleted ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n    </button>\n    <div class=\"dropdown-divider\"></div>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n      <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n      {{ \"selectAll\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n      <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n      {{ \"unselectAll\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-template #bulkDeleteTemplate></ng-template>\n<ng-template #bulkRestoreTemplate></ng-template>\n<ng-template #bulkMoveTemplate></ng-template>\n<ng-template #bulkShareTemplate></ng-template>\n","import { Component, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { BulkDeleteComponent } from \"./bulk-delete.component\";\nimport { BulkMoveComponent } from \"./bulk-move.component\";\nimport { BulkRestoreComponent } from \"./bulk-restore.component\";\nimport { BulkShareComponent } from \"./bulk-share.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\n\n@Component({\n  selector: \"app-vault-bulk-actions\",\n  templateUrl: \"bulk-actions.component.html\",\n})\nexport class BulkActionsComponent {\n  @Input() ciphersComponent: CiphersComponent;\n  @Input() deleted: boolean;\n  @Input() organization: Organization;\n\n  @ViewChild(\"bulkDeleteTemplate\", { read: ViewContainerRef, static: true })\n  bulkDeleteModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRestoreTemplate\", { read: ViewContainerRef, static: true })\n  bulkRestoreModalRef: ViewContainerRef;\n  @ViewChild(\"bulkMoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkMoveModalRef: ViewContainerRef;\n  @ViewChild(\"bulkShareTemplate\", { read: ViewContainerRef, static: true })\n  bulkShareModalRef: ViewContainerRef;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async bulkDelete() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkDeleteComponent,\n      this.bulkDeleteModalRef,\n      (comp) => {\n        comp.permanent = this.deleted;\n        comp.cipherIds = selectedIds;\n        comp.organization = this.organization;\n        comp.onDeleted.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkRestore() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRestoreComponent,\n      this.bulkRestoreModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        comp.onRestored.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkShare() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedCiphers = this.ciphersComponent.getSelected();\n    if (selectedCiphers.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkShareComponent,\n      this.bulkShareModalRef,\n      (comp) => {\n        comp.ciphers = selectedCiphers;\n        comp.onShared.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkMove() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkMoveComponent,\n      this.bulkMoveModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        comp.onMoved.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  selectAll(select: boolean) {\n    this.ciphersComponent.selectAll(select);\n  }\n\n  private async promptPassword() {\n    const selectedCiphers = this.ciphersComponent.getSelected();\n    const notProtected = !selectedCiphers.find(\n      (cipher) => cipher.reprompt !== CipherRepromptType.None\n    );\n\n    return notProtected || (await this.passwordRepromptService.showPasswordPrompt());\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-verify-email\",\n  templateUrl: \"verify-email.component.html\",\n})\nexport class VerifyEmailComponent {\n  actionPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async send() {\n    if (this.actionPromise != null) {\n      return;\n    }\n    try {\n      this.actionPromise = this.apiService.postAccountVerifyEmail();\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"checkInboxForVerification\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","<div class=\"card border-warning\">\n  <div class=\"card-header bg-warning text-white\">\n    <i class=\"bwi bwi-envelope bwi-fw\" aria-hidden=\"true\"></i> {{ \"verifyEmail\" | i18n }}\n  </div>\n  <div class=\"card-body\">\n    <p>{{ \"verifyEmailDesc\" | i18n }}</p>\n    <button\n      type=\"button\"\n      class=\"btn btn-block btn-outline-secondary btn-submit\"\n      #sendBtn\n      [appApiAction]=\"actionPromise\"\n      [disabled]=\"sendBtn.loading\"\n      (click)=\"send()\"\n    >\n      <i class=\"bwi bwi-spin bwi-spinner\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>\n        {{ \"sendEmail\" | i18n }}\n      </span>\n    </button>\n  </div>\n</div>\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-vault-filter\n              #vaultFilter\n              [activeFilter]=\"activeFilter\"\n              (onFilterChange)=\"applyVaultFilter($event)\"\n              (onAddFolder)=\"addFolder()\"\n              (onEditFolder)=\"editFolder($event.id)\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n            ></app-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div [ngClass]=\"{ 'col-6': isShowingCards, 'col-9': !isShowingCards }\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"vaultItems\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions\n            [ciphersComponent]=\"ciphersComponent\"\n            [deleted]=\"activeFilter.status === 'trash'\"\n          >\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addCipher()\"\n            *ngIf=\"activeFilter.status !== 'trash'\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout\n        type=\"warning\"\n        *ngIf=\"activeFilter.status === 'trash'\"\n        icon=\"bwi-exclamation-triangle\"\n      >\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-vault-ciphers\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onShareClicked)=\"shareCipher($event)\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n        (onOrganzationBadgeClicked)=\"applyOrganizationFilter($event)\"\n      >\n      </app-vault-ciphers>\n    </div>\n    <div class=\"col-3\">\n      <div class=\"card border-warning mb-4\" *ngIf=\"showUpdateKey\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateKeyTitle\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateEncryptionKeyShortDesc\" | i18n }}</p>\n          <button class=\"btn btn-block btn-outline-secondary\" type=\"button\" (click)=\"updateKey()\">\n            {{ \"updateEncryptionKey\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-verify-email *ngIf=\"showVerifyEmail\" class=\"d-block mb-4\"></app-verify-email>\n      <div class=\"card border-warning mb-4\" *ngIf=\"showBrowserOutdated\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateBrowser\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateBrowserDesc\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            target=\"_blank\"\n            href=\"https://browser-update.org/update-browser.html\"\n            rel=\"noopener\"\n          >\n            {{ \"updateBrowser\" | i18n }}\n          </a>\n        </div>\n      </div>\n      <div class=\"card border-success mb-4\" *ngIf=\"showPremiumCallout\">\n        <div class=\"card-header bg-success text-white\">\n          <i class=\"bwi bwi-star-f bwi-fw\" aria-hidden=\"true\"></i> {{ \"goPremium\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            routerLink=\"/settings/subscription/premium\"\n          >\n            {{ \"goPremium\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #folderAddEdit></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #share></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #updateKeyTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { VaultFilter } from \"@bitwarden/angular/modules/vault-filter/models/vault-filter.model\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { UpdateKeyComponent } from \"../../../../settings/update-key.component\";\nimport { AddEditComponent } from \"../../../../vault/add-edit.component\";\nimport { AttachmentsComponent } from \"../../../../vault/attachments.component\";\nimport { CiphersComponent } from \"../../../../vault/ciphers.component\";\nimport { CollectionsComponent } from \"../../../../vault/collections.component\";\nimport { FolderAddEditComponent } from \"../../../../vault/folder-add-edit.component\";\nimport { ShareComponent } from \"../../../../vault/share.component\";\nimport { VaultFilterComponent } from \"../../../vault-filter/vault-filter.component\";\nimport { VaultFilterService } from \"../../../vault-filter/vault-filter.service\";\nimport { VaultService } from \"../../vault.service\";\n\nconst BroadcasterSubscriptionId = \"VaultComponent\";\n\n@Component({\n  selector: \"app-vault\",\n  templateUrl: \"individual-vault.component.html\",\n})\nexport class IndividualVaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true }) filterComponent: VaultFilterComponent;\n  @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"folderAddEdit\", { read: ViewContainerRef, static: true })\n  folderAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"share\", { read: ViewContainerRef, static: true }) shareModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"updateKeyTemplate\", { read: ViewContainerRef, static: true })\n  updateKeyModalRef: ViewContainerRef;\n\n  folderId: string = null;\n  myVaultOnly = false;\n  showVerifyEmail = false;\n  showBrowserOutdated = false;\n  showUpdateKey = false;\n  showPremiumCallout = false;\n  trashCleanupWarning: string = null;\n  activeFilter: VaultFilter = new VaultFilter();\n\n  constructor(\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private tokenService: TokenService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private vaultService: VaultService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService,\n    private vaultFilterService: VaultFilterService\n  ) {}\n\n  async ngOnInit() {\n    this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\n    this.showBrowserOutdated = window.navigator.userAgent.indexOf(\"MSIE\") !== -1;\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      await this.syncService.fullSync(false);\n      const canAccessPremium = await this.stateService.getCanAccessPremium();\n      this.showPremiumCallout =\n        !this.showVerifyEmail && !canAccessPremium && !this.platformUtilsService.isSelfHost();\n\n      this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n      this.filterComponent.reloadOrganizations();\n      this.showUpdateKey = !(await this.cryptoService.hasEncKey());\n\n      const cipherId = getCipherIdFromParams(params);\n\n      if (cipherId) {\n        const cipherView = new CipherView();\n        cipherView.id = cipherId;\n        if (params.action === \"clone\") {\n          await this.cloneCipher(cipherView);\n        } else if (params.action === \"edit\") {\n          await this.editCipher(cipherView);\n        }\n      }\n      await this.ciphersComponent.reload();\n\n      this.route.queryParams.subscribe(async (params) => {\n        const cipherId = getCipherIdFromParams(params);\n        if (cipherId) {\n          if ((await this.cipherService.get(cipherId)) != null) {\n            this.editCipherId(cipherId);\n          } else {\n            this.platformUtilsService.showToast(\n              \"error\",\n              this.i18nService.t(\"errorOccurred\"),\n              this.i18nService.t(\"unknownCipher\")\n            );\n            this.router.navigate([], {\n              queryParams: { itemId: null, cipherId: null },\n              queryParamsHandling: \"merge\",\n            });\n          }\n        }\n      });\n\n      this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n        this.ngZone.run(async () => {\n          switch (message.command) {\n            case \"syncCompleted\":\n              if (message.successfully) {\n                await Promise.all([\n                  this.filterComponent.reloadCollectionsAndFolders(this.activeFilter),\n                  this.filterComponent.reloadOrganizations(),\n                  this.ciphersComponent.load(this.ciphersComponent.filter),\n                ]);\n                this.changeDetectorRef.detectChanges();\n              }\n              break;\n          }\n        });\n      });\n    });\n  }\n\n  get isShowingCards() {\n    return (\n      this.showBrowserOutdated ||\n      this.showPremiumCallout ||\n      this.showUpdateKey ||\n      this.showVerifyEmail\n    );\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async applyVaultFilter(vaultFilter: VaultFilter) {\n    this.ciphersComponent.showAddNew = vaultFilter.status !== \"trash\";\n    this.activeFilter = vaultFilter;\n    await this.ciphersComponent.reload(\n      this.activeFilter.buildFilter(),\n      vaultFilter.status === \"trash\"\n    );\n    this.filterComponent.searchPlaceholder = this.vaultService.calculateSearchBarLocalizationString(\n      this.activeFilter\n    );\n    this.go();\n  }\n\n  async applyOrganizationFilter(orgId: string) {\n    if (orgId == null) {\n      this.activeFilter.resetOrganization();\n      this.activeFilter.myVaultOnly = true;\n    } else {\n      this.activeFilter.selectedOrganizationId = orgId;\n    }\n    await this.vaultFilterService.ensureVaultFiltersAreExpanded();\n    await this.applyVaultFilter(this.activeFilter);\n  }\n\n  filterSearchText(searchText: string) {\n    this.ciphersComponent.searchText = searchText;\n    this.ciphersComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (cipher.organizationId == null && !canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    } else if (cipher.organizationId != null) {\n      const org = await this.organizationService.get(cipher.organizationId);\n      if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\n        this.messagingService.send(\"upgradeOrganization\", {\n          organizationId: cipher.organizationId,\n        });\n        return;\n      }\n    }\n\n    let madeAttachmentChanges = false;\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        comp.onReuploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.ciphersComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async shareCipher(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      ShareComponent,\n      this.shareModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        comp.onSharedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addFolder() {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = null;\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n      }\n    );\n  }\n\n  async editFolder(folderId: string) {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = folderId;\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n        comp.onDeletedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.type = this.activeFilter.cipherType;\n    component.folderId = this.folderId === \"none\" ? null : this.folderId;\n    if (this.activeFilter.selectedCollectionId != null) {\n      const collection = this.filterComponent.collections.fullList.filter(\n        (c) => c.id === this.activeFilter.selectedCollectionId\n      );\n      if (collection.length > 0) {\n        component.organizationId = collection[0].organizationId;\n        component.collectionIds = [this.activeFilter.selectedCollectionId];\n      }\n    }\n    if (this.activeFilter.selectedFolderId && this.activeFilter.selectedFolder) {\n      component.folderId = this.activeFilter.selectedFolderId;\n    }\n    if (this.activeFilter.selectedOrganizationId) {\n      component.organizationId = this.activeFilter.selectedOrganizationId;\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(id: string) {\n    const cipher = await this.cipherService.get(id);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = id;\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n  }\n\n  async updateKey() {\n    await this.modalService.openViewRef(UpdateKeyComponent, this.updateKeyModalRef);\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        favorites: this.activeFilter.status === \"favorites\" ? true : null,\n        type: this.activeFilter.cipherType,\n        folderId: this.activeFilter.selectedFolderId,\n        collectionId: this.activeFilter.selectedCollectionId,\n        deleted: this.activeFilter.status === \"trash\" ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { IndividualVaultComponent } from \"./individual-vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: IndividualVaultComponent,\n    data: { titleId: \"vaults\" },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class IndividualVaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { VaultModule } from \"../../vault.module\";\n\nimport { IndividualVaultRoutingModule } from \"./individual-vault-routing.module\";\nimport { IndividualVaultComponent } from \"./individual-vault.component\";\n\n@NgModule({\n  imports: [VaultModule, IndividualVaultRoutingModule],\n  declarations: [IndividualVaultComponent],\n  exports: [IndividualVaultComponent],\n})\nexport class IndividualVaultModule {}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\n\n@Injectable()\nexport class EventService {\n  constructor(private i18nService: I18nService, private policyService: PolicyService) {}\n\n  getDefaultDateFilters() {\n    const d = new Date();\n    const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\n    d.setDate(d.getDate() - 30);\n    const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\n    return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\n  }\n\n  formatDateFilters(filterStart: string, filterEnd: string) {\n    const start: Date = new Date(filterStart);\n    const end: Date = new Date(filterEnd + \":59.999\");\n    if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\n      throw new Error(\"Invalid date range.\");\n    }\n    return [start.toISOString(), end.toISOString()];\n  }\n\n  async getEventInfo(ev: EventResponse, options = new EventOptions()): Promise<EventInfo> {\n    const appInfo = this.getAppInfo(ev.deviceType);\n    const { message, humanReadableMessage } = await this.getEventMessage(ev, options);\n    return {\n      message: message,\n      humanReadableMessage: humanReadableMessage,\n      appIcon: appInfo[0],\n      appName: appInfo[1],\n    };\n  }\n\n  private async getEventMessage(ev: EventResponse, options: EventOptions) {\n    let msg = \"\";\n    let humanReadableMsg = \"\";\n    switch (ev.type) {\n      // User\n      case EventType.User_LoggedIn:\n        msg = humanReadableMsg = this.i18nService.t(\"loggedIn\");\n        break;\n      case EventType.User_ChangedPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"changedPassword\");\n        break;\n      case EventType.User_Updated2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledUpdated2fa\");\n        break;\n      case EventType.User_Disabled2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"disabled2fa\");\n        break;\n      case EventType.User_Recovered2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"recovered2fa\");\n        break;\n      case EventType.User_FailedLogIn:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin\");\n        break;\n      case EventType.User_FailedLogIn2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin2fa\");\n        break;\n      case EventType.User_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedVault\");\n        break;\n      case EventType.User_UpdatedTempPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"updatedMasterPassword\");\n        break;\n      case EventType.User_MigratedKeyToKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"migratedKeyConnector\");\n        break;\n      // Cipher\n      case EventType.Cipher_Created:\n        msg = this.i18nService.t(\"createdItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"createdItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Updated:\n        msg = this.i18nService.t(\"editedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"editedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Deleted:\n        msg = this.i18nService.t(\"permanentlyDeletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"permanentlyDeletedItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_SoftDeleted:\n        msg = this.i18nService.t(\"deletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"deletedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Restored:\n        msg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        break;\n      case EventType.Cipher_AttachmentCreated:\n        msg = this.i18nService.t(\"createdAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"createdAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_AttachmentDeleted:\n        msg = this.i18nService.t(\"deletedAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_Shared:\n        msg = this.i18nService.t(\"movedItemIdToOrg\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"movedItemIdToOrg\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientViewed:\n        msg = this.i18nService.t(\"viewedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledPasswordVisible:\n        msg = this.i18nService.t(\"viewedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledHiddenFieldVisible:\n        msg = this.i18nService.t(\"viewedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientToggledCardCodeVisible:\n        msg = this.i18nService.t(\"viewedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedHiddenField:\n        msg = this.i18nService.t(\"copiedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedPassword:\n        msg = this.i18nService.t(\"copiedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"copiedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientCopiedCardCode:\n        msg = this.i18nService.t(\"copiedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientAutofilled:\n        msg = this.i18nService.t(\"autofilledItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"autofilledItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_UpdatedCollections:\n        msg = this.i18nService.t(\"editedCollectionsForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionsForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      // Collection\n      case EventType.Collection_Created:\n        msg = this.i18nService.t(\"createdCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Updated:\n        msg = this.i18nService.t(\"editedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Deleted:\n        msg = this.i18nService.t(\"deletedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      // Group\n      case EventType.Group_Created:\n        msg = this.i18nService.t(\"createdGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"createdGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Updated:\n        msg = this.i18nService.t(\"editedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Deleted:\n        msg = this.i18nService.t(\"deletedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"deletedGroupId\", this.getShortId(ev.groupId));\n        break;\n      // Org user\n      case EventType.OrganizationUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"invitedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UpdatedGroups:\n        msg = this.i18nService.t(\"editedGroupsForUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedGroupsForUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UnlinkedSso:\n        msg = this.i18nService.t(\"unlinkedSsoUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"unlinkedSsoUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Enroll:\n        msg = this.i18nService.t(\"eventEnrollPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventEnrollPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Withdraw:\n        msg = this.i18nService.t(\"eventWithdrawPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventWithdrawPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_AdminResetPassword:\n        msg = this.i18nService.t(\"eventAdminPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventAdminPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetSsoLink:\n        msg = this.i18nService.t(\"eventResetSsoLink\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventResetSsoLink\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_FirstSsoLogin:\n        msg = this.i18nService.t(\"firstSsoLogin\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"firstSsoLogin\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      // Org\n      case EventType.Organization_Updated:\n        msg = humanReadableMsg = this.i18nService.t(\"editedOrgSettings\");\n        break;\n      case EventType.Organization_PurgedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"purgedOrganizationVault\");\n        break;\n      /*\n            case EventType.Organization_ClientExportedVault:\n                msg = this.i18nService.t('exportedOrganizationVault');\n                break;\n            */\n      case EventType.Organization_VaultAccessed:\n        msg = humanReadableMsg = this.i18nService.t(\"vaultAccessedByProvider\");\n        break;\n      case EventType.Organization_EnabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledSso\");\n        break;\n      case EventType.Organization_DisabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledSso\");\n        break;\n      case EventType.Organization_EnabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledKeyConnector\");\n        break;\n      case EventType.Organization_DisabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledKeyConnector\");\n        break;\n      case EventType.Organization_SponsorshipsSynced:\n        msg = humanReadableMsg = this.i18nService.t(\"sponsorshipsSynced\");\n        break;\n      // Policies\n      case EventType.Policy_Updated: {\n        msg = this.i18nService.t(\"modifiedPolicyId\", this.formatPolicyId(ev));\n\n        const policies = await this.policyService.getAll();\n        const policy = policies.filter((p) => p.id === ev.policyId)[0];\n        let p1 = this.getShortId(ev.policyId);\n        if (policy != null) {\n          p1 = PolicyType[policy.type];\n        }\n\n        humanReadableMsg = this.i18nService.t(\"modifiedPolicyId\", p1);\n        break;\n      }\n      // Provider users:\n      case EventType.ProviderUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"invitedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.providerUserId)\n        );\n        break;\n      case EventType.ProviderUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"removedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderOrganization_Created:\n        msg = this.i18nService.t(\"createdOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Added:\n        msg = this.i18nService.t(\"addedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"addedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Removed:\n        msg = this.i18nService.t(\"removedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_VaultAccessed:\n        msg = this.i18nService.t(\"accessedClientVault\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"accessedClientVault\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      default:\n        break;\n    }\n    return {\n      message: msg === \"\" ? null : msg,\n      humanReadableMessage: humanReadableMsg === \"\" ? null : humanReadableMsg,\n    };\n  }\n\n  private getAppInfo(deviceType: DeviceType): [string, string] {\n    switch (deviceType) {\n      case DeviceType.Android:\n        return [\"bwi-android\", this.i18nService.t(\"mobile\") + \" - Android\"];\n      case DeviceType.iOS:\n        return [\"bwi-apple\", this.i18nService.t(\"mobile\") + \" - iOS\"];\n      case DeviceType.UWP:\n        return [\"bwi-windows\", this.i18nService.t(\"mobile\") + \" - Windows\"];\n      case DeviceType.ChromeExtension:\n        return [\"bwi-chrome\", this.i18nService.t(\"extension\") + \" - Chrome\"];\n      case DeviceType.FirefoxExtension:\n        return [\"bwi-firefox\", this.i18nService.t(\"extension\") + \" - Firefox\"];\n      case DeviceType.OperaExtension:\n        return [\"bwi-opera\", this.i18nService.t(\"extension\") + \" - Opera\"];\n      case DeviceType.EdgeExtension:\n        return [\"bwi-edge\", this.i18nService.t(\"extension\") + \" - Edge\"];\n      case DeviceType.VivaldiExtension:\n        return [\"bwi-puzzle\", this.i18nService.t(\"extension\") + \" - Vivaldi\"];\n      case DeviceType.SafariExtension:\n        return [\"bwi-safari\", this.i18nService.t(\"extension\") + \" - Safari\"];\n      case DeviceType.WindowsDesktop:\n        return [\"bwi-windows\", this.i18nService.t(\"desktop\") + \" - Windows\"];\n      case DeviceType.MacOsDesktop:\n        return [\"bwi-apple\", this.i18nService.t(\"desktop\") + \" - macOS\"];\n      case DeviceType.LinuxDesktop:\n        return [\"bwi-linux\", this.i18nService.t(\"desktop\") + \" - Linux\"];\n      case DeviceType.ChromeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Chrome\"];\n      case DeviceType.FirefoxBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Firefox\"];\n      case DeviceType.OperaBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Opera\"];\n      case DeviceType.SafariBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Safari\"];\n      case DeviceType.VivaldiBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Vivaldi\"];\n      case DeviceType.EdgeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Edge\"];\n      case DeviceType.IEBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - IE\"];\n      case DeviceType.UnknownBrowser:\n        return [\n          \"bwi-globe\",\n          this.i18nService.t(\"webVault\") + \" - \" + this.i18nService.t(\"unknown\"),\n        ];\n      default:\n        return [\"bwi-globe\", this.i18nService.t(\"unknown\")];\n    }\n  }\n\n  private formatCipherId(ev: EventResponse, options: EventOptions) {\n    const shortId = this.getShortId(ev.cipherId);\n    if (ev.organizationId == null || !options.cipherInfo) {\n      return \"<code>\" + shortId + \"</code>\";\n    }\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/vault?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.cipherId\n    );\n    return a.outerHTML;\n  }\n\n  private formatGroupId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.groupId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/groups?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatCollectionId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.collectionId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/collections?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatOrgUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.organizationUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.organizationUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/providers/\" +\n        ev.providerId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.providerUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderOrganizationId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerOrganizationId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\"href\", \"#/providers/\" + ev.providerId + \"/clients?search=\" + shortId);\n    return a.outerHTML;\n  }\n\n  private formatPolicyId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.policyId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/policies?policyId=\" + ev.policyId\n    );\n    return a.outerHTML;\n  }\n\n  private makeAnchor(shortId: string) {\n    const a = document.createElement(\"a\");\n    a.title = this.i18nService.t(\"view\");\n    a.innerHTML = \"<code>\" + shortId + \"</code>\";\n    return a;\n  }\n\n  private getShortId(id: string) {\n    return id?.substring(0, 8);\n  }\n\n  private toDateTimeLocalString(date: Date) {\n    return (\n      date.getFullYear() +\n      \"-\" +\n      this.pad(date.getMonth() + 1) +\n      \"-\" +\n      this.pad(date.getDate()) +\n      \"T\" +\n      this.pad(date.getHours()) +\n      \":\" +\n      this.pad(date.getMinutes())\n    );\n  }\n\n  private pad(num: number) {\n    const norm = Math.floor(Math.abs(num));\n    return (norm < 10 ? \"0\" : \"\") + norm;\n  }\n}\n\nexport class EventInfo {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n}\n\nexport class EventOptions {\n  cipherInfo = true;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"eventLogsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"eventLogsTitle\">\n          {{ \"eventLogs\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loaded\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loaded\">\n        <div class=\"d-flex\">\n          <div class=\"form-inline\">\n            <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"start\"\n              placeholder=\"{{ 'startDate' | i18n }}\"\n              [(ngModel)]=\"start\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n            <span class=\"mx-2\">-</span>\n            <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"end\"\n              placeholder=\"{{ 'endDate' | i18n }}\"\n              [(ngModel)]=\"end\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n          </div>\n          <button\n            #refreshBtn\n            [appApiAction]=\"refreshPromise\"\n            type=\"button\"\n            class=\"btn btn-sm btn-outline-primary ml-3\"\n            (click)=\"loadEvents(true)\"\n            [disabled]=\"loaded && refreshBtn.loading\"\n          >\n            <i\n              class=\"bwi bwi-refresh bwi-fw\"\n              [ngClass]=\"{ 'bwi-spin': loaded && refreshBtn.loading }\"\n              aria-hidden=\"true\"\n            ></i>\n            {{ \"refresh\" | i18n }}\n          </button>\n        </div>\n        <hr />\n        <div *ngIf=\"!events || !events.length\">\n          {{ \"noEventsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover mb-0\" *ngIf=\"events && events.length\">\n          <thead>\n            <tr>\n              <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n              <th class=\"border-top-0\" width=\"40\">\n                <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n              </th>\n              <th class=\"border-top-0\" width=\"150\" *ngIf=\"showUser\">{{ \"user\" | i18n }}</th>\n              <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let e of events\">\n              <td>{{ e.date | date: \"medium\" }}</td>\n              <td>\n                <i\n                  class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n                  title=\"{{ e.appName }}, {{ e.ip }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n              </td>\n              <td *ngIf=\"showUser\">\n                <span appA11yTitle=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n              </td>\n              <td [innerHTML]=\"e.message\"></td>\n            </tr>\n          </tbody>\n        </table>\n        <button\n          #moreBtn\n          [appApiAction]=\"morePromise\"\n          type=\"button\"\n          class=\"btn btn-block btn-link btn-submit\"\n          (click)=\"loadEvents(false)\"\n          [disabled]=\"loaded && moreBtn.loading\"\n          *ngIf=\"continuationToken\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"loadMore\" | i18n }}</span>\n        </button>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\n\nimport { EventService } from \"../../services/event.service\";\n\n@Component({\n  selector: \"app-entity-events\",\n  templateUrl: \"entity-events.component.html\",\n})\nexport class EntityEventsComponent implements OnInit {\n  @Input() name: string;\n  @Input() entity: \"user\" | \"cipher\";\n  @Input() entityId: string;\n  @Input() organizationId: string;\n  @Input() providerId: string;\n  @Input() showUser = false;\n\n  loading = true;\n  loaded = false;\n  events: any[];\n  start: string;\n  end: string;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n  private orgUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private eventService: EventService,\n    private platformUtilsService: PlatformUtilsService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n    await this.load();\n  }\n\n  async load() {\n    if (this.showUser) {\n      const response = await this.apiService.getOrganizationUsers(this.organizationId);\n      response.data.forEach((u) => {\n        const name = this.userNamePipe.transform(u);\n        this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n        this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n      });\n    }\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.refreshPromise != null || this.morePromise != null) {\n      return;\n    }\n\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return;\n    }\n\n    this.loading = true;\n    let response: ListResponse<EventResponse>;\n    try {\n      let promise: Promise<any>;\n      if (this.entity === \"user\" && this.providerId) {\n        promise = this.apiService.getEventsProviderUser(\n          this.providerId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else if (this.entity === \"user\") {\n        promise = this.apiService.getEventsOrganizationUser(\n          this.organizationId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else {\n        promise = this.apiService.getEventsCipher(\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      }\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      response = await promise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.continuationToken = response.continuationToken;\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user =\n          this.showUser && userId != null && this.orgUsersUserIdMap.has(userId)\n            ? this.orgUsersUserIdMap.get(userId)\n            : null;\n        return {\n          message: eventInfo.message,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: user != null ? user.name : this.showUser ? this.i18nService.t(\"unknown\") : null,\n          userEmail: user != null ? user.email : this.showUser ? \"\" : null,\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n        };\n      })\n    );\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherCreateRequest } from \"@bitwarden/common/models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"@bitwarden/common/models/request/cipherRequest\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../../vault/add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  organization: Organization;\n  originalCipher: Cipher = null;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    private apiService: ApiService,\n    messagingService: MessagingService,\n    eventService: EventService,\n    policyService: PolicyService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  protected allowOwnershipAssignment() {\n    if (\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    ) {\n      if (this.organization != null) {\n        return this.cloneMode && this.organization.canEditAnyCollection;\n      } else {\n        return !this.editMode || this.cloneMode;\n      }\n    }\n    return false;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    const data = new CipherData(response);\n    this.originalCipher = new Cipher(data);\n    return new Cipher(data);\n  }\n\n  protected encryptCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.encryptCipher();\n    }\n    return this.cipherService.encrypt(this.cipher, null, this.originalCipher);\n  }\n\n  protected async saveCipher(cipher: Cipher) {\n    if (!this.organization.canEditAnyCollection || cipher.organizationId == null) {\n      return super.saveCipher(cipher);\n    }\n    if (this.editMode && !this.cloneMode) {\n      const request = new CipherRequest(cipher);\n      return this.apiService.putCipherAdmin(this.cipherId, request);\n    } else {\n      const request = new CipherCreateRequest(cipher);\n      return this.apiService.postCipherAdmin(request);\n    }\n  }\n\n  protected async deleteCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher();\n    }\n    return this.cipher.isDeleted\n      ? this.apiService.deleteCipherAdmin(this.cipherId)\n      : this.apiService.putDeleteCipherAdmin(this.cipherId);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"../../vault/attachments.component\";\n\n@Component({\n  selector: \"app-org-vault-attachments\",\n  templateUrl: \"../../vault/attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n  organization: Organization;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      stateService,\n      platformUtilsService,\n      apiService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.organization.canEditAnyCollection && this.showFixOldAttachments(attachment)) {\n      await super.reuploadCipherAttachment(attachment, true);\n    }\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(\n      this.cipherDomain,\n      file,\n      this.organization.canEditAnyCollection\n    );\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipherAttachment(attachmentId);\n    }\n    return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.organization.canEditAnyCollection;\n  }\n}\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"../../vault/ciphers.component\";\n\n@Component({\n  selector: \"app-org-vault-ciphers\",\n  templateUrl: \"../../vault/ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent {\n  @Output() onEventsClicked = new EventEmitter<CipherView>();\n\n  organization: Organization;\n  accessEvents = false;\n\n  protected allCiphers: CipherView[] = [];\n\n  constructor(\n    searchService: SearchService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cipherService: CipherService,\n    eventService: EventService,\n    totpService: TotpService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService,\n    stateService: StateService,\n    organizationService: OrganizationService,\n    tokenService: TokenService,\n    private apiService: ApiService\n  ) {\n    super(\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cipherService,\n      eventService,\n      totpService,\n      stateService,\n      passwordRepromptService,\n      logService,\n      organizationService,\n      tokenService\n    );\n  }\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    if (this.organization.canEditAnyCollection) {\n      this.accessEvents = this.organization.useEvents;\n      this.allCiphers = await this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    } else {\n      this.allCiphers = (await this.cipherService.getAllDecrypted()).filter(\n        (c) => c.organizationId === this.organization.id\n      );\n    }\n    await this.searchService.indexCiphers(this.organization.id, this.allCiphers);\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    if (this.organization.canViewAllCollections) {\n      await super.applyFilter(filter);\n    } else {\n      const f = (c: CipherView) =>\n        c.organizationId === this.organization.id && (filter == null || filter(c));\n      await super.applyFilter(f);\n    }\n  }\n\n  async search(timeout: number = null) {\n    await super.search(timeout, this.allCiphers);\n  }\n  events(c: CipherView) {\n    this.onEventsClicked.emit(c);\n  }\n\n  protected deleteCipher(id: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher(id, this.deleted);\n    }\n    return this.deleted\n      ? this.apiService.deleteCipherAdmin(id)\n      : this.apiService.putDeleteCipherAdmin(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return this.organization.canEditAnyCollection && c.hasOldAttachments;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherCollectionsRequest } from \"@bitwarden/common/models/request/cipherCollectionsRequest\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"../../vault/collections.component\";\n\n@Component({\n  selector: \"app-org-vault-collections\",\n  templateUrl: \"../../vault/collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  organization: Organization;\n\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private apiService: ApiService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n    this.allowSelectNone = true;\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canViewAllCollections) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected loadCipherCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCipherCollections();\n    }\n    return this.collectionIds;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected saveCollections() {\n    if (this.organization.canEditAnyCollection) {\n      const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\n      return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\n    } else {\n      return super.saveCollections();\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { VaultFilterComponent } from \"./vault-filter.component\";\n\n@Component({\n  selector: \"app-organization-vault-filter\",\n  templateUrl: \"vault-filter.component.html\",\n})\nexport class OrganizationVaultFilterComponent extends VaultFilterComponent {\n  hideOrganizations = true;\n  hideFavorites = true;\n  hideFolders = true;\n\n  organization: Organization;\n\n  async initCollections() {\n    if (this.organization.canEditAnyCollection) {\n      return await this.vaultFilterService.buildAdminCollections(this.organization.id);\n    }\n    return await this.vaultFilterService.buildCollections(this.organization.id);\n  }\n\n  async reloadCollectionsAndFolders() {\n    this.collections = await this.initCollections();\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-organization-vault-filter\n              #vaultFilter\n              [activeFilter]=\"activeFilter\"\n              (onFilterChange)=\"applyVaultFilter($event)\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n            ></app-organization-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"vaultItems\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions\n            [ciphersComponent]=\"ciphersComponent\"\n            [deleted]=\"deleted\"\n            [organization]=\"organization\"\n          >\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm ml-auto\"\n            (click)=\"addCipher()\"\n            *ngIf=\"!deleted\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"bwi bwi-exclamation-triangle\">\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-org-vault-ciphers\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onEventsClicked)=\"viewEvents($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n      >\n      </app-org-vault-ciphers>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #eventsTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { VaultFilter } from \"@bitwarden/angular/modules/vault-filter/models/vault-filter.model\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { EntityEventsComponent } from \"../../../../organizations/manage/entity-events.component\";\nimport { AddEditComponent } from \"../../../../organizations/vault/add-edit.component\";\nimport { AttachmentsComponent } from \"../../../../organizations/vault/attachments.component\";\nimport { CiphersComponent } from \"../../../../organizations/vault/ciphers.component\";\nimport { CollectionsComponent } from \"../../../../organizations/vault/collections.component\";\nimport { OrganizationVaultFilterComponent } from \"../../../vault-filter/organization-vault-filter.component\";\nimport { VaultService } from \"../../vault.service\";\n\nconst BroadcasterSubscriptionId = \"OrgVaultComponent\";\n\n@Component({\n  selector: \"app-org-vault\",\n  templateUrl: \"organization-vault.component.html\",\n})\nexport class OrganizationVaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true })\n  vaultFilterComponent: OrganizationVaultFilterComponent;\n  @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n\n  organization: Organization;\n  collectionId: string = null;\n  type: CipherType = null;\n  trashCleanupWarning: string = null;\n  activeFilter: VaultFilter = new VaultFilter();\n\n  // This is a hack to avoid redundant api calls that fetch OrganizationVaultFilterComponent collections\n  // When it makes sense to do so we should leverage some other communication method for change events that isn't directly tied to the query param for organizationId\n  // i.e. exposing the VaultFiltersService to the OrganizationSwitcherComponent to make relevant updates from a change event instead of just depending on the router\n  firstLoaded = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private messagingService: MessagingService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultService: VaultService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  ngOnInit() {\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n    this.route.parent.params.subscribe(async (params: any) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.vaultFilterComponent.organization = this.organization;\n      this.ciphersComponent.organization = this.organization;\n\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.ciphersComponent.searchText = this.vaultFilterComponent.searchText = qParams.search;\n        if (!this.organization.canViewAllCollections) {\n          await this.syncService.fullSync(false);\n          this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n            this.ngZone.run(async () => {\n              switch (message.command) {\n                case \"syncCompleted\":\n                  if (message.successfully) {\n                    await Promise.all([\n                      this.vaultFilterComponent.reloadCollectionsAndFolders(),\n                      this.ciphersComponent.refresh(),\n                    ]);\n                    this.changeDetectorRef.detectChanges();\n                  }\n                  break;\n              }\n            });\n          });\n        }\n\n        if (this.firstLoaded) {\n          await this.vaultFilterComponent.reloadCollectionsAndFolders();\n        }\n        this.firstLoaded = true;\n\n        await this.ciphersComponent.reload();\n\n        if (qParams.viewEvents != null) {\n          const cipher = this.ciphersComponent.ciphers.filter((c) => c.id === qParams.viewEvents);\n          if (cipher.length > 0) {\n            this.viewEvents(cipher[0]);\n          }\n        }\n\n        this.route.queryParams.subscribe(async (params) => {\n          const cipherId = getCipherIdFromParams(params);\n          if (cipherId) {\n            if (\n              // Handle users with implicit collection access since they use the admin endpoint\n              this.organization.canEditAnyCollection ||\n              (await this.cipherService.get(cipherId)) != null\n            ) {\n              this.editCipherId(cipherId);\n            } else {\n              this.platformUtilsService.showToast(\n                \"error\",\n                this.i18nService.t(\"errorOccurred\"),\n                this.i18nService.t(\"unknownCipher\")\n              );\n              this.router.navigate([], {\n                queryParams: { cipherId: null, itemId: null },\n                queryParamsHandling: \"merge\",\n              });\n            }\n          }\n        });\n      });\n    });\n  }\n\n  get deleted(): boolean {\n    return this.activeFilter.status === \"trash\";\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async applyVaultFilter(vaultFilter: VaultFilter) {\n    this.ciphersComponent.showAddNew = vaultFilter.status !== \"trash\";\n    this.activeFilter = vaultFilter;\n    await this.ciphersComponent.reload(\n      this.activeFilter.buildFilter(),\n      vaultFilter.status === \"trash\"\n    );\n    this.vaultFilterComponent.searchPlaceholder =\n      this.vaultService.calculateSearchBarLocalizationString(this.activeFilter);\n    this.go();\n  }\n\n  filterSearchText(searchText: string) {\n    this.ciphersComponent.searchText = searchText;\n    this.ciphersComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\n      this.messagingService.send(\"upgradeOrganization\", { organizationId: cipher.organizationId });\n      return;\n    }\n\n    let madeAttachmentChanges = false;\n\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.ciphersComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        if (this.organization.canEditAnyCollection) {\n          comp.collectionIds = cipher.collectionIds;\n          comp.collections = this.vaultFilterComponent.collections.fullList.filter(\n            (c) => !c.readOnly\n          );\n        }\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.organizationId = this.organization.id;\n    component.type = this.type;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.vaultFilterComponent.collections.fullList.filter(\n        (c) => !c.readOnly\n      );\n    }\n    if (this.collectionId != null) {\n      component.collectionIds = [this.collectionId];\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(cipherId: string) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipherId;\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n    component.organizationId = this.organization.id;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.vaultFilterComponent.collections.fullList.filter(\n        (c) => !c.readOnly\n      );\n    }\n    // Regardless of Admin state, the collection Ids need to passed manually as they are not assigned value\n    // in the add-edit componenet\n    component.collectionIds = cipher.collectionIds;\n  }\n\n  async viewEvents(cipher: CipherView) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = cipher.name;\n      comp.organizationId = this.organization.id;\n      comp.entityId = cipher.id;\n      comp.showUser = true;\n      comp.entity = \"cipher\";\n    });\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        type: this.activeFilter.cipherType,\n        collectionId: this.activeFilter.selectedCollectionId,\n        deleted: this.deleted ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { OrganizationVaultComponent } from \"./organization-vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: OrganizationVaultComponent,\n    data: { titleId: \"vaults\" },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationVaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { VaultModule } from \"../../vault.module\";\n\nimport { OrganizationVaultRoutingModule } from \"./organization-vault-routing.module\";\nimport { OrganizationVaultComponent } from \"./organization-vault.component\";\n\n@NgModule({\n  imports: [VaultModule, OrganizationVaultRoutingModule],\n  declarations: [OrganizationVaultComponent],\n  exports: [OrganizationVaultComponent],\n})\nexport class OrganizationVaultModule {}\n","<div *ngIf=\"loaded && activeOrganization != null\" class=\"tw-flex\">\n  <button\n    class=\"tw-flex tw-items-center tw-bg-background-alt tw-border-none\"\n    type=\"button\"\n    id=\"pickerButton\"\n    [appA11yTitle]=\"'organizationPicker' | i18n\"\n    [bitMenuTriggerFor]=\"orgPickerMenu\"\n  >\n    <app-avatar\n      [data]=\"activeOrganization.name\"\n      size=\"45\"\n      [circle]=\"true\"\n      [dynamic]=\"true\"\n    ></app-avatar>\n    <div class=\"tw-flex\">\n      <div class=\"org-name tw-ml-3\">\n        <span>{{ activeOrganization.name }}</span>\n        <small class=\"tw-text-muted\">{{ \"organization\" | i18n }}</small>\n      </div>\n      <div class=\"tw-ml-3\">\n        <i class=\"bwi bwi-angle-down tw-text-main\" aria-hidden=\"true\"></i>\n      </div>\n    </div>\n  </button>\n  <div>\n    <div\n      class=\"tw-ml-3 tw-border tw-border-solid tw-rounded tw-border-danger-500 tw-text-danger\"\n      *ngIf=\"!activeOrganization.enabled\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"organizationIsDisabled\" | i18n }}\n      </div>\n    </div>\n    <div\n      class=\"tw-ml-3 tw-border tw-border-solid tw-rounded tw-border-info-500 tw-text-info\"\n      *ngIf=\"activeOrganization.isProviderUser\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"accessingUsingProvider\" | i18n: activeOrganization.providerName }}\n      </div>\n    </div>\n  </div>\n\n  <bit-menu #orgPickerMenu>\n    <ul aria-labelledby=\"pickerButton\" class=\"tw-p-0 tw-m-0\">\n      <li *ngFor=\"let org of organizations\" class=\"tw-list-none tw-flex tw-flex-col\" role=\"none\">\n        <a bitMenuItem [routerLink]=\"['/organizations', org.id]\">\n          <i\n            class=\"bwi bwi-check mr-2\"\n            [ngClass]=\"org.id === activeOrganization.id ? 'visible' : 'invisible'\"\n          >\n            <span class=\"tw-sr-only\">{{ \"currentOrganization\" | i18n }}</span>\n          </i>\n          {{ org.name }}\n        </a>\n      </li>\n      <bit-menu-divider></bit-menu-divider>\n      <li class=\"tw-list-none\" role=\"none\">\n        <a bitMenuItem routerLink=\"/create-organization\">\n          <i class=\"bwi bwi-plus mr-2\"></i>\n          {{ \"newOrganization\" | i18n }}</a\n        >\n      </li>\n    </ul>\n  </bit-menu>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { NavigationPermissionsService } from \"../organizations/services/navigation-permissions.service\";\n\n@Component({\n  selector: \"app-organization-switcher\",\n  templateUrl: \"organization-switcher.component.html\",\n})\nexport class OrganizationSwitcherComponent implements OnInit {\n  constructor(private organizationService: OrganizationService, private i18nService: I18nService) {}\n\n  @Input() activeOrganization: Organization = null;\n  organizations: Organization[] = [];\n\n  loaded = false;\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    const orgs = await this.organizationService.getAll();\n    this.organizations = orgs\n      .filter((org) => NavigationPermissionsService.canAccessAdmin(org))\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    this.loaded = true;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"organization\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <app-organization-switcher\n        class=\"my-auto pl-1\"\n        [activeOrganization]=\"organization\"\n      ></app-organization-switcher>\n      <ul class=\"nav nav-tabs\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"vault\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-lock\" aria-hidden=\"true\"></i>\n            {{ \"vault\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showManageTab\">\n          <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-sliders\" aria-hidden=\"true\"></i>\n            {{ \"manage\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showToolsTab\">\n          <a class=\"nav-link\" [routerLink]=\"toolsRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-wrench\" aria-hidden=\"true\"></i>\n            {{ \"tools\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showSettingsTab\">\n          <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-cogs\" aria-hidden=\"true\"></i>\n            {{ \"settings\" | i18n }}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { NavigationPermissionsService } from \"../services/navigation-permissions.service\";\n\nconst BroadcasterSubscriptionId = \"OrganizationLayoutComponent\";\n\n@Component({\n  selector: \"app-organization-layout\",\n  templateUrl: \"organization-layout.component.html\",\n})\nexport class OrganizationLayoutComponent implements OnInit, OnDestroy {\n  organization: Organization;\n  businessTokenPromise: Promise<any>;\n  private organizationId: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone\n  ) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.params.subscribe(async (params: any) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"updatedOrgLicense\":\n            await this.load();\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n  }\n\n  get showManageTab(): boolean {\n    return NavigationPermissionsService.canAccessManage(this.organization);\n  }\n\n  get showToolsTab(): boolean {\n    return NavigationPermissionsService.canAccessTools(this.organization);\n  }\n\n  get showSettingsTab(): boolean {\n    return NavigationPermissionsService.canAccessSettings(this.organization);\n  }\n\n  get toolsRoute(): string {\n    return this.organization.canAccessImportExport\n      ? \"tools/import\"\n      : \"tools/exposed-passwords-report\";\n  }\n\n  get manageRoute(): string {\n    let route: string;\n    switch (true) {\n      case this.organization.canManageUsers:\n        route = \"manage/people\";\n        break;\n      case this.organization.canViewAssignedCollections || this.organization.canViewAllCollections:\n        route = \"manage/collections\";\n        break;\n      case this.organization.canManageGroups:\n        route = \"manage/groups\";\n        break;\n      case this.organization.canManagePolicies:\n        route = \"manage/policies\";\n        break;\n      case this.organization.canManageSso:\n        route = \"manage/sso\";\n        break;\n      case this.organization.canAccessEventLogs:\n        route = \"manage/events\";\n        break;\n    }\n    return route;\n  }\n}\n","export class SelectionReadOnlyRequest {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\n    this.id = id;\n    this.readOnly = readOnly;\n    this.hidePasswords = hidePasswords;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAccessTitle\">\n          {{ \"userAccess\" | i18n }}\n          <small>{{ entityName }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading || !users\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <cdk-virtual-scroll-viewport\n        itemSize=\"46\"\n        minBufferPx=\"600\"\n        maxBufferPx=\"1200\"\n        [style]=\"scrollViewportStyle\"\n      >\n        <div class=\"modal-body\" *ngIf=\"!loading && users && searchedUsers\">\n          <div class=\"d-flex\">\n            <div class=\"mr-3\">\n              <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n              <input\n                type=\"search\"\n                class=\"form-control form-control-sm\"\n                id=\"search\"\n                placeholder=\"{{ 'search' | i18n }}\"\n                name=\"SearchText\"\n                [(ngModel)]=\"searchText\"\n              />\n            </div>\n            <div class=\"btn-group btn-group-sm\" role=\"group\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: !showSelected }\"\n                (click)=\"filterSelected(false)\"\n              >\n                {{ \"all\" | i18n }}\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: showSelected }\"\n                (click)=\"filterSelected(true)\"\n              >\n                {{ \"selected\" | i18n }}\n                <span bitBadge badgeType=\"info\" *ngIf=\"selectedCount\">{{ selectedCount }}</span>\n              </button>\n            </div>\n          </div>\n          <ng-container *ngIf=\"!searchedUsers.length\">\n            <hr />\n            {{ \"noUsersInList\" | i18n }}\n          </ng-container>\n          <table class=\"table table-hover table-list mb-0\" [hidden]=\"!searchedUsers.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th *ngIf=\"entity === 'collection'\">&nbsp;</th>\n                <th>{{ \"userType\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"hidePasswords\" | i18n }}\n                </th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"readOnly\" | i18n }}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *cdkVirtualFor=\"let u of searchedUsers\" class=\"\">\n                <td class=\"table-list-checkbox\" (click)=\"check(u)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.checked\"\n                    name=\"{{ u.id.substr(0, 8) }}_Checked\"\n                    [disabled]=\"entity === 'collection' && u.accessAll\"\n                    (change)=\"selectedChanged(u)\"\n                    appStopProp\n                  />\n                </td>\n                <td width=\"30\" (click)=\"check(u)\">\n                  <app-avatar\n                    [data]=\"u | userName\"\n                    [email]=\"u.email\"\n                    size=\"25\"\n                    [circle]=\"true\"\n                    [fontSize]=\"14\"\n                  >\n                  </app-avatar>\n                </td>\n                <td>\n                  {{ u.email }}\n                  <span\n                    bitBadge\n                    badgeType=\"secondary\"\n                    *ngIf=\"u.status === organizationUserStatusType.Invited\"\n                    >{{ \"invited\" | i18n }}</span\n                  >\n                  <span\n                    bitBadge\n                    badgeType=\"warning\"\n                    *ngIf=\"u.status === organizationUserStatusType.Accepted\"\n                    >{{ \"accepted\" | i18n }}</span\n                  >\n                  <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n                </td>\n                <td *ngIf=\"entity === 'collection'\">\n                  <ng-container *ngIf=\"u.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter\"\n                      title=\"{{ 'userAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"userAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td>\n                  <span *ngIf=\"u.type === organizationUserType.Owner\">{{ \"owner\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Admin\">{{ \"admin\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Manager\">{{\n                    \"manager\" | i18n\n                  }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.User\">{{ \"user\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Custom\">{{ \"custom\" | i18n }}</span>\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.hidePasswords\"\n                    name=\"{{ u.id.substr(0, 8) }}_HidePasswords\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.readOnly\"\n                    name=\"{{ u.id.substr(0, 8) }}_ReadOnly\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </cdk-virtual-scroll-viewport>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/models/response/organizationUserResponse\";\n\n@Component({\n  selector: \"app-entity-users\",\n  templateUrl: \"entity-users.component.html\",\n  providers: [SearchPipe],\n})\nexport class EntityUsersComponent implements OnInit {\n  @Input() entity: \"group\" | \"collection\";\n  @Input() entityId: string;\n  @Input() entityName: string;\n  @Input() organizationId: string;\n  @Output() onEditedUsers = new EventEmitter();\n\n  organizationUserType = OrganizationUserType;\n  organizationUserStatusType = OrganizationUserStatusType;\n\n  showSelected = false;\n  loading = true;\n  formPromise: Promise<any>;\n  selectedCount = 0;\n  searchText: string;\n\n  private allUsers: OrganizationUserUserDetailsResponse[] = [];\n\n  constructor(\n    private search: SearchPipe,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadUsers();\n    this.loading = false;\n  }\n\n  get users() {\n    if (this.showSelected) {\n      return this.allUsers.filter((u) => (u as any).checked);\n    } else {\n      return this.allUsers;\n    }\n  }\n\n  get searchedUsers() {\n    return this.search.transform(this.users, this.searchText, \"name\", \"email\", \"id\");\n  }\n\n  get scrollViewportStyle() {\n    return `min-height: 120px; height: ${120 + this.searchedUsers.length * 46}px`;\n  }\n\n  async loadUsers() {\n    const users = await this.apiService.getOrganizationUsers(this.organizationId);\n    this.allUsers = users.data.map((r) => r).sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    if (this.entity === \"group\") {\n      const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => u.id === s);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n          }\n        });\n      }\n    } else if (this.entity === \"collection\") {\n      const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => !u.accessAll && u.id === s.id);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n            (user[0] as any).readOnly = s.readOnly;\n            (user[0] as any).hidePasswords = s.hidePasswords;\n          }\n        });\n      }\n    }\n\n    this.allUsers.forEach((u) => {\n      if (this.entity === \"collection\" && u.accessAll) {\n        (u as any).checked = true;\n      }\n      if ((u as any).checked) {\n        this.selectedCount++;\n      }\n    });\n  }\n\n  check(u: OrganizationUserUserDetailsResponse) {\n    if (this.entity === \"collection\" && u.accessAll) {\n      return;\n    }\n    (u as any).checked = !(u as any).checked;\n    this.selectedChanged(u);\n  }\n\n  selectedChanged(u: OrganizationUserUserDetailsResponse) {\n    if ((u as any).checked) {\n      this.selectedCount++;\n    } else {\n      if (this.entity === \"collection\") {\n        (u as any).readOnly = false;\n        (u as any).hidePasswords = false;\n      }\n      this.selectedCount--;\n    }\n  }\n\n  filterSelected(showSelected: boolean) {\n    this.showSelected = showSelected;\n  }\n\n  async submit() {\n    try {\n      if (this.entity === \"group\") {\n        const selections = this.users.filter((u) => (u as any).checked).map((u) => u.id);\n        this.formPromise = this.apiService.putGroupUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      } else {\n        const selections = this.users\n          .filter((u) => (u as any).checked && !u.accessAll)\n          .map(\n            (u) =>\n              new SelectionReadOnlyRequest(u.id, !!(u as any).readOnly, !!(u as any).hidePasswords)\n          );\n        this.formPromise = this.apiService.putCollectionUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedUsers\"));\n      this.onEditedUsers.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"collectionAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n            appAutofocus\n            [disabled]=\"!this.canSave\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n            [disabled]=\"!this.canSave\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <ng-container *ngIf=\"accessGroups\">\n          <h3 class=\"mt-4 d-flex mb-0\">\n            {{ \"groupAccess\" | i18n }}\n            <div class=\"ml-auto\" *ngIf=\"groups && groups.length && this.canSave\">\n              <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"selectAll\" | i18n }}\n              </button>\n              <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"unselectAll\" | i18n }}\n              </button>\n            </div>\n          </h3>\n          <div *ngIf=\"!groups || !groups.length\">\n            {{ \"noGroupsInList\" | i18n }}\n          </div>\n          <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let g of groups; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.checked\"\n                    name=\"Groups[{{ i }}].Checked\"\n                    [disabled]=\"g.accessAll || !this.canSave\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(g)\">\n                  {{ g.name }}\n                  <ng-container *ngIf=\"g.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter text-muted bwi-fw\"\n                      title=\"{{ 'groupAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"groupAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.hidePasswords\"\n                    name=\"Groups[{{ i }}].HidePasswords\"\n                    [disabled]=\"!g.checked || g.accessAll || !this.canSave\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.readOnly\"\n                    name=\"Groups[{{ i }}].ReadOnly\"\n                    [disabled]=\"!g.checked || g.accessAll || !this.canSave\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"this.canSave\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"this.canDelete\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { CollectionRequest } from \"@bitwarden/common/models/request/collectionRequest\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/groupResponse\";\n\n@Component({\n  selector: \"app-collection-add-edit\",\n  templateUrl: \"collection-add-edit.component.html\",\n})\nexport class CollectionAddEditComponent implements OnInit {\n  @Input() collectionId: string;\n  @Input() organizationId: string;\n  @Input() canSave: boolean;\n  @Input() canDelete: boolean;\n  @Output() onSavedCollection = new EventEmitter();\n  @Output() onDeletedCollection = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  accessGroups = false;\n  title: string;\n  name: string;\n  externalId: string;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  private orgKey: SymmetricCryptoKey;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    const organization = await this.organizationService.get(this.organizationId);\n    this.accessGroups = organization.useGroups;\n    this.editMode = this.loading = this.collectionId != null;\n    if (this.accessGroups) {\n      const groupsResponse = await this.apiService.getGroups(this.organizationId);\n      this.groups = groupsResponse.data\n        .map((r) => r)\n        .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    }\n    this.orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editCollection\");\n      try {\n        const collection = await this.apiService.getCollectionDetails(\n          this.organizationId,\n          this.collectionId\n        );\n        this.name = await this.cryptoService.decryptToUtf8(\n          new EncString(collection.name),\n          this.orgKey\n        );\n        this.externalId = collection.externalId;\n        if (collection.groups != null && this.groups.length > 0) {\n          collection.groups.forEach((s) => {\n            const group = this.groups.filter((g) => !g.accessAll && g.id === s.id);\n            if (group != null && group.length > 0) {\n              (group[0] as any).checked = true;\n              (group[0] as any).readOnly = s.readOnly;\n              (group[0] as any).hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addCollection\");\n    }\n\n    this.groups.forEach((g) => {\n      if (g.accessAll) {\n        (g as any).checked = true;\n      }\n    });\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    if (g.accessAll) {\n      return;\n    }\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n      (g as any).hidePasswords = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    if (this.orgKey == null) {\n      throw new Error(\"No encryption key for this organization.\");\n    }\n\n    const request = new CollectionRequest();\n    request.name = (await this.cryptoService.encrypt(this.name, this.orgKey)).encryptedString;\n    request.externalId = this.externalId;\n    request.groups = this.groups\n      .filter((g) => (g as any).checked && !g.accessAll)\n      .map(\n        (g) => new SelectionReadOnlyRequest(g.id, !!(g as any).readOnly, !!(g as any).hidePasswords)\n      );\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putCollection(\n          this.organizationId,\n          this.collectionId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.postCollection(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedCollectionId\" : \"createdCollectionId\", this.name)\n      );\n      this.onSavedCollection.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteCollection(this.organizationId, this.collectionId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", this.name)\n      );\n      this.onDeletedCollection.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"collections\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button\n      type=\"button\"\n      *ngIf=\"this.canCreate\"\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"add()\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newCollection\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging()\n      ? pagedCollections\n      : (collections | search: searchText:'name':'id')) as searchedCollections\n  \"\n>\n  <p *ngIf=\"!searchedCollections.length\">{{ \"noCollectionsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedCollections.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of searchedCollections\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown *ngIf=\"this.canEdit(c) || this.canDelete(c)\">\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canEdit(c)\"\n                (click)=\"users(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item text-danger\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canDelete(c)\"\n                (click)=\"delete(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport {\n  CollectionDetailsResponse,\n  CollectionResponse,\n} from \"@bitwarden/common/models/response/collectionResponse\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\nimport { EntityUsersComponent } from \"../../modules/organizations/manage/entity-users.component\";\n\nimport { CollectionAddEditComponent } from \"./collection-add-edit.component\";\n\n@Component({\n  selector: \"app-org-manage-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organization: Organization;\n  canCreate = false;\n  organizationId: string;\n  collections: CollectionView[];\n  assignedCollections: CollectionView[];\n  pagedCollections: CollectionView[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedCollectionsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private collectionService: CollectionService,\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    this.canCreate = this.organization.canCreateNewCollections;\n\n    const decryptCollections = async (r: ListResponse<CollectionResponse>) => {\n      const collections = r.data\n        .filter((c) => c.organizationId === this.organizationId)\n        .map((d) => new Collection(new CollectionData(d as CollectionDetailsResponse)));\n      return await this.collectionService.decryptMany(collections);\n    };\n\n    if (this.organization.canViewAssignedCollections) {\n      const response = await this.apiService.getUserCollections();\n      this.assignedCollections = await decryptCollections(response);\n    }\n\n    if (this.organization.canViewAllCollections) {\n      const response = await this.apiService.getCollections(this.organizationId);\n      this.collections = await decryptCollections(response);\n    } else {\n      this.collections = this.assignedCollections;\n    }\n\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.collections || this.collections.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCollections.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedCollectionsCount > this.pageSize) {\n      pagedSize = this.pagedCollectionsCount;\n    }\n    if (this.collections.length > pagedLength) {\n      this.pagedCollections = this.pagedCollections.concat(\n        this.collections.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCollectionsCount = this.pagedCollections.length;\n    this.didScroll = this.pagedCollections.length > this.pageSize;\n  }\n\n  async edit(collection: CollectionView) {\n    const canCreate = collection == null && this.canCreate;\n    const canEdit = collection != null && this.canEdit(collection);\n    const canDelete = collection != null && this.canDelete(collection);\n\n    if (!(canCreate || canEdit || canDelete)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      CollectionAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.collectionId = collection != null ? collection.id : null;\n        comp.canSave = canCreate || canEdit;\n        comp.canDelete = canDelete;\n        comp.onSavedCollection.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedCollection.subscribe(() => {\n          modal.close();\n          this.removeCollection(collection);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(collection: CollectionView) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      collection.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteCollection(this.organizationId, collection.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", collection.name)\n      );\n      this.removeCollection(collection);\n    } catch (e) {\n      this.logService.error(e);\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n    }\n  }\n\n  async users(collection: CollectionView) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"collection\";\n        comp.entityId = collection.id;\n        comp.entityName = collection.name;\n\n        comp.onEditedUsers.subscribe(() => {\n          this.load();\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedCollections = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.collections && this.collections.length > this.pageSize;\n  }\n\n  canEdit(collection: CollectionView) {\n    if (this.organization.canEditAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canEditAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  canDelete(collection: CollectionView) {\n    if (this.organization.canDeleteAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canDeleteAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  private removeCollection(collection: CollectionView) {\n    const index = this.collections.indexOf(collection);\n    if (index > -1) {\n      this.collections.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventView {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: EventType;\n  installationId: string;\n\n  constructor(data: Required<EventView>) {\n    this.message = data.message;\n    this.humanReadableMessage = data.humanReadableMessage;\n    this.appIcon = data.appIcon;\n    this.appName = data.appName;\n    this.userId = data.userId;\n    this.userName = data.userName;\n    this.userEmail = data.userEmail;\n    this.date = data.date;\n    this.ip = data.ip;\n    this.type = data.type;\n    this.installationId = data.installationId;\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { EventView } from \"@bitwarden/common/models/view/eventView\";\n\nimport { EventService } from \"src/app/services/event.service\";\n\n@Directive()\nexport abstract class BaseEventsComponent {\n  loading = true;\n  loaded = false;\n  events: EventView[];\n  start: string;\n  end: string;\n  dirtyDates = true;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  exportPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  abstract readonly exportFileName: string;\n\n  constructor(\n    protected eventService: EventService,\n    protected i18nService: I18nService,\n    protected exportService: ExportService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected fileDownloadService: FileDownloadService\n  ) {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n  }\n\n  async exportEvents() {\n    if (this.appApiPromiseUnfulfilled() || this.dirtyDates) {\n      return;\n    }\n\n    this.loading = true;\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    try {\n      this.exportPromise = this.export(dates[0], dates[1]);\n\n      await this.exportPromise;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    this.exportPromise = null;\n    this.loading = false;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.appApiPromiseUnfulfilled()) {\n      return;\n    }\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    this.loading = true;\n    let events: EventView[] = [];\n    try {\n      const promise = this.loadAndParseEvents(\n        dates[0],\n        dates[1],\n        clearExisting ? null : this.continuationToken\n      );\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      const result = await promise;\n      this.continuationToken = result.continuationToken;\n      events = result.events;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.dirtyDates = false;\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n\n  protected abstract requestEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ): Promise<ListResponse<EventResponse>>;\n  protected abstract getUserName(r: EventResponse, userId: string): { name: string; email: string };\n\n  protected async loadAndParseEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ) {\n    const response = await this.requestEvents(startDate, endDate, continuationToken);\n\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user = this.getUserName(r, userId);\n        const userName = user != null ? user.name : this.i18nService.t(\"unknown\");\n\n        return new EventView({\n          message: eventInfo.message,\n          humanReadableMessage: eventInfo.humanReadableMessage,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: r.installationId != null ? `Installation: ${r.installationId}` : userName,\n          userEmail: user != null ? user.email : \"\",\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n          installationId: r.installationId,\n        });\n      })\n    );\n    return { continuationToken: response.continuationToken, events: events };\n  }\n\n  protected parseDates() {\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return null;\n    }\n    return dates;\n  }\n\n  protected appApiPromiseUnfulfilled() {\n    return this.refreshPromise != null || this.morePromise != null || this.exportPromise != null;\n  }\n\n  private async export(start: string, end: string) {\n    let continuationToken = this.continuationToken;\n    let events = [].concat(this.events);\n\n    while (continuationToken != null) {\n      const result = await this.loadAndParseEvents(start, end, continuationToken);\n      continuationToken = result.continuationToken;\n      events = events.concat(result.events);\n    }\n\n    const data = await this.exportService.getEventExport(events);\n    const fileName = this.exportService.getFileName(this.exportFileName, \"csv\");\n    this.fileDownloadService.download({\n      fileName,\n      blobData: data,\n      blobOptions: { type: \"text/plain\" },\n    });\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"form-inline\">\n      <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"start\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n      <span class=\"mx-2\">-</span>\n      <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"end\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n    </div>\n    <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary ml-3\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        <i\n          class=\"bwi bwi-refresh bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-spin': loaded && refreshForm.loading }\"\n        ></i>\n        {{ \"refresh\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\"\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i>\n        <span>{{ \"export\" | i18n }}</span>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n    <thead>\n      <tr>\n        <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n        <th class=\"border-top-0\" width=\"40\">\n          <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n        </th>\n        <th class=\"border-top-0\" width=\"150\">{{ \"user\" | i18n }}</th>\n        <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of events\">\n        <td>{{ e.date | date: \"medium\" }}</td>\n        <td>\n          <i\n            class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n            title=\"{{ e.appName }}, {{ e.ip }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n        </td>\n        <td>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td [innerHTML]=\"e.message\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    class=\"btn btn-block btn-link btn-submit\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && moreBtn.loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\n\nimport { BaseEventsComponent } from \"../../common/base.events.component\";\nimport { EventService } from \"../../services/event.service\";\n\n@Component({\n  selector: \"app-org-events\",\n  templateUrl: \"events.component.html\",\n})\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n  exportFileName = \"org-events\";\n  organizationId: string;\n  organization: Organization;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      eventService,\n      i18nService,\n      exportService,\n      platformUtilsService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      if (this.organization == null || !this.organization.useEvents) {\n        this.router.navigate([\"/organizations\", this.organizationId]);\n        return;\n      }\n\n      await this.load();\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getOrganizationUsers(this.organizationId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n\n    if (this.organization.providerId != null) {\n      try {\n        const provider = await this.providerService.get(this.organization.providerId);\n        if (\n          provider != null &&\n          (await this.providerService.get(this.organization.providerId)).canManageUsers\n        ) {\n          const providerUsersResponse = await this.apiService.getProviderUsers(\n            this.organization.providerId\n          );\n          providerUsersResponse.data.forEach((u) => {\n            const name = this.userNamePipe.transform(u);\n            this.orgUsersUserIdMap.set(u.userId, {\n              name: `${name} (${this.organization.providerName})`,\n              email: u.email,\n            });\n          });\n        }\n      } catch (e) {\n        this.logService.warning(e);\n      }\n    }\n\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsOrganization(\n      this.organizationId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    if (userId == null) {\n      return null;\n    }\n\n    if (this.orgUsersUserIdMap.has(userId)) {\n      return this.orgUsersUserIdMap.get(userId);\n    }\n\n    if (r.providerId != null && r.providerId === this.organization.providerId) {\n      return {\n        name: this.organization.providerName,\n      };\n    }\n\n    return null;\n  }\n}\n","import { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class GroupRequest {\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n  collections: SelectionReadOnlyRequest[] = [];\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"groupAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-2\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"groupAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"groupAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              aria-hidden=\"true\"\n              title=\"{{ 'loading' | i18n }}\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { GroupRequest } from \"@bitwarden/common/models/request/groupRequest\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collectionResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-group-add-edit\",\n  templateUrl: \"group-add-edit.component.html\",\n})\nexport class GroupAddEditComponent implements OnInit {\n  @Input() groupId: string;\n  @Input() organizationId: string;\n  @Output() onSavedGroup = new EventEmitter();\n  @Output() onDeletedGroup = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  name: string;\n  externalId: string;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.groupId != null;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editGroup\");\n      try {\n        const group = await this.apiService.getGroupDetails(this.organizationId, this.groupId);\n        this.access = group.accessAll ? \"all\" : \"selected\";\n        this.name = group.name;\n        this.externalId = group.externalId;\n        if (group.collections != null && this.collections != null) {\n          group.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addGroup\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  async submit() {\n    const request = new GroupRequest();\n    request.name = this.name;\n    request.externalId = this.externalId;\n    request.accessAll = this.access === \"all\";\n    if (!request.accessAll) {\n      request.collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putGroup(this.organizationId, this.groupId, request);\n      } else {\n        this.formPromise = this.apiService.postGroup(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedGroupId\" : \"createdGroupId\", this.name)\n      );\n      this.onSavedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteGroup(this.organizationId, this.groupId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", this.name)\n      );\n      this.onDeletedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"groups\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newGroup\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedGroups : (groups | search: searchText:'name':'id')) as searchedGroups\n  \"\n>\n  <p *ngIf=\"!searchedGroups.length\">{{ \"noGroupsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedGroups.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let g of searchedGroups\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(g)\">{{ g.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(g)\">\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(g)\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/groupResponse\";\n\nimport { EntityUsersComponent } from \"../../modules/organizations/manage/entity-users.component\";\n\nimport { GroupAddEditComponent } from \"./group-add-edit.component\";\n\n@Component({\n  selector: \"app-org-groups\",\n  templateUrl: \"groups.component.html\",\n})\nexport class GroupsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  groups: GroupResponse[];\n  pagedGroups: GroupResponse[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedGroupsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private searchService: SearchService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      const organization = await this.organizationService.get(this.organizationId);\n      if (organization == null || !organization.useGroups) {\n        this.router.navigate([\"/organizations\", this.organizationId]);\n        return;\n      }\n      await this.load();\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getGroups(this.organizationId);\n    const groups = response.data != null && response.data.length > 0 ? response.data : [];\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.groups || this.groups.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedGroups.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedGroupsCount > this.pageSize) {\n      pagedSize = this.pagedGroupsCount;\n    }\n    if (this.groups.length > pagedLength) {\n      this.pagedGroups = this.pagedGroups.concat(\n        this.groups.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedGroupsCount = this.pagedGroups.length;\n    this.didScroll = this.pagedGroups.length > this.pageSize;\n  }\n\n  async edit(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      GroupAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.groupId = group != null ? group.id : null;\n        comp.onSavedGroup.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedGroup.subscribe(() => {\n          modal.close();\n          this.removeGroup(group);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(group: GroupResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      group.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteGroup(this.organizationId, group.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", group.name)\n      );\n      this.removeGroup(group);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async users(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"group\";\n        comp.entityId = group.id;\n        comp.entityName = group.name;\n\n        comp.onEditedUsers.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedGroups = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.groups && this.groups.length > this.pageSize;\n  }\n\n  private removeGroup(group: GroupResponse) {\n    const index = this.groups.indexOf(group);\n    if (index > -1) {\n      this.groups.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"organization\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"people\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageUsers\"\n          >\n            {{ \"people\" | i18n }}\n          </a>\n          <a\n            routerLink=\"collections\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canViewAllCollections || organization.canViewAssignedCollections\"\n          >\n            {{ \"collections\" | i18n }}\n          </a>\n          <a\n            routerLink=\"groups\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageGroups && accessGroups\"\n          >\n            {{ \"groups\" | i18n }}\n          </a>\n          <a\n            routerLink=\"policies\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManagePolicies && accessPolicies\"\n          >\n            {{ \"policies\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sso\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageSso && accessSso\"\n          >\n            {{ \"singleSignOn\" | i18n }}\n          </a>\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canAccessEventLogs && accessEvents\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-manage\",\n  templateUrl: \"manage.component.html\",\n})\nexport class ManageComponent implements OnInit {\n  organization: Organization;\n  accessPolicies = false;\n  accessGroups = false;\n  accessEvents = false;\n  accessSso = false;\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.accessPolicies = this.organization.usePolicies;\n      this.accessSso = this.organization.useSso;\n      this.accessEvents = this.organization.useEvents;\n      this.accessGroups = this.organization.useGroups;\n    });\n  }\n}\n","import { KeysRequest } from \"./keysRequest\";\n\nexport class OrganizationKeysRequest extends KeysRequest {\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    super(publicKey, encryptedPrivateKey);\n  }\n}\n","export class OrganizationUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class OrganizationUserConfirmRequest {\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-user-confirm\",\n  templateUrl: \"user-confirm.component.html\",\n})\nexport class UserConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() publicKey: Uint8Array;\n  @Output() onConfirmedUser = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      if (this.publicKey != null) {\n        const fingerprint = await this.cryptoService.getFingerprint(\n          this.userId,\n          this.publicKey.buffer\n        );\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    this.onConfirmedUser.emit();\n  }\n}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/models/response/organizationUserResponse\";\nimport { ProviderUserUserDetailsResponse } from \"@bitwarden/common/models/response/provider/providerUserResponse\";\n\nimport { UserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\n\ntype StatusType = OrganizationUserStatusType | ProviderUserStatusType;\n\nconst MaxCheckedCount = 500;\n\n@Directive()\nexport abstract class BasePeopleComponent<\n  UserType extends ProviderUserUserDetailsResponse | OrganizationUserUserDetailsResponse\n> {\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  get allCount() {\n    return this.activeUsers != null ? this.activeUsers.length : 0;\n  }\n\n  get invitedCount() {\n    return this.statusMap.has(this.userStatusType.Invited)\n      ? this.statusMap.get(this.userStatusType.Invited).length\n      : 0;\n  }\n\n  get acceptedCount() {\n    return this.statusMap.has(this.userStatusType.Accepted)\n      ? this.statusMap.get(this.userStatusType.Accepted).length\n      : 0;\n  }\n\n  get confirmedCount() {\n    return this.statusMap.has(this.userStatusType.Confirmed)\n      ? this.statusMap.get(this.userStatusType.Confirmed).length\n      : 0;\n  }\n\n  get deactivatedCount() {\n    return this.statusMap.has(this.userStatusType.Deactivated)\n      ? this.statusMap.get(this.userStatusType.Deactivated).length\n      : 0;\n  }\n\n  get showConfirmUsers(): boolean {\n    return (\n      this.activeUsers != null &&\n      this.statusMap != null &&\n      this.activeUsers.length > 1 &&\n      this.confirmedCount > 0 &&\n      this.confirmedCount < 3 &&\n      this.acceptedCount > 0\n    );\n  }\n\n  get showBulkConfirmUsers(): boolean {\n    return this.acceptedCount > 0;\n  }\n\n  abstract userType: typeof OrganizationUserType | typeof ProviderUserType;\n  abstract userStatusType: typeof OrganizationUserStatusType | typeof ProviderUserStatusType;\n\n  loading = true;\n  statusMap = new Map<StatusType, UserType[]>();\n  status: StatusType;\n  users: UserType[] = [];\n  pagedUsers: UserType[] = [];\n  searchText: string;\n  actionPromise: Promise<any>;\n\n  protected allUsers: UserType[] = [];\n  protected activeUsers: UserType[] = [];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedUsersCount = 0;\n\n  constructor(\n    protected apiService: ApiService,\n    private searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cryptoService: CryptoService,\n    protected validationService: ValidationService,\n    protected modalService: ModalService,\n    private logService: LogService,\n    private searchPipe: SearchPipe,\n    protected userNamePipe: UserNamePipe,\n    protected stateService: StateService\n  ) {}\n\n  abstract edit(user: UserType): void;\n  abstract getUsers(): Promise<ListResponse<UserType>>;\n  abstract deleteUser(id: string): Promise<any>;\n  abstract deactivateUser(id: string): Promise<any>;\n  abstract activateUser(id: string): Promise<any>;\n  abstract reinviteUser(id: string): Promise<any>;\n  abstract confirmUser(user: UserType, publicKey: Uint8Array): Promise<any>;\n\n  async load() {\n    const response = await this.getUsers();\n    this.statusMap.clear();\n    this.activeUsers = [];\n    for (const status of Utils.iterateEnum(this.userStatusType)) {\n      this.statusMap.set(status, []);\n    }\n\n    this.allUsers = response.data != null && response.data.length > 0 ? response.data : [];\n    this.allUsers.sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    this.allUsers.forEach((u) => {\n      if (!this.statusMap.has(u.status)) {\n        this.statusMap.set(u.status, [u]);\n      } else {\n        this.statusMap.get(u.status).push(u);\n      }\n      if (u.status !== this.userStatusType.Deactivated) {\n        this.activeUsers.push(u);\n      }\n    });\n    this.filter(this.status);\n    this.loading = false;\n  }\n\n  filter(status: StatusType) {\n    this.status = status;\n    if (this.status != null) {\n      this.users = this.statusMap.get(this.status);\n    } else {\n      this.users = this.activeUsers;\n    }\n    // Reset checkbox selecton\n    this.selectAll(false);\n    this.resetPaging();\n  }\n\n  loadMore() {\n    if (!this.users || this.users.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedUsers.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedUsersCount > this.pageSize) {\n      pagedSize = this.pagedUsersCount;\n    }\n    if (this.users.length > pagedLength) {\n      this.pagedUsers = this.pagedUsers.concat(\n        this.users.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedUsersCount = this.pagedUsers.length;\n    this.didScroll = this.pagedUsers.length > this.pageSize;\n  }\n\n  checkUser(user: OrganizationUserUserDetailsResponse, select?: boolean) {\n    (user as any).checked = select == null ? !(user as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n\n    const filteredUsers = this.searchPipe.transform(\n      this.users,\n      this.searchText,\n      \"name\",\n      \"email\",\n      \"id\"\n    );\n\n    const selectCount =\n      select && filteredUsers.length > MaxCheckedCount ? MaxCheckedCount : filteredUsers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkUser(filteredUsers[i], select);\n    }\n  }\n\n  async resetPaging() {\n    this.pagedUsers = [];\n    this.loadMore();\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  async remove(user: UserType) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.deleteWarningMessage(user),\n      this.userNamePipe.transform(user),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.deleteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(user))\n      );\n      this.removeUser(user);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async deactivate(user: UserType) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.deactivateWarningMessage(),\n      this.i18nService.t(\"deactivateUserId\", this.userNamePipe.transform(user)),\n      this.i18nService.t(\"deactivate\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.deactivateUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deactivatedUserId\", this.userNamePipe.transform(user))\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async activate(user: UserType) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.activateWarningMessage(),\n      this.i18nService.t(\"activateUserId\", this.userNamePipe.transform(user)),\n      this.i18nService.t(\"activate\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.activateUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"activatedUserId\", this.userNamePipe.transform(user))\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async reinvite(user: UserType) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    this.actionPromise = this.reinviteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"hasBeenReinvited\", this.userNamePipe.transform(user))\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async confirm(user: UserType) {\n    function updateUser(self: BasePeopleComponent<UserType>) {\n      user.status = self.userStatusType.Confirmed;\n      const mapIndex = self.statusMap.get(self.userStatusType.Accepted).indexOf(user);\n      if (mapIndex > -1) {\n        self.statusMap.get(self.userStatusType.Accepted).splice(mapIndex, 1);\n        self.statusMap.get(self.userStatusType.Confirmed).push(user);\n      }\n    }\n\n    const confirmUser = async (publicKey: Uint8Array) => {\n      try {\n        this.actionPromise = this.confirmUser(user, publicKey);\n        await this.actionPromise;\n        updateUser(this);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(user))\n        );\n      } catch (e) {\n        this.validationService.showError(e);\n        throw e;\n      } finally {\n        this.actionPromise = null;\n      }\n    };\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(user.userId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n      if (autoConfirm == null || !autoConfirm) {\n        const [modal] = await this.modalService.openViewRef(\n          UserConfirmComponent,\n          this.confirmModalRef,\n          (comp) => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.userId = user != null ? user.userId : null;\n            comp.publicKey = publicKey;\n            comp.onConfirmedUser.subscribe(async () => {\n              try {\n                comp.formPromise = confirmUser(publicKey);\n                await comp.formPromise;\n                modal.close();\n              } catch (e) {\n                this.logService.error(e);\n              }\n            });\n          }\n        );\n        return;\n      }\n\n      try {\n        const fingerprint = await this.cryptoService.getFingerprint(user.userId, publicKey.buffer);\n        this.logService.info(`User's fingerprint: ${fingerprint.join(\"-\")}`);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      await confirmUser(publicKey);\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.users && this.users.length > this.pageSize;\n  }\n\n  protected deleteWarningMessage(user: UserType): string {\n    return this.i18nService.t(\"removeUserConfirmation\");\n  }\n\n  protected deactivateWarningMessage(): string {\n    return this.i18nService.t(\"deactivateUserConfirmation\");\n  }\n\n  protected activateWarningMessage(): string {\n    return this.i18nService.t(\"activateUserConfirmation\");\n  }\n\n  protected getCheckedUsers() {\n    return this.users.filter((u) => (u as any).checked);\n  }\n\n  protected removeUser(user: UserType) {\n    let index = this.users.indexOf(user);\n    if (index > -1) {\n      this.users.splice(index, 1);\n      this.resetPaging();\n    }\n    if (this.statusMap.has(user.status)) {\n      index = this.statusMap.get(user.status).indexOf(user);\n      if (index > -1) {\n        this.statusMap.get(user.status).splice(index, 1);\n      }\n    }\n  }\n}\n","type OrganizationUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class OrganizationUserBulkConfirmRequest {\n  keys: OrganizationUserBulkRequestEntry[];\n\n  constructor(keys: OrganizationUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"confirmUsers\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <app-callout type=\"danger\" *ngIf=\"filteredUsers.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!loading && !done\">\n          <p>\n            {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n            <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n              {{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"fingerprint\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ fingerprints.get(user.id) }}\n              </td>\n            </tr>\n            <tr *ngFor=\"let user of excludedUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"!loading && done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { OrganizationUserBulkConfirmRequest } from \"@bitwarden/common/models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-confirm\",\n  templateUrl: \"bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent implements OnInit {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  excludedUsers: BulkUserDetails[];\n  filteredUsers: BulkUserDetails[];\n  publicKeys: Map<string, Uint8Array> = new Map();\n  fingerprints: Map<string, string> = new Map();\n  statuses: Map<string, string> = new Map();\n\n  loading = true;\n  done = false;\n  error: string;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.excludedUsers = this.users.filter((u) => !this.isAccepted(u));\n    this.filteredUsers = this.users.filter((u) => this.isAccepted(u));\n\n    if (this.filteredUsers.length <= 0) {\n      this.done = true;\n    }\n\n    const response = await this.getPublicKeys();\n\n    for (const entry of response.data) {\n      const publicKey = Utils.fromB64ToArray(entry.key);\n      const fingerprint = await this.cryptoService.getFingerprint(entry.userId, publicKey.buffer);\n      if (fingerprint != null) {\n        this.publicKeys.set(entry.id, publicKey);\n        this.fingerprints.set(entry.id, fingerprint.join(\"-\"));\n      }\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const key = await this.getCryptoKey();\n      const userIdsWithKeys: any[] = [];\n      for (const user of this.filteredUsers) {\n        const publicKey = this.publicKeys.get(user.id);\n        if (publicKey == null) {\n          continue;\n        }\n        const encryptedKey = await this.cryptoService.rsaEncrypt(key.key, publicKey.buffer);\n        userIdsWithKeys.push({\n          id: user.id,\n          key: encryptedKey.encryptedString,\n        });\n      }\n      const response = await this.postConfirmRequest(userIdsWithKeys);\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkConfirmMessage\");\n        this.statuses.set(entry.id, error);\n      });\n\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n    this.loading = false;\n  }\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === OrganizationUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new OrganizationUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postOrganizationUsersPublicKey(this.organizationId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getOrgKey(this.organizationId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new OrganizationUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postOrganizationUserBulkConfirm(this.organizationId, request);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ bulkTitle }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error\">\n            {{ usersWarning }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ bulkTitle }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalConfig } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-deactivate\",\n  templateUrl: \"bulk-deactivate.component.html\",\n})\nexport class BulkDeactivateComponent {\n  isDeactivating: boolean;\n  organizationId: string;\n  users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading = false;\n  done = false;\n  error: string;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    private modalRef: ModalRef,\n    config: ModalConfig\n  ) {\n    this.isDeactivating = config.data.isDeactivating;\n    this.organizationId = config.data.organizationId;\n    this.users = config.data.users;\n  }\n\n  get bulkTitle() {\n    const titleKey = this.isDeactivating ? \"deactivateUsers\" : \"activateUsers\";\n    return this.i18nService.t(titleKey);\n  }\n\n  get usersWarning() {\n    const warningKey = this.isDeactivating ? \"deactivateUsersWarning\" : \"activateUsersWarning\";\n    return this.i18nService.t(warningKey);\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.performBulkUserAction();\n\n      const bulkMessage = this.isDeactivating ? \"bulkDeactivatedMessage\" : \"bulkActivatedMessage\";\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(bulkMessage);\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n    this.modalRef.close();\n  }\n\n  protected async performBulkUserAction() {\n    const request = new OrganizationUserBulkRequest(this.users.map((user) => user.id));\n    if (this.isDeactivating) {\n      return await this.apiService.deactivateManyOrganizationUsers(this.organizationId, request);\n    } else {\n      return await this.apiService.activateManyOrganizationUsers(this.organizationId, request);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"removeUsers\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error\">\n            {{ \"removeUsersWarning\" | i18n }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"removeUsers\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-remove\",\n  templateUrl: \"bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading = false;\n  done = false;\n  error: string;\n\n  constructor(protected apiService: ApiService, protected i18nService: I18nService) {}\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.deleteUsers();\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkRemovedMessage\");\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n  }\n\n  protected async deleteUsers() {\n    const request = new OrganizationUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyOrganizationUsers(this.organizationId, request);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"bulkConfirmStatus\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              <th>{{ \"status\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tr *ngFor=\"let item of users\">\n            <td width=\"30\">\n              <app-avatar\n                [data]=\"item.user | userName\"\n                [email]=\"item.user.email\"\n                size=\"25\"\n                [circle]=\"true\"\n                [fontSize]=\"14\"\n              ></app-avatar>\n            </td>\n            <td>\n              {{ item.user.email }}\n              <small class=\"text-muted d-block\" *ngIf=\"item.user.name\">{{ item.user.name }}</small>\n            </td>\n            <td class=\"text-danger\" *ngIf=\"item.error\">\n              {{ item.message }}\n            </td>\n            <td *ngIf=\"!item.error\">\n              {{ item.message }}\n            </td>\n          </tr>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\n\nexport interface BulkUserDetails {\n  id: string;\n  name: string;\n  email: string;\n  status: OrganizationUserStatusType | ProviderUserStatusType;\n}\n\ntype BulkStatusEntry = {\n  user: BulkUserDetails;\n  error: boolean;\n  message: string;\n};\n\n@Component({\n  selector: \"app-bulk-status\",\n  templateUrl: \"bulk-status.component.html\",\n})\nexport class BulkStatusComponent {\n  users: BulkStatusEntry[];\n  loading = false;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"resetPasswordTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"resetPasswordTitle\">\n          {{ \"resetPassword\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\"\n          >{{ \"resetPasswordLoggedOutWarning\" | i18n: loggedOutWarningName }}\n        </app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          enforcedPolicyMessage=\"{{ 'resetPasswordMasterPasswordPolicyInEffect' | i18n }}\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col form-group\">\n            <div class=\"d-flex\">\n              <label for=\"newPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"ml-auto d-flex\">\n                <a\n                  href=\"#\"\n                  class=\"d-block mr-2 bwi-icon-above-input\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                  (click)=\"generatePassword()\"\n                >\n                  <i class=\"bwi bwi-lg bwi-fw bwi-refresh\" aria-hidden=\"true\"></i>\n                </a>\n              </div>\n            </div>\n            <div class=\"input-group mb-1\">\n              <input\n                id=\"newPassword\"\n                class=\"form-control text-monospace\"\n                appAutofocus\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"NewPassword\"\n                [(ngModel)]=\"newPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n                (input)=\"updatePasswordStrength()\"\n              />\n              <div class=\"input-group-append\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword()\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                  (click)=\"copy(newPassword)\"\n                >\n                  <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n            <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n            </app-password-strength>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { OrganizationUserResetPasswordRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordRequest\";\n\n@Component({\n  selector: \"app-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordComponent implements OnInit {\n  @Input() name: string;\n  @Input() email: string;\n  @Input() id: string;\n  @Input() organizationId: string;\n  @Output() onPasswordReset = new EventEmitter();\n\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  newPassword: string = null;\n  showPassword = false;\n  masterPasswordScore: number;\n  formPromise: Promise<any>;\n  private newPasswordStrengthTimeout: any;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    private cryptoService: CryptoService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // Get Enforced Policy Options\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  get loggedOutWarningName() {\n    return this.name != null ? this.name : this.i18nService.t(\"thisUser\");\n  }\n\n  async generatePassword() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    this.newPassword = await this.passwordGenerationService.generatePassword(options);\n    this.updatePasswordStrength();\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"newPassword\").focus();\n  }\n\n  copy(value: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  async submit() {\n    // Validation\n    if (this.newPassword == null || this.newPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n\n    if (this.newPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return false;\n    }\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.masterPasswordScore,\n        this.newPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    if (this.masterPasswordScore < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    // Get user Information (kdf type, kdf iterations, resetPasswordKey, private key) and change password\n    try {\n      this.formPromise = this.apiService\n        .getOrganizationUserResetPasswordDetails(this.organizationId, this.id)\n        .then(async (response) => {\n          if (response == null) {\n            throw new Error(this.i18nService.t(\"resetPasswordDetailsError\"));\n          }\n\n          const kdfType = response.kdf;\n          const kdfIterations = response.kdfIterations;\n          const resetPasswordKey = response.resetPasswordKey;\n          const encryptedPrivateKey = response.encryptedPrivateKey;\n\n          // Decrypt Organization's encrypted Private Key with org key\n          const orgSymKey = await this.cryptoService.getOrgKey(this.organizationId);\n          const decPrivateKey = await this.cryptoService.decryptToBytes(\n            new EncString(encryptedPrivateKey),\n            orgSymKey\n          );\n\n          // Decrypt User's Reset Password Key to get EncKey\n          const decValue = await this.cryptoService.rsaDecrypt(resetPasswordKey, decPrivateKey);\n          const userEncKey = new SymmetricCryptoKey(decValue);\n\n          // Create new key and hash new password\n          const newKey = await this.cryptoService.makeKey(\n            this.newPassword,\n            this.email.trim().toLowerCase(),\n            kdfType,\n            kdfIterations\n          );\n          const newPasswordHash = await this.cryptoService.hashPassword(this.newPassword, newKey);\n\n          // Create new encKey for the User\n          const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n          // Create request\n          const request = new OrganizationUserResetPasswordRequest();\n          request.key = newEncKey[1].encryptedString;\n          request.newMasterPasswordHash = newPasswordHash;\n\n          // Change user's password\n          return this.apiService.putOrganizationUserResetPassword(\n            this.organizationId,\n            this.id,\n            request\n          );\n        });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"resetPasswordSuccess\")\n      );\n      this.onPasswordReset.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  updatePasswordStrength() {\n    if (this.newPasswordStrengthTimeout != null) {\n      clearTimeout(this.newPasswordStrengthTimeout);\n    }\n    this.newPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.newPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (this.name != null && this.name !== \"\") {\n      userInput = userInput.concat(this.name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n  }\n}\n","import { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class OrganizationUserInviteRequest {\n  emails: string[] = [];\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","import { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class OrganizationUserUpdateRequest {\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","<div class=\"form-group mb-0\">\n  <div class=\"form-check mt-1 form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [name]=\"pascalize(parentId)\"\n      [id]=\"parentId\"\n      [(ngModel)]=\"parentChecked\"\n      [indeterminate]=\"parentIndeterminate\"\n    />\n    <label class=\"form-check-label font-weight-normal\" [for]=\"parentId\">\n      {{ parentId | i18n }}\n    </label>\n  </div>\n  <div class=\"form-group form-group-child-check mb-0\">\n    <div class=\"form-check mt-1\" *ngFor=\"let c of checkboxes\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        [name]=\"pascalize(c.id)\"\n        [id]=\"c.id\"\n        [ngModel]=\"c.get()\"\n        (ngModelChange)=\"c.set($event)\"\n      />\n      <label class=\"form-check-label font-weight-normal\" [for]=\"c.id\">\n        {{ c.id | i18n }}\n      </label>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-nested-checkbox\",\n  templateUrl: \"nested-checkbox.component.html\",\n})\nexport class NestedCheckboxComponent {\n  @Input() parentId: string;\n  @Input() checkboxes: { id: string; get: () => boolean; set: (v: boolean) => void }[];\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  get parentIndeterminate() {\n    return !this.parentChecked && this.checkboxes.some((c) => c.get());\n  }\n\n  get parentChecked() {\n    return this.checkboxes.every((c) => c.get());\n  }\n\n  set parentChecked(value: boolean) {\n    this.checkboxes.forEach((c) => {\n      c.set(value);\n    });\n  }\n\n  pascalize(s: string) {\n    return Utils.camelToPascalCase(s);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n          <span bitBadge badgeType=\"secondary\" *ngIf=\"isDeactivated\">{{\n            \"deactivated\" | i18n\n          }}</span>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/user-types-access-control/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeUser\"\n            [value]=\"organizationUserType.User\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeUser\">\n            {{ \"user\" | i18n }}\n            <small>{{ \"userDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeManager\"\n            [value]=\"organizationUserType.Manager\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeManager\">\n            {{ \"manager\" | i18n }}\n            <small>{{ \"managerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeAdmin\"\n            [value]=\"organizationUserType.Admin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeAdmin\">\n            {{ \"admin\" | i18n }}\n            <small>{{ \"adminDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeOwner\"\n            [value]=\"organizationUserType.Owner\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeOwner\">\n            {{ \"owner\" | i18n }}\n            <small>{{ \"ownerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeCustom\"\n            [value]=\"organizationUserType.Custom\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeCustom\">\n            {{ \"custom\" | i18n }}\n            <small>{{ \"customDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <ng-container *ngIf=\"customUserTypeSelected\">\n          <h3 class=\"mt-4 d-flex\">\n            {{ \"permissions\" | i18n }}\n          </h3>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">Manager Permissions</label>\n                <hr class=\"my-0 mr-2\" />\n                <app-nested-checkbox\n                  parentId=\"manageAssignedCollections\"\n                  [checkboxes]=\"manageAssignedCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n              </div>\n            </div>\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">Admin Permissions</label>\n                <hr class=\"my-0 mr-2\" />\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessEventLogs\"\n                      id=\"accessEventLogs\"\n                      [(ngModel)]=\"permissions.accessEventLogs\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessEventLogs\">\n                      {{ \"accessEventLogs\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessImportExport\"\n                      id=\"accessImportExport\"\n                      [(ngModel)]=\"permissions.accessImportExport\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessImportExport\">\n                      {{ \"accessImportExport\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessReports\"\n                      id=\"accessReports\"\n                      [(ngModel)]=\"permissions.accessReports\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessReports\">\n                      {{ \"accessReports\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <app-nested-checkbox\n                  parentId=\"manageAllCollections\"\n                  [checkboxes]=\"manageAllCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageGroups\"\n                      id=\"manageGroups\"\n                      [(ngModel)]=\"permissions.manageGroups\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageGroups\">\n                      {{ \"manageGroups\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageSso\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.manageSso\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageSso\">\n                      {{ \"manageSso\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"managePolicies\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.managePolicies\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"managePolicies\">\n                      {{ \"managePolicies\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageUsers\"\n                      id=\"manageUsers\"\n                      [(ngModel)]=\"permissions.manageUsers\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageUsers\">\n                      {{ \"manageUsers\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageResetPassword\"\n                      id=\"manageResetPassword\"\n                      [(ngModel)]=\"permissions.manageResetPassword\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageResetPassword\">\n                      {{ \"manageResetPassword\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-3\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"userAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"userAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"activate()\"\n            class=\"btn btn-outline-secondary\"\n            appA11yTitle=\"{{ 'activate' | i18n }}\"\n            *ngIf=\"editMode && isDeactivated\"\n            [disabled]=\"form.loading\"\n          >\n            <i\n              class=\"bwi bwi-plus-circle bwi-lg bwi-fw\"\n              [hidden]=\"form.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button\n            type=\"button\"\n            (click)=\"deactivate()\"\n            class=\"btn btn-outline-secondary\"\n            appA11yTitle=\"{{ 'deactivate' | i18n }}\"\n            *ngIf=\"editMode && !isDeactivated\"\n            [disabled]=\"form.loading\"\n          >\n            <i\n              class=\"bwi bwi-minus-circle bwi-lg bwi-fw\"\n              [hidden]=\"form.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissionsApi\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { OrganizationUserInviteRequest } from \"@bitwarden/common/models/request/organizationUserInviteRequest\";\nimport { OrganizationUserUpdateRequest } from \"@bitwarden/common/models/request/organizationUserUpdateRequest\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collectionResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Input() usesKeyConnector = false;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n  @Output() onDeactivatedUser = new EventEmitter();\n  @Output() onActivatedUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  isDeactivated = false;\n  title: string;\n  emails: string;\n  type: OrganizationUserType = OrganizationUserType.User;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  organizationUserType = OrganizationUserType;\n\n  manageAllCollectionsCheckboxes = [\n    {\n      id: \"createNewCollections\",\n      get: () => this.permissions.createNewCollections,\n      set: (v: boolean) => (this.permissions.createNewCollections = v),\n    },\n    {\n      id: \"editAnyCollection\",\n      get: () => this.permissions.editAnyCollection,\n      set: (v: boolean) => (this.permissions.editAnyCollection = v),\n    },\n    {\n      id: \"deleteAnyCollection\",\n      get: () => this.permissions.deleteAnyCollection,\n      set: (v: boolean) => (this.permissions.deleteAnyCollection = v),\n    },\n  ];\n\n  manageAssignedCollectionsCheckboxes = [\n    {\n      id: \"editAssignedCollections\",\n      get: () => this.permissions.editAssignedCollections,\n      set: (v: boolean) => (this.permissions.editAssignedCollections = v),\n    },\n    {\n      id: \"deleteAssignedCollections\",\n      get: () => this.permissions.deleteAssignedCollections,\n      set: (v: boolean) => (this.permissions.deleteAssignedCollections = v),\n    },\n  ];\n\n  get customUserTypeSelected(): boolean {\n    return this.type === OrganizationUserType.Custom;\n  }\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.organizationUserId != null;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getOrganizationUser(\n          this.organizationId,\n          this.organizationUserId\n        );\n        this.access = user.accessAll ? \"all\" : \"selected\";\n        this.type = user.type;\n        this.isDeactivated = user.status === OrganizationUserStatusType.Deactivated;\n        if (user.type === OrganizationUserType.Custom) {\n          this.permissions = user.permissions;\n        }\n        if (user.collections != null && this.collections != null) {\n          user.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  setRequestPermissions(p: PermissionsApi, clearPermissions: boolean) {\n    Object.assign(p, clearPermissions ? new PermissionsApi() : this.permissions);\n    return p;\n  }\n\n  handleDependentPermissions() {\n    // Manage Password Reset must have Manage Users enabled\n    if (this.permissions.manageResetPassword && !this.permissions.manageUsers) {\n      this.permissions.manageUsers = true;\n      (document.getElementById(\"manageUsers\") as HTMLInputElement).checked = true;\n      this.platformUtilsService.showToast(\n        \"info\",\n        null,\n        this.i18nService.t(\"resetPasswordManageUsers\")\n      );\n    }\n  }\n\n  async submit() {\n    let collections: SelectionReadOnlyRequest[] = null;\n    if (this.access !== \"all\") {\n      collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        const request = new OrganizationUserUpdateRequest();\n        request.accessAll = this.access === \"all\";\n        request.type = this.type;\n        request.collections = collections;\n        request.permissions = this.setRequestPermissions(\n          request.permissions ?? new PermissionsApi(),\n          request.type !== OrganizationUserType.Custom\n        );\n        this.formPromise = this.apiService.putOrganizationUser(\n          this.organizationId,\n          this.organizationUserId,\n          request\n        );\n      } else {\n        const request = new OrganizationUserInviteRequest();\n        request.emails = [...new Set(this.emails.trim().split(/\\s*,\\s*/))];\n        request.accessAll = this.access === \"all\";\n        request.type = this.type;\n        request.permissions = this.setRequestPermissions(\n          request.permissions ?? new PermissionsApi(),\n          request.type !== OrganizationUserType.Custom\n        );\n        request.collections = collections;\n        this.formPromise = this.apiService.postOrganizationUserInvite(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const message = this.usesKeyConnector\n      ? \"removeUserConfirmationKeyConnector\"\n      : \"removeUserConfirmation\";\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(message),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async deactivate() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deactivateUserConfirmation\"),\n      this.i18nService.t(\"deactivateUserId\", this.name),\n      this.i18nService.t(\"deactivate\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.apiService.deactivateOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deactivatedUserId\", this.name)\n      );\n      this.isDeactivated = true;\n      this.onDeactivatedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async activate() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"activateUserConfirmation\"),\n      this.i18nService.t(\"activateUserId\", this.name),\n      this.i18nService.t(\"activate\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.apiService.activateOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"activatedUserId\", this.name)\n      );\n      this.isDeactivated = false;\n      this.onActivatedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export class OrganizationUserUpdateGroupsRequest {\n  groupIds: string[] = [];\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"groupAccessTitle\">\n          {{ \"groupAccess\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <p>{{ \"groupAccessUserDesc\" | i18n }}</p>\n        <div *ngIf=\"!groups || !groups.length\">\n          {{ \"noGroupsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n          <tbody>\n            <tr *ngFor=\"let g of groups; let i = index\">\n              <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"g.checked\"\n                  name=\"Groups[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td (click)=\"check(g)\">\n                {{ g.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { OrganizationUserUpdateGroupsRequest } from \"@bitwarden/common/models/request/organizationUserUpdateGroupsRequest\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/groupResponse\";\n\n@Component({\n  selector: \"app-user-groups\",\n  templateUrl: \"user-groups.component.html\",\n})\nexport class UserGroupsComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Output() onSavedUser = new EventEmitter();\n\n  loading = true;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const groupsResponse = await this.apiService.getGroups(this.organizationId);\n    const groups = groupsResponse.data.map((r) => r);\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n\n    try {\n      const userGroups = await this.apiService.getOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId\n      );\n      if (userGroups != null && this.groups != null) {\n        userGroups.forEach((ug) => {\n          const group = this.groups.filter((g) => g.id === ug);\n          if (group != null && group.length > 0) {\n            (group[0] as any).checked = true;\n          }\n        });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    const request = new OrganizationUserUpdateGroupsRequest();\n    request.groupIds = this.groups.filter((g) => (g as any).checked).map((g) => g.id);\n\n    try {\n      this.formPromise = this.apiService.putOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedGroupsForUser\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"people\" | i18n }}</h1>\n  <div class=\"mt-2 d-flex\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span bitBadge badgeType=\"warning\" *ngIf=\"acceptedCount\">{{ acceptedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Deactivated }\"\n        (click)=\"filter(userStatusType.Deactivated)\"\n      >\n        {{ \"deactivated\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"deactivatedCount\">{{ deactivatedCount }}</span>\n      </button>\n    </div>\n    <div class=\"ml-3\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown ml-3\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkActivate()\">\n          <i class=\"bwi bwi-fw bwi-plus-circle\" aria-hidden=\"true\"></i>\n          {{ \"activate\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkDeactivate()\">\n          <i class=\"bwi bwi-fw bwi-minus-circle\" aria-hidden=\"true\"></i>\n          {{ \"deactivate\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"usersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"u | userName\"\n              [email]=\"u.email\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            >\n            </app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Deactivated\">{{\n              \"deactivated\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"u.twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"showEnrolledStatus(u)\">\n              <i\n                class=\"bwi bwi-key\"\n                title=\"{{ 'enrolledPasswordReset' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"enrolledPasswordReset\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.Owner\">{{ \"owner\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Admin\">{{ \"admin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Manager\">{{ \"manager\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.User\">{{ \"user\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Custom\">{{ \"custom\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"groups(u)\"\n                  *ngIf=\"accessGroups\"\n                >\n                  <i class=\"bwi bwi-fw bwi-sitemap\" aria-hidden=\"true\"></i>\n                  {{ \"groups\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"resetPassword(u)\"\n                  *ngIf=\"allowResetPassword(u)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n                  {{ \"resetPassword\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"activate(u)\"\n                  *ngIf=\"u.status === userStatusType.Deactivated\"\n                >\n                  <i class=\"bwi bwi-fw bwi-plus-circle\" aria-hidden=\"true\"></i>\n                  {{ \"activate\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"deactivate(u)\"\n                  *ngIf=\"u.status !== userStatusType.Deactivated\"\n                >\n                  <i class=\"bwi bwi-fw bwi-minus-circle\" aria-hidden=\"true\"></i>\n                  {{ \"deactivate\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #groupsTemplate></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #resetPasswordTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organizationKeysRequest\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"@bitwarden/common/models/request/organizationUserConfirmRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { OrganizationUserBulkResponse } from \"@bitwarden/common/models/response/organizationUserBulkResponse\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/models/response/organizationUserResponse\";\n\nimport { BasePeopleComponent } from \"../../common/base.people.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkDeactivateComponent } from \"./bulk/bulk-deactivate.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { BulkStatusComponent } from \"./bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"./entity-events.component\";\nimport { ResetPasswordComponent } from \"./reset-password.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\nimport { UserGroupsComponent } from \"./user-groups.component\";\n\n@Component({\n  selector: \"app-org-people\",\n  templateUrl: \"people.component.html\",\n})\nexport class PeopleComponent\n  extends BasePeopleComponent<OrganizationUserUserDetailsResponse>\n  implements OnInit\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n  @ViewChild(\"resetPasswordTemplate\", { read: ViewContainerRef, static: true })\n  resetPasswordModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = OrganizationUserType;\n  userStatusType = OrganizationUserStatusType;\n\n  organizationId: string;\n  status: OrganizationUserStatusType = null;\n  accessEvents = false;\n  accessGroups = false;\n  canResetPassword = false; // User permission (admin/custom)\n  orgUseResetPassword = false; // Org plan ability\n  orgHasKeys = false; // Org public/private keys\n  orgResetPasswordPolicyEnabled = false;\n  callingUserType: OrganizationUserType = null;\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    private router: Router,\n    searchService: SearchService,\n    validationService: ValidationService,\n    private policyService: PolicyService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    private syncService: SyncService,\n    stateService: StateService,\n    private organizationService: OrganizationService\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      const organization = await this.organizationService.get(this.organizationId);\n      if (!organization.canManageUsers) {\n        this.router.navigate([\"../collections\"], { relativeTo: this.route });\n        return;\n      }\n      this.accessEvents = organization.useEvents;\n      this.accessGroups = organization.useGroups;\n      this.canResetPassword = organization.canManageUsersPassword;\n      this.orgUseResetPassword = organization.useResetPassword;\n      this.callingUserType = organization.type;\n      this.orgHasKeys = organization.hasPublicAndPrivateKeys;\n\n      // Backfill pub/priv key if necessary\n      if (this.canResetPassword && !this.orgHasKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n        const response = await this.apiService.postOrganizationKeys(this.organizationId, request);\n        if (response != null) {\n          this.orgHasKeys = response.publicKey != null && response.privateKey != null;\n          await this.syncService.fullSync(true); // Replace oganizations with new data\n        } else {\n          throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n        }\n      }\n\n      await this.load();\n\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n        if (qParams.viewEvents != null) {\n          const user = this.users.filter((u) => u.id === qParams.viewEvents);\n          if (user.length > 0 && user[0].status === OrganizationUserStatusType.Confirmed) {\n            this.events(user[0]);\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const resetPasswordPolicy = await this.policyService.getPolicyForOrganization(\n      PolicyType.ResetPassword,\n      this.organizationId\n    );\n    this.orgResetPasswordPolicyEnabled = resetPasswordPolicy?.enabled;\n    super.load();\n  }\n\n  getUsers(): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    return this.apiService.getOrganizationUsers(this.organizationId);\n  }\n\n  deleteUser(id: string): Promise<any> {\n    return this.apiService.deleteOrganizationUser(this.organizationId, id);\n  }\n\n  deactivateUser(id: string): Promise<any> {\n    return this.apiService.deactivateOrganizationUser(this.organizationId, id);\n  }\n\n  activateUser(id: string): Promise<any> {\n    return this.apiService.activateOrganizationUser(this.organizationId, id);\n  }\n\n  reinviteUser(id: string): Promise<any> {\n    return this.apiService.postOrganizationUserReinvite(this.organizationId, id);\n  }\n\n  async confirmUser(\n    user: OrganizationUserUserDetailsResponse,\n    publicKey: Uint8Array\n  ): Promise<any> {\n    const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n    const key = await this.cryptoService.rsaEncrypt(orgKey.key, publicKey.buffer);\n    const request = new OrganizationUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postOrganizationUserConfirm(this.organizationId, user.id, request);\n  }\n\n  allowResetPassword(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    // Hierarchy check\n    let callingUserHasPermission = false;\n\n    switch (this.callingUserType) {\n      case OrganizationUserType.Owner:\n        callingUserHasPermission = true;\n        break;\n      case OrganizationUserType.Admin:\n        callingUserHasPermission = orgUser.type !== OrganizationUserType.Owner;\n        break;\n      case OrganizationUserType.Custom:\n        callingUserHasPermission =\n          orgUser.type !== OrganizationUserType.Owner &&\n          orgUser.type !== OrganizationUserType.Admin;\n        break;\n    }\n\n    // Final\n    return (\n      this.canResetPassword &&\n      callingUserHasPermission &&\n      this.orgUseResetPassword &&\n      this.orgHasKeys &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled &&\n      orgUser.status === OrganizationUserStatusType.Confirmed\n    );\n  }\n\n  showEnrolledStatus(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    return (\n      this.orgUseResetPassword &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled\n    );\n  }\n\n  async edit(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organizationId;\n        comp.organizationUserId = user != null ? user.id : null;\n        comp.usesKeyConnector = user?.usesKeyConnector;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n        comp.onDeactivatedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onActivatedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n\n  async groups(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserGroupsComponent,\n      this.groupsModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organizationId;\n        comp.organizationUserId = user != null ? user.id : null;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkDeactivate() {\n    await this.bulkActivateOrDeactivate(true);\n  }\n\n  async bulkActivate() {\n    await this.bulkActivateOrDeactivate(false);\n  }\n\n  async bulkActivateOrDeactivate(isDeactivating: boolean) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const ref = this.modalService.open(BulkDeactivateComponent, {\n      allowMultipleModals: true,\n      data: {\n        organizationId: this.organizationId,\n        users: this.getCheckedUsers(),\n        isDeactivating: isDeactivating,\n      },\n    });\n\n    await ref.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === OrganizationUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new OrganizationUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyOrganizationUserReinvite(\n        this.organizationId,\n        request\n      );\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async events(user: OrganizationUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.organizationId = this.organizationId;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async resetPassword(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      ResetPasswordComponent,\n      this.resetPasswordModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.email = user != null ? user.email : null;\n        comp.organizationId = this.organizationId;\n        comp.id = user != null ? user.id : null;\n\n        comp.onPasswordReset.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n\n  protected deleteWarningMessage(user: OrganizationUserUserDetailsResponse): string {\n    if (user.usesKeyConnector) {\n      return this.i18nService.t(\"removeUserConfirmationKeyConnector\");\n    }\n\n    return super.deleteWarningMessage(user);\n  }\n\n  private async showBulkStatus(\n    users: OrganizationUserUserDetailsResponse[],\n    filteredUsers: OrganizationUserUserDetailsResponse[],\n    request: Promise<ListResponse<OrganizationUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nexport class PolicyRequest {\n  type: PolicyType;\n  enabled: boolean;\n  data: any;\n}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nexport abstract class BasePolicy {\n  abstract name: string;\n  abstract description: string;\n  abstract type: PolicyType;\n  abstract component: any;\n\n  display(organization: Organization) {\n    return true;\n  }\n}\n\n@Directive()\nexport abstract class BasePolicyComponent implements OnInit {\n  @Input() policyResponse: PolicyResponse;\n  @Input() policy: BasePolicy;\n\n  enabled = new FormControl(false);\n  data: FormGroup = null;\n\n  ngOnInit(): void {\n    this.enabled.setValue(this.policyResponse.enabled);\n\n    if (this.policyResponse.data != null) {\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    this.data.patchValue(this.policyResponse.data ?? {});\n  }\n\n  buildRequestData() {\n    if (this.data != null) {\n      return this.data.value;\n    }\n\n    return null;\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>) {\n    const request = new PolicyRequest();\n    request.enabled = this.enabled.value;\n    request.type = this.policy.type;\n    request.data = this.buildRequestData();\n\n    return Promise.resolve(request);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"policiesEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"policiesEditTitle\">\n          {{ \"editPolicy\" | i18n }} - {{ policy.name | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n\n      <div class=\"modal-body\">\n        <div class=\"modal-body\" *ngIf=\"loading\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div [hidden]=\"loading\">\n          <p>{{ policy.description | i18n }}</p>\n          <ng-template #policyForm></ng-template>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nimport { BasePolicy, BasePolicyComponent } from \"../policies/base-policy.component\";\n\n@Component({\n  selector: \"app-policy-edit\",\n  templateUrl: \"policy-edit.component.html\",\n})\nexport class PolicyEditComponent {\n  @Input() policy: BasePolicy;\n  @Input() organizationId: string;\n  @Input() policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n  @Output() onSavedPolicy = new EventEmitter();\n\n  @ViewChild(\"policyForm\", { read: ViewContainerRef, static: true })\n  policyFormRef: ViewContainerRef;\n\n  policyType = PolicyType;\n  loading = true;\n  enabled = false;\n  formPromise: Promise<any>;\n  defaultTypes: any[];\n  policyComponent: BasePolicyComponent;\n\n  private policyResponse: PolicyResponse;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef,\n    private logService: LogService\n  ) {}\n\n  async ngAfterViewInit() {\n    await this.load();\n    this.loading = false;\n\n    const factory = this.componentFactoryResolver.resolveComponentFactory(this.policy.component);\n    this.policyComponent = this.policyFormRef.createComponent(factory)\n      .instance as BasePolicyComponent;\n    this.policyComponent.policy = this.policy;\n    this.policyComponent.policyResponse = this.policyResponse;\n\n    this.cdr.detectChanges();\n  }\n\n  async load() {\n    try {\n      this.policyResponse = await this.apiService.getPolicy(this.organizationId, this.policy.type);\n    } catch (e) {\n      if (e.statusCode === 404) {\n        this.policyResponse = new PolicyResponse({ Enabled: false });\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  async submit() {\n    let request: PolicyRequest;\n    try {\n      request = await this.policyComponent.buildRequest(this.policiesEnabledMap);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.putPolicy(this.organizationId, this.policy.type, request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedPolicyId\", this.i18nService.t(this.policy.name))\n      );\n      this.onSavedPolicy.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { BasePolicy } from \"../organizations/policies/base-policy.component\";\n\nexport class PolicyListService {\n  private policies: BasePolicy[] = [];\n\n  addPolicies(policies: BasePolicy[]) {\n    this.policies.push(...policies);\n  }\n\n  getPolicies(): BasePolicy[] {\n    return this.policies;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"policies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n  <tbody>\n    <tr *ngFor=\"let p of policies\">\n      <td *ngIf=\"p.display(organization)\">\n        <a href=\"#\" appStopClick (click)=\"edit(p)\">{{ p.name | i18n }}</a>\n        <span bitBadge badgeType=\"success\" *ngIf=\"policiesEnabledMap.get(p.type)\">{{\n          \"on\" | i18n\n        }}</span>\n        <small class=\"text-muted d-block\">{{ p.description | i18n }}</small>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<ng-template #editTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nimport { PolicyListService } from \"../../services/policy-list.service\";\nimport { BasePolicy } from \"../policies/base-policy.component\";\n\nimport { PolicyEditComponent } from \"./policy-edit.component\";\n\n@Component({\n  selector: \"app-org-policies\",\n  templateUrl: \"policies.component.html\",\n})\nexport class PoliciesComponent implements OnInit {\n  @ViewChild(\"editTemplate\", { read: ViewContainerRef, static: true })\n  editModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  policies: BasePolicy[];\n  organization: Organization;\n\n  private orgPolicies: PolicyResponse[];\n  private policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private policyListService: PolicyListService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      if (this.organization == null || !this.organization.usePolicies) {\n        this.router.navigate([\"/organizations\", this.organizationId]);\n        return;\n      }\n\n      this.policies = this.policyListService.getPolicies();\n\n      await this.load();\n\n      // Handle policies component launch from Event message\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        if (qParams.policyId != null) {\n          const policyIdFromEvents: string = qParams.policyId;\n          for (const orgPolicy of this.orgPolicies) {\n            if (orgPolicy.id === policyIdFromEvents) {\n              for (let i = 0; i < this.policies.length; i++) {\n                if (this.policies[i].type === orgPolicy.type) {\n                  this.edit(this.policies[i]);\n                  break;\n                }\n              }\n              break;\n            }\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getPolicies(this.organizationId);\n    this.orgPolicies = response.data != null && response.data.length > 0 ? response.data : [];\n    this.orgPolicies.forEach((op) => {\n      this.policiesEnabledMap.set(op.type, op.enabled);\n    });\n\n    this.loading = false;\n  }\n\n  async edit(policy: BasePolicy) {\n    const [modal] = await this.modalService.openViewRef(\n      PolicyEditComponent,\n      this.editModalRef,\n      (comp) => {\n        comp.policy = policy;\n        comp.organizationId = this.organizationId;\n        comp.policiesEnabledMap = this.policiesEnabledMap;\n        comp.onSavedPolicy.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n}\n","import { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationUpdateRequest {\n  name: string;\n  identifier: string;\n  businessName: string;\n  billingEmail: string;\n  keys: OrganizationKeysRequest;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"apiKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"apiKeyTitle\">{{ apiKeyTitle | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ apiKeyDescription | i18n }}</p>\n        <app-user-verification\n          [(ngModel)]=\"masterPassword\"\n          ngDefaultControl\n          name=\"secret\"\n          *ngIf=\"!clientSecret\"\n        >\n        </app-user-verification>\n\n        <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{ apiKeyWarning | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          title=\"{{ 'oauth2ClientCredentials' | i18n }}\"\n          icon=\"bwi bwi-key\"\n          *ngIf=\"clientSecret\"\n        >\n          <p class=\"mb-1\">\n            <strong>client_id:</strong><br />\n            <code>{{ clientId }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>client_secret:</strong><br />\n            <code>{{ clientSecret }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>scope:</strong><br />\n            <code>{{ scope }}</code>\n          </p>\n          <p class=\"mb-0\">\n            <strong>grant_type:</strong><br />\n            <code>{{ grantType }}</code>\n          </p>\n        </app-callout>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!clientSecret\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (isRotation ? \"rotateApiKey\" : \"viewApiKey\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/apiKeyResponse\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-api-key\",\n  templateUrl: \"api-key.component.html\",\n})\nexport class ApiKeyComponent {\n  keyType: string;\n  isRotation: boolean;\n  postKey: (entityId: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  entityId: string;\n  scope: string;\n  grantType: string;\n  apiKeyTitle: string;\n  apiKeyWarning: string;\n  apiKeyDescription: string;\n\n  masterPassword: Verification;\n  formPromise: Promise<ApiKeyResponse>;\n  clientId: string;\n  clientSecret: string;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.postKey(this.entityId, request));\n      const response = await this.formPromise;\n      this.clientSecret = response.apiKey;\n      this.clientId = `${this.keyType}.${this.entityId}`;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-purge-vault\",\n  templateUrl: \"purge-vault.component.html\",\n})\nexport class PurgeVaultComponent {\n  @Input() organizationId?: string = null;\n\n  masterPassword: Verification;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private router: Router,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postPurgeCiphers(request, this.organizationId));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"vaultPurged\"));\n      if (this.organizationId != null) {\n        this.router.navigate([\"organizations\", this.organizationId, \"vault\"]);\n      } else {\n        this.router.navigate([\"vault\"]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"purgeVaultTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"purgeVaultTitle\">{{ \"purgeVault\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ (organizationId ? \"purgeOrgVaultDesc\" : \"purgeVaultDesc\") | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"purgeVaultWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"purgeVault\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","export class TaxInfoUpdateRequest {\n  country: string;\n  postalCode: string;\n}\n","import { TaxInfoUpdateRequest } from \"./taxInfoUpdateRequest\";\n\nexport class OrganizationTaxInfoUpdateRequest extends TaxInfoUpdateRequest {\n  taxId: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n}\n","<div class=\"row\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressCountry\">{{ \"country\" | i18n }}</label>\n      <select\n        id=\"addressCountry\"\n        class=\"form-control\"\n        [(ngModel)]=\"taxInfo.country\"\n        required\n        name=\"addressCountry\"\n        autocomplete=\"country\"\n        (change)=\"changeCountry()\"\n      >\n        <option value=\"\">-- Select --</option>\n        <option value=\"US\">United States</option>\n        <option value=\"CN\">China</option>\n        <option value=\"FR\">France</option>\n        <option value=\"DE\">Germany</option>\n        <option value=\"CA\">Canada</option>\n        <option value=\"GB\">United Kingdom</option>\n        <option value=\"AU\">Australia</option>\n        <option value=\"IN\">India</option>\n        <option value=\"-\" disabled></option>\n        <option value=\"AF\">Afghanistan</option>\n        <option value=\"AX\">Åland Islands</option>\n        <option value=\"AL\">Albania</option>\n        <option value=\"DZ\">Algeria</option>\n        <option value=\"AS\">American Samoa</option>\n        <option value=\"AD\">Andorra</option>\n        <option value=\"AO\">Angola</option>\n        <option value=\"AI\">Anguilla</option>\n        <option value=\"AQ\">Antarctica</option>\n        <option value=\"AG\">Antigua and Barbuda</option>\n        <option value=\"AR\">Argentina</option>\n        <option value=\"AM\">Armenia</option>\n        <option value=\"AW\">Aruba</option>\n        <option value=\"AT\">Austria</option>\n        <option value=\"AZ\">Azerbaijan</option>\n        <option value=\"BS\">Bahamas</option>\n        <option value=\"BH\">Bahrain</option>\n        <option value=\"BD\">Bangladesh</option>\n        <option value=\"BB\">Barbados</option>\n        <option value=\"BY\">Belarus</option>\n        <option value=\"BE\">Belgium</option>\n        <option value=\"BZ\">Belize</option>\n        <option value=\"BJ\">Benin</option>\n        <option value=\"BM\">Bermuda</option>\n        <option value=\"BT\">Bhutan</option>\n        <option value=\"BO\">Bolivia, Plurinational State of</option>\n        <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\n        <option value=\"BA\">Bosnia and Herzegovina</option>\n        <option value=\"BW\">Botswana</option>\n        <option value=\"BV\">Bouvet Island</option>\n        <option value=\"BR\">Brazil</option>\n        <option value=\"IO\">British Indian Ocean Territory</option>\n        <option value=\"BN\">Brunei Darussalam</option>\n        <option value=\"BG\">Bulgaria</option>\n        <option value=\"BF\">Burkina Faso</option>\n        <option value=\"BI\">Burundi</option>\n        <option value=\"KH\">Cambodia</option>\n        <option value=\"CM\">Cameroon</option>\n        <option value=\"CV\">Cape Verde</option>\n        <option value=\"KY\">Cayman Islands</option>\n        <option value=\"CF\">Central African Republic</option>\n        <option value=\"TD\">Chad</option>\n        <option value=\"CL\">Chile</option>\n        <option value=\"CX\">Christmas Island</option>\n        <option value=\"CC\">Cocos (Keeling) Islands</option>\n        <option value=\"CO\">Colombia</option>\n        <option value=\"KM\">Comoros</option>\n        <option value=\"CG\">Congo</option>\n        <option value=\"CD\">Congo, the Democratic Republic of the</option>\n        <option value=\"CK\">Cook Islands</option>\n        <option value=\"CR\">Costa Rica</option>\n        <option value=\"CI\">Côte d'Ivoire</option>\n        <option value=\"HR\">Croatia</option>\n        <option value=\"CU\">Cuba</option>\n        <option value=\"CW\">Curaçao</option>\n        <option value=\"CY\">Cyprus</option>\n        <option value=\"CZ\">Czech Republic</option>\n        <option value=\"DK\">Denmark</option>\n        <option value=\"DJ\">Djibouti</option>\n        <option value=\"DM\">Dominica</option>\n        <option value=\"DO\">Dominican Republic</option>\n        <option value=\"EC\">Ecuador</option>\n        <option value=\"EG\">Egypt</option>\n        <option value=\"SV\">El Salvador</option>\n        <option value=\"GQ\">Equatorial Guinea</option>\n        <option value=\"ER\">Eritrea</option>\n        <option value=\"EE\">Estonia</option>\n        <option value=\"ET\">Ethiopia</option>\n        <option value=\"FK\">Falkland Islands (Malvinas)</option>\n        <option value=\"FO\">Faroe Islands</option>\n        <option value=\"FJ\">Fiji</option>\n        <option value=\"FI\">Finland</option>\n        <option value=\"GF\">French Guiana</option>\n        <option value=\"PF\">French Polynesia</option>\n        <option value=\"TF\">French Southern Territories</option>\n        <option value=\"GA\">Gabon</option>\n        <option value=\"GM\">Gambia</option>\n        <option value=\"GE\">Georgia</option>\n        <option value=\"GH\">Ghana</option>\n        <option value=\"GI\">Gibraltar</option>\n        <option value=\"GR\">Greece</option>\n        <option value=\"GL\">Greenland</option>\n        <option value=\"GD\">Grenada</option>\n        <option value=\"GP\">Guadeloupe</option>\n        <option value=\"GU\">Guam</option>\n        <option value=\"GT\">Guatemala</option>\n        <option value=\"GG\">Guernsey</option>\n        <option value=\"GN\">Guinea</option>\n        <option value=\"GW\">Guinea-Bissau</option>\n        <option value=\"GY\">Guyana</option>\n        <option value=\"HT\">Haiti</option>\n        <option value=\"HM\">Heard Island and McDonald Islands</option>\n        <option value=\"VA\">Holy See (Vatican City State)</option>\n        <option value=\"HN\">Honduras</option>\n        <option value=\"HK\">Hong Kong</option>\n        <option value=\"HU\">Hungary</option>\n        <option value=\"IS\">Iceland</option>\n        <option value=\"ID\">Indonesia</option>\n        <option value=\"IR\">Iran, Islamic Republic of</option>\n        <option value=\"IQ\">Iraq</option>\n        <option value=\"IE\">Ireland</option>\n        <option value=\"IM\">Isle of Man</option>\n        <option value=\"IL\">Israel</option>\n        <option value=\"IT\">Italy</option>\n        <option value=\"JM\">Jamaica</option>\n        <option value=\"JP\">Japan</option>\n        <option value=\"JE\">Jersey</option>\n        <option value=\"JO\">Jordan</option>\n        <option value=\"KZ\">Kazakhstan</option>\n        <option value=\"KE\">Kenya</option>\n        <option value=\"KI\">Kiribati</option>\n        <option value=\"KP\">Korea, Democratic People's Republic of</option>\n        <option value=\"KR\">Korea, Republic of</option>\n        <option value=\"KW\">Kuwait</option>\n        <option value=\"KG\">Kyrgyzstan</option>\n        <option value=\"LA\">Lao People's Democratic Republic</option>\n        <option value=\"LV\">Latvia</option>\n        <option value=\"LB\">Lebanon</option>\n        <option value=\"LS\">Lesotho</option>\n        <option value=\"LR\">Liberia</option>\n        <option value=\"LY\">Libya</option>\n        <option value=\"LI\">Liechtenstein</option>\n        <option value=\"LT\">Lithuania</option>\n        <option value=\"LU\">Luxembourg</option>\n        <option value=\"MO\">Macao</option>\n        <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option>\n        <option value=\"MG\">Madagascar</option>\n        <option value=\"MW\">Malawi</option>\n        <option value=\"MY\">Malaysia</option>\n        <option value=\"MV\">Maldives</option>\n        <option value=\"ML\">Mali</option>\n        <option value=\"MT\">Malta</option>\n        <option value=\"MH\">Marshall Islands</option>\n        <option value=\"MQ\">Martinique</option>\n        <option value=\"MR\">Mauritania</option>\n        <option value=\"MU\">Mauritius</option>\n        <option value=\"YT\">Mayotte</option>\n        <option value=\"MX\">Mexico</option>\n        <option value=\"FM\">Micronesia, Federated States of</option>\n        <option value=\"MD\">Moldova, Republic of</option>\n        <option value=\"MC\">Monaco</option>\n        <option value=\"MN\">Mongolia</option>\n        <option value=\"ME\">Montenegro</option>\n        <option value=\"MS\">Montserrat</option>\n        <option value=\"MA\">Morocco</option>\n        <option value=\"MZ\">Mozambique</option>\n        <option value=\"MM\">Myanmar</option>\n        <option value=\"NA\">Namibia</option>\n        <option value=\"NR\">Nauru</option>\n        <option value=\"NP\">Nepal</option>\n        <option value=\"NL\">Netherlands</option>\n        <option value=\"NC\">New Caledonia</option>\n        <option value=\"NZ\">New Zealand</option>\n        <option value=\"NI\">Nicaragua</option>\n        <option value=\"NE\">Niger</option>\n        <option value=\"NG\">Nigeria</option>\n        <option value=\"NU\">Niue</option>\n        <option value=\"NF\">Norfolk Island</option>\n        <option value=\"MP\">Northern Mariana Islands</option>\n        <option value=\"NO\">Norway</option>\n        <option value=\"OM\">Oman</option>\n        <option value=\"PK\">Pakistan</option>\n        <option value=\"PW\">Palau</option>\n        <option value=\"PS\">Palestinian Territory, Occupied</option>\n        <option value=\"PA\">Panama</option>\n        <option value=\"PG\">Papua New Guinea</option>\n        <option value=\"PY\">Paraguay</option>\n        <option value=\"PE\">Peru</option>\n        <option value=\"PH\">Philippines</option>\n        <option value=\"PN\">Pitcairn</option>\n        <option value=\"PL\">Poland</option>\n        <option value=\"PT\">Portugal</option>\n        <option value=\"PR\">Puerto Rico</option>\n        <option value=\"QA\">Qatar</option>\n        <option value=\"RE\">Réunion</option>\n        <option value=\"RO\">Romania</option>\n        <option value=\"RU\">Russian Federation</option>\n        <option value=\"RW\">Rwanda</option>\n        <option value=\"BL\">Saint Barthélemy</option>\n        <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option>\n        <option value=\"KN\">Saint Kitts and Nevis</option>\n        <option value=\"LC\">Saint Lucia</option>\n        <option value=\"MF\">Saint Martin (French part)</option>\n        <option value=\"PM\">Saint Pierre and Miquelon</option>\n        <option value=\"VC\">Saint Vincent and the Grenadines</option>\n        <option value=\"WS\">Samoa</option>\n        <option value=\"SM\">San Marino</option>\n        <option value=\"ST\">Sao Tome and Principe</option>\n        <option value=\"SA\">Saudi Arabia</option>\n        <option value=\"SN\">Senegal</option>\n        <option value=\"RS\">Serbia</option>\n        <option value=\"SC\">Seychelles</option>\n        <option value=\"SL\">Sierra Leone</option>\n        <option value=\"SG\">Singapore</option>\n        <option value=\"SX\">Sint Maarten (Dutch part)</option>\n        <option value=\"SK\">Slovakia</option>\n        <option value=\"SI\">Slovenia</option>\n        <option value=\"SB\">Solomon Islands</option>\n        <option value=\"SO\">Somalia</option>\n        <option value=\"ZA\">South Africa</option>\n        <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\n        <option value=\"SS\">South Sudan</option>\n        <option value=\"ES\">Spain</option>\n        <option value=\"LK\">Sri Lanka</option>\n        <option value=\"SD\">Sudan</option>\n        <option value=\"SR\">Suriname</option>\n        <option value=\"SJ\">Svalbard and Jan Mayen</option>\n        <option value=\"SZ\">Swaziland</option>\n        <option value=\"SE\">Sweden</option>\n        <option value=\"CH\">Switzerland</option>\n        <option value=\"SY\">Syrian Arab Republic</option>\n        <option value=\"TW\">Taiwan</option>\n        <option value=\"TJ\">Tajikistan</option>\n        <option value=\"TZ\">Tanzania, United Republic of</option>\n        <option value=\"TH\">Thailand</option>\n        <option value=\"TL\">Timor-Leste</option>\n        <option value=\"TG\">Togo</option>\n        <option value=\"TK\">Tokelau</option>\n        <option value=\"TO\">Tonga</option>\n        <option value=\"TT\">Trinidad and Tobago</option>\n        <option value=\"TN\">Tunisia</option>\n        <option value=\"TR\">Turkey</option>\n        <option value=\"TM\">Turkmenistan</option>\n        <option value=\"TC\">Turks and Caicos Islands</option>\n        <option value=\"TV\">Tuvalu</option>\n        <option value=\"UG\">Uganda</option>\n        <option value=\"UA\">Ukraine</option>\n        <option value=\"AE\">United Arab Emirates</option>\n        <option value=\"UM\">United States Minor Outlying Islands</option>\n        <option value=\"UY\">Uruguay</option>\n        <option value=\"UZ\">Uzbekistan</option>\n        <option value=\"VU\">Vanuatu</option>\n        <option value=\"VE\">Venezuela, Bolivarian Republic of</option>\n        <option value=\"VN\">Viet Nam</option>\n        <option value=\"VG\">Virgin Islands, British</option>\n        <option value=\"VI\">Virgin Islands, U.S.</option>\n        <option value=\"WF\">Wallis and Futuna</option>\n        <option value=\"EH\">Western Sahara</option>\n        <option value=\"YE\">Yemen</option>\n        <option value=\"ZM\">Zambia</option>\n        <option value=\"ZW\">Zimbabwe</option>\n      </select>\n    </div>\n  </div>\n  <div class=\"col-3\">\n    <div class=\"form-group\">\n      <label for=\"addressPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n      <input\n        id=\"addressPostalCode\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressPostalCode\"\n        [(ngModel)]=\"taxInfo.postalCode\"\n        [required]=\"taxInfo.country === 'US'\"\n        autocomplete=\"postal-code\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\" *ngIf=\"organizationId && taxInfo.country !== 'US'\">\n    <div class=\"form-group form-check\">\n      <input\n        class=\"form-check-input\"\n        id=\"addressIncludeTaxId\"\n        name=\"addressIncludeTaxId\"\n        type=\"checkbox\"\n        [(ngModel)]=\"taxInfo.includeTaxId\"\n      />\n      <label class=\"form-check-label\" for=\"addressIncludeTaxId\">{{ \"includeVAT\" | i18n }}</label>\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"taxId\">{{ \"taxIdNumber\" | i18n }}</label>\n      <input id=\"taxId\" class=\"form-control\" type=\"text\" name=\"taxId\" [(ngModel)]=\"taxInfo.taxId\" />\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine1\">{{ \"address1\" | i18n }}</label>\n      <input\n        id=\"addressLine1\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine1\"\n        [(ngModel)]=\"taxInfo.line1\"\n        autocomplete=\"address-line1\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine2\">{{ \"address2\" | i18n }}</label>\n      <input\n        id=\"addressLine2\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine2\"\n        [(ngModel)]=\"taxInfo.line2\"\n        autocomplete=\"address-line2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressCity\">{{ \"cityTown\" | i18n }}</label>\n      <input\n        id=\"addressCity\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressCity\"\n        [(ngModel)]=\"taxInfo.city\"\n        autocomplete=\"address-level2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressState\">{{ \"stateProvince\" | i18n }}</label>\n      <input\n        id=\"addressState\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressState\"\n        [(ngModel)]=\"taxInfo.state\"\n        autocomplete=\"address-level1\"\n      />\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationTaxInfoUpdateRequest } from \"@bitwarden/common/models/request/organizationTaxInfoUpdateRequest\";\nimport { TaxInfoUpdateRequest } from \"@bitwarden/common/models/request/taxInfoUpdateRequest\";\nimport { TaxRateResponse } from \"@bitwarden/common/models/response/taxRateResponse\";\n\n@Component({\n  selector: \"app-tax-info\",\n  templateUrl: \"tax-info.component.html\",\n})\nexport class TaxInfoComponent {\n  @Output() onCountryChanged = new EventEmitter();\n\n  loading = true;\n  organizationId: string;\n  taxInfo: any = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  taxRates: TaxRateResponse[];\n\n  private pristine: any = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      if (this.organizationId) {\n        try {\n          const taxInfo = await this.apiService.getOrganizationTaxInfo(this.organizationId);\n          if (taxInfo) {\n            this.taxInfo.taxId = taxInfo.taxId;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.line1 = taxInfo.line1;\n            this.taxInfo.line2 = taxInfo.line2;\n            this.taxInfo.city = taxInfo.city;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n            this.taxInfo.includeTaxId =\n              this.taxInfo.country !== \"US\" &&\n              (!!taxInfo.taxId ||\n                !!taxInfo.line1 ||\n                !!taxInfo.line2 ||\n                !!taxInfo.city ||\n                !!taxInfo.state);\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      } else {\n        try {\n          const taxInfo = await this.apiService.getTaxInfo();\n          if (taxInfo) {\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.pristine = Object.assign({}, this.taxInfo);\n      // If not the default (US) then trigger onCountryChanged\n      if (this.taxInfo.country !== \"US\") {\n        this.onCountryChanged.emit();\n      }\n    });\n\n    try {\n      const taxRates = await this.apiService.getTaxRates();\n      if (taxRates) {\n        this.taxRates = taxRates.data;\n      }\n    } catch (e) {\n      this.logService.error(e);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  get taxRate() {\n    if (this.taxRates != null) {\n      const localTaxRate = this.taxRates.find(\n        (x) => x.country === this.taxInfo.country && x.postalCode === this.taxInfo.postalCode\n      );\n      return localTaxRate?.rate ?? null;\n    }\n  }\n\n  getTaxInfoRequest(): TaxInfoUpdateRequest {\n    if (this.organizationId) {\n      const request = new OrganizationTaxInfoUpdateRequest();\n      request.taxId = this.taxInfo.taxId;\n      request.state = this.taxInfo.state;\n      request.line1 = this.taxInfo.line1;\n      request.line2 = this.taxInfo.line2;\n      request.city = this.taxInfo.city;\n      request.state = this.taxInfo.state;\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    } else {\n      const request = new TaxInfoUpdateRequest();\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    }\n  }\n\n  submitTaxInfo(): Promise<any> {\n    if (!this.hasChanged()) {\n      return new Promise<void>((resolve) => {\n        resolve();\n      });\n    }\n    const request = this.getTaxInfoRequest();\n    return this.organizationId\n      ? this.apiService.putOrganizationTaxInfo(\n          this.organizationId,\n          request as OrganizationTaxInfoUpdateRequest\n        )\n      : this.apiService.putTaxInfo(request);\n  }\n\n  changeCountry() {\n    if (this.taxInfo.country === \"US\") {\n      this.taxInfo.includeTaxId = false;\n      this.taxInfo.taxId = null;\n      this.taxInfo.line1 = null;\n      this.taxInfo.line2 = null;\n      this.taxInfo.city = null;\n      this.taxInfo.state = null;\n    }\n    this.onCountryChanged.emit();\n  }\n\n  private hasChanged(): boolean {\n    for (const key in this.taxInfo) {\n      // eslint-disable-next-line\n      if (this.pristine.hasOwnProperty(key) && this.pristine[key] !== this.taxInfo[key]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteOrganizationTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      *ngIf=\"loaded\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteOrganizationTitle\">{{ \"deleteOrganization\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{\n          \"deletingOrganizationIsPermanentWarning\" | i18n: organizationName\n        }}</app-callout>\n        <p id=\"organizationDeleteDescription\">\n          <ng-container\n            *ngIf=\"\n              deleteOrganizationRequestType === 'InvalidFamiliesForEnterprise';\n              else regularDelete\n            \"\n          >\n            {{ \"orgCreatedSponsorshipInvalid\" | i18n }}\n          </ng-container>\n          <ng-template #regularDelete>\n            <ng-container *ngIf=\"organizationContentSummary.totalItemCount > 0\">\n              {{ \"deletingOrganizationContentWarning\" | i18n: organizationName }}\n              <ul>\n                <li *ngFor=\"let type of organizationContentSummary.itemCountByType\">\n                  {{ type.count }} {{ type.localizationKey | i18n }}\n                </li>\n              </ul>\n              {{ \"deletingOrganizationActiveUserAccountsWarning\" | i18n }}\n            </ng-container>\n          </ng-template>\n        </p>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteOrganization\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nclass CountBasedLocalizationKey {\n  singular: string;\n  plural: string;\n\n  getKey(count: number) {\n    return count == 1 ? this.singular : this.plural;\n  }\n\n  constructor(singular: string, plural: string) {\n    this.singular = singular;\n    this.plural = plural;\n  }\n}\n\nclass OrganizationContentSummaryItem {\n  count: number;\n  get localizationKey(): string {\n    return this.localizationKeyOptions.getKey(this.count);\n  }\n  private localizationKeyOptions: CountBasedLocalizationKey;\n  constructor(count: number, localizationKeyOptions: CountBasedLocalizationKey) {\n    this.count = count;\n    this.localizationKeyOptions = localizationKeyOptions;\n  }\n}\n\nclass OrganizationContentSummary {\n  totalItemCount = 0;\n  itemCountByType: OrganizationContentSummaryItem[] = [];\n}\n\n@Component({\n  selector: \"app-delete-organization\",\n  templateUrl: \"delete-organization.component.html\",\n})\nexport class DeleteOrganizationComponent implements OnInit {\n  organizationId: string;\n  loaded: boolean;\n  deleteOrganizationRequestType: \"InvalidFamiliesForEnterprise\" | \"RegularDelete\" = \"RegularDelete\";\n  organizationName: string;\n  organizationContentSummary: OrganizationContentSummary = new OrganizationContentSummary();\n  @Output() onSuccess: EventEmitter<any> = new EventEmitter();\n\n  masterPassword: Verification;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService,\n    private cipherService: CipherService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    await this.load();\n  }\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.deleteOrganization(this.organizationId, request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"organizationDeleted\"),\n        this.i18nService.t(\"organizationDeletedDesc\")\n      );\n      this.onSuccess.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async load() {\n    this.organizationName = (await this.organizationService.get(this.organizationId)).name;\n    this.organizationContentSummary = await this.buildOrganizationContentSummary();\n    this.loaded = true;\n  }\n\n  private async buildOrganizationContentSummary(): Promise<OrganizationContentSummary> {\n    const organizationContentSummary = new OrganizationContentSummary();\n    const organizationItems = (\n      await this.cipherService.getAllFromApiForOrganization(this.organizationId)\n    ).filter((item) => item.deletedDate == null);\n\n    if (organizationItems.length < 1) {\n      return organizationContentSummary;\n    }\n\n    organizationContentSummary.totalItemCount = organizationItems.length;\n    for (const cipherType of Utils.iterateEnum(CipherType)) {\n      const count = this.getOrganizationItemCountByType(organizationItems, cipherType);\n      if (count > 0) {\n        organizationContentSummary.itemCountByType.push(\n          new OrganizationContentSummaryItem(\n            count,\n            this.getOrganizationItemLocalizationKeysByType(CipherType[cipherType])\n          )\n        );\n      }\n    }\n\n    return organizationContentSummary;\n  }\n\n  private getOrganizationItemCountByType(items: CipherView[], type: CipherType) {\n    return items.filter((item) => item.type == type).length;\n  }\n\n  private getOrganizationItemLocalizationKeysByType(type: string): CountBasedLocalizationKey {\n    return new CountBasedLocalizationKey(`type${type}`, `type${type}Plural`);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myOrganization\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"organizationName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"org.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"org.billingEmail\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"businessName\">{{ \"businessName\" | i18n }}</label>\n        <input\n          id=\"businessName\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BusinessName\"\n          [(ngModel)]=\"org.businessName\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"identifier\">{{ \"identifier\" | i18n }}</label>\n        <input\n          id=\"identifier\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Identifier\"\n          [(ngModel)]=\"org.identifier\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <app-avatar data=\"{{ org.name }}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar>\n    </div>\n  </div>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"save\" | i18n }}\n  </bit-submit-button>\n</form>\n<ng-container *ngIf=\"canUseApi\">\n  <div class=\"secondary-header border-0 mb-0\">\n    <h1>{{ \"apiKey\" | i18n }}</h1>\n  </div>\n  <p>\n    {{ \"apiKeyDesc\" | i18n }}\n    <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\n      {{ \"learnMore\" | i18n }}\n    </a>\n  </p>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">\n    {{ \"viewApiKey\" | i18n }}\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">\n    {{ \"rotateApiKey\" | i18n }}\n  </button>\n</ng-container>\n<div class=\"secondary-header border-0 mb-0\">\n  <h1>{{ \"taxInformation\" | i18n }}</h1>\n</div>\n<p>{{ \"taxInformationDesc\" | i18n }}</p>\n<div *ngIf=\"!org || loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #formTax\n  (ngSubmit)=\"submitTaxInfo()\"\n  [appApiAction]=\"taxFormPromise\"\n  ngNativeValidate\n>\n  <app-tax-info></app-tax-info>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"formTax.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteOrganization()\">\n      {{ \"deleteOrganization\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n<ng-template #purgeOrganizationTemplate></ng-template>\n<ng-template #apiKeyTemplate></ng-template>\n<ng-template #rotateApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organizationKeysRequest\";\nimport { OrganizationUpdateRequest } from \"@bitwarden/common/models/request/organizationUpdateRequest\";\nimport { OrganizationResponse } from \"@bitwarden/common/models/response/organizationResponse\";\n\nimport { ApiKeyComponent } from \"../../settings/api-key.component\";\nimport { PurgeVaultComponent } from \"../../settings/purge-vault.component\";\nimport { TaxInfoComponent } from \"../../settings/tax-info.component\";\n\nimport { DeleteOrganizationComponent } from \"./delete-organization.component\";\n\n@Component({\n  selector: \"app-org-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n  @ViewChild(\"purgeOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"apiKeyTemplate\", { read: ViewContainerRef, static: true })\n  apiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateApiKeyModalRef: ViewContainerRef;\n  @ViewChild(TaxInfoComponent) taxInfo: TaxInfoComponent;\n\n  selfHosted = false;\n  canManageBilling = true;\n  loading = true;\n  canUseApi = false;\n  org: OrganizationResponse;\n  formPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  private organizationId: string;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private router: Router,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.canManageBilling = (\n        await this.organizationService.get(this.organizationId)\n      ).canManageBilling;\n      try {\n        this.org = await this.apiService.getOrganization(this.organizationId);\n        this.canUseApi = this.org.useApi;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationUpdateRequest();\n      request.name = this.org.name;\n      request.businessName = this.org.businessName;\n      request.billingEmail = this.org.billingEmail;\n      request.identifier = this.org.identifier;\n\n      // Backfill pub/priv key if necessary\n      if (!this.org.hasPublicAndPrivateKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n      }\n\n      this.formPromise = this.apiService.putOrganization(this.organizationId, request).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"organizationUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async submitTaxInfo() {\n    this.taxFormPromise = this.taxInfo.submitTaxInfo();\n    await this.taxFormPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"taxInfoUpdated\"));\n  }\n\n  async deleteOrganization() {\n    await this.modalService.openViewRef(\n      DeleteOrganizationComponent,\n      this.deleteModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.onSuccess.subscribe(() => {\n          this.router.navigate([\"/\"]);\n        });\n      }\n    );\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef, (comp) => {\n      comp.organizationId = this.organizationId;\n    });\n  }\n\n  async viewApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.apiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.entityId = this.organizationId;\n      comp.postKey = this.apiService.postOrganizationApiKey.bind(this.apiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyDesc\";\n    });\n  }\n\n  async rotateApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateApiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.isRotation = true;\n      comp.entityId = this.organizationId;\n      comp.postKey = this.apiService.postOrganizationRotateApiKey.bind(this.apiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","export enum PaymentMethodType {\n  Card = 0,\n  BankAccount = 1,\n  PayPal = 2,\n  BitPay = 3,\n  Credit = 4,\n  WireTransfer = 5,\n  AppleInApp = 6,\n  GoogleInApp = 7,\n  Check = 8,\n}\n","export enum TransactionType {\n  Charge = 0,\n  Credit = 1,\n  PromotionalCredit = 2,\n  ReferralCredit = 3,\n  Refund = 4,\n}\n","export class VerifyBankRequest {\n  amount1: number;\n  amount2: number;\n}\n","export class BitPayInvoiceRequest {\n  userId: string;\n  organizationId: string;\n  credit: boolean;\n  amount: number;\n  returnUrl: string;\n  name: string;\n  email: string;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"addCredit\" | i18n }}</h3>\n    <div class=\"mb-4 text-lg\" *ngIf=\"showOptions\">\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-paypal\"\n          [value]=\"paymentMethodType.PayPal\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-paypal\">\n          <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n        >\n      </div>\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-bitcoin\"\n          [value]=\"paymentMethodType.BitPay\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-bitcoin\">\n          <i class=\"bwi bwi-fw bwi-bitcoin\" aria-hidden=\"true\"></i> Bitcoin</label\n        >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"row\">\n        <div class=\"col-4\">\n          <label for=\"creditAmount\">{{ \"amount\" | i18n }}</label>\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\"><span class=\"input-group-text\">$USD</span></div>\n            <input\n              id=\"creditAmount\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"CreditAmount\"\n              [(ngModel)]=\"creditAmount\"\n              (blur)=\"formatAmount()\"\n              required\n            />\n          </div>\n        </div>\n      </div>\n      <small class=\"form-text text-muted\">{{ \"creditDelayed\" | i18n }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading || ppLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n<form #ppButtonForm action=\"{{ ppButtonFormAction }}\" method=\"post\" target=\"_top\">\n  <input type=\"hidden\" name=\"cmd\" value=\"_xclick\" />\n  <input type=\"hidden\" name=\"business\" value=\"{{ ppButtonBusinessId }}\" />\n  <input type=\"hidden\" name=\"button_subtype\" value=\"services\" />\n  <input type=\"hidden\" name=\"no_note\" value=\"1\" />\n  <input type=\"hidden\" name=\"no_shipping\" value=\"1\" />\n  <input type=\"hidden\" name=\"rm\" value=\"1\" />\n  <input type=\"hidden\" name=\"return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"cancel_return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\n  <input type=\"hidden\" name=\"image_url\" value=\"https://bitwarden.com/images/paypal-banner.png\" />\n  <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF:btn_buynow_LG.gif:NonHosted\" />\n  <input type=\"hidden\" name=\"amount\" value=\"{{ creditAmount }}\" />\n  <input type=\"hidden\" name=\"custom\" value=\"{{ ppButtonCustomField }}\" />\n  <input type=\"hidden\" name=\"item_name\" value=\"Bitwarden Account Credit\" />\n  <input type=\"hidden\" name=\"item_number\" value=\"{{ subject }}\" />\n</form>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { PayPalConfig } from \"@bitwarden/common/abstractions/environment.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { BitPayInvoiceRequest } from \"@bitwarden/common/models/request/bitPayInvoiceRequest\";\n\n@Component({\n  selector: \"app-add-credit\",\n  templateUrl: \"add-credit.component.html\",\n})\nexport class AddCreditComponent implements OnInit {\n  @Input() creditAmount: string;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.PayPal;\n  @Input() organizationId: string;\n  @Output() onAdded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(\"ppButtonForm\", { read: ElementRef, static: true }) ppButtonFormRef: ElementRef;\n\n  paymentMethodType = PaymentMethodType;\n  ppButtonFormAction: string;\n  ppButtonBusinessId: string;\n  ppButtonCustomField: string;\n  ppLoading = false;\n  subject: string;\n  returnUrl: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private name: string;\n  private email: string;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    const payPalConfig = process.env.PAYPAL_CONFIG as PayPalConfig;\n    this.ppButtonFormAction = payPalConfig.buttonAction;\n    this.ppButtonBusinessId = payPalConfig.businessId;\n  }\n\n  async ngOnInit() {\n    if (this.organizationId != null) {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"20.00\";\n      }\n      this.ppButtonCustomField = \"organization_id:\" + this.organizationId;\n      const org = await this.organizationService.get(this.organizationId);\n      if (org != null) {\n        this.subject = org.name;\n        this.name = org.name;\n      }\n    } else {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"10.00\";\n      }\n      this.userId = await this.stateService.getUserId();\n      this.subject = await this.stateService.getEmail();\n      this.email = this.subject;\n      this.ppButtonCustomField = \"user_id:\" + this.userId;\n    }\n    this.ppButtonCustomField += \",account_credit:1\";\n    this.returnUrl = window.location.href;\n  }\n\n  async submit() {\n    if (this.creditAmount == null || this.creditAmount === \"\") {\n      return;\n    }\n\n    if (this.method === PaymentMethodType.PayPal) {\n      this.ppButtonFormRef.nativeElement.submit();\n      this.ppLoading = true;\n      return;\n    }\n    if (this.method === PaymentMethodType.BitPay) {\n      try {\n        const req = new BitPayInvoiceRequest();\n        req.email = this.email;\n        req.name = this.name;\n        req.credit = true;\n        req.amount = this.creditAmountNumber;\n        req.organizationId = this.organizationId;\n        req.userId = this.userId;\n        req.returnUrl = this.returnUrl;\n        this.formPromise = this.apiService.postBitPayInvoice(req);\n        const bitPayUrl: string = await this.formPromise;\n        this.platformUtilsService.launchUri(bitPayUrl);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      return;\n    }\n    try {\n      this.onAdded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  formatAmount() {\n    try {\n      if (this.creditAmount != null && this.creditAmount !== \"\") {\n        const floatAmount = Math.abs(parseFloat(this.creditAmount));\n        if (floatAmount > 0) {\n          this.creditAmount = parseFloat((Math.round(floatAmount * 100) / 100).toString())\n            .toFixed(2)\n            .toString();\n          return;\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.creditAmount = \"\";\n  }\n\n  get creditAmountNumber(): number {\n    if (this.creditAmount != null && this.creditAmount !== \"\") {\n      try {\n        return parseFloat(this.creditAmount);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return null;\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../request/organizationTaxInfoUpdateRequest\";\n\nexport class PaymentRequest extends OrganizationTaxInfoUpdateRequest {\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"darkInputColor\":\"#fff\",\"darkInputPlaceholderColor\":\"#bac0ce\",\"lightInputColor\":\"#465057\",\"lightInputPlaceholderColor\":\"#b6b8b8\"};","import { Observable } from \"rxjs\";\n\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport abstract class AbstractThemingService {\n  theme$: Observable<Theme>;\n  monitorThemeChanges: () => Promise<void>;\n  updateSystemTheme: (systemTheme: ThemeType) => void;\n  updateConfiguredTheme: (theme: ThemeType) => Promise<void>;\n}\n","<div class=\"mb-4 text-lg\" *ngIf=\"showOptions && showMethods\">\n  <div class=\"form-check form-check-inline mr-4\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-card\"\n      [value]=\"paymentMethodType.Card\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-card\">\n      <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i> {{ \"creditCard\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline mr-4\" *ngIf=\"!hideBank\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-bank\"\n      [value]=\"paymentMethodType.BankAccount\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-bank\">\n      <i class=\"bwi bwi-fw bwi-bank\" aria-hidden=\"true\"></i> {{ \"bankAccount\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hidePaypal\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-paypal\"\n      [value]=\"paymentMethodType.PayPal\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-paypal\">\n      <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hideCredit\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-credit\"\n      [value]=\"paymentMethodType.Credit\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-credit\">\n      <i class=\"bwi bwi-fw bwi-dollar\" aria-hidden=\"true\"></i> {{ \"accountCredit\" | i18n }}</label\n    >\n  </div>\n</div>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Card\">\n  <div class=\"row\">\n    <div class=\"form-group col-4\">\n      <label for=\"stripe-card-number-element\">{{ \"number\" | i18n }}</label>\n      <div id=\"stripe-card-number-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div class=\"form-group col-8 d-flex align-items-end\">\n      <img\n        src=\"../../images/cards.png\"\n        alt=\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\"\n        width=\"323\"\n        height=\"32\"\n      />\n    </div>\n    <div class=\"form-group col-4\">\n      <label for=\"stripe-card-expiry-element\">{{ \"expiration\" | i18n }}</label>\n      <div id=\"stripe-card-expiry-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div class=\"form-group col-4\">\n      <div class=\"d-flex\">\n        <label for=\"stripe-card-cvc-element\">\n          {{ \"securityCode\" | i18n }}\n        </label>\n        <a\n          href=\"https://www.cvvnumber.com/cvv.html\"\n          tabindex=\"-1\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          class=\"ml-auto\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n      <div id=\"stripe-card-cvc-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.BankAccount\">\n  <app-callout type=\"warning\" title=\"{{ 'verifyBankAccount' | i18n }}\">\n    {{ \"verifyBankAccountInitialDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"routing_number\">{{ \"routingNumber\" | i18n }}</label>\n      <input\n        id=\"routing_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"routing_number\"\n        [(ngModel)]=\"bank.routing_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_number\">{{ \"accountNumber\" | i18n }}</label>\n      <input\n        id=\"account_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_number\"\n        [(ngModel)]=\"bank.account_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_name\">{{ \"accountHolderName\" | i18n }}</label>\n      <input\n        id=\"account_holder_name\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_holder_name\"\n        [(ngModel)]=\"bank.account_holder_name\"\n        required\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_type\">{{ \"bankAccountType\" | i18n }}</label>\n      <select\n        id=\"account_holder_type\"\n        class=\"form-control\"\n        name=\"account_holder_type\"\n        [(ngModel)]=\"bank.account_holder_type\"\n        required\n      >\n        <option value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option value=\"company\">{{ \"bankAccountTypeCompany\" | i18n }}</option>\n        <option value=\"individual\">{{ \"bankAccountTypeIndividual\" | i18n }}</option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.PayPal\">\n  <div class=\"mb-3\">\n    <div id=\"bt-dropin-container\" class=\"mb-1\"></div>\n    <small class=\"text-muted\">{{ \"paypalClickSubmit\" | i18n }}</small>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Credit\">\n  <app-callout type=\"note\">\n    {{ \"makeSureEnoughCredit\" | i18n }}\n  </app-callout>\n</ng-container>\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport ThemeVariables from \"src/scss/export.module.scss\";\n\nconst lightInputColor = ThemeVariables.lightInputColor;\nconst lightInputPlaceholderColor = ThemeVariables.lightInputPlaceholderColor;\nconst darkInputColor = ThemeVariables.darkInputColor;\nconst darkInputPlaceholderColor = ThemeVariables.darkInputPlaceholderColor;\n\n@Component({\n  selector: \"app-payment\",\n  templateUrl: \"payment.component.html\",\n})\nexport class PaymentComponent implements OnInit, OnDestroy {\n  @Input() showMethods = true;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.Card;\n  @Input() hideBank = false;\n  @Input() hidePaypal = false;\n  @Input() hideCredit = false;\n\n  private destroy$: Subject<void> = new Subject<void>();\n\n  bank: any = {\n    routing_number: null,\n    account_number: null,\n    account_holder_name: null,\n    account_holder_type: \"\",\n    currency: \"USD\",\n    country: \"US\",\n  };\n\n  paymentMethodType = PaymentMethodType;\n\n  private btScript: HTMLScriptElement;\n  private btInstance: any = null;\n  private stripeScript: HTMLScriptElement;\n  private stripe: any = null;\n  private stripeElements: any = null;\n  private stripeCardNumberElement: any = null;\n  private stripeCardExpiryElement: any = null;\n  private stripeCardCvcElement: any = null;\n  private StripeElementStyle: any;\n  private StripeElementClasses: any;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private themingService: AbstractThemingService\n  ) {\n    this.stripeScript = window.document.createElement(\"script\");\n    this.stripeScript.src = \"https://js.stripe.com/v3/\";\n    this.stripeScript.async = true;\n    this.stripeScript.onload = () => {\n      this.stripe = (window as any).Stripe(process.env.STRIPE_KEY);\n      this.stripeElements = this.stripe.elements();\n      this.setStripeElement();\n    };\n    this.btScript = window.document.createElement(\"script\");\n    this.btScript.src = `scripts/dropin.js?cache=${process.env.CACHE_TAG}`;\n    this.btScript.async = true;\n    this.StripeElementStyle = {\n      base: {\n        color: null,\n        fontFamily:\n          '\"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, ' +\n          '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n        fontSize: \"14px\",\n        fontSmoothing: \"antialiased\",\n        \"::placeholder\": {\n          color: null,\n        },\n      },\n      invalid: {\n        color: null,\n      },\n    };\n    this.StripeElementClasses = {\n      focus: \"is-focused\",\n      empty: \"is-empty\",\n      invalid: \"is-invalid\",\n    };\n  }\n\n  async ngOnInit() {\n    if (!this.showOptions) {\n      this.hidePaypal = this.method !== PaymentMethodType.PayPal;\n      this.hideBank = this.method !== PaymentMethodType.BankAccount;\n      this.hideCredit = this.method !== PaymentMethodType.Credit;\n    }\n    await this.setTheme();\n    window.document.head.appendChild(this.stripeScript);\n    if (!this.hidePaypal) {\n      window.document.head.appendChild(this.btScript);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    window.document.head.removeChild(this.stripeScript);\n    window.setTimeout(() => {\n      Array.from(window.document.querySelectorAll(\"iframe\")).forEach((el) => {\n        if (el.src != null && el.src.indexOf(\"stripe\") > -1) {\n          try {\n            window.document.body.removeChild(el);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      });\n    }, 500);\n    if (!this.hidePaypal) {\n      window.document.head.removeChild(this.btScript);\n      window.setTimeout(() => {\n        Array.from(window.document.head.querySelectorAll(\"script\")).forEach((el) => {\n          if (el.src != null && el.src.indexOf(\"paypal\") > -1) {\n            try {\n              window.document.head.removeChild(el);\n            } catch (e) {\n              this.logService.error(e);\n            }\n          }\n        });\n        const btStylesheet = window.document.head.querySelector(\"#braintree-dropin-stylesheet\");\n        if (btStylesheet != null) {\n          try {\n            window.document.head.removeChild(btStylesheet);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      }, 500);\n    }\n  }\n\n  changeMethod() {\n    this.btInstance = null;\n\n    if (this.method === PaymentMethodType.PayPal) {\n      window.setTimeout(() => {\n        (window as any).braintree.dropin.create(\n          {\n            authorization: process.env.BRAINTREE_KEY,\n            container: \"#bt-dropin-container\",\n            paymentOptionPriority: [\"paypal\"],\n            paypal: {\n              flow: \"vault\",\n              buttonStyle: {\n                label: \"pay\",\n                size: \"medium\",\n                shape: \"pill\",\n                color: \"blue\",\n                tagline: \"false\",\n              },\n            },\n          },\n          (createErr: any, instance: any) => {\n            if (createErr != null) {\n              // eslint-disable-next-line\n              console.error(createErr);\n              return;\n            }\n            this.btInstance = instance;\n          }\n        );\n      }, 250);\n    } else {\n      this.setStripeElement();\n    }\n  }\n\n  createPaymentToken(): Promise<[string, PaymentMethodType]> {\n    return new Promise((resolve, reject) => {\n      if (this.method === PaymentMethodType.Credit) {\n        resolve([null, this.method]);\n      } else if (this.method === PaymentMethodType.PayPal) {\n        this.btInstance\n          .requestPaymentMethod()\n          .then((payload: any) => {\n            resolve([payload.nonce, this.method]);\n          })\n          .catch((err: any) => {\n            reject(err.message);\n          });\n      } else if (\n        this.method === PaymentMethodType.Card ||\n        this.method === PaymentMethodType.BankAccount\n      ) {\n        if (this.method === PaymentMethodType.Card) {\n          this.apiService\n            .postSetupPayment()\n            .then((clientSecret) =>\n              this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n            )\n            .then((result: any) => {\n              if (result.error) {\n                reject(result.error.message);\n              } else if (result.setupIntent && result.setupIntent.status === \"succeeded\") {\n                resolve([result.setupIntent.payment_method, this.method]);\n              } else {\n                reject();\n              }\n            });\n        } else {\n          this.stripe.createToken(\"bank_account\", this.bank).then((result: any) => {\n            if (result.error) {\n              reject(result.error.message);\n            } else if (result.token && result.token.id != null) {\n              resolve([result.token.id, this.method]);\n            } else {\n              reject();\n            }\n          });\n        }\n      }\n    });\n  }\n\n  handleStripeCardPayment(clientSecret: string, successCallback: () => Promise<any>): Promise<any> {\n    return new Promise<void>((resolve, reject) => {\n      if (this.showMethods && this.stripeCardNumberElement == null) {\n        reject();\n        return;\n      }\n      const handleCardPayment = () =>\n        this.showMethods\n          ? this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n          : this.stripe.handleCardSetup(clientSecret);\n      return handleCardPayment().then(async (result: any) => {\n        if (result.error) {\n          reject(result.error.message);\n        } else if (result.paymentIntent && result.paymentIntent.status === \"succeeded\") {\n          if (successCallback != null) {\n            await successCallback();\n          }\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  private setStripeElement() {\n    window.setTimeout(() => {\n      if (this.showMethods && this.method === PaymentMethodType.Card) {\n        if (this.stripeCardNumberElement == null) {\n          this.stripeCardNumberElement = this.stripeElements.create(\"cardNumber\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        if (this.stripeCardExpiryElement == null) {\n          this.stripeCardExpiryElement = this.stripeElements.create(\"cardExpiry\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n          });\n        }\n        if (this.stripeCardCvcElement == null) {\n          this.stripeCardCvcElement = this.stripeElements.create(\"cardCvc\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        this.stripeCardNumberElement.mount(\"#stripe-card-number-element\");\n        this.stripeCardExpiryElement.mount(\"#stripe-card-expiry-element\");\n        this.stripeCardCvcElement.mount(\"#stripe-card-cvc-element\");\n      }\n    }, 50);\n  }\n\n  private async setTheme() {\n    this.themingService.theme$.pipe(takeUntil(this.destroy$)).subscribe((theme) => {\n      if (theme.effectiveTheme === ThemeType.Dark) {\n        this.StripeElementStyle.base.color = darkInputColor;\n        this.StripeElementStyle.base[\"::placeholder\"].color = darkInputPlaceholderColor;\n        this.StripeElementStyle.invalid.color = darkInputColor;\n      } else {\n        this.StripeElementStyle.base.color = lightInputColor;\n        this.StripeElementStyle.base[\"::placeholder\"].color = lightInputPlaceholderColor;\n        this.StripeElementStyle.invalid.color = lightInputColor;\n      }\n    });\n  }\n}\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PaymentRequest } from \"@bitwarden/common/models/request/paymentRequest\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-adjust-payment\",\n  templateUrl: \"adjust-payment.component.html\",\n})\nexport class AdjustPaymentComponent {\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent, { static: true }) taxInfoComponent: TaxInfoComponent;\n\n  @Input() currentType?: PaymentMethodType;\n  @Input() organizationId: string;\n  @Output() onAdjusted = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  paymentMethodType = PaymentMethodType;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new PaymentRequest();\n      this.formPromise = this.paymentComponent.createPaymentToken().then((result) => {\n        request.paymentToken = result[0];\n        request.paymentMethodType = result[1];\n        request.postalCode = this.taxInfoComponent.taxInfo.postalCode;\n        request.country = this.taxInfoComponent.taxInfo.country;\n        if (this.organizationId == null) {\n          return this.apiService.postAccountPayment(request);\n        } else {\n          request.taxId = this.taxInfoComponent.taxInfo.taxId;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          request.line1 = this.taxInfoComponent.taxInfo.line1;\n          request.line2 = this.taxInfoComponent.taxInfo.line2;\n          request.city = this.taxInfoComponent.taxInfo.city;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          return this.apiService.postOrganizationPayment(this.organizationId, request);\n        }\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedPaymentMethod\")\n      );\n      this.onAdjusted.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  changeCountry() {\n    if (this.taxInfoComponent.taxInfo.country === \"US\") {\n      this.paymentComponent.hideBank = !this.organizationId;\n    } else {\n      this.paymentComponent.hideBank = true;\n      if (this.paymentComponent.method === PaymentMethodType.BankAccount) {\n        this.paymentComponent.method = PaymentMethodType.Card;\n        this.paymentComponent.changeMethod();\n      }\n    }\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">\n      {{ (currentType != null ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n    </h3>\n    <app-payment [hideBank]=\"!organizationId\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changeCountry()\"></app-tax-info>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","<div class=\"page-header d-flex\">\n  <h1>\n    {{ \"billing\" | i18n }}\n  </h1>\n  <button\n    (click)=\"load()\"\n    class=\"btn btn-sm btn-outline-primary ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ (isCreditBalance ? \"accountCredit\" : \"accountBalance\") | i18n }}</h2>\n  <p class=\"text-lg\">\n    <strong>{{ creditOrBalance | currency: \"$\" }}</strong>\n  </p>\n  <p>{{ \"creditAppliedDesc\" | i18n }}</p>\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-secondary\"\n    (click)=\"addCredit()\"\n    *ngIf=\"!showAddCredit\"\n  >\n    {{ \"addCredit\" | i18n }}\n  </button>\n  <app-add-credit\n    [organizationId]=\"organizationId\"\n    (onAdded)=\"closeAddCredit(true)\"\n    (onCanceled)=\"closeAddCredit(false)\"\n    *ngIf=\"showAddCredit\"\n  >\n  </app-add-credit>\n  <h2 class=\"spaced-header\">{{ \"paymentMethod\" | i18n }}</h2>\n  <p *ngIf=\"!paymentSource\">{{ \"noPaymentMethod\" | i18n }}</p>\n  <ng-container *ngIf=\"paymentSource\">\n    <app-callout\n      type=\"warning\"\n      title=\"{{ 'verifyBankAccount' | i18n }}\"\n      *ngIf=\"\n        paymentSource.type === paymentMethodType.BankAccount && paymentSource.needsVerification\n      \"\n    >\n      <p>{{ \"verifyBankAccountDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}</p>\n      <form\n        #verifyForm\n        class=\"form-inline\"\n        (ngSubmit)=\"verifyBank()\"\n        [appApiAction]=\"verifyBankPromise\"\n        ngNativeValidate\n      >\n        <label class=\"sr-only\" for=\"verifyAmount1\">{{ \"amount\" | i18n: \"1\" }}</label>\n        <div class=\"input-group mr-2\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">$0.</div>\n          </div>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"verifyAmount1\"\n            placeholder=\"xx\"\n            name=\"Amount1\"\n            [(ngModel)]=\"verifyAmount1\"\n            min=\"1\"\n            max=\"99\"\n            step=\"1\"\n            required\n          />\n        </div>\n        <label class=\"sr-only\" for=\"verifyAmount2\">{{ \"amount\" | i18n: \"2\" }}</label>\n        <div class=\"input-group mr-2\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">$0.</div>\n          </div>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"verifyAmount2\"\n            placeholder=\"xx\"\n            name=\"Amount2\"\n            [(ngModel)]=\"verifyAmount2\"\n            min=\"1\"\n            max=\"99\"\n            step=\"1\"\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          class=\"btn btn-outline-primary btn-submit\"\n          [disabled]=\"verifyForm.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"verifyBankAccount\" | i18n }}</span>\n        </button>\n      </form>\n    </app-callout>\n    <p>\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-credit-card': paymentSource.type === paymentMethodType.Card,\n          'bwi-bank': paymentSource.type === paymentMethodType.BankAccount,\n          'bwi-money': paymentSource.type === paymentMethodType.Check,\n          'bwi-paypal text-primary': paymentSource.type === paymentMethodType.PayPal,\n          'bwi-apple text-muted': paymentSource.type === paymentMethodType.AppleInApp,\n          'bwi-google text-muted': paymentSource.type === paymentMethodType.GoogleInApp\n        }\"\n      ></i>\n      <span *ngIf=\"paymentSourceInApp\">{{ \"inAppPurchase\" | i18n }}</span>\n      {{ paymentSource.description }}\n    </p>\n  </ng-container>\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-secondary\"\n    (click)=\"changePayment()\"\n    *ngIf=\"!showAdjustPayment\"\n  >\n    {{ (paymentSource ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n  </button>\n  <app-adjust-payment\n    [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n    [organizationId]=\"organizationId\"\n    (onAdjusted)=\"closePayment(true)\"\n    (onCanceled)=\"closePayment(false)\"\n    *ngIf=\"showAdjustPayment\"\n  >\n  </app-adjust-payment>\n  <h2 class=\"spaced-header\">{{ \"invoices\" | i18n }}</h2>\n  <p *ngIf=\"!invoices || !invoices.length\">{{ \"noInvoices\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n    <tbody>\n      <tr *ngFor=\"let i of invoices\">\n        <td>{{ i.date | date: \"mediumDate\" }}</td>\n        <td>\n          <a\n            href=\"{{ i.pdfUrl }}\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            class=\"mr-2\"\n            appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n          >\n            <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n          ></a>\n          <a href=\"{{ i.url }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ 'viewInvoice' | i18n }}\">\n            {{ \"invoiceNumber\" | i18n: i.number }}</a\n          >\n        </td>\n        <td>{{ i.amount | currency: \"$\" }}</td>\n        <td>\n          <span *ngIf=\"i.paid\">\n            <i class=\"bwi bwi-check text-success\" aria-hidden=\"true\"></i>\n            {{ \"paid\" | i18n }}\n          </span>\n          <span *ngIf=\"!i.paid\">\n            <i class=\"bwi bwi-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n            {{ \"unpaid\" | i18n }}\n          </span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <h2 class=\"spaced-header\">{{ \"transactions\" | i18n }}</h2>\n  <p *ngIf=\"!transactions || !transactions.length\">{{ \"noTransactions\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n    <tbody>\n      <tr *ngFor=\"let t of transactions\">\n        <td>{{ t.createdDate | date: \"mediumDate\" }}</td>\n        <td>\n          <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n            {{ \"chargeNoun\" | i18n }}\n          </span>\n          <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n        </td>\n        <td>\n          <i\n            class=\"bwi bwi-fw\"\n            *ngIf=\"t.paymentMethodType\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-credit-card': t.paymentMethodType === paymentMethodType.Card,\n              'bwi-bank':\n                t.paymentMethodType === paymentMethodType.BankAccount ||\n                t.paymentMethodType === paymentMethodType.WireTransfer,\n              'bwi-bitcoin text-warning': t.paymentMethodType === paymentMethodType.BitPay,\n              'bwi-paypal text-primary': t.paymentMethodType === paymentMethodType.PayPal\n            }\"\n          ></i>\n          {{ t.details }}\n        </td>\n        <td\n          [ngClass]=\"{ 'text-strike': t.refunded }\"\n          title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n        >\n          {{ t.amount | currency: \"$\" }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <small class=\"text-muted\">* {{ \"chargesStatement\" | i18n: \"BITWARDEN\" }}</small>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { TransactionType } from \"@bitwarden/common/enums/transactionType\";\nimport { VerifyBankRequest } from \"@bitwarden/common/models/request/verifyBankRequest\";\nimport { BillingResponse } from \"@bitwarden/common/models/response/billingResponse\";\n\n@Component({\n  selector: \"app-org-billing\",\n  templateUrl: \"./organization-billing.component.html\",\n})\nexport class OrganizationBillingComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  showAdjustPayment = false;\n  showAddCredit = false;\n  billing: BillingResponse;\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n  organizationId: string;\n  verifyAmount1: number;\n  verifyAmount2: number;\n\n  verifyBankPromise: Promise<any>;\n\n  // TODO - Make sure to properly split out the billing/invoice and payment method/account during org admin refresh\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    if (this.organizationId != null) {\n      this.billing = await this.apiService.getOrganizationBilling(this.organizationId);\n    }\n    this.loading = false;\n  }\n\n  async verifyBank() {\n    if (this.loading) {\n      return;\n    }\n\n    try {\n      const request = new VerifyBankRequest();\n      request.amount1 = this.verifyAmount1;\n      request.amount2 = this.verifyAmount2;\n      this.verifyBankPromise = this.apiService.postOrganizationVerifyBank(\n        this.organizationId,\n        request\n      );\n      await this.verifyBankPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"verifiedBankAccount\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  addCredit() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"addCredit\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAddCredit = true;\n  }\n\n  closeAddCredit(load: boolean) {\n    this.showAddCredit = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  changePayment() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"changePaymentMethod\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAdjustPayment = true;\n  }\n\n  closePayment(load: boolean) {\n    this.showAdjustPayment = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get isCreditBalance() {\n    return this.billing == null || this.billing.balance <= 0;\n  }\n\n  get creditOrBalance() {\n    return Math.abs(this.billing != null ? this.billing.balance : 0);\n  }\n\n  get paymentSource() {\n    return this.billing != null ? this.billing.paymentSource : null;\n  }\n\n  get paymentSourceInApp() {\n    return (\n      this.paymentSource != null &&\n      (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n        this.paymentSource.type === PaymentMethodType.GoogleInApp)\n    );\n  }\n\n  get invoices() {\n    return this.billing != null ? this.billing.invoices : null;\n  }\n\n  get transactions() {\n    return this.billing != null ? this.billing.transactions : null;\n  }\n}\n","export enum OrganizationApiKeyType {\n  Default = 0,\n  BillingSync = 1,\n}\n","export enum OrganizationConnectionType {\n  CloudBillingSync = 1,\n}\n","export enum PlanType {\n  Free = 0,\n  FamiliesAnnually2019 = 1,\n  TeamsMonthly2019 = 2,\n  TeamsAnnually2019 = 3,\n  EnterpriseMonthly2019 = 4,\n  EnterpriseAnnually2019 = 5,\n  Custom = 6,\n  FamiliesAnnually = 7,\n  TeamsMonthly = 8,\n  TeamsAnnually = 9,\n  EnterpriseMonthly = 10,\n  EnterpriseAnnually = 11,\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class BillingSyncConfigApi extends BaseResponse {\n  billingSyncKey: string;\n\n  constructor(data: any) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.billingSyncKey = this.getResponseProperty(\"BillingSyncKey\");\n  }\n}\n","export class BillingSyncConfigRequest {\n  constructor(private billingSyncKey: string) {}\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\n\nimport { BillingSyncConfigRequest } from \"./billingSyncConfigRequest\";\n\n/**API request config types for OrganizationConnectionRequest */\nexport type OrganizationConnectionRequestConfigs = BillingSyncConfigRequest;\n\nexport class OrganizationConnectionRequest {\n  constructor(\n    public organizationId: string,\n    public type: OrganizationConnectionType,\n    public enabled: boolean,\n    public config: OrganizationConnectionRequestConfigs\n  ) {}\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"@bitwarden/common/models/api/billingSyncConfigApi\";\nimport { BillingSyncConfigRequest } from \"@bitwarden/common/models/request/billingSyncConfigRequest\";\nimport { OrganizationConnectionRequest } from \"@bitwarden/common/models/request/organizationConnectionRequest\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/models/response/organizationConnectionResponse\";\n\n@Component({\n  selector: \"app-billing-sync-key\",\n  templateUrl: \"billing-sync-key.component.html\",\n})\nexport class BillingSyncKeyComponent {\n  entityId: string;\n  existingConnectionId: string;\n  billingSyncKey: string;\n  setParentConnection: (connection: OrganizationConnectionResponse<BillingSyncConfigApi>) => void;\n\n  formPromise: Promise<OrganizationConnectionResponse<BillingSyncConfigApi>> | Promise<void>;\n\n  constructor(private apiService: ApiService, private logService: LogService) {}\n\n  async submit() {\n    try {\n      const request = new OrganizationConnectionRequest(\n        this.entityId,\n        OrganizationConnectionType.CloudBillingSync,\n        true,\n        new BillingSyncConfigRequest(this.billingSyncKey)\n      );\n      if (this.existingConnectionId == null) {\n        this.formPromise = this.apiService.createOrganizationConnection(\n          request,\n          BillingSyncConfigApi\n        );\n      } else {\n        this.formPromise = this.apiService.updateOrganizationConnection(\n          request,\n          BillingSyncConfigApi,\n          this.existingConnectionId\n        );\n      }\n      const response = (await this\n        .formPromise) as OrganizationConnectionResponse<BillingSyncConfigApi>;\n      this.existingConnectionId = response?.id;\n      this.billingSyncKey = response?.config?.billingSyncKey;\n      this.setParentConnection(response);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async deleteConnection() {\n    this.formPromise = this.apiService.deleteOrganizationConnection(this.existingConnectionId);\n    await this.formPromise;\n    this.setParentConnection(null);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"billingSyncTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"billingSyncTitle\">{{ \"manageBillingSync\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"billingSyncKeyDesc\" | i18n }}</p>\n        <div class=\"form-group\">\n          <label for=\"billingSyncKey\"\n            >{{ \"billingSyncKey\" | i18n }} <small>(</small><small>{{ \"required\" | i18n }}</small\n            ><small>)</small></label\n          >\n          <input\n            id=\"billingSyncKey\"\n            type=\"input\"\n            name=\"billingSyncKey\"\n            class=\"form-control\"\n            [(ngModel)]=\"billingSyncKey\"\n            required\n            appAutofocus\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"deleteConnection()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            [disabled]=\"form.loading\"\n          >\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"form.loading\" aria-hidden=\"true\"></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class OrganizationApiKeyRequest extends SecretVerificationRequest {\n  type: OrganizationApiKeyType = OrganizationApiKeyType.Default;\n}\n","export enum ProductType {\n  Free = 0,\n  Families = 1,\n  Teams = 2,\n  Enterprise = 3,\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"billingSyncApiKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"billingSyncApiKeyTitle\">\n          {{ (hasBillingToken ? \"viewBillingSyncToken\" : \"generateBillingSyncToken\") | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-user-verification\n          [(ngModel)]=\"masterPassword\"\n          ngDefaultControl\n          name=\"secret\"\n          *ngIf=\"!clientSecret\"\n        >\n        </app-user-verification>\n        <ng-container *ngIf=\"clientSecret && showRotateScreen\">\n          <p>{{ \"rotateBillingSyncTokenTitle\" | i18n }}</p>\n          <app-callout type=\"warning\">\n            {{ \"rotateBillingSyncTokenWarning\" | i18n }}\n          </app-callout>\n        </ng-container>\n\n        <div *ngIf=\"clientSecret && !showRotateScreen\">\n          <p>{{ \"copyPasteBillingSync\" | i18n }}</p>\n          <label for=\"clientSecret\">Billing Sync Key</label>\n          <div class=\"input-group\">\n            <input\n              id=\"clientSecret\"\n              class=\"form-control text-monospace\"\n              type=\"text\"\n              [(ngModel)]=\"clientSecret\"\n              name=\"clientSecret\"\n              disabled\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                (click)=\"copy()\"\n                [appA11yTitle]=\"'copy' | i18n\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"small text-muted mt-2\" *ngIf=\"showLastSyncText\">\n            <b class=\"font-weight-semibold\">{{ \"lastSync\" | i18n }}:</b>\n            {{ lastSyncDate | date: \"medium\" }}\n          </div>\n          <div class=\"small text-danger mt-2\" *ngIf=\"showAwaitingSyncText\">\n            <i class=\"bwi bwi-error\"></i>\n            {{\n              (daysBetween === 1 ? \"awaitingSyncSingular\" : \"awaitingSyncPlural\")\n                | i18n: daysBetween\n            }}\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!clientSecret || showRotateScreen\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            *ngIf=\"form.loading\"\n          ></i>\n          <span>\n            {{ submitButtonText }}\n          </span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary\"\n          data-dismiss=\"modal\"\n          *ngIf=\"!showRotateScreen\"\n        >\n          {{ \"close\" | i18n }}\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary\"\n          *ngIf=\"showRotateScreen\"\n          (click)=\"cancelRotate()\"\n        >\n          {{ \"cancel\" | i18n }}\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary\"\n          *ngIf=\"clientSecret && !showRotateScreen\"\n          (click)=\"rotateToken()\"\n        >\n          {{ \"rotateToken\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/enums/organizationApiKeyType\";\nimport { OrganizationApiKeyRequest } from \"@bitwarden/common/models/request/organizationApiKeyRequest\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/apiKeyResponse\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-billing-sync-api-key\",\n  templateUrl: \"billing-sync-api-key.component.html\",\n})\nexport class BillingSyncApiKeyComponent {\n  organizationId: string;\n  hasBillingToken: boolean;\n\n  showRotateScreen: boolean;\n  masterPassword: Verification;\n  formPromise: Promise<ApiKeyResponse>;\n  clientSecret?: string;\n  keyRevisionDate?: Date;\n  lastSyncDate?: Date = null;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  copy() {\n    this.platformUtilsService.copyToClipboard(this.clientSecret);\n  }\n\n  async submit() {\n    if (this.showRotateScreen) {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword, OrganizationApiKeyRequest)\n        .then((request) => {\n          request.type = OrganizationApiKeyType.BillingSync;\n          return this.apiService.postOrganizationRotateApiKey(this.organizationId, request);\n        });\n      const response = await this.formPromise;\n      await this.load(response);\n      this.showRotateScreen = false;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"billingSyncApiKeyRotated\")\n      );\n    } else {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword, OrganizationApiKeyRequest)\n        .then((request) => {\n          request.type = OrganizationApiKeyType.BillingSync;\n          return this.apiService.postOrganizationApiKey(this.organizationId, request);\n        });\n      const response = await this.formPromise;\n      await this.load(response);\n    }\n  }\n\n  async load(response: ApiKeyResponse) {\n    this.clientSecret = response.apiKey;\n    this.keyRevisionDate = response.revisionDate;\n    this.hasBillingToken = true;\n    const syncStatus = await this.apiService.getSponsorshipSyncStatus(this.organizationId);\n    this.lastSyncDate = syncStatus.lastSyncDate;\n  }\n\n  cancelRotate() {\n    this.showRotateScreen = false;\n  }\n\n  rotateToken() {\n    this.showRotateScreen = true;\n  }\n\n  private dayDiff(date1: Date, date2: Date): number {\n    const diffTime = Math.abs(date2.getTime() - date1.getTime());\n    return Math.round(diffTime / (1000 * 60 * 60 * 24));\n  }\n\n  get submitButtonText(): string {\n    if (this.showRotateScreen) {\n      return this.i18nService.t(\"rotateToken\");\n    }\n\n    return this.i18nService.t(this.hasBillingToken ? \"continue\" : \"generateToken\");\n  }\n\n  get showLastSyncText(): boolean {\n    // If the keyRevisionDate is later than the lastSyncDate we need to show\n    // a warning that they need to put the billing sync key in their self hosted install\n    return this.lastSyncDate && this.lastSyncDate > this.keyRevisionDate;\n  }\n\n  get showAwaitingSyncText(): boolean {\n    return this.lastSyncDate && this.lastSyncDate <= this.keyRevisionDate;\n  }\n\n  get daysBetween(): number {\n    return this.dayDiff(this.keyRevisionDate, new Date());\n  }\n}\n","import { Component } from \"@angular/core\";\n\n// Component is used so that the SVG can embed CSS color variables\n@Component({\n  selector: \"app-image-org-subscription-hidden\",\n  templateUrl: \"image-subscription-hidden.component.svg\",\n})\nexport class ImageSubscriptionHiddenComponent {}\n","<svg width=\"216\" height=\"231\" viewBox=\"0 0 216 231\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M133.356 85.6618C133.136 85.43 132.871 85.2457 132.577 85.1198C132.283 84.9939 131.968 84.93 131.648 84.9318H87.8482C87.5289 84.93 87.2113 84.9939 86.9175 85.1198C86.6237 85.2457 86.359 85.43 86.14 85.6618C85.9083 85.8808 85.7239 86.1473 85.598 86.4411C85.4721 86.7349 85.4082 87.0506 85.41 87.37V116.57C85.4192 118.793 85.8499 120.994 86.6802 123.056C87.4705 125.091 88.5326 127.011 89.8375 128.761C91.1789 130.515 92.6808 132.137 94.3233 133.612C95.8472 135.01 97.4532 136.318 99.1304 137.528C100.59 138.565 102.123 139.547 103.729 140.474C105.335 141.401 106.469 142.027 107.131 142.354C107.799 142.682 108.339 142.941 108.741 143.113C109.055 143.264 109.4 143.339 109.748 143.332C110.091 143.337 110.431 143.257 110.737 143.102C111.146 142.923 111.679 142.671 112.354 142.343C113.03 142.014 114.179 141.386 115.756 140.463C117.333 139.539 118.884 138.554 120.355 137.517C122.034 136.306 123.642 134.999 125.169 133.601C126.814 132.128 128.316 130.504 129.655 128.75C130.958 126.998 132.021 125.08 132.813 123.045C133.645 120.983 134.075 118.782 134.083 116.559V87.3591C134.085 87.0415 134.021 86.7276 133.895 86.4356C133.769 86.1436 133.586 85.8808 133.356 85.6618ZM127.71 116.836C127.71 127.421 109.748 136.514 109.748 136.514V91.1879H127.71V116.836Z\" fill=\"var(--color-secondary-700)\"/>\n  <path d=\"M24.6216 122.3C24.7144 123.4 25.6819 124.217 26.7825 124.125C27.8832 124.032 28.7002 123.064 28.6074 121.964L24.6216 122.3ZM151.501 45.7445C152.57 45.4679 153.213 44.3768 152.936 43.3074L148.429 25.8809C148.152 24.8115 147.061 24.1688 145.992 24.4454C144.922 24.722 144.28 25.8131 144.556 26.8825L148.563 42.3728L133.073 46.3793C132.003 46.6559 131.361 47.747 131.637 48.8164C131.914 49.8858 133.005 50.5285 134.074 50.2519L151.501 45.7445ZM28.6074 121.964C26.6788 99.0874 34.4658 75.5543 51.9661 58.054L49.1377 55.2256C30.7695 73.5938 22.5982 98.2999 24.6216 122.3L28.6074 121.964ZM51.9661 58.054C78.5404 31.4797 119.036 27.3026 149.985 45.5315L152.015 42.0849C119.534 22.9534 77.0327 27.3306 49.1377 55.2256L51.9661 58.054Z\" fill=\"var(--color-secondary-700)\"/>\n  <path d=\"M67.4747 185.062C66.4089 185.352 65.7801 186.451 66.0701 187.517L70.797 204.885C71.0871 205.951 72.1862 206.58 73.252 206.29C74.3179 205.999 74.9467 204.9 74.6567 203.834L70.455 188.396L85.8934 184.194C86.9592 183.904 87.5881 182.805 87.298 181.739C87.008 180.674 85.9088 180.045 84.843 180.335L67.4747 185.062ZM192.478 100.283C192.286 99.1952 191.248 98.4697 190.16 98.6625C189.072 98.8552 188.347 99.8931 188.54 100.981L192.478 100.283ZM166.138 172.225C139.813 198.55 99.8271 202.897 68.9932 185.255L67.0068 188.727C99.3669 207.242 141.333 202.687 168.966 175.054L166.138 172.225ZM188.54 100.981C192.985 126.07 185.516 152.847 166.138 172.225L168.966 175.054C189.307 154.713 197.142 126.603 192.478 100.283L188.54 100.981Z\" fill=\"var(--color-secondary-700)\"/>\n  <path d=\"M37.726 108.132C39.283 92.1931 46.1655 76.6765 58.3734 64.4686C75.2893 47.5527 98.5583 40.8618 120.5 44.396\" stroke=\"var(--color-secondary-700)\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n  <path d=\"M180.595 119.132C179.653 136.119 172.693 152.834 159.717 165.811C144.44 181.088 123.982 188.025 104 186.623\" stroke=\"var(--color-secondary-700)\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n  <rect x=\"153.5\" y=\"56.1317\" width=\"49\" height=\"34\" rx=\"2.5\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <path d=\"M153.5 63.6317V63.6317C153.5 66.9454 156.186 69.6317 159.5 69.6317H172.509M202.5 63.6317V63.6317C202.5 66.9454 199.814 69.6317 196.5 69.6317H183.491\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <mask id=\"path-8-inside-1_1000_26057\" fill=\"white\">\n    <rect x=\"172\" y=\"65.6317\" width=\"12\" height=\"9\" rx=\"1.25\"/>\n  </mask>\n  <rect x=\"172\" y=\"65.6317\" width=\"12\" height=\"9\" rx=\"1.25\" stroke=\"var(--color-secondary-700)\" stroke-width=\"6\" mask=\"url(#path-8-inside-1_1000_26057)\"/>\n  <path d=\"M187 54.6317C187 54.6317 187 53.6317 187 52.6317C187 51.6317 186.053 50.6317 185.105 50.6317C184.158 50.6317 171.842 50.6317 170.895 50.6317C169.947 50.6317 169 51.6317 169 52.6317C169 53.6317 169 54.6317 169 54.6317\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <circle cx=\"48\" cy=\"141\" r=\"10.5\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <path d=\"M64.9935 168.5H64.9126H64.8318H64.7512H64.6708H64.5905H64.5104H64.4304H64.3506H64.2709H64.1914H64.1121H64.0329H63.9538H63.8749H63.7962H63.7176H63.6392H63.5609H63.4828H63.4048H63.3269H63.2492H63.1717H63.0943H63.017H62.9399H62.8629H62.7861H62.7094H62.6329H62.5565H62.4802H62.4041H62.3281H62.2523H62.1766H62.101H62.0256H61.9503H61.8751H61.8001H61.7252H61.6504H61.5758H61.5013H61.4269H61.3527H61.2786H61.2046H61.1308H61.0571H60.9835H60.91H60.8367H60.7635H60.6904H60.6175H60.5446H60.4719H60.3993H60.3269H60.2545H60.1823H60.1102H60.0382H59.9664H59.8946H59.823H59.7515H59.6801H59.6088H59.5376H59.4666H59.3956H59.3248H59.2541H59.1835H59.113H59.0426H58.9724H58.9022H58.8322H58.7622H58.6924H58.6226H58.553H58.4835H58.4141H58.3448H58.2756H58.2065H58.1375H58.0686H57.9998H57.9311H57.8625H57.794H57.7256H57.6572H57.589H57.5209H57.4529H57.385H57.3172H57.2494H57.1818H57.1142H57.0468H56.9794H56.9121H56.8449H56.7779H56.7108H56.6439H56.5771H56.5103H56.4437H56.3771H56.3106H56.2442H56.1779H56.1117H56.0455H55.9794H55.9134H55.8475H55.7817H55.7159H55.6502H55.5846H55.5191H55.4537H55.3883H55.323H55.2578H55.1926H55.1275H55.0625H54.9976H54.9328H54.868H54.8032H54.7386H54.674H54.6095H54.5451H54.4807H54.4164H54.3521H54.2879H54.2238H54.1598H54.0958H54.0318H53.968H53.9042H53.8404H53.7767H53.7131H53.6495H53.586H53.5226H53.4592H53.3958H53.3325H53.2693H53.2061H53.143H53.0799H53.0169H52.9539H52.891H52.8281H52.7653H52.7025H52.6398H52.5771H52.5145H52.4519H52.3894H52.3269H52.2645H52.202H52.1397H52.0774H52.0151H51.9528H51.8907H51.8285H51.7664H51.7043H51.6423H51.5803H51.5183H51.4564H51.3945H51.3326H51.2708H51.209H51.1472H51.0855H51.0238H50.9621H50.9005H50.8389H50.7773H50.7157H50.6542H50.5927H50.5312H50.4698H50.4084H50.347H50.2856H50.2243H50.1629H50.1016H50.0404H49.9791H49.9178H49.8566H49.7954H49.7342H49.6731H49.6119H49.5508H49.4896H49.4285H49.3674H49.3064H49.2453H49.1842H49.1232H49.0622H49.0011H48.9401H48.8791H48.8181H48.7571H48.6962H48.6352H48.5742H48.5133H48.4523H48.3913H48.3304H48.2694H48.2085H48.1475H48.0866H48.0257H47.9647H47.9038H47.8428H47.7819H47.7209H47.6599H47.599H47.538H47.477H47.416H47.3551H47.2941H47.2331H47.172H47.111H47.05H46.9889H46.9279H46.8668H46.8057H46.7446H46.6835H46.6224H46.5612H46.5001H46.4389H46.3777H46.3165H46.2553H46.194H46.1328H46.0715H46.0102H45.9489H45.8875H45.8261H45.7647H45.7033H45.6418H45.5804H45.5189H45.4573H45.3958H45.3342H45.2726H45.2109H45.1493H45.0876H45.0258H44.9641H44.9023H44.8404H44.7786H44.7166H44.6547H44.5927H44.5307H44.4687H44.4066H44.3445H44.2823H44.2201H44.1578H44.0956H44.0332H43.9709H43.9084H43.846H43.7835H43.7209H43.6583H43.5957H43.533H43.4703H43.4075H43.3447H43.2818H43.2189H43.1559H43.0929H43.0298H42.9666H42.9034H42.8402H42.7769H42.7135H42.6501H42.5867H42.5231H42.4596H42.3959H42.3322H42.2685H42.2046H42.1408H42.0768H42.0128H41.9487H41.8846H41.8204H41.7562H41.6918H41.6274H41.563H41.4985H41.4339H41.3692H41.3045H41.2397H41.1748H41.1098H41.0448H40.9797H40.9146H40.8493H40.784H40.7186H40.6532H40.5876H40.522H40.4563H40.3905H40.3247H40.2588H40.1928H40.1267H40.0605H39.9942H39.9279H39.8615H39.795H39.7284H39.6617H39.5949H39.5281H39.4611H39.3941H39.327H39.2598H39.1925H39.1251H39.0576H38.9901H38.9224H38.8547H38.7868H38.7189H38.6508H38.5827H38.5145H38.4461H38.3777H38.3092H38.2406H38.1719H38.103H38.0341H37.9651H37.896H37.8267H37.7574H37.688H37.6184H37.5488H37.479H37.4092H37.3392H37.2691H37.199H37.1287H37.0583H36.9878H36.9171H36.8464H36.7755H36.7046H36.6335H36.5623H36.491H36.4196H36.3481H36.2764H36.2046H36.1328H36.0607H35.9886H35.9164H35.844H35.7715H35.6989H35.6262H35.5533H35.4803H35.4072H35.334H35.2606H35.1872H35.1135H35.0398H34.9659H34.8919H34.8178H34.7436H34.6692H34.5947H34.52H34.4452H34.3703H34.2952H34.2201H34.1447H34.0693H33.9937H33.9179H33.8421H33.7661H33.6899H33.6136H33.5372H33.4606H33.3839H33.3071H33.2301H33.1529H33.0756H32.9982H32.9206H32.8429H32.765H32.687H32.6088H32.5305H32.452H32.3734H32.2946H32.2157H32.1367H32.0574H31.978H31.8985H31.8188H31.739H31.659H31.5788H31.4985H31.418H31.3374H31.2566H31.1757H31.0946H31.0133H30.9318H30.8503H30.7685H30.6866H30.6045H30.5222H30.4398H30.3572H30.2745H30.1915C30.0489 168.5 29.9693 168.466 29.9164 168.433C29.8553 168.394 29.7779 168.322 29.702 168.192C29.5361 167.906 29.4608 167.48 29.5197 167.111C30.9235 158.322 38.6474 151.574 47.9925 151.574C57.3375 151.574 65.0615 158.322 66.4652 167.111C66.5751 167.799 66.4037 168.054 66.3124 168.149C66.1888 168.278 65.8364 168.5 64.9935 168.5Z\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <circle cx=\"20\" cy=\"141\" r=\"10.5\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <path d=\"M36.9935 168.5H36.9126H36.8318H36.7512H36.6708H36.5905H36.5104H36.4304H36.3506H36.2709H36.1914H36.1121H36.0329H35.9538H35.8749H35.7962H35.7176H35.6392H35.5609H35.4828H35.4048H35.3269H35.2492H35.1717H35.0943H35.017H34.9399H34.8629H34.7861H34.7094H34.6329H34.5565H34.4802H34.4041H34.3281H34.2523H34.1766H34.101H34.0256H33.9503H33.8751H33.8001H33.7252H33.6504H33.5758H33.5013H33.4269H33.3527H33.2786H33.2046H33.1308H33.0571H32.9835H32.91H32.8367H32.7635H32.6904H32.6175H32.5446H32.4719H32.3993H32.3269H32.2545H32.1823H32.1102H32.0382H31.9664H31.8946H31.823H31.7515H31.6801H31.6088H31.5376H31.4666H31.3956H31.3248H31.2541H31.1835H31.113H31.0426H30.9724H30.9022H30.8322H30.7622H30.6924H30.6226H30.553H30.4835H30.4141H30.3448H30.2756H30.2065H30.1375H30.0686H29.9998H29.9311H29.8625H29.794H29.7256H29.6572H29.589H29.5209H29.4529H29.385H29.3172H29.2494H29.1818H29.1142H29.0468H28.9794H28.9121H28.8449H28.7779H28.7108H28.6439H28.5771H28.5103H28.4437H28.3771H28.3106H28.2442H28.1779H28.1117H28.0455H27.9794H27.9134H27.8475H27.7817H27.7159H27.6502H27.5846H27.5191H27.4537H27.3883H27.323H27.2578H27.1926H27.1275H27.0625H26.9976H26.9328H26.868H26.8032H26.7386H26.674H26.6095H26.5451H26.4807H26.4164H26.3521H26.2879H26.2238H26.1598H26.0958H26.0318H25.968H25.9042H25.8404H25.7767H25.7131H25.6495H25.586H25.5226H25.4592H25.3958H25.3325H25.2693H25.2061H25.143H25.0799H25.0169H24.9539H24.891H24.8281H24.7653H24.7025H24.6398H24.5771H24.5145H24.4519H24.3894H24.3269H24.2645H24.202H24.1397H24.0774H24.0151H23.9528H23.8907H23.8285H23.7664H23.7043H23.6423H23.5803H23.5183H23.4564H23.3945H23.3326H23.2708H23.209H23.1472H23.0855H23.0238H22.9621H22.9005H22.8389H22.7773H22.7157H22.6542H22.5927H22.5312H22.4698H22.4084H22.347H22.2856H22.2243H22.1629H22.1016H22.0404H21.9791H21.9178H21.8566H21.7954H21.7342H21.6731H21.6119H21.5508H21.4896H21.4285H21.3674H21.3064H21.2453H21.1842H21.1232H21.0622H21.0011H20.9401H20.8791H20.8181H20.7571H20.6962H20.6352H20.5742H20.5133H20.4523H20.3913H20.3304H20.2694H20.2085H20.1475H20.0866H20.0257H19.9647H19.9038H19.8428H19.7819H19.7209H19.6599H19.599H19.538H19.477H19.416H19.3551H19.2941H19.2331H19.172H19.111H19.05H18.9889H18.9279H18.8668H18.8057H18.7446H18.6835H18.6224H18.5612H18.5001H18.4389H18.3777H18.3165H18.2553H18.194H18.1328H18.0715H18.0102H17.9489H17.8875H17.8261H17.7647H17.7033H17.6418H17.5804H17.5189H17.4573H17.3958H17.3342H17.2726H17.2109H17.1493H17.0876H17.0258H16.9641H16.9023H16.8404H16.7786H16.7166H16.6547H16.5927H16.5307H16.4687H16.4066H16.3445H16.2823H16.2201H16.1578H16.0956H16.0332H15.9709H15.9084H15.846H15.7835H15.7209H15.6583H15.5957H15.533H15.4703H15.4075H15.3447H15.2818H15.2189H15.1559H15.0929H15.0298H14.9666H14.9034H14.8402H14.7769H14.7135H14.6501H14.5867H14.5231H14.4596H14.3959H14.3322H14.2685H14.2046H14.1408H14.0768H14.0128H13.9487H13.8846H13.8204H13.7562H13.6918H13.6274H13.563H13.4985H13.4339H13.3692H13.3045H13.2397H13.1748H13.1098H13.0448H12.9797H12.9146H12.8493H12.784H12.7186H12.6532H12.5876H12.522H12.4563H12.3905H12.3247H12.2588H12.1928H12.1267H12.0605H11.9942H11.9279H11.8615H11.795H11.7284H11.6617H11.5949H11.5281H11.4611H11.3941H11.327H11.2598H11.1925H11.1251H11.0576H10.9901H10.9224H10.8547H10.7868H10.7189H10.6508H10.5827H10.5145H10.4461H10.3777H10.3092H10.2406H10.1719H10.103H10.0341H9.9651H9.89597H9.82674H9.75741H9.68798H9.61843H9.54879H9.47904H9.40918H9.33921H9.26914H9.19896H9.12867H9.05826H8.98775H8.91713H8.8464H8.77555H8.70459H8.63351H8.56232H8.49102H8.4196H8.34807H8.27641H8.20464H8.13276H8.06075H7.98862H7.91638H7.84401H7.77152H7.69891H7.62617H7.55332H7.48034H7.40723H7.334H7.26064H7.18716H7.11355H7.03981H6.96594H6.89195H6.81782H6.74356H6.66918H6.59466H6.52H6.44522H6.3703H6.29525H6.22006H6.14474H6.06928H5.99368H5.91795H5.84208H5.76607H5.68992H5.61363H5.5372H5.46062H5.38391H5.30705H5.23005H5.15291H5.07562H4.99819H4.92061H4.84288H4.76501H4.68699H4.60882H4.5305H4.45203H4.37342H4.29465H4.21573H4.13665H4.05743H3.97805H3.89851H3.81882H3.73898H3.65898H3.57882H3.49851H3.41804H3.33741H3.25662H3.17566H3.09455H3.01328H2.93185H2.85025H2.76849H2.68657H2.60448H2.52223H2.43981H2.35722H2.27447H2.19155C2.04893 168.5 1.96927 168.466 1.91645 168.433C1.85532 168.394 1.77792 168.322 1.702 168.192C1.53613 167.906 1.46078 167.48 1.51975 167.111C2.92347 158.322 10.6474 151.574 19.9925 151.574C29.3375 151.574 37.0615 158.322 38.4652 167.111C38.5751 167.799 38.4037 168.054 38.3124 168.149C38.1888 168.278 37.8364 168.5 36.9935 168.5Z\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <circle cx=\"34\" cy=\"154\" r=\"10.5\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <path d=\"M50.9935 181.5H50.9126H50.8318H50.7512H50.6708H50.5905H50.5104H50.4304H50.3506H50.2709H50.1914H50.1121H50.0329H49.9538H49.8749H49.7962H49.7176H49.6392H49.5609H49.4828H49.4048H49.3269H49.2492H49.1717H49.0943H49.017H48.9399H48.8629H48.7861H48.7094H48.6329H48.5565H48.4802H48.4041H48.3281H48.2523H48.1766H48.101H48.0256H47.9503H47.8751H47.8001H47.7252H47.6504H47.5758H47.5013H47.4269H47.3527H47.2786H47.2046H47.1308H47.0571H46.9835H46.91H46.8367H46.7635H46.6904H46.6175H46.5446H46.4719H46.3993H46.3269H46.2545H46.1823H46.1102H46.0382H45.9664H45.8946H45.823H45.7515H45.6801H45.6088H45.5376H45.4666H45.3956H45.3248H45.2541H45.1835H45.113H45.0426H44.9724H44.9022H44.8322H44.7622H44.6924H44.6226H44.553H44.4835H44.4141H44.3448H44.2756H44.2065H44.1375H44.0686H43.9998H43.9311H43.8625H43.794H43.7256H43.6572H43.589H43.5209H43.4529H43.385H43.3172H43.2494H43.1818H43.1142H43.0468H42.9794H42.9121H42.8449H42.7779H42.7108H42.6439H42.5771H42.5103H42.4437H42.3771H42.3106H42.2442H42.1779H42.1117H42.0455H41.9794H41.9134H41.8475H41.7817H41.7159H41.6502H41.5846H41.5191H41.4537H41.3883H41.323H41.2578H41.1926H41.1275H41.0625H40.9976H40.9328H40.868H40.8032H40.7386H40.674H40.6095H40.5451H40.4807H40.4164H40.3521H40.2879H40.2238H40.1598H40.0958H40.0318H39.968H39.9042H39.8404H39.7767H39.7131H39.6495H39.586H39.5226H39.4592H39.3958H39.3325H39.2693H39.2061H39.143H39.0799H39.0169H38.9539H38.891H38.8281H38.7653H38.7025H38.6398H38.5771H38.5145H38.4519H38.3894H38.3269H38.2645H38.202H38.1397H38.0774H38.0151H37.9528H37.8907H37.8285H37.7664H37.7043H37.6423H37.5803H37.5183H37.4564H37.3945H37.3326H37.2708H37.209H37.1472H37.0855H37.0238H36.9621H36.9005H36.8389H36.7773H36.7157H36.6542H36.5927H36.5312H36.4698H36.4084H36.347H36.2856H36.2243H36.1629H36.1016H36.0404H35.9791H35.9178H35.8566H35.7954H35.7342H35.6731H35.6119H35.5508H35.4896H35.4285H35.3674H35.3064H35.2453H35.1842H35.1232H35.0622H35.0011H34.9401H34.8791H34.8181H34.7571H34.6962H34.6352H34.5742H34.5133H34.4523H34.3913H34.3304H34.2694H34.2085H34.1475H34.0866H34.0257H33.9647H33.9038H33.8428H33.7819H33.7209H33.6599H33.599H33.538H33.477H33.416H33.3551H33.2941H33.2331H33.172H33.111H33.05H32.9889H32.9279H32.8668H32.8057H32.7446H32.6835H32.6224H32.5612H32.5001H32.4389H32.3777H32.3165H32.2553H32.194H32.1328H32.0715H32.0102H31.9489H31.8875H31.8261H31.7647H31.7033H31.6418H31.5804H31.5189H31.4573H31.3958H31.3342H31.2726H31.2109H31.1493H31.0876H31.0258H30.9641H30.9023H30.8404H30.7786H30.7166H30.6547H30.5927H30.5307H30.4687H30.4066H30.3445H30.2823H30.2201H30.1578H30.0956H30.0332H29.9709H29.9084H29.846H29.7835H29.7209H29.6583H29.5957H29.533H29.4703H29.4075H29.3447H29.2818H29.2189H29.1559H29.0929H29.0298H28.9666H28.9034H28.8402H28.7769H28.7135H28.6501H28.5867H28.5231H28.4596H28.3959H28.3322H28.2685H28.2046H28.1408H28.0768H28.0128H27.9487H27.8846H27.8204H27.7562H27.6918H27.6274H27.563H27.4985H27.4339H27.3692H27.3045H27.2397H27.1748H27.1098H27.0448H26.9797H26.9146H26.8493H26.784H26.7186H26.6532H26.5876H26.522H26.4563H26.3905H26.3247H26.2588H26.1928H26.1267H26.0605H25.9942H25.9279H25.8615H25.795H25.7284H25.6617H25.5949H25.5281H25.4611H25.3941H25.327H25.2598H25.1925H25.1251H25.0576H24.9901H24.9224H24.8547H24.7868H24.7189H24.6508H24.5827H24.5145H24.4461H24.3777H24.3092H24.2406H24.1719H24.103H24.0341H23.9651H23.896H23.8267H23.7574H23.688H23.6184H23.5488H23.479H23.4092H23.3392H23.2691H23.199H23.1287H23.0583H22.9878H22.9171H22.8464H22.7755H22.7046H22.6335H22.5623H22.491H22.4196H22.3481H22.2764H22.2046H22.1328H22.0607H21.9886H21.9164H21.844H21.7715H21.6989H21.6262H21.5533H21.4803H21.4072H21.334H21.2606H21.1872H21.1135H21.0398H20.9659H20.8919H20.8178H20.7436H20.6692H20.5947H20.52H20.4452H20.3703H20.2952H20.2201H20.1447H20.0693H19.9937H19.9179H19.8421H19.7661H19.6899H19.6136H19.5372H19.4606H19.3839H19.3071H19.2301H19.1529H19.0756H18.9982H18.9206H18.8429H18.765H18.687H18.6088H18.5305H18.452H18.3734H18.2946H18.2157H18.1367H18.0574H17.978H17.8985H17.8188H17.739H17.659H17.5788H17.4985H17.418H17.3374H17.2566H17.1757H17.0946H17.0133H16.9318H16.8503H16.7685H16.6866H16.6045H16.5222H16.4398H16.3572H16.2745H16.1915C16.045 181.5 15.9628 181.465 15.9092 181.432C15.8479 181.394 15.772 181.324 15.6978 181.198C15.5354 180.922 15.4617 180.509 15.5193 180.153C16.9196 171.496 24.6325 164.823 33.9925 164.823C43.3524 164.823 51.0654 171.496 52.4657 180.153C52.574 180.823 52.4052 181.064 52.319 181.152C52.1962 181.279 51.8413 181.5 50.9935 181.5Z\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n</svg>\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationCreateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  planType: PlanType;\n  key: string;\n  keys: OrganizationKeysRequest;\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n  additionalSeats: number;\n  maxAutoscaleSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  collectionName: string;\n  taxIdNumber: string;\n  billingAddressLine1: string;\n  billingAddressLine2: string;\n  billingAddressCity: string;\n  billingAddressState: string;\n  billingAddressPostalCode: string;\n  billingAddressCountry: string;\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationUpgradeRequest {\n  businessName: string;\n  planType: PlanType;\n  additionalSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  billingAddressCountry: string;\n  billingAddressPostalCode: string;\n  keys: OrganizationKeysRequest;\n}\n","import { OrganizationCreateRequest } from \"../organizationCreateRequest\";\n\nexport class ProviderOrganizationCreateRequest {\n  constructor(\n    public clientOwnerEmail: string,\n    public organizationCreateRequest: OrganizationCreateRequest\n  ) {}\n}\n","<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"createOrganization && selfHosted\">\n  <p>{{ \"uploadLicenseFileOrg\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_organization_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n  </form>\n</ng-container>\n<form\n  #form\n  [formGroup]=\"formGroup\"\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n  *ngIf=\"!loading && !selfHosted && this.plans\"\n  class=\"tw-pt-6\"\n>\n  <app-org-info\n    (changedBusinessOwned)=\"changedOwnedBusiness()\"\n    [formGroup]=\"formGroup\"\n    [createOrganization]=\"createOrganization\"\n    [isProvider]=\"!!providerId\"\n    [acceptingSponsorship]=\"acceptingSponsorship\"\n  ></app-org-info>\n  <h2 class=\"mt-5\">{{ \"chooseYourPlan\" | i18n }}</h2>\n  <div *ngFor=\"let selectableProduct of selectableProducts\" class=\"form-check form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"product\"\n      id=\"product{{ selectableProduct.product }}\"\n      [value]=\"selectableProduct.product\"\n      formControlName=\"product\"\n      (change)=\"changedProduct()\"\n    />\n    <label class=\"form-check-label\" for=\"product{{ selectableProduct.product }}\">\n      {{ selectableProduct.nameLocalizationKey | i18n }}\n      <small class=\"mb-1\">{{ selectableProduct.descriptionLocalizationKey | i18n: \"1\" }}</small>\n      <ng-container\n        *ngIf=\"selectableProduct.product === productTypes.Enterprise; else fullFeatureList\"\n      >\n        <small>• {{ \"includeAllTeamsFeatures\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSso\">• {{ \"includeSsoAuthentication\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasPolicies\"\n          >• {{ \"includeEnterprisePolicies\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-container>\n      <ng-template #fullFeatureList>\n        <small *ngIf=\"selectableProduct.product == productTypes.Free\"\n          >• {{ \"limitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"selectableProduct.product != productTypes.Free && selectableProduct.maxUsers\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxUsers\">• {{ \"addShareUnlimitedUsers\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.maxCollections\"\n          >• {{ \"limitedCollections\" | i18n: selectableProduct.maxCollections }}</small\n        >\n        <small *ngIf=\"selectableProduct.maxAdditionalSeats\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxAdditionalSeats }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxCollections\"\n          >• {{ \"createUnlimitedCollections\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.baseStorageGb\"\n          >• {{ \"gbEncryptedFileStorage\" | i18n: selectableProduct.baseStorageGb + \"GB\" }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasGroups\">• {{ \"controlAccessWithGroups\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasApi\">• {{ \"trackAuditLogs\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasDirectory\"\n          >• {{ \"syncUsersFromDirectory\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.usersGetPremium\">• {{ \"usersGetPremium\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.product != productTypes.Free\"\n          >• {{ \"priorityCustomerSupport\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-template>\n      <span *ngIf=\"selectableProduct.product != productTypes.Free\">\n        <ng-container *ngIf=\"selectableProduct.basePrice && !acceptingSponsorship\">\n          {{ selectableProduct.basePrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }},\n          {{ \"includesXUsers\" | i18n: selectableProduct.baseSeats }}\n          <ng-container *ngIf=\"selectableProduct.hasAdditionalSeatsOption\">\n            {{ (\"additionalUsers\" | i18n).toLowerCase() }}\n            {{ selectableProduct.seatPrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </ng-container>\n        </ng-container>\n      </span>\n      <span *ngIf=\"!selectableProduct.basePrice && selectableProduct.hasAdditionalSeatsOption\">\n        {{ \"costPerUser\" | i18n: (selectableProduct.seatPrice / 12 | currency: \"$\") }} /{{\n          \"month\" | i18n\n        }}\n      </span>\n      <span *ngIf=\"selectableProduct.product == productTypes.Free\">{{ \"freeForever\" | i18n }}</span>\n    </label>\n  </div>\n  <div *ngIf=\"formGroup.controls['product'].value !== productTypes.Free\">\n    <ng-container *ngIf=\"selectedPlan.hasAdditionalSeatsOption && !selectedPlan.baseSeats\">\n      <h2 class=\"mt-5\">{{ \"users\" | i18n }}</h2>\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <label for=\"additionalSeats\">{{ \"userSeats\" | i18n }}</label>\n          <input\n            id=\"additionalSeats\"\n            class=\"form-control\"\n            type=\"number\"\n            name=\"additionalSeats\"\n            formControlName=\"additionalSeats\"\n            placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n            required\n          />\n          <small class=\"text-muted form-text\">{{ \"userSeatsHowManyDesc\" | i18n }}</small>\n        </div>\n      </div>\n    </ng-container>\n    <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n    <div class=\"row\" *ngIf=\"selectedPlan.hasAdditionalSeatsOption && selectedPlan.baseSeats\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalSeats\">{{ \"additionalUserSeats\" | i18n }}</label>\n        <input\n          id=\"additionalSeats\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalSeats\"\n          formControlName=\"additionalSeats\"\n          placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"userSeatsAdditionalDesc\"\n            | i18n: selectedPlan.baseSeats:(seatPriceMonthly(selectedPlan) | currency: \"$\")\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n        <input\n          id=\"additionalStorage\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalStorageGb\"\n          formControlName=\"additionalStorage\"\n          step=\"1\"\n          placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"additionalStorageIntervalDesc\"\n            | i18n\n              : \"1 GB\"\n              : (additionalStoragePriceMonthly(selectedPlan) | currency: \"$\")\n              : (\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\" *ngIf=\"selectedPlan.hasPremiumAccessOption\">\n        <div class=\"form-check\">\n          <input\n            id=\"premiumAccess\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"premiumAccessAddon\"\n            formControlName=\"premiumAccessAddon\"\n          />\n          <label for=\"premiumAccess\" class=\"form-check-label bold\">{{\n            \"premiumAccess\" | i18n\n          }}</label>\n        </div>\n        <small class=\"text-muted form-text\">{{\n          \"premiumAccessDesc\" | i18n: (3.33 | currency: \"$\"):(\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n    <div class=\"form-check form-check-block\" *ngFor=\"let selectablePlan of selectablePlans\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"plan\"\n        id=\"interval{{ selectablePlan.type }}\"\n        [value]=\"selectablePlan.type\"\n        formControlName=\"plan\"\n      />\n      <label class=\"form-check-label\" for=\"interval{{ selectablePlan.type }}\">\n        <ng-container *ngIf=\"selectablePlan.isAnnual\">\n          {{ \"annually\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            <ng-container *ngIf=\"acceptingSponsorship; else notAcceptingSponsorship\">\n              <span style=\"text-decoration: line-through\">{{\n                selectablePlan.basePrice | currency: \"$\"\n              }}</span>\n              {{ \"freeWithSponsorship\" | i18n }}\n            </ng-container>\n            <ng-template #notAcceptingSponsorship>\n              {{ selectablePlan.basePrice | currency: \"$\" }}\n              /{{ \"year\" | i18n }}\n            </ng-template>\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} = {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{\n              \"year\" | i18n\n            }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"year\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\">\n            {{ \"premiumAccess\" | i18n }}:\n            {{ selectablePlan.premiumAccessOptionCost / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ 40 | currency: \"$\" }}\n            /{{ \"year\" | i18n }}\n          </small>\n        </ng-container>\n        <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n          {{ \"monthly\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ selectablePlan.basePrice | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice | currency: \"$\" }} {{ \"monthAbbr\" | i18n }} =\n            {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n          <small\n            *ngIf=\"\n              selectablePlan.hasPremiumAccessOption &&\n              formGroup.controls['premiumAccessAddon'].value\n            \"\n          >\n            {{ \"premiumAccess\" | i18n }}:\n            {{ selectablePlan.premiumAccessOptionCost | currency: \"$\" }} {{ \"monthAbbr\" | i18n }} =\n            {{ 40 | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n        </ng-container>\n      </label>\n    </div>\n    <hr class=\"my-3\" />\n    <h2 class=\"spaced-header mb-4\">\n      {{ (createOrganization ? \"paymentInformation\" : \"billingInformation\") | i18n }}\n    </h2>\n    <small class=\"text-muted font-italic mb-3 d-block\">\n      {{ paymentDesc }}\n    </small>\n    <app-payment *ngIf=\"createOrganization\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    <div id=\"price\" class=\"my-4\">\n      <div class=\"text-muted text-sm\">\n        {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n        <br />\n        <ng-container>\n          {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n        </ng-container>\n      </div>\n      <hr class=\"my-1 col-3 ml-0\" />\n      <p class=\"text-lg\">\n        <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{\n          selectedPlanInterval | i18n\n        }}\n      </p>\n    </div>\n    <ng-container *ngIf=\"!createOrganization\">\n      <app-payment [showMethods]=\"false\"></app-payment>\n    </ng-container>\n  </div>\n  <div *ngIf=\"singleOrgPolicyBlock\" class=\"mt-4\">\n    <app-callout [type]=\"'error'\">{{ \"singleOrgBlockCreateMessage\" | i18n }}</app-callout>\n  </div>\n  <div class=\"mt-4\">\n    <bit-submit-button [loading]=\"form.loading\" [disabled]=\"!formGroup.valid\">{{\n      \"submit\" | i18n\n    }}</bit-submit-button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { OrganizationCreateRequest } from \"@bitwarden/common/models/request/organizationCreateRequest\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organizationKeysRequest\";\nimport { OrganizationUpgradeRequest } from \"@bitwarden/common/models/request/organizationUpgradeRequest\";\nimport { ProviderOrganizationCreateRequest } from \"@bitwarden/common/models/request/provider/providerOrganizationCreateRequest\";\nimport { PlanResponse } from \"@bitwarden/common/models/response/planResponse\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-organization-plans\",\n  templateUrl: \"organization-plans.component.html\",\n})\nexport class OrganizationPlansComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxComponent: TaxInfoComponent;\n\n  @Input() organizationId: string;\n  @Input() showFree = true;\n  @Input() showCancel = false;\n  @Input() acceptingSponsorship = false;\n  @Input() product: ProductType = ProductType.Free;\n  @Input() plan: PlanType = PlanType.Free;\n  @Input() providerId: string;\n  @Output() onSuccess = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  loading = true;\n  selfHosted = false;\n  productTypes = ProductType;\n  formPromise: Promise<any>;\n  singleOrgPolicyBlock = false;\n  discount = 0;\n\n  formGroup = this.formBuilder.group({\n    name: [\"\"],\n    billingEmail: [\"\", [Validators.email]],\n    businessOwned: [false],\n    premiumAccessAddon: [false],\n    additionalStorage: [0, [Validators.min(0), Validators.max(99)]],\n    additionalSeats: [0, [Validators.min(0), Validators.max(100000)]],\n    clientOwnerEmail: [\"\", [Validators.email]],\n    businessName: [\"\"],\n    plan: [this.plan],\n    product: [this.product],\n  });\n\n  plans: PlanResponse[];\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private router: Router,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private organizationService: OrganizationService,\n    private logService: LogService,\n    private messagingService: MessagingService,\n    private formBuilder: FormBuilder\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    if (!this.selfHosted) {\n      const plans = await this.apiService.getPlans();\n      this.plans = plans.data;\n      if (this.product === ProductType.Enterprise || this.product === ProductType.Teams) {\n        this.formGroup.controls.businessOwned.setValue(true);\n      }\n    }\n\n    if (this.providerId) {\n      this.formGroup.controls.businessOwned.setValue(true);\n      this.changedOwnedBusiness();\n    }\n\n    if (!this.createOrganization || this.acceptingSponsorship) {\n      this.formGroup.controls.product.setValue(ProductType.Families);\n      this.changedProduct();\n    }\n\n    if (this.createOrganization) {\n      this.formGroup.controls.name.addValidators(Validators.required);\n      this.formGroup.controls.billingEmail.addValidators(Validators.required);\n    }\n\n    this.loading = false;\n  }\n\n  get createOrganization() {\n    return this.organizationId == null;\n  }\n\n  get selectedPlan() {\n    return this.plans.find((plan) => plan.type === this.formGroup.controls.plan.value);\n  }\n\n  get selectedPlanInterval() {\n    return this.selectedPlan.isAnnual ? \"year\" : \"month\";\n  }\n\n  get selectableProducts() {\n    let validPlans = this.plans.filter((plan) => plan.type !== PlanType.Custom);\n\n    if (this.formGroup.controls.businessOwned.value) {\n      validPlans = validPlans.filter((plan) => plan.canBeUsedByBusiness);\n    }\n\n    if (!this.showFree) {\n      validPlans = validPlans.filter((plan) => plan.product !== ProductType.Free);\n    }\n\n    validPlans = validPlans.filter(\n      (plan) =>\n        !plan.legacyYear &&\n        !plan.disabled &&\n        (plan.isAnnual || plan.product === this.productTypes.Free)\n    );\n\n    if (this.acceptingSponsorship) {\n      const familyPlan = this.plans.find((plan) => plan.type === PlanType.FamiliesAnnually);\n      this.discount = familyPlan.basePrice;\n      validPlans = [familyPlan];\n    }\n\n    return validPlans;\n  }\n\n  get selectablePlans() {\n    return this.plans.filter(\n      (plan) =>\n        !plan.legacyYear && !plan.disabled && plan.product === this.formGroup.controls.product.value\n    );\n  }\n\n  additionalStoragePriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.additionalStoragePricePerGb;\n    }\n    return selectedPlan.additionalStoragePricePerGb / 12;\n  }\n\n  seatPriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.seatPrice;\n    }\n    return selectedPlan.seatPrice / 12;\n  }\n\n  additionalStorageTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalStorageOption) {\n      return 0;\n    }\n\n    return (\n      plan.additionalStoragePricePerGb *\n      Math.abs(this.formGroup.controls.additionalStorage.value || 0)\n    );\n  }\n\n  seatTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalSeatsOption) {\n      return 0;\n    }\n\n    return plan.seatPrice * Math.abs(this.formGroup.controls.additionalSeats.value || 0);\n  }\n\n  get subtotal() {\n    let subTotal = this.selectedPlan.basePrice;\n    if (\n      this.selectedPlan.hasAdditionalSeatsOption &&\n      this.formGroup.controls.additionalSeats.value\n    ) {\n      subTotal += this.seatTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasAdditionalStorageOption &&\n      this.formGroup.controls.additionalStorage.value\n    ) {\n      subTotal += this.additionalStorageTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasPremiumAccessOption &&\n      this.formGroup.controls.premiumAccessAddon.value\n    ) {\n      subTotal += this.selectedPlan.premiumAccessOptionPrice;\n    }\n    return subTotal - this.discount;\n  }\n\n  get freeTrial() {\n    return this.selectedPlan.trialPeriodDays != null;\n  }\n\n  get taxCharges() {\n    return this.taxComponent != null && this.taxComponent.taxRate != null\n      ? (this.taxComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total() {\n    return this.subtotal + this.taxCharges || 0;\n  }\n\n  get paymentDesc() {\n    if (this.acceptingSponsorship) {\n      return this.i18nService.t(\"paymentSponsored\");\n    } else if (this.freeTrial && this.createOrganization) {\n      return this.i18nService.t(\"paymentChargedWithTrial\");\n    } else {\n      return this.i18nService.t(\"paymentCharged\", this.i18nService.t(this.selectedPlanInterval));\n    }\n  }\n\n  changedProduct() {\n    this.formGroup.controls.plan.setValue(this.selectablePlans[0].type);\n    if (!this.selectedPlan.hasPremiumAccessOption) {\n      this.formGroup.controls.premiumAccessAddon.setValue(false);\n    }\n    if (!this.selectedPlan.hasAdditionalStorageOption) {\n      this.formGroup.controls.additionalStorage.setValue(0);\n    }\n    if (!this.selectedPlan.hasAdditionalSeatsOption) {\n      this.formGroup.controls.additionalSeats.setValue(0);\n    } else if (\n      !this.formGroup.controls.additionalSeats.value &&\n      !this.selectedPlan.baseSeats &&\n      this.selectedPlan.hasAdditionalSeatsOption\n    ) {\n      this.formGroup.controls.additionalSeats.setValue(1);\n    }\n  }\n\n  changedOwnedBusiness() {\n    if (!this.formGroup.controls.businessOwned.value || this.selectedPlan.canBeUsedByBusiness) {\n      return;\n    }\n    this.formGroup.controls.product.setValue(ProductType.Teams);\n    this.formGroup.controls.plan.setValue(PlanType.TeamsAnnually);\n    this.changedProduct();\n  }\n\n  changedCountry() {\n    this.paymentComponent.hideBank = this.taxComponent.taxInfo.country !== \"US\";\n    // Bank Account payments are only available for US customers\n    if (\n      this.paymentComponent.hideBank &&\n      this.paymentComponent.method === PaymentMethodType.BankAccount\n    ) {\n      this.paymentComponent.method = PaymentMethodType.Card;\n      this.paymentComponent.changeMethod();\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  async submit() {\n    this.singleOrgPolicyBlock = await this.userHasBlockingSingleOrgPolicy();\n\n    if (this.singleOrgPolicyBlock) {\n      return;\n    }\n\n    try {\n      const doSubmit = async (): Promise<string> => {\n        let orgId: string = null;\n        if (this.createOrganization) {\n          const shareKey = await this.cryptoService.makeShareKey();\n          const key = shareKey[0].encryptedString;\n          const collection = await this.cryptoService.encrypt(\n            this.i18nService.t(\"defaultCollection\"),\n            shareKey[1]\n          );\n          const collectionCt = collection.encryptedString;\n          const orgKeys = await this.cryptoService.makeKeyPair(shareKey[1]);\n\n          if (this.selfHosted) {\n            orgId = await this.createSelfHosted(key, collectionCt, orgKeys);\n          } else {\n            orgId = await this.createCloudHosted(key, collectionCt, orgKeys, shareKey[1]);\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            this.i18nService.t(\"organizationCreated\"),\n            this.i18nService.t(\"organizationReadyToGo\")\n          );\n        } else {\n          orgId = await this.updateOrganization(orgId);\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"organizationUpgraded\")\n          );\n        }\n\n        await this.apiService.refreshIdentityToken();\n        await this.syncService.fullSync(true);\n        if (!this.acceptingSponsorship) {\n          this.router.navigate([\"/organizations/\" + orgId]);\n        }\n\n        return orgId;\n      };\n\n      this.formPromise = doSubmit();\n      const organizationId = await this.formPromise;\n      this.onSuccess.emit({ organizationId: organizationId });\n      this.messagingService.send(\"organizationCreated\", organizationId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async userHasBlockingSingleOrgPolicy() {\n    return this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n  }\n\n  private async updateOrganization(orgId: string) {\n    const request = new OrganizationUpgradeRequest();\n    request.businessName = this.formGroup.controls.businessOwned.value\n      ? this.formGroup.controls.businessName.value\n      : null;\n    request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n    request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n    request.premiumAccessAddon =\n      this.selectedPlan.hasPremiumAccessOption && this.formGroup.controls.premiumAccessAddon.value;\n    request.planType = this.selectedPlan.type;\n    request.billingAddressCountry = this.taxComponent.taxInfo.country;\n    request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n\n    // Retrieve org info to backfill pub/priv key if necessary\n    const org = await this.organizationService.get(this.organizationId);\n    if (!org.hasPublicAndPrivateKeys) {\n      const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n      const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n      request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    }\n\n    const result = await this.apiService.postOrganizationUpgrade(this.organizationId, request);\n    if (!result.success && result.paymentIntentClientSecret != null) {\n      await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n    }\n    return this.organizationId;\n  }\n\n  private async createCloudHosted(\n    key: string,\n    collectionCt: string,\n    orgKeys: [string, EncString],\n    orgKey: SymmetricCryptoKey\n  ) {\n    const request = new OrganizationCreateRequest();\n    request.key = key;\n    request.collectionName = collectionCt;\n    request.name = this.formGroup.controls.name.value;\n    request.billingEmail = this.formGroup.controls.billingEmail.value;\n    request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n\n    if (this.selectedPlan.type === PlanType.Free) {\n      request.planType = PlanType.Free;\n    } else {\n      const tokenResult = await this.paymentComponent.createPaymentToken();\n\n      request.paymentToken = tokenResult[0];\n      request.paymentMethodType = tokenResult[1];\n      request.businessName = this.formGroup.controls.businessOwned.value\n        ? this.formGroup.controls.businessName.value\n        : null;\n      request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n      request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n      request.premiumAccessAddon =\n        this.selectedPlan.hasPremiumAccessOption &&\n        this.formGroup.controls.premiumAccessAddon.value;\n      request.planType = this.selectedPlan.type;\n      request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n      request.billingAddressCountry = this.taxComponent.taxInfo.country;\n      if (this.taxComponent.taxInfo.includeTaxId) {\n        request.taxIdNumber = this.taxComponent.taxInfo.taxId;\n        request.billingAddressLine1 = this.taxComponent.taxInfo.line1;\n        request.billingAddressLine2 = this.taxComponent.taxInfo.line2;\n        request.billingAddressCity = this.taxComponent.taxInfo.city;\n        request.billingAddressState = this.taxComponent.taxInfo.state;\n      }\n    }\n\n    if (this.providerId) {\n      const providerRequest = new ProviderOrganizationCreateRequest(\n        this.formGroup.controls.clientOwnerEmail.value,\n        request\n      );\n      const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n      providerRequest.organizationCreateRequest.key = (\n        await this.cryptoService.encrypt(orgKey.key, providerKey)\n      ).encryptedString;\n      const orgId = (\n        await this.apiService.postProviderCreateOrganization(this.providerId, providerRequest)\n      ).organizationId;\n\n      return orgId;\n    } else {\n      return (await this.apiService.postOrganization(request)).id;\n    }\n  }\n\n  private async createSelfHosted(key: string, collectionCt: string, orgKeys: [string, EncString]) {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      throw new Error(this.i18nService.t(\"selectFile\"));\n    }\n\n    const fd = new FormData();\n    fd.append(\"license\", files[0]);\n    fd.append(\"key\", key);\n    fd.append(\"collectionName\", collectionCt);\n    const response = await this.apiService.postOrganizationLicense(fd);\n    const orgId = response.id;\n\n    // Org Keys live outside of the OrganizationLicense - add the keys to the org here\n    const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    await this.apiService.postOrganizationKeys(orgId, request);\n\n    return orgId;\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\n@Component({\n  selector: \"app-change-plan\",\n  templateUrl: \"change-plan.component.html\",\n})\nexport class ChangePlanComponent {\n  @Input() organizationId: string;\n  @Output() onChanged = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<any>;\n  defaultUpgradePlan: PlanType = PlanType.FamiliesAnnually;\n  defaultUpgradeProduct: ProductType = ProductType.Families;\n\n  constructor(private logService: LogService) {}\n\n  async submit() {\n    try {\n      this.onChanged.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<div class=\"card card-org-plans\">\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h2 class=\"card-body-header\">{{ \"changeBillingPlan\" | i18n }}</h2>\n    <p class=\"mb-0\">{{ \"changeBillingPlanUpgrade\" | i18n }}</p>\n    <app-organization-plans\n      [showFree]=\"false\"\n      [showCancel]=\"true\"\n      [plan]=\"defaultUpgradePlan\"\n      [product]=\"defaultUpgradeProduct\"\n      [organizationId]=\"organizationId\"\n      (onCanceled)=\"cancel()\"\n    >\n    </app-organization-plans>\n  </div>\n</div>\n","export class OrganizationSubscriptionUpdateRequest {\n  constructor(public seatAdjustment: number, public maxAutoscaleSeats?: number) {}\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationSubscriptionUpdateRequest } from \"@bitwarden/common/models/request/organizationSubscriptionUpdateRequest\";\n\n@Component({\n  selector: \"app-adjust-subscription\",\n  templateUrl: \"adjust-subscription.component.html\",\n})\nexport class AdjustSubscription {\n  @Input() organizationId: string;\n  @Input() maxAutoscaleSeats: number;\n  @Input() currentSeatCount: number;\n  @Input() seatPrice = 0;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter();\n\n  formPromise: Promise<any>;\n  limitSubscription: boolean;\n  newSeatCount: number;\n  newMaxSeats: number;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  ngOnInit() {\n    this.limitSubscription = this.maxAutoscaleSeats != null;\n    this.newSeatCount = this.currentSeatCount;\n    this.newMaxSeats = this.maxAutoscaleSeats;\n  }\n\n  async submit() {\n    try {\n      const seatAdjustment = this.newSeatCount - this.currentSeatCount;\n      const request = new OrganizationSubscriptionUpdateRequest(seatAdjustment, this.newMaxSeats);\n      this.formPromise = this.apiService.postOrganizationUpdateSubscription(\n        this.organizationId,\n        request\n      );\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"subscriptionUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.onAdjusted.emit();\n  }\n\n  limitSubscriptionChanged() {\n    if (!this.limitSubscription) {\n      this.newMaxSeats = null;\n    }\n  }\n\n  get adjustedSeatTotal(): number {\n    return this.newSeatCount * this.seatPrice;\n  }\n\n  get maxSeatTotal(): number {\n    return this.newMaxSeats * this.seatPrice;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"newSeatCount\">{{ \"subscriptionSeats\" | i18n }}</label>\n        <input\n          id=\"newSeatCount\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"NewSeatCount\"\n          [(ngModel)]=\"newSeatCount\"\n          min=\"0\"\n          step=\"1\"\n          required\n        />\n        <small class=\"d-block text-muted mb-4\">\n          <strong>{{ \"total\" | i18n }}:</strong> {{ newSeatCount || 0 }} &times;\n          {{ seatPrice | currency: \"$\" }} = {{ adjustedSeatTotal | currency: \"$\" }} /\n          {{ interval | i18n }}\n        </small>\n      </div>\n    </div>\n    <div class=\"row mb-4\">\n      <div class=\"form-group col-sm\">\n        <div class=\"form-check\">\n          <input\n            id=\"limitSubscription\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"LimitSubscription\"\n            [(ngModel)]=\"limitSubscription\"\n            (change)=\"limitSubscriptionChanged()\"\n          />\n          <label for=\"limitSubscription\">{{ \"limitSubscription\" | i18n }}</label>\n        </div>\n        <small class=\"d-block text-muted\">{{ \"limitSubscriptionDesc\" | i18n }}</small>\n      </div>\n    </div>\n    <div class=\"row mb-4\" [hidden]=\"!limitSubscription\">\n      <div class=\"form-group col-sm\">\n        <label for=\"maxAutoscaleSeats\">{{ \"maxSeatLimit\" | i18n }}</label>\n        <input\n          id=\"maxAutoscaleSeats\"\n          class=\"form-control col-6\"\n          type=\"number\"\n          name=\"MaxAutoscaleSeats\"\n          [(ngModel)]=\"newMaxSeats\"\n          [min]=\"newSeatCount == null ? 1 : newSeatCount\"\n          step=\"1\"\n          [required]=\"limitSubscription\"\n        />\n        <small class=\"d-block text-muted\">\n          <strong>{{ \"maxSeatCost\" | i18n }}:</strong> {{ newMaxSeats || 0 }} &times;\n          {{ seatPrice | currency: \"$\" }} = {{ maxSeatTotal | currency: \"$\" }} /\n          {{ interval | i18n }}\n        </small>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"save\" | i18n }}</span>\n    </button>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","export class StorageRequest {\n  storageGbAdjustment: number;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ (add ? \"addStorage\" : \"removeStorage\") | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"storageAdjustment\">{{\n          (add ? \"gbStorageAdd\" : \"gbStorageRemove\") | i18n\n        }}</label>\n        <input\n          id=\"storageAdjustment\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"StroageGbAdjustment\"\n          [(ngModel)]=\"storageAdjustment\"\n          min=\"0\"\n          max=\"99\"\n          step=\"1\"\n          required\n        />\n      </div>\n    </div>\n    <div *ngIf=\"add\" class=\"mb-3\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ storageAdjustment || 0 }} GB &times;\n      {{ storageGbPrice | currency: \"$\" }} = {{ adjustedStorageTotal | currency: \"$\" }} /{{\n        interval | i18n\n      }}\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n    <small class=\"d-block text-muted mt-3\">\n      {{ (add ? \"storageAddNote\" : \"storageRemoveNote\") | i18n }}\n    </small>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StorageRequest } from \"@bitwarden/common/models/request/storageRequest\";\nimport { PaymentResponse } from \"@bitwarden/common/models/response/paymentResponse\";\n\nimport { PaymentComponent } from \"./payment.component\";\n\n@Component({\n  selector: \"app-adjust-storage\",\n  templateUrl: \"adjust-storage.component.html\",\n})\nexport class AdjustStorageComponent {\n  @Input() storageGbPrice = 0;\n  @Input() add = true;\n  @Input() organizationId: string;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter<number>();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n  storageAdjustment = 0;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new StorageRequest();\n      request.storageGbAdjustment = this.storageAdjustment;\n      if (!this.add) {\n        request.storageGbAdjustment *= -1;\n      }\n\n      let paymentFailed = false;\n      const action = async () => {\n        let response: Promise<PaymentResponse>;\n        if (this.organizationId == null) {\n          response = this.formPromise = this.apiService.postAccountStorage(request);\n        } else {\n          response = this.formPromise = this.apiService.postOrganizationStorage(\n            this.organizationId,\n            request\n          );\n        }\n        const result = await response;\n        if (result != null && result.paymentIntentClientSecret != null) {\n          try {\n            await this.paymentComponent.handleStripeCardPayment(\n              result.paymentIntentClientSecret,\n              null\n            );\n          } catch {\n            paymentFailed = true;\n          }\n        }\n      };\n      this.formPromise = action();\n      await this.formPromise;\n      this.onAdjusted.emit(this.storageAdjustment);\n      if (paymentFailed) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          null,\n          this.i18nService.t(\"couldNotChargeCardPayInvoice\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"../billing\"], { relativeTo: this.activatedRoute });\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"adjustedStorage\", request.storageGbAdjustment.toString())\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  get adjustedStorageTotal(): number {\n    return this.storageGbPrice * this.storageAdjustment;\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\n\n@Component({\n  selector: \"app-download-license\",\n  templateUrl: \"download-license.component.html\",\n})\nexport class DownloadLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onDownloaded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  installationId: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private fileDownloadService: FileDownloadService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.installationId == null || this.installationId === \"\") {\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.getOrganizationLicense(\n        this.organizationId,\n        this.installationId\n      );\n      const license = await this.formPromise;\n      const licenseString = JSON.stringify(license, null, 2);\n      this.fileDownloadService.download({\n        fileName: \"bitwarden_organization_license.json\",\n        blobData: licenseString,\n      });\n      this.onDownloaded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"downloadLicense\" | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <div class=\"d-flex\">\n          <label for=\"installationId\">{{ \"enterInstallationId\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/licensing-on-premise/#organization-account-sharing\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"installationId\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"InstallationId\"\n          [(ngModel)]=\"installationId\"\n          required\n        />\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-update-license\",\n  templateUrl: \"update-license.component.html\",\n})\nexport class UpdateLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onUpdated = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    try {\n      const fd = new FormData();\n      fd.append(\"license\", files[0]);\n\n      let updatePromise: Promise<any> = null;\n      if (this.organizationId == null) {\n        updatePromise = this.apiService.postAccountLicense(fd);\n      } else {\n        updatePromise = this.apiService.postOrganizationLicenseUpdate(this.organizationId, fd);\n      }\n\n      this.formPromise = updatePromise.then(() => {\n        return this.apiService.refreshIdentityToken();\n      });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedLicense\"));\n      this.onUpdated.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"form-group\">\n    <label for=\"file\" class=\"sr-only\">{{ \"licenseFile\" | i18n }}</label>\n    <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n    <small class=\"form-text text-muted\">{{\n      \"licenseFileDesc\"\n        | i18n\n          : (!organizationId\n              ? \"bitwarden_premium_license.json\"\n              : \"bitwarden_organization_license.json\")\n    }}</small>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"submit\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","<div class=\"page-header\">\n  <h1>\n    {{ \"subscription\" | i18n }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<ng-container *ngIf=\"firstLoaded && !userOrg.canManageBilling\">\n  <div class=\"tw-flex tw-flex-col tw-items-center tw-text-info\">\n    <app-image-org-subscription-hidden></app-image-org-subscription-hidden>\n    <p class=\"tw-font-bold\">{{ \"billingManagedByProvider\" | i18n: this.userOrg.providerName }}</p>\n    <p>{{ \"billingContactProviderForAssistance\" | i18n }}</p>\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"sub\">\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</app-callout\n  >\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      #reinstateBtn\n      type=\"button\"\n      class=\"btn btn-outline-secondary btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"reinstateBtn.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </app-callout>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <dl>\n          <dt>{{ \"billingPlan\" | i18n }}</dt>\n          <dd>{{ sub.plan.name }}</dd>\n          <ng-container *ngIf=\"subscription\">\n            <dt>{{ \"status\" | i18n }}</dt>\n            <dd>\n              <span class=\"text-capitalize\">{{\n                isSponsoredSubscription ? \"sponsored\" : subscription.status || \"-\"\n              }}</span>\n              <span bitBadge badgeType=\"warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n                \"pendingCancellation\" | i18n\n              }}</span>\n            </dd>\n            <dt>{{ \"nextCharge\" | i18n }}</dt>\n            <dd>\n              {{\n                nextInvoice\n                  ? (nextInvoice.date | date: \"mediumDate\") +\n                    \", \" +\n                    (nextInvoice.amount | currency: \"$\")\n                  : \"-\"\n              }}\n            </dd>\n          </ng-container>\n        </dl>\n      </div>\n      <div class=\"col-8\" *ngIf=\"subscription\">\n        <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n        <table class=\"table\">\n          <tbody>\n            <tr *ngFor=\"let i of subscription.items\">\n              <td>\n                {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n                {{ i.amount | currency: \"$\" }}\n              </td>\n              <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <ng-container *ngIf=\"userOrg?.providerId != null\">\n        <div class=\"col-sm\">\n          <dl>\n            <dt>{{ \"provider\" | i18n }}</dt>\n            <dd>{{ \"yourProviderIs\" | i18n: userOrg.providerName }}</dd>\n          </dl>\n        </div>\n      </ng-container>\n    </div>\n    <ng-container>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"changePlan()\"\n        *ngIf=\"showChangePlanButton\"\n      >\n        {{ \"changeBillingPlan\" | i18n }}\n      </button>\n      <app-change-plan\n        [organizationId]=\"organizationId\"\n        (onChanged)=\"closeChangePlan(true)\"\n        (onCanceled)=\"closeChangePlan(false)\"\n        *ngIf=\"showChangePlan\"\n      ></app-change-plan>\n    </ng-container>\n    <h2 class=\"spaced-header\">{{ \"manageSubscription\" | i18n }}</h2>\n    <p class=\"mb-4\">{{ subscriptionDesc }}</p>\n    <ng-container\n      *ngIf=\"\n        subscription && canAdjustSeats && !subscription.cancelled && !subscriptionMarkedForCancel\n      \"\n    >\n      <div class=\"mt-3\">\n        <app-adjust-subscription\n          [seatPrice]=\"seatPrice\"\n          [organizationId]=\"organizationId\"\n          [interval]=\"billingInterval\"\n          [currentSeatCount]=\"seats\"\n          [maxAutoscaleSeats]=\"maxAutoscaleSeats\"\n          (onAdjusted)=\"subscriptionAdjusted()\"\n        >\n        </app-adjust-subscription>\n      </div>\n    </ng-container>\n    <button\n      #removeSponsorshipBtn\n      type=\"button\"\n      class=\"btn btn-outline-danger btn-submit\"\n      (click)=\"removeSponsorship()\"\n      [appApiAction]=\"removeSponsorshipPromise\"\n      [disabled]=\"removeSponsorshipBtn.loading\"\n      *ngIf=\"isSponsoredSubscription\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"removeSponsorship\" | i18n }}</span>\n    </button>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary ml-1\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"storageGbPrice\"\n          [add]=\"adjustStorageAdd\"\n          [organizationId]=\"organizationId\"\n          [interval]=\"billingInterval\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n    <!--Switch to i18n-->\n    <h2 class=\"spaced-header\">{{ \"selfHostingTitle\" | i18n }}</h2>\n    <p class=\"mb-4\">\n      {{ \"selfHostingEnterpriseOrganizationSectionCopy\" | i18n }}\n    </p>\n    <div class=\"d-flex\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"canDownloadLicense\"\n        [disabled]=\"showDownloadLicense\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary ml-1\"\n        (click)=\"manageBillingSync()\"\n        *ngIf=\"canManageBillingSync\"\n      >\n        {{ (hasBillingSyncToken ? \"manageBillingSync\" : \"setUpBillingSync\") | i18n }}\n      </button>\n    </div>\n    <div class=\"mt-3\" *ngIf=\"showDownloadLicense\">\n      <app-download-license\n        [organizationId]=\"organizationId\"\n        (onDownloaded)=\"closeDownloadLicense()\"\n        (onCanceled)=\"closeDownloadLicense()\"\n      ></app-download-license>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"additionalOptions\" | i18n }}</h2>\n    <p class=\"mb-4\">\n      {{ \"additionalOptionsDesc\" | i18n }}\n    </p>\n    <div class=\"d-flex\">\n      <button\n        #cancelBtn\n        type=\"button\"\n        class=\"btn btn-outline-danger btn-submit ml-1\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"cancelBtn.loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"selfHosted\">\n    <dl>\n      <dt>{{ \"billingPlan\" | i18n }}</dt>\n      <dd>{{ sub.plan.name }}</dd>\n      <dt>{{ \"expiration\" | i18n }}</dt>\n      <dd *ngIf=\"sub.expiration\">\n        {{ sub.expiration | date: \"mediumDate\" }}\n        <span *ngIf=\"isExpired\" class=\"text-danger ml-2\">\n          <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n          {{ \"licenseIsExpired\" | i18n }}\n        </span>\n      </dd>\n      <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n    </dl>\n    <div>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        href=\"https://vault.bitwarden.com\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        class=\"btn btn-outline-secondary\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          [organizationId]=\"organizationId\"\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        ></app-update-license>\n      </div>\n    </div>\n    <div *ngIf=\"showBillingSyncKey\">\n      <h2 class=\"mt-5\">\n        {{ \"billingSync\" | i18n }}\n      </h2>\n      <p>\n        {{ \"billingSyncDesc\" | i18n }}\n      </p>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"manageBillingSyncSelfHosted()\"\n      >\n        {{ \"manageBillingSync\" | i18n }}\n      </button>\n      <small class=\"form-text text-muted\" *ngIf=\"billingSyncSetUp\">\n        {{ \"lastSync\" | i18n }}:\n        <span *ngIf=\"userOrg.familySponsorshipLastSyncDate != null\">\n          {{ userOrg.familySponsorshipLastSyncDate | date: \"medium\" }}\n        </span>\n        <span *ngIf=\"userOrg.familySponsorshipLastSyncDate == null\">\n          {{ \"never\" | i18n | lowercase }}\n        </span>\n      </small>\n    </div>\n  </ng-container>\n</ng-container>\n<ng-template #setupBillingSyncTemplate></ng-template>\n<ng-template #rotateBillingSyncKeyTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/enums/organizationApiKeyType\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/enums/organizationConnectionType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { BillingSyncConfigApi } from \"@bitwarden/common/models/api/billingSyncConfigApi\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/models/response/organizationConnectionResponse\";\nimport { OrganizationSubscriptionResponse } from \"@bitwarden/common/models/response/organizationSubscriptionResponse\";\n\nimport { BillingSyncKeyComponent } from \"src/app/settings/billing-sync-key.component\";\n\nimport { BillingSyncApiKeyComponent } from \"./billing-sync-api-key.component\";\n\n@Component({\n  selector: \"app-org-subscription\",\n  templateUrl: \"organization-subscription.component.html\",\n})\nexport class OrganizationSubscriptionComponent implements OnInit {\n  @ViewChild(\"setupBillingSyncTemplate\", { read: ViewContainerRef, static: true })\n  setupBillingSyncModalRef: ViewContainerRef;\n\n  loading = false;\n  firstLoaded = false;\n  organizationId: string;\n  adjustSeatsAdd = true;\n  showAdjustSeats = false;\n  showAdjustSeatAutoscale = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  showBillingSyncKey = false;\n  showDownloadLicense = false;\n  showChangePlan = false;\n  sub: OrganizationSubscriptionResponse;\n  selfHosted = false;\n  hasBillingSyncToken: boolean;\n\n  userOrg: Organization;\n  existingBillingSyncConnection: OrganizationConnectionResponse<BillingSyncConfigApi>;\n\n  removeSponsorshipPromise: Promise<any>;\n  cancelPromise: Promise<any>;\n  reinstatePromise: Promise<any>;\n\n  @ViewChild(\"rotateBillingSyncKeyTemplate\", { read: ViewContainerRef, static: true })\n  billingSyncKeyViewContainerRef: ViewContainerRef;\n  billingSyncKeyRef: [ModalRef, BillingSyncKeyComponent];\n\n  constructor(\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private logService: LogService,\n    private modalService: ModalService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    this.loading = true;\n    this.userOrg = await this.organizationService.get(this.organizationId);\n    if (this.userOrg.canManageBilling) {\n      this.sub = await this.apiService.getOrganizationSubscription(this.organizationId);\n    }\n    const apiKeyResponse = await this.apiService.getOrganizationApiKeyInformation(\n      this.organizationId\n    );\n    this.hasBillingSyncToken = apiKeyResponse.data.some(\n      (i) => i.keyType === OrganizationApiKeyType.BillingSync\n    );\n\n    if (this.selfHosted) {\n      this.showBillingSyncKey = await this.apiService.getCloudCommunicationsEnabled();\n    }\n\n    if (this.showBillingSyncKey) {\n      this.existingBillingSyncConnection = await this.apiService.getOrganizationConnection(\n        this.organizationId,\n        OrganizationConnectionType.CloudBillingSync,\n        BillingSyncConfigApi\n      );\n    }\n\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.apiService.postOrganizationReinstate(this.organizationId);\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.apiService.postOrganizationCancel(this.organizationId);\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async changePlan() {\n    this.showChangePlan = !this.showChangePlan;\n  }\n\n  closeChangePlan(changed: boolean) {\n    this.showChangePlan = false;\n  }\n\n  downloadLicense() {\n    this.showDownloadLicense = !this.showDownloadLicense;\n  }\n\n  async manageBillingSync() {\n    const [ref] = await this.modalService.openViewRef(\n      BillingSyncApiKeyComponent,\n      this.setupBillingSyncModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.hasBillingToken = this.hasBillingSyncToken;\n      }\n    );\n    ref.onClosed.subscribe(async () => {\n      await this.load();\n    });\n  }\n\n  closeDownloadLicense() {\n    this.showDownloadLicense = false;\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(updated: boolean) {\n    this.showUpdateLicense = false;\n    if (updated) {\n      this.load();\n      this.messagingService.send(\"updatedOrgLicense\");\n    }\n  }\n\n  subscriptionAdjusted() {\n    this.load();\n  }\n\n  adjustStorage(add: boolean) {\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  async removeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeSponsorshipConfirmation\"),\n      this.i18nService.t(\"removeSponsorship\"),\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    try {\n      this.removeSponsorshipPromise = this.apiService.deleteRemoveSponsorship(this.organizationId);\n      await this.removeSponsorshipPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removeSponsorshipSuccess\")\n      );\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async manageBillingSyncSelfHosted() {\n    this.billingSyncKeyRef = await this.modalService.openViewRef(\n      BillingSyncKeyComponent,\n      this.billingSyncKeyViewContainerRef,\n      (comp) => {\n        comp.entityId = this.organizationId;\n        comp.existingConnectionId = this.existingBillingSyncConnection?.id;\n        comp.billingSyncKey = this.existingBillingSyncConnection?.config?.billingSyncKey;\n        comp.setParentConnection = (\n          connection: OrganizationConnectionResponse<BillingSyncConfigApi>\n        ) => {\n          this.existingBillingSyncConnection = connection;\n          this.billingSyncKeyRef[0].close();\n        };\n      }\n    );\n  }\n\n  get isExpired() {\n    return (\n      this.sub != null && this.sub.expiration != null && new Date(this.sub.expiration) < new Date()\n    );\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get billingInterval() {\n    const monthly = !this.sub.plan.isAnnual;\n    return monthly ? \"month\" : \"year\";\n  }\n\n  get storageGbPrice() {\n    return this.sub.plan.additionalStoragePricePerGb;\n  }\n\n  get seatPrice() {\n    return this.sub.plan.seatPrice;\n  }\n\n  get seats() {\n    return this.sub.seats;\n  }\n\n  get maxAutoscaleSeats() {\n    return this.sub.maxAutoscaleSeats;\n  }\n\n  get canAdjustSeats() {\n    return this.sub.plan.hasAdditionalSeatsOption;\n  }\n\n  get isSponsoredSubscription(): boolean {\n    return this.sub.subscription?.items.some((i) => i.sponsoredSubscriptionItem);\n  }\n\n  get canDownloadLicense() {\n    return (\n      (this.sub.planType !== PlanType.Free && this.subscription == null) ||\n      (this.subscription != null && !this.subscription.cancelled)\n    );\n  }\n\n  get canManageBillingSync() {\n    return (\n      !this.selfHosted &&\n      (this.sub.planType === PlanType.EnterpriseAnnually ||\n        this.sub.planType === PlanType.EnterpriseMonthly ||\n        this.sub.planType === PlanType.EnterpriseAnnually2019 ||\n        this.sub.planType === PlanType.EnterpriseMonthly2019)\n    );\n  }\n\n  get subscriptionDesc() {\n    if (this.sub.planType === PlanType.Free) {\n      return this.i18nService.t(\"subscriptionFreePlan\", this.sub.seats.toString());\n    } else if (\n      this.sub.planType === PlanType.FamiliesAnnually ||\n      this.sub.planType === PlanType.FamiliesAnnually2019\n    ) {\n      if (this.isSponsoredSubscription) {\n        return this.i18nService.t(\"subscriptionSponsoredFamiliesPlan\", this.sub.seats.toString());\n      } else {\n        return this.i18nService.t(\"subscriptionFamiliesPlan\", this.sub.seats.toString());\n      }\n    } else if (this.sub.maxAutoscaleSeats === this.sub.seats && this.sub.seats != null) {\n      return this.i18nService.t(\"subscriptionMaxReached\", this.sub.seats.toString());\n    } else if (this.sub.maxAutoscaleSeats == null) {\n      return this.i18nService.t(\"subscriptionUserSeatsUnlimitedAutoscale\");\n    } else {\n      return this.i18nService.t(\n        \"subscriptionUserSeatsLimitedAutoscale\",\n        this.sub.maxAutoscaleSeats.toString()\n      );\n    }\n  }\n\n  get showChangePlanButton() {\n    return this.subscription == null && this.sub.planType === PlanType.Free && !this.showChangePlan;\n  }\n\n  get billingSyncSetUp() {\n    return this.existingBillingSyncConnection?.id != null;\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myOrganization\" | i18n }}\n          </a>\n          <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"subscription\" | i18n }}\n          </a>\n          <a\n            routerLink=\"billing\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"showBilling\"\n          >\n            {{ \"billing\" | i18n }}\n          </a>\n          <a\n            routerLink=\"two-factor\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"access2fa\"\n          >\n            {{ \"twoStepLogin\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-org-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent {\n  access2fa = false;\n  showBilling: boolean;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      const organization = await this.organizationService.get(params.organizationId);\n      this.showBilling = !this.platformUtilsService.isSelfHost() && organization.canManageBilling;\n      this.access2fa = organization.use2fa;\n    });\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorDuoRequest extends SecretVerificationRequest {\n  integrationKey: string;\n  secretKey: string;\n  host: string;\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorProviderRequest extends SecretVerificationRequest {\n  type: TwoFactorProviderType;\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { TwoFactorProviderRequest } from \"@bitwarden/common/models/request/twoFactorProviderRequest\";\n\n@Directive()\nexport abstract class TwoFactorBaseComponent {\n  @Output() onUpdated = new EventEmitter<boolean>();\n\n  type: TwoFactorProviderType;\n  organizationId: string;\n  twoFactorProviderType = TwoFactorProviderType;\n  enabled = false;\n  authed = false;\n\n  protected hashedSecret: string;\n  protected verificationType: VerificationType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected userVerificationService: UserVerificationService\n  ) {}\n\n  protected auth(authResponse: any) {\n    this.hashedSecret = authResponse.secret;\n    this.verificationType = authResponse.verificationType;\n    this.authed = true;\n  }\n\n  protected async enable(enableFunction: () => Promise<void>) {\n    try {\n      await enableFunction();\n      this.onUpdated.emit(true);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async disable(promise: Promise<any>) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepDisableDesc\"),\n      this.i18nService.t(\"disable\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      const request = await this.buildRequestModel(TwoFactorProviderRequest);\n      request.type = this.type;\n      if (this.organizationId != null) {\n        promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\n      } else {\n        promise = this.apiService.putTwoFactorDisable(request);\n      }\n      await promise;\n      this.enabled = false;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"twoStepDisabled\"));\n      this.onUpdated.emit(false);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async buildRequestModel<T extends SecretVerificationRequest>(\n    requestClass: new () => T\n  ) {\n    return this.userVerificationService.buildRequest(\n      {\n        secret: this.hashedSecret,\n        type: this.verificationType,\n      },\n      requestClass,\n      true\n    );\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { TwoFactorAuthenticatorResponse } from \"@bitwarden/common/models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"@bitwarden/common/models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"@bitwarden/common/models/response/twoFactorEmailResponse\";\nimport { TwoFactorRecoverResponse } from \"@bitwarden/common/models/response/twoFactorRescoverResponse\";\nimport { TwoFactorWebAuthnResponse } from \"@bitwarden/common/models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"@bitwarden/common/models/response/twoFactorYubiKeyResponse\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\ntype TwoFactorResponse =\n  | TwoFactorRecoverResponse\n  | TwoFactorDuoResponse\n  | TwoFactorEmailResponse\n  | TwoFactorWebAuthnResponse\n  | TwoFactorAuthenticatorResponse\n  | TwoFactorYubiKeyResponse;\n\n@Component({\n  selector: \"app-two-factor-verify\",\n  templateUrl: \"two-factor-verify.component.html\",\n})\nexport class TwoFactorVerifyComponent {\n  @Input() type: TwoFactorProviderType;\n  @Input() organizationId: string;\n  @Output() onAuthed = new EventEmitter<any>();\n\n  secret: Verification;\n  formPromise: Promise<TwoFactorResponse>;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async submit() {\n    let hashedSecret: string;\n\n    try {\n      this.formPromise = this.userVerificationService.buildRequest(this.secret).then((request) => {\n        hashedSecret =\n          this.secret.type === VerificationType.MasterPassword\n            ? request.masterPasswordHash\n            : request.otp;\n        return this.apiCall(request);\n      });\n\n      const response = await this.formPromise;\n      this.onAuthed.emit({\n        response: response,\n        secret: hashedSecret,\n        verificationType: this.secret.type,\n      });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private apiCall(request: SecretVerificationRequest): Promise<TwoFactorResponse> {\n    switch (this.type) {\n      case -1 as TwoFactorProviderType:\n        return this.apiService.getTwoFactorRecover(request);\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        if (this.organizationId != null) {\n          return this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\n        } else {\n          return this.apiService.getTwoFactorDuo(request);\n        }\n      case TwoFactorProviderType.Email:\n        return this.apiService.getTwoFactorEmail(request);\n      case TwoFactorProviderType.WebAuthn:\n        return this.apiService.getTwoFactorWebAuthn(request);\n      case TwoFactorProviderType.Authenticator:\n        return this.apiService.getTwoFactorAuthenticator(request);\n      case TwoFactorProviderType.Yubikey:\n        return this.apiService.getTwoFactorYubiKey(request);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"modal-body\">\n    <p>{{ \"twoStepLoginAuthDesc\" | i18n }}</p>\n    <app-user-verification [(ngModel)]=\"secret\" ngDefaultControl name=\"secret\">\n    </app-user-verification>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"continue\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n      {{ \"close\" | i18n }}\n    </button>\n  </div>\n</form>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faDuoTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" title=\"2faDuoTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>Duo</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <strong>{{ \"twoFactorDuoIntegrationKey\" | i18n }}:</strong> {{ ikey }}\n            <br />\n            <strong>{{ \"twoFactorDuoSecretKey\" | i18n }}:</strong> {{ skey }}\n            <br />\n            <strong>{{ \"twoFactorDuoApiHostname\" | i18n }}:</strong> {{ host }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <p>{{ \"twoFactorDuoDesc\" | i18n }}</p>\n            <div class=\"form-group\">\n              <label for=\"ikey\">{{ \"twoFactorDuoIntegrationKey\" | i18n }}</label>\n              <input\n                id=\"ikey\"\n                type=\"text\"\n                name=\"IntegrationKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"ikey\"\n                required\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"skey\">{{ \"twoFactorDuoSecretKey\" | i18n }}</label>\n              <input\n                id=\"skey\"\n                type=\"password\"\n                name=\"SecretKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"skey\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"host\">{{ \"twoFactorDuoApiHostname\" | i18n }}</label>\n              <input\n                id=\"host\"\n                type=\"text\"\n                name=\"Host\"\n                class=\"form-control\"\n                [(ngModel)]=\"host\"\n                placeholder=\"{{ 'ex' | i18n }} api-xxxxxxxx.duosecurity.com\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorDuoRequest } from \"@bitwarden/common/models/request/updateTwoFactorDuoRequest\";\nimport { TwoFactorDuoResponse } from \"@bitwarden/common/models/response/twoFactorDuoResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-duo\",\n  templateUrl: \"two-factor-duo.component.html\",\n})\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Duo;\n  ikey: string;\n  skey: string;\n  host: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorDuoRequest);\n    request.integrationKey = this.ikey;\n    request.secretKey = this.skey;\n    request.host = this.host;\n\n    return super.enable(async () => {\n      if (this.organizationId != null) {\n        this.formPromise = this.apiService.putTwoFactorOrganizationDuo(\n          this.organizationId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.putTwoFactorDuo(request);\n      }\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private processResponse(response: TwoFactorDuoResponse) {\n    this.ikey = response.integrationKey;\n    this.skey = response.secretKey;\n    this.host = response.host;\n    this.enabled = response.enabled;\n  }\n}\n","export class DeviceVerificationRequest {\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(unknownDeviceVerificationEnabled: boolean) {\n    this.unknownDeviceVerificationEnabled = unknownDeviceVerificationEnabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorAuthenticatorRequest extends SecretVerificationRequest {\n  token: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faAuthenticatorTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faAuthenticatorTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"authenticatorAppTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorDesc\" | i18n }}</p>\n            <p>\n              <strong>1. {{ \"twoStepAuthenticatorDownloadApp\" | i18n }}</strong>\n            </p>\n          </ng-container>\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              <p>{{ \"twoStepLoginProviderEnabled\" | i18n }}</p>\n              {{ \"twoStepAuthenticatorReaddDesc\" | i18n }}\n            </app-callout>\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorNeedApp\" | i18n }}</p>\n          </ng-container>\n          <ul class=\"bwi-ul\">\n            <li>\n              <i class=\"bwi bwi-li bwi-apple\"></i>{{ \"iosDevices\" | i18n }}:\n              <a\n                href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-android\"></i>{{ \"androidDevices\" | i18n }}:\n              <a\n                href=\"https://play.google.com/store/apps/details?id=com.authy.authy\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-windows\"></i>{{ \"windowsDevices\" | i18n }}:\n              <a\n                href=\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Microsoft Authenticator</a\n              >\n            </li>\n          </ul>\n          <p>{{ \"twoStepAuthenticatorAppsRecommended\" | i18n }}</p>\n          <p *ngIf=\"!enabled\">\n            <strong>2. {{ \"twoStepAuthenticatorScanCode\" | i18n }}</strong>\n          </p>\n          <hr *ngIf=\"enabled\" />\n          <p class=\"text-center\" [ngClass]=\"{ 'mb-0': enabled }\">\n            <canvas id=\"qr\"></canvas><br />\n            <code appA11yTitle=\"{{ 'key' | i18n }}\">{{ key }}</code>\n          </p>\n          <ng-container *ngIf=\"!enabled\">\n            <label for=\"token\">3. {{ \"twoStepAuthenticatorEnterCode\" | i18n }}</label>\n            <input\n              id=\"token\"\n              type=\"text\"\n              name=\"Token\"\n              class=\"form-control\"\n              [(ngModel)]=\"token\"\n              required\n              appInputVerbatim\n            />\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"@bitwarden/common/models/request/updateTwoFactorAuthenticatorRequest\";\nimport { TwoFactorAuthenticatorResponse } from \"@bitwarden/common/models/response/twoFactorAuthenticatorResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-authenticator\",\n  templateUrl: \"two-factor-authenticator.component.html\",\n})\nexport class TwoFactorAuthenticatorComponent\n  extends TwoFactorBaseComponent\n  implements OnInit, OnDestroy\n{\n  type = TwoFactorProviderType.Authenticator;\n  key: string;\n  token: string;\n  formPromise: Promise<any>;\n\n  private qrScript: HTMLScriptElement;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    userVerificationService: UserVerificationService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n    this.qrScript = window.document.createElement(\"script\");\n    this.qrScript.src = \"scripts/qrious.min.js\";\n    this.qrScript.async = true;\n  }\n\n  ngOnInit() {\n    window.document.body.appendChild(this.qrScript);\n  }\n\n  ngOnDestroy() {\n    window.document.body.removeChild(this.qrScript);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorAuthenticatorRequest);\n    request.token = this.token;\n    request.key = this.key;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorAuthenticatorResponse) {\n    this.token = null;\n    this.enabled = response.enabled;\n    this.key = response.key;\n    const email = await this.stateService.getEmail();\n    window.setTimeout(() => {\n      new (window as any).QRious({\n        element: document.getElementById(\"qr\"),\n        value:\n          \"otpauth://totp/Bitwarden:\" +\n          encodeURIComponent(email) +\n          \"?secret=\" +\n          encodeURIComponent(this.key) +\n          \"&issuer=Bitwarden\",\n        size: 160,\n      });\n    }, 100);\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorEmailRequest extends SecretVerificationRequest {\n  token: string;\n  email: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faEmailTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faEmailTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"emailTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <strong>{{ \"email\" | i18n }}:</strong> {{ email }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <p class=\"d-flex\">\n              <span class=\"mr-3\">{{ \"twoFactorEmailDesc\" | i18n }}</span>\n              <img class=\"float-right ml-auto mfaType1\" alt=\"Email logo\" />\n            </p>\n            <div class=\"form-group\">\n              <label for=\"email\">1. {{ \"twoFactorEmailEnterEmail\" | i18n }}</label>\n              <input\n                id=\"email\"\n                type=\"text\"\n                name=\"Email\"\n                class=\"form-control\"\n                [(ngModel)]=\"email\"\n                required\n                inputmode=\"email\"\n                appInputVerbatim=\"false\"\n              />\n            </div>\n            <div class=\"mb-3 d-flex\">\n              <button\n                #sendBtn\n                type=\"button\"\n                class=\"btn btn-outline-primary btn-sm btn-submit align-self-start\"\n                (click)=\"sendEmail()\"\n                [appApiAction]=\"emailPromise\"\n                [disabled]=\"sendBtn.loading\"\n              >\n                <i\n                  class=\"bwi bwi-spinner bwi-spin\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span>{{ \"sendEmail\" | i18n }}</span>\n              </button>\n              <span class=\"text-success ml-3\" *ngIf=\"sentEmail\">\n                {{ \"verificationCodeEmailSent\" | i18n: sentEmail }}\n              </span>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"token\">2. {{ \"twoFactorEmailEnterCode\" | i18n }}</label>\n              <input\n                id=\"token\"\n                type=\"text\"\n                name=\"Token\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/twoFactorEmailRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"@bitwarden/common/models/request/updateTwoFactorEmailRequest\";\nimport { TwoFactorEmailResponse } from \"@bitwarden/common/models/response/twoFactorEmailResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-email\",\n  templateUrl: \"two-factor-email.component.html\",\n})\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Email;\n  email: string;\n  token: string;\n  sentEmail: string;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  async sendEmail() {\n    try {\n      const request = await this.buildRequestModel(TwoFactorEmailRequest);\n      request.email = this.email;\n      this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\n      await this.emailPromise;\n      this.sentEmail = this.email;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorEmailRequest);\n    request.email = this.email;\n    request.token = this.token;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorEmail(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorEmailResponse) {\n    this.token = null;\n    this.email = response.email;\n    this.enabled = response.enabled;\n    if (!this.enabled && (this.email == null || this.email === \"\")) {\n      this.email = await this.stateService.getEmail();\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faRecoveryTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faRecoveryTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"recoveryCodeTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <ng-container *ngIf=\"authed\">\n        <div class=\"modal-body text-center\">\n          <ng-container *ngIf=\"code\">\n            <p>{{ \"twoFactorRecoveryYourCode\" | i18n }}:</p>\n            <code class=\"text-lg\">{{ code }}</code>\n          </ng-container>\n          <ng-container *ngIf=\"!code\">\n            {{ \"twoFactorRecoveryNoCode\" | i18n }}\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\" *ngIf=\"code\">\n            {{ \"printCode\" | i18n }}\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorRecoverResponse } from \"@bitwarden/common/models/response/twoFactorRescoverResponse\";\n\n@Component({\n  selector: \"app-two-factor-recovery\",\n  templateUrl: \"two-factor-recovery.component.html\",\n})\nexport class TwoFactorRecoveryComponent {\n  type = -1;\n  code: string;\n  authed: boolean;\n  twoFactorProviderType = TwoFactorProviderType;\n\n  constructor(private i18nService: I18nService) {}\n\n  auth(authResponse: any) {\n    this.authed = true;\n    this.processResponse(authResponse.response);\n  }\n\n  print() {\n    const w = window.open();\n    w.document.write(\n      '<div style=\"font-size: 18px; text-align: center;\">' +\n        \"<p>\" +\n        this.i18nService.t(\"twoFactorRecoveryYourCode\") +\n        \":</p>\" +\n        \"<code style=\\\"font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;\\\">\" +\n        this.code +\n        \"</code></div>\" +\n        '<p style=\"text-align: center;\">' +\n        new Date() +\n        \"</p>\"\n    );\n    w.onafterprint = () => w.close();\n    w.print();\n  }\n\n  private formatString(s: string) {\n    if (s == null) {\n      return null;\n    }\n    return s\n      .replace(/(.{4})/g, \"$1 \")\n      .trim()\n      .toUpperCase();\n  }\n\n  private processResponse(response: TwoFactorRecoverResponse) {\n    this.code = this.formatString(response.code);\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorWebAuthnDeleteRequest extends SecretVerificationRequest {\n  id: number;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorWebAuthnRequest extends SecretVerificationRequest {\n  deviceResponse: PublicKeyCredential;\n  name: string;\n  id: number;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faU2fTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faU2fTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"webAuthnTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorWebAuthnWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorWebAuthnSupportWeb\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right ml-5 mfaType7\" alt=\"FIDO2 WebAuthn logo'\" />\n          <ul class=\"bwi-ul\">\n            <li\n              *ngFor=\"let k of keys; let i = index\"\n              #removeKeyBtn\n              [appApiAction]=\"k.removePromise\"\n            >\n              <i class=\"bwi bwi-li bwi-key\"></i>\n              <strong *ngIf=\"!k.configured || !k.name\">{{ \"webAuthnkeyX\" | i18n: i + 1 }}</strong>\n              <strong *ngIf=\"k.configured && k.name\">{{ k.name }}</strong>\n              <ng-container *ngIf=\"k.configured && !removeKeyBtn.loading\">\n                <ng-container *ngIf=\"k.migrated\">\n                  <span>{{ \"webAuthnMigrated\" | i18n }}</span>\n                </ng-container>\n              </ng-container>\n              <ng-container *ngIf=\"keysConfiguredCount > 1 && k.configured\">\n                <i\n                  class=\"bwi bwi-spin bwi-spinner text-muted bwi-fw\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  *ngIf=\"removeKeyBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                -\n                <a href=\"#\" appStopClick (click)=\"remove(k)\">{{ \"remove\" | i18n }}</a>\n              </ng-container>\n            </li>\n          </ul>\n          <hr />\n          <p>{{ \"twoFactorWebAuthnAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorU2fGiveName\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fPlugInReadKey\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fSaveForm\" | i18n }}</li>\n          </ol>\n          <div class=\"row\">\n            <div class=\"form-group col-6\">\n              <label for=\"name\">{{ \"name\" | i18n }}</label>\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"Name\"\n                class=\"form-control\"\n                [(ngModel)]=\"name\"\n                [disabled]=\"!keyIdAvailable\"\n              />\n            </div>\n          </div>\n          <button\n            type=\"button\"\n            (click)=\"readKey()\"\n            class=\"btn btn-outline-secondary mr-2\"\n            [disabled]=\"readKeyBtn.loading || webAuthnListening || !keyIdAvailable\"\n            #readKeyBtn\n            [appApiAction]=\"challengePromise\"\n          >\n            {{ \"readKey\" | i18n }}\n          </button>\n          <ng-container *ngIf=\"readKeyBtn.loading\">\n            <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n          </ng-container>\n          <ng-container *ngIf=\"!readKeyBtn.loading\">\n            <ng-container *ngIf=\"webAuthnListening\">\n              <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fWaiting\" | i18n }}...\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnResponse\">\n              <i class=\"bwi bwi-check-circle text-success\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fClickSave\" | i18n }}\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnError\">\n              <i class=\"bwi bwi-exclamation-triangle text-danger\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fProblemReadingTryAgain\" | i18n }}\n            </ng-container>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            [disabled]=\"form.loading || !webAuthnResponse\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              *ngIf=\"form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!form.loading\">{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"disableBtn.loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"@bitwarden/common/models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"@bitwarden/common/models/request/updateTwoFactorWebAuthnRequest\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"@bitwarden/common/models/response/twoFactorWebAuthnResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-webauthn\",\n  templateUrl: \"two-factor-webauthn.component.html\",\n})\nexport class TwoFactorWebAuthnComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.WebAuthn;\n  name: string;\n  keys: any[];\n  keyIdAvailable: number = null;\n  keysConfiguredCount = 0;\n  webAuthnError: boolean;\n  webAuthnListening: boolean;\n  webAuthnResponse: PublicKeyCredential;\n  challengePromise: Promise<ChallengeResponse>;\n  formPromise: Promise<any>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    if (this.webAuthnResponse == null || this.keyIdAvailable == null) {\n      // Should never happen.\n      return Promise.reject();\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnRequest);\n    request.deviceResponse = this.webAuthnResponse;\n    request.id = this.keyIdAvailable;\n    request.name = this.name;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorWebAuthn(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  disable() {\n    return super.disable(this.formPromise);\n  }\n\n  async remove(key: any) {\n    if (this.keysConfiguredCount <= 1 || key.removePromise != null) {\n      return;\n    }\n    const name = key.name != null ? key.name : this.i18nService.t(\"webAuthnkeyX\", key.id);\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeU2fConfirmation\"),\n      name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnDeleteRequest);\n    request.id = key.id;\n    try {\n      key.removePromise = this.apiService.deleteTwoFactorWebAuthn(request);\n      const response = await key.removePromise;\n      key.removePromise = null;\n      await this.processResponse(response);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async readKey() {\n    if (this.keyIdAvailable == null) {\n      return;\n    }\n    const request = await this.buildRequestModel(SecretVerificationRequest);\n    try {\n      this.challengePromise = this.apiService.getTwoFactorWebAuthnChallenge(request);\n      const challenge = await this.challengePromise;\n      this.readDevice(challenge);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private readDevice(webAuthnChallenge: ChallengeResponse) {\n    // eslint-disable-next-line\n    console.log(\"listening for key...\");\n    this.resetWebAuthn(true);\n\n    navigator.credentials\n      .create({\n        publicKey: webAuthnChallenge,\n      })\n      .then((data: PublicKeyCredential) => {\n        this.ngZone.run(() => {\n          this.webAuthnListening = false;\n          this.webAuthnResponse = data;\n        });\n      })\n      .catch((err) => {\n        // eslint-disable-next-line\n        console.error(err);\n        this.resetWebAuthn(false);\n        // TODO: Should we display the actual error?\n        this.webAuthnError = true;\n      });\n  }\n\n  private resetWebAuthn(listening = false) {\n    this.webAuthnResponse = null;\n    this.webAuthnError = false;\n    this.webAuthnListening = listening;\n  }\n\n  private processResponse(response: TwoFactorWebAuthnResponse) {\n    this.resetWebAuthn();\n    this.keys = [];\n    this.keyIdAvailable = null;\n    this.name = null;\n    this.keysConfiguredCount = 0;\n    for (let i = 1; i <= 5; i++) {\n      if (response.keys != null) {\n        const key = response.keys.filter((k) => k.id === i);\n        if (key.length > 0) {\n          this.keysConfiguredCount++;\n          this.keys.push({\n            id: i,\n            name: key[0].name,\n            configured: true,\n            migrated: key[0].migrated,\n            removePromise: null,\n          });\n          continue;\n        }\n      }\n      this.keys.push({ id: i, name: null, configured: false, removePromise: null });\n      if (this.keyIdAvailable == null) {\n        this.keyIdAvailable = i;\n      }\n    }\n    this.enabled = response.enabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorYubioOtpRequest extends SecretVerificationRequest {\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faYubiKeyTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faYubiKeyTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>YubiKey</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorYubikeyWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorYubikeySupportUsb\" | i18n }}</li>\n              <li>{{ \"twoFactorYubikeySupportMobile\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right mfaType3\" alt=\"YubiKey OTP security key logo\" />\n          <p>{{ \"twoFactorYubikeyAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorYubikeyPlugIn\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySelectKey\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeyTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySaveForm\" | i18n }}</li>\n          </ol>\n          <hr />\n          <div class=\"row\">\n            <div class=\"form-group col-6\" *ngFor=\"let k of keys; let i = index\">\n              <label for=\"key{{ i + 1 }}\">{{ \"yubikeyX\" | i18n: i + 1 }}</label>\n              <input\n                id=\"key{{ i + 1 }}\"\n                type=\"password\"\n                name=\"Key{{ i + 1 }}\"\n                class=\"form-control\"\n                [(ngModel)]=\"k.key\"\n                *ngIf=\"!k.existingKey\"\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"d-flex\" *ngIf=\"k.existingKey\">\n                <span class=\"mr-2\">{{ k.existingKey }}</span>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link text-danger ml-auto\"\n                  (click)=\"remove(k)\"\n                  appA11yTitle=\"{{ 'remove' | i18n }}\"\n                >\n                  <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <strong class=\"d-block mb-2\">{{ \"nfcSupport\" | i18n }}</strong>\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"nfc\" name=\"Nfc\" [(ngModel)]=\"nfc\" />\n            <label class=\"form-check-label\" for=\"nfc\">{{\n              \"twoFactorYubikeySupportsNfc\" | i18n\n            }}</label>\n          </div>\n          <small class=\"form-text text-muted\">{{ \"twoFactorYubikeySupportsNfcDesc\" | i18n }}</small>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"disableBtn.loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"@bitwarden/common/models/request/updateTwoFactorYubioOtpRequest\";\nimport { TwoFactorYubiKeyResponse } from \"@bitwarden/common/models/response/twoFactorYubiKeyResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-yubikey\",\n  templateUrl: \"two-factor-yubikey.component.html\",\n})\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Yubikey;\n  keys: any[];\n  nfc = false;\n\n  formPromise: Promise<any>;\n  disablePromise: Promise<any>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: any) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    const request = await this.buildRequestModel(UpdateTwoFactorYubioOtpRequest);\n    request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\n    request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\n    request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\n    request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\n    request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\n    request.nfc = this.nfc;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorYubiKey(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"yubikeysUpdated\"));\n    });\n  }\n\n  disable() {\n    return super.disable(this.disablePromise);\n  }\n\n  remove(key: any) {\n    key.existingKey = null;\n    key.key = null;\n  }\n\n  private processResponse(response: TwoFactorYubiKeyResponse) {\n    this.enabled = response.enabled;\n    this.keys = [\n      { key: response.key1, existingKey: this.padRight(response.key1) },\n      { key: response.key2, existingKey: this.padRight(response.key2) },\n      { key: response.key3, existingKey: this.padRight(response.key3) },\n      { key: response.key4, existingKey: this.padRight(response.key4) },\n      { key: response.key5, existingKey: this.padRight(response.key5) },\n    ];\n    this.nfc = response.nfc || !response.enabled;\n  }\n\n  private padRight(str: string, character = \"•\", size = 44) {\n    if (str == null || character == null || str.length >= size) {\n      return str;\n    }\n    const max = (size - str.length) / character.length;\n    for (let i = 0; i < max; i++) {\n      str += character;\n    }\n    return str;\n  }\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"twoStepLogin\" | i18n }}</h1>\n</div>\n<p *ngIf=\"!organizationId\">{{ \"twoStepLoginDesc\" | i18n }}</p>\n<p *ngIf=\"organizationId\">{{ \"twoStepLoginOrganizationDesc\" | i18n }}</p>\n<bit-callout type=\"warning\" *ngIf=\"!organizationId\">\n  <p>{{ \"twoStepLoginRecoveryWarning\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"recoveryCode()\">\n    {{ \"viewRecoveryCode\" | i18n }}\n  </button>\n</bit-callout>\n<h2 [ngClass]=\"{ 'mt-5': !organizationId }\">\n  {{ \"providers\" | i18n }}\n  <small *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-fw text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </small>\n</h2>\n<bit-callout type=\"warning\" *ngIf=\"showPolicyWarning\">\n  {{ \"twoStepLoginPolicyUserWarning\" | i18n }}\n</bit-callout>\n<ul class=\"list-group list-group-2fa\">\n  <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\">\n    <div class=\"logo-2fa d-flex justify-content-center\">\n      <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n    </div>\n    <div class=\"mx-4\">\n      <h3 class=\"mb-0\">\n        {{ p.name }}\n        <ng-container *ngIf=\"p.enabled\">\n          <i\n            class=\"bwi bwi-check text-success bwi-fw\"\n            title=\"{{ 'enabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"enabled\" | i18n }}</span>\n        </ng-container>\n        <app-premium-badge *ngIf=\"p.premium\"></app-premium-badge>\n      </h3>\n      {{ p.description }}\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        bitButton\n        buttonType=\"secondary\"\n        [disabled]=\"!canAccessPremium && p.premium\"\n        (click)=\"manage(p.type)\"\n      >\n        {{ \"manage\" | i18n }}\n      </button>\n    </div>\n  </li>\n</ul>\n<form *ngIf=\"!loading\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h2 class=\"mt-5 spaced-header\">\n        {{ \"deviceVerification\" | i18n }}\n      </h2>\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"enableDeviceVerification\"\n            name=\"enableDeviceVerification\"\n            disabled=\"{{ !isDeviceVerificationSectionEnabled }}\"\n            [(ngModel)]=\"enableDeviceVerification\"\n          />\n          <label class=\"form-check-label\" for=\"enableDeviceVerification\">\n            {{ \"enableDeviceVerification\" | i18n }}\n          </label>\n        </div>\n        <small class=\"form-text text-muted\">{{ \"deviceVerificationDesc\" | i18n }}</small>\n      </div>\n      <bit-submit-button [loading]=\"form.loading\" *ngIf=\"isDeviceVerificationSectionEnabled\">\n        {{ \"save\" | i18n }}\n      </bit-submit-button>\n    </div>\n  </div>\n</form>\n\n<ng-template #authenticatorTemplate></ng-template>\n<ng-template #recoveryTemplate></ng-template>\n<ng-template #duoTemplate></ng-template>\n<ng-template #emailTemplate></ng-template>\n<ng-template #yubikeyTemplate></ng-template>\n<ng-template #webAuthnTemplate></ng-template>\n","import { Component, OnInit, Type, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { DeviceVerificationRequest } from \"@bitwarden/common/models/request/deviceVerificationRequest\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { TwoFactorAuthenticatorComponent } from \"./two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"./two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"./two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"./two-factor-recovery.component\";\nimport { TwoFactorWebAuthnComponent } from \"./two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"./two-factor-yubikey.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"two-factor-setup.component.html\",\n})\nexport class TwoFactorSetupComponent implements OnInit {\n  @ViewChild(\"recoveryTemplate\", { read: ViewContainerRef, static: true })\n  recoveryModalRef: ViewContainerRef;\n  @ViewChild(\"authenticatorTemplate\", { read: ViewContainerRef, static: true })\n  authenticatorModalRef: ViewContainerRef;\n  @ViewChild(\"yubikeyTemplate\", { read: ViewContainerRef, static: true })\n  yubikeyModalRef: ViewContainerRef;\n  @ViewChild(\"duoTemplate\", { read: ViewContainerRef, static: true }) duoModalRef: ViewContainerRef;\n  @ViewChild(\"emailTemplate\", { read: ViewContainerRef, static: true })\n  emailModalRef: ViewContainerRef;\n  @ViewChild(\"webAuthnTemplate\", { read: ViewContainerRef, static: true })\n  webAuthnModalRef: ViewContainerRef;\n\n  organizationId: string;\n  providers: any[] = [];\n  canAccessPremium: boolean;\n  showPolicyWarning = false;\n  loading = true;\n  enableDeviceVerification: boolean;\n  isDeviceVerificationSectionEnabled: boolean;\n  modal: ModalRef;\n  formPromise: Promise<any>;\n\n  constructor(\n    protected apiService: ApiService,\n    protected modalService: ModalService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private stateService: StateService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    try {\n      const deviceVerificationSettings = await this.apiService.getDeviceVerificationSettings();\n      this.isDeviceVerificationSectionEnabled =\n        deviceVerificationSettings.isDeviceVerificationSectionEnabled;\n      this.enableDeviceVerification = deviceVerificationSettings.unknownDeviceVerificationEnabled;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    for (const key in TwoFactorProviders) {\n      // eslint-disable-next-line\n      if (!TwoFactorProviders.hasOwnProperty(key)) {\n        continue;\n      }\n\n      const p = (TwoFactorProviders as any)[key];\n      if (this.filterProvider(p.type)) {\n        continue;\n      }\n\n      this.providers.push({\n        type: p.type,\n        name: p.name,\n        description: p.description,\n        enabled: false,\n        premium: p.premium,\n        sort: p.sort,\n      });\n    }\n\n    this.providers.sort((a: any, b: any) => a.sort - b.sort);\n    await this.load();\n  }\n\n  async load() {\n    this.loading = true;\n    const providerList = await this.getTwoFactorProviders();\n    providerList.data.forEach((p) => {\n      this.providers.forEach((p2) => {\n        if (p.type === p2.type) {\n          p2.enabled = p.enabled;\n        }\n      });\n    });\n    this.evaluatePolicies();\n    this.loading = false;\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.Authenticator: {\n        const authComp = await this.openModal(\n          this.authenticatorModalRef,\n          TwoFactorAuthenticatorComponent\n        );\n        authComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Yubikey: {\n        const yubiComp = await this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\n        yubiComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Duo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Duo);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Email: {\n        const emailComp = await this.openModal(this.emailModalRef, TwoFactorEmailComponent);\n        emailComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Email);\n        });\n        break;\n      }\n      case TwoFactorProviderType.WebAuthn: {\n        const webAuthnComp = await this.openModal(\n          this.webAuthnModalRef,\n          TwoFactorWebAuthnComponent\n        );\n        webAuthnComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.WebAuthn);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  recoveryCode() {\n    this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorProviders();\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type === TwoFactorProviderType.OrganizationDuo;\n  }\n\n  protected async openModal<T>(ref: ViewContainerRef, type: Type<T>): Promise<T> {\n    const [modal, childComponent] = await this.modalService.openViewRef(type, ref);\n    this.modal = modal;\n\n    return childComponent;\n  }\n\n  protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\n    if (!enabled && this.modal != null) {\n      this.modal.close();\n    }\n    this.providers.forEach((p) => {\n      if (p.type === type) {\n        p.enabled = enabled;\n      }\n    });\n    this.evaluatePolicies();\n  }\n\n  private async evaluatePolicies() {\n    if (this.organizationId == null && this.providers.filter((p) => p.enabled).length === 1) {\n      this.showPolicyWarning = await this.policyService.policyAppliesToUser(\n        PolicyType.TwoFactorAuthentication\n      );\n    } else {\n      this.showPolicyWarning = false;\n    }\n  }\n\n  async submit() {\n    try {\n      if (this.enableDeviceVerification) {\n        const email = await this.stateService.getEmail();\n        const confirmed = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\n            \"areYouSureYouWantToEnableDeviceVerificationTheVerificationCodeEmailsWillArriveAtX\",\n            email\n          ),\n          this.i18nService.t(\"deviceVerification\"),\n          this.i18nService.t(\"yes\"),\n          this.i18nService.t(\"no\"),\n          \"warning\"\n        );\n        if (!confirmed) {\n          return;\n        }\n      }\n\n      this.formPromise = this.apiService.putDeviceVerificationSettings(\n        new DeviceVerificationRequest(this.enableDeviceVerification)\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedDeviceVerification\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { TwoFactorDuoComponent } from \"../../settings/two-factor-duo.component\";\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from \"../../settings/two-factor-setup.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"../../settings/two-factor-setup.component.html\",\n})\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n  constructor(\n    apiService: ApiService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService\n  ) {\n    super(\n      apiService,\n      modalService,\n      messagingService,\n      policyService,\n      stateService,\n      platformUtilsService,\n      i18nService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await super.ngOnInit();\n    });\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.OrganizationDuo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.type = TwoFactorProviderType.OrganizationDuo;\n        duoComp.organizationId = this.organizationId;\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type !== TwoFactorProviderType.OrganizationDuo;\n  }\n}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { AddEditComponent as OrgAddEditComponent } from \"../organizations/vault/add-edit.component\";\nimport { AddEditComponent } from \"../vault/add-edit.component\";\n\n@Directive()\nexport class CipherReportComponent {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n\n  loading = false;\n  hasLoaded = false;\n  ciphers: CipherView[] = [];\n  organization: Organization;\n\n  constructor(\n    private modalService: ModalService,\n    protected messagingService: MessagingService,\n    public requiresPaid: boolean,\n    private stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async load() {\n    this.loading = true;\n    await this.setCiphers();\n    this.loading = false;\n    this.hasLoaded = true;\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (!(await this.repromptCipher(cipher))) {\n      return;\n    }\n\n    const type = this.organization != null ? OrgAddEditComponent : AddEditComponent;\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      type,\n      this.cipherAddEditModalRef,\n      (comp: OrgAddEditComponent | AddEditComponent) => {\n        if (this.organization != null) {\n          (comp as OrgAddEditComponent).organization = this.organization;\n          comp.organizationId = this.organization.id;\n        }\n\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n\n  protected async checkAccess(): Promise<boolean> {\n    if (this.organization != null) {\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      if (this.requiresPaid && !this.organization.useTotp) {\n        this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n        return false;\n      }\n    } else {\n      const accessPremium = await this.stateService.getCanAccessPremium();\n      if (this.requiresPaid && !accessPremium) {\n        this.messagingService.send(\"premiumRequired\");\n        this.loading = false;\n        return false;\n      }\n    }\n    return true;\n  }\n\n  protected async setCiphers() {\n    this.ciphers = [];\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"exposedPasswordsReport\" | i18n }}</h1>\n</div>\n<p>{{ \"exposedPasswordsReportDesc\" | i18n }}</p>\n<bit-submit-button [loading]=\"loading\" (click)=\"load()\">\n  {{ \"checkExposedPasswords\" | i18n }}\n</bit-submit-button>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noExposedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'exposedPasswordsFound' | i18n }}\" [useAlertRole]=\"true\">\n      {{ \"exposedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"exposedXTimes\" | i18n: (exposedPasswordMap.get(c.id) | number) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-exposed-passwords-report\",\n  templateUrl: \"exposed-passwords-report.component.html\",\n})\nexport class ExposedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  exposedPasswordMap = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  ngOnInit() {\n    this.checkAccess();\n  }\n\n  async load() {\n    if (await this.checkAccess()) {\n      super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const exposedPasswordCiphers: CipherView[] = [];\n    const promises: Promise<void>[] = [];\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const promise = this.auditService.passwordLeaked(c.login.password).then((exposedCount) => {\n        if (exposedCount > 0) {\n          exposedPasswordCiphers.push(c);\n          this.exposedPasswordMap.set(c.id, exposedCount);\n        }\n      });\n      promises.push(promise);\n    });\n    await Promise.all(promises);\n    this.ciphers = exposedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { ExposedPasswordsReportComponent as BaseExposedPasswordsReportComponent } from \"../../reports/exposed-passwords-report.component\";\n\n@Component({\n  selector: \"app-org-exposed-passwords-report\",\n  templateUrl: \"../../reports/exposed-passwords-report.component.html\",\n})\nexport class ExposedPasswordsReportComponent extends BaseExposedPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private organizationService: OrganizationService,\n    private route: ActivatedRoute,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      auditService,\n      modalService,\n      messagingService,\n      stateService,\n      passwordRepromptService\n    );\n  }\n\n  ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await this.checkAccess();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"inactive2faReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"inactive2faReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noInactive2fa\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'inactive2faFound' | i18n }}\">\n      {{ \"inactive2faFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <a\n              bitBadge\n              href=\"{{ cipherDocs.get(c.id) }}\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              *ngIf=\"cipherDocs.has(c.id)\"\n            >\n              {{ \"instructions\" | i18n }}</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"inactive-two-factor-report.component.html\",\n})\nexport class InactiveTwoFactorReportComponent extends CipherReportComponent implements OnInit {\n  services = new Map<string, string>();\n  cipherDocs = new Map<string, string>();\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    try {\n      await this.load2fa();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (this.services.size > 0) {\n      const allCiphers = await this.getAllCiphers();\n      const inactive2faCiphers: CipherView[] = [];\n      const promises: Promise<void>[] = [];\n      const docs = new Map<string, string>();\n      allCiphers.forEach((c) => {\n        if (\n          c.type !== CipherType.Login ||\n          (c.login.totp != null && c.login.totp !== \"\") ||\n          !c.login.hasUris ||\n          c.isDeleted\n        ) {\n          return;\n        }\n        for (let i = 0; i < c.login.uris.length; i++) {\n          const u = c.login.uris[i];\n          if (u.uri != null && u.uri !== \"\") {\n            const uri = u.uri.replace(\"www.\", \"\");\n            const domain = Utils.getDomain(uri);\n            if (domain != null && this.services.has(domain)) {\n              if (this.services.get(domain) != null) {\n                docs.set(c.id, this.services.get(domain));\n              }\n              inactive2faCiphers.push(c);\n            }\n          }\n        }\n      });\n      await Promise.all(promises);\n      this.ciphers = inactive2faCiphers;\n      this.cipherDocs = docs;\n    }\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  private async load2fa() {\n    if (this.services.size > 0) {\n      return;\n    }\n    const response = await fetch(new Request(\"https://2fa.directory/api/v3/totp.json\"));\n    if (response.status !== 200) {\n      throw new Error();\n    }\n    const responseJson = await response.json();\n    for (const service of responseJson) {\n      const serviceData = service[1];\n      if (serviceData.domain == null) {\n        continue;\n      }\n      if (serviceData.documentation == null) {\n        continue;\n      }\n      if (serviceData[\"additional-domains\"] != null) {\n        for (const additionalDomain of serviceData[\"additional-domains\"]) {\n          this.services.set(additionalDomain, serviceData.documentation);\n        }\n      }\n      this.services.set(serviceData.domain, serviceData.documentation);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { InactiveTwoFactorReportComponent as BaseInactiveTwoFactorReportComponent } from \"../../reports/inactive-two-factor-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"../../reports/inactive-two-factor-report.component.html\",\n})\nexport class InactiveTwoFactorReportComponent extends BaseInactiveTwoFactorReportComponent {\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      modalService,\n      messagingService,\n      stateService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"reusedPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"reusedPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noReusedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'reusedPasswordsFound' | i18n }}\">\n      {{ \"reusedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"reusedXTimes\" | i18n: passwordUseMap.get(c.login.password) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"reused-passwords-report.component.html\",\n})\nexport class ReusedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordUseMap: Map<string, number>;\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const ciphersWithPasswords: CipherView[] = [];\n    this.passwordUseMap = new Map<string, number>();\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      ciphersWithPasswords.push(c);\n      if (this.passwordUseMap.has(c.login.password)) {\n        this.passwordUseMap.set(c.login.password, this.passwordUseMap.get(c.login.password) + 1);\n      } else {\n        this.passwordUseMap.set(c.login.password, 1);\n      }\n    });\n    const reusedPasswordCiphers = ciphersWithPasswords.filter(\n      (c) =>\n        this.passwordUseMap.has(c.login.password) && this.passwordUseMap.get(c.login.password) > 1\n    );\n    this.ciphers = reusedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from an organization view\n    return true;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { ReusedPasswordsReportComponent as BaseReusedPasswordsReportComponent } from \"../../reports/reused-passwords-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"../../reports/reused-passwords-report.component.html\",\n})\nexport class ReusedPasswordsReportComponent extends BaseReusedPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, modalService, messagingService, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"container page-content\">\n  <ng-container *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"row\">\n      <div class=\"col-3\">\n        <div class=\"card mb-4\" *ngIf=\"organization.canAccessImportExport\">\n          <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n          <div class=\"list-group list-group-flush\">\n            <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"importData\" | i18n }}\n            </a>\n            <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"exportVault\" | i18n }}\n            </a>\n          </div>\n        </div>\n        <div class=\"card\" *ngIf=\"organization.canAccessReports\">\n          <div class=\"card-header d-flex\">\n            {{ \"reports\" | i18n }}\n            <div class=\"ml-auto\">\n              <a\n                href=\"#\"\n                appStopClick\n                bitBadge\n                *ngIf=\"!accessReports\"\n                (click)=\"upgradeOrganization()\"\n              >\n                {{ \"upgrade\" | i18n }}\n              </a>\n            </div>\n          </div>\n          <div class=\"list-group list-group-flush\">\n            <a\n              routerLink=\"exposed-passwords-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"exposedPasswordsReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"reused-passwords-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"reusedPasswordsReport\" | i18n }}\n            </a>\n            <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"weakPasswordsReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"unsecured-websites-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"unsecuredWebsitesReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"inactive-two-factor-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"inactive2faReport\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-9\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </ng-container>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-tools\",\n  templateUrl: \"tools.component.html\",\n})\nexport class ToolsComponent {\n  organization: Organization;\n  accessReports = false;\n  loading = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private messagingService: MessagingService\n  ) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      this.accessReports = this.organization.useTotp;\n      this.loading = false;\n    });\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"unsecuredWebsitesReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"unsecuredWebsitesReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noUnsecuredWebsites\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'unsecuredWebsitesFound' | i18n }}\">\n      {{ \"unsecuredWebsitesFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"unsecured-websites-report.component.html\",\n})\nexport class UnsecuredWebsitesReportComponent extends CipherReportComponent implements OnInit {\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const unsecuredCiphers = allCiphers.filter((c) => {\n      if (c.type !== CipherType.Login || !c.login.hasUris || c.isDeleted) {\n        return false;\n      }\n      return c.login.uris.some((u) => u.uri != null && u.uri.indexOf(\"http://\") === 0);\n    });\n    this.ciphers = unsecuredCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { UnsecuredWebsitesReportComponent as BaseUnsecuredWebsitesReportComponent } from \"../../reports/unsecured-websites-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"../../reports/unsecured-websites-report.component.html\",\n})\nexport class UnsecuredWebsitesReportComponent extends BaseUnsecuredWebsitesReportComponent {\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, modalService, messagingService, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"weakPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"weakPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noWeakPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'weakPasswordsFound' | i18n }}\">\n      {{ \"weakPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge [badgeType]=\"passwordStrengthMap.get(c.id)[1]\">\n              {{ passwordStrengthMap.get(c.id)[0] | i18n }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"weak-passwords-report.component.html\",\n})\nexport class WeakPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordStrengthMap = new Map<string, [string, string]>();\n\n  private passwordStrengthCache = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const weakPasswordCiphers: CipherView[] = [];\n    const isUserNameNotEmpty = (c: CipherView): boolean => {\n      return c.login.username != null && c.login.username.trim() !== \"\";\n    };\n    const getCacheKey = (c: CipherView): string => {\n      return c.login.password + \"_____\" + (isUserNameNotEmpty(c) ? c.login.username : \"\");\n    };\n\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const hasUserName = isUserNameNotEmpty(c);\n      const cacheKey = getCacheKey(c);\n      if (!this.passwordStrengthCache.has(cacheKey)) {\n        let userInput: string[] = [];\n        if (hasUserName) {\n          const atPosition = c.login.username.indexOf(\"@\");\n          if (atPosition > -1) {\n            userInput = userInput\n              .concat(\n                c.login.username\n                  .substr(0, atPosition)\n                  .trim()\n                  .toLowerCase()\n                  .split(/[^A-Za-z0-9]/)\n              )\n              .filter((i) => i.length >= 3);\n          } else {\n            userInput = c.login.username\n              .trim()\n              .toLowerCase()\n              .split(/[^A-Za-z0-9]/)\n              .filter((i) => i.length >= 3);\n          }\n        }\n        const result = this.passwordGenerationService.passwordStrength(\n          c.login.password,\n          userInput.length > 0 ? userInput : null\n        );\n        this.passwordStrengthCache.set(cacheKey, result.score);\n      }\n      const score = this.passwordStrengthCache.get(cacheKey);\n      if (score != null && score <= 2) {\n        this.passwordStrengthMap.set(c.id, this.scoreKey(score));\n        weakPasswordCiphers.push(c);\n      }\n    });\n    weakPasswordCiphers.sort((a, b) => {\n      return (\n        this.passwordStrengthCache.get(getCacheKey(a)) -\n        this.passwordStrengthCache.get(getCacheKey(b))\n      );\n    });\n    this.ciphers = weakPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n\n  private scoreKey(score: number): [string, string] {\n    switch (score) {\n      case 4:\n        return [\"strong\", \"success\"];\n      case 3:\n        return [\"good\", \"primary\"];\n      case 2:\n        return [\"weak\", \"warning\"];\n      default:\n        return [\"veryWeak\", \"danger\"];\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { WeakPasswordsReportComponent as BaseWeakPasswordsReportComponent } from \"../../reports/weak-passwords-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"../../reports/weak-passwords-report.component.html\",\n})\nexport class WeakPasswordsReportComponent extends BaseWeakPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      passwordGenerationService,\n      modalService,\n      messagingService,\n      stateService,\n      passwordRepromptService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { Permissions } from \"@bitwarden/common/enums/permissions\";\n\nimport { OrganizationVaultModule } from \"../modules/vault/modules/organization-vault/organization-vault.module\";\n\nimport { PermissionsGuard } from \"./guards/permissions.guard\";\nimport { OrganizationLayoutComponent } from \"./layouts/organization-layout.component\";\nimport { CollectionsComponent } from \"./manage/collections.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { GroupsComponent } from \"./manage/groups.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { PoliciesComponent } from \"./manage/policies.component\";\nimport { NavigationPermissionsService } from \"./services/navigation-permissions.service\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { OrganizationBillingComponent } from \"./settings/organization-billing.component\";\nimport { OrganizationSubscriptionComponent } from \"./settings/organization-subscription.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { TwoFactorSetupComponent } from \"./settings/two-factor-setup.component\";\nimport { ExposedPasswordsReportComponent } from \"./tools/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent } from \"./tools/reused-passwords-report.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./tools/weak-passwords-report.component\";\n\nconst routes: Routes = [\n  {\n    path: \":organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, PermissionsGuard],\n    data: {\n      permissions: NavigationPermissionsService.getPermissions(\"admin\"),\n    },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"vault\" },\n      {\n        path: \"vault\",\n        loadChildren: () => OrganizationVaultModule,\n      },\n      {\n        path: \"tools\",\n        component: ToolsComponent,\n        canActivate: [PermissionsGuard],\n        data: { permissions: NavigationPermissionsService.getPermissions(\"tools\") },\n        children: [\n          {\n            path: \"\",\n            pathMatch: \"full\",\n            redirectTo: \"import\",\n          },\n          {\n            path: \"\",\n            loadChildren: () =>\n              import(\"./tools/import-export/org-import-export.module\").then(\n                (m) => m.OrganizationImportExportModule\n              ),\n          },\n          {\n            path: \"exposed-passwords-report\",\n            component: ExposedPasswordsReportComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              titleId: \"exposedPasswordsReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n          {\n            path: \"inactive-two-factor-report\",\n            component: InactiveTwoFactorReportComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              titleId: \"inactive2faReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n          {\n            path: \"reused-passwords-report\",\n            component: ReusedPasswordsReportComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              titleId: \"reusedPasswordsReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n          {\n            path: \"unsecured-websites-report\",\n            component: UnsecuredWebsitesReportComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              titleId: \"unsecuredWebsitesReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n          {\n            path: \"weak-passwords-report\",\n            component: WeakPasswordsReportComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              titleId: \"weakPasswordsReport\",\n              permissions: [Permissions.AccessReports],\n            },\n          },\n        ],\n      },\n      {\n        path: \"manage\",\n        component: ManageComponent,\n        canActivate: [PermissionsGuard],\n        data: {\n          permissions: NavigationPermissionsService.getPermissions(\"manage\"),\n        },\n        children: [\n          {\n            path: \"\",\n            pathMatch: \"full\",\n            redirectTo: \"people\",\n          },\n          {\n            path: \"collections\",\n            component: CollectionsComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              titleId: \"collections\",\n              permissions: [\n                Permissions.CreateNewCollections,\n                Permissions.EditAnyCollection,\n                Permissions.DeleteAnyCollection,\n                Permissions.EditAssignedCollections,\n                Permissions.DeleteAssignedCollections,\n              ],\n            },\n          },\n          {\n            path: \"events\",\n            component: EventsComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              titleId: \"eventLogs\",\n              permissions: [Permissions.AccessEventLogs],\n            },\n          },\n          {\n            path: \"groups\",\n            component: GroupsComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              titleId: \"groups\",\n              permissions: [Permissions.ManageGroups],\n            },\n          },\n          {\n            path: \"people\",\n            component: PeopleComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              titleId: \"people\",\n              permissions: [Permissions.ManageUsers, Permissions.ManageUsersPassword],\n            },\n          },\n          {\n            path: \"policies\",\n            component: PoliciesComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              titleId: \"policies\",\n              permissions: [Permissions.ManagePolicies],\n            },\n          },\n        ],\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        canActivate: [PermissionsGuard],\n        data: { permissions: NavigationPermissionsService.getPermissions(\"settings\") },\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: AccountComponent, data: { titleId: \"myOrganization\" } },\n          {\n            path: \"two-factor\",\n            component: TwoFactorSetupComponent,\n            data: { titleId: \"twoStepLogin\" },\n          },\n          {\n            path: \"billing\",\n            component: OrganizationBillingComponent,\n            canActivate: [PermissionsGuard],\n            data: { titleId: \"billing\", permissions: [Permissions.ManageBilling] },\n          },\n          {\n            path: \"subscription\",\n            component: OrganizationSubscriptionComponent,\n            data: { titleId: \"subscription\" },\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","export enum PlanSponsorshipType {\n  FamiliesForEnterprise = 0,\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"src/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-family-sponsorship\",\n  templateUrl: \"accept-family-sponsorship.component.html\",\n})\nexport class AcceptFamilySponsorshipComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/setup/families-for-enterprise\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    if (!qParams.register) {\n      this.router.navigate([\"/login\"], { queryParams: { email: qParams.email } });\n    } else {\n      this.router.navigate([\"/register\"], { queryParams: { email: qParams.email } });\n    }\n  }\n}\n","import { PlanSponsorshipType } from \"../../../enums/planSponsorshipType\";\n\nexport class OrganizationSponsorshipRedeemRequest {\n  planSponsorshipType: PlanSponsorshipType;\n  sponsoredOrganizationId: string;\n}\n","<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"sponsoredFamiliesOffer\" | i18n }}</h1>\n  </div>\n  <div *ngIf=\"loading\" class=\"mt-5 d-flex justify-content-center\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </div>\n  <div *ngIf=\"!loading && badToken\" class=\"mt-5 d-flex justify-content-center\">\n    <span>{{ \"badToken\" | i18n }}</span>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    ngNativeValidate\n    *ngIf=\"!loading && !badToken\"\n  >\n    <p>\n      <span>{{ \"acceptBitwardenFamiliesHelp\" | i18n }}</span>\n    </p>\n    <div class=\"form-group col-6\">\n      <label for=\"availableSponsorshipOrg\">{{ \"sponsoredFamiliesSelectOffer\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        [(ngModel)]=\"selectedFamilyOrganizationId\"\n        class=\"form-control\"\n        required\n      >\n        <option value=\"\" disabled>-- {{ \"select\" | i18n }} --</option>\n        <option value=\"createNew\">{{ \"newFamiliesOrganization\" | i18n }}</option>\n        <option *ngFor=\"let o of existingFamilyOrganizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div *ngIf=\"showNewOrganization\" class=\"col-12\">\n      <app-organization-plans></app-organization-plans>\n    </div>\n    <div class=\"form-group col-6\" *ngIf=\"!showNewOrganization\">\n      <button class=\"btn btn-primary mt-2 btn-submit\" [disabled]=\"form.loading\" type=\"submit\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"acceptOffer\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSponsorshipRedeemRequest } from \"@bitwarden/common/models/request/organization/organizationSponsorshipRedeemRequest\";\n\nimport { DeleteOrganizationComponent } from \"src/app/organizations/settings/delete-organization.component\";\nimport { OrganizationPlansComponent } from \"src/app/settings/organization-plans.component\";\n\n@Component({\n  selector: \"families-for-enterprise-setup\",\n  templateUrl: \"families-for-enterprise-setup.component.html\",\n})\nexport class FamiliesForEnterpriseSetupComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: false })\n  set organizationPlansComponent(value: OrganizationPlansComponent) {\n    if (!value) {\n      return;\n    }\n\n    value.plan = PlanType.FamiliesAnnually;\n    value.product = ProductType.Families;\n    value.acceptingSponsorship = true;\n    value.onSuccess.subscribe(this.onOrganizationCreateSuccess.bind(this));\n  }\n\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  loading = true;\n  badToken = false;\n  formPromise: Promise<any>;\n\n  token: string;\n  existingFamilyOrganizations: Organization[];\n\n  showNewOrganization = false;\n  _organizationPlansComponent: OrganizationPlansComponent;\n  _selectedFamilyOrganizationId = \"\";\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService,\n    private organizationService: OrganizationService,\n    private modalService: ModalService\n  ) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.token == null;\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"sponsoredFamiliesAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.token = qParams.token;\n\n      await this.syncService.fullSync(true);\n      this.badToken = !(await this.apiService.postPreValidateSponsorshipToken(this.token));\n      this.loading = false;\n\n      this.existingFamilyOrganizations = (await this.organizationService.getAll()).filter(\n        (o) => o.planProductType === ProductType.Families\n      );\n\n      if (this.existingFamilyOrganizations.length === 0) {\n        this.selectedFamilyOrganizationId = \"createNew\";\n      }\n    });\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit(this._selectedFamilyOrganizationId);\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  get selectedFamilyOrganizationId() {\n    return this._selectedFamilyOrganizationId;\n  }\n\n  set selectedFamilyOrganizationId(value: string) {\n    this._selectedFamilyOrganizationId = value;\n    this.showNewOrganization = value === \"createNew\";\n  }\n\n  private async doSubmit(organizationId: string) {\n    try {\n      const request = new OrganizationSponsorshipRedeemRequest();\n      request.planSponsorshipType = PlanSponsorshipType.FamiliesForEnterprise;\n      request.sponsoredOrganizationId = organizationId;\n\n      await this.apiService.postRedeemSponsorship(this.token, request);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"sponsoredFamiliesOfferRedeemed\")\n      );\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      if (this.showNewOrganization) {\n        await this.modalService.openViewRef(\n          DeleteOrganizationComponent,\n          this.deleteModalRef,\n          (comp) => {\n            comp.organizationId = organizationId;\n            comp.deleteOrganizationRequestType = \"InvalidFamiliesForEnterprise\";\n            comp.onSuccess.subscribe(() => {\n              this.router.navigate([\"/\"]);\n            });\n          }\n        );\n      }\n      this.validationService.showError(this.i18nService.t(\"sponsorshipTokenHasExpired\"));\n    }\n  }\n\n  private async onOrganizationCreateSuccess(value: any) {\n    // Use newly created organization id\n    await this.doSubmit(value.organizationId);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"dataBreachReport\" | i18n }}</h1>\n</div>\n<p>{{ \"breachDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"username\">{{ \"username\" | i18n }}</label>\n      <input\n        id=\"username\"\n        type=\"text\"\n        name=\"Username\"\n        class=\"form-control\"\n        [(ngModel)]=\"username\"\n        required\n      />\n      <small class=\"form-text text-muted\">{{ \"breachCheckUsernameEmail\" | i18n }}</small>\n    </div>\n  </div>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"checkBreaches\" | i18n }}\n  </bit-submit-button>\n</form>\n<div class=\"mt-4\" *ngIf=\"!form.loading && checkedUsername\">\n  <p *ngIf=\"error\">{{ \"reportError\" | i18n }}...</p>\n  <ng-container *ngIf=\"!error\">\n    <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!breachedAccounts.length\">\n      {{ \"breachUsernameNotFound\" | i18n: checkedUsername }}\n    </app-callout>\n    <app-callout type=\"danger\" title=\"{{ 'breachFound' | i18n }}\" *ngIf=\"breachedAccounts.length\">\n      {{ \"breachUsernameFound\" | i18n: checkedUsername:breachedAccounts.length }}\n    </app-callout>\n    <ul class=\"list-group list-group-breach\" *ngIf=\"breachedAccounts.length\">\n      <li *ngFor=\"let a of breachedAccounts\" class=\"list-group-item min-height-fix\">\n        <div class=\"row\">\n          <div class=\"col-2 text-center\">\n            <img [src]=\"a.logoPath\" alt=\"\" class=\"img-fluid\" />\n          </div>\n          <div class=\"col-7\">\n            <h3 class=\"text-lg\">{{ a.title }}</h3>\n            <p [innerHTML]=\"a.description\"></p>\n            <p class=\"mb-1\">{{ \"compromisedData\" | i18n }}:</p>\n            <ul>\n              <li *ngFor=\"let d of a.dataClasses\">{{ d }}</li>\n            </ul>\n          </div>\n          <div class=\"col-3\">\n            <dl>\n              <dt>{{ \"website\" | i18n }}</dt>\n              <dd>{{ a.domain }}</dd>\n              <dt>{{ \"affectedUsers\" | i18n }}</dt>\n              <dd>{{ a.pwnCount | number }}</dd>\n              <dt>{{ \"breachOccurred\" | i18n }}</dt>\n              <dd>{{ a.breachDate | date: \"mediumDate\" }}</dd>\n              <dt>{{ \"breachReported\" | i18n }}</dt>\n              <dd>{{ a.addedDate | date: \"mediumDate\" }}</dd>\n            </dl>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </ng-container>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { BreachAccountResponse } from \"@bitwarden/common/models/response/breachAccountResponse\";\n\n@Component({\n  selector: \"app-breach-report\",\n  templateUrl: \"breach-report.component.html\",\n})\nexport class BreachReportComponent implements OnInit {\n  error = false;\n  username: string;\n  checkedUsername: string;\n  breachedAccounts: BreachAccountResponse[] = [];\n  formPromise: Promise<BreachAccountResponse[]>;\n\n  constructor(private auditService: AuditService, private stateService: StateService) {}\n\n  async ngOnInit() {\n    this.username = await this.stateService.getEmail();\n  }\n\n  async submit() {\n    this.error = false;\n    this.username = this.username.toLowerCase();\n    try {\n      this.formPromise = this.auditService.breachedAccounts(this.username);\n      this.breachedAccounts = await this.formPromise;\n    } catch {\n      this.error = true;\n    }\n    this.checkedUsername = this.username;\n  }\n}\n","<a\n  class=\"tw-border tw-border-solid tw-border-secondary-300 tw-rounded tw-overflow-hidden tw-h-full tw-w-72 tw-block !tw-text-main hover:tw-no-underline hover:tw-scale-105 tw-transition-all focus:tw-outline-none focus:tw-ring focus:tw-ring-offset-2 focus:tw-ring-primary-700\"\n  [routerLink]=\"route\"\n  (click)=\"click()\"\n>\n  <div class=\"tw-relative\">\n    <div\n      class=\"tw-text-center tw-h-28 tw-flex tw-bg-background-alt2 tw-text-primary-300\"\n      [ngClass]=\"{ 'tw-grayscale': premium }\"\n    >\n      <div class=\"tw-m-auto\" [innerHtml]=\"icon\"></div>\n    </div>\n    <div class=\"tw-p-5\" [ngClass]=\"{ 'tw-grayscale': report.requiresPremium }\">\n      <h3 class=\"tw-text-xl tw-font-bold tw-mb-4\">{{ report.title | i18n }}</h3>\n      <p class=\"tw-mb-0\">{{ report.description | i18n }}</p>\n    </div>\n    <span\n      bitBadge\n      badgeType=\"success\"\n      class=\"tw-absolute tw-left-2 tw-top-2 tw-leading-none\"\n      *ngIf=\"premium\"\n      >{{ \"premium\" | i18n }}</span\n    >\n  </div>\n</a>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nexport enum ReportTypes {\n  \"exposedPasswords\" = \"exposedPasswords\",\n  \"reusedPasswords\" = \"reusedPasswords\",\n  \"weakPasswords\" = \"weakPasswords\",\n  \"unsecuredWebsites\" = \"unsecuredWebsites\",\n  \"inactive2fa\" = \"inactive2fa\",\n  \"dataBreach\" = \"dataBreach\",\n}\n\ntype ReportEntry = {\n  title: string;\n  description: string;\n  route: string;\n  icon: string;\n  requiresPremium: boolean;\n};\n\nconst reports: Record<ReportTypes, ReportEntry> = {\n  exposedPasswords: {\n    title: \"exposedPasswordsReport\",\n    description: \"exposedPasswordsReportDesc\",\n    route: \"exposed-passwords-report\",\n    icon: `\n      <svg width=\"101\" height=\"77\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.374 50.192a26.42 26.42 0 0 0 9.111 1.608c14.34 0 25.965-11.372 25.965-25.4 0-.337-.007-.673-.02-1.008h25.299v34.85H32.374v-10.05Z\" fill=\"currentColor\" />\n        <path d=\"M15.805 26.4c0 14.028 11.625 25.4 25.965 25.4s25.964-11.372 25.964-25.4C67.734 12.372 56.11 1 41.77 1 27.43 1 15.805 12.372 15.805 26.4Z\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        <path d=\"M27.914 47.849a1 1 0 0 0-2 0h2Zm68.288-26.792a2.12 2.12 0 0 1 2.14 2.11h2c0-2.253-1.83-4.11-4.14-4.11v2Zm2.14 2.11v40.552h2V23.167h-2Zm0 40.552c0 1.172-.958 2.11-2.14 2.11v2c2.25 0 4.14-1.798 4.14-4.11h-2Zm-2.14 2.11H30.054v2h66.148v-2Zm-66.148 0a2.12 2.12 0 0 1-2.14-2.11h-2a4.12 4.12 0 0 0 4.14 4.11v-2Zm-2.14-2.11V47.85h-2v15.87h2Zm39.254-42.662h29.034v-2H67.168v2Z\" fill=\"#fff\" />\n        <path d=\"M67.203 25.56h25.64v34.85H32.487V50.011\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n        <path d=\"M47.343 76h31.571\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        <path d=\"M57.557 66.83V76M67.771 66.83V76\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n        <path d=\"m20.995 42.873-3.972 3.972-14.61 14.61a3.413 3.413 0 0 0 0 4.826v0a3.413 3.413 0 0 0 4.827 0l14.61-14.61 3.972-3.972\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        <path d=\"M86.037 32.488H71.845M86.037 37.81H76.28M71.845 37.81h-6.652M86.037 43.132h-6.209M74.95 43.132H61.2M86.037 48.454H71.845M66.967 48.454h-7.54M86.037 53.776H66.08M61.201 53.776h-11.53M44.793 53.776h-7.096\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n        <rect width=\"40.801\" height=\"9.757\" rx=\"4\" transform=\"matrix(-1 0 0 1 61.201 14.748)\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"M16.852 33.375h28.375a4 4 0 0 1 4 4v1.757a4 4 0 0 1-4 4H22.174M66.523 33.375h-3.539a4 4 0 0 0-4 4v3.761c0 1.102.894 1.996 1.996 1.996v0\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n      </svg>\n    `,\n    requiresPremium: true,\n  },\n  reusedPasswords: {\n    title: \"reusedPasswordsReport\",\n    description: \"reusedPasswordsReportDesc\",\n    route: \"reused-passwords-report\",\n    icon: `\n    <svg width=\"102\" height=\"102\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M57.983 15.06a35.664 35.664 0 0 1 14.531 6.27c16.164 11.78 19.585 34.613 7.643 51a37.227 37.227 0 0 1-6.81 7.138m-32.842 6.697a35.708 35.708 0 0 1-11.239-5.495c-16.163-11.78-19.585-34.613-7.642-51a37.55 37.55 0 0 1 3.295-3.929\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      <path d=\"M93.909 64.598H7.72c-.708 0-1.275-.662-1.275-1.49V40.273c0-.828.567-1.49 1.275-1.49H93.91c.708 0 1.275.663 1.275 1.49v22.837c.047.827-.567 1.49-1.275 1.49Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      <path d=\"M21.532 52.186v-5.965M21.532 52.187l5.748-1.844M21.532 52.186l3.524 4.881M21.531 52.186l-3.47 4.881M21.532 52.187l-5.694-1.844M40.944 52.186v-5.965M40.944 52.187l5.694-1.844M40.944 52.187l3.525 4.88M40.944 52.187l-3.525 4.88M40.944 52.187l-5.694-1.844M54.849 57.337h11.294M74.21 57.337h11.295M41.75 83l.71 4.75-4.75.71M58.664 18.66 56 14.665 59.996 12\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    </svg>\n    `,\n    requiresPremium: true,\n  },\n  weakPasswords: {\n    title: \"weakPasswordsReport\",\n    description: \"weakPasswordsReportDesc\",\n    route: \"weak-passwords-report\",\n    icon: `\n      <svg width=\"78\" height=\"78\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M66.493 64.415V77H9.979V64.324M9.979 44.065V32.106h56.514v12.148\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n        <path d=\"M75.44 64.852H2.085c-.603 0-1.085-.555-1.085-1.25V44.448c0-.694.482-1.25 1.085-1.25H75.44c.603 0 1.085.556 1.085 1.25v19.156c.04.694-.482 1.25-1.085 1.25Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        <path d=\"M13.84 54.56v-5.077M13.84 54.56l4.893-1.57M13.84 54.56l3 4.153M13.84 54.56l-2.954 4.153M13.84 54.56l-4.846-1.57M30.363 54.56v-5.077M30.363 54.56l4.846-1.57M30.363 54.56l3 4.153M30.363 54.56l-3 4.153M30.363 54.56l-4.846-1.57M42.197 59.042h9.506M58.57 59.042h9.507\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        <path d=\"M20.863 31.364c-.274-5.285 0-15.817 1.093-18.863 1.276-3.554 6.233-10.826 15.856-11.482 4.83-.273 15.2 2.296 18.043 14.763\" stroke=\"#fff\" stroke-width=\"2\" />\n      </svg>\n    `,\n    requiresPremium: true,\n  },\n  unsecuredWebsites: {\n    title: \"unsecuredWebsitesReport\",\n    description: \"unsecuredWebsitesReportDesc\",\n    route: \"unsecured-websites-report\",\n    icon: `\n      <svg width=\"113\" height=\"76\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M1.71 12.983h110.362v55.11a6 6 0 0 1-6 6H7.711a6 6 0 0 1-6-6v-55.11Z\" fill=\"currentColor\" />\n        <rect x=\"1\" y=\"1.073\" width=\"110.5\" height=\"73.454\" rx=\"9\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"M89.48 8.048V7.47M96.363 8.048V7.47M103.246 8.048V7.47\" stroke=\"#fff\" stroke-width=\"4\" stroke-linecap=\"round\" />\n        <path d=\"M0 12.983h111.217\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"m93.236 44.384-18.42-11.026 2.93 21.266 5.582-5.237 4.27 6.46 2.98-1.971-4.26-6.446 6.918-3.046Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n        <rect width=\"96.673\" height=\"6.886\" rx=\"3.443\" transform=\"matrix(-1 0 0 1 104.373 18.721)\" stroke=\"#fff\" />\n      </svg>\n    `,\n    requiresPremium: true,\n  },\n  inactive2fa: {\n    title: \"inactive2faReport\",\n    description: \"inactive2faReportDesc\",\n    route: \"inactive-two-factor-report\",\n    icon: `\n      <svg width=\"42\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" d=\"M1 13.121h39.595v48.758H1z\" />\n        <rect x=\"1\" y=\"1\" width=\"39.595\" height=\"73\" rx=\"8\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M12.344 8.091h16.907M18.907 67.424h3.025M31.503 32.515c-2.047-4.337-6.717-7.061-11.73-6.414a11.356 11.356 0 0 0-9.125 7.126M10.816 42.016c2.047 4.337 6.718 7.062 11.73 6.414 4.346-.562 7.8-3.51 9.213-7.358\" />\n        <path d=\"m33.584 29.293-1.295 4.625-4.625-1.295M8.523 44.725l1.441-4.581 4.582 1.441\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      </svg>\n    `,\n    requiresPremium: true,\n  },\n  dataBreach: {\n    title: \"dataBreachReport\",\n    description: \"breachDesc\",\n    route: \"breach-report\",\n    icon: `\n      <svg width=\"58\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M39.569 74H13.007a7 7 0 0 1-7-7V31.077a7 7 0 0 1 7-7h19.101a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.912V67a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"M44.576 69.055H18.015a7 7 0 0 1-7-7V26.132a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.911v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"M50 63.698H23.439a7 7 0 0 1-7-7V20.775a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.575A7 7 0 0 1 57 28.35v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"M44.648 13.599v3.95a8 8 0 0 0 8 8h4.518\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M23.533 37.736H49.49M23.533 46.802H49.49M23.533 42.269H49.49M23.533 55.456H49.49M23.533 50.923H49.49\" />\n        <path d=\"M1 16.483C1 7.944 8.013 1 16.69 1c8.678 0 15.691 6.944 15.691 15.483 0 8.54-7.013 15.484-15.69 15.484C8.012 31.967 1 25.023 1 16.484Z\" fill=\"#518FFF\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"m16.562 7.979.1 11.538\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n        <ellipse rx=\"1.252\" ry=\"1.236\" transform=\"rotate(-.479 2802.219 -1964.476) skewX(.012)\" fill=\"#fff\" />\n      </svg>\n    `,\n    requiresPremium: false,\n  },\n};\n\n@Component({\n  selector: \"app-report-card\",\n  templateUrl: \"report-card.component.html\",\n})\nexport class ReportCardComponent implements OnInit {\n  @Input() type: ReportTypes;\n\n  report: ReportEntry;\n\n  hasPremium: boolean;\n\n  constructor(\n    private stateService: StateService,\n    private messagingService: MessagingService,\n    private sanitizer: DomSanitizer\n  ) {}\n\n  async ngOnInit() {\n    this.report = reports[this.type];\n\n    this.hasPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  get premium() {\n    return this.report.requiresPremium && !this.hasPremium;\n  }\n\n  get route() {\n    if (this.premium) {\n      return null;\n    }\n\n    return this.report.route;\n  }\n\n  get icon() {\n    return this.sanitizer.bypassSecurityTrustHtml(this.report.icon);\n  }\n\n  click() {\n    if (this.premium) {\n      this.messagingService.send(\"premiumRequired\");\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"reports\" | i18n }}</h1>\n</div>\n\n<p>{{ \"reportsDesc\" | i18n }}</p>\n\n<div class=\"tw-inline-grid tw-grid-cols-3 tw-gap-4\">\n  <div *ngFor=\"let report of reports\">\n    <app-report-card [type]=\"report\"></app-report-card>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ReportTypes } from \"./report-card.component\";\n\n@Component({\n  selector: \"app-report-list\",\n  templateUrl: \"report-list.component.html\",\n})\nexport class ReportListComponent {\n  reports = [\n    ReportTypes.exposedPasswords,\n    ReportTypes.reusedPasswords,\n    ReportTypes.weakPasswords,\n    ReportTypes.unsecuredWebsites,\n    ReportTypes.inactive2fa,\n    ReportTypes.dataBreach,\n  ];\n}\n","<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n\n  <div class=\"row mt-4\">\n    <div class=\"col\">\n      <a bitButton routerLink=\"./\" *ngIf=\"!homepage\">\n        <i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i>\n        {{ \"backToReports\" | i18n }}\n      </a>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-reports\",\n  templateUrl: \"reports.component.html\",\n})\nexport class ReportsComponent implements OnDestroy {\n  homepage = true;\n  subscription: Subscription;\n\n  constructor(router: Router) {\n    this.subscription = router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((event) => {\n        this.homepage = (event as NavigationEnd).url == \"/reports\";\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\n\nimport { BreachReportComponent } from \"./breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./inactive-two-factor-report.component\";\nimport { ReportListComponent } from \"./report-list.component\";\nimport { ReportsComponent } from \"./reports.component\";\nimport { ReusedPasswordsReportComponent } from \"./reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./weak-passwords-report.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ReportsComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: \"\", pathMatch: \"full\", component: ReportListComponent, data: { homepage: true } },\n      {\n        path: \"breach-report\",\n        component: BreachReportComponent,\n        data: { titleId: \"dataBreachReport\" },\n      },\n      {\n        path: \"reused-passwords-report\",\n        component: ReusedPasswordsReportComponent,\n        data: { titleId: \"reusedPasswordsReport\" },\n      },\n      {\n        path: \"unsecured-websites-report\",\n        component: UnsecuredWebsitesReportComponent,\n        data: { titleId: \"unsecuredWebsitesReport\" },\n      },\n      {\n        path: \"weak-passwords-report\",\n        component: WeakPasswordsReportComponent,\n        data: { titleId: \"weakPasswordsReport\" },\n      },\n      {\n        path: \"exposed-passwords-report\",\n        component: ExposedPasswordsReportComponent,\n        data: { titleId: \"exposedPasswordsReport\" },\n      },\n      {\n        path: \"inactive-two-factor-report\",\n        component: InactiveTwoFactorReportComponent,\n        data: { titleId: \"inactive2faReport\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReportsRoutingModule {}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","import { SendFile } from \"../domain/sendFile\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { SendText } from \"../domain/sendText\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccess } from \"../domain/sendAccess\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendAccessView implements View {\n  id: string = null;\n  name: string = null;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  expirationDate: Date = null;\n  creatorIdentifier: string = null;\n\n  constructor(s?: SendAccess) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.type = s.type;\n    this.expirationDate = s.expirationDate;\n    this.creatorIdentifier = s.creatorIdentifier;\n  }\n}\n","import { SendFileData } from \"../data/sendFileData\";\nimport { SendFileView } from \"../view/sendFileView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/sendTextData\";\nimport { SendTextView } from \"../view/sendTextView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccessResponse } from \"../response/sendAccessResponse\";\nimport { SendAccessView } from \"../view/sendAccessView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendAccess extends Domain {\n  id: string;\n  type: SendType;\n  name: EncString;\n  file: SendFile;\n  text: SendText;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(obj?: SendAccessResponse) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n        expirationDate: null,\n        creatorIdentifier: null,\n      },\n      [\"id\", \"expirationDate\", \"creatorIdentifier\"]\n    );\n\n    this.type = obj.type;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendAccessView> {\n    const model = new SendAccessView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n      },\n      null,\n      key\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(key);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(key);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","export class SendAccessRequest {\n  password: string;\n}\n","<form #form (ngSubmit)=\"load()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-center mt-5\">\n    <div class=\"col-12\">\n      <h1 class=\"lead text-center mb-4\">Bitwarden Send</h1>\n    </div>\n    <div class=\"col-12 text-center\" *ngIf=\"creatorIdentifier != null\">\n      <p>{{ \"sendCreatorIdentifier\" | i18n: creatorIdentifier }}</p>\n    </div>\n    <div class=\"col-8\" *ngIf=\"hideEmail\">\n      <app-callout type=\"warning\" title=\"{{ 'warning' | i18n }}\">\n        {{ \"viewSendHiddenEmailWarning\" | i18n }}\n        <a href=\"https://bitwarden.com/help/receive-send/\" target=\"_blank\">{{\n          \"learnMore\" | i18n\n        }}</a\n        >.\n      </app-callout>\n    </div>\n  </div>\n  <div class=\"row justify-content-center\">\n    <div class=\"col-5\">\n      <div class=\"card d-block\">\n        <div class=\"card-body\" *ngIf=\"loading\" class=\"text-center\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && passwordRequired\">\n          <p>{{ \"sendProtectedPassword\" | i18n }}</p>\n          <p>{{ \"sendProtectedPasswordDontKnow\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"password\">{{ \"password\" | i18n }}</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"Password\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"password\"\n              required\n              appInputVerbatim\n              appAutofocus\n            />\n          </div>\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && unavailable\">\n          {{ \"sendAccessUnavailable\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && error\">\n          {{ \"unexpectedError\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && !passwordRequired && send\">\n          <p class=\"text-center\">\n            <b>{{ send.name }}</b>\n          </p>\n          <hr />\n          <!-- Text -->\n          <ng-container *ngIf=\"send.type === sendType.Text\">\n            <app-callout *ngIf=\"send.text.hidden\" type=\"tip\">{{\n              \"sendHiddenByDefault\" | i18n\n            }}</app-callout>\n            <div class=\"form-group\">\n              <textarea\n                id=\"text\"\n                rows=\"8\"\n                name=\"Text\"\n                [(ngModel)]=\"sendText\"\n                class=\"form-control\"\n                readonly\n              ></textarea>\n            </div>\n            <button\n              class=\"btn btn-block btn-link\"\n              type=\"button\"\n              (click)=\"toggleText()\"\n              *ngIf=\"send.text.hidden\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showText, 'bwi-eye-slash': showText }\"\n              ></i>\n              {{ \"toggleVisibility\" | i18n }}\n            </button>\n            <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"copyText()\">\n              <i class=\"bwi bwi-copy\" aria-hidden=\"true\"></i> {{ \"copyValue\" | i18n }}\n            </button>\n          </ng-container>\n          <!-- File -->\n          <ng-container *ngIf=\"send.type === sendType.File\">\n            <p>{{ send.file.fileName }}</p>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              (click)=\"download()\"\n              *ngIf=\"!downloading\"\n            >\n              <i class=\"bwi bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"downloadFile\" | i18n }} ({{ send.file.sizeName }})\n            </button>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              *ngIf=\"downloading\"\n              disabled=\"true\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </ng-container>\n          <p *ngIf=\"expirationDate\" class=\"text-center text-muted\">\n            Expires: {{ expirationDate | date: \"medium\" }}\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 text-center mt-5 text-muted\">\n      <p class=\"mb-0\">\n        {{ \"sendAccessTaglineProductDesc\" | i18n }}<br />\n        {{ \"sendAccessTaglineLearnMore\" | i18n }}\n        <a href=\"https://www.bitwarden.com/products/send?source=web-vault\" target=\"_blank\"\n          >Bitwarden Send</a\n        >\n        {{ \"sendAccessTaglineOr\" | i18n }}\n        <a href=\"https://vault.bitwarden.com/#/register\" target=\"_blank\">{{\n          \"sendAccessTaglineSignUp\" | i18n\n        }}</a>\n        {{ \"sendAccessTaglineTryToday\" | i18n }}\n      </p>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SEND_KDF_ITERATIONS } from \"@bitwarden/common/enums/kdfType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SendAccess } from \"@bitwarden/common/models/domain/sendAccess\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { SendAccessRequest } from \"@bitwarden/common/models/request/sendAccessRequest\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\nimport { SendAccessResponse } from \"@bitwarden/common/models/response/sendAccessResponse\";\nimport { SendAccessView } from \"@bitwarden/common/models/view/sendAccessView\";\n\n@Component({\n  selector: \"app-send-access\",\n  templateUrl: \"access.component.html\",\n})\nexport class AccessComponent implements OnInit {\n  send: SendAccessView;\n  sendType = SendType;\n  downloading = false;\n  loading = true;\n  passwordRequired = false;\n  formPromise: Promise<SendAccessResponse>;\n  password: string;\n  showText = false;\n  unavailable = false;\n  error = false;\n  hideEmail = false;\n\n  private id: string;\n  private key: string;\n  private decKey: SymmetricCryptoKey;\n  private accessRequest: SendAccessRequest;\n\n  constructor(\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private fileDownloadService: FileDownloadService\n  ) {}\n\n  get sendText() {\n    if (this.send == null || this.send.text == null) {\n      return null;\n    }\n    return this.showText ? this.send.text.text : this.send.text.maskedText;\n  }\n\n  get expirationDate() {\n    if (this.send == null || this.send.expirationDate == null) {\n      return null;\n    }\n    return this.send.expirationDate;\n  }\n\n  get creatorIdentifier() {\n    if (this.send == null || this.send.creatorIdentifier == null) {\n      return null;\n    }\n    return this.send.creatorIdentifier;\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(async (params) => {\n      this.id = params.sendId;\n      this.key = params.key;\n      if (this.key == null || this.id == null) {\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async download() {\n    if (this.send == null || this.decKey == null) {\n      return;\n    }\n\n    if (this.downloading) {\n      return;\n    }\n\n    const downloadData = await this.apiService.getSendFileDownloadData(\n      this.send,\n      this.accessRequest\n    );\n\n    if (Utils.isNullOrWhitespace(downloadData.url)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingSendFile\"));\n      return;\n    }\n\n    this.downloading = true;\n    const response = await fetch(new Request(downloadData.url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      this.downloading = false;\n      return;\n    }\n\n    try {\n      const buf = await response.arrayBuffer();\n      const decBuf = await this.cryptoService.decryptFromBytes(buf, this.decKey);\n      this.fileDownloadService.download({\n        fileName: this.send.file.fileName,\n        blobData: decBuf,\n        downloadMethod: \"save\",\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    this.downloading = false;\n  }\n\n  copyText() {\n    this.platformUtilsService.copyToClipboard(this.send.text.text);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendTypeText\"))\n    );\n  }\n\n  toggleText() {\n    this.showText = !this.showText;\n  }\n\n  async load() {\n    this.unavailable = false;\n    this.error = false;\n    this.hideEmail = false;\n    const keyArray = Utils.fromUrlB64ToArray(this.key);\n    this.accessRequest = new SendAccessRequest();\n    if (this.password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        this.password,\n        keyArray,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      this.accessRequest.password = Utils.fromBufferToB64(passwordHash);\n    }\n    try {\n      let sendResponse: SendAccessResponse = null;\n      if (this.loading) {\n        sendResponse = await this.apiService.postSendAccess(this.id, this.accessRequest);\n      } else {\n        this.formPromise = this.apiService.postSendAccess(this.id, this.accessRequest);\n        sendResponse = await this.formPromise;\n      }\n      this.passwordRequired = false;\n      const sendAccess = new SendAccess(sendResponse);\n      this.decKey = await this.cryptoService.makeSendKey(keyArray);\n      this.send = await sendAccess.decrypt(this.decKey);\n      this.showText = this.send.text != null ? !this.send.text.hidden : true;\n    } catch (e) {\n      if (e instanceof ErrorResponse) {\n        if (e.statusCode === 401) {\n          this.passwordRequired = true;\n        } else if (e.statusCode === 404) {\n          this.unavailable = true;\n        } else {\n          this.error = true;\n        }\n      }\n    }\n    this.loading = false;\n    this.hideEmail =\n      this.creatorIdentifier == null &&\n      !this.passwordRequired &&\n      !this.loading &&\n      !this.unavailable;\n  }\n}\n","import { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\n@Directive()\nexport class SendComponent implements OnInit {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new FormGroup({\n    selectedDeletionDatePreset: new FormControl(),\n    selectedExpirationDatePreset: new FormControl(),\n    defaultDeletionDateTime: new FormControl(),\n    defaultExpirationDateTime: new FormControl(),\n    fallbackDeletionDate: new FormControl(),\n    fallbackDeletionTime: new FormControl(),\n    fallbackExpirationDate: new FormControl(),\n    fallbackExpirationTime: new FormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): FormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as FormControl;\n  }\n\n  get selectedExpirationDatePreset(): FormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as FormControl;\n  }\n\n  get defaultDeletionDateTime(): FormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as FormControl;\n  }\n\n  get defaultExpirationDateTime(): FormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as FormControl;\n  }\n\n  get fallbackDeletionDate(): FormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as FormControl;\n  }\n\n  get fallbackDeletionTime(): FormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as FormControl;\n  }\n\n  get fallbackExpirationDate(): FormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as FormControl;\n  }\n\n  get fallbackExpirationTime(): FormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as FormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { Send } from \"@bitwarden/common/models/domain/send\";\nimport { SendFileView } from \"@bitwarden/common/models/view/sendFileView\";\nimport { SendTextView } from \"@bitwarden/common/models/view/sendTextView\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  private sendLinkBaseUrl: string;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n    this.disableHideEmail = await this.policyService.policyAppliesToUser(\n      PolicyType.SendOptions,\n      (p) => p.data.disableHideEmail\n    );\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        const copySuccess = await this.copyLinkToClipboard(this.link);\n        if (copySuccess ?? true) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n          );\n        } else {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n            null,\n            this.i18nService.t(\"ok\"),\n            null,\n            \"success\",\n            null\n          );\n          await this.copyLinkToClipboard(this.link);\n        }\n      }\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n}\n","<div class=\"row\" [formGroup]=\"datesForm\">\n  <div class=\"col-6 form-group\">\n    <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n    <ng-template #deletionDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <ng-container *ngSwitchCase=\"'firefox'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              [readOnly]=\"disableSend\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <input\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              type=\"time\"\n              name=\"DeletionTimeDate\"\n              formControlName=\"fallbackDeletionTime\"\n              required\n              placeholder=\"HH:MM AM/PM\"\n              [readOnly]=\"disableSend\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'safari'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              [readOnly]=\"disableSend\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <select\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              [required]=\"!editMode\"\n              formControlName=\"fallbackDeletionTime\"\n              name=\"SafariDeletionTime\"\n            >\n              <option\n                *ngFor=\"let o of safariDeletionTimePresetOptions\"\n                [ngValue]=\"o.twentyFourHour\"\n              >\n                {{ o.twelveHour }}\n              </option>\n            </select>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"deletionDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"DeletionDate\"\n            formControlName=\"defaultDeletionDateTime\"\n            required\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"deletionDate\"\n        name=\"SelectedDeletionDatePreset\"\n        formControlName=\"selectedDeletionDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedDeletionDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"deletionDateDesc\" | i18n }}</div>\n  </div>\n  <div class=\"col-6 form-group\">\n    <div class=\"d-flex\">\n      <label for=\"expirationDate\">{{ \"expirationDate\" | i18n }}</label>\n      <a\n        href=\"#\"\n        appStopClick\n        (click)=\"clearExpiration()\"\n        class=\"ml-auto\"\n        *ngIf=\"editMode && !disabled\"\n      >\n        {{ \"clear\" | i18n }}\n      </a>\n    </div>\n    <ng-template #expirationDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <div *ngSwitchCase=\"'firefox'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n        <!-- non-default cases are not showing up -->\n        <div *ngSwitchCase=\"'safari'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            [required]=\"!editMode\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"expirationDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"ExpirationDate\"\n            formControlName=\"defaultExpirationDateTime\"\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"expirationDate\"\n        name=\"SelectedExpirationDatePreset\"\n        formControlName=\"selectedExpirationDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedExpirationDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"expirationDateDesc\" | i18n }}</div>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"@bitwarden/angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"sendAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"sendAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"send\">\n        <app-callout *ngIf=\"disableSend\">\n          <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n        </app-callout>\n        <app-callout *ngIf=\"!disableSend && disableHideEmail\">\n          <span>{{ \"sendOptionsPolicyInEffect\" | i18n }}</span>\n          <ul class=\"mb-0\">\n            <li>{{ \"sendDisableHideEmailInEffect\" | i18n }}</li>\n          </ul>\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"send.name\"\n              required\n              [readOnly]=\"disableSend\"\n            />\n            <small class=\"form-text text-muted\">{{ \"sendNameDesc\" | i18n }}</small>\n          </div>\n        </div>\n        <div class=\"row\" *ngIf=\"!editMode\">\n          <div class=\"col-6 form-group\">\n            <label>{{ \"whatTypeOfSend\" | i18n }}</label>\n            <div class=\"form-check\" *ngFor=\"let o of typeOptions\">\n              <input\n                class=\"form-check-input\"\n                type=\"radio\"\n                [(ngModel)]=\"send.type\"\n                name=\"Type_{{ o.value }}\"\n                id=\"type_{{ o.value }}\"\n                [value]=\"o.value\"\n                (change)=\"typeChanged(o)\"\n                [checked]=\"send.type === o.value\"\n              />\n              <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n                {{ o.name }}\n              </label>\n            </div>\n          </div>\n        </div>\n        <!-- Text -->\n        <ng-container *ngIf=\"send.type === sendType.Text\">\n          <div class=\"form-group\">\n            <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n            <textarea\n              id=\"text\"\n              name=\"Text.Text\"\n              rows=\"6\"\n              [(ngModel)]=\"send.text.text\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <small class=\"form-text text-muted\">{{ \"sendTextDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.text.hidden\"\n                id=\"text-hidden\"\n                name=\"Text.Hidden\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"text-hidden\">{{\n                \"textHiddenByDefault\" | i18n\n              }}</label>\n            </div>\n          </div>\n        </ng-container>\n        <!-- File -->\n        <ng-container *ngIf=\"send.type === sendType.File\">\n          <div class=\"form-group\">\n            <div *ngIf=\"editMode\">\n              <strong class=\"d-block\">{{ \"file\" | i18n }}</strong>\n              {{ send.file.fileName }} ({{ send.file.sizeName }})\n            </div>\n            <div *ngIf=\"!editMode\">\n              <label for=\"file\">{{ \"file\" | i18n }}</label>\n              <input\n                type=\"file\"\n                id=\"file\"\n                class=\"form-control-file\"\n                name=\"file\"\n                required\n                [disabled]=\"disableSend\"\n              />\n              <small class=\"form-text text-muted\"\n                >{{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}</small\n              >\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-5\">{{ \"share\" | i18n }}</h3>\n        <div class=\"form-group\" *ngIf=\"link\">\n          <label for=\"link\">{{ \"sendLinkLabel\" | i18n }}</label>\n          <input\n            type=\"text\"\n            readonly\n            id=\"link\"\n            name=\"Link\"\n            [(ngModel)]=\"link\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [(ngModel)]=\"copyLink\"\n              id=\"copy-link\"\n              name=\"CopyLink\"\n            />\n            <label class=\"form-check-label\" for=\"copy-link\">{{\n              \"copySendLinkOnSave\" | i18n\n            }}</label>\n          </div>\n        </div>\n        <div\n          id=\"options-header\"\n          class=\"section-header d-flex flex-row align-items-center mt-5\"\n          (click)=\"toggleOptions()\"\n        >\n          <h3 class=\"mb-0 mr-2\">{{ \"options\" | i18n }}</h3>\n          <a class=\"mb-1\" href=\"#\" appStopClick role=\"button\">\n            <i\n              class=\"bwi\"\n              aria-hidden=\"true\"\n              [ngClass]=\"{ 'bwi-angle-down': !showOptions, 'bwi-chevron-up': showOptions }\"\n            ></i>\n          </a>\n        </div>\n        <div id=\"options\" [hidden]=\"!showOptions\">\n          <app-send-efflux-dates\n            [initialDeletionDate]=\"send.deletionDate\"\n            [initialExpirationDate]=\"send.expirationDate\"\n            [editMode]=\"editMode\"\n            [disabled]=\"disableSend\"\n            (datesChanged)=\"setDates($event)\"\n          >\n          </app-send-efflux-dates>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"maxAccessCount\">{{ \"maxAccessCount\" | i18n }}</label>\n              <input\n                id=\"maxAccessCount\"\n                class=\"form-control\"\n                type=\"number\"\n                name=\"MaxAccessCount\"\n                [(ngModel)]=\"send.maxAccessCount\"\n                min=\"1\"\n                [readOnly]=\"disableSend\"\n              />\n              <div class=\"form-text text-muted small\">{{ \"maxAccessCountDesc\" | i18n }}</div>\n            </div>\n            <div class=\"col-6 form-group\" *ngIf=\"editMode\">\n              <label for=\"accessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n              <input\n                id=\"accessCount\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"AccessCount\"\n                readonly\n                [(ngModel)]=\"send.accessCount\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"password\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Password\"\n                  [(ngModel)]=\"password\"\n                  [readOnly]=\"disableSend\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePasswordVisible()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-text text-muted small\">{{ \"sendPasswordDesc\" | i18n }}</div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <div class=\"form-text text-muted small\">{{ \"sendNotesDesc\" | i18n }}</div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.hideEmail\"\n                id=\"hideEmail\"\n                name=\"HideEmail\"\n                [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"hideEmail\">\n                {{ \"hideEmail\" | i18n }}\n              </label>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.disabled\"\n                id=\"disabled\"\n                name=\"Disabled\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"disabled\">{{ \"disableThisSend\" | i18n }}</label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [ngClass]=\"{ loading: form.loading }\"\n          [disabled]=\"form.loading || disableSend\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"send\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    // Copy function on web depends on the modal being open or not. Since this event occurs during a transition\n    // of the modal closing we need to add a small delay to make sure state of the DOM is consistent.\n    return new Promise((resolve) => {\n      window.setTimeout(() => resolve(super.copyLinkToClipboard(link)), 500);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-3 groupings\">\n      <div class=\"card vault-filters\">\n        <div class=\"card-header d-flex\">\n          {{ \"filters\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <input\n            type=\"search\"\n            placeholder=\"{{ searchPlaceholder || ('searchSends' | i18n) }}\"\n            id=\"search\"\n            class=\"form-control\"\n            [(ngModel)]=\"searchText\"\n            (input)=\"searchTextChanged()\"\n            autocomplete=\"off\"\n            appAutofocus\n          />\n          <div class=\"filter\">\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedAll }\">\n                <span class=\"filter-buttons\">\n                  <button bitButton class=\"filter-button\" appStopClick (click)=\"selectAll()\">\n                    <i class=\"bwi bwi-fw bwi-filter\"></i>{{ \"allSends\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n          <div class=\"filter\">\n            <div class=\"filter-heading\">\n              <h3>{{ \"types\" | i18n }}</h3>\n            </div>\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.Text }\">\n                <span class=\"filter-buttons\">\n                  <button\n                    bitButton\n                    class=\"filter-button\"\n                    appStopClick\n                    (click)=\"selectType(sendType.Text)\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-file-text\"></i>{{ \"sendTypeText\" | i18n }}\n                  </button>\n                </span>\n              </li>\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.File }\">\n                <span class=\"filter-buttons\">\n                  <button\n                    bitButton\n                    class=\"filter-button\"\n                    appStopClick\n                    (click)=\"selectType(sendType.File)\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-file\"></i>{{ \"sendTypeFile\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"send\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addSend()\"\n            [disabled]=\"disableSend\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <!--Listing Table-->\n      <table class=\"table table-hover table-list\" *ngIf=\"filteredSends && filteredSends.length\">\n        <tbody>\n          <tr *ngFor=\"let s of filteredSends\">\n            <td class=\"table-list-icon\">\n              <div class=\"icon\" aria-hidden=\"true\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type == sendType.File\"></i>\n                <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type == sendType.Text\"></i>\n              </div>\n            </td>\n            <td class=\"reduced-lh wrap\">\n              <a href=\"#\" appStopClick appStopProp (click)=\"editSend(s)\">{{ s.name }}</a>\n              <ng-container *ngIf=\"s.disabled\">\n                <i\n                  class=\"bwi bwi-exclamation-triangle\"\n                  appStopProp\n                  title=\"{{ 'disabled' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.password\">\n                <i\n                  class=\"bwi bwi-key\"\n                  appStopProp\n                  title=\"{{ 'password' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"password\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.maxAccessCountReached\">\n                <i\n                  class=\"bwi bwi-ban\"\n                  appStopProp\n                  title=\"{{ 'maxAccessCountReached' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.expired\">\n                <i\n                  class=\"bwi bwi-clock\"\n                  appStopProp\n                  title=\"{{ 'expired' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.pendingDelete\">\n                <i\n                  class=\"bwi bwi-trash\"\n                  appStopProp\n                  title=\"{{ 'pendingDeletion' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n              </ng-container>\n              <br />\n              <small appStopProp>{{ s.deletionDate | date: \"medium\" }}</small>\n            </td>\n            <td class=\"table-list-options\">\n              <button\n                [bitMenuTriggerFor]=\"sendOptions\"\n                class=\"tw-border-none tw-bg-transparent tw-text-main\"\n                type=\"button\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu #sendOptions>\n                <button bitMenuItem (click)=\"copy(s)\">\n                  <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                  {{ \"copySendLink\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"removePassword(s)\" *ngIf=\"s.password && !disableSend\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"removePassword\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"delete(s)\">\n                  <span class=\"tw-text-danger\">\n                    <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                    {{ \"delete\" | i18n }}\n                  </span>\n                </button>\n              </bit-menu>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"no-items\" *ngIf=\"filteredSends && !filteredSends.length\">\n        <ng-container *ngIf=\"!loaded\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"loaded\">\n          <p>{{ \"noSendsInList\" | i18n }}</p>\n          <button (click)=\"addSend()\" class=\"btn btn-outline-primary\" [disabled]=\"disableSend\">\n            <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #sendAddEdit></ng-template>\n","import { Component, NgZone, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SendComponent as BaseSendComponent } from \"@bitwarden/angular/components/send/send.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\n\nconst BroadcasterSubscriptionId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send\",\n  templateUrl: \"send.component.html\",\n})\nexport class SendComponent extends BaseSendComponent {\n  @ViewChild(\"sendAddEdit\", { read: ViewContainerRef, static: true })\n  sendAddEditModalRef: ViewContainerRef;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    searchService: SearchService,\n    policyService: PolicyService,\n    private modalService: ModalService,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n\n    // Broadcaster subscription - load if sync completes in the background\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n\n    const component = await this.editSend(null);\n    component.type = this.type;\n  }\n\n  async editSend(send: SendView) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.sendAddEditModalRef,\n      (comp) => {\n        comp.sendId = send == null ? null : send.id;\n        comp.onSavedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        comp.onDeletedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-deauthorize-sessions\",\n  templateUrl: \"deauthorize-sessions.component.html\",\n})\nexport class DeauthorizeSessionsComponent {\n  masterPassword: Verification;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postSecurityStamp(request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"sessionsDeauthorized\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deAuthTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deAuthTitle\">{{ \"deauthorizeSessions\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deauthorizeSessionsDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deauthorizeSessionsWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deauthorizeSessions\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-delete-account\",\n  templateUrl: \"delete-account.component.html\",\n})\nexport class DeleteAccountComponent {\n  masterPassword: Verification;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.deleteAccount(request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteAccountTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteAccountTitle\">{{ \"deleteAccount\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deleteAccountDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteAccount\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","export class UpdateProfileRequest {\n  name: string;\n  masterPasswordHint: string;\n  culture = \"en-US\"; // deprecated\n\n  constructor(name: string, masterPasswordHint: string) {\n    this.name = name;\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"profile && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"profile.name\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">{{ \"email\" | i18n }}</label>\n        <input\n          id=\"email\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Email\"\n          [(ngModel)]=\"profile.email\"\n          readonly\n        />\n      </div>\n      <div class=\"form-group\" *ngIf=\"!hidePasswordHint\">\n        <label for=\"masterPasswordHint\">{{ \"masterPassHintLabel\" | i18n }}</label>\n        <input\n          id=\"masterPasswordHint\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"MasterPasswordHint\"\n          [(ngModel)]=\"profile.masterPasswordHint\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"mb-3\">\n        <app-avatar\n          data=\"{{ profile | userName }}\"\n          [email]=\"profile.email\"\n          dynamic=\"true\"\n          size=\"75\"\n          fontSize=\"35\"\n        >\n        </app-avatar>\n      </div>\n      <hr />\n      <p *ngIf=\"fingerprint\">\n        {{ \"yourAccountsFingerprint\" | i18n }}:\n        <a\n          href=\"https://bitwarden.com/help/fingerprint-phrase/\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i></a\n        ><br />\n        <code>{{ fingerprint }}</code>\n      </p>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UpdateProfileRequest } from \"@bitwarden/common/models/request/updateProfileRequest\";\nimport { ProfileResponse } from \"@bitwarden/common/models/response/profileResponse\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"profile.component.html\",\n})\nexport class ProfileComponent implements OnInit {\n  loading = true;\n  profile: ProfileResponse;\n  fingerprint: string;\n  hidePasswordHint = false;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.profile = await this.apiService.getProfile();\n    this.loading = false;\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    if (fingerprint != null) {\n      this.fingerprint = fingerprint.join(\"-\");\n    }\n    this.hidePasswordHint = await this.keyConnectorService.getUsesKeyConnector();\n  }\n\n  async submit() {\n    try {\n      const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\n      this.formPromise = this.apiService.putProfile(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"accountUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class EmailTokenRequest extends SecretVerificationRequest {\n  newEmail: string;\n  masterPasswordHash: string;\n}\n","import { EmailTokenRequest } from \"./emailTokenRequest\";\n\nexport class EmailRequest extends EmailTokenRequest {\n  newMasterPasswordHash: string;\n  token: string;\n  key: string;\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <app-callout type=\"warning\" *ngIf=\"showTwoFactorEmailWarning\">\n    {{ \"changeEmailTwoFactorWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          [readonly]=\"tokenSent\"\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"newEmail\">{{ \"newEmail\" | i18n }}</label>\n        <input\n          id=\"newEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"NewEmail\"\n          [(ngModel)]=\"newEmail\"\n          required\n          [readonly]=\"tokenSent\"\n          inputmode=\"email\"\n          appInputVerbatim=\"false\"\n        />\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"tokenSent\">\n    <hr />\n    <p>{{ \"changeEmailDesc\" | i18n: newEmail }}</p>\n    <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"token\">{{ \"code\" | i18n }}</label>\n          <input\n            id=\"token\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Token\"\n            [(ngModel)]=\"token\"\n            required\n            appInputVerbatim\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span *ngIf=\"!tokenSent\">{{ \"continue\" | i18n }}</span>\n    <span *ngIf=\"tokenSent\">{{ \"changeEmail\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" *ngIf=\"tokenSent\" (click)=\"reset()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { EmailRequest } from \"@bitwarden/common/models/request/emailRequest\";\nimport { EmailTokenRequest } from \"@bitwarden/common/models/request/emailTokenRequest\";\n\n@Component({\n  selector: \"app-change-email\",\n  templateUrl: \"change-email.component.html\",\n})\nexport class ChangeEmailComponent implements OnInit {\n  masterPassword: string;\n  newEmail: string;\n  token: string;\n  tokenSent = false;\n  showTwoFactorEmailWarning = false;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    const twoFactorProviders = await this.apiService.getTwoFactorProviders();\n    this.showTwoFactorEmailWarning = twoFactorProviders.data.some(\n      (p) => p.type === TwoFactorProviderType.Email && p.enabled\n    );\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    this.newEmail = this.newEmail.trim().toLowerCase();\n    if (!this.tokenSent) {\n      const request = new EmailTokenRequest();\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      try {\n        this.formPromise = this.apiService.postEmailToken(request);\n        await this.formPromise;\n        this.tokenSent = true;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const request = new EmailRequest();\n      request.token = this.token;\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.newEmail,\n        kdf,\n        kdfIterations\n      );\n      request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        newKey\n      );\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n      request.key = newEncKey[1].encryptedString;\n      try {\n        this.formPromise = this.apiService.postEmail(request);\n        await this.formPromise;\n        this.reset();\n        this.platformUtilsService.showToast(\n          \"success\",\n          this.i18nService.t(\"emailChanged\"),\n          this.i18nService.t(\"logBackIn\")\n        );\n        this.messagingService.send(\"logout\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n\n  reset() {\n    this.token = this.newEmail = this.masterPassword = null;\n    this.tokenSent = false;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myAccount\" | i18n }}</h1>\n</div>\n<app-profile></app-profile>\n<ng-container *ngIf=\"showChangeEmail\">\n  <div class=\"secondary-header\">\n    <h1>{{ \"changeEmail\" | i18n }}</h1>\n  </div>\n  <app-change-email></app-change-email>\n</ng-container>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button bitButton buttonType=\"danger\" (click)=\"deauthorizeSessions()\">\n      {{ \"deauthorizeSessions\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"deleteAccount()\">\n      {{ \"deleteAccount\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deauthorizeSessionsTemplate></ng-template>\n<ng-template #purgeVaultTemplate></ng-template>\n<ng-template #deleteAccountTemplate></ng-template>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { DeauthorizeSessionsComponent } from \"./deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"./delete-account.component\";\nimport { PurgeVaultComponent } from \"./purge-vault.component\";\n\n@Component({\n  selector: \"app-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"deauthorizeSessionsTemplate\", { read: ViewContainerRef, static: true })\n  deauthModalRef: ViewContainerRef;\n  @ViewChild(\"purgeVaultTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"deleteAccountTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  showChangeEmail = true;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeEmail = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async deauthorizeSessions() {\n    await this.modalService.openViewRef(DeauthorizeSessionsComponent, this.deauthModalRef);\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef);\n  }\n\n  async deleteAccount() {\n    await this.modalService.openViewRef(DeleteAccountComponent, this.deleteModalRef);\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"./organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.plan === \"families\") {\n        this.orgPlansComponent.plan = PlanType.FamiliesAnnually;\n        this.orgPlansComponent.product = ProductType.Families;\n      } else if (qParams.plan === \"teams\") {\n        this.orgPlansComponent.plan = PlanType.TeamsAnnually;\n        this.orgPlansComponent.product = ProductType.Teams;\n      } else if (qParams.plan === \"enterprise\") {\n        this.orgPlansComponent.plan = PlanType.EnterpriseAnnually;\n        this.orgPlansComponent.product = ProductType.Enterprise;\n      }\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"page-header\">\n        <h1>{{ \"newOrganization\" | i18n }}</h1>\n      </div>\n      <p>{{ \"newOrganizationDesc\" | i18n }}</p>\n      <app-organization-plans></app-organization-plans>\n    </div>\n  </div>\n</div>\n","export class UpdateDomainsRequest {\n  equivalentDomains: string[][];\n  excludedGlobalEquivalentDomains: number[];\n}\n","<div class=\"page-header\">\n  <h1>{{ \"domainRules\" | i18n }}</h1>\n</div>\n<p>{{ \"domainRulesDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <h2>{{ \"customEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"form-group d-flex\" *ngFor=\"let d of custom; let i = index; trackBy: indexTrackBy\">\n      <div class=\"flex-fill\">\n        <label for=\"customDomain_{{ i }}\" class=\"sr-only\">{{\n          \"customDomainX\" | i18n: i + 1\n        }}</label>\n        <textarea\n          class=\"form-control\"\n          name=\"CustomDomain[{{ i }}]\"\n          id=\"customDomain_{{ i }}\"\n          [(ngModel)]=\"custom[i]\"\n          placeholder=\"{{ 'ex' | i18n }} google.com, gmail.com\"\n          required\n        ></textarea>\n      </div>\n      <button\n        type=\"button\"\n        class=\"btn btn-link text-danger ml-2\"\n        (click)=\"remove(i)\"\n        appA11yTitle=\"{{ 'remove' | i18n }}\"\n      >\n        <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <button type=\"button\" (click)=\"add()\" class=\"btn btn-outline-secondary btn-sm mb-2\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomDomain\" | i18n }}\n    </button>\n    <small class=\"text-muted d-block mb-3\">{{ \"newCustomDomainDesc\" | i18n }}</small>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n  <h2 class=\"spaced-header\">{{ \"globalEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <table class=\"table table-hover table-list\" *ngIf=\"!loading && global.length > 0\">\n    <tbody>\n      <tr *ngFor=\"let d of global\">\n        <td [ngClass]=\"{ 'table-list-strike': d.excluded }\">{{ d.domains }}</td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"!d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                {{ \"exclude\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-plus\" aria-hidden=\"true\"></i>\n                {{ \"include\" | i18n }}\n              </a>\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"customize(d)\">\n                <i class=\"bwi bwi-fw bwi-cut\" aria-hidden=\"true\"></i>\n                {{ \"customize\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UpdateDomainsRequest } from \"@bitwarden/common/models/request/updateDomainsRequest\";\n\n@Component({\n  selector: \"app-domain-rules\",\n  templateUrl: \"domain-rules.component.html\",\n})\nexport class DomainRulesComponent implements OnInit {\n  loading = true;\n  custom: string[] = [];\n  global: any[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const response = await this.apiService.getSettingsDomains();\n    this.loading = false;\n    if (response.equivalentDomains != null) {\n      this.custom = response.equivalentDomains.map((d) => d.join(\", \"));\n    }\n    if (response.globalEquivalentDomains != null) {\n      this.global = response.globalEquivalentDomains.map((d) => {\n        return {\n          domains: d.domains.join(\", \"),\n          excluded: d.excluded,\n          key: d.type,\n        };\n      });\n    }\n  }\n\n  toggleExcluded(globalDomain: any) {\n    globalDomain.excluded = !globalDomain.excluded;\n  }\n\n  customize(globalDomain: any) {\n    globalDomain.excluded = true;\n    this.custom.push(globalDomain.domains);\n  }\n\n  remove(index: number) {\n    this.custom.splice(index, 1);\n  }\n\n  add() {\n    this.custom.push(\"\");\n  }\n\n  async submit() {\n    const request = new UpdateDomainsRequest();\n    request.excludedGlobalEquivalentDomains = this.global\n      .filter((d) => d.excluded)\n      .map((d) => d.key);\n    if (request.excludedGlobalEquivalentDomains.length === 0) {\n      request.excludedGlobalEquivalentDomains = null;\n    }\n    request.equivalentDomains = this.custom\n      .filter((d) => d != null && d.trim() !== \"\")\n      .map((d) => d.split(\",\").map((d2) => d2.trim()));\n    if (request.equivalentDomains.length === 0) {\n      request.equivalentDomains = null;\n    }\n\n    try {\n      this.formPromise = this.apiService.putSettingsDomains(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"domainsUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  indexTrackBy(index: number, obj: any): any {\n    return index;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\n\n@Component({\n  selector: \"emergency-access-attachments\",\n  templateUrl: \"../vault/attachments.component.html\",\n})\nexport class EmergencyAccessAttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = true;\n  canAccessAttachments = true;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async init() {\n    // Do nothing since cipher is already decoded\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return false;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../vault/add-edit.component.html\",\n})\nexport class EmergencyAddEditComponent extends BaseAddEditComponent {\n  originalCipher: Cipher = null;\n  viewOnly = true;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    messagingService: MessagingService,\n    eventService: EventService,\n    policyService: PolicyService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async load() {\n    this.title = this.i18nService.t(\"viewItem\");\n  }\n\n  protected async loadCipher() {\n    return Promise.resolve(this.originalCipher);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"vault\" | i18n }}</h1>\n</div>\n<div class=\"mt-4\">\n  <ng-container *ngIf=\"ciphers.length\">\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown *ngIf=\"c.hasAttachments\">\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"viewAttachments(c)\">\n                  <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n                  {{ \"attachments\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #attachments></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { EmergencyAccessViewResponse } from \"@bitwarden/common/models/response/emergencyAccessResponse\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { EmergencyAccessAttachmentsComponent } from \"./emergency-access-attachments.component\";\nimport { EmergencyAddEditComponent } from \"./emergency-add-edit.component\";\n\n@Component({\n  selector: \"emergency-access-view\",\n  templateUrl: \"emergency-access-view.component.html\",\n})\nexport class EmergencyAccessViewComponent implements OnInit {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n\n  id: string;\n  ciphers: CipherView[] = [];\n  loaded = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private modalService: ModalService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private apiService: ApiService\n  ) {}\n\n  ngOnInit() {\n    this.route.params.subscribe((qParams) => {\n      if (qParams.id == null) {\n        return this.router.navigate([\"settings/emergency-access\"]);\n      }\n\n      this.id = qParams.id;\n\n      this.load();\n    });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    // eslint-disable-next-line\n    const [_, childComponent] = await this.modalService.openViewRef(\n      EmergencyAddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.cipher = cipher;\n      }\n    );\n\n    return childComponent;\n  }\n\n  async load() {\n    const response = await this.apiService.postEmergencyAccessView(this.id);\n    this.ciphers = await this.getAllCiphers(response);\n    this.loaded = true;\n  }\n\n  async viewAttachments(cipher: CipherView) {\n    await this.modalService.openViewRef(\n      EmergencyAccessAttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipher = cipher;\n        comp.emergencyAccessId = this.id;\n      }\n    );\n  }\n\n  protected async getAllCiphers(response: EmergencyAccessViewResponse): Promise<CipherView[]> {\n    const ciphers = response.ciphers;\n\n    const decCiphers: CipherView[] = [];\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(response.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    const promises: any[] = [];\n    ciphers.forEach((cipherResponse) => {\n      const cipherData = new CipherData(cipherResponse);\n      const cipher = new Cipher(cipherData);\n      promises.push(cipher.decrypt(oldEncKey).then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.cipherService.getLocaleSortingFunction());\n\n    return decCiphers;\n  }\n}\n","export enum EmergencyAccessStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  RecoveryInitiated = 3,\n  RecoveryApproved = 4,\n}\n","export enum EmergencyAccessType {\n  View = 0,\n  Takeover = 1,\n}\n","export class EmergencyAccessConfirmRequest {\n  key: string;\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nimport { AttachmentResponse } from \"./attachmentResponse\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { PasswordHistoryResponse } from \"./passwordHistoryResponse\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessInviteRequest {\n  email: string;\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessUpdateRequest {\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n  keyEncrypted?: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          <app-premium-badge *ngIf=\"readOnly\"></app-premium-badge>\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteEmergencyContactDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"email\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n            />\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userAccess\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/emergency-access/#user-access\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeView\"\n            [value]=\"emergencyAccessType.View\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeView\">\n            {{ \"view\" | i18n }}\n            <small>{{ \"viewDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeTakeover\"\n            [value]=\"emergencyAccessType.Takeover\"\n            [(ngModel)]=\"type\"\n            [disabled]=\"readOnly\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeTakeover\">\n            {{ \"takeover\" | i18n }}\n            <small>{{ \"takeoverDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-group col-6 mt-4\">\n          <label for=\"waitTime\">{{ \"waitTime\" | i18n }}</label>\n          <select\n            id=\"waitTime\"\n            name=\"waitTime\"\n            [(ngModel)]=\"waitTime\"\n            class=\"form-control\"\n            [disabled]=\"readOnly\"\n          >\n            <option *ngFor=\"let o of waitTimes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n          <small class=\"text-muted\">{{ \"waitTimeDesc\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <bit-submit-button [loading]=\"loading || form.loading\" [disabled]=\"readOnly\">\n          {{ \"save\" | i18n }}\n        </bit-submit-button>\n        <button bitButton buttonType=\"secondary\" type=\"button\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            bitButton\n            buttonType=\"danger\"\n            type=\"button\"\n            (click)=\"delete()\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EmergencyAccessType } from \"@bitwarden/common/enums/emergencyAccessType\";\nimport { EmergencyAccessInviteRequest } from \"@bitwarden/common/models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/models/request/emergencyAccessUpdateRequest\";\n\n@Component({\n  selector: \"emergency-access-add-edit\",\n  templateUrl: \"emergency-access-add-edit.component.html\",\n})\nexport class EmergencyAccessAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() emergencyAccessId: string;\n  @Output() onSaved = new EventEmitter();\n  @Output() onDeleted = new EventEmitter();\n\n  loading = true;\n  readOnly = false;\n  editMode = false;\n  title: string;\n  email: string;\n  type: EmergencyAccessType = EmergencyAccessType.View;\n\n  formPromise: Promise<any>;\n\n  emergencyAccessType = EmergencyAccessType;\n  waitTimes: { name: string; value: number }[];\n  waitTime: number;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.emergencyAccessId != null;\n\n    this.waitTimes = [\n      { name: this.i18nService.t(\"oneDay\"), value: 1 },\n      { name: this.i18nService.t(\"days\", \"2\"), value: 2 },\n      { name: this.i18nService.t(\"days\", \"7\"), value: 7 },\n      { name: this.i18nService.t(\"days\", \"14\"), value: 14 },\n      { name: this.i18nService.t(\"days\", \"30\"), value: 30 },\n      { name: this.i18nService.t(\"days\", \"90\"), value: 90 },\n    ];\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editEmergencyContact\");\n      try {\n        const emergencyAccess = await this.apiService.getEmergencyAccess(this.emergencyAccessId);\n        this.type = emergencyAccess.type;\n        this.waitTime = emergencyAccess.waitTimeDays;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteEmergencyContact\");\n      this.waitTime = this.waitTimes[2].value;\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new EmergencyAccessUpdateRequest();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.putEmergencyAccess(this.emergencyAccessId, request);\n      } else {\n        const request = new EmergencyAccessInviteRequest();\n        request.email = this.email.trim();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.postEmergencyAccessInvite(request);\n      }\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSaved.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    this.onDeleted.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"emergency-access-confirm\",\n  templateUrl: \"emergency-access-confirm.component.html\",\n})\nexport class EmergencyAccessConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() emergencyAccessId: string;\n  @Input() formPromise: Promise<any>;\n  @Output() onConfirmed = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n\n  constructor(\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\n      if (publicKeyResponse != null) {\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n        const fingerprint = await this.cryptoService.getFingerprint(this.userId, publicKey.buffer);\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    try {\n      this.onConfirmed.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export class EmergencyAccessPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ \"takeover\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPassword\"\n                type=\"password\"\n                name=\"NewMasterPasswordHash\"\n                class=\"form-control mb-1\"\n                [(ngModel)]=\"masterPassword\"\n                (input)=\"updatePasswordStrength()\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n              </app-password-strength>\n            </div>\n          </div>\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"password\"\n                name=\"MasterPasswordRetype\"\n                class=\"form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ChangePasswordComponent } from \"@bitwarden/angular/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { EmergencyAccessPasswordRequest } from \"@bitwarden/common/models/request/emergencyAccessPasswordRequest\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\n@Component({\n  selector: \"emergency-access-takeover\",\n  templateUrl: \"emergency-access-takeover.component.html\",\n})\nexport class EmergencyAccessTakeoverComponent extends ChangePasswordComponent implements OnInit {\n  @Output() onDone = new EventEmitter();\n  @Input() emergencyAccessId: string;\n  @Input() name: string;\n  @Input() email: string;\n  @Input() kdf: KdfType;\n  @Input() kdfIterations: number;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private apiService: ApiService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    const response = await this.apiService.getEmergencyGrantorPolicies(this.emergencyAccessId);\n    if (response.data != null && response.data.length > 0) {\n      const policies = response.data.map(\n        (policyResponse: PolicyResponse) => new Policy(new PolicyData(policyResponse))\n      );\n      this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(\n        policies\n      );\n    }\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    const takeoverResponse = await this.apiService.postEmergencyAccessTakeover(\n      this.emergencyAccessId\n    );\n\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(takeoverResponse.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    if (oldEncKey == null) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"unexpectedError\")\n      );\n      return;\n    }\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      takeoverResponse.kdf,\n      takeoverResponse.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    const encKey = await this.cryptoService.remakeEncKey(key, oldEncKey);\n\n    const request = new EmergencyAccessPasswordRequest();\n    request.newMasterPasswordHash = masterPasswordHash;\n    request.key = encKey[1].encryptedString;\n\n    this.apiService.postEmergencyAccessPassword(this.emergencyAccessId, request);\n\n    try {\n      this.onDone.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"emergencyAccess\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"emergencyAccessDesc\" | i18n }}\n  <a href=\"https://bitwarden.com/help/emergency-access/\" target=\"_blank\" rel=\"noopener\">\n    {{ \"learnMore\" | i18n }}.\n  </a>\n</p>\n\n<p *ngIf=\"isOrganizationOwner\">\n  <b>{{ \"warning\" | i18n }}:</b> {{ \"emergencyAccessOwnerWarning\" | i18n }}\n</p>\n\n<div class=\"page-header d-flex\">\n  <h2>\n    {{ \"trustedEmergencyContacts\" | i18n }}\n    <app-premium-badge></app-premium-badge>\n  </h2>\n  <div class=\"ml-auto d-flex\">\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      type=\"button\"\n      (click)=\"invite()\"\n      [disabled]=\"!canAccessPremium\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-plus bwi-fw\"></i>\n      {{ \"addEmergencyContact\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"trustedContacts && trustedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of trustedContacts; let i = index\">\n      <td width=\"30\">\n        <app-avatar\n          [data]=\"c | userName\"\n          [email]=\"c.email\"\n          size=\"25\"\n          [circle]=\"true\"\n          [fontSize]=\"14\"\n        >\n        </app-avatar>\n      </td>\n      <td>\n        <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.email }}</a>\n        <span\n          bitBadge\n          badgeType=\"secondary\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n          >{{ \"invited\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\">{{\n          \"emergencyAccessRecoveryApproved\" | i18n\n        }}</span>\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"trustedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #trustedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n            (click)=\"reinvite(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"resendInvitation\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n            (click)=\"confirm(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"confirm\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n            (click)=\"approve(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"approve\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryInitiated ||\n              c.status === emergencyAccessStatusType.RecoveryApproved\n            \"\n            (click)=\"reject(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"reject\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!trustedContacts || !trustedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noTrustedContacts\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<div class=\"page-header spaced-header\">\n  <h2>{{ \"designatedEmergencyContacts\" | i18n }}</h2>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"grantedContacts && grantedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of grantedContacts; let i = index\">\n      <td width=\"30\">\n        <app-avatar\n          [data]=\"c | userName\"\n          [email]=\"c.email\"\n          size=\"25\"\n          [circle]=\"true\"\n          [fontSize]=\"14\"\n        >\n        </app-avatar>\n      </td>\n      <td>\n        <span>{{ c.email }}</span>\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.Invited\">{{\n          \"invited\" | i18n\n        }}</span>\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"success\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\"\n          >{{ \"emergencyAccessRecoveryApproved\" | i18n }}</span\n        >\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"grantedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #grantedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Confirmed\"\n            (click)=\"requestAccess(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"requestAccess\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.Takeover\n            \"\n            (click)=\"takeover(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n            {{ \"takeover\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.View\n            \"\n            [routerLink]=\"c.id\"\n          >\n            <i class=\"bwi bwi-fw bwi-eye\" aria-hidden=\"true\"></i>\n            {{ \"view\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!grantedContacts || !grantedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noGrantedAccess\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<ng-template #addEdit></ng-template>\n<ng-template #takeoverTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"@bitwarden/common/enums/emergencyAccessType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EmergencyAccessConfirmRequest } from \"@bitwarden/common/models/request/emergencyAccessConfirmRequest\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n} from \"@bitwarden/common/models/response/emergencyAccessResponse\";\n\nimport { EmergencyAccessAddEditComponent } from \"./emergency-access-add-edit.component\";\nimport { EmergencyAccessConfirmComponent } from \"./emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"./emergency-access-takeover.component\";\n\n@Component({\n  selector: \"emergency-access\",\n  templateUrl: \"emergency-access.component.html\",\n})\nexport class EmergencyAccessComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"takeoverTemplate\", { read: ViewContainerRef, static: true })\n  takeoverModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  loaded = false;\n  canAccessPremium: boolean;\n  trustedContacts: EmergencyAccessGranteeDetailsResponse[];\n  grantedContacts: EmergencyAccessGrantorDetailsResponse[];\n  emergencyAccessType = EmergencyAccessType;\n  emergencyAccessStatusType = EmergencyAccessStatusType;\n  actionPromise: Promise<any>;\n  isOrganizationOwner: boolean;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const orgs = await this.organizationService.getAll();\n    this.isOrganizationOwner = orgs.some((o) => o.isOwner);\n    this.load();\n  }\n\n  async load() {\n    this.trustedContacts = (await this.apiService.getEmergencyAccessTrusted()).data;\n    this.grantedContacts = (await this.apiService.getEmergencyAccessGranted()).data;\n    this.loaded = true;\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  async edit(details: EmergencyAccessGranteeDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.emergencyAccessId = details?.id;\n        comp.readOnly = !this.canAccessPremium;\n        comp.onSaved.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeleted.subscribe(() => {\n          modal.close();\n          this.remove(details);\n        });\n      }\n    );\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  async reinvite(contact: EmergencyAccessGranteeDetailsResponse) {\n    if (this.actionPromise != null) {\n      return;\n    }\n    this.actionPromise = this.apiService.postEmergencyAccessReinvite(contact.id);\n    await this.actionPromise;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenReinvited\", contact.email)\n    );\n    this.actionPromise = null;\n  }\n\n  async confirm(contact: EmergencyAccessGranteeDetailsResponse) {\n    function updateUser() {\n      contact.status = EmergencyAccessStatusType.Confirmed;\n    }\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n    if (autoConfirm == null || !autoConfirm) {\n      const [modal] = await this.modalService.openViewRef(\n        EmergencyAccessConfirmComponent,\n        this.confirmModalRef,\n        (comp) => {\n          comp.name = this.userNamePipe.transform(contact);\n          comp.emergencyAccessId = contact.id;\n          comp.userId = contact?.granteeId;\n          comp.onConfirmed.subscribe(async () => {\n            modal.close();\n\n            comp.formPromise = this.doConfirmation(contact);\n            await comp.formPromise;\n\n            updateUser();\n            this.platformUtilsService.showToast(\n              \"success\",\n              null,\n              this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n            );\n          });\n        }\n      );\n      return;\n    }\n\n    this.actionPromise = this.doConfirmation(contact);\n    await this.actionPromise;\n    updateUser();\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n    );\n    this.actionPromise = null;\n  }\n\n  async remove(\n    details: EmergencyAccessGranteeDetailsResponse | EmergencyAccessGrantorDetailsResponse\n  ) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteEmergencyAccess(details.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(details))\n      );\n\n      if (details instanceof EmergencyAccessGranteeDetailsResponse) {\n        this.removeGrantee(details);\n      } else {\n        this.removeGrantor(details);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async requestAccess(details: EmergencyAccessGrantorDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"requestAccessConfirmation\", details.waitTimeDays.toString()),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"requestAccess\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessInitiate(details.id);\n\n    details.status = EmergencyAccessStatusType.RecoveryInitiated;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"requestSent\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async approve(details: EmergencyAccessGranteeDetailsResponse) {\n    const type = this.i18nService.t(\n      details.type === EmergencyAccessType.View ? \"view\" : \"takeover\"\n    );\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"approveAccessConfirmation\", this.userNamePipe.transform(details), type),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"approve\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessApprove(details.id);\n    details.status = EmergencyAccessStatusType.RecoveryApproved;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyApproved\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async reject(details: EmergencyAccessGranteeDetailsResponse) {\n    await this.apiService.postEmergencyAccessReject(details.id);\n    details.status = EmergencyAccessStatusType.Confirmed;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyRejected\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async takeover(details: EmergencyAccessGrantorDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessTakeoverComponent,\n      this.takeoverModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.email = details.email;\n        comp.emergencyAccessId = details != null ? details.id : null;\n\n        comp.onDone.subscribe(() => {\n          modal.close();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"passwordResetFor\", this.userNamePipe.transform(details))\n          );\n        });\n      }\n    );\n  }\n\n  private removeGrantee(details: EmergencyAccessGranteeDetailsResponse) {\n    const index = this.trustedContacts.indexOf(details);\n    if (index > -1) {\n      this.trustedContacts.splice(index, 1);\n    }\n  }\n\n  private removeGrantor(details: EmergencyAccessGrantorDetailsResponse) {\n    const index = this.grantedContacts.indexOf(details);\n    if (index > -1) {\n      this.grantedContacts.splice(index, 1);\n    }\n  }\n\n  // Encrypt the master password hash using the grantees public key, and send it to bitwarden for escrow.\n  private async doConfirmation(details: EmergencyAccessGranteeDetailsResponse) {\n    const encKey = await this.cryptoService.getEncKey();\n    const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n    const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n    try {\n      this.logService.debug(\n        \"User's fingerprint: \" +\n          (await this.cryptoService.getFingerprint(details.granteeId, publicKey.buffer)).join(\"-\")\n      );\n    } catch {\n      // Ignore errors since it's just a debug message\n    }\n\n    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n    const request = new EmergencyAccessConfirmRequest();\n    request.key = encryptedKey.encryptedString;\n    await this.apiService.postEmergencyAccessConfirm(details.id, request);\n  }\n}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent implements ControlValueAccessor, Validator, OnInit {\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  get exceedsMinimumTimout(): boolean {\n    return (\n      !this.showCustom || this.customTimeInMinutes() > VaultTimeoutInputComponent.MIN_CUSTOM_MINUTES\n    );\n  }\n\n  static CUSTOM_VALUE = -100;\n  static MIN_CUSTOM_MINUTES = 0;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    if (await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout)) {\n      const vaultTimeoutPolicy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout);\n\n      this.vaultTimeoutPolicy = vaultTimeoutPolicy[0];\n      this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n      this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n      this.vaultTimeouts = this.vaultTimeouts.filter(\n        (t) =>\n          t.value <= this.vaultTimeoutPolicy.data.minutes &&\n          (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n          t.value != null\n      );\n      this.validatorChange();\n    }\n\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    if (!this.exceedsMinimumTimout) {\n      return { minTimeoutError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n\n  private customTimeInMinutes() {\n    return this.form.get(\"custom.hours\")?.value * 60 + this.form.get(\"custom.minutes\")?.value;\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"form-group\">\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n    <small class=\"form-text text-muted\">{{ \"vaultTimeoutDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\" *ngIf=\"showCustom\" formGroupName=\"custom\">\n    <label for=\"customVaultTimeout\">{{ \"customVaultTimeout\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n\n    <small *ngIf=\"!exceedsMinimumTimout\" class=\"tw-text-danger\">\n      <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i> {{ \"vaultCustomTimeoutMinimum\" | i18n }}\n    </small>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"@bitwarden/angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<div class=\"page-header\">\n  <h1>{{ \"preferences\" | i18n }}</h1>\n</div>\n<p>{{ \"preferencesDesc\" | i18n }}</p>\n<form (ngSubmit)=\"submit()\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label>{{ \"vaultTimeoutAction\" | i18n }}</label>\n    <div class=\"form-check form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLock\"\n        value=\"lock\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLock\">\n        {{ \"lock\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLockDesc\" | i18n }}</small>\n      </label>\n    </div>\n    <div class=\"form-check mt-2 form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLogOut\"\n        value=\"logOut\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n        (ngModelChange)=\"vaultTimeoutActionChanged($event)\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLogOut\">\n        {{ \"logOut\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLogOutDesc\" | i18n }}</small>\n      </label>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <div class=\"d-flex\">\n          <label for=\"locale\">{{ \"language\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/localization/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <select id=\"locale\" name=\"Locale\" [(ngModel)]=\"locale\" class=\"form-control\">\n          <option *ngFor=\"let o of localeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"languageDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFavicons\"\n        name=\"enableFavicons\"\n        [(ngModel)]=\"enableFavicons\"\n      />\n      <label class=\"form-check-label\" for=\"enableFavicons\">\n        {{ \"enableFavicon\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/website-icons/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"faviconDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableGravatars\"\n        name=\"enableGravatars\"\n        [(ngModel)]=\"enableGravatars\"\n      />\n      <label class=\"form-check-label\" for=\"enableGravatars\">\n        {{ \"enableGravatars\" | i18n }}\n      </label>\n      <a\n        href=\"https://gravatar.com/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableGravatarsDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFullWidth\"\n        name=\"enableFullWidth\"\n        [(ngModel)]=\"enableFullWidth\"\n      />\n      <label class=\"form-check-label\" for=\"enableFullWidth\">\n        {{ \"enableFullWidth\" | i18n }}\n      </label>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableFullWidthDesc\" | i18n }}</small>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n        <select id=\"theme\" name=\"theme\" [(ngModel)]=\"theme\" class=\"form-control\">\n          <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"themeDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-preferences\",\n  templateUrl: \"preferences.component.html\",\n})\nexport class PreferencesComponent implements OnInit {\n  vaultTimeoutAction = \"lock\";\n  enableFavicons: boolean;\n  enableGravatars: boolean;\n  enableFullWidth: boolean;\n  theme: ThemeType;\n  locale: string;\n  vaultTimeouts: { name: string; value: number }[];\n  localeOptions: any[];\n  themeOptions: any[];\n\n  vaultTimeout: FormControl = new FormControl(null);\n\n  private startingLocale: string;\n  private startingTheme: ThemeType;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private themingService: AbstractThemingService\n  ) {\n    this.vaultTimeouts = [\n      { name: i18nService.t(\"oneMinute\"), value: 1 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: i18nService.t(\"oneHour\"), value: 60 },\n      { name: i18nService.t(\"fourHours\"), value: 240 },\n      { name: i18nService.t(\"onRefresh\"), value: -1 },\n    ];\n    if (this.platformUtilsService.isDev()) {\n      this.vaultTimeouts.push({ name: i18nService.t(\"never\"), value: null });\n    }\n\n    const localeOptions: any[] = [];\n    i18nService.supportedTranslationLocales.forEach((locale) => {\n      let name = locale;\n      if (i18nService.localeNames.has(locale)) {\n        name += \" - \" + i18nService.localeNames.get(locale);\n      }\n      localeOptions.push({ name: name, value: locale });\n    });\n    localeOptions.sort(Utils.getSortFunction(i18nService, \"name\"));\n    localeOptions.splice(0, 0, { name: i18nService.t(\"default\"), value: null });\n    this.localeOptions = localeOptions;\n    this.themeOptions = [\n      { name: i18nService.t(\"themeLight\"), value: ThemeType.Light },\n      { name: i18nService.t(\"themeDark\"), value: ThemeType.Dark },\n      { name: i18nService.t(\"themeSystem\"), value: ThemeType.System },\n    ];\n  }\n\n  async ngOnInit() {\n    this.vaultTimeout.setValue(await this.vaultTimeoutService.getVaultTimeout());\n    this.vaultTimeoutAction = await this.stateService.getVaultTimeoutAction();\n    this.enableFavicons = !(await this.stateService.getDisableFavicon());\n    this.enableGravatars = await this.stateService.getEnableGravitars();\n    this.enableFullWidth = await this.stateService.getEnableFullWidth();\n\n    this.locale = (await this.stateService.getLocale()) ?? null;\n    this.startingLocale = this.locale;\n\n    this.theme = await this.stateService.getTheme();\n    this.startingTheme = this.theme;\n  }\n\n  async submit() {\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutRangeError\")\n      );\n      return;\n    }\n\n    await this.vaultTimeoutService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    await this.stateService.setDisableFavicon(!this.enableFavicons);\n    await this.stateService.setEnableGravitars(this.enableGravatars);\n    await this.stateService.setEnableFullWidth(this.enableFullWidth);\n    this.messagingService.send(\"setFullWidth\");\n    if (this.theme !== this.startingTheme) {\n      await this.themingService.updateConfiguredTheme(this.theme);\n      this.startingTheme = this.theme;\n    }\n    await this.stateService.setLocale(this.locale);\n    if (this.locale !== this.startingLocale) {\n      window.location.reload();\n    } else {\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"preferencesUpdated\")\n      );\n    }\n  }\n\n  async vaultTimeoutActionChanged(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutAction = \"lock\";\n        return;\n      }\n    }\n    this.vaultTimeoutAction = newValue;\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { Send } from \"../domain/send\";\n\nimport { SendRequest } from \"./sendRequest\";\n\nexport class SendWithIdRequest extends SendRequest {\n  id: string;\n\n  constructor(send: Send) {\n    super(send);\n    this.id = send.id;\n  }\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"changeMasterPassword\" | i18n }}</h1>\n</div>\n\n<bit-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</bit-callout>\n<app-callout\n  type=\"info\"\n  [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n  *ngIf=\"enforcedPolicyOptions\"\n>\n</app-callout>\n\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n        <input\n          id=\"currentMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"currentMasterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n        <input\n          id=\"newMasterPassword\"\n          type=\"password\"\n          name=\"NewMasterPasswordHash\"\n          class=\"form-control mb-1\"\n          [(ngModel)]=\"masterPassword\"\n          (input)=\"updatePasswordStrength()\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n        <app-password-strength\n          [score]=\"masterPasswordScore\"\n          [showText]=\"true\"\n        ></app-password-strength>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n        <input\n          id=\"masterPasswordRetype\"\n          type=\"password\"\n          name=\"MasterPasswordRetype\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPasswordRetype\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"rotateEncKey\"\n        name=\"RotateEncKey\"\n        [(ngModel)]=\"rotateEncKey\"\n        (change)=\"rotateEncKeyClicked()\"\n      />\n      <label class=\"form-check-label\" for=\"rotateEncKey\">\n        {{ \"rotateAccountEncKey\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"changeMasterPassword\" | i18n }}\n  </bit-submit-button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"@bitwarden/angular/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/enums/emergencyAccessStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/models/request/cipherWithIdRequest\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/models/request/emergencyAccessUpdateRequest\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/models/request/folderWithIdRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { PasswordRequest } from \"@bitwarden/common/models/request/passwordRequest\";\nimport { SendWithIdRequest } from \"@bitwarden/common/models/request/sendWithIdRequest\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/updateKeyRequest\";\n\n@Component({\n  selector: \"app-change-password\",\n  templateUrl: \"change-password.component.html\",\n})\nexport class ChangePasswordComponent extends BaseChangePasswordComponent {\n  rotateEncKey = false;\n  currentMasterPassword: string;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private syncService: SyncService,\n    private apiService: ApiService,\n    private sendService: SendService,\n    private organizationService: OrganizationService,\n    private keyConnectorService: KeyConnectorService,\n    private router: Router\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      this.router.navigate([\"/settings/security/two-factor\"]);\n    }\n    await super.ngOnInit();\n  }\n\n  async rotateEncKeyClicked() {\n    if (this.rotateEncKey) {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      let hasOldAttachments = false;\n      if (ciphers != null) {\n        for (let i = 0; i < ciphers.length; i++) {\n          if (ciphers[i].organizationId == null && ciphers[i].hasOldAttachments) {\n            hasOldAttachments = true;\n            break;\n          }\n        }\n      }\n\n      if (hasOldAttachments) {\n        const learnMore = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"oldAttachmentsNeedFixDesc\"),\n          null,\n          this.i18nService.t(\"learnMore\"),\n          this.i18nService.t(\"close\"),\n          \"warning\"\n        );\n        if (learnMore) {\n          this.platformUtilsService.launchUri(\n            \"https://bitwarden.com/help/attachments/#add-storage-space\"\n          );\n        }\n        this.rotateEncKey = false;\n        return;\n      }\n\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateEncryptionKeyWarning\") +\n          \" \" +\n          this.i18nService.t(\"updateEncryptionKeyExportWarning\") +\n          \" \" +\n          this.i18nService.t(\"rotateEncKeyConfirmation\"),\n        this.i18nService.t(\"rotateEncKeyTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        this.rotateEncKey = false;\n      }\n    }\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    await super.submit();\n  }\n\n  async setupSubmitActions() {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n\n    if (this.rotateEncKey) {\n      await this.syncService.fullSync(true);\n    }\n\n    return super.setupSubmitActions();\n  }\n\n  async performSubmitActions(\n    newMasterPasswordHash: string,\n    newKey: SymmetricCryptoKey,\n    newEncKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const request = new PasswordRequest();\n    request.masterPasswordHash = await this.cryptoService.hashPassword(\n      this.currentMasterPassword,\n      null\n    );\n    request.newMasterPasswordHash = newMasterPasswordHash;\n    request.key = newEncKey[1].encryptedString;\n\n    try {\n      if (this.rotateEncKey) {\n        this.formPromise = this.apiService.postPassword(request).then(() => {\n          return this.updateKey(newKey, request.newMasterPasswordHash);\n        });\n      } else {\n        this.formPromise = this.apiService.postPassword(request);\n      }\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  private async updateKey(key: SymmetricCryptoKey, masterPasswordHash: string) {\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = masterPasswordHash;\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    const sends = await this.sendService.getAll();\n    await Promise.all(\n      sends.map(async (send) => {\n        const cryptoKey = await this.cryptoService.decryptToBytes(send.key, null);\n        send.key = (await this.cryptoService.encrypt(cryptoKey, encKey[0])) ?? send.key;\n        request.sends.push(new SendWithIdRequest(send));\n      })\n    );\n\n    await this.apiService.postAccountKey(request);\n\n    await this.updateEmergencyAccesses(encKey[0]);\n\n    await this.updateAllResetPasswordKeys(encKey[0], masterPasswordHash);\n  }\n\n  private async updateEmergencyAccesses(encKey: SymmetricCryptoKey) {\n    const emergencyAccess = await this.apiService.getEmergencyAccessTrusted();\n    const allowedStatuses = [\n      EmergencyAccessStatusType.Confirmed,\n      EmergencyAccessStatusType.RecoveryInitiated,\n      EmergencyAccessStatusType.RecoveryApproved,\n    ];\n\n    const filteredAccesses = emergencyAccess.data.filter((d) => allowedStatuses.includes(d.status));\n\n    for (const details of filteredAccesses) {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      const updateRequest = new EmergencyAccessUpdateRequest();\n      updateRequest.type = details.type;\n      updateRequest.waitTimeDays = details.waitTimeDays;\n      updateRequest.keyEncrypted = encryptedKey.encryptedString;\n\n      await this.apiService.putEmergencyAccess(details.id, updateRequest);\n    }\n  }\n\n  private async updateAllResetPasswordKeys(encKey: SymmetricCryptoKey, masterPasswordHash: string) {\n    const orgs = await this.organizationService.getAll();\n\n    for (const org of orgs) {\n      // If not already enrolled, skip\n      if (!org.resetPasswordEnrolled) {\n        continue;\n      }\n\n      // Retrieve public key\n      const response = await this.apiService.getOrganizationKeys(org.id);\n      const publicKey = Utils.fromB64ToArray(response?.publicKey);\n\n      // Re-enroll - encrpyt user's encKey.key with organization public key\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Create/Execute request\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = masterPasswordHash;\n      request.resetPasswordKey = encryptedKey.encryptedString;\n\n      await this.apiService.putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request);\n    }\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { PasswordRequest } from \"./passwordRequest\";\n\nexport class KdfRequest extends PasswordRequest {\n  kdf: KdfType;\n  kdfIterations: number;\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"encKeySettings\" | i18n }}</h1>\n</div>\n<bit-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</bit-callout>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"kdfMasterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"kdfMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdf\">{{ \"kdfAlgorithm\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://en.wikipedia.org/wiki/Key_derivation_function\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <select id=\"kdf\" name=\"Kdf\" [(ngModel)]=\"kdf\" class=\"form-control\" required>\n          <option *ngFor=\"let o of kdfOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdfIterations\">{{ \"kdfIterations\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://bitwarden.com/help/what-encryption-is-used/#pbkdf2\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <input\n          id=\"kdfIterations\"\n          type=\"number\"\n          min=\"5000\"\n          max=\"2000000\"\n          name=\"KdfIterations\"\n          class=\"form-control\"\n          [(ngModel)]=\"kdfIterations\"\n          required\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <div class=\"small form-text text-muted\">\n          <p>{{ \"kdfIterationsDesc\" | i18n: (recommendedKdfIterations | number) }}</p>\n          <strong>{{ \"warning\" | i18n }}</strong\n          >: {{ \"kdfIterationsWarning\" | i18n: (50000 | number) }}\n        </div>\n      </div>\n    </div>\n  </div>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"changeKdf\" | i18n }}\n  </bit-submit-button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { KdfRequest } from \"@bitwarden/common/models/request/kdfRequest\";\n\n@Component({\n  selector: \"app-change-kdf\",\n  templateUrl: \"change-kdf.component.html\",\n})\nexport class ChangeKdfComponent implements OnInit {\n  masterPassword: string;\n  kdfIterations: number;\n  kdf = KdfType.PBKDF2_SHA256;\n  kdfOptions: any[] = [];\n  formPromise: Promise<any>;\n  recommendedKdfIterations = DEFAULT_KDF_ITERATIONS;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.kdfOptions = [{ name: \"PBKDF2 SHA-256\", value: KdfType.PBKDF2_SHA256 }];\n  }\n\n  async ngOnInit() {\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    const request = new KdfRequest();\n    request.kdf = this.kdf;\n    request.kdfIterations = this.kdfIterations;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n    const email = await this.stateService.getEmail();\n    const newKey = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email,\n      this.kdf,\n      this.kdfIterations\n    );\n    request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      newKey\n    );\n    const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n    request.key = newEncKey[1].encryptedString;\n    try {\n      this.formPromise = this.apiService.postAccountKdf(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"encKeySettingsChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<app-change-kdf *ngIf=\"showChangeKdf\"></app-change-kdf>\n<div\n  [ngClass]=\"{ 'tabbed-header': !showChangeKdf, 'secondary-header': showChangeKdf }\"\n  class=\"border-0 mb-0\"\n>\n  <h1>{{ \"apiKey\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"userApiKeyDesc\" | i18n }}\n</p>\n<button bitButton buttonType=\"secondary\" (click)=\"viewUserApiKey()\">\n  {{ \"viewApiKey\" | i18n }}\n</button>\n<button bitButton buttonType=\"secondary\" (click)=\"rotateUserApiKey()\">\n  {{ \"rotateApiKey\" | i18n }}\n</button>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { ApiKeyComponent } from \"./api-key.component\";\n\n@Component({\n  selector: \"app-security-keys\",\n  templateUrl: \"security-keys.component.html\",\n})\nexport class SecurityKeysComponent implements OnInit {\n  @ViewChild(\"viewUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  viewUserApiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateUserApiKeyModalRef: ViewContainerRef;\n\n  showChangeKdf = true;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private modalService: ModalService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeKdf = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async viewUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.viewUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"userApiKeyDesc\";\n    });\n  }\n\n  async rotateUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.isRotation = true;\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserRotateApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\">\n  <ul class=\"nav nav-tabs\">\n    <ng-container *ngIf=\"showChangePassword\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"change-password\" routerLinkActive=\"active\">\n          {{ \"masterPassword\" | i18n }}\n        </a>\n      </li>\n    </ng-container>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"two-factor\" routerLinkActive=\"active\">\n        {{ \"twoStepLogin\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"security-keys\" routerLinkActive=\"active\">\n        {{ \"keys\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\n\n@Component({\n  selector: \"app-security\",\n  templateUrl: \"security.component.html\",\n})\nexport class SecurityComponent {\n  showChangePassword = true;\n\n  constructor(private keyConnectorService: KeyConnectorService) {}\n\n  async ngOnInit() {\n    this.showChangePassword = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { ChangePasswordComponent } from \"./change-password.component\";\nimport { SecurityKeysComponent } from \"./security-keys.component\";\nimport { SecurityComponent } from \"./security.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SecurityComponent,\n    data: { titleId: \"security\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"change-password\" },\n      {\n        path: \"change-password\",\n        component: ChangePasswordComponent,\n        data: { titleId: \"masterPassword\" },\n      },\n      {\n        path: \"two-factor\",\n        component: TwoFactorSetupComponent,\n        data: { titleId: \"twoStepLogin\" },\n      },\n      {\n        path: \"security-keys\",\n        component: SecurityKeysComponent,\n        data: { titleId: \"keys\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SecurityRoutingModule {}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"accountSettings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myAccount\" | i18n }}\n          </a>\n          <a routerLink=\"security\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"security\" | i18n }}\n          </a>\n          <a routerLink=\"preferences\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"preferences\" | i18n }}\n          </a>\n          <a\n            routerLink=\"subscription\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"!hideSubscription\"\n          >\n            {{ \"subscription\" | i18n }}\n          </a>\n          <a routerLink=\"domain-rules\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"domainRules\" | i18n }}\n          </a>\n          <a routerLink=\"emergency-access\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"emergencyAccess\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sponsored-families\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"hasFamilySponsorshipAvailable\"\n          >\n            {{ \"sponsoredFamilies\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\nimport { StateService } from \"../../abstractions/state.service\";\n\nconst BroadcasterSubscriptionId = \"SettingsComponent\";\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  premium: boolean;\n  selfHosted: boolean;\n  hasFamilySponsorshipAvailable: boolean;\n  hideSubscription: boolean;\n\n  constructor(\n    private tokenService: TokenService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"purchasedPremium\":\n            await this.load();\n            break;\n          default:\n        }\n      });\n    });\n\n    this.selfHosted = await this.platformUtilsService.isSelfHost();\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    this.premium = await this.stateService.getHasPremiumPersonally();\n    this.hasFamilySponsorshipAvailable = await this.organizationService.canManageSponsorships();\n    const hasPremiumFromOrg = await this.stateService.getHasPremiumFromOrganization();\n    let billing = null;\n    if (!this.selfHosted) {\n      billing = await this.apiService.getUserBillingHistory();\n    }\n    this.hideSubscription =\n      !this.premium && hasPremiumFromOrg && (this.selfHosted || billing?.hasNoHistory);\n  }\n}\n","import { AbstractControl, AsyncValidatorFn, ValidationErrors } from \"@angular/forms\";\n\nexport function notAllowedValueAsync(\n  valueGetter: () => Promise<string>,\n  caseInsensitive = false\n): AsyncValidatorFn {\n  return async (control: AbstractControl): Promise<ValidationErrors | null> => {\n    let notAllowedValue = await valueGetter();\n    let controlValue = control.value;\n    if (caseInsensitive) {\n      notAllowedValue = notAllowedValue.toLowerCase();\n      controlValue = controlValue.toLowerCase();\n    }\n\n    if (controlValue === notAllowedValue) {\n      return {\n        notAllowedValue: true,\n      };\n    }\n  };\n}\n","<td>\n  {{ sponsoringOrg.familySponsorshipFriendlyName }}\n</td>\n<td>{{ sponsoringOrg.name }}</td>\n<td>\n  <span [ngClass]=\"statusClass\">{{ statusMessage }}</span>\n</td>\n<td class=\"table-action-right\">\n  <div class=\"dropdown\" appListDropdown>\n    <button\n      *ngIf=\"!sponsoringOrg.familySponsorshipToDelete\"\n      class=\"btn btn-outline-secondary dropdown-toggle\"\n      type=\"button\"\n      id=\"dropdownMenuButton\"\n      data-toggle=\"dropdown\"\n      aria-haspopup=\"true\"\n      aria-expanded=\"false\"\n      appA11yTitle=\"{{ 'options' | i18n }}\"\n    >\n      <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n    </button>\n    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n      <button\n        #resendEmailBtn\n        *ngIf=\"!isSelfHosted && !sponsoringOrg.familySponsorshipValidUntil\"\n        [appApiAction]=\"resendEmailPromise\"\n        class=\"dropdown-item btn-submit\"\n        [disabled]=\"resendEmailBtn.loading\"\n        (click)=\"resendEmail()\"\n        [attr.aria-label]=\"'resendEmailLabel' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"resendEmail\" | i18n }}</span>\n      </button>\n      <button\n        #revokeSponsorshipBtn\n        [appApiAction]=\"revokeSponsorshipPromise\"\n        class=\"dropdown-item text-danger btn-submit\"\n        [disabled]=\"revokeSponsorshipBtn.loading\"\n        (click)=\"revokeSponsorship()\"\n        [attr.aria-label]=\"'revokeAccount' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"remove\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</td>\n","import { formatDate } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output, OnInit } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"[sponsoring-org-row]\",\n  templateUrl: \"sponsoring-org-row.component.html\",\n})\nexport class SponsoringOrgRowComponent implements OnInit {\n  @Input() sponsoringOrg: Organization = null;\n  @Input() isSelfHosted = false;\n\n  @Output() sponsorshipRemoved = new EventEmitter();\n\n  statusMessage = \"loading\";\n  statusClass: \"text-success\" | \"text-danger\" = \"text-success\";\n\n  revokeSponsorshipPromise: Promise<any>;\n  resendEmailPromise: Promise<any>;\n\n  private locale = \"\";\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private logService: LogService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.locale = await firstValueFrom(this.i18nService.locale$);\n\n    this.setStatus(\n      this.isSelfHosted,\n      this.sponsoringOrg.familySponsorshipToDelete,\n      this.sponsoringOrg.familySponsorshipValidUntil,\n      this.sponsoringOrg.familySponsorshipLastSyncDate\n    );\n  }\n\n  async revokeSponsorship() {\n    try {\n      this.revokeSponsorshipPromise = this.doRevokeSponsorship();\n      await this.revokeSponsorshipPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.revokeSponsorshipPromise = null;\n  }\n\n  async resendEmail() {\n    this.resendEmailPromise = this.apiService.postResendSponsorshipOffer(this.sponsoringOrg.id);\n    await this.resendEmailPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailSent\"));\n    this.resendEmailPromise = null;\n  }\n\n  get isSentAwaitingSync() {\n    return this.isSelfHosted && !this.sponsoringOrg.familySponsorshipLastSyncDate;\n  }\n\n  private async doRevokeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeSponsorshipConfirmation\"),\n      `${this.i18nService.t(\"remove\")} ${this.sponsoringOrg.familySponsorshipFriendlyName}?`,\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    await this.apiService.deleteRevokeSponsorship(this.sponsoringOrg.id);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reclaimedFreePlan\"));\n    this.sponsorshipRemoved.emit();\n  }\n\n  private setStatus(\n    selfHosted: boolean,\n    toDelete?: boolean,\n    validUntil?: Date,\n    lastSyncDate?: Date\n  ) {\n    /*\n     * Possible Statuses:\n     * Requested (self-hosted only)\n     * Sent\n     * Active\n     * RequestRevoke\n     * RevokeWhenExpired\n     */\n\n    if (toDelete && validUntil) {\n      // They want to delete but there is a valid until date which means there is an active sponsorship\n      this.statusMessage = this.i18nService.t(\n        \"revokeWhenExpired\",\n        formatDate(validUntil, \"MM/dd/yyyy\", this.locale)\n      );\n      this.statusClass = \"text-danger\";\n    } else if (toDelete) {\n      // They want to delete and we don't have a valid until date so we can\n      // this should only happen on a self-hosted install\n      this.statusMessage = this.i18nService.t(\"requestRemoved\");\n      this.statusClass = \"text-danger\";\n    } else if (validUntil) {\n      // They don't want to delete and they have a valid until date\n      // that means they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"active\");\n      this.statusClass = \"text-success\";\n    } else if (selfHosted && lastSyncDate) {\n      // We are on a self-hosted install and it has been synced but we have not gotten\n      // a valid until date so we can't know if they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else if (!selfHosted) {\n      // We are in cloud and all other status checks have been false therefore we have\n      // sent the request but it hasn't been accepted yet\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else {\n      // We are on a self-hosted install and we have not synced yet\n      this.statusMessage = this.i18nService.t(\"requested\");\n      this.statusClass = \"text-success\";\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"sponsoredFamilies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"!loading\">\n  <p>\n    {{ \"sponsoredFamiliesEligible\" | i18n }}\n  </p>\n  <div>\n    {{ \"sponsoredFamiliesInclude\" | i18n }}:\n    <ul class=\"inset-list\">\n      <li>{{ \"sponsoredFamiliesPremiumAccess\" | i18n }}</li>\n      <li>{{ \"sponsoredFamiliesSharedCollections\" | i18n }}</li>\n    </ul>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    [formGroup]=\"sponsorshipForm\"\n    ngNativeValidate\n    *ngIf=\"anyOrgsAvailable\"\n  >\n    <div class=\"form-group col-7\">\n      <label for=\"availableSponsorshipOrg\">{{ \"familiesSponsoringOrgSelect\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        formControlName=\"selectedSponsorshipOrgId\"\n        class=\"form-control\"\n        required\n      >\n        <option disabled=\"true\" value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option *ngFor=\"let o of availableSponsorshipOrgs\" [ngValue]=\"o.id\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"form-group col-7\">\n      <label for=\"sponsorshipEmail\">{{ \"sponsoredFamiliesEmail\" | i18n }}:</label>\n      <input\n        id=\"sponsorshipEmail\"\n        class=\"form-control\"\n        inputmode=\"email\"\n        formControlName=\"sponsorshipEmail\"\n        name=\"sponsorshipEmail\"\n        required\n        [attr.aria-invalid]=\"sponsorshipEmailControl.invalid\"\n      />\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.notAllowedValue\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"cannotSponsorSelf\" | i18n }}\n      </small>\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.email\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"invalidEmail\" | i18n }}\n      </small>\n    </div>\n    <div class=\"form-group col-7\">\n      <button class=\"btn btn-primary btn-submit mt-2\" type=\"submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"redeem\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n  <ng-container *ngIf=\"anyActiveSponsorships\">\n    <div class=\"border-bottom\">\n      <table class=\"table table-hover table-list\">\n        <thead>\n          <tr>\n            <th>{{ \"recipient\" | i18n }}</th>\n            <th>{{ \"sponsoringOrg\" | i18n }}</th>\n            <th>{{ \"status\" | i18n }}</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <ng-container *ngFor=\"let o of activeSponsorshipOrgs\">\n            <tr\n              sponsoring-org-row\n              [sponsoringOrg]=\"o\"\n              [isSelfHosted]=\"isSelfHosted\"\n              (sponsorshipRemoved)=\"load(true)\"\n            ></tr>\n          </ng-container>\n        </tbody>\n      </table>\n    </div>\n    <small>{{ \"sponsoredFamiliesLeaveCopy\" | i18n }}</small>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\nimport { notAllowedValueAsync } from \"@bitwarden/angular/validators/notAllowedValueAsync.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-sponsored-families\",\n  templateUrl: \"sponsored-families.component.html\",\n})\nexport class SponsoredFamiliesComponent implements OnInit {\n  loading = false;\n\n  availableSponsorshipOrgs: Organization[] = [];\n  activeSponsorshipOrgs: Organization[] = [];\n\n  // Conditional display properties\n  formPromise: Promise<any>;\n\n  sponsorshipForm: FormGroup;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private formBuilder: FormBuilder,\n    private stateService: StateService\n  ) {\n    this.sponsorshipForm = this.formBuilder.group({\n      selectedSponsorshipOrgId: [\n        \"\",\n        {\n          validators: [Validators.required],\n        },\n      ],\n      sponsorshipEmail: [\n        \"\",\n        {\n          validators: [Validators.email],\n          asyncValidators: [\n            notAllowedValueAsync(async () => await this.stateService.getEmail(), true),\n          ],\n          updateOn: \"blur\",\n        },\n      ],\n    });\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async submit() {\n    this.formPromise = this.apiService.postCreateSponsorship(\n      this.sponsorshipForm.value.selectedSponsorshipOrgId,\n      {\n        sponsoredEmail: this.sponsorshipForm.value.sponsorshipEmail,\n        planSponsorshipType: PlanSponsorshipType.FamiliesForEnterprise,\n        friendlyName: this.sponsorshipForm.value.sponsorshipEmail,\n      }\n    );\n\n    await this.formPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"sponsorshipCreated\"));\n    this.formPromise = null;\n    this.resetForm();\n    await this.load(true);\n  }\n\n  async load(forceReload = false) {\n    if (this.loading) {\n      return;\n    }\n\n    this.loading = true;\n    if (forceReload) {\n      await this.syncService.fullSync(true);\n    }\n\n    const allOrgs = await this.organizationService.getAll();\n    this.availableSponsorshipOrgs = allOrgs.filter((org) => org.familySponsorshipAvailable);\n\n    this.activeSponsorshipOrgs = allOrgs.filter(\n      (org) => org.familySponsorshipFriendlyName !== null\n    );\n\n    if (this.availableSponsorshipOrgs.length === 1) {\n      this.sponsorshipForm.patchValue({\n        selectedSponsorshipOrgId: this.availableSponsorshipOrgs[0].id,\n      });\n    }\n    this.loading = false;\n  }\n\n  get sponsorshipEmailControl() {\n    return this.sponsorshipForm.controls[\"sponsorshipEmail\"];\n  }\n\n  private async resetForm() {\n    this.sponsorshipForm.reset();\n  }\n\n  get anyActiveSponsorships(): boolean {\n    return this.activeSponsorshipOrgs.length > 0;\n  }\n\n  get anyOrgsAvailable(): boolean {\n    return this.availableSponsorshipOrgs.length > 0;\n  }\n\n  get isSelfHosted(): boolean {\n    return this.platformUtilsService.isSelfHost();\n  }\n}\n","<div class=\"tabbed-header d-flex\">\n  <h1>\n    {{ \"paymentMethod\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ (isCreditBalance ? \"accountCredit\" : \"accountBalance\") | i18n }}</h2>\n  <p class=\"text-lg\">\n    <strong>{{ creditOrBalance | currency: \"$\" }}</strong>\n  </p>\n  <p>{{ \"creditAppliedDesc\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"addCredit()\" *ngIf=\"!showAddCredit\">\n    {{ \"addCredit\" | i18n }}\n  </button>\n  <app-add-credit\n    (onAdded)=\"closeAddCredit(true)\"\n    (onCanceled)=\"closeAddCredit(false)\"\n    *ngIf=\"showAddCredit\"\n  >\n  </app-add-credit>\n  <h2 class=\"spaced-header\">{{ \"paymentMethod\" | i18n }}</h2>\n  <p *ngIf=\"!paymentSource\">{{ \"noPaymentMethod\" | i18n }}</p>\n  <ng-container *ngIf=\"paymentSource\">\n    <p>\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-credit-card': paymentSource.type === paymentMethodType.Card,\n          'bwi-bank': paymentSource.type === paymentMethodType.BankAccount,\n          'bwi-money': paymentSource.type === paymentMethodType.Check,\n          'bwi-paypal text-primary': paymentSource.type === paymentMethodType.PayPal,\n          'bwi-apple text-muted': paymentSource.type === paymentMethodType.AppleInApp,\n          'bwi-google text-muted': paymentSource.type === paymentMethodType.GoogleInApp\n        }\"\n      ></i>\n      <span *ngIf=\"paymentSourceInApp\">{{ \"inAppPurchase\" | i18n }}</span>\n      {{ paymentSource.description }}\n    </p>\n  </ng-container>\n  <button bitButton buttonType=\"secondary\" (click)=\"changePayment()\" *ngIf=\"!showAdjustPayment\">\n    {{ (paymentSource ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n  </button>\n  <app-adjust-payment\n    [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n    (onAdjusted)=\"closePayment(true)\"\n    (onCanceled)=\"closePayment(false)\"\n    *ngIf=\"showAdjustPayment\"\n  >\n  </app-adjust-payment>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { BillingPaymentResponse } from \"@bitwarden/common/models/response/billingPaymentResponse\";\n\n@Component({\n  selector: \"app-payment-method\",\n  templateUrl: \"payment-method.component.html\",\n})\nexport class PaymentMethodComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  showAdjustPayment = false;\n  showAddCredit = false;\n  billing: BillingPaymentResponse;\n  paymentMethodType = PaymentMethodType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    if (this.platformUtilsService.isSelfHost()) {\n      this.router.navigate([\"/settings/subscription\"]);\n    }\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    this.billing = await this.apiService.getUserBillingPayment();\n    this.loading = false;\n  }\n\n  addCredit() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"addCredit\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAddCredit = true;\n  }\n\n  closeAddCredit(load: boolean) {\n    this.showAddCredit = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  changePayment() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"changePaymentMethod\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAdjustPayment = true;\n  }\n\n  closePayment(load: boolean) {\n    this.showAdjustPayment = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get isCreditBalance() {\n    return this.billing == null || this.billing.balance <= 0;\n  }\n\n  get creditOrBalance() {\n    return Math.abs(this.billing != null ? this.billing.balance : 0);\n  }\n\n  get paymentSource() {\n    return this.billing != null ? this.billing.paymentSource : null;\n  }\n\n  get paymentSourceInApp() {\n    return (\n      this.paymentSource != null &&\n      (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n        this.paymentSource.type === PaymentMethodType.GoogleInApp)\n    );\n  }\n}\n","<div *ngIf=\"selfHosted\" class=\"page-header\">\n  <h1>{{ \"subscription\" | i18n }}</h1>\n</div>\n<div *ngIf=\"!selfHosted\" class=\"tabbed-header\">\n  <h1>{{ \"goPremium\" | i18n }}</h1>\n</div>\n<bit-callout\n  type=\"info\"\n  *ngIf=\"canAccessPremium\"\n  title=\"{{ 'youHavePremiumAccess' | i18n }}\"\n  icon=\"bwi bwi-star-f\"\n>\n  {{ \"alreadyPremiumFromOrg\" | i18n }}\n</bit-callout>\n<bit-callout type=\"success\">\n  <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n  <ul class=\"bwi-ul\">\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpStorage\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTwoStep\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpEmergency\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpReports\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTotp\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpSupport\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpFuture\" | i18n }}\n    </li>\n  </ul>\n  <p class=\"text-lg\" [ngClass]=\"{ 'mb-0': !selfHosted }\">\n    {{ \"premiumPrice\" | i18n: (premiumPrice | currency: \"$\") }}\n  </p>\n  <a\n    bitButton\n    href=\"https://vault.bitwarden.com/#/settings/premium\"\n    target=\"_blank\"\n    rel=\"noopener\"\n    buttonType=\"secondary\"\n    *ngIf=\"selfHosted\"\n  >\n    {{ \"purchasePremium\" | i18n }}\n  </a>\n</bit-callout>\n<ng-container *ngIf=\"selfHosted\">\n  <p>{{ \"uploadLicenseFilePremium\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_premium_license.json\"\n      }}</small>\n    </div>\n    <bit-submit-button [loading]=\"form.loading\">\n      {{ \"submit\" | i18n }}\n    </bit-submit-button>\n  </form>\n</ng-container>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\">\n  <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n      <input\n        id=\"additionalStorage\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"AdditionalStorageGb\"\n        [(ngModel)]=\"additionalStorage\"\n        min=\"0\"\n        max=\"99\"\n        step=\"1\"\n        placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n      />\n      <small class=\"text-muted form-text\">{{\n        \"additionalStorageIntervalDesc\"\n          | i18n: \"1 GB\":(storageGbPrice | currency: \"$\"):(\"year\" | i18n)\n      }}</small>\n    </div>\n  </div>\n  <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n  {{ \"premiumMembership\" | i18n }}: {{ premiumPrice | currency: \"$\" }} <br />\n  {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} GB &times;\n  {{ storageGbPrice | currency: \"$\" }} =\n  {{ additionalStorageTotal | currency: \"$\" }}\n  <hr class=\"my-3\" />\n  <h2 class=\"spaced-header mb-4\">{{ \"paymentInformation\" | i18n }}</h2>\n  <app-payment [hideBank]=\"true\"></app-payment>\n  <app-tax-info></app-tax-info>\n  <div id=\"price\" class=\"my-4\">\n    <div class=\"text-muted text-sm\">\n      {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n      <br />\n      <ng-container>\n        {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n      </ng-container>\n    </div>\n    <hr class=\"my-1 col-3 ml-0\" />\n    <p class=\"text-lg\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{ \"year\" | i18n }}\n    </p>\n  </div>\n  <small class=\"text-muted font-italic\">{{ \"paymentChargedAnnually\" | i18n }}</small>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"submit\" | i18n }}\n  </bit-submit-button>\n</form>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\n\n  canAccessPremium = false;\n  selfHosted = false;\n  premiumPrice = 10;\n  storageGbPrice = 4;\n  additionalStorage = 0;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const premiumPersonally = await this.stateService.getHasPremiumPersonally();\n    if (premiumPersonally) {\n      this.router.navigate([\"/settings/subscription/user-subscription\"]);\n      return;\n    }\n  }\n\n  async submit() {\n    let files: FileList = null;\n    if (this.selfHosted) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n    }\n\n    try {\n      if (this.selfHosted) {\n        if (!this.tokenService.getEmailVerified()) {\n          this.platformUtilsService.showToast(\n            \"error\",\n            this.i18nService.t(\"errorOccurred\"),\n            this.i18nService.t(\"verifyEmailFirst\")\n          );\n          return;\n        }\n\n        const fd = new FormData();\n        fd.append(\"license\", files[0]);\n        this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\n          return this.finalizePremium();\n        });\n      } else {\n        this.formPromise = this.paymentComponent\n          .createPaymentToken()\n          .then((result) => {\n            const fd = new FormData();\n            fd.append(\"paymentMethodType\", result[1].toString());\n            if (result[0] != null) {\n              fd.append(\"paymentToken\", result[0]);\n            }\n            fd.append(\"additionalStorageGb\", (this.additionalStorage || 0).toString());\n            fd.append(\"country\", this.taxInfoComponent.taxInfo.country);\n            fd.append(\"postalCode\", this.taxInfoComponent.taxInfo.postalCode);\n            return this.apiService.postPremium(fd);\n          })\n          .then((paymentResponse) => {\n            if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\n              return this.paymentComponent.handleStripeCardPayment(\n                paymentResponse.paymentIntentClientSecret,\n                () => this.finalizePremium()\n              );\n            } else {\n              return this.finalizePremium();\n            }\n          });\n      }\n      await this.formPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async finalizePremium() {\n    await this.apiService.refreshIdentityToken();\n    await this.syncService.fullSync(true);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"premiumUpdated\"));\n    this.messagingService.send(\"purchasedPremium\");\n    this.router.navigate([\"/settings/subscription/user-subscription\"]);\n  }\n\n  get additionalStorageTotal(): number {\n    return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\n  }\n\n  get subtotal(): number {\n    return this.premiumPrice + this.additionalStorageTotal;\n  }\n\n  get taxCharges(): number {\n    return this.taxInfoComponent != null && this.taxInfoComponent.taxRate != null\n      ? (this.taxInfoComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total(): number {\n    return this.subtotal + this.taxCharges || 0;\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\" *ngIf=\"!selfHosted\">\n  <ul class=\"nav nav-tabs\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [routerLink]=\"subscriptionRoute\" routerLinkActive=\"active\">\n        {{ \"subscription\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"payment-method\" routerLinkActive=\"active\">\n        {{ \"paymentMethod\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"billing-history\" routerLinkActive=\"active\">\n        {{ \"billingHistory\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-subscription\",\n  templateUrl: \"subscription.component.html\",\n})\nexport class SubscriptionComponent {\n  hasPremium: boolean;\n  selfHosted: boolean;\n\n  constructor(\n    private stateService: StateService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.hasPremium = await this.stateService.getHasPremiumPersonally();\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  get subscriptionRoute(): string {\n    return this.hasPremium ? \"user-subscription\" : \"premium\";\n  }\n}\n","<div class=\"tabbed-header d-flex\">\n  <h1>\n    {{ \"billingHistory\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ \"invoices\" | i18n }}</h2>\n  <p *ngIf=\"!invoices || !invoices.length\">{{ \"noInvoices\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n    <tbody>\n      <tr *ngFor=\"let i of invoices\">\n        <td>{{ i.date | date: \"mediumDate\" }}</td>\n        <td>\n          <a\n            href=\"{{ i.pdfUrl }}\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            class=\"mr-2\"\n            appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n          >\n            <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n          ></a>\n          <a href=\"{{ i.url }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ 'viewInvoice' | i18n }}\">\n            {{ \"invoiceNumber\" | i18n: i.number }}</a\n          >\n        </td>\n        <td>{{ i.amount | currency: \"$\" }}</td>\n        <td>\n          <span *ngIf=\"i.paid\">\n            <i class=\"bwi bwi-check text-success\" aria-hidden=\"true\"></i>\n            {{ \"paid\" | i18n }}\n          </span>\n          <span *ngIf=\"!i.paid\">\n            <i class=\"bwi bwi-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n            {{ \"unpaid\" | i18n }}\n          </span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <h2 class=\"spaced-header\">{{ \"transactions\" | i18n }}</h2>\n  <p *ngIf=\"!transactions || !transactions.length\">{{ \"noTransactions\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n    <tbody>\n      <tr *ngFor=\"let t of transactions\">\n        <td>{{ t.createdDate | date: \"mediumDate\" }}</td>\n        <td>\n          <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n            {{ \"chargeNoun\" | i18n }}\n          </span>\n          <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n        </td>\n        <td>\n          <i\n            class=\"bwi bwi-fw\"\n            *ngIf=\"t.paymentMethodType\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-credit-card': t.paymentMethodType === paymentMethodType.Card,\n              'bwi-bank':\n                t.paymentMethodType === paymentMethodType.BankAccount ||\n                t.paymentMethodType === paymentMethodType.WireTransfer,\n              'bwi-bitcoin text-warning': t.paymentMethodType === paymentMethodType.BitPay,\n              'bwi-paypal text-primary': t.paymentMethodType === paymentMethodType.PayPal\n            }\"\n          ></i>\n          {{ t.details }}\n        </td>\n        <td\n          [ngClass]=\"{ 'text-strike': t.refunded }\"\n          title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n        >\n          {{ t.amount | currency: \"$\" }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <small class=\"text-muted\">* {{ \"chargesStatement\" | i18n: \"BITWARDEN\" }}</small>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { TransactionType } from \"@bitwarden/common/enums/transactionType\";\nimport { BillingHistoryResponse } from \"@bitwarden/common/models/response/billingHistoryResponse\";\n\n@Component({\n  selector: \"app-user-billing\",\n  templateUrl: \"user-billing-history.component.html\",\n})\nexport class UserBillingHistoryComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  billing: BillingHistoryResponse;\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    if (this.platformUtilsService.isSelfHost()) {\n      this.router.navigate([\"/settings/subscription\"]);\n    }\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    this.billing = await this.apiService.getUserBillingHistory();\n    this.loading = false;\n  }\n\n  get invoices() {\n    return this.billing != null ? this.billing.invoices : null;\n  }\n\n  get transactions() {\n    return this.billing != null ? this.billing.transactions : null;\n  }\n}\n","<div\n  [ngClass]=\"{\n    'page-header': selfHosted,\n    'tabbed-header': !selfHosted\n  }\"\n>\n  <h1>\n    {{ title }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"sub\">\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</bit-callout\n  >\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      bitButton\n      type=\"button\"\n      buttonType=\"secondary\"\n      #reinstateBtn\n      class=\"btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"reinstateBtn.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </bit-callout>\n  <dl *ngIf=\"selfHosted\">\n    <dt>{{ \"expiration\" | i18n }}</dt>\n    <dd *ngIf=\"sub.expiration\">{{ sub.expiration | date: \"mediumDate\" }}</dd>\n    <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n  </dl>\n  <div class=\"row\" *ngIf=\"!selfHosted\">\n    <div class=\"col-4\">\n      <dl>\n        <dt>{{ \"status\" | i18n }}</dt>\n        <dd>\n          <span class=\"text-capitalize\">{{ (subscription && subscription.status) || \"-\" }}</span>\n          <span bitBadge badgeType=\"warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n            \"pendingCancellation\" | i18n\n          }}</span>\n        </dd>\n        <dt>{{ \"nextCharge\" | i18n }}</dt>\n        <dd>\n          {{\n            nextInvoice\n              ? (nextInvoice.date | date: \"mediumDate\") +\n                \", \" +\n                (nextInvoice.amount | currency: \"$\")\n              : \"-\"\n          }}\n        </dd>\n      </dl>\n    </div>\n    <div class=\"col-8\" *ngIf=\"subscription\">\n      <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n      <table class=\"table\">\n        <tbody>\n          <tr *ngFor=\"let i of subscription.items\">\n            <td>\n              {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n              {{ i.amount | currency: \"$\" }}\n            </td>\n            <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <ng-container *ngIf=\"selfHosted\">\n    <div>\n      <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        bitButton\n        buttonType=\"secondary\"\n        href=\"https://vault.bitwarden.com/#/settings/subscription\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        >\n        </app-update-license>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"d-flex\">\n      <button\n        bitButton\n        type=\"button\"\n        buttonType=\"secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"!subscription || !subscription.cancelled\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        bitButton\n        #cancelBtn\n        type=\"button\"\n        buttonType=\"danger\"\n        class=\"btn-submit tw-ml-auto\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"cancelBtn.loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            bitButton\n            type=\"button\"\n            buttonType=\"secondary\"\n            class=\"tw-ml-1\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"4\"\n          [add]=\"adjustStorageAdd\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SubscriptionResponse } from \"@bitwarden/common/models/response/subscriptionResponse\";\n\n@Component({\n  selector: \"app-user-subscription\",\n  templateUrl: \"user-subscription.component.html\",\n})\nexport class UserSubscriptionComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  sub: SubscriptionResponse;\n  selfHosted = false;\n\n  cancelPromise: Promise<any>;\n  reinstatePromise: Promise<any>;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private router: Router,\n    private logService: LogService,\n    private fileDownloadService: FileDownloadService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.stateService.getHasPremiumPersonally()) {\n      this.loading = true;\n      this.sub = await this.apiService.getUserSubscription();\n    } else {\n      this.router.navigate([\"/settings/subscription/premium\"]);\n      return;\n    }\n\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.apiService.postReinstatePremium();\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.apiService.postCancelPremium();\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  downloadLicense() {\n    if (this.loading) {\n      return;\n    }\n\n    const licenseString = JSON.stringify(this.sub.license, null, 2);\n    this.fileDownloadService.download({\n      fileName: \"bitwarden_premium_license.json\",\n      blobData: licenseString,\n    });\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(load: boolean) {\n    this.showUpdateLicense = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  adjustStorage(add: boolean) {\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(add ? \"addStorage\" : \"removeStorage\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get usingInAppPurchase() {\n    return this.sub != null ? this.sub.usingInAppPurchase : false;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.selfHosted ? \"subscription\" : \"premiumMembership\");\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { PaymentMethodComponent } from \"./payment-method.component\";\nimport { PremiumComponent } from \"./premium.component\";\nimport { SubscriptionComponent } from \"./subscription.component\";\nimport { UserBillingHistoryComponent } from \"./user-billing-history.component\";\nimport { UserSubscriptionComponent } from \"./user-subscription.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SubscriptionComponent,\n    data: { titleId: \"subscription\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"premium\" },\n      {\n        path: \"user-subscription\",\n        component: UserSubscriptionComponent,\n        data: { titleId: \"premiumMembership\" },\n      },\n      {\n        path: \"premium\",\n        component: PremiumComponent,\n        data: { titleId: \"goPremium\" },\n      },\n      {\n        path: \"payment-method\",\n        component: PaymentMethodComponent,\n        data: { titleId: \"paymentMethod\" },\n      },\n      {\n        path: \"billing-history\",\n        component: UserBillingHistoryComponent,\n        data: { titleId: \"billingHistory\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SubscriptionRoutingModule {}\n","export abstract class UsernameGenerationService {\n  generateUsername: (options: any) => Promise<string>;\n  generateWord: (options: any) => Promise<string>;\n  generateSubaddress: (options: any) => Promise<string>;\n  generateCatchall: (options: any) => Promise<string>;\n  generateForwarded: (options: any) => Promise<string>;\n  getOptions: () => Promise<any>;\n  saveOptions: (options: any) => Promise<void>;\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { PasswordGeneratorPolicyOptions } from \"@bitwarden/common/models/domain/passwordGeneratorPolicyOptions\";\n\n@Directive()\nexport class GeneratorComponent implements OnInit {\n  @Input() comingFromAddEdit = false;\n  @Input() type: string;\n  @Output() onSelected = new EventEmitter<string>();\n\n  usernameGeneratingPromise: Promise<string>;\n  typeOptions: any[];\n  passTypeOptions: any[];\n  usernameTypeOptions: any[];\n  subaddressOptions: any[];\n  catchallOptions: any[];\n  forwardOptions: any[];\n  usernameOptions: any = {};\n  passwordOptions: any = {};\n  username = \"-\";\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPasswordPolicyOptions: PasswordGeneratorPolicyOptions;\n  usernameWebsite: string = null;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected usernameGenerationService: UsernameGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected stateService: StateService,\n    protected i18nService: I18nService,\n    protected logService: LogService,\n    protected route: ActivatedRoute,\n    private win: Window\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"username\"), value: \"username\" },\n    ];\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n    this.usernameTypeOptions = [\n      {\n        name: i18nService.t(\"plusAddressedEmail\"),\n        value: \"subaddress\",\n        desc: i18nService.t(\"plusAddressedEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"catchallEmail\"),\n        value: \"catchall\",\n        desc: i18nService.t(\"catchallEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"forwardedEmail\"),\n        value: \"forwarded\",\n        desc: i18nService.t(\"forwardedEmailDesc\"),\n      },\n      { name: i18nService.t(\"randomWord\"), value: \"word\" },\n    ];\n    this.subaddressOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.catchallOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.forwardOptions = [\n      { name: \"SimpleLogin\", value: \"simplelogin\" },\n      { name: \"AnonAddy\", value: \"anonaddy\" },\n      { name: \"Firefox Relay\", value: \"firefoxrelay\" },\n      // { name: \"FastMail\", value: \"fastmail\" },\n    ];\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const passwordOptionsResponse = await this.passwordGenerationService.getOptions();\n      this.passwordOptions = passwordOptionsResponse[0];\n      this.enforcedPasswordPolicyOptions = passwordOptionsResponse[1];\n      this.avoidAmbiguous = !this.passwordOptions.ambiguous;\n      this.passwordOptions.type =\n        this.passwordOptions.type === \"passphrase\" ? \"passphrase\" : \"password\";\n\n      this.usernameOptions = await this.usernameGenerationService.getOptions();\n      if (this.usernameOptions.type == null) {\n        this.usernameOptions.type = \"word\";\n      }\n      if (\n        this.usernameOptions.subaddressEmail == null ||\n        this.usernameOptions.subaddressEmail === \"\"\n      ) {\n        this.usernameOptions.subaddressEmail = await this.stateService.getEmail();\n      }\n      if (this.usernameWebsite == null) {\n        this.usernameOptions.subaddressType = this.usernameOptions.catchallType = \"random\";\n      } else {\n        this.usernameOptions.website = this.usernameWebsite;\n        const websiteOption = { name: this.i18nService.t(\"websiteName\"), value: \"website-name\" };\n        this.subaddressOptions.push(websiteOption);\n        this.catchallOptions.push(websiteOption);\n      }\n\n      if (this.type !== \"username\" && this.type !== \"password\") {\n        if (qParams.type === \"username\" || qParams.type === \"password\") {\n          this.type = qParams.type;\n        } else {\n          const generatorOptions = await this.stateService.getGeneratorOptions();\n          this.type = generatorOptions?.type ?? \"password\";\n        }\n      }\n      if (this.regenerateWithoutButtonPress()) {\n        await this.regenerate();\n      }\n    });\n  }\n\n  async typeChanged() {\n    await this.stateService.setGeneratorOptions({ type: this.type });\n    if (this.regenerateWithoutButtonPress()) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    if (this.type === \"password\") {\n      await this.regeneratePassword();\n    } else if (this.type === \"username\") {\n      await this.regenerateUsername();\n    }\n  }\n\n  async sliderChanged() {\n    this.savePasswordOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizePasswordOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n  }\n\n  async savePasswordOptions(regenerate = true) {\n    this.normalizePasswordOptions();\n    await this.passwordGenerationService.saveOptions(this.passwordOptions);\n\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regeneratePassword();\n    }\n  }\n\n  async saveUsernameOptions(regenerate = true) {\n    await this.usernameGenerationService.saveOptions(this.usernameOptions);\n    if (this.usernameOptions.type === \"forwarded\") {\n      this.username = \"-\";\n    }\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regenerateUsername();\n    }\n  }\n\n  async regeneratePassword() {\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  regenerateUsername() {\n    return this.generateUsername();\n  }\n\n  async generateUsername() {\n    try {\n      this.usernameGeneratingPromise = this.usernameGenerationService.generateUsername(\n        this.usernameOptions\n      );\n      this.username = await this.usernameGeneratingPromise;\n      if (this.username === \"\" || this.username === null) {\n        this.username = \"-\";\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  copy() {\n    const password = this.type === \"password\";\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(\n      password ? this.password : this.username,\n      copyOptions\n    );\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(password ? \"password\" : \"username\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.type === \"password\" ? this.password : this.username);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  regenerateWithoutButtonPress() {\n    return this.type !== \"username\" || this.usernameOptions.type !== \"forwarded\";\n  }\n\n  private normalizePasswordOptions() {\n    // Application level normalize options depedent on class variables\n    this.passwordOptions.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.passwordOptions.uppercase &&\n      !this.passwordOptions.lowercase &&\n      !this.passwordOptions.number &&\n      !this.passwordOptions.special\n    ) {\n      this.passwordOptions.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(\n      this.passwordOptions,\n      this.enforcedPasswordPolicyOptions\n    );\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { GeneratedPasswordHistory } from \"@bitwarden/common/models/domain/generatedPasswordHistory\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: \"colorPassword\" })\nexport class ColorPasswordPipe implements PipeTransform {\n  transform(password: string) {\n    const template = (character: string, type: string) =>\n      `<span class=\"password-${type}\">${character}</span>`;\n    const colorizedPassword = this.generateTemplate(password, template);\n    return colorizedPassword;\n  }\n\n  protected generateTemplate(\n    password: string,\n    templateGenerator: (chararacter: string, type: string, index?: number) => string\n  ) {\n    // Convert to an array to handle cases that stings have special characters, ie: emoji.\n    const passwordArray = Array.from(password);\n    let colorizedPassword = \"\";\n    for (let i = 0; i < passwordArray.length; i++) {\n      let character = passwordArray[i];\n      let isSpecial = false;\n      // Sanitize HTML first.\n      switch (character) {\n        case \"&\":\n          character = \"&amp;\";\n          isSpecial = true;\n          break;\n        case \"<\":\n          character = \"&lt;\";\n          isSpecial = true;\n          break;\n        case \">\":\n          character = \"&gt;\";\n          isSpecial = true;\n          break;\n        case \" \":\n          character = \"&nbsp;\";\n          isSpecial = true;\n          break;\n        default:\n          break;\n      }\n      let type = \"letter\";\n      if (character.match(Utils.regexpEmojiPresentation)) {\n        type = \"emoji\";\n      } else if (isSpecial || character.match(/[^\\w ]/)) {\n        type = \"special\";\n      } else if (character.match(/\\d/)) {\n        type = \"number\";\n      }\n      colorizedPassword += templateGenerator(character, type, i);\n    }\n    return colorizedPassword;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"passHistoryTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"passHistoryTitle\">{{ \"passwordHistory\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"history.length\">\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item d-flex\" *ngFor=\"let h of history\">\n            <div class=\"password-row\">\n              <div\n                class=\"text-monospace generated-wrapper\"\n                [innerHTML]=\"h.password | colorPassword\"\n                appSelectCopy\n              ></div>\n              <small class=\"text-muted\">{{ h.date | date: \"medium\" }}</small>\n            </div>\n            <div class=\"ml-auto\">\n              <button\n                class=\"btn btn-link\"\n                appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                (click)=\"copy(h.password)\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!history.length\">\n        {{ \"noPasswordsInList\" | i18n }}\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"clear()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'clear' | i18n }}\"\n          >\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"@bitwarden/angular/components/password-generator-history.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"generator\" | i18n }}</h1>\n</div>\n<app-callout type=\"info\" *ngIf=\"enforcedPasswordPolicyOptions?.inEffect() && type === 'password'\">\n  {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n</app-callout>\n<div class=\"card card-generated bg-light my-4\">\n  <div class=\"card-body\">\n    <div\n      *ngIf=\"type === 'password'\"\n      class=\"generated-wrapper\"\n      [innerHTML]=\"password | colorPassword\"\n      appSelectCopy\n    ></div>\n    <div\n      *ngIf=\"type === 'username'\"\n      class=\"generated-wrapper\"\n      [innerHTML]=\"username | colorPassword\"\n      appSelectCopy\n    ></div>\n  </div>\n</div>\n<div class=\"form-group\" role=\"radiogroup\" aria-labelledby=\"typeHeading\">\n  <label id=\"typeHeading\" class=\"d-block\">{{ \"whatWouldYouLikeToGenerate\" | i18n }}</label>\n  <div class=\"form-check form-check-inline\" *ngFor=\"let o of typeOptions\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      [(ngModel)]=\"type\"\n      name=\"Type\"\n      id=\"type_{{ o.value }}\"\n      [value]=\"o.value\"\n      (change)=\"typeChanged()\"\n      [checked]=\"type === o.value\"\n    />\n    <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n      {{ o.name }}\n    </label>\n  </div>\n</div>\n<ng-container *ngIf=\"type === 'password'\">\n  <div aria-labelledby=\"passwordTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <label id=\"passwordTypeHeading\" class=\"d-block\">{{ \"passwordType\" | i18n }}</label>\n    <div class=\"form-check form-check-inline\" *ngFor=\"let o of passTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"passwordOptions.type\"\n        name=\"PasswordType\"\n        id=\"passwordType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"savePasswordOptions()\"\n        [checked]=\"passwordOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"passwordType_{{ o.value }}\">\n        {{ o.name }}\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"passwordOptions.type === 'passphrase'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n        <input\n          id=\"num-words\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"3\"\n          max=\"20\"\n          [(ngModel)]=\"passwordOptions.numWords\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n        <input\n          id=\"word-separator\"\n          class=\"form-control\"\n          type=\"text\"\n          maxlength=\"1\"\n          [(ngModel)]=\"passwordOptions.wordSeparator\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"capitalize\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.capitalize\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.capitalize\"\n        />\n        <label for=\"capitalize\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"include-number\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.includeNumber\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.includeNumber\"\n        />\n        <label for=\"include-number\" class=\"form-check-label\">{{ \"includeNumber\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"passwordOptions.type === 'password'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"length\">{{ \"length\" | i18n }}</label>\n        <input\n          id=\"length\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"5\"\n          max=\"128\"\n          [(ngModel)]=\"passwordOptions.length\"\n          (blur)=\"savePasswordOptions()\"\n          (change)=\"lengthChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n        <input\n          id=\"min-number\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minNumber\"\n          (change)=\"minNumberChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n        <input\n          id=\"min-special\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minSpecial\"\n          (change)=\"minSpecialChanged()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"uppercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.uppercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useUppercase\"\n          attr.aria-label=\"{{ 'uppercase' | i18n }}\"\n        />\n        <label for=\"uppercase\" class=\"form-check-label\">A-Z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"lowercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.lowercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useLowercase\"\n          attr.aria-label=\"{{ 'lowercase' | i18n }}\"\n        />\n        <label for=\"lowercase\" class=\"form-check-label\">a-z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"numbers\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.number\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useNumbers\"\n          attr.aria-label=\"{{ 'numbers' | i18n }}\"\n        />\n        <label for=\"numbers\" class=\"form-check-label\">0-9</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"special\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.special\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useSpecial\"\n          attr.aria-label=\"{{ 'specialCharacters' | i18n }}\"\n        />\n        <label for=\"special\" class=\"form-check-label\">!@#$%^&amp;*</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"ambiguous\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"avoidAmbiguous\"\n        />\n        <label for=\"ambiguous\" class=\"form-check-label\">{{ \"ambiguous\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"d-flex\">\n    <div>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\">\n        {{ \"regeneratePassword\" | i18n }}\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n        {{ \"copyPassword\" | i18n }}\n      </button>\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"history()\"\n        appA11yTitle=\"{{ 'passwordHistory' | i18n }}\"\n      >\n        <i class=\"bwi bwi-clock bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'username'\">\n  <div aria-labelledby=\"usernameTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <div class=\"d-block\">\n      <label id=\"usernameTypeHeading\">{{ \"usernameType\" | i18n }}</label>\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/generator/#username-types\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"form-check\" *ngFor=\"let o of usernameTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"usernameOptions.type\"\n        name=\"UsernameType\"\n        id=\"usernameType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"saveUsernameOptions()\"\n        [checked]=\"usernameOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"usernameType_{{ o.value }}\">\n        {{ o.name }}\n        <div class=\"small text-muted\">{{ o.desc }}</div>\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'forwarded'\">\n    <div class=\"form-group\">\n      <label class=\"d-block\">{{ \"service\" | i18n }}</label>\n      <div class=\"form-check\" *ngFor=\"let o of forwardOptions\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          [(ngModel)]=\"usernameOptions.forwardedService\"\n          name=\"ForwardType\"\n          id=\"forwardtype_{{ o.value }}\"\n          [value]=\"o.value\"\n          (change)=\"saveUsernameOptions()\"\n          [checked]=\"usernameOptions.forwardedService === o.value\"\n        />\n        <label class=\"form-check-label\" for=\"forwardtype_{{ o.value }}\">\n          {{ o.name }}\n        </label>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'simplelogin'\">\n      <div class=\"form-group col-4\">\n        <label for=\"simplelogin-apikey\">{{ \"apiKey\" | i18n }}</label>\n        <input\n          id=\"simplelogin-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedSimpleLoginApiKey\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'anonaddy'\">\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"anonaddy-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-domain\">{{ \"domainName\" | i18n }}</label>\n        <input\n          id=\"anonaddy-domain\"\n          class=\"form-control\"\n          type=\"text\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyDomain\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'firefoxrelay'\">\n      <div class=\"form-group col-4\">\n        <label for=\"firefox-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"firefox-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedFirefoxApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'subaddress'\">\n    <div class=\"form-group col-4\">\n      <label for=\"subaddress-email\">{{ \"emailAddress\" | i18n }}</label>\n      <input\n        id=\"subaddress-email\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.subaddressEmail\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'catchall'\">\n    <div class=\"form-group col-4\">\n      <label for=\"catchall-domain\">{{ \"domainName\" | i18n }}</label>\n      <input\n        id=\"catchall-domain\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.catchallDomain\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'word'\">\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            id=\"capitalizeUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordCapitalize\"\n          />\n          <label for=\"capitalizeUsername\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n        </div>\n        <div class=\"form-check\">\n          <input\n            id=\"includeNumberUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordIncludeNumber\"\n          />\n          <label for=\"includeNumberUsername\" class=\"form-check-label\">{{\n            \"includeNumber\" | i18n\n          }}</label>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <div #form [appApiAction]=\"usernameGeneratingPromise\">\n    <button\n      type=\"button\"\n      class=\"btn btn-submit btn-primary\"\n      (click)=\"regenerate()\"\n      [disabled]=\"form.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"regenerateUsername\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n      {{ \"copyUsername\" | i18n }}\n    </button>\n  </div>\n</ng-container>\n<ng-template #historyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { GeneratorComponent as BaseGeneratorComponent } from \"@bitwarden/angular/components/generator.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\n\nimport { PasswordGeneratorHistoryComponent } from \"./password-generator-history.component\";\n\n@Component({\n  selector: \"app-generator\",\n  templateUrl: \"generator.component.html\",\n})\nexport class GeneratorComponent extends BaseGeneratorComponent {\n  @ViewChild(\"historyTemplate\", { read: ViewContainerRef, static: true })\n  historyModalRef: ViewContainerRef;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    usernameGenerationService: UsernameGenerationService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService,\n    route: ActivatedRoute,\n    private modalService: ModalService\n  ) {\n    super(\n      passwordGenerationService,\n      usernameGenerationService,\n      platformUtilsService,\n      stateService,\n      i18nService,\n      logService,\n      route,\n      window\n    );\n    if (platformUtilsService.isSelfHost()) {\n      // Cannot use Firefox Relay on self hosted web vaults due to CORS issues with Firefox Relay API\n      this.forwardOptions.splice(\n        this.forwardOptions.findIndex((o) => o.value === \"firefoxrelay\"),\n        1\n      );\n    }\n  }\n\n  async history() {\n    await this.modalService.openViewRef(PasswordGeneratorHistoryComponent, this.historyModalRef);\n  }\n\n  lengthChanged() {\n    document.getElementById(\"length\").focus();\n  }\n\n  minNumberChanged() {\n    document.getElementById(\"min-number\").focus();\n  }\n\n  minSpecialChanged() {\n    document.getElementById(\"min-special\").focus();\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-tools\",\n  templateUrl: \"tools.component.html\",\n})\nexport class ToolsComponent implements OnInit {\n  canAccessPremium = false;\n\n  constructor(private stateService: StateService, private messagingService: MessagingService) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card mb-4\">\n        <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"generator\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"generator\" | i18n }}\n          </a>\n          <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"importData\" | i18n }}\n          </a>\n          <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"exportVault\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { Route, RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { LockGuard } from \"@bitwarden/angular/guards/lock.guard\";\nimport { UnauthGuard } from \"@bitwarden/angular/guards/unauth.guard\";\n\nimport { flagEnabled, FlagName } from \"../utils/flags\";\n\nimport { AcceptEmergencyComponent } from \"./accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"./accounts/accept-organization.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RecoverDeleteComponent } from \"./accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"./accounts/recover-two-factor.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"./accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"./accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"./accounts/verify-recover-delete.component\";\nimport { HomeGuard } from \"./guards/home.guard\";\nimport { FrontendLayoutComponent } from \"./layouts/frontend-layout.component\";\nimport { UserLayoutComponent } from \"./layouts/user-layout.component\";\nimport { TrialInitiationComponent } from \"./modules/trial-initiation/trial-initiation.component\";\nimport { IndividualVaultModule } from \"./modules/vault/modules/individual-vault/individual-vault.module\";\nimport { OrganizationsRoutingModule } from \"./organizations/organization-routing.module\";\nimport { AcceptFamilySponsorshipComponent } from \"./organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"./organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ReportsRoutingModule } from \"./reports/reports-routing.module\";\nimport { AccessComponent } from \"./send/access.component\";\nimport { SendComponent } from \"./send/send.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { CreateOrganizationComponent } from \"./settings/create-organization.component\";\nimport { DomainRulesComponent } from \"./settings/domain-rules.component\";\nimport { EmergencyAccessViewComponent } from \"./settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"./settings/emergency-access.component\";\nimport { PreferencesComponent } from \"./settings/preferences.component\";\nimport { SecurityRoutingModule } from \"./settings/security-routing.module\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"./settings/sponsored-families.component\";\nimport { SubscriptionRoutingModule } from \"./settings/subscription-routing.module\";\nimport { GeneratorComponent } from \"./tools/generator.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    data: { doNotSaveUrl: true },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        children: [], // Children lets us have an empty component.\n        canActivate: [HomeGuard], // Redirects either to vault, login or lock page.\n      },\n      { path: \"login\", component: LoginComponent, canActivate: [UnauthGuard] },\n      { path: \"2fa\", component: TwoFactorComponent, canActivate: [UnauthGuard] },\n      {\n        path: \"register\",\n        component: RegisterComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"createAccount\" },\n      },\n      buildFlaggedRoute(\"showTrial\", {\n        path: \"trial\",\n        component: TrialInitiationComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"startTrial\" },\n      }),\n      {\n        path: \"sso\",\n        component: SsoComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"enterpriseSingleSignOn\" },\n      },\n      {\n        path: \"set-password\",\n        component: SetPasswordComponent,\n        data: { titleId: \"setMasterPassword\" },\n      },\n      {\n        path: \"hint\",\n        component: HintComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"passwordHint\" },\n      },\n      {\n        path: \"lock\",\n        component: LockComponent,\n        canActivate: [LockGuard],\n      },\n      { path: \"verify-email\", component: VerifyEmailTokenComponent },\n      {\n        path: \"accept-organization\",\n        component: AcceptOrganizationComponent,\n        data: { titleId: \"joinOrganization\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-emergency\",\n        component: AcceptEmergencyComponent,\n        data: { titleId: \"acceptEmergency\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-families-for-enterprise\",\n        component: AcceptFamilySponsorshipComponent,\n        data: { titleId: \"acceptFamilySponsorship\", doNotSaveUrl: false },\n      },\n      { path: \"recover\", pathMatch: \"full\", redirectTo: \"recover-2fa\" },\n      {\n        path: \"recover-2fa\",\n        component: RecoverTwoFactorComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"recoverAccountTwoStep\" },\n      },\n      {\n        path: \"recover-delete\",\n        component: RecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"verify-recover-delete\",\n        component: VerifyRecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"send/:sendId/:key\",\n        component: AccessComponent,\n        data: { title: \"Bitwarden Send\" },\n      },\n      {\n        path: \"update-temp-password\",\n        component: UpdateTempPasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updateTempPassword\" },\n      },\n      {\n        path: \"update-password\",\n        component: UpdatePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updatePassword\" },\n      },\n      {\n        path: \"remove-password\",\n        component: RemovePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"removeMasterPassword\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    component: UserLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"vault\",\n        loadChildren: () => IndividualVaultModule,\n      },\n      { path: \"sends\", component: SendComponent, data: { title: \"Send\" } },\n      {\n        path: \"create-organization\",\n        component: CreateOrganizationComponent,\n        data: { titleId: \"newOrganization\" },\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: AccountComponent, data: { titleId: \"myAccount\" } },\n          {\n            path: \"preferences\",\n            component: PreferencesComponent,\n            data: { titleId: \"preferences\" },\n          },\n          {\n            path: \"security\",\n            loadChildren: () => SecurityRoutingModule,\n          },\n          {\n            path: \"domain-rules\",\n            component: DomainRulesComponent,\n            data: { titleId: \"domainRules\" },\n          },\n          {\n            path: \"subscription\",\n            loadChildren: () => SubscriptionRoutingModule,\n          },\n          {\n            path: \"emergency-access\",\n            children: [\n              {\n                path: \"\",\n                component: EmergencyAccessComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n              {\n                path: \":id\",\n                component: EmergencyAccessViewComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n            ],\n          },\n          {\n            path: \"sponsored-families\",\n            component: SponsoredFamiliesComponent,\n            data: { titleId: \"sponsoredFamilies\" },\n          },\n        ],\n      },\n      {\n        path: \"tools\",\n        component: ToolsComponent,\n        canActivate: [AuthGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"generator\" },\n          {\n            path: \"\",\n            loadChildren: () =>\n              import(\"./tools/import-export/import-export.module\").then(\n                (m) => m.ImportExportModule\n              ),\n          },\n          {\n            path: \"generator\",\n            component: GeneratorComponent,\n            data: { titleId: \"generator\" },\n          },\n        ],\n      },\n      {\n        path: \"reports\",\n        loadChildren: () => ReportsRoutingModule,\n      },\n      { path: \"setup/families-for-enterprise\", component: FamiliesForEnterpriseSetupComponent },\n    ],\n  },\n  {\n    path: \"organizations\",\n    loadChildren: () => OrganizationsRoutingModule,\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      paramsInheritanceStrategy: \"always\",\n      // enableTracing: true,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class OssRoutingModule {}\n\nexport function buildFlaggedRoute(flagName: FlagName, route: Route): Route {\n  return flagEnabled(flagName)\n    ? route\n    : {\n        path: route.path,\n        redirectTo: \"/\",\n      };\n}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared.module\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule],\n  declarations: [EntityUsersComponent],\n  exports: [EntityUsersComponent],\n})\nexport class OrganizationManageModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule } from \"../../loose-components.module\";\nimport { SharedModule } from \"../../shared.module\";\n\nimport { EnrollMasterPasswordReset } from \"./enroll-master-password-reset.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule, LooseComponentsModule],\n  declarations: [EnrollMasterPasswordReset],\n  exports: [EnrollMasterPasswordReset],\n})\nexport class OrganizationUserModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared.module\";\n\nimport { VerticalStepContentComponent } from \"./vertical-step-content.component\";\nimport { VerticalStep } from \"./vertical-step.component\";\nimport { VerticalStepperComponent } from \"./vertical-stepper.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [VerticalStepperComponent, VerticalStep, VerticalStepContentComponent],\n  exports: [VerticalStepperComponent, VerticalStep],\n})\nexport class VerticalStepperModule {}\n","import { CdkStepperModule } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { FormFieldModule } from \"@bitwarden/components\";\n\nimport { OrganizationCreateModule } from \"../organizations/create/organization-create.module\";\nimport { RegisterFormModule } from \"../register-form/register-form.module\";\nimport { SharedModule } from \"../shared.module\";\nimport { VerticalStepperModule } from \"../vertical-stepper/vertical-stepper.module\";\n\nimport { EnterpriseContentComponent } from \"./enterprise-content.component\";\nimport { FamiliesContentComponent } from \"./families-content.component\";\nimport { TeamsContentComponent } from \"./teams-content.component\";\nimport { TrialInitiationComponent } from \"./trial-initiation.component\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    CdkStepperModule,\n    VerticalStepperModule,\n    FormFieldModule,\n    RegisterFormModule,\n    OrganizationCreateModule,\n  ],\n  declarations: [\n    TrialInitiationComponent,\n    EnterpriseContentComponent,\n    FamiliesContentComponent,\n    TeamsContentComponent,\n  ],\n  exports: [TrialInitiationComponent],\n  providers: [TitleCasePipe],\n})\nexport class TrialInitiationModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule } from \"./modules/loose-components.module\";\nimport { OrganizationCreateModule } from \"./modules/organizations/create/organization-create.module\";\nimport { OrganizationManageModule } from \"./modules/organizations/manage/organization-manage.module\";\nimport { OrganizationUserModule } from \"./modules/organizations/users/organization-user.module\";\nimport { PipesModule } from \"./modules/pipes/pipes.module\";\nimport { SharedModule } from \"./modules/shared.module\";\nimport { TrialInitiationModule } from \"./modules/trial-initiation/trial-initiation.module\";\nimport { VaultFilterModule } from \"./modules/vault-filter/vault-filter.module\";\nimport { OrganizationBadgeModule } from \"./modules/vault/modules/organization-badge/organization-badge.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    PipesModule,\n    OrganizationManageModule,\n    OrganizationUserModule,\n    OrganizationCreateModule,\n  ],\n  exports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    PipesModule,\n  ],\n  bootstrap: [],\n})\nexport class OssModule {}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport class ThemeBuilder implements Theme {\n  get effectiveTheme(): ThemeType {\n    return this.configuredTheme != ThemeType.System ? this.configuredTheme : this.systemTheme;\n  }\n\n  constructor(readonly configuredTheme: ThemeType, readonly systemTheme: ThemeType) {}\n\n  updateSystemTheme(systemTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(this.configuredTheme, systemTheme);\n  }\n\n  updateConfiguredTheme(configuredTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(configuredTheme, this.systemTheme);\n  }\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Five = 5, // Migrate to new storage of encrypted organization keys\n  Latest = Five,\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","import { DOCUMENT } from \"@angular/common\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, filter, fromEvent, Observable } from \"rxjs\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { WINDOW } from \"../jslib-services.module\";\n\nimport { Theme } from \"./theme\";\nimport { ThemeBuilder } from \"./themeBuilder\";\nimport { AbstractThemingService } from \"./theming.service.abstraction\";\n\n@Injectable()\nexport class ThemingService implements AbstractThemingService {\n  private _theme = new BehaviorSubject<ThemeBuilder | null>(null);\n  theme$: Observable<Theme> = this._theme.pipe(filter((x) => x !== null));\n\n  constructor(\n    private stateService: StateService,\n    @Inject(WINDOW) private window: Window,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.monitorThemeChanges();\n  }\n\n  async monitorThemeChanges(): Promise<void> {\n    this._theme.next(\n      new ThemeBuilder(await this.stateService.getTheme(), await this.getSystemTheme())\n    );\n    this.monitorConfiguredThemeChanges();\n    this.monitorSystemThemeChanges();\n  }\n\n  updateSystemTheme(systemTheme: ThemeType): void {\n    this._theme.next(this._theme.getValue().updateSystemTheme(systemTheme));\n  }\n\n  async updateConfiguredTheme(theme: ThemeType): Promise<void> {\n    await this.stateService.setTheme(theme);\n    this._theme.next(this._theme.getValue().updateConfiguredTheme(theme));\n  }\n\n  protected monitorConfiguredThemeChanges(): void {\n    this.theme$.subscribe((theme: Theme) => {\n      this.document.documentElement.classList.remove(\n        \"theme_\" + ThemeType.Light,\n        \"theme_\" + ThemeType.Dark,\n        \"theme_\" + ThemeType.Nord,\n        \"theme_\" + ThemeType.SolarizedDark\n      );\n      this.document.documentElement.classList.add(\"theme_\" + theme.effectiveTheme);\n    });\n  }\n\n  // We use a media match query for monitoring the system theme on web and browser, but this doesn't work for electron apps on Linux.\n  // In desktop we override these methods to track systemTheme with the electron renderer instead, which works for all OSs.\n  protected async getSystemTheme(): Promise<ThemeType> {\n    return this.window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? ThemeType.Dark\n      : ThemeType.Light;\n  }\n\n  protected monitorSystemThemeChanges(): void {\n    fromEvent<MediaQueryListEvent>(\n      this.window.matchMedia(\"(prefers-color-scheme: dark)\"),\n      \"change\"\n    ).subscribe((event) => {\n      this.updateSystemTheme(event.matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n}\n","import { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nexport abstract class AbstractEncryptService {\n  abstract encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString>;\n  abstract decryptToUtf8(encString: EncString, key: SymmetricCryptoKey): Promise<string>;\n}\n","import { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","export abstract class SettingsService {\n  clearCache: () => Promise<void>;\n  getEquivalentDomains: () => Promise<any>;\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { StorageOptions } from \"../models/domain/storageOptions\";\n\nexport abstract class AbstractStorageService {\n  abstract get<T>(key: string, options?: StorageOptions): Promise<T>;\n  abstract has(key: string, options?: StorageOptions): Promise<boolean>;\n  abstract save<T>(key: string, obj: T, options?: StorageOptions): Promise<void>;\n  abstract remove(key: string, options?: StorageOptions): Promise<void>;\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/globalState\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/globalState\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","export class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n}\n","import { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CollectionData } from \"../data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../data/eventData\";\nimport { FolderData } from \"../data/folderData\";\nimport { OrganizationData } from \"../data/organizationData\";\nimport { PolicyData } from \"../data/policyData\";\nimport { ProviderData } from \"../data/providerData\";\nimport { SendData } from \"../data/sendData\";\nimport { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { SendView } from \"../view/sendView\";\n\nimport { EncString } from \"./encString\";\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { GeneratedPasswordHistory } from \"./generatedPasswordHistory\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n  decryptedSerialized?: string;\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\n// This is a temporary structure to handle migrated `DataEncryptionPair` to\n//  avoid needing a data migration at this stage. It should be replaced with\n//  proper data migrations when `DataEncryptionPair` is deprecated.\nexport class TemporaryDataEncryption<TEncrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders? = new TemporaryDataEncryption<FolderData>();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Map<string, SymmetricCryptoKey>\n  > = new EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Map<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  legacyEtmKey?: SymmetricCryptoKey;\n  publicKey?: ArrayBuffer;\n  publicKeySerialized?: string;\n  apiKeyClientSecret?: string;\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  hasPremiumFromOrganization?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricLocked?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  enableGravitars?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: any; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n}\n\nexport class AccountTokens {\n  accessToken?: string;\n  decodedToken?: any;\n  refreshToken?: string;\n  securityStamp?: string;\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { WindowState } from \"./windowState\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string;\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n\n  constructor(protected twoFactor: TokenRequestTwoFactor, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenRequestTwoFactor) {\n    this.twoFactor = twoFactor;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    if (this.twoFactor.token && this.twoFactor.provider != null) {\n      obj.twoFactorToken = this.twoFactor.token;\n      obj.twoFactorProvider = this.twoFactor.provider;\n      obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n    }\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class ApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { BillingInvoiceResponse, BillingTransactionResponse } from \"./billingResponse\";\n\nexport class BillingHistoryResponse extends BaseResponse {\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { BillingSourceResponse } from \"./billingResponse\";\n\nexport class BillingPaymentResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class DeviceVerificationResponse extends BaseResponse {\n  isDeviceVerificationSectionEnabled: boolean;\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.isDeviceVerificationSectionEnabled = this.getResponseProperty(\n      \"IsDeviceVerificationSectionEnabled\"\n    );\n    this.unknownDeviceVerificationEnabled = this.getResponseProperty(\n      \"UnknownDeviceVerificationEnabled\"\n    );\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { GlobalDomainResponse } from \"./globalDomainResponse\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n  installationId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n    this.installationId = this.getResponseProperty(\"InstallationId\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/baseResponse\";\nimport { SsoConfigView } from \"../view/ssoConfigView\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: boolean;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationApiKeyInformationResponse extends BaseResponse {\n  keyType: OrganizationApiKeyType;\n\n  constructor(response: any) {\n    super(response);\n    this.keyType = this.getResponseProperty(\"KeyType\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"../api/billingSyncConfigApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\n/**API response config types for OrganizationConnectionResponse */\nexport type OrganizationConnectionConfigApis = BillingSyncConfigApi;\n\nexport class OrganizationConnectionResponse<\n  TConfig extends OrganizationConnectionConfigApis\n> extends BaseResponse {\n  id: string;\n  type: OrganizationConnectionType;\n  organizationId: string;\n  enabled: boolean;\n  config: TConfig;\n\n  constructor(response: any, configType: { new (response: any): TConfig }) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const rawConfig = this.getResponseProperty(\"Config\");\n    this.config = rawConfig == null ? null : new configType(rawConfig);\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keysResponse\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { PlanResponse } from \"./planResponse\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationSponsorshipSyncStatusResponse extends BaseResponse {\n  lastSyncDate?: Date;\n\n  constructor(response: any) {\n    super(response);\n    const lastSyncDate = this.getResponseProperty(\"LastSyncDate\");\n    if (lastSyncDate) {\n      this.lastSyncDate = new Date(lastSyncDate);\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { OrganizationResponse } from \"./organizationResponse\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscriptionResponse\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n    const familySponsorshipLastSyncDateString = this.getResponseProperty(\n      \"FamilySponsorshipLastSyncDate\"\n    );\n    if (familySponsorshipLastSyncDateString) {\n      this.familySponsorshipLastSyncDate = new Date(familySponsorshipLastSyncDateString);\n    }\n    const familySponsorshipValidUntilString = this.getResponseProperty(\n      \"FamilySponsorshipValidUntil\"\n    );\n    if (familySponsorshipValidUntilString) {\n      this.familySponsorshipValidUntil = new Date(familySponsorshipValidUntilString);\n    }\n    this.familySponsorshipToDelete = this.getResponseProperty(\"FamilySponsorshipToDelete\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"./profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"./profileProviderResponse\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premiumPersonally: boolean;\n  premiumFromOrganization: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premiumPersonally = this.getResponseProperty(\"Premium\");\n    this.premiumFromOrganization = this.getResponseProperty(\"PremiumFromOrganization\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../organizationUserBulkPublicKeyResponse\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissionsApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SsoPreValidateResponse extends BaseResponse {\n  token: string;\n\n  constructor(response: any) {\n    super(response);\n    this.token = this.getResponseProperty(\"Token\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionDetailsResponse } from \"./collectionResponse\";\nimport { DomainsResponse } from \"./domainsResponse\";\nimport { FolderResponse } from \"./folderResponse\";\nimport { PolicyResponse } from \"./policyResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../../models/domain/logInCredentials\";\nimport { DeviceRequest } from \"../../models/request/deviceRequest\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\nimport { KeysRequest } from \"../../models/request/keysRequest\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identityTwoFactorResponse\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult>;\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected onSuccessfulLogin(response: IdentityTokenResponse): Promise<void> {\n    // Implemented in subclass if required\n    return null;\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenRequestTwoFactor) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return new TokenRequestTwoFactor(TwoFactorProviderType.Remember, storedTwoFactorToken, false);\n    }\n\n    return new TokenRequestTwoFactor();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    await this.onSuccessfulLogin(response);\n\n    await this.stateService.setBiometricLocked(false);\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { ApiLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class ApiLogInStrategy extends LogInStrategy {\n  tokenRequest: ApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: ApiLogInCredentials) {\n    this.tokenRequest = new ApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captchaProtectedRequest\";\nimport { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { CipherView } from \"../view/cipherView\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipherWithIdRequest\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domainBase\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/loginUri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secureNote\";\nimport { SortedCiphersCache } from \"../models/domain/sortedCiphersCache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { AttachmentView } from \"../models/view/attachmentView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { PasswordHistoryView } from \"../models/view/passwordHistoryView\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    const userId = await this.stateService.getUserId();\n    if ((await this.getDecryptedCipherCache()) != null) {\n      if (\n        this.searchService != null &&\n        (this.searchService().indexedEntityId ?? userId) !== userId\n      ) {\n        await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n      }\n      return await this.getDecryptedCipherCache();\n    }\n\n    const decCiphers: CipherView[] = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: any[] = [];\n    const ciphers = await this.getAll();\n    ciphers.forEach(async (cipher) => {\n      promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.getLocaleSortingFunction());\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n            let matches: any[] = [];\n            eqDomains.forEach((eqDomain) => {\n              if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                matches = matches.concat(eqDomain);\n              }\n            });\n\n            if (!matches.length) {\n              matches.push(domain);\n            }\n\n            return matches;\n          });\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n    if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n      const decCiphers: CipherView[] = [];\n      const promises: any[] = [];\n      ciphers.data.forEach((r) => {\n        const data = new CipherData(r);\n        const cipher = new Cipher(data);\n        promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n      });\n      await Promise.all(promises);\n      decCiphers.sort(this.getLocaleSortingFunction());\n      return decCiphers;\n    } else {\n      return [];\n    }\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async saveWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.id == null) {\n      if (cipher.collectionIds != null) {\n        const request = new CipherCreateRequest(cipher);\n        response = await this.apiService.postCipherCreate(request);\n      } else {\n        const request = new CipherRequest(cipher);\n        response = await this.apiService.postCipher(request);\n      }\n      cipher.id = response.id;\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    await this.upsert(encCiphers.map((c) => c.toCipherData()));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(response, cipher.collectionIds);\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData();\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const buf = await attachmentResponse.arrayBuffer();\n    const decBuf = await this.cryptoService.decryptFromBytes(buf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","export class EncArrayBuffer {\n  constructor(public buffer: ArrayBuffer) {}\n}\n","import { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptedOrganizationKeyData } from \"../../models/data/encryptedOrganizationKeyData\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport abstract class BaseEncryptedOrganizationKey {\n  decrypt: (cryptoService: CryptoService) => Promise<SymmetricCryptoKey>;\n\n  static fromData(data: EncryptedOrganizationKeyData) {\n    switch (data.type) {\n      case \"organization\":\n        return new EncryptedOrganizationKey(data.key);\n\n      case \"provider\":\n        return new ProviderEncryptedOrganizationKey(data.key, data.providerId);\n\n      default:\n        return null;\n    }\n  }\n}\n\nexport class EncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const decValue = await cryptoService.rsaDecrypt(this.key);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"organization\",\n      key: this.key,\n    };\n  }\n}\n\nexport class ProviderEncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string, private providerId: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const providerKey = await cryptoService.getProviderKey(this.providerId);\n    const decValue = await cryptoService.decryptToBytes(new EncString(this.key), providerKey);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"provider\",\n      key: this.key,\n      providerId: this.providerId,\n    };\n  }\n}\n","import * as bigInt from \"big-integer\";\n\nimport { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EncryptedObject } from \"../models/domain/encryptedObject\";\nimport { BaseEncryptedOrganizationKey } from \"../models/domain/encryptedOrganizationKey\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private encryptService: AbstractEncryptService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[] = [],\n    providerOrgs: ProfileProviderOrganizationResponse[] = []\n  ): Promise<void> {\n    const encOrgKeyData: { [orgId: string]: EncryptedOrganizationKeyData } = {};\n\n    orgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"organization\",\n        key: org.key,\n      };\n    });\n\n    providerOrgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"provider\",\n        providerId: org.providerId,\n        key: org.key,\n      };\n    });\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(encOrgKeyData);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const result: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeyData = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeyData == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId of Object.keys(encOrgKeyData)) {\n      if (result.has(orgId)) {\n        continue;\n      }\n\n      const encOrgKey = BaseEncryptedOrganizationKey.fromData(encOrgKeyData[orgId]);\n      const decOrgKey = await encOrgKey.decrypt(this);\n      result.set(orgId, decOrgKey);\n\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(result);\n    }\n\n    return result;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    await this.stateService.setLegacyEtmKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  /**\n   * @deprecated June 22 2022: This method has been moved to encryptService.\n   * All callers should use this service to grab the relevant key and use encryptService for encryption instead.\n   * This method will be removed once all existing code has been refactored to use encryptService.\n   */\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    key = await this.getKeyForEncryption(key);\n\n    return await this.encryptService.encrypt(plainValue, key);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const iv = Utils.fromB64ToArray(encString.iv).buffer;\n    const data = Utils.fromB64ToArray(encString.data).buffer;\n    const mac = encString.mac ? Utils.fromB64ToArray(encString.mac).buffer : null;\n    const decipher = await this.aesDecryptToBytes(encString.encryptionType, data, iv, mac, key);\n    if (decipher == null) {\n      return null;\n    }\n\n    return decipher;\n  }\n\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    key = await this.getKeyForEncryption(key);\n    key = await this.resolveLegacyKey(encString.encryptionType, key);\n    return await this.encryptService.decryptToUtf8(encString, key);\n  }\n\n  async decryptFromBytes(encBuf: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuf == null) {\n      throw new Error(\"no encBuf.\");\n    }\n\n    const encBytes = new Uint8Array(encBuf);\n    const encType = encBytes[0];\n    let ctBytes: Uint8Array = null;\n    let ivBytes: Uint8Array = null;\n    let macBytes: Uint8Array = null;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encBytes.length <= 49) {\n          // 1 + 16 + 32 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        macBytes = encBytes.slice(17, 49);\n        ctBytes = encBytes.slice(49);\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encBytes.length <= 17) {\n          // 1 + 16 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        ctBytes = encBytes.slice(17);\n        break;\n      default:\n        return null;\n    }\n\n    return await this.aesDecryptToBytes(\n      encType,\n      ctBytes.buffer,\n      ivBytes.buffer,\n      macBytes != null ? macBytes.buffer : null,\n      key\n    );\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // Helpers\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  /**\n   * @deprecated June 22 2022: This method has been moved to encryptService.\n   * All callers should use encryptService instead. This method will be removed once all existing code has been refactored to use encryptService.\n   */\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = await this.getKeyForEncryption(key);\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private async aesDecryptToBytes(\n    encType: EncryptionType,\n    data: ArrayBuffer,\n    iv: ArrayBuffer,\n    mac: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      return null;\n    }\n\n    if (theKey.macKey != null && mac != null) {\n      const macData = new Uint8Array(iv.byteLength + data.byteLength);\n      macData.set(new Uint8Array(iv), 0);\n      macData.set(new Uint8Array(data), iv.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        theKey.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(mac, computedMac);\n      if (!macsMatch) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecrypt(data, iv, theKey.encKey);\n  }\n\n  private async getKeyForEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    return await this.getKey();\n  }\n\n  private async resolveLegacyKey(\n    encType: EncryptionType,\n    key: SymmetricCryptoKey\n  ): Promise<SymmetricCryptoKey> {\n    if (\n      encType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      // Old encrypt-then-mac scheme, make a new key\n      let legacyKey = await this.stateService.getLegacyEtmKey();\n      if (legacyKey == null) {\n        legacyKey = new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n        await this.stateService.setLegacyEtmKey(legacyKey);\n      }\n      return legacyKey;\n    }\n\n    return key;\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EEFLongWordList.length);\n      hashNumber = hashNumber.divide(EEFLongWordList.length);\n      phrase.push(EEFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/eventView\";\n\nexport class EventExport {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n  installationId: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n    this.installationId = event.installationId;\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class BitwardenFileUploadService {\n  constructor(private apiService: ApiService) {}\n\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { FolderResponse } from \"../response/folderResponse\";\n\nexport class FolderData {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse) {\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keysRequest\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\n\nconst DefaultOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: any): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EEFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EEFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: any\n  ): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies: Policy[] =\n      this.policyService == null\n        ? null\n        : await this.policyService.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<any> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Deactivated = -1, // Not used, compile-time support only\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/providerData\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private readonly immediateSearchLocales: string[] = [\"zh-CN\", \"zh-TW\", \"ja\", \"ko\", \"vi\"];\n  private readonly defaultSearchableMinLength: number = 2;\n  private searchableMinLength: number = this.defaultSearchableMinLength;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    this.i18nService.locale$.subscribe((locale) => {\n      if (this.immediateSearchLocales.indexOf(locale) !== -1) {\n        this.searchableMinLength = 1;\n      } else {\n        this.searchableMinLength = this.defaultSearchableMinLength;\n      }\n    });\n\n    //register lunr pipeline function\n    lunr.Pipeline.registerFunction(this.normalizeAccentsPipelineFunction, \"normalizeAccents\");\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    query = SearchService.normalizeSearchQuery(query);\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.logService.time(\"search indexing\");\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.pipeline.add(this.normalizeAccentsPipelineFunction);\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", {\n      boost: 10,\n    });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.timeEnd(\"search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        c.login &&\n        c.login.hasUris &&\n        c.login.uris.some((loginUri) => loginUri.uri.toLowerCase().indexOf(query) > -1)\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLocaleLowerCase());\n    if (query === null) {\n      return sends;\n    }\n    const sendsMatched: SendView[] = [];\n    const lowPriorityMatched: SendView[] = [];\n    sends.forEach((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        sendsMatched.push(s);\n      } else if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        lowPriorityMatched.push(s);\n      } else if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      }\n    });\n    return sendsMatched.concat(lowPriorityMatched);\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n\n  private normalizeAccentsPipelineFunction(token: lunr.Token): any {\n    const searchableFields = [\"name\", \"login.username\", \"subtitle\", \"notes\"];\n    const fields = (token as any).metadata[\"fields\"];\n    const checkFields = fields.every((i: any) => searchableFields.includes(i));\n\n    if (checkFields) {\n      return SearchService.normalizeSearchQuery(token.toString());\n    }\n\n    return token;\n  }\n\n  // Remove accents/diacritics characters from text. This regex is equivalent to the Diacritic unicode property escape, i.e. it will match all diacritic characters.\n  static normalizeSearchQuery(query: string): string {\n    return query?.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n}\n","import { SendFileApi } from \"../api/sendFileApi\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/sendResponse\";\n\nimport { SendFileData } from \"./sendFileData\";\nimport { SendTextData } from \"./sendTextData\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/sendData\";\nimport { SendView } from \"../view/sendView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      [\"id\", \"accessId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nconst Keys = {\n  settingsPrefix: \"settings_\",\n  equivalentDomains: \"equivalentDomains\",\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setSettings(null);\n  }\n\n  getEquivalentDomains(): Promise<any> {\n    return this.getSettingsKey(Keys.equivalentDomains);\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n\n  // Helpers\n\n  private async getSettings(): Promise<any> {\n    const settings = await this.stateService.getSettings();\n    if (settings == null) {\n      // eslint-disable-next-line\n      const userId = await this.stateService.getUserId();\n    }\n    return settings;\n  }\n\n  private async getSettingsKey(key: string): Promise<any> {\n    const settings = await this.getSettings();\n    if (settings != null && settings[key]) {\n      return settings[key];\n    }\n    return null;\n  }\n\n  private async setSettingsKey(key: string, value: any): Promise<void> {\n    let settings = await this.getSettings();\n    if (!settings) {\n      settings = {};\n    }\n\n    settings[key] = value;\n    await this.stateService.setSettings(settings);\n  }\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profileProviderResponse\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { Account } from \"./account\";\nimport { GlobalState } from \"./globalState\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountData, AccountSettings } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { SendView } from \"../models/view/sendView\";\n\nconst keys = {\n  state: \"state\",\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  accounts = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  activeAccount = new BehaviorSubject<string>(null);\n\n  private hasBeenInited = false;\n  private isRecoveredSession = false;\n\n  private accountDiskCache = new Map<string, TAccount>();\n\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected memoryStorageService: AbstractStorageService,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {}\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.state().then(async (state) => {\n      if (state == null) {\n        await this.setState(new State<TGlobalState, TAccount>(this.createGlobals()));\n      } else {\n        this.isRecoveredSession = true;\n      }\n    });\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    if (this.isRecoveredSession) {\n      return;\n    }\n\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts =\n        (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n      for (const i in state.authenticatedAccounts) {\n        if (i != null) {\n          await this.syncAccountFromDisk(state.authenticatedAccounts[i]);\n        }\n      }\n      const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n      if (storedActiveUser != null) {\n        state.activeUserId = storedActiveUser;\n      }\n      await this.pushAccounts();\n      this.activeAccount.next(state.activeUserId);\n\n      return state;\n    });\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    await this.updateState(async (state) => {\n      state.accounts[userId] = this.createAccount();\n      const diskAccount = await this.getAccountFromDisk({ userId: userId });\n      state.accounts[userId].profile = diskAccount.profile;\n      return state;\n    });\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts.push(account.profile.userId);\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n      state.accounts[account.profile.userId] = account;\n      return state;\n    });\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccount.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    await this.updateState(async (state) => {\n      state.activeUserId = userId;\n      await this.storageService.save(keys.activeUserId, userId);\n      this.activeAccount.next(state.activeUserId);\n      return state;\n    });\n\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === (await this.state())?.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricLocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.settings?.biometricLocked ?? false\n    );\n  }\n\n  async setBiometricLocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.settings.biometricLocked = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    return (\n      (await this.getHasPremiumPersonally(options)) ||\n      (await this.getHasPremiumFromOrganization(options))\n    );\n  }\n\n  async getHasPremiumPersonally(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.profile?.hasPremiumPersonally;\n  }\n\n  async setHasPremiumPersonally(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumPersonally = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getHasPremiumFromOrganization(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    if (account.profile?.hasPremiumFromOrganization) {\n      return true;\n    }\n\n    // TODO: older server versions won't send the hasPremiumFromOrganization flag, so we're keeping the old logic\n    // for backwards compatibility. It can be removed after everyone has upgraded.\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async setHasPremiumFromOrganization(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumFromOrganization = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototype(SymmetricCryptoKey, SymmetricCryptoKey.initFromJson)\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.autoKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  async getDecodedToken(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.decodedToken;\n  }\n\n  async setDecodedToken(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.decodedToken = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CipherView)\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CollectionView)\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(SymmetricCryptoKey, SymmetricCryptoKey.initFromJson)\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForMap(SymmetricCryptoKey, SymmetricCryptoKey.initFromJson)\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.organizationKeys?.decrypted;\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.organizationKeys.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(EncString)\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(Policy)\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const privateKey = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.privateKey;\n    let result = privateKey?.decrypted;\n    if (result == null && privateKey?.decryptedSerialized != null) {\n      result = Utils.fromByteStringToArray(privateKey.decryptedSerialized);\n    }\n    return result;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.privateKey.decrypted = value;\n    account.keys.privateKey.decryptedSerialized =\n      value == null ? null : Utils.fromBufferToByteString(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForMap(SymmetricCryptoKey, SymmetricCryptoKey.initFromJson)\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.providerKeys?.decrypted;\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.providerKeys.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(SendView)\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.email = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableGravitars(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableGravitars ?? false\n    );\n  }\n\n  async setEnableGravitars(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableGravitars = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CipherData)\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CollectionData)\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(FolderData)\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<{ [orgId: string]: EncryptedOrganizationKeyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(PolicyData)\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(SendData)\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  @withPrototype(EnvironmentUrls)\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if ((await this.state())?.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(EventData)\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  @withPrototype(SymmetricCryptoKey, SymmetricCryptoKey.initFromJson)\n  async getLegacyEtmKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.legacyEtmKey;\n  }\n\n  async setLegacyEtmKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.legacyEtmKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n  async setLocalData(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(ProviderData)\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const keys = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys;\n    let result = keys?.publicKey;\n    if (result == null && keys?.publicKeySerialized != null) {\n      result = Utils.fromByteStringToArray(keys.publicKeySerialized);\n    }\n    return result;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.publicKey = value;\n    account.keys.publicKeySerialized = value == null ? null : Utils.fromBufferToByteString(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getSettings(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = await this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected async getGlobalsFromMemory(): Promise<TGlobalState> {\n    return (await this.state()).globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected async saveGlobalsToMemory(globals: TGlobalState): Promise<void> {\n    await this.updateState(async (state) => {\n      state.globals = globals;\n      return state;\n    });\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = await this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async getAccountFromMemory(options: StorageOptions): Promise<TAccount> {\n    return await this.state().then(async (state) => {\n      if (state.accounts == null) {\n        return null;\n      }\n      return state.accounts[await this.getUserIdFromMemory(options)];\n    });\n  }\n\n  protected async getUserIdFromMemory(options: StorageOptions): Promise<string> {\n    return await this.state().then((state) => {\n      return options?.userId != null\n        ? state.accounts[options.userId]?.profile?.userId\n        : state.activeUserId;\n    });\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && (await this.state())?.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.get(options.userId);\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.set(options.userId, account);\n    }\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(options.userId);\n    }\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      await this.updateState((state) => {\n        return new Promise((resolve) => {\n          state.accounts[account.profile.userId] = account;\n          resolve(state);\n        });\n      });\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<AccountSettings>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    await this.state().then((state) => {\n      if (state.accounts == null || Object.keys(state.accounts).length < 1) {\n        this.accounts.next(null);\n        return;\n      }\n\n      this.accounts.next(state.accounts);\n    });\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected async defaultInMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Memory,\n      userId: (await this.state()).activeUserId,\n    };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: (await this.state())?.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected async removeAccountFromMemory(userId: string = null): Promise<void> {\n    await this.updateState(async (state) => {\n      userId = userId ?? state.activeUserId;\n      delete state.accounts[userId];\n\n      if (this.useAccountCache) {\n        this.accountDiskCache.delete(userId);\n      }\n\n      return state;\n    });\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in (await this.state())?.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        await this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected async clearDecryptedDataForActiveUser(): Promise<void> {\n    await this.updateState(async (state) => {\n      const userId = state?.activeUserId;\n      if (userId == null || state?.accounts[userId]?.data == null) {\n        return;\n      }\n      state.accounts[userId].data = new AccountData();\n\n      return state;\n    });\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string): Promise<void> {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts = state.authenticatedAccounts.filter((id) => id !== userId);\n\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n\n      return state;\n    });\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    const accounts = (await this.state())?.accounts;\n    if (accounts == null || Object.keys(accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? await this.defaultInMemoryOptions()\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n\n  protected state(): Promise<State<TGlobalState, TAccount>> {\n    return this.memoryStorageService.get<State<TGlobalState, TAccount>>(keys.state);\n  }\n\n  private async setState(state: State<TGlobalState, TAccount>): Promise<void> {\n    await this.memoryStorageService.save(keys.state, state);\n  }\n\n  protected async updateState(\n    stateUpdater: (state: State<TGlobalState, TAccount>) => Promise<State<TGlobalState, TAccount>>\n  ) {\n    await this.state().then(async (state) => {\n      const updatedState = await stateUpdater(state);\n\n      await this.setState(updatedState);\n    });\n  }\n}\n\nexport function withPrototype<T>(\n  constructor: new (...args: any[]) => T,\n  converter: (input: T) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<T> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          return result == null ||\n            result.constructor.name === constructor.prototype.constructor.name\n            ? converter(result as T)\n            : converter(\n                Object.create(constructor.prototype, Object.getOwnPropertyDescriptors(result)) as T\n              );\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForArrayMembers<T>(\n  memberConstructor: new (...args: any[]) => T,\n  memberConverter: (input: T) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T[]> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any[]> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (!(result instanceof Array)) {\n            throw new Error(\n              `Attempted to retrieve non array type from state as an array for method ${String(\n                propertyKey\n              )}`\n            );\n          } else {\n            return result.map((r) => {\n              return r == null ||\n                r.constructor.name === memberConstructor.prototype.constructor.name\n                ? memberConverter(r)\n                : memberConverter(\n                    Object.create(memberConstructor.prototype, Object.getOwnPropertyDescriptors(r))\n                  );\n            });\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForObjectValues<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: T) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<{ [key: string]: T }> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<{ [key: string]: T }> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else {\n            for (const [key, val] of Object.entries(result)) {\n              result[key] =\n                val == null || val.constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(val)\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(val)\n                      )\n                    );\n            }\n\n            return result as { [key: string]: T };\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForMap<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: T) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<Map<string, T>> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (result instanceof Map) {\n            return result;\n          } else {\n            for (const key in Object.keys(result)) {\n              result[key] =\n                result[key] == null ||\n                result[key].constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(result[key])\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(result[key])\n                      )\n                    );\n            }\n            return new Map<string, T>(Object.entries(result));\n          }\n        });\n      },\n    };\n  };\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    const storedToken = await this.stateService.getDecodedToken();\n    if (token === null && storedToken != null) {\n      return storedToken;\n    }\n\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountSettings } from \"../models/domain/account\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableGravatars: \"enableGravatars\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n        case StateVersion.Four: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom4To5(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Five);\n          break;\n        }\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricLocked: null,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      enableGravitars:\n        (await this.get<boolean>(v1Keys.enableGravatars)) ??\n        defaultAccount.settings.enableGravitars,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      },\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings: userId == null ? null : await this.get<any>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateAccountFrom4To5(account: TAccount): Promise<TAccount> {\n    const encryptedOrgKeys = account.keys?.organizationKeys?.encrypted;\n    if (encryptedOrgKeys != null) {\n      for (const [orgId, encKey] of Object.entries(encryptedOrgKeys)) {\n        encryptedOrgKeys[orgId] = {\n          type: \"organization\",\n          key: encKey as unknown as string, // Account v4 does not reflect the current account model so we have to cast\n        };\n      }\n    }\n\n    return account;\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n\n  protected async setCurrentStateVersion(newVersion: StateVersion): Promise<void> {\n    const globals = await this.getGlobals();\n    globals.stateVersion = newVersion;\n    await this.set(keys.global, globals);\n  }\n\n  protected async getAuthenticatedAccounts(): Promise<TAccount[]> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    return Promise.all(authenticatedUserIds.map((id) => this.get<TAccount>(id)));\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { ProfileOrganizationResponse } from \"../response/profileOrganizationResponse\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useResetPassword = response.useResetPassword;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = response.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = response.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = response.familySponsorshipToDelete;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderApiServiceAbstraction } from \"../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { ProviderService } from \"../abstractions/provider.service\";\nimport { SendService } from \"../abstractions/send.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../abstractions/sync.service\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: InternalFolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: PolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    private folderApiService: FolderApiServiceAbstraction,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(response.ciphers);\n      await this.syncSends(response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.folderApiService.get(notification.id);\n          if (remoteFolder != null) {\n            await this.folderService.upsert(new FolderData(remoteFolder));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getFullCipherDetails(notification.id);\n          if (remoteCipher != null) {\n            await this.cipherService.upsert(new CipherData(remoteCipher));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            await this.sendService.upsert(new SendData(remoteSend));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setHasPremiumPersonally(response.premiumPersonally);\n    await this.stateService.setHasPremiumFromOrganization(response.premiumFromOrganization);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.save(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { UsernameGenerationService as BaseUsernameGenerationService } from \"../abstractions/usernameGeneration.service\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\n\nconst DefaultOptions = {\n  type: \"word\",\n  wordCapitalize: true,\n  wordIncludeNumber: true,\n  subaddressType: \"random\",\n  catchallType: \"random\",\n  forwardedService: \"simplelogin\",\n  forwardedAnonAddyDomain: \"anonaddy.me\",\n};\n\nexport class UsernameGenerationService implements BaseUsernameGenerationService {\n  constructor(\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  generateUsername(options: any): Promise<string> {\n    if (options.type === \"catchall\") {\n      return this.generateCatchall(options);\n    } else if (options.type === \"subaddress\") {\n      return this.generateSubaddress(options);\n    } else if (options.type === \"forwarded\") {\n      return this.generateForwarded(options);\n    } else {\n      return this.generateWord(options);\n    }\n  }\n\n  async generateWord(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.wordCapitalize == null) {\n      o.wordCapitalize = true;\n    }\n    if (o.wordIncludeNumber == null) {\n      o.wordIncludeNumber = true;\n    }\n\n    const wordIndex = await this.cryptoService.randomNumber(0, EEFLongWordList.length - 1);\n    let word = EEFLongWordList[wordIndex];\n    if (o.wordCapitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    if (o.wordIncludeNumber) {\n      const num = await this.cryptoService.randomNumber(1, 9999);\n      word = word + this.zeroPad(num.toString(), 4);\n    }\n    return word;\n  }\n\n  async generateSubaddress(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    const subaddressEmail = o.subaddressEmail;\n    if (subaddressEmail == null || subaddressEmail.length < 3) {\n      return o.subaddressEmail;\n    }\n    const atIndex = subaddressEmail.indexOf(\"@\");\n    if (atIndex < 1 || atIndex >= subaddressEmail.length - 1) {\n      return subaddressEmail;\n    }\n    if (o.subaddressType == null) {\n      o.subaddressType = \"random\";\n    }\n\n    const emailBeginning = subaddressEmail.substr(0, atIndex);\n    const emailEnding = subaddressEmail.substr(atIndex + 1, subaddressEmail.length);\n\n    let subaddressString = \"\";\n    if (o.subaddressType === \"random\") {\n      subaddressString = await this.randomString(8);\n    } else if (o.subaddressType === \"website-name\") {\n      subaddressString = o.website;\n    }\n    return emailBeginning + \"+\" + subaddressString + \"@\" + emailEnding;\n  }\n\n  async generateCatchall(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.catchallDomain == null || o.catchallDomain === \"\") {\n      return null;\n    }\n    if (o.catchallType == null) {\n      o.catchallType = \"random\";\n    }\n\n    let startString = \"\";\n    if (o.catchallType === \"random\") {\n      startString = await this.randomString(8);\n    } else if (o.catchallType === \"website-name\") {\n      startString = o.website;\n    }\n    return startString + \"@\" + o.catchallDomain;\n  }\n\n  async generateForwarded(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.forwardedService == null) {\n      return null;\n    }\n\n    if (o.forwardedService === \"simplelogin\") {\n      if (o.forwardedSimpleLoginApiKey == null || o.forwardedSimpleLoginApiKey === \"\") {\n        return null;\n      }\n      return this.generateSimpleLoginAlias(o.forwardedSimpleLoginApiKey, o.website);\n    } else if (o.forwardedService === \"anonaddy\") {\n      if (\n        o.forwardedAnonAddyApiToken == null ||\n        o.forwardedAnonAddyApiToken === \"\" ||\n        o.forwardedAnonAddyDomain == null ||\n        o.forwardedAnonAddyDomain == \"\"\n      ) {\n        return null;\n      }\n      return this.generateAnonAddyAlias(\n        o.forwardedAnonAddyApiToken,\n        o.forwardedAnonAddyDomain,\n        o.website\n      );\n    } else if (o.forwardedService === \"firefoxrelay\") {\n      if (o.forwardedFirefoxApiToken == null || o.forwardedFirefoxApiToken === \"\") {\n        return null;\n      }\n      return this.generateFirefoxRelayAlias(o.forwardedFirefoxApiToken, o.website);\n    }\n\n    return null;\n  }\n\n  async getOptions(): Promise<any> {\n    let options = await this.stateService.getUsernameGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setUsernameGenerationOptions(options);\n    return options;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setUsernameGenerationOptions(options);\n  }\n\n  private async randomString(length: number) {\n    let str = \"\";\n    const charSet = \"abcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < length; i++) {\n      const randomCharIndex = await this.cryptoService.randomNumber(0, charSet.length - 1);\n      str += charSet.charAt(randomCharIndex);\n    }\n    return str;\n  }\n\n  // ref: https://stackoverflow.com/a/10073788\n  private zeroPad(number: string, width: number) {\n    return number.length >= width\n      ? number\n      : new Array(width - number.length + 1).join(\"0\") + number;\n  }\n\n  private async generateSimpleLoginAlias(apiKey: string, website: string): Promise<string> {\n    if (apiKey == null || apiKey === \"\") {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authentication: apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    let url = \"https://app.simplelogin.io/api/alias/random/new\";\n    if (website != null) {\n      url += \"?hostname=\" + website;\n    }\n    requestInit.body = JSON.stringify({\n      note: (website != null ? \"Website: \" + website + \". \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await this.apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json.alias;\n    }\n    if (response.status === 401) {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    try {\n      const json = await response.json();\n      if (json?.error != null) {\n        throw \"SimpleLogin error:\" + json.error;\n      }\n    } catch {\n      // Do nothing...\n    }\n    throw \"Unknown SimpleLogin error occurred.\";\n  }\n\n  private async generateAnonAddyAlias(\n    apiToken: string,\n    domain: string,\n    websiteNote: string\n  ): Promise<string> {\n    if (apiToken == null || apiToken === \"\") {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + apiToken,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://app.anonaddy.com/api/v1/aliases\";\n    requestInit.body = JSON.stringify({\n      domain: domain,\n      description:\n        (websiteNote != null ? \"Website: \" + websiteNote + \". \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await this.apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.data?.email;\n    }\n    if (response.status === 401) {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    throw \"Unknown AnonAddy error occurred.\";\n  }\n\n  private async generateFirefoxRelayAlias(apiToken: string, website: string): Promise<string> {\n    if (apiToken == null || apiToken === \"\") {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Token \" + apiToken,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://relay.firefox.com/api/v1/relayaddresses/\";\n    requestInit.body = JSON.stringify({\n      enabled: true,\n      generated_for: website,\n      description: (website != null ? website + \" - \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await this.apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.full_address;\n    }\n    if (response.status === 401) {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    throw \"Unknown Firefox Relay error occurred.\";\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"@bitwarden/common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import { BroadcasterService as BroadcasterServiceAbstraction } from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: any) => any> = new Map<string, (message: any) => any>();\n\n  send(message: any, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: any) => any) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationComponent for any other situation where you need to verify the user's identity.\n */\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\nimport { ModalService } from \"./modal.service\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationService for any other situation where you need to verify the user's identity.\n */\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { InjectionToken, Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { ThemingService } from \"@bitwarden/angular/services/theming/theming.service\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { AbstractEncryptService } from \"@bitwarden/common/abstractions/abstractEncrypt.service\";\nimport { ApiService as ApiServiceAbstraction } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport {\n  FolderService as FolderServiceAbstraction,\n  InternalFolderService,\n} from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FormValidationErrorsService as FormValidationErrorsServiceAbstraction } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"@bitwarden/common/abstractions/policy.service\";\nimport { ProviderService as ProviderServiceAbstraction } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"@bitwarden/common/abstractions/sync.service\";\nimport { TokenService as TokenServiceAbstraction } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { Account } from \"@bitwarden/common/models/domain/account\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/globalState\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\nimport { AuditService } from \"@bitwarden/common/services/audit.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/services/collection.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { CryptoService } from \"@bitwarden/common/services/crypto.service\";\nimport { EncryptService } from \"@bitwarden/common/services/encrypt.service\";\nimport { EnvironmentService } from \"@bitwarden/common/services/environment.service\";\nimport { EventService } from \"@bitwarden/common/services/event.service\";\nimport { ExportService } from \"@bitwarden/common/services/export.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\nimport { FolderApiService } from \"@bitwarden/common/services/folder/folder-api.service\";\nimport { FolderService } from \"@bitwarden/common/services/folder/folder.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/services/formValidationErrors.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\nimport { NotificationsService } from \"@bitwarden/common/services/notifications.service\";\nimport { OrganizationService } from \"@bitwarden/common/services/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/services/passwordGeneration.service\";\nimport { PolicyService } from \"@bitwarden/common/services/policy.service\";\nimport { ProviderService } from \"@bitwarden/common/services/provider.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\nimport { SendService } from \"@bitwarden/common/services/send.service\";\nimport { SettingsService } from \"@bitwarden/common/services/settings.service\";\nimport { StateService } from \"@bitwarden/common/services/state.service\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\nimport { SyncService } from \"@bitwarden/common/services/sync.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\nimport { TotpService } from \"@bitwarden/common/services/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\nimport { UserVerificationService } from \"@bitwarden/common/services/userVerification.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/services/usernameGeneration.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { LockGuard } from \"../guards/lock.guard\";\nimport { UnauthGuard } from \"../guards/unauth.guard\";\n\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { ValidationService } from \"./validation.service\";\n\nexport const WINDOW = new InjectionToken<Window>(\"WINDOW\");\nexport const MEMORY_STORAGE = new InjectionToken<AbstractStorageService>(\"MEMORY_STORAGE\");\nexport const SECURE_STORAGE = new InjectionToken<AbstractStorageService>(\"SECURE_STORAGE\");\nexport const STATE_FACTORY = new InjectionToken<StateFactory>(\"STATE_FACTORY\");\nexport const STATE_SERVICE_USE_CACHE = new InjectionToken<boolean>(\"STATE_SERVICE_USE_CACHE\");\nexport const LOGOUT_CALLBACK = new InjectionToken<(expired: boolean, userId?: string) => void>(\n  \"LOGOUT_CALLBACK\"\n);\nexport const LOCKED_CALLBACK = new InjectionToken<() => void>(\"LOCKED_CALLBACK\");\nexport const CLIENT_TYPE = new InjectionToken<boolean>(\"CLIENT_TYPE\");\nexport const LOCALES_DIRECTORY = new InjectionToken<string>(\"LOCALES_DIRECTORY\");\nexport const SYSTEM_LANGUAGE = new InjectionToken<string>(\"SYSTEM_LANGUAGE\");\nexport const LOG_MAC_FAILURES = new InjectionToken<string>(\"LOG_MAC_FAILURES\");\n\n@NgModule({\n  declarations: [],\n  providers: [\n    ValidationService,\n    AuthGuard,\n    UnauthGuard,\n    LockGuard,\n    ModalService,\n    { provide: WINDOW, useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    {\n      provide: LOCALES_DIRECTORY,\n      useValue: \"./locales\",\n    },\n    {\n      provide: SYSTEM_LANGUAGE,\n      useFactory: (window: Window) => window.navigator.language,\n      deps: [WINDOW],\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: true,\n    },\n    {\n      provide: LOGOUT_CALLBACK,\n      useFactory:\n        (messagingService: MessagingServiceAbstraction) => (expired: boolean, userId?: string) =>\n          messagingService.send(\"logout\", { expired: expired, userId: userId }),\n      deps: [MessagingServiceAbstraction],\n    },\n    {\n      provide: LOCKED_CALLBACK,\n      useValue: null,\n    },\n    {\n      provide: LOG_MAC_FAILURES,\n      useValue: true,\n    },\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [AbstractStorageService],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        BroadcasterServiceAbstraction,\n      ],\n    },\n    {\n      provide: InternalFolderService,\n      useExisting: FolderServiceAbstraction,\n    },\n    {\n      provide: FolderApiServiceAbstraction,\n      useClass: FolderApiService,\n      deps: [FolderServiceAbstraction, ApiServiceAbstraction],\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        AbstractEncryptService,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: UsernameGenerationServiceAbstraction,\n      useClass: UsernameGenerationService,\n      deps: [CryptoServiceAbstraction, StateServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useClass: ApiService,\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        AppIdServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useClass: SyncService,\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n        ProviderServiceAbstraction,\n        FolderApiServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useClass: VaultTimeoutService,\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n        LOCKED_CALLBACK,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useClass: StateService,\n      deps: [\n        AbstractStorageService,\n        SECURE_STORAGE,\n        MEMORY_STORAGE,\n        LogService,\n        StateMigrationServiceAbstraction,\n        STATE_FACTORY,\n        STATE_SERVICE_USE_CACHE,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useClass: NotificationsService,\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        LOGOUT_CALLBACK,\n        LogService,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [WINDOW],\n    },\n    {\n      provide: AbstractEncryptService,\n      useClass: EncryptService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, LOG_MAC_FAILURES],\n    },\n    {\n      provide: EventServiceAbstraction,\n      useClass: EventService,\n      deps: [\n        ApiServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, ApiServiceAbstraction],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: AbstractThemingService,\n      useClass: ThemingService,\n    },\n    {\n      provide: FormValidationErrorsServiceAbstraction,\n      useClass: FormValidationErrorsService,\n    },\n  ],\n})\nexport class JslibServicesModule {}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: AbstractStorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { ApiLogInStrategy } from \"../misc/logInStrategies/apiLogin.strategy\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy ? this.logInStrategy.email : null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  private logInStrategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n  private sessionTimeout: any;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n\n    if (credentials.type === AuthenticationType.Password) {\n      strategy = new PasswordLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this\n      );\n    } else if (credentials.type === AuthenticationType.Sso) {\n      strategy = new SsoLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.keyConnectorService\n      );\n    } else if (credentials.type === AuthenticationType.Api) {\n      strategy = new ApiLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.environmentService,\n        this.keyConnectorService\n      );\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithApiKey(): boolean {\n    return this.logInStrategy instanceof ApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  async getAuthStatus(userId?: string): Promise<AuthenticationStatus> {\n    const isAuthenticated = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!isAuthenticated) {\n      return AuthenticationStatus.LoggedOut;\n    }\n\n    // Keys aren't stored for a device that is locked or logged out\n    // Make sure we're logged in before checking this, otherwise we could mix up those states\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    const hasKeyInMemory = await this.cryptoService.hasKeyInMemory(userId);\n    if (!hasKeyInMemory) {\n      return AuthenticationStatus.Locked;\n    }\n\n    return AuthenticationStatus.Unlocked;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  private saveState(strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { BroadcasterService } from \"../../abstractions/broadcaster.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderService as FolderServiceAbstraction } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { CipherData } from \"../../models/data/cipherData\";\nimport { FolderData } from \"../../models/data/folderData\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { FolderView } from \"../../models/view/folderView\";\n\nconst BroadcasterSubscriptionId = \"FolderService\";\n\nexport class FolderService implements FolderServiceAbstraction {\n  private _folders: BehaviorSubject<Folder[]> = new BehaviorSubject([]);\n  private _folderViews: BehaviorSubject<FolderView[]> = new BehaviorSubject([]);\n\n  folders$ = this._folders.asObservable();\n  folderViews$ = this._folderViews.asObservable();\n\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private broadcasterService: BroadcasterService\n  ) {\n    this.stateService.activeAccount.subscribe(async (activeAccount) => {\n      if ((Utils.global as any).bitwardenContainerService == null) {\n        return;\n      }\n\n      if (activeAccount == null) {\n        this._folders.next([]);\n        this._folderViews.next([]);\n        return;\n      }\n\n      const data = await this.stateService.getEncryptedFolders();\n\n      await this.updateObservables(data);\n    });\n\n    // TODO: Broadcasterservice should be removed or replaced with observables\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      switch (message.command) {\n        case \"unlocked\": {\n          const data = await this.stateService.getEncryptedFolders();\n\n          await this.updateObservables(data);\n          break;\n        }\n        default:\n          break;\n      }\n    });\n  }\n\n  async clearCache(): Promise<void> {\n    this._folderViews.next([]);\n  }\n\n  // TODO: This should be moved to EncryptService or something\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = this._folders.getValue();\n\n    return folders.find((folder) => folder.id === id);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<void> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<void> {\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._folders.next([]);\n      this._folderViews.next([]);\n    }\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  private async updateObservables(foldersMap: { [id: string]: FolderData }) {\n    const folders = Object.values(foldersMap || {}).map((f) => new Folder(f));\n\n    const decryptFolderPromises = folders.map((f) => f.decrypt());\n    const decryptedFolders = await Promise.all(decryptFolderPromises);\n\n    decryptedFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decryptedFolders.push(noneFolder);\n\n    this._folders.next(folders);\n    this._folderViews.next(decryptedFolders);\n  }\n}\n","import { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FolderData } from \"@bitwarden/common/models/data/folderData\";\nimport { Folder } from \"@bitwarden/common/models/domain/folder\";\nimport { FolderRequest } from \"@bitwarden/common/models/request/folderRequest\";\nimport { FolderResponse } from \"@bitwarden/common/models/response/folderResponse\";\n\nexport class FolderApiService implements FolderApiServiceAbstraction {\n  constructor(private folderService: InternalFolderService, private apiService: ApiService) {}\n\n  async save(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.putFolder(folder.id, request);\n    }\n\n    const data = new FolderData(response);\n    await this.folderService.upsert(data);\n  }\n\n  async delete(id: string): Promise<any> {\n    await this.deleteFolder(id);\n    await this.folderService.delete(id);\n  }\n\n  async get(id: string): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  private async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  private deleteFolder(id: string): Promise<any> {\n    return this.apiService.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  private baseUrl: string;\n  private webVaultUrl: string;\n  private apiUrl: string;\n  private identityUrl: string;\n  private iconsUrl: string;\n  private notificationsUrl: string;\n  private eventsUrl: string;\n  private keyConnectorUrl: string;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount.subscribe(async () => {\n      await this.setUrlsFromStorage();\n    });\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n}\n","import { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { DeviceRequest } from \"../models/request/deviceRequest\";\nimport { DeviceVerificationRequest } from \"../models/request/deviceVerificationRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationApiKeyRequest } from \"../models/request/organizationApiKeyRequest\";\nimport { OrganizationConnectionRequest } from \"../models/request/organizationConnectionRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingHistoryResponse } from \"../models/response/billingHistoryResponse\";\nimport { BillingPaymentResponse } from \"../models/response/billingPaymentResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DeviceVerificationResponse } from \"../models/response/deviceVerificationResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationApiKeyInformationResponse } from \"../models/response/organizationApiKeyInformationResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organizationConnectionResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organizationSponsorshipSyncStatusResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SsoPreValidateResponse } from \"../models/response/ssoPreValidateResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  TwoFactorWebAuthnResponse,\n  ChallengeResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport class ApiService implements ApiServiceAbstraction {\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private appIdService: AppIdService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof ApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  deleteAccount(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  postRegister(request: RegisterRequest): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      false,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postAccountRequestOTP(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Account Billing APIs\n\n  async getUserBillingHistory(): Promise<BillingHistoryResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/history\", null, true, true);\n    return new BillingHistoryResponse(r);\n  }\n\n  async getUserBillingPayment(): Promise<BillingPaymentResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/payment-method\", null, true, true);\n    return new BillingPaymentResponse(r);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getFullCipherDetails(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/details\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Policy APIs\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async putPolicy(\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  // Organization User APIs\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getOrganizationUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  async getOrganizationAutoEnrollStatus(\n    identifier: string\n  ): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  deactivateOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/deactivate\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async deactivateManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/deactivate\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  activateOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/activate\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async activateManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/activate\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, true, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + organizationId + \"/import\", request, true, false);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  async getDeviceVerificationSettings(): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/two-factor/get-device-verification-settings\",\n      null,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async putDeviceVerificationSettings(\n    request: DeviceVerificationRequest\n  ): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/two-factor/device-verification-settings\",\n      request,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getOrganization(id: string): Promise<OrganizationResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getOrganizationBilling(id: string): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getOrganizationSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/subscription\", null, true, true);\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getCloudCommunicationsEnabled(): Promise<boolean> {\n    const r = await this.send(\"GET\", \"/organizations/connections/enabled\", null, true, true);\n    return r as boolean;\n  }\n\n  async getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"GET\", `/organizations/connections/${id}/${type}`, null, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"POST\", \"/organizations/connections/\", request, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId?: string\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/connections/\" + organizationConnectionId,\n      request,\n      true,\n      true\n    );\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async deleteOrganizationConnection(id: string): Promise<void> {\n    return this.send(\"DELETE\", \"/organizations/connections/\" + id, null, true, false);\n  }\n\n  async getOrganizationLicense(id: string, installationId: string): Promise<any> {\n    return this.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getOrganizationTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async getOrganizationSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations\", request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganization(\n    id: string,\n    request: OrganizationUpdateRequest\n  ): Promise<OrganizationResponse> {\n    const r = await this.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganizationTaxInfo(\n    id: string,\n    request: OrganizationTaxInfoUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  postLeaveOrganization(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n  }\n\n  async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async postOrganizationApiKey(\n    id: string,\n    request: OrganizationApiKeyRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async getOrganizationApiKeyInformation(\n    id: string\n  ): Promise<ListResponse<OrganizationApiKeyInformationResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/api-key-information\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationApiKeyInformationResponse);\n  }\n\n  async postOrganizationRotateApiKey(\n    id: string,\n    request: OrganizationApiKeyRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationSso(\n    id: string,\n    request: OrganizationSsoRequest\n  ): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/sso\", request, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganizationUpgrade(\n    id: string,\n    request: OrganizationUpgradeRequest\n  ): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/upgrade\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationUpdateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/subscription\", request, true, false);\n  }\n\n  async postOrganizationSeat(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/seat\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/verify-bank\", request, true, false);\n  }\n\n  postOrganizationCancel(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  postOrganizationReinstate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  deleteOrganization(id: string, request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n  }\n\n  async getOrganizationKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async postOrganizationKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/keys\", request, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersion()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<SsoPreValidateResponse> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      const body = await response.json();\n      return new SsoPreValidateResponse(body);\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoredOrgId +\n        \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getSponsorshipSyncStatus(\n    sponsoredOrgId: string\n  ): Promise<OrganizationSponsorshipSyncStatusResponse> {\n    const response = await this.send(\n      \"GET\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/sync-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSponsorshipSyncStatusResponse(response);\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n    const tokenRequest = new ApiTokenRequest(\n      clientId,\n      clientSecret,\n      new TokenRequestTwoFactor(),\n      deviceRequest\n    );\n\n    const response = await this.postIdentityToken(tokenRequest);\n    if (!(response instanceof IdentityTokenResponse)) {\n      throw new Error(\"Invalid response received when refreshing api token\");\n    }\n\n    await this.tokenService.setToken(response.accessToken);\n  }\n\n  async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    if (hasResponse && response.status === 200) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    if (\n      authed &&\n      ((tokenError && response.status === 400) ||\n        response.status === 401 ||\n        response.status === 403)\n    ) {\n      await this.logoutCallback(true);\n      return null;\n    }\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService(apiService);\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { AuthService } from \"../abstractions/auth.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { PolicyType } from \"../enums/policyType\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private authService: AuthService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (expired: boolean, userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    for (const userId in this.stateService.accounts.getValue()) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(allowSoftLock = false, userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      await this.folderService.clearCache();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setBiometricLocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(false, userId);\n    }\n  }\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    const authStatus = await this.authService.getAuthStatus(userId);\n    if (\n      authStatus === AuthenticationStatus.Locked ||\n      authStatus === AuthenticationStatus.LoggedOut\n    ) {\n      return false;\n    }\n\n    const vaultTimeout = await this.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(true, userId);\n  }\n}\n","import * as papa from \"papaparse\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIdExport as CipherExport } from \"../models/export/cipherWithIdsExport\";\nimport { CollectionWithIdExport as CollectionExport } from \"../models/export/collectionWithIdExport\";\nimport { EventExport } from \"../models/export/eventExport\";\nimport { FolderWithIdExport as FolderExport } from \"../models/export/folderWithIdExport\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { EventView } from \"../models/view/eventView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new EventExport(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      firstValueFrom(this.folderService.folderViews$).then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      firstValueFrom(this.folderService.folders$).then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((collections) => {\n        const collectionPromises: any = [];\n        if (collections != null && collections.data != null && collections.data.length > 0) {\n          collections.data.forEach((c) => {\n            const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n            collectionPromises.push(\n              collection.decrypt().then((decCol) => {\n                decCollections.push(decCol);\n              })\n            );\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((ciphers) => {\n        const cipherPromises: any = [];\n        if (ciphers != null && ciphers.data != null && ciphers.data.length > 0) {\n          ciphers.data\n            .filter((c) => c.deletedDate === null)\n            .forEach((c) => {\n              const cipher = new Cipher(new CipherData(c));\n              cipherPromises.push(\n                cipher.decrypt().then((decCipher) => {\n                  decCiphers.push(decCipher);\n                })\n              );\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService,\n    private authService: AuthService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback(true);\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    const authStatus = await this.authService.getAuthStatus();\n    return authStatus >= AuthenticationStatus.Unlocked;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n\n  constructor(win: Window) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { EncryptedObject } from \"@bitwarden/common/models/domain/encryptedObject\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\n\nexport class EncryptService implements AbstractEncryptService {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService,\n    private logMacFailures: boolean\n  ) {}\n\n  async encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString> {\n    if (key == null) {\n      throw new Error(\"no encryption key provided.\");\n    }\n\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async decryptToUtf8(encString: EncString, key: SymmetricCryptoKey): Promise<string> {\n    if (key?.macKey != null && encString?.mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (key.encType !== encString.encryptionType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = key;\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private logMacFailed(msg: string) {\n    if (this.logMacFailures) {\n      this.logService.error(msg);\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { EventService as EventServiceAbstraction } from \"../abstractions/event.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EventType } from \"../enums/eventType\";\nimport { EventData } from \"../models/data/eventData\";\nimport { EventRequest } from \"../models/request/eventRequest\";\n\nexport class EventService implements EventServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private apiService: ApiService,\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.uploadEvents();\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Organization } from \"../models/domain/organization\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nexport class PolicyService implements PolicyServiceAbstraction {\n  policyCache: Policy[];\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private apiService: ApiService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedPolicies(null);\n  }\n\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        // eslint-disable-next-line\n        if (diskPolicies.hasOwnProperty(id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  async getPolicyForOrganization(policyType: PolicyType, organizationId: string): Promise<Policy> {\n    const org = await this.organizationService.get(organizationId);\n    if (org?.isProviderUser) {\n      const orgPolicies = await this.apiService.getPolicies(organizationId);\n      const policy = orgPolicies.data.find((p) => p.organizationId === organizationId);\n\n      if (policy == null) {\n        return null;\n      }\n\n      return new Policy(new PolicyData(policy));\n    }\n\n    const policies = await this.getAll(policyType);\n    return policies.find((p) => p.organizationId === organizationId);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.apiService.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.mapPoliciesFromToken(response);\n    return this.getMasterPasswordPolicyOptions(policies);\n  }\n\n  async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n    let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n    if (policies == null) {\n      policies = await this.getAll(PolicyType.MasterPassword);\n    } else {\n      policies = policies.filter((p) => p.type === PolicyType.MasterPassword);\n    }\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new MasterPasswordPolicyOptions();\n      }\n\n      if (\n        currentPolicy.data.minComplexity != null &&\n        currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n      ) {\n        enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.requireUpper) {\n        enforcedOptions.requireUpper = true;\n      }\n\n      if (currentPolicy.data.requireLower) {\n        enforcedOptions.requireLower = true;\n      }\n\n      if (currentPolicy.data.requireNumbers) {\n        enforcedOptions.requireNumbers = true;\n      }\n\n      if (currentPolicy.data.requireSpecial) {\n        enforcedOptions.requireSpecial = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n    const organizations = await this.organizationService.getAll(userId);\n    let filteredPolicies;\n\n    if (policyFilter != null) {\n      filteredPolicies = policies.filter((p) => p.enabled && policyFilter(p));\n    } else {\n      filteredPolicies = policies.filter((p) => p.enabled);\n    }\n\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.enabled &&\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        !this.isExcemptFromPolicies(o, policyType) &&\n        policySet.has(o.id)\n    );\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/sendFile\";\nimport { SendText } from \"../models/domain/sendText\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private logoutCallback: (expired: boolean, userId?: string) => void\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n\n  private handleKeyConnectorError(e: any) {\n    this.logService.error(e);\n    if (this.logoutCallback != null) {\n      this.logoutCallback(false);\n    }\n    throw new Error(\"Key Connector error\");\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../abstractions/userVerification.service\";\nimport { VerificationType } from \"../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { Verification } from \"../types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Use it to verify the input collected by UserVerificationComponent.\n */\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  /**\n   * Create a new request model to be used for server-side verification\n   * @param verification User-supplied verification data (Master Password or OTP)\n   * @param requestClass The request model to create\n   * @param alreadyHashed Whether the master password is already hashed\n   */\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  /**\n   * Used to verify the Master Password client-side, or send the OTP to the server for verification (with no other data)\n   * Generally used for client-side verification only.\n   * @param verification User-supplied verification data (Master Password or OTP)\n   */\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.apiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.apiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPassRequired\"));\n      }\n    }\n  }\n}\n","import { OrganizationService as OrganizationServiceAbstraction } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport class OrganizationService implements OrganizationServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Organization> {\n    const organizations = await this.stateService.getOrganizations();\n    // eslint-disable-next-line\n    if (organizations == null || !organizations.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Organization(organizations[id]);\n  }\n\n  async getByIdentifier(identifier: string): Promise<Organization> {\n    const organizations = await this.getAll();\n    if (organizations == null || organizations.length === 0) {\n      return null;\n    }\n\n    return organizations.find((o) => o.identifier === identifier);\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizations = await this.stateService.getOrganizations({ userId: userId });\n    const response: Organization[] = [];\n    for (const id in organizations) {\n      // eslint-disable-next-line\n      if (organizations.hasOwnProperty(id) && !organizations[id].isProviderUser) {\n        response.push(new Organization(organizations[id]));\n      }\n    }\n    const sortedResponse = response.sort((a, b) => a.name.localeCompare(b.name));\n    return sortedResponse;\n  }\n\n  async save(organizations: { [id: string]: OrganizationData }) {\n    return await this.stateService.setOrganizations(organizations);\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const orgs = await this.getAll();\n    return orgs.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  async hasOrganizations(userId?: string): Promise<boolean> {\n    const organizations = await this.getAll(userId);\n    return organizations.length > 0;\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import { FormGroup, ValidationErrors } from \"@angular/forms\";\n\nimport {\n  FormGroupControls,\n  FormValidationErrorsService as FormValidationErrorsAbstraction,\n  AllValidationErrors,\n} from \"../abstractions/formValidationErrors.service\";\n\nexport class FormValidationErrorsService implements FormValidationErrorsAbstraction {\n  getFormValidationErrors(controls: FormGroupControls): AllValidationErrors[] {\n    let errors: AllValidationErrors[] = [];\n    Object.keys(controls).forEach((key) => {\n      const control = controls[key];\n      if (control instanceof FormGroup) {\n        errors = errors.concat(this.getFormValidationErrors(control.controls));\n      }\n\n      const controlErrors: ValidationErrors = controls[key].errors;\n      if (controlErrors !== null) {\n        Object.keys(controlErrors).forEach((keyError) => {\n          errors.push({\n            controlName: key,\n            errorName: keyError,\n          });\n        });\n      }\n    });\n\n    return errors;\n  }\n}\n","import { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\n\nexport class MemoryStorageService implements AbstractStorageService {\n  private store = new Map<string, any>();\n\n  get<T>(key: string): Promise<T> {\n    if (this.store.has(key)) {\n      const obj = this.store.get(key);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string): Promise<boolean> {\n    return this.get(key) != null;\n  }\n\n  save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      return this.remove(key);\n    }\n    this.store.set(key, obj);\n    return Promise.resolve();\n  }\n\n  remove(key: string): Promise<any> {\n    this.store.delete(key);\n    return Promise.resolve();\n  }\n}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"@bitwarden/common/models/domain/account\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout: number = process.env.NODE_ENV === \"development\" ? null : 15;\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Injectable()\nexport class BroadcasterMessagingService implements MessagingService {\n  constructor(private broadcasterService: BroadcasterService) {}\n\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    this.broadcasterService.send(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"@bitwarden/common/enums/htmlStorageLocation\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storageOptions\";\n\n@Injectable()\nexport class HtmlStorageService implements AbstractStorageService {\n  get defaultOptions(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Session };\n  }\n\n  get<T>(key: string, options: StorageOptions = this.defaultOptions): Promise<T> {\n    let json: string = null;\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        json = window.localStorage.getItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        json = window.sessionStorage.getItem(key);\n        break;\n    }\n\n    if (json != null) {\n      const obj = JSON.parse(json);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string, options: StorageOptions = this.defaultOptions): Promise<boolean> {\n    return (await this.get(key, options)) != null;\n  }\n\n  save(key: string, obj: any, options: StorageOptions = this.defaultOptions): Promise<any> {\n    if (obj == null) {\n      return this.remove(key, options);\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const json = JSON.stringify(obj);\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.setItem(key, json);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.setItem(key, json);\n        break;\n    }\n    return Promise.resolve();\n  }\n\n  remove(key: string, options: StorageOptions = this.defaultOptions): Promise<any> {\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.removeItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.removeItem(key);\n        break;\n    }\n    return Promise.resolve();\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appBlurClick]\",\n})\nexport class BlurClickDirective {\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"click\") onClick() {\n    this.el.nativeElement.blur();\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"@bitwarden/angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"passwordConfirmation\" | i18n }}\n        </h2>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"passwordConfirmationDesc\" | i18n }}\n\n        <div class=\"form-group\">\n          <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n          <div class=\"d-flex\">\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n            <button\n              type=\"button\"\n              class=\"ml-1 btn btn-link\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" appBlurClick>\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"@bitwarden/angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../app/components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","import { Injectable } from \"@angular/core\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ClientType } from \"@bitwarden/common/enums/clientType\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\n@Injectable()\nexport class WebPlatformUtilsService implements PlatformUtilsService {\n  private browserCache: DeviceType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.browserCache != null) {\n      return this.browserCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.browserCache = DeviceType.FirefoxBrowser;\n    } else if (navigator.userAgent.indexOf(\" OPR/\") >= 0) {\n      this.browserCache = DeviceType.OperaBrowser;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.browserCache = DeviceType.EdgeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.browserCache = DeviceType.VivaldiBrowser;\n    } else if (\n      navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n      navigator.userAgent.indexOf(\"Chrome\") === -1\n    ) {\n      this.browserCache = DeviceType.SafariBrowser;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.browserCache = DeviceType.ChromeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Trident/\") !== -1) {\n      this.browserCache = DeviceType.IEBrowser;\n    } else {\n      this.browserCache = DeviceType.UnknownBrowser;\n    }\n\n    return this.browserCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"browser\", \"\");\n  }\n\n  getClientType() {\n    return ClientType.Web;\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxBrowser;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeBrowser;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeBrowser;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaBrowser;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiBrowser;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariBrowser;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  isViewOpen(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  launchUri(uri: string, options?: any): void {\n    const a = document.createElement(\"a\");\n    a.href = uri;\n    if (options == null || !options.sameWindow) {\n      a.target = \"_blank\";\n      a.rel = \"noreferrer noopener\";\n    }\n    a.classList.add(\"d-none\");\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(process.env.APPLICATION_VERSION || \"-\");\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  async showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false\n  ) {\n    let iconClasses: string = null;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const bootstrapModal = document.querySelector(\"div.modal\");\n    if (bootstrapModal != null) {\n      bootstrapModal.removeAttribute(\"tabindex\");\n    }\n\n    const iconHtmlStr =\n      iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml: iconHtmlStr,\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      titleText: title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n    });\n\n    if (bootstrapModal != null) {\n      bootstrapModal.setAttribute(\"tabindex\", \"-1\");\n    }\n\n    return confirmed.value;\n  }\n\n  isDev(): boolean {\n    return process.env.NODE_ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return process.env.ENV.toString() === \"selfhosted\";\n  }\n\n  copyToClipboard(text: string, options?: any): void | boolean {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      let copyEl = doc.body;\n      // For some reason copy command won't work when modal is open if appending to body\n      if (doc.body.classList.contains(\"modal-open\")) {\n        copyEl = doc.body.querySelector<HTMLElement>(\".modal\");\n      }\n      copyEl.appendChild(textarea);\n      textarea.select();\n      let success = false;\n      try {\n        // Security exception may be thrown by some browsers.\n        success = doc.execCommand(\"copy\");\n        if (!success) {\n          this.logService.debug(\"Copy command unsupported or disabled.\");\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        copyEl.removeChild(textarea);\n      }\n      return success;\n    }\n  }\n\n  readFromClipboard(options?: any): Promise<string> {\n    throw new Error(\"Cannot read from clipboard on web.\");\n  }\n\n  supportsBiometric() {\n    return Promise.resolve(false);\n  }\n\n  authenticateBiometric() {\n    return Promise.resolve(false);\n  }\n\n  supportsSecureStorage() {\n    return false;\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService) {}\n\n  // deprecated, use attachToGlobal instead\n  attachToWindow(win: any) {\n    this.attachToGlobal(win);\n  }\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  getCryptoService(): CryptoService {\n    return this.cryptoService;\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport { WINDOW } from \"@bitwarden/angular/services/jslib-services.module\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService as EventLoggingServiceAbstraction } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { ContainerService } from \"@bitwarden/common/services/container.service\";\nimport { EventService as EventLoggingService } from \"@bitwarden/common/services/event.service\";\nimport { VaultTimeoutService as VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout.service\";\n\nimport { I18nService as I18nService } from \"../../services/i18n.service\";\n\n@Injectable()\nexport class InitService {\n  constructor(\n    @Inject(WINDOW) private win: Window,\n    private environmentService: EnvironmentServiceAbstraction,\n    private notificationsService: NotificationsServiceAbstraction,\n    private vaultTimeoutService: VaultTimeoutServiceAbstraction,\n    private i18nService: I18nServiceAbstraction,\n    private eventLoggingService: EventLoggingServiceAbstraction,\n    private twoFactorService: TwoFactorServiceAbstraction,\n    private stateService: StateServiceAbstraction,\n    private cryptoService: CryptoServiceAbstraction,\n    private themingService: AbstractThemingService\n  ) {}\n\n  init() {\n    return async () => {\n      await this.stateService.init();\n\n      const urls = process.env.URLS as Urls;\n      urls.base ??= this.win.location.origin;\n      this.environmentService.setUrls(urls);\n\n      setTimeout(() => this.notificationsService.init(), 3000);\n      (this.vaultTimeoutService as VaultTimeoutService).init(true);\n      const locale = await this.stateService.getLocale();\n      await (this.i18nService as I18nService).init(locale);\n      (this.eventLoggingService as EventLoggingService).init(true);\n      this.twoFactorService.init();\n      const htmlEl = this.win.document.documentElement;\n      htmlEl.classList.add(\"locale_\" + this.i18nService.translationLocale);\n      await this.themingService.monitorThemeChanges();\n      const containerService = new ContainerService(this.cryptoService);\n      containerService.attachToWindow(this.win);\n    };\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector } from \"@angular/core\";\nimport * as jq from \"jquery\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService as BaseModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Injectable()\nexport class ModalService extends BaseModalService {\n  el: any = null;\n  modalOpen = false;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    applicationRef: ApplicationRef,\n    injector: Injector,\n    private messagingService: MessagingService\n  ) {\n    super(componentFactoryResolver, applicationRef, injector);\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    modalRef.onCreated.pipe(first()).subscribe(() => {\n      const modals = Array.from(document.querySelectorAll(\".modal\"));\n      if (modals.length > 0) {\n        this.el = jq(modals[0]);\n        this.el.modal(\"show\");\n\n        this.el.on(\"show.bs.modal\", () => {\n          modalRef.show();\n          this.messagingService.send(\"modalShow\");\n        });\n        this.el.on(\"shown.bs.modal\", () => {\n          modalRef.shown();\n          this.messagingService.send(\"modalShown\");\n          if (!Utils.isMobileBrowser) {\n            this.el.find(\"*[appAutoFocus]\").focus();\n          }\n        });\n        this.el.on(\"hide.bs.modal\", () => {\n          this.messagingService.send(\"modalClose\");\n        });\n        this.el.on(\"hidden.bs.modal\", () => {\n          modalRef.closed();\n          this.messagingService.send(\"modalClosed\");\n        });\n      }\n    });\n\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      if (this.el != null) {\n        this.el.modal(\"hide\");\n      }\n    });\n  }\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport class FileDownloadBuilder {\n  get blobOptions(): any {\n    const options = this._request.blobOptions ?? {};\n    if (options.type == null) {\n      options.type = this.fileType;\n    }\n    return options;\n  }\n\n  get blob(): Blob {\n    if (this.blobOptions != null) {\n      return new Blob([this._request.blobData], this.blobOptions);\n    } else {\n      return new Blob([this._request.blobData]);\n    }\n  }\n\n  get downloadMethod(): \"save\" | \"open\" {\n    if (this._request.downloadMethod != null) {\n      return this._request.downloadMethod;\n    }\n    return this.fileType != \"application/pdf\" ? \"save\" : \"open\";\n  }\n\n  private get fileType() {\n    const fileNameLower = this._request.fileName.toLowerCase();\n    if (fileNameLower.endsWith(\".pdf\")) {\n      return \"application/pdf\";\n    } else if (fileNameLower.endsWith(\".xlsx\")) {\n      return \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    } else if (fileNameLower.endsWith(\".docx\")) {\n      return \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n    } else if (fileNameLower.endsWith(\".pptx\")) {\n      return \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\n    } else if (fileNameLower.endsWith(\".csv\")) {\n      return \"text/csv\";\n    } else if (fileNameLower.endsWith(\".png\")) {\n      return \"image/png\";\n    } else if (fileNameLower.endsWith(\".jpg\") || fileNameLower.endsWith(\".jpeg\")) {\n      return \"image/jpeg\";\n    } else if (fileNameLower.endsWith(\".gif\")) {\n      return \"image/gif\";\n    }\n    return null;\n  }\n\n  constructor(private readonly _request: FileDownloadRequest) {}\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FileDownloadBuilder } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadBuilder\";\nimport { FileDownloadRequest } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadRequest\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Injectable()\nexport class WebFileDownloadService implements FileDownloadService {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  download(request: FileDownloadRequest): void {\n    const builder = new FileDownloadBuilder(request);\n    const a = window.document.createElement(\"a\");\n    if (builder.downloadMethod === \"save\") {\n      a.download = request.fileName;\n    } else if (!this.platformUtilsService.isSafari()) {\n      a.target = \"_blank\";\n    }\n    a.href = URL.createObjectURL(builder.blob);\n    a.style.position = \"fixed\";\n    window.document.body.appendChild(a);\n    a.click();\n    window.document.body.removeChild(a);\n  }\n}\n","import { APP_INITIALIZER, NgModule } from \"@angular/core\";\nimport { ToastrModule } from \"ngx-toastr\";\n\nimport {\n  JslibServicesModule,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  LOCALES_DIRECTORY,\n  SYSTEM_LANGUAGE,\n  MEMORY_STORAGE,\n} from \"@bitwarden/angular/services/jslib-services.module\";\nimport { ModalService as ModalServiceAbstraction } from \"@bitwarden/angular/services/modal.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { MemoryStorageService } from \"@bitwarden/common/services/memoryStorage.service\";\n\nimport { StateService as StateServiceAbstraction } from \"../../abstractions/state.service\";\nimport { Account } from \"../../models/account\";\nimport { GlobalState } from \"../../models/globalState\";\nimport { BroadcasterMessagingService } from \"../../services/broadcasterMessaging.service\";\nimport { HtmlStorageService } from \"../../services/htmlStorage.service\";\nimport { I18nService } from \"../../services/i18n.service\";\nimport { PasswordRepromptService } from \"../../services/passwordReprompt.service\";\nimport { StateService } from \"../../services/state.service\";\nimport { StateMigrationService } from \"../../services/stateMigration.service\";\nimport { WebPlatformUtilsService } from \"../../services/webPlatformUtils.service\";\nimport { HomeGuard } from \"../guards/home.guard\";\nimport { PermissionsGuard as OrgPermissionsGuard } from \"../organizations/guards/permissions.guard\";\nimport { NavigationPermissionsService as OrgPermissionsService } from \"../organizations/services/navigation-permissions.service\";\n\nimport { EventService } from \"./event.service\";\nimport { InitService } from \"./init.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PolicyListService } from \"./policy-list.service\";\nimport { RouterService } from \"./router.service\";\nimport { WebFileDownloadService } from \"./webFileDownload.service\";\n\n@NgModule({\n  imports: [ToastrModule, JslibServicesModule],\n  declarations: [],\n  providers: [\n    OrgPermissionsService,\n    OrgPermissionsGuard,\n    InitService,\n    RouterService,\n    EventService,\n    PolicyListService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (initService: InitService) => initService.init(),\n      deps: [InitService],\n      multi: true,\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: false,\n    },\n    {\n      provide: I18nServiceAbstraction,\n      useClass: I18nService,\n      deps: [SYSTEM_LANGUAGE, LOCALES_DIRECTORY],\n    },\n    { provide: AbstractStorageService, useClass: HtmlStorageService },\n    {\n      provide: SECURE_STORAGE,\n      // TODO: platformUtilsService.isDev has a helper for this, but using that service here results in a circular dependency.\n      // We have a tech debt item in the backlog to break up platformUtilsService, but in the meantime simply checking the environement here is less cumbersome.\n      useClass: process.env.NODE_ENV === \"development\" ? HtmlStorageService : MemoryStorageService,\n    },\n    {\n      provide: MEMORY_STORAGE,\n      useClass: MemoryStorageService,\n    },\n    {\n      provide: PlatformUtilsServiceAbstraction,\n      useClass: WebPlatformUtilsService,\n    },\n    { provide: MessagingServiceAbstraction, useClass: BroadcasterMessagingService },\n    { provide: ModalServiceAbstraction, useClass: ModalService },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useClass: StateService,\n      deps: [\n        AbstractStorageService,\n        SECURE_STORAGE,\n        MEMORY_STORAGE,\n        LogService,\n        StateMigrationServiceAbstraction,\n        STATE_FACTORY,\n        STATE_SERVICE_USE_CACHE,\n      ],\n    },\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateServiceAbstraction,\n    },\n    {\n      provide: PasswordRepromptServiceAbstraction,\n      useClass: PasswordRepromptService,\n    },\n    {\n      provide: FileDownloadService,\n      useClass: WebFileDownloadService,\n    },\n    HomeGuard,\n  ],\n})\nexport class ServicesModule {}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { GlobalState as BaseGlobalState } from \"@bitwarden/common/models/domain/globalState\";\n\nexport class GlobalState extends BaseGlobalState {\n  theme?: ThemeType = ThemeType.Light;\n  rememberEmail = true;\n}\n","import { I18nService as BaseI18nService } from \"@bitwarden/common/services/i18n.service\";\n\nexport class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string, localesDirectory: string) {\n    super(systemLanguage || \"en-US\", localesDirectory, async (formattedLocale: string) => {\n      const filePath =\n        this.localesDirectory +\n        \"/\" +\n        formattedLocale +\n        \"/messages.json?cache=\" +\n        process.env.CACHE_TAG;\n      const localesResult = await fetch(filePath);\n      const locales = await localesResult.json();\n      return locales;\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"af\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"eo\",\n      \"es\",\n      \"et\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-PT\",\n      \"pt-BR\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n}\n","import { Observable, ReplaySubject } from \"rxjs\";\n\nimport { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  private _locale = new ReplaySubject<string>(1);\n  locale$: Observable<string> = this._locale.asObservable();\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.translationLocale = locale != null ? locale : this.systemLanguage;\n    this._locale.next(this.translationLocale);\n\n    try {\n      this.collator = new Intl.Collator(this.translationLocale, {\n        numeric: true,\n        sensitivity: \"base\",\n      });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1);\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2);\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3);\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { StateMigrationService as BaseStateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\n\nimport { Account } from \"../models/account\";\nimport { GlobalState } from \"../models/globalState\";\n\nexport class StateMigrationService extends BaseStateMigrationService<GlobalState, Account> {\n  protected async migrationStateFrom1To2(): Promise<void> {\n    await super.migrateStateFrom1To2();\n    const globals = (await this.get<GlobalState>(\"global\")) ?? this.stateFactory.createGlobal(null);\n    globals.rememberEmail = (await this.get<boolean>(\"rememberEmail\")) ?? globals.rememberEmail;\n    await this.set(\"global\", globals);\n  }\n}\n","import { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { FolderData } from \"@bitwarden/common/models/data/folderData\";\nimport { SendData } from \"@bitwarden/common/models/data/sendData\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storageOptions\";\nimport { StateService as BaseStateService } from \"@bitwarden/common/services/state.service\";\n\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { Account } from \"../models/account\";\nimport { GlobalState } from \"../models/globalState\";\n\nexport class StateService\n  extends BaseStateService<GlobalState, Account>\n  implements StateServiceAbstraction\n{\n  async addAccount(account: Account) {\n    // Apply web overides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getRememberEmail(options?: StorageOptions) {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberEmail;\n  }\n\n  async setRememberEmail(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCiphers(options);\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCiphers(value, options);\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCollections(options);\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCollections(value, options);\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedFolders(options);\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedFolders(value, options);\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedSends(options);\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedSends(value, options);\n  }\n\n  override async getLastSync(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getLastSync(options);\n  }\n\n  override async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setLastSync(value, options);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nconst routes: Routes = [{ path: \"**\", redirectTo: \"\" }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WildcardRoutingModule {}\n","export class ProviderAddOrganizationRequest {\n  organizationId: string;\n  key: string;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { ProviderAddOrganizationRequest } from \"@bitwarden/common/models/request/provider/providerAddOrganizationRequest\";\n\n@Injectable()\nexport class WebProviderService {\n  constructor(\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private apiService: ApiService\n  ) {}\n\n  async addOrganizationToProvider(providerId: string, organizationId: string) {\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const providerKey = await this.cryptoService.getProviderKey(providerId);\n\n    const encryptedOrgKey = await this.cryptoService.encrypt(orgKey.key, providerKey);\n\n    const request = new ProviderAddOrganizationRequest();\n    request.organizationId = organizationId;\n    request.key = encryptedOrgKey.encryptedString;\n\n    const response = await this.apiService.postProviderAddOrganization(providerId, request);\n    await this.syncService.fullSync(true);\n    return response;\n  }\n\n  async detachOrganizastion(providerId: string, organizationId: string): Promise<any> {\n    await this.apiService.deleteProviderOrganization(providerId, organizationId);\n    await this.syncService.fullSync(true);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"addTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"addTitle\">\n          {{ \"addExistingOrganization\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <ng-container *ngIf=\"!loading\">\n          <table class=\"table table-hover table-list\">\n            <tr *ngFor=\"let o of organizations\">\n              <td width=\"30\">\n                <app-avatar [data]=\"o.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\n              </td>\n              <td>\n                {{ o.name }}\n              </td>\n              <td>\n                <button\n                  class=\"btn btn-outline-secondary pull-right\"\n                  (click)=\"add(o)\"\n                  [disabled]=\"formPromise\"\n                >\n                  Add\n                </button>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\n@Component({\n  selector: \"provider-add-organization\",\n  templateUrl: \"add-organization.component.html\",\n})\nexport class AddOrganizationComponent implements OnInit {\n  @Input() providerId: string;\n  @Input() organizations: Organization[];\n  @Output() onAddedOrganization = new EventEmitter();\n\n  provider: Provider;\n  formPromise: Promise<any>;\n  loading = true;\n\n  constructor(\n    private providerService: ProviderService,\n    private webProviderService: WebProviderService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private validationService: ValidationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    if (this.providerId == null) {\n      return;\n    }\n\n    this.provider = await this.providerService.get(this.providerId);\n\n    this.loading = false;\n  }\n\n  async add(organization: Organization) {\n    if (this.formPromise) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"addOrganizationConfirmation\", organization.name, this.provider.name),\n      organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.webProviderService.addOrganizationToProvider(\n        this.providerId,\n        organization.id\n      );\n      await this.formPromise;\n    } catch (e) {\n      this.validationService.showError(e);\n      return;\n    } finally {\n      this.formPromise = null;\n    }\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"organizationJoinedProvider\")\n    );\n    this.onAddedOrganization.emit();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Permissions } from \"@bitwarden/common/enums/permissions\";\n\n@Injectable()\nexport class PermissionsGuard implements CanActivate {\n  constructor(private providerService: ProviderService, private router: Router) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const provider = await this.providerService.get(route.params.providerId);\n    const permissions = route.data == null ? null : (route.data.permissions as Permissions[]);\n\n    if (\n      (permissions.indexOf(Permissions.AccessEventLogs) !== -1 && provider.canAccessEventLogs) ||\n      (permissions.indexOf(Permissions.ManageProvider) !== -1 && provider.isProviderAdmin) ||\n      (permissions.indexOf(Permissions.ManageUsers) !== -1 && provider.canManageUsers)\n    ) {\n      return true;\n    }\n\n    this.router.navigate([\"/providers\", provider.id]);\n    return false;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\n\n@Injectable()\nexport class ProviderGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private providerService: ProviderService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const provider = await this.providerService.get(route.params.providerId);\n    if (provider == null) {\n      this.router.navigate([\"/\"]);\n      return false;\n    }\n    if (!provider.isProviderAdmin && !provider.enabled) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"providerIsDisabled\"));\n      this.router.navigate([\"/\"]);\n      return false;\n    }\n\n    return true;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header d-flex\">\n    <h1>{{ \"providers\" | i18n }}</h1>\n  </div>\n  <p *ngIf=\"!loaded\" class=\"text-muted\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"loaded\">\n    <table class=\"table table-hover table-list\" *ngIf=\"providers && providers.length\">\n      <tbody>\n        <tr *ngFor=\"let p of providers\">\n          <td width=\"30\">\n            <app-avatar [data]=\"p.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" [routerLink]=\"['/providers', p.id]\">{{ p.name }}</a>\n            <ng-container *ngIf=\"!p.enabled\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-danger\"\n                title=\"{{ 'providerIsDisabled' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"providerIsDisabled\" | i18n }}</span>\n            </ng-container>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"app-providers\",\n  templateUrl: \"providers.component.html\",\n})\nexport class ProvidersComponent implements OnInit {\n  providers: Provider[];\n  loaded = false;\n  actionPromise: Promise<any>;\n\n  constructor(private providerService: ProviderService, private i18nService: I18nService) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    await this.load();\n  }\n\n  async load() {\n    const providers = await this.providerService.getAll();\n    providers.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.providers = providers;\n    this.loaded = true;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"clients\" | i18n }}</h1>\n\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <a class=\"btn btn-sm btn-outline-primary ml-3\" routerLink=\"create\" *ngIf=\"manageOrganizations\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newClientOrganization\" | i18n }}\n    </a>\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"addExistingOrganization()\"\n      *ngIf=\"manageOrganizations && showAddExisting\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"addExistingOrganization\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<ng-container\n  *ngIf=\"!loading && (clients | search: searchText:'organizationName':'id') as searchedClients\"\n>\n  <p *ngIf=\"!searchedClients.length\">{{ \"noClientsInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedClients.length\">\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let o of searchedClients\">\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"o.organizationName\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            ></app-avatar>\n          </td>\n          <td>\n            <a [routerLink]=\"['/organizations', o.organizationId]\">{{ o.organizationName }}</a>\n          </td>\n          <td class=\"table-list-options\" *ngIf=\"manageOrganizations\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(o)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n\n<ng-template #add></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ProviderOrganizationOrganizationDetailsResponse } from \"@bitwarden/common/models/response/provider/providerOrganizationResponse\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\nimport { AddOrganizationComponent } from \"./add-organization.component\";\n\nconst DisallowedPlanTypes = [\n  PlanType.Free,\n  PlanType.FamiliesAnnually2019,\n  PlanType.FamiliesAnnually,\n];\n\n@Component({\n  templateUrl: \"clients.component.html\",\n})\nexport class ClientsComponent implements OnInit {\n  @ViewChild(\"add\", { read: ViewContainerRef, static: true }) addModalRef: ViewContainerRef;\n\n  providerId: any;\n  searchText: string;\n  addableOrganizations: Organization[];\n  loading = true;\n  manageOrganizations = false;\n  showAddExisting = false;\n\n  clients: ProviderOrganizationOrganizationDetailsResponse[];\n  pagedClients: ProviderOrganizationOrganizationDetailsResponse[];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n  protected actionPromise: Promise<any>;\n  private pagedClientsCount = 0;\n\n  constructor(\n    private route: ActivatedRoute,\n    private providerService: ProviderService,\n    private apiService: ApiService,\n    private searchService: SearchService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private validationService: ValidationService,\n    private webProviderService: WebProviderService,\n    private logService: LogService,\n    private modalService: ModalService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n\n      await this.load();\n\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderClients(this.providerId);\n    this.clients = response.data != null && response.data.length > 0 ? response.data : [];\n    this.manageOrganizations =\n      (await this.providerService.get(this.providerId)).type === ProviderUserType.ProviderAdmin;\n    const candidateOrgs = (await this.organizationService.getAll()).filter(\n      (o) => o.isOwner && o.providerId == null\n    );\n    const allowedOrgsIds = await Promise.all(\n      candidateOrgs.map((o) => this.apiService.getOrganization(o.id))\n    ).then((orgs) =>\n      orgs.filter((o) => !DisallowedPlanTypes.includes(o.planType)).map((o) => o.id)\n    );\n    this.addableOrganizations = candidateOrgs.filter((o) => allowedOrgsIds.includes(o.id));\n\n    this.showAddExisting = this.addableOrganizations.length !== 0;\n    this.loading = false;\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.clients && this.clients.length > this.pageSize;\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  async resetPaging() {\n    this.pagedClients = [];\n    this.loadMore();\n  }\n\n  loadMore() {\n    if (!this.clients || this.clients.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedClients.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedClientsCount > this.pageSize) {\n      pagedSize = this.pagedClientsCount;\n    }\n    if (this.clients.length > pagedLength) {\n      this.pagedClients = this.pagedClients.concat(\n        this.clients.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedClientsCount = this.pagedClients.length;\n    this.didScroll = this.pagedClients.length > this.pageSize;\n  }\n\n  async addExistingOrganization() {\n    const [modal] = await this.modalService.openViewRef(\n      AddOrganizationComponent,\n      this.addModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.organizations = this.addableOrganizations;\n        comp.onAddedOrganization.subscribe(async () => {\n          try {\n            await this.load();\n            modal.close();\n          } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n          }\n        });\n      }\n    );\n  }\n\n  async remove(organization: ProviderOrganizationOrganizationDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"detachOrganizationConfirmation\"),\n      organization.organizationName,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.webProviderService.detachOrganizastion(\n      this.providerId,\n      organization.id\n    );\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"detachedOrganization\", organization.organizationName)\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationPlansComponent } from \"src/app/settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  providerId: string;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n    });\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"newClientOrganization\" | i18n }}</h1>\n</div>\n<p>{{ \"newClientOrganizationDesc\" | i18n }}</p>\n<app-organization-plans [providerId]=\"providerId\"></app-organization-plans>\n","export class ProviderUserAcceptRequest {\n  token: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ providerName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinProviderDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ProviderUserAcceptRequest } from \"@bitwarden/common/models/request/provider/providerUserAcceptRequest\";\n\nimport { BaseAcceptComponent } from \"src/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-provider\",\n  templateUrl: \"accept-provider.component.html\",\n})\nexport class AcceptProviderComponent extends BaseAcceptComponent {\n  providerName: string;\n\n  failedMessage = \"providerInviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"providerUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    private apiService: ApiService,\n    platformUtilService: PlatformUtilsService\n  ) {\n    super(router, platformUtilService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params) {\n    const request = new ProviderUserAcceptRequest();\n    request.token = qParams.token;\n\n    await this.apiService.postProviderUserAccept(\n      qParams.providerId,\n      qParams.providerUserId,\n      request\n    );\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"providerInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params) {\n    this.providerName = qParams.providerName;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"form-inline\">\n      <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"start\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n      <span class=\"mx-2\">-</span>\n      <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"end\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n    </div>\n    <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary ml-3\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        <i\n          class=\"bwi bwi-refresh bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-spin': loaded && refreshForm.loading }\"\n        ></i>\n        {{ \"refresh\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\"\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i>\n        <span>{{ \"export\" | i18n }}</span>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n    <thead>\n      <tr>\n        <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n        <th class=\"border-top-0\" width=\"40\">\n          <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n        </th>\n        <th class=\"border-top-0\" width=\"150\">{{ \"user\" | i18n }}</th>\n        <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of events\">\n        <td>{{ e.date | date: \"medium\" }}</td>\n        <td>\n          <i\n            class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n            title=\"{{ e.appName }}, {{ e.ip }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n        </td>\n        <td>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td [innerHTML]=\"e.message\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    class=\"btn btn-block btn-link btn-submit\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && moreBtn.loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\n\nimport { BaseEventsComponent } from \"src/app/common/base.events.component\";\nimport { EventService } from \"src/app/services/event.service\";\n\n@Component({\n  selector: \"provider-events\",\n  templateUrl: \"events.component.html\",\n})\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n  exportFileName = \"provider-events\";\n  providerId: string;\n\n  private providerUsersUserIdMap = new Map<string, any>();\n  private providerUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    private providerService: ProviderService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      eventService,\n      i18nService,\n      exportService,\n      platformUtilsService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n      if (provider == null || !provider.useEvents) {\n        this.router.navigate([\"/providers\", this.providerId]);\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderUsers(this.providerId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.providerUsersIdMap.set(u.id, { name: name, email: u.email });\n      this.providerUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsProvider(\n      this.providerId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    return userId != null && this.providerUsersUserIdMap.has(userId)\n      ? this.providerUsersUserIdMap.get(userId)\n      : null;\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"provider\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"people\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canManageUsers\"\n          >\n            {{ \"people\" | i18n }}\n          </a>\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canAccessEventLogs && accessEvents\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"provider-manage\",\n  templateUrl: \"manage.component.html\",\n})\nexport class ManageComponent implements OnInit {\n  provider: Provider;\n  accessEvents = false;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.provider = await this.providerService.get(params.providerId);\n      this.accessEvents = this.provider.useEvents;\n    });\n  }\n}\n","export class ProviderUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class ProviderUserConfirmRequest {\n  key: string;\n}\n","type ProviderUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class ProviderUserBulkConfirmRequest {\n  keys: ProviderUserBulkRequestEntry[];\n\n  constructor(keys: ProviderUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserBulkConfirmRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkRequest\";\n\nimport { BulkConfirmComponent as OrganizationBulkConfirmComponent } from \"src/app/organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkUserDetails } from \"src/app/organizations/manage/bulk/bulk-status.component\";\n\n@Component({\n  templateUrl:\n    \"../../../../../../../apps/web/src/app/organizations/manage/bulk/bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent extends OrganizationBulkConfirmComponent {\n  @Input() providerId: string;\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === ProviderUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new ProviderUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postProviderUsersPublicKey(this.providerId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getProviderKey(this.providerId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new ProviderUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postProviderUserBulkConfirm(this.providerId, request);\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkRequest\";\n\nimport { BulkRemoveComponent as OrganizationBulkRemoveComponent } from \"src/app/organizations/manage/bulk/bulk-remove.component\";\n\n@Component({\n  templateUrl:\n    \"../../../../../../../apps/web/src/app/organizations/manage/bulk/bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent extends OrganizationBulkRemoveComponent {\n  @Input() providerId: string;\n\n  async deleteUsers() {\n    const request = new ProviderUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyProviderUsers(this.providerId, request);\n  }\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserInviteRequest {\n  emails: string[] = [];\n  type: ProviderUserType;\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserUpdateRequest {\n  type: ProviderUserType;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"providerInviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/provider-users/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeServiceUser\"\n            [value]=\"userType.ServiceUser\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeServiceUser\">\n            {{ \"serviceUser\" | i18n }}\n            <small>{{ \"serviceUserDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeProviderAdmin\"\n            [value]=\"userType.ProviderAdmin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeProviderAdmin\">\n            {{ \"providerAdmin\" | i18n }}\n            <small>{{ \"providerAdminDesc\" | i18n }}</small>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissionsApi\";\nimport { ProviderUserInviteRequest } from \"@bitwarden/common/models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"@bitwarden/common/models/request/provider/providerUserUpdateRequest\";\n\n@Component({\n  selector: \"provider-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() providerUserId: string;\n  @Input() providerId: string;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  emails: string;\n  type: ProviderUserType = ProviderUserType.ServiceUser;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  userType = ProviderUserType;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.providerUserId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getProviderUser(this.providerId, this.providerUserId);\n        this.type = user.type;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new ProviderUserUpdateRequest();\n        request.type = this.type;\n        this.formPromise = this.apiService.putProviderUser(\n          this.providerId,\n          this.providerUserId,\n          request\n        );\n      } else {\n        const request = new ProviderUserInviteRequest();\n        request.emails = this.emails.trim().split(/\\s*,\\s*/);\n        request.type = this.type;\n        this.formPromise = this.apiService.postProviderUserInvite(this.providerId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteProviderUser(this.providerId, this.providerUserId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"people\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span bitBadge badgeType=\"warning\" *ngIf=\"acceptedCount\">{{ acceptedCount }}</span>\n      </button>\n    </div>\n    <div class=\"ml-3\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown ml-3\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"providerUsersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"u | userName\"\n              [email]=\"u.email\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            >\n            </app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"u.twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.ProviderAdmin\">{{ \"providerAdmin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.ServiceUser\">{{ \"serviceUser\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Custom\">{{ \"custom\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"groups(u)\"\n                  *ngIf=\"accessGroups\"\n                >\n                  <i class=\"bwi bwi-fw bwi-sitemap\" aria-hidden=\"true\"></i>\n                  {{ \"groups\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"@bitwarden/common/models/request/provider/providerUserConfirmRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { ProviderUserBulkResponse } from \"@bitwarden/common/models/response/provider/providerUserBulkResponse\";\nimport { ProviderUserUserDetailsResponse } from \"@bitwarden/common/models/response/provider/providerUserResponse\";\n\nimport { BasePeopleComponent } from \"src/app/common/base.people.component\";\nimport { BulkStatusComponent } from \"src/app/organizations/manage/bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"src/app/organizations/manage/entity-events.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\n\n@Component({\n  selector: \"provider-people\",\n  templateUrl: \"people.component.html\",\n})\nexport class PeopleComponent\n  extends BasePeopleComponent<ProviderUserUserDetailsResponse>\n  implements OnInit\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = ProviderUserType;\n  userStatusType = ProviderUserStatusType;\n  providerId: string;\n  accessEvents = false;\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    private router: Router,\n    searchService: SearchService,\n    validationService: ValidationService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    stateService: StateService,\n    private providerService: ProviderService\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n\n      if (!provider.canManageUsers) {\n        this.router.navigate([\"../\"], { relativeTo: this.route });\n        return;\n      }\n\n      this.accessEvents = provider.useEvents;\n\n      await this.load();\n\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n        if (qParams.viewEvents != null) {\n          const user = this.users.filter((u) => u.id === qParams.viewEvents);\n          if (user.length > 0 && user[0].status === ProviderUserStatusType.Confirmed) {\n            this.events(user[0]);\n          }\n        }\n      });\n    });\n  }\n\n  getUsers(): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    return this.apiService.getProviderUsers(this.providerId);\n  }\n\n  deleteUser(id: string): Promise<any> {\n    return this.apiService.deleteProviderUser(this.providerId, id);\n  }\n\n  deactivateUser(id: string): Promise<any> {\n    // Not implemented.\n    return null;\n  }\n\n  activateUser(id: string): Promise<any> {\n    // Not implemented.\n    return null;\n  }\n\n  reinviteUser(id: string): Promise<any> {\n    return this.apiService.postProviderUserReinvite(this.providerId, id);\n  }\n\n  async confirmUser(user: ProviderUserUserDetailsResponse, publicKey: Uint8Array): Promise<any> {\n    const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n    const key = await this.cryptoService.rsaEncrypt(providerKey.key, publicKey.buffer);\n    const request = new ProviderUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postProviderUserConfirm(this.providerId, user.id, request);\n  }\n\n  async edit(user: ProviderUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.providerId = this.providerId;\n        comp.providerUserId = user != null ? user.id : null;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n      }\n    );\n  }\n\n  async events(user: ProviderUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.providerId = this.providerId;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === ProviderUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new ProviderUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyProviderUserReinvite(this.providerId, request);\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  private async showBulkStatus(\n    users: ProviderUserUserDetailsResponse[],\n    filteredUsers: ProviderUserUserDetailsResponse[],\n    request: Promise<ListResponse<ProviderUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"provider\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <div class=\"my-auto d-flex align-items-center pl-1\">\n        <app-avatar [data]=\"provider.name\" size=\"45\" [circle]=\"true\"></app-avatar>\n        <div class=\"org-name ml-3\">\n          <span>{{ provider.name }}</span>\n          <small class=\"text-muted\">{{ \"provider\" | i18n }}</small>\n        </div>\n        <div class=\"ml-3 card border-danger text-danger bg-transparent\" *ngIf=\"!provider.enabled\">\n          <div class=\"card-body py-2\">\n            <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {{ \"providerIsDisabled\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"clients\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i>\n            {{ \"clients\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showManageTab\">\n          <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-sliders\" aria-hidden=\"true\"></i>\n            {{ \"manage\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showSettingsTab\">\n          <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-cogs\" aria-hidden=\"true\"></i>\n            {{ \"settings\" | i18n }}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"providers-layout\",\n  templateUrl: \"providers-layout.component.html\",\n})\nexport class ProvidersLayoutComponent {\n  provider: Provider;\n  private providerId: string;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    this.provider = await this.providerService.get(this.providerId);\n  }\n\n  get showMenuBar() {\n    return this.showManageTab || this.showSettingsTab;\n  }\n\n  get showManageTab() {\n    return this.provider.canManageUsers || this.provider.canAccessEventLogs;\n  }\n\n  get showSettingsTab() {\n    return this.provider.isProviderAdmin;\n  }\n\n  get manageRoute(): string {\n    switch (true) {\n      case this.provider.canManageUsers:\n        return \"manage/people\";\n      case this.provider.canAccessEventLogs:\n        return \"manage/events\";\n    }\n  }\n}\n","export class ProviderUpdateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myProvider\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"provider && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"provider.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"provider.billingEmail\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <app-avatar data=\"{{ provider.name }}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { ProviderUpdateRequest } from \"@bitwarden/common/models/request/provider/providerUpdateRequest\";\nimport { ProviderResponse } from \"@bitwarden/common/models/response/provider/providerResponse\";\n\n@Component({\n  selector: \"provider-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  selfHosted = false;\n  loading = true;\n  provider: ProviderResponse;\n  formPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  private providerId: string;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      try {\n        this.provider = await this.apiService.getProvider(this.providerId);\n      } catch (e) {\n        this.logService.error(`Handled exception: ${e}`);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new ProviderUpdateRequest();\n      request.name = this.provider.name;\n      request.businessName = this.provider.businessName;\n      request.billingEmail = this.provider.billingEmail;\n\n      this.formPromise = this.apiService.putProvider(this.providerId, request).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerUpdated\"));\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\n\n@Component({\n  selector: \"provider-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent {\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      await this.providerService.get(params.providerId);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myProvider\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setupProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"setupProviderLoginDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"src/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-setup-provider\",\n  templateUrl: \"setup-provider.component.html\",\n})\nexport class SetupProviderComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/providers/setup\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    // Empty\n  }\n}\n","export class ProviderSetupRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  token: string;\n  key: string;\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"setupProvider\" | i18n }}</h1>\n  </div>\n  <p>{{ \"setupProviderDesc\" | i18n }}</p>\n\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"loading\">\n    <h2 class=\"mt-5\">{{ \"generalInformation\" | i18n }}</h2>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required />\n      </div>\n      <div class=\"form-group col-6\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"billingEmail\"\n          required\n        />\n      </div>\n    </div>\n\n    <div class=\"mt-4\">\n      <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"submit\" | i18n }}</span>\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n        {{ \"cancel\" | i18n }}\n      </button>\n    </div>\n  </form>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { ProviderSetupRequest } from \"@bitwarden/common/models/request/provider/providerSetupRequest\";\n\n@Component({\n  selector: \"provider-setup\",\n  templateUrl: \"setup.component.html\",\n})\nexport class SetupComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  formPromise: Promise<any>;\n\n  providerId: string;\n  token: string;\n  name: string;\n  billingEmail: string;\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService\n  ) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.providerId == null || qParams.email == null || qParams.token == null;\n\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"emergencyInviteAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.providerId = qParams.providerId;\n      this.token = qParams.token;\n\n      // Check if provider exists, redirect if it does\n      try {\n        const provider = await this.apiService.getProvider(this.providerId);\n        if (provider.name != null) {\n          this.router.navigate([\"/providers\", provider.id], { replaceUrl: true });\n        }\n      } catch (e) {\n        this.validationService.showError(e);\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit();\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  async doSubmit() {\n    try {\n      const shareKey = await this.cryptoService.makeShareKey();\n      const key = shareKey[0].encryptedString;\n\n      const request = new ProviderSetupRequest();\n      request.name = this.name;\n      request.billingEmail = this.billingEmail;\n      request.token = this.token;\n      request.key = key;\n\n      const provider = await this.apiService.postProviderSetup(this.providerId, request);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerSetup\"));\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/providers\", provider.id]);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { Permissions } from \"@bitwarden/common/enums/permissions\";\n\nimport { FrontendLayoutComponent } from \"src/app/layouts/frontend-layout.component\";\nimport { ProvidersComponent } from \"src/app/providers/providers.component\";\n\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { PermissionsGuard } from \"./guards/provider-type.guard\";\nimport { ProviderGuard } from \"./guards/provider.guard\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    component: ProvidersComponent,\n  },\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    children: [\n      {\n        path: \"setup-provider\",\n        component: SetupProviderComponent,\n        data: { titleId: \"setupProvider\" },\n      },\n      {\n        path: \"accept-provider\",\n        component: AcceptProviderComponent,\n        data: { titleId: \"acceptProvider\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"setup\",\n        component: SetupComponent,\n      },\n      {\n        path: \":providerId\",\n        component: ProvidersLayoutComponent,\n        canActivate: [ProviderGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"clients\" },\n          { path: \"clients/create\", component: CreateOrganizationComponent },\n          { path: \"clients\", component: ClientsComponent, data: { titleId: \"clients\" } },\n          {\n            path: \"manage\",\n            component: ManageComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"people\",\n              },\n              {\n                path: \"people\",\n                component: PeopleComponent,\n                canActivate: [PermissionsGuard],\n                data: {\n                  titleId: \"people\",\n                  permissions: [Permissions.ManageUsers],\n                },\n              },\n              {\n                path: \"events\",\n                component: EventsComponent,\n                canActivate: [PermissionsGuard],\n                data: {\n                  titleId: \"eventLogs\",\n                  permissions: [Permissions.AccessEventLogs],\n                },\n              },\n            ],\n          },\n          {\n            path: \"settings\",\n            component: SettingsComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"account\",\n              },\n              {\n                path: \"account\",\n                component: AccountComponent,\n                canActivate: [PermissionsGuard],\n                data: {\n                  titleId: \"myProvider\",\n                  permissions: [Permissions.ManageProvider],\n                },\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProvidersRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { ComponentFactoryResolver, NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\n\nimport { OssModule } from \"src/app/oss.module\";\n\nimport { AddOrganizationComponent } from \"./clients/add-organization.component\";\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { PermissionsGuard } from \"./guards/provider-type.guard\";\nimport { ProviderGuard } from \"./guards/provider.guard\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { BulkConfirmComponent } from \"./manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./manage/bulk/bulk-remove.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { UserAddEditComponent } from \"./manage/user-add-edit.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { ProvidersRoutingModule } from \"./providers-routing.module\";\nimport { WebProviderService } from \"./services/webProvider.service\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, OssModule, JslibModule, ProvidersRoutingModule],\n  declarations: [\n    AcceptProviderComponent,\n    AccountComponent,\n    AddOrganizationComponent,\n    BulkConfirmComponent,\n    BulkRemoveComponent,\n    ClientsComponent,\n    CreateOrganizationComponent,\n    EventsComponent,\n    ManageComponent,\n    PeopleComponent,\n    ProvidersLayoutComponent,\n    SettingsComponent,\n    SetupComponent,\n    SetupProviderComponent,\n    UserAddEditComponent,\n  ],\n  providers: [WebProviderService, ProviderGuard, PermissionsGuard],\n})\nexport class ProvidersModule {\n  constructor(modalService: ModalService, componentFactoryResolver: ComponentFactoryResolver) {\n    modalService.registerComponentFactoryResolver(\n      AddOrganizationComponent,\n      componentFactoryResolver\n    );\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { ProvidersModule } from \"./providers/providers.module\";\n\nconst routes: Routes = [\n  {\n    path: \"providers\",\n    loadChildren: () => ProvidersModule,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class DisableSendPolicy extends BasePolicy {\n  name = \"disableSend\";\n  description = \"disableSendPolicyDesc\";\n  type = PolicyType.DisableSend;\n  component = DisableSendPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-send\",\n  templateUrl: \"disable-send.component.html\",\n})\nexport class DisableSendPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"disableSendExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minComplexity\">{{ \"minComplexityScore\" | i18n }}</label>\n      <select\n        id=\"minComplexity\"\n        name=\"minComplexity\"\n        formControlName=\"minComplexity\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of passwordScores\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"8\"\n        name=\"minLength\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireUpper\"\n      name=\"requireUpper\"\n      formControlName=\"requireUpper\"\n    />\n    <label class=\"form-check-label\" for=\"requireUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireLower\"\n      name=\"requireLower\"\n      formControlName=\"requireLower\"\n    />\n    <label class=\"form-check-label\" for=\"requireLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireNumbers\"\n      name=\"requireNumbers\"\n      formControlName=\"requireNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"requireNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireSpecial\"\n      name=\"requireSpecial\"\n      formControlName=\"requireSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"requireSpecial\">!@#$%^&amp;*</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class MasterPasswordPolicy extends BasePolicy {\n  name = \"masterPassPolicyTitle\";\n  description = \"masterPassPolicyDesc\";\n  type = PolicyType.MasterPassword;\n  component = MasterPasswordPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-master-password\",\n  templateUrl: \"master-password.component.html\",\n})\nexport class MasterPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    minComplexity: [null],\n    minLength: [null],\n    requireUpper: [null],\n    requireLower: [null],\n    requireNumbers: [null],\n    requireSpecial: [null],\n  });\n\n  passwordScores: { name: string; value: number }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    i18nService: I18nService,\n    private organizationService: OrganizationService\n  ) {\n    super();\n\n    this.passwordScores = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"weak\") + \" (0)\", value: 0 },\n      { name: i18nService.t(\"weak\") + \" (1)\", value: 1 },\n      { name: i18nService.t(\"weak\") + \" (2)\", value: 2 },\n      { name: i18nService.t(\"good\") + \" (3)\", value: 3 },\n      { name: i18nService.t(\"strong\") + \" (4)\", value: 4 },\n    ];\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group mb-0\">\n      <label for=\"defaultType\">{{ \"defaultType\" | i18n }}</label>\n      <select\n        id=\"defaultType\"\n        name=\"defaultType\"\n        formControlName=\"defaultType\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of defaultTypes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n  </div>\n  <h3 class=\"mt-4\">{{ \"password\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minLength\"\n        min=\"5\"\n        max=\"128\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumbers\">{{ \"minNumbers\" | i18n }}</label>\n      <input\n        id=\"minNumbers\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumbers\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minNumbers\"\n      />\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minSpecial\">{{ \"minSpecial\" | i18n }}</label>\n      <input\n        id=\"minSpecial\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minSpecial\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minSpecial\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useUpper\"\n      formControlName=\"useUpper\"\n      name=\"useUpper\"\n    />\n    <label class=\"form-check-label\" for=\"useUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useLower\"\n      name=\"useLower\"\n      formControlName=\"useLower\"\n    />\n    <label class=\"form-check-label\" for=\"useLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useNumbers\"\n      name=\"useNumbers\"\n      formControlName=\"useNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"useNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useSpecial\"\n      name=\"useSpecial\"\n      formControlName=\"useSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"useSpecial\">!@#$%^&amp;*</label>\n  </div>\n  <h3 class=\"mt-4\">{{ \"passphrase\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumberWords\">{{ \"minimumNumberOfWords\" | i18n }}</label>\n      <input\n        id=\"minNumberWords\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumberWords\"\n        min=\"3\"\n        max=\"20\"\n        formControlName=\"minNumberWords\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"capitalize\"\n      name=\"capitalize\"\n      formControlName=\"capitalize\"\n    />\n    <label class=\"form-check-label\" for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"includeNumber\"\n      name=\"includeNumber\"\n      formControlName=\"includeNumber\"\n    />\n    <label class=\"form-check-label\" for=\"includeNumber\">{{ \"includeNumber\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PasswordGeneratorPolicy extends BasePolicy {\n  name = \"passwordGenerator\";\n  description = \"passwordGeneratorPolicyDesc\";\n  type = PolicyType.PasswordGenerator;\n  component = PasswordGeneratorPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-password-generator\",\n  templateUrl: \"password-generator.component.html\",\n})\nexport class PasswordGeneratorPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    defaultType: [null],\n    minLength: [null],\n    useUpper: [null],\n    useLower: [null],\n    useNumbers: [null],\n    useSpecial: [null],\n    minNumbers: [null],\n    minSpecial: [null],\n    minNumberWords: [null],\n    capitalize: [null],\n    includeNumber: [null],\n  });\n\n  defaultTypes: { name: string; value: string }[];\n\n  constructor(private formBuilder: FormBuilder, i18nService: I18nService) {\n    super();\n\n    this.defaultTypes = [\n      { name: i18nService.t(\"userPreference\"), value: null },\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PersonalOwnershipPolicy extends BasePolicy {\n  name = \"personalOwnership\";\n  description = \"personalOwnershipPolicyDesc\";\n  type = PolicyType.PersonalOwnership;\n  component = PersonalOwnershipPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-personal-ownership\",\n  templateUrl: \"personal-ownership.component.html\",\n})\nexport class PersonalOwnershipPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"personalOwnershipExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class RequireSsoPolicy extends BasePolicy {\n  name = \"requireSso\";\n  description = \"requireSsoPolicyDesc\";\n  type = PolicyType.RequireSso;\n  component = RequireSsoPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useSso;\n  }\n}\n\n@Component({\n  selector: \"policy-require-sso\",\n  templateUrl: \"require-sso.component.html\",\n})\nexport class RequireSsoPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n<app-callout type=\"warning\">\n  {{ \"requireSsoExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<app-callout type=\"warning\">\n  {{ \"resetPasswordPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"resetPasswordPolicyAutoEnroll\" | i18n }}</h3>\n  <p>{{ \"resetPasswordPolicyAutoEnrollDescription\" | i18n }}</p>\n  <app-callout type=\"warning\">\n    {{ \"resetPasswordPolicyAutoEnrollWarning\" | i18n }}\n  </app-callout>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"autoEnrollEnabled\"\n      name=\"AutoEnrollEnabled\"\n      formControlName=\"autoEnrollEnabled\"\n    />\n    <label class=\"form-check-label\" for=\"autoEnrollEnabled\">\n      {{ \"resetPasswordPolicyAutoEnrollCheckbox\" | i18n }}\n    </label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class ResetPasswordPolicy extends BasePolicy {\n  name = \"resetPasswordPolicy\";\n  description = \"resetPasswordPolicyDescription\";\n  type = PolicyType.ResetPassword;\n  component = ResetPasswordPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useResetPassword;\n  }\n}\n\n@Component({\n  selector: \"policy-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    autoEnrollEnabled: false,\n  });\n\n  defaultTypes: { name: string; value: string }[];\n  showKeyConnectorInfo = false;\n\n  constructor(private formBuilder: FormBuilder, private organizationService: OrganizationService) {\n    super();\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SendOptionsPolicy extends BasePolicy {\n  name = \"sendOptions\";\n  description = \"sendOptionsPolicyDesc\";\n  type = PolicyType.SendOptions;\n  component = SendOptionsPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-send-options\",\n  templateUrl: \"send-options.component.html\",\n})\nexport class SendOptionsPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    disableHideEmail: false,\n  });\n\n  constructor(private formBuilder: FormBuilder) {\n    super();\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"sendOptionsExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"disableHideEmail\"\n      name=\"DisableHideEmail\"\n      formControlName=\"disableHideEmail\"\n    />\n    <label class=\"form-check-label\" for=\"disableHideEmail\">{{ \"disableHideEmail\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SingleOrgPolicy extends BasePolicy {\n  name = \"singleOrg\";\n  description = \"singleOrgDesc\";\n  type = PolicyType.SingleOrg;\n  component = SingleOrgPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-single-org\",\n  templateUrl: \"single-org.component.html\",\n})\nexport class SingleOrgPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    if (!this.enabled.value) {\n      if (policiesEnabledMap.get(PolicyType.RequireSso) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"requireSso\"))\n        );\n      }\n\n      if (policiesEnabledMap.get(PolicyType.MaximumVaultTimeout) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"maximumVaultTimeoutLabel\"))\n        );\n      }\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"singleOrgPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class TwoFactorAuthenticationPolicy extends BasePolicy {\n  name = \"twoStepLoginPolicyTitle\";\n  description = \"twoStepLoginPolicyDesc\";\n  type = PolicyType.TwoFactorAuthentication;\n  component = TwoFactorAuthenticationPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-two-factor-authentication\",\n  templateUrl: \"two-factor-authentication.component.html\",\n})\nexport class TwoFactorAuthenticationPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"twoStepLoginPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { DOCUMENT } from \"@angular/common\";\nimport { Component, Inject, NgZone, OnDestroy, OnInit, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport * as jq from \"jquery\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport Swal from \"sweetalert2\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { InternalFolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SettingsService } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\n\nimport { DisableSendPolicy } from \"./organizations/policies/disable-send.component\";\nimport { MasterPasswordPolicy } from \"./organizations/policies/master-password.component\";\nimport { PasswordGeneratorPolicy } from \"./organizations/policies/password-generator.component\";\nimport { PersonalOwnershipPolicy } from \"./organizations/policies/personal-ownership.component\";\nimport { RequireSsoPolicy } from \"./organizations/policies/require-sso.component\";\nimport { ResetPasswordPolicy } from \"./organizations/policies/reset-password.component\";\nimport { SendOptionsPolicy } from \"./organizations/policies/send-options.component\";\nimport { SingleOrgPolicy } from \"./organizations/policies/single-org.component\";\nimport { TwoFactorAuthenticationPolicy } from \"./organizations/policies/two-factor-authentication.component\";\nimport { PolicyListService } from \"./services/policy-list.service\";\nimport { RouterService } from \"./services/router.service\";\n\nconst BroadcasterSubscriptionId = \"AppComponent\";\nconst IdleTimeout = 60000 * 10; // 10 minutes\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"app.component.html\",\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  private lastActivity: number = null;\n  private idleTimer: number = null;\n  private isIdle = false;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private broadcasterService: BroadcasterService,\n    private folderService: InternalFolderService,\n    private settingsService: SettingsService,\n    private syncService: SyncService,\n    private passwordGenerationService: PasswordGenerationService,\n    private cipherService: CipherService,\n    private authService: AuthService,\n    private router: Router,\n    private toastrService: ToastrService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    private vaultTimeoutService: VaultTimeoutService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private sanitizer: DomSanitizer,\n    private searchService: SearchService,\n    private notificationsService: NotificationsService,\n    private routerService: RouterService,\n    private stateService: StateService,\n    private eventService: EventService,\n    private policyService: PolicyService,\n    protected policyListService: PolicyListService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  ngOnInit() {\n    this.i18nService.locale$.pipe(takeUntil(this.destroy$)).subscribe((locale) => {\n      this.document.documentElement.lang = locale;\n    });\n\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousemove = () => this.recordActivity();\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"loggedIn\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"loggedOut\":\n            this.routerService.setPreviousUrl(null);\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"unlocked\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"authBlocked\":\n            this.routerService.setPreviousUrl(message.url);\n            this.router.navigate([\"/\"]);\n            break;\n          case \"logout\":\n            this.logOut(!!message.expired);\n            break;\n          case \"lockVault\":\n            await this.vaultTimeoutService.lock();\n            break;\n          case \"locked\":\n            this.notificationsService.updateConnection(false);\n            this.router.navigate([\"lock\"]);\n            break;\n          case \"lockedUrl\":\n            this.routerService.setPreviousUrl(message.url);\n            break;\n          case \"syncStarted\":\n            break;\n          case \"syncCompleted\":\n            break;\n          case \"upgradeOrganization\": {\n            const upgradeConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"upgradeOrganizationDesc\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (upgradeConfirmed) {\n              this.router.navigate([\n                \"organizations\",\n                message.organizationId,\n                \"settings\",\n                \"billing\",\n              ]);\n            }\n            break;\n          }\n          case \"premiumRequired\": {\n            const premiumConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"premiumRequiredDesc\"),\n              this.i18nService.t(\"premiumRequired\"),\n              this.i18nService.t(\"learnMore\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (premiumConfirmed) {\n              this.router.navigate([\"settings/premium\"]);\n            }\n            break;\n          }\n          case \"emailVerificationRequired\": {\n            const emailVerificationConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"emailVerificationRequiredDesc\"),\n              this.i18nService.t(\"emailVerificationRequired\"),\n              this.i18nService.t(\"learnMore\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (emailVerificationConfirmed) {\n              this.platformUtilsService.launchUri(\n                \"https://bitwarden.com/help/create-bitwarden-account/\"\n              );\n            }\n            break;\n          }\n          case \"showToast\":\n            this.showToast(message);\n            break;\n          case \"setFullWidth\":\n            this.setFullWidth();\n            break;\n          case \"convertAccountToKeyConnector\":\n            this.router.navigate([\"/remove-password\"]);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n\n    this.router.events.pipe(takeUntil(this.destroy$)).subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        const modals = Array.from(document.querySelectorAll(\".modal\"));\n        for (const modal of modals) {\n          (jq(modal) as any).modal(\"hide\");\n        }\n\n        if (document.querySelector(\".swal-modal\") != null) {\n          Swal.close(undefined);\n        }\n      }\n    });\n\n    this.policyListService.addPolicies([\n      new TwoFactorAuthenticationPolicy(),\n      new MasterPasswordPolicy(),\n      new ResetPasswordPolicy(),\n      new PasswordGeneratorPolicy(),\n      new SingleOrgPolicy(),\n      new RequireSsoPolicy(),\n      new PersonalOwnershipPolicy(),\n      new DisableSendPolicy(),\n      new SendOptionsPolicy(),\n    ]);\n\n    this.setFullWidth();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n  }\n\n  private async logOut(expired: boolean) {\n    await this.eventService.uploadEvents();\n    const userId = await this.stateService.getUserId();\n    await Promise.all([\n      this.eventService.clearEvents(),\n      this.syncService.setLastSync(new Date(0)),\n      this.cryptoService.clearKeys(),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(),\n      this.keyConnectorService.clear(),\n    ]);\n\n    this.searchService.clearIndex();\n    this.authService.logOut(async () => {\n      if (expired) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          this.i18nService.t(\"loggedOut\"),\n          this.i18nService.t(\"loginExpired\")\n        );\n      }\n\n      await this.stateService.clean({ userId: userId });\n      Swal.close();\n      this.router.navigate([\"/\"]);\n    });\n  }\n\n  private async recordActivity() {\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    this.stateService.setLastActive(now);\n    // Idle states\n    if (this.isIdle) {\n      this.isIdle = false;\n      this.idleStateChanged();\n    }\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idleTimer = window.setTimeout(() => {\n      if (!this.isIdle) {\n        this.isIdle = true;\n        this.idleStateChanged();\n      }\n    }, IdleTimeout);\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private idleStateChanged() {\n    if (this.isIdle) {\n      this.notificationsService.disconnectFromInactivity();\n    } else {\n      this.notificationsService.reconnectFromActivity();\n    }\n  }\n\n  private async setFullWidth() {\n    const enableFullWidth = await this.stateService.getEnableFullWidth();\n    if (enableFullWidth) {\n      document.body.classList.add(\"full-width\");\n    } else {\n      document.body.classList.remove(\"full-width\");\n    }\n  }\n}\n","<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"src/app/organizations/policies/base-policy.component\";\n\nexport class DisablePersonalVaultExportPolicy extends BasePolicy {\n  name = \"disablePersonalVaultExport\";\n  description = \"disablePersonalVaultExportDesc\";\n  type = PolicyType.DisablePersonalVaultExport;\n  component = DisablePersonalVaultExportPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-personal-vault-export\",\n  templateUrl: \"disable-personal-vault-export.component.html\",\n})\nexport class DisablePersonalVaultExportPolicyComponent extends BasePolicyComponent {}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\n\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"src/app/organizations/policies/base-policy.component\";\n\nexport class MaximumVaultTimeoutPolicy extends BasePolicy {\n  name = \"maximumVaultTimeout\";\n  description = \"maximumVaultTimeoutDesc\";\n  type = PolicyType.MaximumVaultTimeout;\n  component = MaximumVaultTimeoutPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-maximum-timeout\",\n  templateUrl: \"maximum-vault-timeout.component.html\",\n})\nexport class MaximumVaultTimeoutPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    hours: [null],\n    minutes: [null],\n  });\n\n  constructor(private formBuilder: FormBuilder, private i18nService: I18nService) {\n    super();\n  }\n\n  loadData() {\n    const minutes = this.policyResponse.data?.minutes;\n\n    if (minutes == null) {\n      return;\n    }\n\n    this.data.patchValue({\n      hours: Math.floor(minutes / 60),\n      minutes: minutes % 60,\n    });\n  }\n\n  buildRequestData() {\n    if (this.data.value.hours == null && this.data.value.minutes == null) {\n      return null;\n    }\n\n    return {\n      minutes: this.data.value.hours * 60 + this.data.value.minutes,\n    };\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    const data = this.buildRequestData();\n    if (data?.minutes == null || data?.minutes <= 0) {\n      throw new Error(this.i18nService.t(\"invalidMaximumVaultTimeout\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <label for=\"hours\">{{ \"maximumVaultTimeoutLabel\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AppComponent as BaseAppComponent } from \"src/app/app.component\";\n\nimport { DisablePersonalVaultExportPolicy } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicy } from \"./policies/maximum-vault-timeout.component\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"../../../../apps/web/src/app/app.component.html\",\n})\nexport class AppComponent extends BaseAppComponent {\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.policyListService.addPolicies([\n      new MaximumVaultTimeoutPolicy(),\n      new DisablePersonalVaultExportPolicy(),\n    ]);\n  }\n}\n","import { AbstractControl, ValidationErrors, Validators } from \"@angular/forms\";\n\n/**\n * Runs Validators.required on a field only if it's dirty. This prevents error messages from being displayed\n * to the user prematurely.\n */\nexport function dirtyRequired(control: AbstractControl): ValidationErrors | null {\n  return control.dirty ? Validators.required(control) : null;\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\n\nexport class OrganizationSsoRequest {\n  enabled = false;\n  data: SsoConfigApi;\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { SsoConfigApi } from \"../api/ssoConfigApi\";\n\nimport { View } from \"./view\";\n\nexport class SsoConfigView extends View {\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  openId: {\n    authority: string;\n    clientId: string;\n    clientSecret: string;\n    metadataAddress: string;\n    redirectBehavior: OpenIdConnectRedirectBehavior;\n    getClaimsFromUserInfoEndpoint: boolean;\n    additionalScopes: string;\n    additionalUserIdClaimTypes: string;\n    additionalEmailClaimTypes: string;\n    additionalNameClaimTypes: string;\n    acrValues: string;\n    expectedReturnAcrValue: string;\n  };\n\n  saml: {\n    spNameIdFormat: Saml2NameIdFormat;\n    spOutboundSigningAlgorithm: string;\n    spSigningBehavior: Saml2SigningBehavior;\n    spMinIncomingSigningAlgorithm: boolean;\n    spWantAssertionsSigned: boolean;\n    spValidateCertificates: boolean;\n\n    idpEntityId: string;\n    idpBindingType: Saml2BindingType;\n    idpSingleSignOnServiceUrl: string;\n    idpSingleLogoutServiceUrl: string;\n    idpX509PublicCert: string;\n    idpOutboundSigningAlgorithm: string;\n    idpAllowUnsolicitedAuthnResponse: boolean;\n    idpAllowOutboundLogoutRequests: boolean;\n    idpWantAuthnRequestsSigned: boolean;\n  };\n\n  constructor(api: SsoConfigApi) {\n    super();\n    if (api == null) {\n      return;\n    }\n\n    this.configType = api.configType;\n\n    this.keyConnectorEnabled = api.keyConnectorEnabled;\n    this.keyConnectorUrl = api.keyConnectorUrl;\n\n    if (this.configType === SsoType.OpenIdConnect) {\n      this.openId = {\n        authority: api.authority,\n        clientId: api.clientId,\n        clientSecret: api.clientSecret,\n        metadataAddress: api.metadataAddress,\n        redirectBehavior: api.redirectBehavior,\n        getClaimsFromUserInfoEndpoint: api.getClaimsFromUserInfoEndpoint,\n        additionalScopes: api.additionalScopes,\n        additionalUserIdClaimTypes: api.additionalUserIdClaimTypes,\n        additionalEmailClaimTypes: api.additionalEmailClaimTypes,\n        additionalNameClaimTypes: api.additionalNameClaimTypes,\n        acrValues: api.acrValues,\n        expectedReturnAcrValue: api.expectedReturnAcrValue,\n      };\n    } else if (this.configType === SsoType.Saml2) {\n      this.saml = {\n        spNameIdFormat: api.spNameIdFormat,\n        spOutboundSigningAlgorithm: api.spOutboundSigningAlgorithm,\n        spSigningBehavior: api.spSigningBehavior,\n        spMinIncomingSigningAlgorithm: api.spMinIncomingSigningAlgorithm,\n        spWantAssertionsSigned: api.spWantAssertionsSigned,\n        spValidateCertificates: api.spValidateCertificates,\n\n        idpEntityId: api.idpEntityId,\n        idpBindingType: api.idpBindingType,\n        idpSingleSignOnServiceUrl: api.idpSingleSignOnServiceUrl,\n        idpSingleLogoutServiceUrl: api.idpSingleLogoutServiceUrl,\n        idpX509PublicCert: api.idpX509PublicCert,\n        idpOutboundSigningAlgorithm: api.idpOutboundSigningAlgorithm,\n        idpAllowUnsolicitedAuthnResponse: api.idpAllowUnsolicitedAuthnResponse,\n        idpWantAuthnRequestsSigned: api.idpWantAuthnRequestsSigned,\n\n        // Value is inverted in the view model (allow instead of disable)\n        idpAllowOutboundLogoutRequests:\n          api.idpDisableOutboundLogoutRequests == null\n            ? null\n            : !api.idpDisableOutboundLogoutRequests,\n      };\n    }\n  }\n}\n","export class View {}\n","import { Directive, Input, OnInit, Self } from \"@angular/core\";\nimport { ControlValueAccessor, FormControl, NgControl, Validators } from \"@angular/forms\";\n\nimport { dirtyRequired } from \"@bitwarden/angular/validators/dirty.validator\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Directive()\nexport abstract class BaseCvaComponent implements ControlValueAccessor, OnInit {\n  get describedById() {\n    return this.showDescribedBy ? this.controlId + \"Desc\" : null;\n  }\n\n  get showDescribedBy() {\n    return this.helperText != null || this.controlDir.control.hasError(\"required\");\n  }\n\n  get isRequired() {\n    return (\n      this.controlDir.control.hasValidator(Validators.required) ||\n      this.controlDir.control.hasValidator(dirtyRequired)\n    );\n  }\n\n  @Input() label: string;\n  @Input() controlId: string;\n  @Input() helperText: string;\n\n  internalControl = new FormControl(\"\");\n\n  protected onChange: any;\n  protected onTouched: any;\n\n  constructor(@Self() public controlDir: NgControl) {\n    this.controlDir.valueAccessor = this;\n  }\n\n  ngOnInit() {\n    this.internalControl.valueChanges.subscribe(this.onValueChangesInternal);\n  }\n\n  onBlurInternal() {\n    this.onTouched();\n  }\n\n  // CVA interfaces\n  writeValue(value: string) {\n    this.internalControl.setValue(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if (isDisabled) {\n      this.internalControl.disable();\n    } else {\n      this.internalControl.enable();\n    }\n  }\n\n  protected onValueChangesInternal: any = (value: string) => this.onChange(value);\n  // End CVA interfaces\n}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [attr.id]=\"controlId\"\n      [attr.aria-describedby]=\"describedById\"\n      [formControl]=\"internalControl\"\n      (blur)=\"onBlurInternal()\"\n    />\n    <label class=\"form-check-label\" [attr.for]=\"controlId\">{{ label }}</label>\n  </div>\n  <small *ngIf=\"showDescribedBy\" [attr.id]=\"describedById\" class=\"form-text text-muted\">{{\n    helperText\n  }}</small>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-checkbox\",\n  templateUrl: \"input-checkbox.component.html\",\n})\nexport class InputCheckboxComponent extends BaseCvaComponent {}\n","<div class=\"form-group\">\n  <label [attr.for]=\"controlId\">\n    {{ label }}\n    <small *ngIf=\"isRequired\" class=\"text-muted form-text d-inline\"\n      >({{ \"required\" | i18n }})</small\n    >\n  </label>\n  <select\n    class=\"form-control\"\n    [attr.id]=\"controlId\"\n    [attr.aria-invalid]=\"controlDir.control.invalid\"\n    [formControl]=\"internalControl\"\n    (blur)=\"onBlurInternal()\"\n  >\n    <option *ngFor=\"let o of selectOptions\" [ngValue]=\"o.value\" disabled=\"{{ o.disabled }}\">\n      {{ o.name }}\n    </option>\n  </select>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { SelectOptions } from \"@bitwarden/angular/interfaces/selectOptions\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-select\",\n  templateUrl: \"select.component.html\",\n})\nexport class SelectComponent extends BaseCvaComponent {\n  @Input() selectOptions: SelectOptions[];\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"input[appInputStripSpaces]\",\n})\nexport class InputStripSpacesDirective {\n  constructor(private el: ElementRef<HTMLInputElement>) {}\n\n  @HostListener(\"input\") onInput() {\n    this.el.nativeElement.value = this.el.nativeElement.value.replace(/ /g, \"\");\n  }\n}\n","import { Directive, ElementRef, OnDestroy, OnInit } from \"@angular/core\";\nimport { NgControl } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\n\n@Directive({\n  selector: \"[appA11yInvalid]\",\n})\nexport class A11yInvalidDirective implements OnDestroy, OnInit {\n  private sub: Subscription;\n\n  constructor(private el: ElementRef<HTMLInputElement>, private formControlDirective: NgControl) {}\n\n  ngOnInit() {\n    this.sub = this.formControlDirective.control.statusChanges.subscribe((status) => {\n      if (status === \"INVALID\") {\n        this.el.nativeElement.setAttribute(\"aria-invalid\", \"true\");\n      } else if (status === \"VALID\") {\n        this.el.nativeElement.setAttribute(\"aria-invalid\", \"false\");\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub?.unsubscribe();\n  }\n}\n","<div class=\"form-group\">\n  <label>{{ label }}</label>\n  <div class=\"input-group\">\n    <input class=\"form-control\" readonly [value]=\"controlValue\" />\n    <div class=\"input-group-append\" *ngIf=\"showLaunch\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        appA11yTitle=\"{{ 'launch' | i18n }}\"\n        (click)=\"launchUri(controlValue)\"\n      >\n        <i class=\"bwi bwi-lg bwi-external-link\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <div class=\"input-group-append\" *ngIf=\"showCopy\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n        (click)=\"copy(controlValue)\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-text-readonly\",\n  templateUrl: \"input-text-readonly.component.html\",\n})\nexport class InputTextReadOnlyComponent {\n  @Input() controlValue: string;\n  @Input() label: string;\n  @Input() showCopy = true;\n  @Input() showLaunch = false;\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  copy(value: string) {\n    this.platformUtilsService.copyToClipboard(value);\n  }\n\n  launchUri(url: string) {\n    this.platformUtilsService.launchUri(url);\n  }\n}\n","<div class=\"form-group\">\n  <label [attr.for]=\"controlId\">\n    {{ label }}\n    <small *ngIf=\"isRequired\" class=\"text-muted form-text d-inline\"\n      >({{ \"required\" | i18n }})</small\n    >\n  </label>\n  <input\n    [formControl]=\"internalControl\"\n    class=\"form-control\"\n    [attr.id]=\"controlId\"\n    [attr.aria-describedby]=\"describedById\"\n    [attr.aria-invalid]=\"controlDir.control.invalid\"\n    (blur)=\"onBlurInternal()\"\n  />\n  <div *ngIf=\"showDescribedBy\" [attr.id]=\"describedById\">\n    <small\n      *ngIf=\"helperText != null && !controlDir.control.hasError(helperTextSameAsError)\"\n      class=\"form-text text-muted\"\n    >\n      {{ helperText }}\n    </small>\n    <small class=\"error-inline\" *ngIf=\"controlDir.control.hasError('required')\" role=\"alert\">\n      <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n      <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n      {{\n        controlDir.control.hasError(helperTextSameAsError)\n          ? helperText\n          : (\"fieldRequiredError\" | i18n: label)\n      }}\n    </small>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-text[label][controlId]\",\n  templateUrl: \"input-text.component.html\",\n})\nexport class InputTextComponent extends BaseCvaComponent implements OnInit {\n  @Input() helperTextSameAsError: string;\n  @Input() requiredErrorMessage: string;\n  @Input() stripSpaces = false;\n\n  transformValue: (value: string) => string = null;\n\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.stripSpaces) {\n      this.transformValue = this.doStripSpaces;\n    }\n  }\n\n  writeValue(value: string) {\n    this.internalControl.setValue(value == null ? \"\" : value);\n  }\n\n  protected onValueChangesInternal: any = (value: string) => {\n    let newValue = value;\n    if (this.transformValue != null) {\n      newValue = this.transformValue(value);\n      this.internalControl.setValue(newValue, { emitEvent: false });\n    }\n    this.onChange(newValue);\n  };\n\n  protected onValueChangeInternal(value: string) {\n    let newValue = value;\n    if (this.transformValue != null) {\n      newValue = this.transformValue(value);\n      this.internalControl.setValue(newValue, { emitEvent: false });\n    }\n  }\n\n  private doStripSpaces(value: string) {\n    return value.replace(/ /g, \"\");\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"singleSignOn\" | i18n }}</h1>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [formGroup]=\"ssoConfigForm\"\n  [appApiAction]=\"formPromise\"\n  *ngIf=\"!loading\"\n>\n  <p>\n    {{ \"ssoPolicyHelpStart\" | i18n }}\n    <a routerLink=\"../policies\">{{ \"ssoPolicyHelpLink\" | i18n }}</a>\n    {{ \"ssoPolicyHelpEnd\" | i18n }}\n    <br />\n    {{ \"ssoPolicyHelpKeyConnector\" | i18n }}\n  </p>\n\n  <!-- Root form -->\n  <ng-container>\n    <app-input-checkbox\n      controlId=\"enabled\"\n      [formControl]=\"enabled\"\n      [label]=\"'allowSso' | i18n\"\n      [helperText]=\"'allowSsoDesc' | i18n\"\n    ></app-input-checkbox>\n\n    <div class=\"form-group\">\n      <label>{{ \"memberDecryptionOption\" | i18n }}</label>\n      <div class=\"form-check form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionPass\"\n          [value]=\"false\"\n          formControlName=\"keyConnectorEnabled\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionPass\">\n          {{ \"masterPass\" | i18n }}\n          <small>{{ \"memberDecryptionPassDesc\" | i18n }}</small>\n        </label>\n      </div>\n      <div class=\"form-check mt-2 form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionKey\"\n          [value]=\"true\"\n          formControlName=\"keyConnectorEnabled\"\n          [attr.disabled]=\"!organization.useKeyConnector || null\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionKey\">\n          {{ \"keyConnector\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/about-key-connector/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n          <small>{{ \"memberDecryptionKeyConnectorDesc\" | i18n }}</small>\n        </label>\n      </div>\n    </div>\n\n    <!-- Key Connector -->\n    <ng-container *ngIf=\"ssoConfigForm.get('keyConnectorEnabled').value\">\n      <app-callout type=\"warning\" [useAlertRole]=\"true\">\n        {{ \"keyConnectorWarning\" | i18n }}\n      </app-callout>\n\n      <div class=\"form-group\">\n        <label for=\"keyConnectorUrl\">\n          {{ \"keyConnectorUrl\" | i18n }}\n          <small class=\"text-muted form-text d-inline\">({{ \"required\" | i18n }})</small>\n        </label>\n        <div class=\"input-group\">\n          <input\n            class=\"form-control\"\n            formControlName=\"keyConnectorUrl\"\n            id=\"keyConnectorUrl\"\n            aria-describedby=\"keyConnectorUrlDesc\"\n            (change)=\"haveTestedKeyConnector = false\"\n            appInputStripSpaces\n            appA11yInvalid\n          />\n          <div class=\"input-group-append\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary\"\n              (click)=\"validateKeyConnectorUrl()\"\n              [disabled]=\"!enableTestKeyConnector\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n                *ngIf=\"keyConnectorUrl.pending\"\n              ></i>\n              <span *ngIf=\"!keyConnectorUrl.pending\">\n                {{ \"keyConnectorTest\" | i18n }}\n              </span>\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"haveTestedKeyConnector\" id=\"keyConnectorUrlDesc\" aria-live=\"polite\">\n          <small\n            class=\"error-inline\"\n            *ngIf=\"keyConnectorUrl.hasError('invalidUrl'); else keyConnectorSuccess\"\n          >\n            <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n            <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n            {{ \"keyConnectorTestFail\" | i18n }}\n          </small>\n          <ng-template #keyConnectorSuccess>\n            <small class=\"text-success\">\n              <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n              {{ \"keyConnectorTestSuccess\" | i18n }}\n            </small>\n          </ng-template>\n        </div>\n      </div>\n    </ng-container>\n\n    <app-select\n      controlId=\"type\"\n      [label]=\"'type' | i18n\"\n      [selectOptions]=\"ssoTypeOptions\"\n      formControlName=\"configType\"\n    >\n    </app-select>\n  </ng-container>\n\n  <!-- OIDC -->\n  <div\n    *ngIf=\"ssoConfigForm.get('configType').value === ssoType.OpenIdConnect\"\n    [formGroup]=\"openIdForm\"\n  >\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"openIdConnectConfig\" | i18n }}</h2>\n\n      <app-input-text-readonly\n        [label]=\"'callbackPath' | i18n\"\n        [controlValue]=\"callbackPath\"\n      ></app-input-text-readonly>\n\n      <app-input-text-readonly\n        [label]=\"'signedOutCallbackPath' | i18n\"\n        [controlValue]=\"signedOutCallbackPath\"\n      ></app-input-text-readonly>\n\n      <app-input-text\n        [label]=\"'authority' | i18n\"\n        controlId=\"authority\"\n        [stripSpaces]=\"true\"\n        formControlName=\"authority\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'clientId' | i18n\"\n        controlId=\"clientId\"\n        [stripSpaces]=\"true\"\n        formControlName=\"clientId\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'clientSecret' | i18n\"\n        controlId=\"clientSecret\"\n        [stripSpaces]=\"true\"\n        formControlName=\"clientSecret\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'metadataAddress' | i18n\"\n        controlId=\"metadataAddress\"\n        [stripSpaces]=\"true\"\n        [helperText]=\"'openIdAuthorityRequired' | i18n\"\n        formControlName=\"metadataAddress\"\n      ></app-input-text>\n\n      <app-select\n        controlId=\"redirectBehavior\"\n        [label]=\"'oidcRedirectBehavior' | i18n\"\n        [selectOptions]=\"connectRedirectOptions\"\n        formControlName=\"redirectBehavior\"\n      >\n      </app-select>\n\n      <app-input-checkbox\n        controlId=\"getClaimsFromUserInfoEndpoint\"\n        formControlName=\"getClaimsFromUserInfoEndpoint\"\n        [label]=\"'getClaimsFromUserInfoEndpoint' | i18n\"\n      ></app-input-checkbox>\n\n      <!-- Optional customizations -->\n      <div\n        class=\"section-header d-flex flex-row align-items-center mt-3 mb-3\"\n        (click)=\"toggleOpenIdCustomizations()\"\n      >\n        <h3 class=\"mb-0 mr-2\" id=\"customizations-header\">\n          {{ \"openIdOptionalCustomizations\" | i18n }}\n        </h3>\n        <button\n          class=\"mb-1 btn btn-link\"\n          type=\"button\"\n          appStopClick\n          role=\"button\"\n          aria-controls=\"customizations\"\n          [attr.aria-expanded]=\"showOpenIdCustomizations\"\n          aria-labelledby=\"customizations-header\"\n        >\n          <i\n            class=\"bwi\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-down': !showOpenIdCustomizations,\n              'bwi-chevron-up': showOpenIdCustomizations\n            }\"\n          ></i>\n        </button>\n      </div>\n      <div id=\"customizations\" [hidden]=\"!showOpenIdCustomizations\">\n        <app-input-text\n          [label]=\"'additionalScopes' | i18n\"\n          controlId=\"additionalScopes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalScopes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'additionalUserIdClaimTypes' | i18n\"\n          controlId=\"additionalUserIdClaimTypes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalUserIdClaimTypes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'additionalEmailClaimTypes' | i18n\"\n          controlId=\"additionalEmailClaimTypes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalEmailClaimTypes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'additionalNameClaimTypes' | i18n\"\n          controlId=\"additionalNameClaimTypes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalNameClaimTypes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'acrValues' | i18n\"\n          controlId=\"acrValues\"\n          helperText=\"acr_values\"\n          formControlName=\"acrValues\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'expectedReturnAcrValue' | i18n\"\n          controlId=\"expectedReturnAcrValue\"\n          helperText=\"acr_validation\"\n          formControlName=\"expectedReturnAcrValue\"\n        ></app-input-text>\n      </div>\n    </div>\n  </div>\n\n  <!-- SAML2 SP -->\n  <div *ngIf=\"ssoConfigForm.get('configType').value === ssoType.Saml2\" [formGroup]=\"samlForm\">\n    <!-- SAML2 SP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlSpConfig\" | i18n }}</h2>\n\n      <app-input-text-readonly\n        [label]=\"'spEntityId' | i18n\"\n        [controlValue]=\"spEntityId\"\n      ></app-input-text-readonly>\n\n      <app-input-text-readonly\n        [label]=\"'spMetadataUrl' | i18n\"\n        [controlValue]=\"spMetadataUrl\"\n        [showLaunch]=\"true\"\n      ></app-input-text-readonly>\n\n      <app-input-text-readonly\n        [label]=\"'spAcsUrl' | i18n\"\n        [controlValue]=\"spAcsUrl\"\n      ></app-input-text-readonly>\n\n      <app-select\n        controlId=\"spNameIdFormat\"\n        [label]=\"'spNameIdFormat' | i18n\"\n        [selectOptions]=\"saml2NameIdFormatOptions\"\n        formControlName=\"spNameIdFormat\"\n      >\n      </app-select>\n\n      <app-select\n        controlId=\"spOutboundSigningAlgorithm\"\n        [label]=\"'spOutboundSigningAlgorithm' | i18n\"\n        [selectOptions]=\"samlSigningAlgorithmOptions\"\n        formControlName=\"spOutboundSigningAlgorithm\"\n      >\n      </app-select>\n\n      <app-select\n        controlId=\"spSigningBehavior\"\n        [label]=\"'spSigningBehavior' | i18n\"\n        [selectOptions]=\"saml2SigningBehaviourOptions\"\n        formControlName=\"spSigningBehavior\"\n      >\n      </app-select>\n\n      <app-select\n        controlId=\"spMinIncomingSigningAlgorithm\"\n        [label]=\"'spMinIncomingSigningAlgorithm' | i18n\"\n        [selectOptions]=\"samlSigningAlgorithmOptions\"\n        formControlName=\"spMinIncomingSigningAlgorithm\"\n      >\n      </app-select>\n\n      <app-input-checkbox\n        controlId=\"spWantAssertionsSigned\"\n        formControlName=\"spWantAssertionsSigned\"\n        [label]=\"'spWantAssertionsSigned' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"spValidateCertificates\"\n        formControlName=\"spValidateCertificates\"\n        [label]=\"'spValidateCertificates' | i18n\"\n      ></app-input-checkbox>\n    </div>\n\n    <!-- SAML2 IDP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlIdpConfig\" | i18n }}</h2>\n\n      <app-input-text\n        [label]=\"'idpEntityId' | i18n\"\n        controlId=\"idpEntityId\"\n        formControlName=\"idpEntityId\"\n      ></app-input-text>\n\n      <app-select\n        controlId=\"idpBindingType\"\n        [label]=\"'idpBindingType' | i18n\"\n        [selectOptions]=\"saml2BindingTypeOptions\"\n        formControlName=\"idpBindingType\"\n      >\n      </app-select>\n\n      <app-input-text\n        [label]=\"'idpSingleSignOnServiceUrl' | i18n\"\n        controlId=\"idpSingleSignOnServiceUrl\"\n        [helperText]=\"'idpSingleSignOnServiceUrlRequired' | i18n\"\n        [stripSpaces]=\"true\"\n        formControlName=\"idpSingleSignOnServiceUrl\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'idpSingleLogoutServiceUrl' | i18n\"\n        controlId=\"idpSingleLogoutServiceUrl\"\n        [stripSpaces]=\"true\"\n        formControlName=\"idpSingleLogoutServiceUrl\"\n      ></app-input-text>\n\n      <div class=\"form-group\">\n        <label for=\"idpX509PublicCert\">\n          {{ \"idpX509PublicCert\" | i18n }}\n          <small class=\"text-muted form-text d-inline\">({{ \"required\" | i18n }})</small>\n        </label>\n        <textarea\n          formControlName=\"idpX509PublicCert\"\n          class=\"form-control form-control-sm text-monospace\"\n          rows=\"6\"\n          id=\"idpX509PublicCert\"\n          appA11yInvalid\n          aria-describedby=\"idpX509PublicCertDesc\"\n        ></textarea>\n        <small\n          id=\"idpX509PublicCertDesc\"\n          class=\"error-inline\"\n          role=\"alert\"\n          *ngIf=\"samlForm.get('idpX509PublicCert').hasError('required')\"\n        >\n          <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n          {{ \"fieldRequiredError\" | i18n: (\"idpX509PublicCert\" | i18n) }}\n        </small>\n      </div>\n\n      <app-select\n        controlId=\"idpOutboundSigningAlgorithm\"\n        [label]=\"'idpOutboundSigningAlgorithm' | i18n\"\n        [selectOptions]=\"samlSigningAlgorithmOptions\"\n        formControlName=\"idpOutboundSigningAlgorithm\"\n      >\n      </app-select>\n\n      <!--TODO: Uncomment once Unsolicited IdP Response is supported-->\n      <!-- <app-input-checkbox\n        controlId=\"idpAllowUnsolicitedAuthnResponse\"\n        formControlName=\"idpAllowUnsolicitedAuthnResponse\"\n        [label]=\"'idpAllowUnsolicitedAuthnResponse' | i18n\"\n      ></app-input-checkbox> -->\n\n      <app-input-checkbox\n        controlId=\"idpAllowOutboundLogoutRequests\"\n        formControlName=\"idpAllowOutboundLogoutRequests\"\n        [label]=\"'idpAllowOutboundLogoutRequests' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"idpWantAuthnRequestsSigned\"\n        formControlName=\"idpWantAuthnRequestsSigned\"\n        [label]=\"'idpSignAuthenticationRequests' | i18n\"\n      ></app-input-checkbox>\n    </div>\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n  <div\n    id=\"errorSummary\"\n    class=\"error-summary text-danger\"\n    *ngIf=\"this.getErrorCount(ssoConfigForm) as errorCount\"\n  >\n    <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n    {{\n      (errorCount === 1 ? \"formErrorSummarySingle\" : \"formErrorSummaryPlural\") | i18n: errorCount\n    }}\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { AbstractControl, FormBuilder, FormGroup } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { SelectOptions } from \"@bitwarden/angular/interfaces/selectOptions\";\nimport { dirtyRequired } from \"@bitwarden/angular/validators/dirty.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"@bitwarden/common/enums/ssoEnums\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SsoConfigApi } from \"@bitwarden/common/models/api/ssoConfigApi\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSsoRequest } from \"@bitwarden/common/models/request/organization/organizationSsoRequest\";\nimport { OrganizationSsoResponse } from \"@bitwarden/common/models/response/organization/organizationSsoResponse\";\nimport { SsoConfigView } from \"@bitwarden/common/models/view/ssoConfigView\";\n\nconst defaultSigningAlgorithm = \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\";\n\n@Component({\n  selector: \"app-org-manage-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent implements OnInit {\n  readonly ssoType = SsoType;\n\n  readonly ssoTypeOptions: SelectOptions[] = [\n    { name: this.i18nService.t(\"selectType\"), value: SsoType.None, disabled: true },\n    { name: \"OpenID Connect\", value: SsoType.OpenIdConnect },\n    { name: \"SAML 2.0\", value: SsoType.Saml2 },\n  ];\n\n  readonly samlSigningAlgorithms = [\n    \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha384\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha512\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\",\n  ];\n\n  readonly saml2SigningBehaviourOptions: SelectOptions[] = [\n    {\n      name: \"If IdP Wants Authn Requests Signed\",\n      value: Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned,\n    },\n    { name: \"Always\", value: Saml2SigningBehavior.Always },\n    { name: \"Never\", value: Saml2SigningBehavior.Never },\n  ];\n  readonly saml2BindingTypeOptions: SelectOptions[] = [\n    { name: \"Redirect\", value: Saml2BindingType.HttpRedirect },\n    { name: \"HTTP POST\", value: Saml2BindingType.HttpPost },\n  ];\n  readonly saml2NameIdFormatOptions: SelectOptions[] = [\n    { name: \"Not Configured\", value: Saml2NameIdFormat.NotConfigured },\n    { name: \"Unspecified\", value: Saml2NameIdFormat.Unspecified },\n    { name: \"Email Address\", value: Saml2NameIdFormat.EmailAddress },\n    { name: \"X.509 Subject Name\", value: Saml2NameIdFormat.X509SubjectName },\n    { name: \"Windows Domain Qualified Name\", value: Saml2NameIdFormat.WindowsDomainQualifiedName },\n    { name: \"Kerberos Principal Name\", value: Saml2NameIdFormat.KerberosPrincipalName },\n    { name: \"Entity Identifier\", value: Saml2NameIdFormat.EntityIdentifier },\n    { name: \"Persistent\", value: Saml2NameIdFormat.Persistent },\n    { name: \"Transient\", value: Saml2NameIdFormat.Transient },\n  ];\n\n  readonly connectRedirectOptions: SelectOptions[] = [\n    { name: \"Redirect GET\", value: OpenIdConnectRedirectBehavior.RedirectGet },\n    { name: \"Form POST\", value: OpenIdConnectRedirectBehavior.FormPost },\n  ];\n\n  showOpenIdCustomizations = false;\n\n  loading = true;\n  haveTestedKeyConnector = false;\n  organizationId: string;\n  organization: Organization;\n  formPromise: Promise<any>;\n\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  enabled = this.formBuilder.control(false);\n\n  openIdForm = this.formBuilder.group(\n    {\n      authority: [\"\", dirtyRequired],\n      clientId: [\"\", dirtyRequired],\n      clientSecret: [\"\", dirtyRequired],\n      metadataAddress: [],\n      redirectBehavior: [OpenIdConnectRedirectBehavior.RedirectGet, dirtyRequired],\n      getClaimsFromUserInfoEndpoint: [],\n      additionalScopes: [],\n      additionalUserIdClaimTypes: [],\n      additionalEmailClaimTypes: [],\n      additionalNameClaimTypes: [],\n      acrValues: [],\n      expectedReturnAcrValue: [],\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  samlForm = this.formBuilder.group(\n    {\n      spNameIdFormat: [Saml2NameIdFormat.NotConfigured],\n      spOutboundSigningAlgorithm: [defaultSigningAlgorithm],\n      spSigningBehavior: [Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned],\n      spMinIncomingSigningAlgorithm: [defaultSigningAlgorithm],\n      spWantAssertionsSigned: [],\n      spValidateCertificates: [],\n\n      idpEntityId: [\"\", dirtyRequired],\n      idpBindingType: [Saml2BindingType.HttpRedirect],\n      idpSingleSignOnServiceUrl: [],\n      idpSingleLogoutServiceUrl: [],\n      idpX509PublicCert: [\"\", dirtyRequired],\n      idpOutboundSigningAlgorithm: [defaultSigningAlgorithm],\n      idpAllowUnsolicitedAuthnResponse: [],\n      idpAllowOutboundLogoutRequests: [true],\n      idpWantAuthnRequestsSigned: [],\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  ssoConfigForm = this.formBuilder.group({\n    configType: [SsoType.None],\n    keyConnectorEnabled: [false],\n    keyConnectorUrl: [\"\"],\n    openId: this.openIdForm,\n    saml: this.samlForm,\n  });\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.ssoConfigForm.get(\"configType\").valueChanges.subscribe((newType: SsoType) => {\n      if (newType === SsoType.OpenIdConnect) {\n        this.openIdForm.enable();\n        this.samlForm.disable();\n      } else if (newType === SsoType.Saml2) {\n        this.openIdForm.disable();\n        this.samlForm.enable();\n      } else {\n        this.openIdForm.disable();\n        this.samlForm.disable();\n      }\n    });\n\n    this.samlForm\n      .get(\"spSigningBehavior\")\n      .valueChanges.subscribe(() =>\n        this.samlForm.get(\"idpX509PublicCert\").updateValueAndValidity()\n      );\n\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    const ssoSettings = await this.apiService.getOrganizationSso(this.organizationId);\n    this.populateForm(ssoSettings);\n\n    this.callbackPath = ssoSettings.urls.callbackPath;\n    this.signedOutCallbackPath = ssoSettings.urls.signedOutCallbackPath;\n    this.spEntityId = ssoSettings.urls.spEntityId;\n    this.spMetadataUrl = ssoSettings.urls.spMetadataUrl;\n    this.spAcsUrl = ssoSettings.urls.spAcsUrl;\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.validateForm(this.ssoConfigForm);\n\n    if (this.ssoConfigForm.get(\"keyConnectorEnabled\").value) {\n      await this.validateKeyConnectorUrl();\n    }\n\n    if (!this.ssoConfigForm.valid) {\n      this.readOutErrors();\n      return;\n    }\n\n    const request = new OrganizationSsoRequest();\n    request.enabled = this.enabled.value;\n    request.data = SsoConfigApi.fromView(this.ssoConfigForm.value as SsoConfigView);\n\n    this.formPromise = this.apiService.postOrganizationSso(this.organizationId, request);\n\n    try {\n      const response = await this.formPromise;\n      this.populateForm(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"ssoSettingsSaved\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  async validateKeyConnectorUrl() {\n    if (this.haveTestedKeyConnector) {\n      return;\n    }\n\n    this.keyConnectorUrl.markAsPending();\n\n    try {\n      await this.apiService.getKeyConnectorAlive(this.keyConnectorUrl.value);\n      this.keyConnectorUrl.updateValueAndValidity();\n    } catch {\n      this.keyConnectorUrl.setErrors({\n        invalidUrl: true,\n      });\n    }\n\n    this.haveTestedKeyConnector = true;\n  }\n\n  toggleOpenIdCustomizations() {\n    this.showOpenIdCustomizations = !this.showOpenIdCustomizations;\n  }\n\n  getErrorCount(form: FormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof FormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n\n  get enableTestKeyConnector() {\n    return (\n      this.ssoConfigForm.get(\"keyConnectorEnabled\").value &&\n      !Utils.isNullOrWhitespace(this.keyConnectorUrl?.value)\n    );\n  }\n\n  get keyConnectorUrl() {\n    return this.ssoConfigForm.get(\"keyConnectorUrl\");\n  }\n\n  get samlSigningAlgorithmOptions(): SelectOptions[] {\n    return this.samlSigningAlgorithms.map((algorithm) => ({ name: algorithm, value: algorithm }));\n  }\n\n  private validateForm(form: FormGroup) {\n    Object.values(form.controls).forEach((control: AbstractControl) => {\n      if (control.disabled) {\n        return;\n      }\n\n      if (control instanceof FormGroup) {\n        this.validateForm(control);\n      } else {\n        control.markAsDirty();\n        control.markAsTouched();\n        control.updateValueAndValidity();\n      }\n    });\n  }\n\n  private populateForm(ssoSettings: OrganizationSsoResponse) {\n    this.enabled.setValue(ssoSettings.enabled);\n    if (ssoSettings.data != null) {\n      const ssoConfigView = new SsoConfigView(ssoSettings.data);\n      this.ssoConfigForm.patchValue(ssoConfigView);\n    }\n  }\n\n  private readOutErrors() {\n    const errorText = this.i18nService.t(\"error\");\n    const errorCount = this.getErrorCount(this.ssoConfigForm);\n    const errorCountText = this.i18nService.t(\n      errorCount === 1 ? \"formErrorSummarySingle\" : \"formErrorSummaryPlural\",\n      errorCount.toString()\n    );\n\n    const div = document.createElement(\"div\");\n    div.className = \"sr-only\";\n    div.id = \"srErrorCount\";\n    div.setAttribute(\"aria-live\", \"polite\");\n    div.innerText = errorText + \": \" + errorCountText;\n\n    const existing = document.getElementById(\"srErrorCount\");\n    if (existing != null) {\n      existing.remove();\n    }\n\n    document.body.append(div);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { Permissions } from \"@bitwarden/common/enums/permissions\";\n\nimport { PermissionsGuard } from \"src/app/organizations/guards/permissions.guard\";\nimport { OrganizationLayoutComponent } from \"src/app/organizations/layouts/organization-layout.component\";\nimport { ManageComponent } from \"src/app/organizations/manage/manage.component\";\nimport { NavigationPermissionsService } from \"src/app/organizations/services/navigation-permissions.service\";\n\nimport { SsoComponent } from \"./manage/sso.component\";\n\nconst routes: Routes = [\n  {\n    path: \"organizations/:organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, PermissionsGuard],\n    children: [\n      {\n        path: \"manage\",\n        component: ManageComponent,\n        canActivate: [PermissionsGuard],\n        data: {\n          permissions: NavigationPermissionsService.getPermissions(\"manage\"),\n        },\n        children: [\n          {\n            path: \"sso\",\n            component: SsoComponent,\n            canActivate: [PermissionsGuard],\n            data: {\n              permissions: [Permissions.ManageSso],\n            },\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\n\nimport { InputCheckboxComponent } from \"./components/input-checkbox.component\";\nimport { InputTextReadOnlyComponent } from \"./components/input-text-readonly.component\";\nimport { InputTextComponent } from \"./components/input-text.component\";\nimport { SelectComponent } from \"./components/select.component\";\nimport { SsoComponent } from \"./manage/sso.component\";\nimport { OrganizationsRoutingModule } from \"./organizations-routing.module\";\n\n// Form components are for use in the SSO Configuration Form only and should not be exported for use elsewhere.\n// They will be deprecated by the Component Library.\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    JslibModule,\n    OrganizationsRoutingModule,\n  ],\n  declarations: [\n    InputCheckboxComponent,\n    InputTextComponent,\n    InputTextReadOnlyComponent,\n    SelectComponent,\n    SsoComponent,\n  ],\n})\nexport class OrganizationsModule {}\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\n\nimport { OssRoutingModule } from \"src/app/oss-routing.module\";\nimport { OssModule } from \"src/app/oss.module\";\nimport { ServicesModule } from \"src/app/services/services.module\";\nimport { WildcardRoutingModule } from \"src/app/wildcard-routing.module\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { OrganizationsModule } from \"./organizations/organizations.module\";\nimport { DisablePersonalVaultExportPolicyComponent } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicyComponent } from \"./policies/maximum-vault-timeout.component\";\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    OssModule,\n    JslibModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ServicesModule,\n    InfiniteScrollModule,\n    DragDropModule,\n    AppRoutingModule,\n    OssRoutingModule,\n    OrganizationsModule, // Must be after OssRoutingModule for competing routes to resolve properly\n    RouterModule,\n    WildcardRoutingModule, // Needs to be last to catch all non-existing routes\n  ],\n  declarations: [\n    AppComponent,\n    DisablePersonalVaultExportPolicyComponent,\n    MaximumVaultTimeoutPolicyComponent,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport \"bootstrap\";\nimport \"jquery\";\nimport \"popper.js\";\n\nrequire(\"src/scss/styles.scss\");\nrequire(\"src/scss/tailwind.css\");\n\nimport { AppModule } from \"./app.module\";\n\nif (process.env.NODE_ENV === \"production\") {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Collects the user's master password, or if they are using Key Connector, prompts for an OTP via email.\n * This is exposed to the parent component via the ControlValueAccessor interface (e.g. bind it to a FormControl).\n * Use UserVerificationService to verify the user's input.\n */\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class UserVerificationComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    this.secret.valueChanges.subscribe((secret: string) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: secret,\n    });\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\n\nimport { ValidationService } from \"../services/validation.service\";\n\n/**\n * Provides error handling, in particular for any error returned by the server in an api call.\n * Attach it to a <form> element and provide the name of the class property that will hold the api call promise.\n * e.g. <form [appApiAction]=\"this.formPromise\">\n * Any errors/rejections that occur will be intercepted and displayed as error toasts.\n */\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if ((e as ErrorResponse).captchaRequired) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface CardRuleEntry {\n  cardLength: number;\n  blocks: number[];\n}\n\n// See https://baymard.com/checkout-usability/credit-card-patterns for\n// all possible credit card spacing patterns. For now, we just handle\n// the below.\nconst numberFormats: Record<string, CardRuleEntry[]> = {\n  Visa: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Mastercard: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Maestro: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 13, blocks: [4, 4, 5] },\n    { cardLength: 15, blocks: [4, 6, 5] },\n    { cardLength: 19, blocks: [4, 4, 4, 4, 3] },\n  ],\n  Discover: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  \"Diners Club\": [{ cardLength: 14, blocks: [4, 6, 4] }],\n  JCB: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  UnionPay: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 19, blocks: [6, 13] },\n  ],\n  Amex: [{ cardLength: 15, blocks: [4, 6, 5] }],\n  Other: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n};\n\n@Pipe({ name: \"creditCardNumber\" })\nexport class CreditCardNumberPipe implements PipeTransform {\n  transform(creditCardNumber: string, brand: string): string {\n    let rules = numberFormats[brand];\n\n    if (rules == null) {\n      rules = numberFormats[\"Other\"];\n    }\n\n    const cardLength = creditCardNumber.length;\n\n    let matchingRule = rules.find((r) => r.cardLength == cardLength);\n    if (matchingRule == null) {\n      matchingRule = rules[0];\n    }\n\n    const blocks = matchingRule.blocks;\n\n    const chunks: string[] = [];\n    let total = 0;\n\n    blocks.forEach((c) => {\n      chunks.push(creditCardNumber.slice(total, total + c));\n      total += c;\n    });\n\n    // Append the remaining part\n    if (cardLength > total) {\n      chunks.push(creditCardNumber.slice(total));\n    }\n\n    return chunks.join(\" \");\n  }\n}\n","import { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AvatarComponent } from \"./components/avatar.component\";\nimport { CalloutComponent } from \"./components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"./components/export-scope-callout.component\";\nimport { IconComponent } from \"./components/icon.component\";\nimport { BitwardenToastModule } from \"./components/toastr.component\";\nimport { A11yInvalidDirective } from \"./directives/a11y-invalid.directive\";\nimport { A11yTitleDirective } from \"./directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"./directives/api-action.directive\";\nimport { AutofocusDirective } from \"./directives/autofocus.directive\";\nimport { BlurClickDirective } from \"./directives/blur-click.directive\";\nimport { BoxRowDirective } from \"./directives/box-row.directive\";\nimport { FallbackSrcDirective } from \"./directives/fallback-src.directive\";\nimport { InputStripSpacesDirective } from \"./directives/input-strip-spaces.directive\";\nimport { InputVerbatimDirective } from \"./directives/input-verbatim.directive\";\nimport { NotPremiumDirective } from \"./directives/not-premium.directive\";\nimport { SelectCopyDirective } from \"./directives/select-copy.directive\";\nimport { StopClickDirective } from \"./directives/stop-click.directive\";\nimport { StopPropDirective } from \"./directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"./directives/true-false-value.directive\";\nimport { ColorPasswordCountPipe } from \"./pipes/color-password-count.pipe\";\nimport { ColorPasswordPipe } from \"./pipes/color-password.pipe\";\nimport { CreditCardNumberPipe } from \"./pipes/credit-card-number.pipe\";\nimport { EllipsisPipe } from \"./pipes/ellipsis.pipe\";\nimport { I18nPipe } from \"./pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"./pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"./pipes/search.pipe\";\nimport { UserNamePipe } from \"./pipes/user-name.pipe\";\n\n@NgModule({\n  imports: [\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    AvatarComponent,\n    BlurClickDirective,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n  ],\n  exports: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    AvatarComponent,\n    BitwardenToastModule,\n    BlurClickDirective,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n  ],\n  providers: [CreditCardNumberPipe, DatePipe, I18nPipe, SearchPipe, UserNamePipe],\n})\nexport class JslibModule {}\n","import { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nexport class DynamicTreeNode<T extends CollectionView | FolderView> {\n  fullList: T[];\n  nestedList: TreeNode<T>[];\n\n  hasId(id: string): boolean {\n    return this.fullList != null && this.fullList.filter((i: T) => i.id === id).length > 0;\n  }\n\n  constructor(init?: Partial<DynamicTreeNode<T>>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { from, mergeMap, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ServiceUtils } from \"@bitwarden/common/misc/serviceUtils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"./models/dynamic-tree-node.model\";\n\nconst NestingDelimiter = \"/\";\n\n@Injectable()\nexport class VaultFilterService {\n  constructor(\n    protected stateService: StateService,\n    protected organizationService: OrganizationService,\n    protected folderService: FolderService,\n    protected cipherService: CipherService,\n    protected collectionService: CollectionService,\n    protected policyService: PolicyService\n  ) {}\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await this.stateService.setCollapsedGroupings(Array.from(collapsedFilterNodes));\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    return new Set(await this.stateService.getCollapsedGroupings());\n  }\n\n  async buildOrganizations(): Promise<Organization[]> {\n    return await this.organizationService.getAll();\n  }\n\n  buildNestedFolders(organizationId?: string): Observable<DynamicTreeNode<FolderView>> {\n    const transformation = async (storedFolders: FolderView[]) => {\n      let folders: FolderView[];\n      if (organizationId != null) {\n        const ciphers = await this.cipherService.getAllDecrypted();\n        const orgCiphers = ciphers.filter((c) => c.organizationId == organizationId);\n        folders = storedFolders.filter(\n          (f) =>\n            orgCiphers.filter((oc) => oc.folderId == f.id).length > 0 ||\n            ciphers.filter((c) => c.folderId == f.id).length < 1\n        );\n      } else {\n        folders = storedFolders;\n      }\n      const nestedFolders = await this.getAllFoldersNested(folders);\n      return new DynamicTreeNode<FolderView>({\n        fullList: folders,\n        nestedList: nestedFolders,\n      });\n    };\n\n    return this.folderService.folderViews$.pipe(\n      mergeMap((folders) => from(transformation(folders)))\n    );\n  }\n\n  async buildCollections(organizationId?: string): Promise<DynamicTreeNode<CollectionView>> {\n    const storedCollections = await this.collectionService.getAllDecrypted();\n    let collections: CollectionView[];\n    if (organizationId != null) {\n      collections = storedCollections.filter((c) => c.organizationId === organizationId);\n    } else {\n      collections = storedCollections;\n    }\n    const nestedCollections = await this.collectionService.getAllNested(collections);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: collections,\n      nestedList: nestedCollections,\n    });\n  }\n\n  async checkForSingleOrganizationPolicy(): Promise<boolean> {\n    return await this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n  }\n\n  async checkForPersonalOwnershipPolicy(): Promise<boolean> {\n    return await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership);\n  }\n\n  protected async getAllFoldersNested(folders?: FolderView[]): Promise<TreeNode<FolderView>[]> {\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getFolderNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllFoldersNested();\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform(\n    items: any[],\n    searchText: string,\n    prop1?: string,\n    prop2?: string,\n    prop3?: string\n  ): any[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (\n        prop1 != null &&\n        i[prop1] != null &&\n        i[prop1].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop2 != null &&\n        i[prop2] != null &&\n        i[prop2].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop3 != null &&\n        i[prop3] != null &&\n        i[prop3].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\n\n@Injectable()\nexport class ValidationService {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { DeviceVerificationRequest } from \"../models/request/deviceVerificationRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationApiKeyRequest } from \"../models/request/organizationApiKeyRequest\";\nimport { OrganizationConnectionRequest } from \"../models/request/organizationConnectionRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingHistoryResponse } from \"../models/response/billingHistoryResponse\";\nimport { BillingPaymentResponse } from \"../models/response/billingPaymentResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DeviceVerificationResponse } from \"../models/response/deviceVerificationResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationApiKeyInformationResponse } from \"../models/response/organizationApiKeyInformationResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organizationConnectionResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organizationSponsorshipSyncStatusResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SsoPreValidateResponse } from \"../models/response/ssoPreValidateResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport abstract class ApiService {\n  send: (\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ) => Promise<any>;\n\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | ApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  deleteAccount: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<any>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<any>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postAccountRequestOTP: () => Promise<void>;\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postConvertToKeyConnector: () => Promise<void>;\n\n  getUserBillingHistory: () => Promise<BillingHistoryResponse>;\n  getUserBillingPayment: () => Promise<BillingPaymentResponse>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getFullCipherDetails: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getCollectionDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionGroupDetailsResponse>;\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n  getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroup: (organizationId: string, id: string) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  putPolicy: (\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ) => Promise<PolicyResponse>;\n\n  getOrganizationUser: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserDetailsResponse>;\n  getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n  getOrganizationUsers: (\n    organizationId: string\n  ) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n  getOrganizationUserResetPasswordDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserResetPasswordDetailsReponse>;\n  postOrganizationUserInvite: (\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ) => Promise<any>;\n  postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n  postManyOrganizationUserReinvite: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  postOrganizationUserAccept: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ) => Promise<any>;\n  postOrganizationUserConfirm: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ) => Promise<any>;\n  postOrganizationUsersPublicKey: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n  postOrganizationUserBulkConfirm: (\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  putOrganizationUser: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ) => Promise<any>;\n  putOrganizationUserGroups: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPasswordEnrollment: (\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPassword: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ) => Promise<any>;\n  deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  deactivateOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  deactivateManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  activateOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  activateManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  getSync: () => Promise<SyncResponse>;\n  postImportDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<any>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n  getDeviceVerificationSettings: () => Promise<DeviceVerificationResponse>;\n  putDeviceVerificationSettings: (\n    request: DeviceVerificationRequest\n  ) => Promise<DeviceVerificationResponse>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n\n  getOrganization: (id: string) => Promise<OrganizationResponse>;\n  getOrganizationBilling: (id: string) => Promise<BillingResponse>;\n  getOrganizationSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getCloudCommunicationsEnabled: () => Promise<boolean>;\n  abstract getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId: string\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  deleteOrganizationConnection: (id: string) => Promise<void>;\n  getOrganizationLicense: (id: string, installationId: string) => Promise<any>;\n  getOrganizationTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  getOrganizationAutoEnrollStatus: (\n    identifier: string\n  ) => Promise<OrganizationAutoEnrollStatusResponse>;\n  getOrganizationSso: (id: string) => Promise<OrganizationSsoResponse>;\n  postOrganization: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  putOrganization: (\n    id: string,\n    request: OrganizationUpdateRequest\n  ) => Promise<OrganizationResponse>;\n  putOrganizationTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<any>;\n  postLeaveOrganization: (id: string) => Promise<any>;\n  postOrganizationLicense: (data: FormData) => Promise<OrganizationResponse>;\n  postOrganizationLicenseUpdate: (id: string, data: FormData) => Promise<any>;\n  postOrganizationApiKey: (\n    id: string,\n    request: OrganizationApiKeyRequest\n  ) => Promise<ApiKeyResponse>;\n  getOrganizationApiKeyInformation: (\n    id: string\n  ) => Promise<ListResponse<OrganizationApiKeyInformationResponse>>;\n  postOrganizationRotateApiKey: (\n    id: string,\n    request: OrganizationApiKeyRequest\n  ) => Promise<ApiKeyResponse>;\n  postOrganizationSso: (\n    id: string,\n    request: OrganizationSsoRequest\n  ) => Promise<OrganizationSsoResponse>;\n  postOrganizationUpgrade: (\n    id: string,\n    request: OrganizationUpgradeRequest\n  ) => Promise<PaymentResponse>;\n  postOrganizationUpdateSubscription: (\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ) => Promise<void>;\n  postOrganizationSeat: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  postOrganizationStorage: (id: string, request: StorageRequest) => Promise<any>;\n  postOrganizationPayment: (id: string, request: PaymentRequest) => Promise<any>;\n  postOrganizationVerifyBank: (id: string, request: VerifyBankRequest) => Promise<any>;\n  postOrganizationCancel: (id: string) => Promise<any>;\n  postOrganizationReinstate: (id: string) => Promise<any>;\n  deleteOrganization: (id: string, request: SecretVerificationRequest) => Promise<any>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n  getOrganizationKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  postOrganizationKeys: (\n    id: string,\n    request: OrganizationKeysRequest\n  ) => Promise<OrganizationKeysResponse>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<any>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<SsoPreValidateResponse>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  getSponsorshipSyncStatus: (\n    sponsoredOrgId: string\n  ) => Promise<OrganizationSponsorshipSyncStatusResponse>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  saveWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: any, b: any) => number;\n  sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuf: ArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","import { EventType } from \"../enums/eventType\";\n\nexport abstract class EventService {\n  collect: (eventType: EventType, cipherId?: string, uploadImmediately?: boolean) => Promise<any>;\n  uploadEvents: (userId?: string) => Promise<any>;\n  clearEvents: (userId?: string) => Promise<any>;\n}\n","import { EventView } from \"../models/view/eventView\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport abstract class FileDownloadService {\n  download: (request: FileDownloadRequest) => void;\n}\n","import { Observable } from \"rxjs\";\n\nimport { FolderData } from \"../../models/data/folderData\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { FolderView } from \"../../models/view/folderView\";\n\nexport abstract class FolderService {\n  folders$: Observable<Folder[]>;\n  folderViews$: Observable<FolderView[]>;\n\n  clearCache: () => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n}\n\nexport abstract class InternalFolderService extends FolderService {\n  upsert: (folder: FolderData | FolderData[]) => Promise<void>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<void>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nexport abstract class I18nService {\n  locale$: Observable<string>;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { Organization } from \"../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n  time: (label: string) => void;\n  timeEnd: (label: string) => [number, number];\n}\n","import { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport abstract class OrganizationService {\n  get: (id: string) => Promise<Organization>;\n  getByIdentifier: (identifier: string) => Promise<Organization>;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  save: (orgs: { [id: string]: OrganizationData }) => Promise<any>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: (userId?: string) => Promise<boolean>;\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  getApplicationVersion: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  supportsSecureStorage: () => boolean;\n}\n","import { PolicyType } from \"../enums/policyType\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nexport abstract class PolicyService {\n  clearCache: () => void;\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n  getPolicyForOrganization: (policyType: PolicyType, organizationId: string) => Promise<Policy>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  getMasterPasswordPolicyOptions: (policies?: Policy[]) => Promise<MasterPasswordPolicyOptions>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts: BehaviorSubject<{ [userId: string]: T }>;\n  activeAccount: BehaviorSubject<string>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricLocked: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricLocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getHasPremiumPersonally: (options?: StorageOptions) => Promise<boolean>;\n  setHasPremiumPersonally: (value: boolean, options?: StorageOptions) => Promise<void>;\n  setHasPremiumFromOrganization: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getHasPremiumFromOrganization: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecodedToken: (options?: StorageOptions) => Promise<any>;\n  setDecodedToken: (value: any, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableGravitars: (options?: StorageOptions) => Promise<boolean>;\n  setEnableGravitars: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<{ [orgId: string]: EncryptedOrganizationKeyData }>;\n  setEncryptedOrganizationKeys: (\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLegacyEtmKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setLegacyEtmKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<any>;\n  setLocalData: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getUsernameGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setUsernameGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getGeneratorOptions: (options?: StorageOptions) => Promise<any>;\n  setGeneratorOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  getSettings: (options?: StorageOptions) => Promise<any>;\n  setSettings: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n}\n","import {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { Verification } from \"../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  // Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n  Organization_SponsorshipsSynced = 1608,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_KDF_ITERATIONS = 100000;\nexport const SEND_KDF_ITERATIONS = 100000;\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","export enum Permissions {\n  AccessEventLogs,\n  AccessImportExport,\n  AccessReports,\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  ManageAllCollections,\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  ManageAssignedCollections,\n  ManageGroups,\n  ManageOrganization,\n  ManagePolicies,\n  ManageProvider,\n  ManageUsers,\n  ManageUsersPassword,\n  CreateNewCollections,\n  EditAnyCollection,\n  DeleteAnyCollection,\n  EditAssignedCollections,\n  DeleteAssignedCollections,\n  ManageSso,\n  ManageBilling,\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/itemView\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/treeNode\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","export function getDomain(host: string): string | null {\n  return null;\n}\n\nexport function isValid(host: string): boolean {\n  return true;\n}\n","/* eslint-disable no-useless-escape */\nimport * as tldjs from \"tldjs\";\n\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: any = null;\n  static tldEndingRegex =\n    /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n    Utils.global = Utils.isNode && !Utils.isBrowser ? global : window;\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = window.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return window.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(window.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(window.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.hostname !== \"\" ? url.hostname : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    let httpUrl = uriString.startsWith(\"http://\") || uriString.startsWith(\"https://\");\n    if (\n      !httpUrl &&\n      uriString.indexOf(\"://\") < 0 &&\n      Utils.tldEndingRegex.test(uriString) &&\n      uriString.indexOf(\"@\") < 0\n    ) {\n      uriString = \"http://\" + uriString;\n      httpUrl = true;\n    }\n\n    if (httpUrl) {\n      try {\n        const url = Utils.getUrlObject(uriString);\n        const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n        if (!validHostname) {\n          return null;\n        }\n\n        if (url.hostname === \"localhost\" || Utils.validIpAddress(url.hostname)) {\n          return url.hostname;\n        }\n\n        const urlDomain =\n          tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n        return urlDomain != null ? urlDomain : url.hostname;\n      } catch (e) {\n        // Invalid domain, try another approach below.\n      }\n    }\n\n    try {\n      const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n      if (domain != null) {\n        return domain;\n      }\n    } catch {\n      return null;\n    }\n\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction(i18nService: I18nService, prop: string) {\n    return (a: any, b: any) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop], b[prop])\n        : a[prop].localeCompare(b[prop]);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  private static validIpAddress(ipString: string): boolean {\n    const ipRegex =\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return ipRegex.test(ipString);\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (window != null) {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { LoginUriApi } from \"./loginUriApi\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { AttachmentResponse } from \"../response/attachmentResponse\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/cardApi\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipherResponse\";\n\nimport { AttachmentData } from \"./attachmentData\";\nimport { CardData } from \"./cardData\";\nimport { FieldData } from \"./fieldData\";\nimport { IdentityData } from \"./identityData\";\nimport { LoginData } from \"./loginData\";\nimport { PasswordHistoryData } from \"./passwordHistoryData\";\nimport { SecureNoteData } from \"./secureNoteData\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/fieldApi\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../api/identityApi\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { LoginApi } from \"../api/loginApi\";\n\nimport { LoginUriData } from \"./loginUriData\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/passwordHistoryResponse\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachmentData\";\nimport { AttachmentView } from \"../view/attachmentView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string; // Readable size, ex: \"4.2 KB\" or \"1.43 GB\"\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      let cryptoService: CryptoService;\n      const containerService = (Utils.global as any).bitwardenContainerService;\n      if (containerService) {\n        cryptoService = containerService.getCryptoService();\n      } else {\n        throw new Error(\"global bitwardenContainerService not initialized.\");\n      }\n\n      try {\n        const orgKey = await cryptoService.getOrgKey(orgId);\n        const decValue = await cryptoService.decryptToBytes(this.key, orgKey ?? encKey);\n        view.key = new SymmetricCryptoKey(decValue);\n      } catch (e) {\n        // TODO: error?\n      }\n    }\n\n    return view;\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n}\n","import { CardData } from \"../data/cardData\";\nimport { CardView } from \"../view/cardView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secureNote\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Cipher extends Domain {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: any;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, localData: any = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      [\"id\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n}\n","import { CollectionData } from \"../data/collectionData\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncString {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      // data and header\n      const encType = encryptedStringOrType as EncryptionType;\n\n      if (iv != null) {\n        this.encryptedString = encType + \".\" + iv + \"|\" + data;\n      } else {\n        this.encryptedString = encType + \".\" + data;\n      }\n\n      // mac\n      if (mac != null) {\n        this.encryptedString += \"|\" + mac;\n      }\n\n      this.encryptionType = encType;\n      this.data = data;\n      this.iv = iv;\n      this.mac = mac;\n\n      return;\n    }\n\n    this.encryptedString = encryptedStringOrType as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const headerPieces = this.encryptedString.split(\".\");\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        this.encryptionType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = this.encryptedString.split(\"|\");\n      this.encryptionType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    switch (this.encryptionType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      if (key == null) {\n        key = await cryptoService.getOrgKey(orgId);\n      }\n      this.decryptedValue = await cryptoService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/fieldData\";\nimport { FieldView } from \"../view/fieldView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n}\n","import { FolderData } from \"../data/folderData\";\nimport { FolderView } from \"../view/folderView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n}\n","import { IdentityData } from \"../data/identityData\";\nimport { IdentityView } from \"../view/identityView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n}\n","import { LoginData } from \"../data/loginData\";\nimport { LoginView } from \"../view/loginView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { LoginUri } from \"./loginUri\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/loginUriData\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n        match: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","import { PasswordHistoryData } from \"../data/passwordHistoryData\";\nimport { PasswordHistoryView } from \"../view/passwordHistoryView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(this, obj, {\n      password: null,\n    });\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secureNoteData\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nimport Domain from \"./domainBase\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n\n  static initFromJson(jsonResult: SymmetricCryptoKey): SymmetricCryptoKey {\n    if (jsonResult == null) {\n      return jsonResult;\n    }\n\n    if (jsonResult.keyB64 != null) {\n      jsonResult.key = Utils.fromB64ToArray(jsonResult.keyB64).buffer;\n    }\n    if (jsonResult.encKeyB64 != null) {\n      jsonResult.encKey = Utils.fromB64ToArray(jsonResult.encKeyB64).buffer;\n    }\n    if (jsonResult.macKeyB64 != null) {\n      jsonResult.macKey = Utils.fromB64ToArray(jsonResult.macKeyB64).buffer;\n    }\n\n    return jsonResult;\n  }\n}\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/encString\";\nimport { CardView } from \"../view/cardView\";\n\nexport class CardExport {\n  static template(): CardExport {\n    const req = new CardExport();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: CardExport, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: CardExport, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/encString\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/fieldView\";\n\nexport class FieldExport {\n  static template(): FieldExport {\n    const req = new FieldExport();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: FieldExport, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: FieldExport, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identityView\";\n\nexport class IdentityExport {\n  static template(): IdentityExport {\n    const req = new IdentityExport();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: IdentityExport, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: IdentityExport, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/encString\";\nimport { LoginUri as LoginUriDomain } from \"../domain/loginUri\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nexport class LoginUriExport {\n  static template(): LoginUriExport {\n    const req = new LoginUriExport();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUriExport, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUriExport, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/loginView\";\n\nimport { LoginUriExport } from \"./loginUriExport\";\n\nexport class LoginExport {\n  static template(): LoginExport {\n    const req = new LoginExport();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: LoginExport, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUriExport.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: LoginExport, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUriExport.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUriExport[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secureNote\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nexport class SecureNoteExport {\n  static template(): SecureNoteExport {\n    const req = new SecureNoteExport();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNoteExport, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNoteExport, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/encString\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { CardExport } from \"./cardExport\";\nimport { FieldExport } from \"./fieldExport\";\nimport { IdentityExport } from \"./identityExport\";\nimport { LoginExport } from \"./loginExport\";\nimport { SecureNoteExport } from \"./secureNoteExport\";\n\nexport class CipherExport {\n  static template(): CipherExport {\n    const req = new CipherExport();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: CipherExport, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => FieldExport.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = LoginExport.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteExport.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = CardExport.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityExport.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: CipherExport, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => FieldExport.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = LoginExport.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNoteExport.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = CardExport.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = IdentityExport.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: FieldExport[];\n  login: LoginExport;\n  secureNote: SecureNoteExport;\n  card: CardExport;\n  identity: IdentityExport;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      } else {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new LoginExport(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteExport(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardExport(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityExport(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { CipherExport } from \"./cipherExport\";\n\nexport class CipherWithIdExport extends CipherExport {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/encString\";\nimport { CollectionView } from \"../view/collectionView\";\n\nexport class CollectionExport {\n  static template(): CollectionExport {\n    const req = new CollectionExport();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: CollectionExport, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: CollectionExport, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport { CollectionExport } from \"./collectionExport\";\n\nexport class CollectionWithIdExport extends CollectionExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nexport class FolderExport {\n  static template(): FolderExport {\n    const req = new FolderExport();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: FolderExport, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: FolderExport, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nimport { FolderExport } from \"./folderExport\";\n\nexport class FolderWithIdExport extends FolderExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachmentRequest\";\nimport { PasswordHistoryRequest } from \"./passwordHistoryRequest\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Collection } from \"../domain/collection\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class CollectionRequest {\n  name: string;\n  externalId: string;\n  groups: SelectionReadOnlyRequest[] = [];\n\n  constructor(collection?: Collection) {\n    if (collection == null) {\n      return;\n    }\n    this.name = collection.name ? collection.name.encryptedString : null;\n    this.externalId = collection.externalId;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    } else {\n      if (status === 429) {\n        this.message = \"Rate limit exceeded. Try again later.\";\n      }\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachmentView\";\nimport { CardView } from \"./cardView\";\nimport { FieldView } from \"./fieldView\";\nimport { IdentityView } from \"./identityView\";\nimport { LoginView } from \"./loginView\";\nimport { PasswordHistoryView } from \"./passwordHistoryView\";\nimport { SecureNoteView } from \"./secureNoteView\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View {\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: any;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\nimport { CollectionGroupDetailsResponse } from \"../response/collectionResponse\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n}\n","import { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n}\n","import { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/loginUri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n}\n","import { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./itemView\";\nimport { LoginUriView } from \"./loginUriView\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n}\n","import { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secureNote\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","import * as hrtime from \"browser-hrtime\";\n\nimport { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n\n  time(label = \"default\") {\n    if (!this.timersMap.has(label)) {\n      this.timersMap.set(label, hrtime());\n    }\n  }\n\n  timeEnd(label = \"default\"): [number, number] {\n    const elapsed = hrtime(this.timersMap.get(label));\n    this.timersMap.delete(label);\n    this.write(LogLevelType.Info, `${label}: ${elapsed[0] * 1000 + elapsed[1] / 10e6}ms`);\n    return elapsed;\n  }\n}\n","import { Directive, ElementRef, HostBinding, Input } from \"@angular/core\";\n\ntype BadgeTypes = \"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\";\n\nconst styles: Record<BadgeTypes, string[]> = {\n  primary: [\"tw-bg-primary-500\"],\n  secondary: [\"tw-bg-text-muted\"],\n  success: [\"tw-bg-success-500\"],\n  danger: [\"tw-bg-danger-500\"],\n  warning: [\"tw-bg-warning-500\"],\n  info: [\"tw-bg-info-500\"],\n};\n\nconst hoverStyles: Record<BadgeTypes, string[]> = {\n  primary: [\"hover:tw-bg-primary-700\"],\n  secondary: [\"hover:tw-bg-secondary-700\"],\n  success: [\"hover:tw-bg-success-700\"],\n  danger: [\"hover:tw-bg-danger-700\"],\n  warning: [\"hover:tw-bg-warning-700\"],\n  info: [\"hover:tw-bg-info-700\"],\n};\n\n@Directive({\n  selector: \"span[bitBadge], a[bitBadge], button[bitBadge]\",\n})\nexport class BadgeDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-inline\",\n      \"tw-py-0.5\",\n      \"tw-px-1.5\",\n      \"tw-font-bold\",\n      \"tw-text-center\",\n      \"!tw-text-contrast\",\n      \"tw-rounded\",\n      \"tw-border-none\",\n      \"tw-box-border\",\n      \"tw-whitespace-no-wrap\",\n      \"tw-text-xs\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n      \"focus:tw-ring\",\n      \"focus:tw-ring-offset-2\",\n      \"focus:tw-ring-primary-700\",\n    ]\n      .concat(styles[this.badgeType])\n      .concat(this.hasHoverEffects ? hoverStyles[this.badgeType] : []);\n  }\n\n  @Input() badgeType: BadgeTypes = \"primary\";\n\n  private hasHoverEffects = false;\n\n  constructor(el: ElementRef<Element>) {\n    this.hasHoverEffects = el?.nativeElement?.nodeName != \"SPAN\";\n  }\n}\n","import { Input, HostBinding, Directive } from \"@angular/core\";\n\nexport type ButtonTypes = \"primary\" | \"secondary\" | \"danger\";\n\nconst buttonStyles: Record<ButtonTypes, string[]> = {\n  primary: [\n    \"tw-border-primary-500\",\n    \"tw-bg-primary-500\",\n    \"!tw-text-contrast\",\n    \"hover:tw-bg-primary-700\",\n    \"hover:tw-border-primary-700\",\n    \"focus:tw-bg-primary-700\",\n    \"focus:tw-border-primary-700\",\n  ],\n  secondary: [\n    \"tw-bg-transparent\",\n    \"tw-border-text-muted\",\n    \"!tw-text-muted\",\n    \"hover:tw-bg-secondary-500\",\n    \"hover:tw-border-secondary-500\",\n    \"hover:!tw-text-contrast\",\n    \"focus:tw-bg-secondary-500\",\n    \"focus:tw-border-secondary-500\",\n    \"focus:!tw-text-contrast\",\n  ],\n  danger: [\n    \"tw-bg-transparent\",\n    \"tw-border-danger-500\",\n    \"!tw-text-danger\",\n    \"hover:tw-bg-danger-500\",\n    \"hover:tw-border-danger-500\",\n    \"hover:!tw-text-contrast\",\n    \"focus:tw-bg-danger-500\",\n    \"focus:tw-border-danger-500\",\n    \"focus:!tw-text-contrast\",\n  ],\n};\n\n@Directive({\n  selector: \"button[bitButton], a[bitButton]\",\n})\nexport class ButtonDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-font-semibold\",\n      \"tw-py-1.5\",\n      \"tw-px-3\",\n      \"tw-rounded\",\n      \"tw-transition\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      \"tw-text-center\",\n      \"hover:tw-no-underline\",\n      \"disabled:tw-bg-secondary-100\",\n      \"disabled:tw-border-secondary-100\",\n      \"disabled:!tw-text-main\",\n      \"focus:tw-outline-none\",\n      \"focus:tw-ring\",\n      \"focus:tw-ring-offset-2\",\n      \"focus:tw-ring-primary-700\",\n      \"focus:tw-z-10\",\n    ]\n      .concat(this.block ? [\"tw-w-full\", \"tw-block\"] : [\"tw-inline-block\"])\n      .concat(buttonStyles[this.buttonType] ?? []);\n  }\n\n  @Input()\n  buttonType: ButtonTypes = \"secondary\";\n\n  @Input()\n  block = false;\n}\n","<div\n  class=\"tw-py-3 tw-px-5 tw-mb-4 tw-leading-5 tw-rounded tw-bg-background-alt tw-border tw-border-secondary-300 tw-border-solid tw-box-border tw-border-l-8 tw-text-main\"\n  [ngClass]=\"calloutClass\"\n>\n  <h3\n    class=\"tw-mt-0 tw-mb-2 tw-text-base tw-font-bold tw-uppercase\"\n    [ngClass]=\"headerClass\"\n    *ngIf=\"title\"\n  >\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\ntype CalloutTypes = \"success\" | \"info\" | \"warning\" | \"danger\";\n\nconst defaultIcon: Record<CalloutTypes, string> = {\n  success: \"bwi-check\",\n  info: \"bwi-info-circle\",\n  warning: \"bwi-exclamation-triangle\",\n  danger: \"bwi-error\",\n};\n\nconst defaultI18n: Partial<Record<CalloutTypes, string>> = {\n  warning: \"warning\",\n  danger: \"error\",\n};\n\n@Component({\n  selector: \"bit-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type: CalloutTypes = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() useAlertRole = false;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.icon ??= defaultIcon[this.type];\n    if (this.title == null && defaultI18n[this.type] != null) {\n      this.title = this.i18nService.t(defaultI18n[this.type]);\n    }\n  }\n\n  get calloutClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"tw-border-l-danger-500\";\n      case \"info\":\n        return \"tw-border-l-info-500\";\n      case \"success\":\n        return \"tw-border-l-success-500\";\n      case \"warning\":\n        return \"tw-border-l-warning-500\";\n    }\n  }\n\n  get headerClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"!tw-text-danger\";\n      case \"info\":\n        return \"!tw-text-info\";\n      case \"success\":\n        return \"!tw-text-success\";\n      case \"warning\":\n        return \"!tw-text-warning\";\n    }\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { AbstractControl, FormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"bit-error-summary\",\n  template: ` <ng-container *ngIf=\"errorCount > 0\">\n    <i class=\"bwi bwi-error\"></i> {{ \"fieldsNeedAttention\" | i18n: errorString }}\n  </ng-container>`,\n  host: {\n    class: \"tw-block tw-text-danger tw-mt-2\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorSummary {\n  @Input()\n  formGroup: FormGroup;\n\n  get errorCount(): number {\n    return this.getErrorCount(this.formGroup);\n  }\n\n  get errorString() {\n    return this.errorCount.toString();\n  }\n\n  private getErrorCount(form: FormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof FormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-error\",\n  template: `<i class=\"bwi bwi-error\"></i> {{ displayError }}`,\n  host: {\n    class: \"tw-block tw-mt-1 tw-text-danger\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorComponent {\n  @HostBinding() id = `bit-error-${nextId++}`;\n\n  @Input() error: [string, any];\n\n  constructor(private i18nService: I18nService) {}\n\n  get displayError() {\n    switch (this.error[0]) {\n      case \"required\":\n        return this.i18nService.t(\"inputRequired\");\n      case \"email\":\n        return this.i18nService.t(\"inputEmail\");\n      case \"minlength\":\n        return this.i18nService.t(\"inputMinLength\", this.error[1]?.requiredLength);\n      default:\n        // Attempt to show a custom error message.\n        if (this.error[1]?.message) {\n          return this.error[1]?.message;\n        }\n\n        return this.error;\n    }\n  }\n}\n","<label class=\"tw-block tw-font-semibold tw-mb-1 tw-text-main\" [attr.for]=\"input.id\">\n  <ng-content select=\"bit-label\"></ng-content>\n  <span *ngIf=\"input.required\" class=\"tw-text-xs tw-font-normal\"> ({{ \"required\" | i18n }})</span>\n</label>\n<div class=\"tw-flex\">\n  <div *ngIf=\"prefixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitPrefix]\"></ng-content>\n  </div>\n  <ng-content></ng-content>\n  <div *ngIf=\"suffixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitSuffix]\"></ng-content>\n  </div>\n</div>\n<ng-container [ngSwitch]=\"input.hasError\">\n  <ng-content select=\"bit-hint\" *ngSwitchCase=\"false\"></ng-content>\n  <bit-error [error]=\"input.error\" *ngSwitchCase=\"true\"></bit-error>\n</ng-container>\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChild,\n  ContentChildren,\n  QueryList,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { BitInputDirective } from \"../input/input.directive\";\n\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitHintComponent } from \"./hint.component\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n@Component({\n  selector: \"bit-form-field\",\n  templateUrl: \"./form-field.component.html\",\n  host: {\n    class: \"tw-mb-6 tw-block\",\n  },\n})\nexport class BitFormFieldComponent implements AfterContentChecked {\n  @ContentChild(BitInputDirective) input: BitInputDirective;\n  @ContentChild(BitHintComponent) hint: BitHintComponent;\n\n  @ViewChild(BitErrorComponent) error: BitErrorComponent;\n\n  @ContentChildren(BitPrefixDirective) prefixChildren: QueryList<BitPrefixDirective>;\n  @ContentChildren(BitSuffixDirective) suffixChildren: QueryList<BitSuffixDirective>;\n\n  ngAfterContentChecked(): void {\n    if (this.error) {\n      this.input.ariaDescribedBy = this.error.id;\n    } else if (this.hint) {\n      this.input.ariaDescribedBy = this.hint.id;\n    } else {\n      this.input.ariaDescribedBy = undefined;\n    }\n  }\n}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"bit-hint\",\n  host: {\n    class: \"tw-text-muted tw-inline-block tw-mt-1\",\n  },\n})\nexport class BitHintComponent {\n  @HostBinding() id = `bit-hint-${nextId++}`;\n}\n","import { Directive, HostBinding, Input } from \"@angular/core\";\n\nexport const PrefixClasses = [\n  \"tw-block\",\n  \"tw-px-3\",\n  \"tw-py-1.5\",\n  \"tw-bg-background-alt\",\n  \"tw-border\",\n  \"tw-border-solid\",\n  \"tw-border-secondary-500\",\n  \"tw-text-muted\",\n  \"tw-rounded-none\",\n];\n\n@Directive({\n  selector: \"[bitPrefix]\",\n})\nexport class BitPrefixDirective {\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\"tw-border-r-0\", \"first:tw-rounded-l\"]);\n  }\n}\n","import { Directive, HostBinding, Input } from \"@angular/core\";\n\nimport { PrefixClasses } from \"./prefix.directive\";\n\n@Directive({\n  selector: \"[bitSuffix]\",\n})\nexport class BitSuffixDirective {\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\"tw-border-l-0\", \"last:tw-rounded-r\"]);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BadgeDirective } from \"./badge.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [BadgeDirective],\n  declarations: [BadgeDirective],\n})\nexport class BadgeModule {}\n","<div\n  class=\"tw-py-2.5 tw-px-4 tw-text-contrast tw-flex tw-gap-2 tw-items-center\"\n  [ngClass]=\"bannerClass\"\n  [attr.role]=\"useAlertRole ? 'status' : null\"\n  [attr.aria-live]=\"useAlertRole ? 'polite' : null\"\n>\n  <i class=\"bwi tw-align-middle\" [ngClass]=\"icon\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n  <span class=\"tw-text-base tw-grow\">\n    <ng-content></ng-content>\n  </span>\n  <button class=\"tw-border-0 tw-bg-transparent tw-text-contrast tw-p-0\" (click)=\"onClose.emit()\">\n    <i class=\"bwi bwi-close tw-text-sm\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n  </button>\n</div>\n","import { Component, Input, OnInit, Output, EventEmitter } from \"@angular/core\";\n\ntype BannerTypes = \"premium\" | \"info\" | \"warning\" | \"danger\";\n\nconst defaultIcon: Record<BannerTypes, string> = {\n  premium: \"bwi-star\",\n  info: \"bwi-info-circle\",\n  warning: \"bwi-exclamation-triangle\",\n  danger: \"bwi-error\",\n};\n\n@Component({\n  selector: \"bit-banner\",\n  templateUrl: \"./banner.component.html\",\n})\nexport class BannerComponent implements OnInit {\n  @Input(\"bannerType\") bannerType: BannerTypes = \"info\";\n  @Input() icon: string;\n  @Input() useAlertRole = true;\n\n  @Output() onClose = new EventEmitter<void>();\n\n  ngOnInit(): void {\n    this.icon ??= defaultIcon[this.bannerType];\n  }\n\n  get bannerClass() {\n    switch (this.bannerType) {\n      case \"danger\":\n        return \"tw-bg-danger-500\";\n      case \"info\":\n        return \"tw-bg-info-500\";\n      case \"premium\":\n        return \"tw-bg-success-500\";\n      case \"warning\":\n        return \"tw-bg-warning-500\";\n    }\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BannerComponent } from \"./banner.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [BannerComponent],\n  declarations: [BannerComponent],\n})\nexport class BannerModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ButtonDirective } from \"./button.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ButtonDirective],\n  declarations: [ButtonDirective],\n})\nexport class ButtonModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { CalloutComponent } from \"./callout.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [CalloutComponent],\n  declarations: [CalloutComponent],\n})\nexport class CalloutModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitInputDirective } from \"./input.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitInputDirective],\n  exports: [BitInputDirective],\n})\nexport class InputModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule, Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\nimport { BitInputDirective } from \"../input/input.directive\";\nimport { InputModule } from \"../input/input.module\";\n\nimport { BitErrorSummary } from \"./error-summary.component\";\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitFormFieldComponent } from \"./form-field.component\";\nimport { BitHintComponent } from \"./hint.component\";\nimport { BitLabel } from \"./label.directive\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n/**\n * Temporarily duplicate this pipe\n */\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n\n@NgModule({\n  imports: [CommonModule, InputModule],\n  exports: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitHintComponent,\n    BitInputDirective,\n    BitLabel,\n    BitPrefixDirective,\n    BitSuffixDirective,\n  ],\n  declarations: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitHintComponent,\n    BitLabel,\n    BitPrefixDirective,\n    BitSuffixDirective,\n    I18nPipe,\n  ],\n})\nexport class FormFieldModule {}\n","import { OverlayModule } from \"@angular/cdk/overlay\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { MenuDividerComponent } from \"./menu-divider.component\";\nimport { MenuItemDirective } from \"./menu-item.directive\";\nimport { MenuTriggerForDirective } from \"./menu-trigger-for.directive\";\nimport { MenuComponent } from \"./menu.component\";\n\n@NgModule({\n  imports: [CommonModule, OverlayModule],\n  declarations: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n  exports: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n})\nexport class MenuModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ButtonModule } from \"../button\";\n\nimport { SubmitButtonComponent } from \"./submit-button.component\";\n\n@NgModule({\n  imports: [CommonModule, ButtonModule],\n  exports: [SubmitButtonComponent],\n  declarations: [SubmitButtonComponent],\n})\nexport class SubmitButtonModule {}\n","import { Directive, HostBinding, Input, Optional, Self } from \"@angular/core\";\nimport { NgControl, Validators } from \"@angular/forms\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"input[bitInput], select[bitInput], textarea[bitInput]\",\n})\nexport class BitInputDirective {\n  @HostBinding(\"class\") @Input() get classList() {\n    return [\n      \"tw-block\",\n      \"tw-w-full\",\n      \"tw-px-3\",\n      \"tw-py-1.5\",\n      \"tw-bg-background-alt\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      this.hasError ? \"tw-border-danger-500\" : \"tw-border-secondary-500\",\n      \"tw-text-main\",\n      \"tw-placeholder-text-muted\",\n      // Rounded\n      \"tw-rounded-none\",\n      \"first:tw-rounded-l\",\n      \"last:tw-rounded-r\",\n      // Focus\n      \"focus:tw-outline-none\",\n      \"focus:tw-border-primary-700\",\n      \"focus:tw-ring-1\",\n      \"focus:tw-ring-primary-700\",\n      \"focus:tw-z-10\",\n      \"disabled:tw-bg-secondary-100\",\n    ].filter((s) => s != \"\");\n  }\n\n  @HostBinding() id = `bit-input-${nextId++}`;\n\n  @HostBinding(\"attr.aria-describedby\") ariaDescribedBy: string;\n\n  @HostBinding(\"attr.aria-invalid\") get ariaInvalid() {\n    return this.hasError ? true : undefined;\n  }\n\n  @HostBinding()\n  @Input()\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value: any) {\n    this._required = value != null && value !== false;\n  }\n  private _required: boolean;\n\n  @Input() hasPrefix = false;\n  @Input() hasSuffix = false;\n\n  get hasError() {\n    return this.ngControl?.status === \"INVALID\" && this.ngControl?.touched;\n  }\n\n  get error(): [string, any] {\n    const key = Object.keys(this.ngControl.errors)[0];\n    return [key, this.ngControl.errors[key]];\n  }\n  constructor(@Optional() @Self() private ngControl: NgControl) {}\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-menu-divider\",\n  templateUrl: \"./menu-divider.component.html\",\n})\nexport class MenuDividerComponent {}\n","<div\n  class=\"tw-border-solid tw-border-0 tw-border-t tw-border-t-secondary-500 tw-my-2\"\n  role=\"separator\"\n></div>\n","import { FocusableOption } from \"@angular/cdk/a11y\";\nimport { Directive, ElementRef, HostBinding } from \"@angular/core\";\n\n@Directive({\n  selector: \"[bitMenuItem]\",\n})\nexport class MenuItemDirective implements FocusableOption {\n  @HostBinding(\"class\") classList = [\n    \"tw-block\",\n    \"tw-py-1\",\n    \"tw-px-4\",\n    \"!tw-text-main\",\n    \"!tw-no-underline\",\n    \"tw-cursor-pointer\",\n    \"tw-border-none\",\n    \"tw-bg-background\",\n    \"tw-text-left\",\n    \"hover:tw-bg-secondary-100\",\n    \"focus:tw-bg-secondary-100\",\n    \"focus:tw-z-50\",\n    \"focus:tw-outline-none\",\n    \"focus:tw-ring\",\n    \"focus:tw-ring-offset-2\",\n    \"focus:tw-ring-primary-700\",\n    \"active:!tw-ring-0\",\n    \"active:!tw-ring-offset-0\",\n  ];\n  @HostBinding(\"attr.role\") role = \"menuitem\";\n  @HostBinding(\"tabIndex\") tabIndex = \"-1\";\n\n  constructor(private elementRef: ElementRef) {}\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n}\n","import { Overlay, OverlayConfig, OverlayRef } from \"@angular/cdk/overlay\";\nimport { TemplatePortal } from \"@angular/cdk/portal\";\nimport {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { filter, mergeWith } from \"rxjs/operators\";\n\nimport { MenuComponent } from \"./menu.component\";\n\n@Directive({\n  selector: \"[bitMenuTriggerFor]\",\n})\nexport class MenuTriggerForDirective implements OnDestroy {\n  @HostBinding(\"attr.aria-expanded\") isOpen = false;\n  @HostBinding(\"attr.aria-haspopup\") hasPopup = \"menu\";\n  @HostBinding(\"attr.role\") role = \"button\";\n\n  @Input(\"bitMenuTriggerFor\") menu: MenuComponent;\n\n  private overlayRef: OverlayRef;\n  private defaultMenuConfig: OverlayConfig = {\n    panelClass: \"bit-menu-panel\",\n    hasBackdrop: true,\n    backdropClass: \"cdk-overlay-transparent-backdrop\",\n    scrollStrategy: this.overlay.scrollStrategies.reposition(),\n    positionStrategy: this.overlay\n      .position()\n      .flexibleConnectedTo(this.elementRef)\n      .withPositions([\n        {\n          originX: \"start\",\n          originY: \"bottom\",\n          overlayX: \"start\",\n          overlayY: \"top\",\n        },\n        {\n          originX: \"end\",\n          originY: \"bottom\",\n          overlayX: \"end\",\n          overlayY: \"top\",\n        },\n      ])\n      .withLockedPosition(true)\n      .withFlexibleDimensions(false)\n      .withPush(false),\n  };\n  private closedEventsSub: Subscription;\n  private keyDownEventsSub: Subscription;\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private viewContainerRef: ViewContainerRef,\n    private overlay: Overlay\n  ) {}\n\n  @HostListener(\"click\") toggleMenu() {\n    this.isOpen ? this.destroyMenu() : this.openMenu();\n  }\n\n  ngOnDestroy() {\n    this.disposeAll();\n  }\n\n  private openMenu() {\n    if (this.menu == null) {\n      throw new Error(\"Cannot find bit-menu element\");\n    }\n\n    this.isOpen = true;\n    this.overlayRef = this.overlay.create(this.defaultMenuConfig);\n\n    const templatePortal = new TemplatePortal(this.menu.templateRef, this.viewContainerRef);\n    this.overlayRef.attach(templatePortal);\n\n    this.closedEventsSub = this.getClosedEvents().subscribe((event: KeyboardEvent | undefined) => {\n      if (event?.key === \"Tab\") {\n        // Required to ensure tab order resumes correctly\n        this.elementRef.nativeElement.focus();\n      }\n      this.destroyMenu();\n    });\n    this.keyDownEventsSub = this.overlayRef\n      .keydownEvents()\n      .subscribe((event: KeyboardEvent) => this.menu.keyManager.onKeydown(event));\n  }\n\n  private destroyMenu() {\n    if (this.overlayRef == null || !this.isOpen) {\n      return;\n    }\n\n    this.isOpen = false;\n    this.disposeAll();\n  }\n\n  private getClosedEvents(): Observable<any> {\n    const detachments = this.overlayRef.detachments();\n    const escKey = this.overlayRef\n      .keydownEvents()\n      .pipe(filter((event: KeyboardEvent) => event.key === \"Escape\" || event.key === \"Tab\"));\n    const backdrop = this.overlayRef.backdropClick();\n    const menuClosed = this.menu.closed;\n\n    return detachments.pipe(mergeWith(escKey, backdrop, menuClosed));\n  }\n\n  private disposeAll() {\n    this.closedEventsSub?.unsubscribe();\n    this.overlayRef?.dispose();\n    this.keyDownEventsSub?.unsubscribe();\n  }\n}\n","<ng-template>\n  <div\n    (click)=\"closed.emit()\"\n    class=\"tw-flex tw-flex-col tw-bg-background tw-border tw-border-solid tw-rounded tw-border-secondary-500 tw-bg-clip-padding tw-py-2 tw-shrink-0\"\n    role=\"menu\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport {\n  Component,\n  Output,\n  TemplateRef,\n  ViewChild,\n  EventEmitter,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n} from \"@angular/core\";\n\nimport { MenuItemDirective } from \"./menu-item.directive\";\n\n@Component({\n  selector: \"bit-menu\",\n  templateUrl: \"./menu.component.html\",\n  exportAs: \"menuComponent\",\n})\nexport class MenuComponent implements AfterContentInit {\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n  @Output() closed = new EventEmitter<void>();\n  @ContentChildren(MenuItemDirective, { descendants: true })\n  menuItems: QueryList<MenuItemDirective>;\n  keyManager: FocusKeyManager<MenuItemDirective>;\n\n  ngAfterContentInit() {\n    this.keyManager = new FocusKeyManager(this.menuItems).withWrap();\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + {\"182\":\"a4b4dc319a28843eacc1\",\"297\":\"12b6e0f2db176909badd\",\"754\":\"440ad69c7d0bed00de9f\",\"929\":\"434c490b8b1612e90684\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t148: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_web_vault\"] = self[\"webpackChunk_bitwarden_web_vault\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [734], () => (__webpack_require__(15217)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","inProgress","dataWebpackPrefix","LooseComponentsModule","OrganizationCreateModule","PipesModule","RegisterFormModule","registerLocaleData","SharedModule","DatePipe","CommonModule","DragDropModule","FormsModule","InfiniteScrollModule","ReactiveFormsModule","RouterModule","ToastrModule","VaultFilterModule","VaultFilterService","constructor","stateService","organizationService","folderService","cipherService","collectionService","policyService","i18nService","apiService","super","_collapsedFilterNodes","collapsedFilterNodes$","this","asObservable","buildCollapsedFilterNodes","nodes","next","storeCollapsedFilterNodes","collapsedFilterNodes","ensureVaultFiltersAreExpanded","has","delete","buildAdminCollections","organizationId","result","collectionResponse","getCollections","data","length","collectionDomains","map","r","decryptMany","noneCollection","name","t","push","nestedCollections","getAllNested","fullList","nestedList","OrganizationBadgeModule","PermissionsGuard","router","platformUtilsService","syncService","canActivate","route","state","getLastSync","fullSync","org","get","params","createUrlTree","isOwner","enabled","showToast","permissions","hasAnyPermission","cipherId","root","queryParamMap","queryParams","itemId","AuthenticationStatus","AuthService","MessagingService","AuthGuard","authService","messagingService","keyConnectorService","routerState","authStatus","getAuthStatus","LoggedOut","send","url","Locked","promptBiometric","includes","getConvertAccountRequired","LockGuard","homepage","loginpage","redirectUrl","UnauthGuard","flags","envFlags","JSON","parse","EmergencyAccessAcceptRequest","BaseAcceptComponent","platformUtilService","loading","authed","requiredParameters","failedShortMessage","failedMessage","ngOnInit","pipe","first","subscribe","qParams","error","some","e","errorMessage","getIsAuthenticated","authedHandler","message","email","unauthedHandler","timeout","navigate","AcceptEmergencyComponent","request","token","actionPromise","postEmergencyAccessAccept","id","replace","OrganizationUserAcceptRequest","AcceptOrganizationComponent","cryptoService","logService","prepareAcceptRequest","then","postOrganizationUserAccept","organizationUserId","setOrganizationInvitation","orgName","organizationName","performResetPasswordAutoEnroll","response","getOrganizationKeys","Error","publicKey","encKey","getEncKey","encryptedKey","rsaEncrypt","key","buffer","resetPasswordKey","encryptedString","policyList","policies","getPoliciesByToken","mapPoliciesFromToken","getResetPasswordPolicyOptions","autoEnrollEnabled","PasswordHintRequest","HintComponent","successRoute","submit","indexOf","formPromise","postPasswordHint","onSuccessfulSubmit","HashPurpose","KeySuffixOptions","SecretVerificationRequest","VaultTimeoutService","EnvironmentService","vaultTimeoutService","environmentService","ngZone","masterPassword","pin","showPassword","pinLock","webVaultHostname","invalidPinAttempts","load","activeAccount","kdf","getKdfType","kdfIterations","getKdfIterations","failed","pinSet","makeKeyFromPin","getDecryptedPinProtected","protectedPin","getProtectedPin","decryptToUtf8","setKeyAndContinue","makeKey","passwordValid","getKeyHash","compareAndUpdateKeyHash","serverKeyHash","hashPassword","ServerAuthorization","masterPasswordHash","postAccountVerifyPassword","localKeyHash","LocalAuthorization","setKeyHash","decPin","pinKey","makePinKey","setDecryptedPinProtected","encrypt","logOut","showDialog","unlockBiometric","biometricLock","success","getKey","Biometric","doContinue","togglePassword","input","document","getElementById","isStable","focus","onStable","take","setKey","setBiometricLocked","setEverBeenUnlocked","disableFavicon","getDisableFavicon","setDisableFavicon","isPinLockSet","supportsBiometric","isBiometricLockSet","hasKeyStored","supportsSecureStorage","biometricText","getBiometricText","getEmail","usesKeyConnector","getUsesKeyConnector","hideInput","webVaultUrl","getWebVaultUrl","vaultUrl","RouterService","activatedRoute","titleService","previousUrl","undefined","currentUrl","events","filter","NavigationEnd","event","title","child","firstChild","titleId","snapshot","rawTitle","updateUrl","doNotSaveUrl","newTitle","setTitle","setPreviousUrl","getPreviousUrl","A11yTitleDirective","el","renderer","nativeElement","hasAttribute","setAttribute","LockComponent","routerService","navigateByUrl","AuthenticationType","PasswordLogInCredentials","captchaToken","twoFactor","type","SsoLogInCredentials","code","codeVerifier","orgId","CaptchaIFrame","win","path","iframeId","successCallback","errorCallback","infoCallback","parseFunction","parseMessage","bind","connectorLink","createElement","stop","sendMessage","start","iframe","src","contentWindow","postMessage","base64Encode","str","btoa","encodeURIComponent","match","p1","String","fromCharCode","cleanup","removeEventListener","createParams","version","URLSearchParams","stringify","parent","location","href","v","toString","initComponent","addEventListener","validMessage","parts","split","origin","parsedMessage","height","width","init","siteKey","locale","translationLocale","CaptchaProtectedComponent","captchaSiteKey","setupCaptcha","captcha","window","info","showCaptcha","handleCaptchaRequired","PasswordGenerationService","CryptoFunctionService","passwordGenerationService","cryptoFunctionService","rememberEmail","twoFactorRoute","forcePasswordResetRoute","alwaysRememberEmail","getRememberedEmail","focusInput","credentials","logIn","setRememberedEmail","requiresTwoFactor","onSuccessfulLoginTwoFactorNavigate","forcePasswordReset","onSuccessfulLoginForceResetNavigate","onSuccessfulLogin","onSuccessfulLoginNavigate","launchSsoBrowser","clientId","ssoRedirectUri","passwordOptions","uppercase","lowercase","numbers","special","generatePassword","ssoCodeVerifier","codeVerifierHash","hash","codeChallenge","setSsoState","setSsoCodeVerifier","webUrl","launchUri","PolicyData","StateService","LoginComponent","showResetPasswordAutoEnrollWarning","goAfterLogIn","premium","plan","sponsorshipToken","getRememberEmail","invite","getOrganizationInvitation","resetPasswordPolicy","enforcedPasswordPolicyOptions","getMasterPasswordPolicyOptions","strengthResult","passwordStrength","getPasswordStrengthUserInput","masterPasswordScore","score","evaluateMasterPassword","policiesData","p","setRememberEmail","userInput","atPosition","concat","substr","trim","toLowerCase","DeleteRecoverRequest","RecoverDeleteComponent","postAccountRecoverDelete","TwoFactorRecoveryRequest","RecoverTwoFactorComponent","recoveryCode","makePreloginKey","postTwoFactorRecover","InputsFieldMatch","matchTo","control","controls","value","inputsMatchError","inputsDoesntMatchError","field","fieldMatchTo","formGroup","fieldCtrl","fieldMatchToCtrl","setErrors","KeysRequest","encryptedPrivateKey","RegisterRequest","masterPasswordHint","referenceData","captchaResponse","FormValidationErrorsService","formValidationErrorService","formBuilder","isInTrialFlow","createdAccount","EventEmitter","showTerms","showErrorSummary","group","Validators","confirmMasterPassword","hint","validateInputsDoesntMatch","acceptPolicies","acceptPoliciesValidation","validator","validateFormInputsMatch","isSelfHost","markAllAsTouched","hasError","invalid","errorText","getErrorToastMessage","makeEncKey","hashedPassword","keys","makeKeyPair","orgInvite","postRegister","emit","updatePasswordStrength","masterPasswordStrengthTimeout","clearTimeout","setTimeout","getFormValidationErrors","shift","errorName","errorTag","charAt","toUpperCase","slice","controlName","required","Policy","obj","ReferenceEventRequest","BitLabel","PasswordStrengthComponent","showText","scoreWidth","color","ngOnChanges","text","SubmitButtonComponent","buttonType","disabled","RegisterFormComponent","queryParamEmail","setValue","enforcedPolicyOptions","RegisterComponent","showCreateOrgMessage","layout","flow","reference","cookie","pop","continuing","leaving","organization","getManagingOrganization","convert","migrateUser","removeConvertAccountRequired","leave","postLeaveOrganization","RemovePasswordComponent","OrganizationUserResetPasswordEnrollmentRequest","SetPasswordRequest","orgIdentifier","strongPassword","setupSubmitActions","remakeEncKey","performSubmitActions","masterPasswordRetype","syncLoading","identifier","resetPasswordAutoEnroll","getOrganizationAutoEnrollStatus","resetPasswordEnabled","getMasterPasswordPoliciesForInvitedUsers","setPassword","onSetPasswordSuccess","userId","getUserId","userEncKey","resetRequest","putOrganizationUserResetPasswordEnrollment","onSuccessfulChangePassword","confirmField","setKdfType","setKdfIterations","setEncKey","setEncPrivateKey","SetPasswordComponent","loggingIn","changePasswordRoute","getSsoCodeVerifier","getSsoState","checkState","getOrgIdentifierFromState","redirectUri","returnUri","includeUserIdentifier","initiateSsoFormPromise","preValidateSso","authorizeUrl","buildAuthorizeUrl","sameWindow","getIdentityUrl","userIdentifier","getSsoUserIdentifier","orgIdFromState","sso","resetMasterPassword","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","SsoComponent","storedIdentifier","getSsoOrgIdentifier","setSsoOrganizationIdentifier","TwoFactorProviderType","WebAuthnIFrame","webAuthnNewTab","btnText","append","allow","URL","TokenRequestTwoFactor","provider","remember","TwoFactorEmailRequest","TwoFactorProviders","Authenticator","description","priority","sort","Yubikey","Duo","OrganizationDuo","Email","WebAuthn","AppIdService","twoFactorService","appIdService","webAuthnReady","providers","providerType","selectedProviderType","webAuthnSupported","webAuthn","twoFactorEmail","loginRoute","supportsWebAuthn","authing","getProviders","needsLock","getDefaultProvider","ngOnDestroy","cleanupWebAuthn","providerData","authWebAuthn","host","Host","sig_request","Signature","submit_callback","f","sig","querySelector","size","sendEmail","doSubmit","logInTwoFactor","doToast","emailPromise","deviceIdentifier","getAppId","postTwoFactorEmail","authingWithPassword","authingWithSso","authingWithApiKey","Window","ModalRef","_onCreated","Subject","_onClose","_onClosed","_onShow","_onShown","onCreated","onClose","onClosed","onShow","onShown","show","shown","close","lastResult","closed","created","onClosedPromise","toPromise","DynamicModalComponent","modalService","cd","focusTrapFactory","modalRef","ngAfterViewInit","loadChildComponent","childComponentType","setComponentParameters","componentRef","instance","detectChanges","focusTrap","create","focusFirstTabbableElementWhenReady","componentType","componentFactory","resolveComponentFactory","modalContentRef","clear","createComponent","destroy","getFocus","autoFocusEl","ViewContainerRef","ModalInjector","_parentInjector","_additionalTokens","notFoundValue","ModalConfig","allowMultipleModals","componentFactoryResolver","applicationRef","injector","modalList","factoryResolvers","Map","modalCount","topModal","openViewRef","viewContainerRef","modalComponentRef","openInternal","insert","hostView","open","config","_","registerComponentFactoryResolver","set","attachToDom","createModalComponent","attachView","domElem","rootNodes","body","appendChild","detachView","setupHandlers","backdrop","classList","add","modalEl","dialogEl","className","style","zIndex","prepend","stopPropagation","modals","Array","from","querySelectorAll","closeElement","remove","WeakMap","onProviderSelected","onRecoverSelected","getSupportedProviders","choose","recover","TwoFactorOptionsComponent","StopClickDirective","onClick","$event","preventDefault","TwoFactorComponent","anotherMethod","modal","twoFactorOptionsModal","comp","PasswordRequest","userVerificationService","cancel","currentMasterPassword","secret","verifyUser","newMasterPasswordHash","postPassword","UpdatePasswordComponent","OrganizationUserResetPasswordRequest","UpdateTempPasswordRequest","newKey","newPasswordHash","newEncKey","putUpdateTempPassword","UpdateTempPasswordComponent","VerifyEmailRequest","VerifyEmailTokenComponent","postAccountVerifyEmailToken","refreshIdentityToken","VerifyDeleteRecoverRequest","VerifyRecoverDeleteComponent","postAccountRecoverDeleteToken","HomeGuard","FrontendLayoutComponent","year","Date","getFullYear","getApplicationVersion","manage","P","tools","settings","NavigationPermissionsService","Object","values","reduce","previous","current","canAccessTools","canAccessSettings","canAccessManage","getPermissions","TokenService","ProviderService","BroadcasterService","StopPropDirective","AvatarComponent","sanitizer","charCount","textColor","fontSize","fontWeight","dynamic","circle","generate","getEnableGravitars","hashBytes","chars","upperData","getFirstLetters","unicodeSafeSubstring","charObj","getCharText","stringToColor","svg","getSvg","html","outerHTML","svgHtml","unescape","i","charCodeAt","count","svgTag","backgroundColor","character","textTag","textContent","characters","join","NavbarComponent","tokenService","providerService","broadcasterService","selfHosted","organizations","getName","getAll","buildOrganizations","run","command","lock","FooterComponent","UserLayoutComponent","VerticalStep","CdkStep","subLabel","provide","useExisting","VerticalStepContentComponent","onSelectStep","selected","selectStep","VerticalStepperComponent","CdkStepper","activeClass","isNextButtonHidden","steps","selectedIndex","isStepDisabled","index","find","completed","selectStepByIndex","changedBusinessOwned","OrganizationInformationComponent","nameOnly","createOrganization","isProvider","acceptingSponsorship","TeamsContentComponent","EnterpriseContentComponent","FamiliesContentComponent","TrialInitiationComponent","titleCasePipe","orgInfoSubLabel","orgInfoFormGroup","additionalStorage","additionalSeats","businessName","product","stepSelectionChange","transform","previouslySelectedIndex","verticalStepper","VaultService","calculateSearchBarLocalizationString","vaultFilter","status","cipherType","selectedFolderId","selectedCollection","selectedOrganizationId","myVaultOnly","VaultModule","useClass","VaultFilter","selectedFolder","refreshCollectionsAndFolders","assign","resetFilter","selectedCollectionId","resetOrganization","buildFilter","cipher","cipherPassesFilter","favorite","isDeleted","folderId","collectionIds","CipherWithIdRequest","FolderWithIdRequest","folder","UpdateKeyRequest","ciphers","folders","sends","UpdateKeyComponent","hasEncKey","makeRequest","postAccountKey","privateKey","getPrivateKey","encPrivateKey","firstValueFrom","folderViews$","getAllDecrypted","OrganizationUserStatusType","AuditService","PasswordRepromptService","auditService","eventService","passwordRepromptService","cloneMode","onSavedCipher","onDeletedCipher","onRestoredCipher","onCancelled","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","onGenerateUsername","editMode","collections","showCardNumber","showCardCode","ownershipOptions","currentDate","allowPersonal","reprompt","canUseReprompt","typeOptions","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","uriMatchOptions","autofillOnPageLoadOptions","policyAppliesToUser","myEmail","forEach","o","Confirmed","writeableCollections","loadCollections","addEditCipherInfo","getAddEditCipherInfo","setAddEditCipherInfo","loadCipher","decrypt","login","uris","card","identity","secureNote","organizationChanged","c","checked","folders$","previousCipherId","collect","restore","uri","encryptCipher","saveCipher","addUri","removeUri","splice","trackByFunction","item","attachments","share","editCollections","deletePromise","deleteCipher","restorePromise","restoreCipher","generateUsername","username","password","toggleCardNumber","toggleCardCode","toggleUriOptions","u","showOptions","loginUriMatchChanged","organizationUseTotp","useTotp","checkPassword","checkPasswordPromise","passwordLeaked","matches","repromptChanged","readOnly","saveWithServer","deleteWithServer","softDeleteWithServer","restoreWithServer","TotpService","addFieldType","linkedFieldOptions","fieldType","eventType","addFieldTypeOptions","addFieldLinkedTypeOption","changes","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","fields","newField","linkedId","removeField","toggleFieldValue","showValue","drop","moveItemInArray","previousIndex","currentIndex","options","linkedFieldOption","i18nKey","TrueFalseValueDirective","elementRef","trueValue","falseValue","propagateChange","onHostChange","ev","target","writeValue","setProperty","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","NG_VALUE_ACCESSOR","forwardRef","multi","AddEditCustomFieldsComponent","NotPremiumDirective","templateRef","viewContainer","getCanAccessPremium","createEmbeddedView","PremiumBadgeComponent","premiumRequired","totpService","showRevisionDate","hasPasswordHistory","viewingPasswordHistory","viewOnly","passwordRevisionDisplayDate","cleanUp","canAccessPremium","totp","totpUpdateCode","interval","getTimeInterval","totpTick","totpInterval","setInterval","toggleFavorite","launch","canLaunch","copy","typeI18nKey","aType","copyToClipboard","confirmed","getOptions","upgradeOrganization","viewHistory","clearInterval","totpCode","getCode","half","Math","floor","totpCodeFormatted","substring","allowOwnershipAssignment","intervalSeconds","mod","round","getTime","totpSec","totpDash","totpLow","fileDownloadService","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","emergencyAccessId","hasUpdatedKey","fileEl","files","saveCipherAttachment","cipherDomain","attachment","deleteCipherAttachment","download","a","downloading","canAccessAttachments","getAttachmentData","statusCode","getSingleMessage","fetch","Request","cache","buf","arrayBuffer","getOrgKey","decBuf","decryptFromBytes","fileName","blobData","reuploadCipherAttachment","admin","Promise","resolve","saveAttachmentRawWithServer","foundAttachment","a2","file","saveAttachmentWithServer","attachmentId","deleteAttachmentWithServer","reupload","showFixOldAttachments","SearchService","indexedEntityId","searchService","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","loaded","searchPlaceholder","deleted","searchPending","searchTimeout","deletedFilter","applyFilter","reload","refresh","search","indexedCiphers","doSearch","selectCipher","rightClickCipher","addCipher","addCipherOptions","isSearching","isSearchable","searchText","searchCiphers","FallbackSrcDirective","onError","appFallbackSrc","cardIcons","Visa","Mastercard","Amex","Discover","JCB","Maestro","UnionPay","RuPay","IconComponent","iconsUrl","getIconsUrl","image","fallbackImage","imageEnabled","icon","setLoginIcon","setCardIcon","hostnameUri","isWebsite","brand","EllipsisPipe","limit","completeWords","ellipsis","lastIndexOf","OrganizationNameBadgeComponent","onOrganizationClicked","profileName","pickTextColorBasedOnBgColor","parseInt","emitOnOrganizationClicked","GetOrgNameFromIdPipe","showAddNew","onAttachmentsClicked","onShareClicked","onCollectionsClicked","onCloneClicked","onOrganzationBadgeClicked","pagedCiphers","pageSize","userHasPremiumAccess","didScroll","pagedCiphersCount","refreshing","selectAll","loadMore","pagedLength","pagedSize","isPaging","searching","resetPaging","repromptCipher","clone","permanent","protectedFields","displayTotpCopyButton","viewPassword","select","selectCount","checkCipher","getSelected","getSelectedIds","hasTotp","hasOldAttachments","showPasswordPrompt","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","saveCollectionsWithServer","check","FolderApiServiceAbstraction","folderApiService","onSavedFolder","onDeletedFolder","save","FolderAddEditComponent","onSharedCipher","allCollections","orgs","filterCollections","cipherView","shareWithServer","ShareComponent","vaultFilterService","activeFilter","hideFolders","hideCollections","hideFavorites","hideTrash","hideOrganizations","onFilterChange","onAddFolder","onEditFolder","isLoaded","activePersonalOwnershipPolicy","checkForPersonalOwnershipPolicy","activeSingleOrganizationPolicy","checkForSingleOrganizationPolicy","buildNestedFolders","initCollections","buildCollections","toggleFilterNodeCollapseState","node","reloadCollectionsAndFolders","pruneInvalidatedFilterSelections","reloadOrganizations","addFolder","editFolder","pruneInvalidFolderSelection","pruneInvalidCollectionSelection","hasId","OrganizationUserType","hide","onNodeCollapseStateChange","organizationGrouping","displayMode","applyOrganizationFilter","applyMyVaultFilter","clearFilter","toggleCollapse","Organization","usePolicies","useGroups","useDirectory","useEvents","use2fa","useApi","useSso","useKeyConnector","useResetPassword","selfHost","usersGetPremium","seats","maxCollections","maxStorageGb","ssoBound","resetPasswordEnrolled","hasPublicAndPrivateKeys","providerId","providerName","isProviderUser","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","keyConnectorEnabled","keyConnectorUrl","familySponsorshipLastSyncDate","familySponsorshipValidUntil","familySponsorshipToDelete","Owner","Manager","Admin","isAdmin","accessEventLogs","accessImportExport","accessReports","isManager","createNewCollections","manageAllCollections","editAnyCollection","deleteAnyCollection","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","editAssignedCollections","manageAssignedCollections","deleteAssignedCollections","canDeleteAssignedCollections","canEditAssignedCollections","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","canManagePolicies","canAccessEventLogs","canAccessImportExport","canAccessReports","canManageGroups","canManageUsers","canManageUsersPassword","canManageSso","canManageBilling","hasProvider","EnrollMasterPasswordReset","toastStringRef","buildRequest","verification","keyString","orgKeys","LinkSsoComponent","ngAfterContentInit","OrganizationOptionsComponent","allowEnrollmentChanges","policy","showEnrolledStatus","unlinkSso","deleteSsoUser","toggleResetPasswordEnrollment","OrganizationFilterComponent","displayText","cipherStatus","StatusFilterComponent","selectedCipherType","typesNode","cipherTypeEnum","TypeFilterComponent","foldersGrouping","folderNodes","isCollapsed","FolderFilterComponent","collectionsGrouping","collectionNodes","collection","CollectionFilterComponent","VaultFilterComponent","onSearchTextChanged","searchTextChanged","CipherBulkDeleteRequest","ids","BulkDeleteComponent","cipherIds","onDeleted","deleteCiphersAdmin","deleteCiphers","deleteManyWithServer","softDeleteManyWithServer","deleteRequest","deleteManyCiphersAdmin","putDeleteManyCiphersAdmin","BulkMoveComponent","onMoved","moveManyWithServer","BulkRestoreComponent","onRestored","restoreManyWithServer","BulkShareComponent","onShared","nonShareableCount","shareableCiphers","checkedCollectionIds","shareManyWithServer","BulkActionsComponent","bulkDelete","promptPassword","selectedIds","ciphersComponent","bulkDeleteModalRef","bulkRestore","bulkRestoreModalRef","bulkShare","selectedCiphers","bulkShareModalRef","bulkMove","bulkMoveModalRef","VerifyEmailComponent","postAccountVerifyEmail","BroadcasterSubscriptionId","IndividualVaultComponent","changeDetectorRef","vaultService","showVerifyEmail","showBrowserOutdated","showUpdateKey","showPremiumCallout","trashCleanupWarning","getEmailVerified","navigator","userAgent","filterComponent","getCipherIdFromParams","action","cloneCipher","editCipher","editCipherId","queryParamsHandling","successfully","all","unsubscribe","applyVaultFilter","go","filterSearchText","editCipherAttachments","madeAttachmentChanges","attachmentsModalRef","shareCipher","shareModalRef","editCipherCollections","collectionsModalRef","folderAddEditModalRef","component","childComponent","cipherAddEditModalRef","updateKey","updateKeyModalRef","favorites","collectionId","relativeTo","replaceUrl","routes","IndividualVaultRoutingModule","IndividualVaultModule","DeviceType","EventService","getDefaultDateFilters","d","end","getMonth","getDate","setDate","toDateTimeLocalString","formatDateFilters","filterStart","filterEnd","isNaN","toISOString","getEventInfo","EventOptions","appInfo","getAppInfo","deviceType","humanReadableMessage","getEventMessage","appIcon","appName","msg","humanReadableMsg","formatCipherId","getShortId","formatCollectionId","formatGroupId","groupId","formatOrgUserId","formatPolicyId","policyId","formatProviderUserId","providerUserId","formatProviderOrganizationId","providerOrganizationId","Android","iOS","UWP","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","WindowsDesktop","MacOsDesktop","LinuxDesktop","ChromeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","VivaldiBrowser","EdgeBrowser","IEBrowser","UnknownBrowser","shortId","cipherInfo","makeAnchor","innerHTML","date","pad","getHours","getMinutes","num","norm","abs","EntityEventsComponent","userNamePipe","showUser","orgUsersUserIdMap","orgUsersIdMap","defaultDates","getOrganizationUsers","loadEvents","clearExisting","refreshPromise","morePromise","dates","promise","entity","getEventsProviderUser","entityId","continuationToken","getEventsOrganizationUser","getEventsCipher","actingUserId","eventInfo","user","userName","userEmail","ip","ipAddress","CipherCreateRequest","AddEditComponent","originalCipher","getCipherAdmin","putCipherAdmin","postCipherAdmin","deleteCipherAdmin","putDeleteCipherAdmin","AttachmentsComponent","deleteCipherAttachmentAdmin","CiphersComponent","onEventsClicked","accessEvents","allCiphers","getAllFromApiForOrganization","indexCiphers","canViewAllCollections","CipherCollectionsRequest","CollectionsComponent","putCipherCollectionsAdmin","OrganizationVaultFilterComponent","OrganizationVaultComponent","firstLoaded","vaultFilterComponent","viewEvents","eventsModalRef","OrganizationVaultRoutingModule","OrganizationVaultModule","OrganizationSwitcherComponent","activeOrganization","canAccessAdmin","OrganizationLayoutComponent","canViewAssignedCollections","SelectionReadOnlyRequest","hidePasswords","EntityUsersComponent","onEditedUsers","organizationUserType","organizationUserStatusType","showSelected","selectedCount","allUsers","loadUsers","users","searchedUsers","getGroupUsers","s","getCollectionUsers","accessAll","selectedChanged","filterSelected","selections","putGroupUsers","putCollectionUsers","CollectionAddEditComponent","onSavedCollection","onDeletedCollection","accessGroups","groups","groupsResponse","getGroups","orgKey","getCollectionDetails","externalId","g","putCollection","postCollection","deleteCollection","canCreate","pagedCollectionsCount","decryptCollections","getUserCollections","assignedCollections","pagedCollections","edit","canEdit","canDelete","addEditModalRef","canSave","removeCollection","usersModalRef","entityName","EventView","installationId","BaseEventsComponent","exportService","dirtyDates","exportEvents","appApiPromiseUnfulfilled","parseDates","exportPromise","export","loadAndParseEvents","startDate","endDate","requestEvents","getUserName","getEventExport","getFileName","exportFileName","blobOptions","EventsComponent","getProviderUsers","warning","getEventsOrganization","GroupRequest","GroupAddEditComponent","onSavedGroup","onDeletedGroup","access","getGroupDetails","putGroup","postGroup","deleteGroup","GroupsComponent","pagedGroupsCount","pagedGroups","removeGroup","ManageComponent","accessPolicies","accessSso","OrganizationKeysRequest","OrganizationUserBulkRequest","OrganizationUserConfirmRequest","UserConfirmComponent","onConfirmedUser","dontAskAgain","fingerprint","getFingerprint","setAutoConfirmFingerprints","BasePeopleComponent","validationService","searchPipe","statusMap","pagedUsers","activeUsers","pagedUsersCount","userStatusType","Invited","Accepted","Deactivated","confirmedCount","acceptedCount","getUsers","checkUser","filteredUsers","deleteWarningMessage","deleteUser","removeUser","showError","deactivate","deactivateWarningMessage","deactivateUser","activate","activateWarningMessage","activateUser","reinvite","reinviteUser","confirm","confirmUser","self","mapIndex","updateUser","publicKeyResponse","getUserPublicKey","autoConfirm","getAutoConfirmFingerPrints","confirmModalRef","getCheckedUsers","OrganizationUserBulkConfirmRequest","publicKeys","fingerprints","statuses","done","excludedUsers","isAccepted","getPublicKeys","entry","getCryptoKey","userIdsWithKeys","postConfirmRequest","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","BulkDeactivateComponent","isDeactivating","titleKey","warningKey","performBulkUserAction","bulkMessage","deactivateManyOrganizationUsers","activateManyOrganizationUsers","deleteUsers","deleteManyOrganizationUsers","BulkStatusComponent","ResetPasswordComponent","onPasswordReset","newPassword","getOrganizationUserResetPasswordDetails","kdfType","orgSymKey","decPrivateKey","decryptToBytes","decValue","rsaDecrypt","putOrganizationUserResetPassword","newPasswordStrengthTimeout","PermissionsApi","getResponseProperty","manageCiphers","OrganizationUserInviteRequest","emails","OrganizationUserUpdateRequest","NestedCheckboxComponent","onSavedUser","onDeletedUser","parentChecked","checkboxes","every","pascalize","UserAddEditComponent","onDeactivatedUser","onActivatedUser","isDeactivated","User","showCustom","manageAllCollectionsCheckboxes","manageAssignedCollectionsCheckboxes","Custom","getOrganizationUser","setRequestPermissions","clearPermissions","handleDependentPermissions","putOrganizationUser","Set","postOrganizationUserInvite","deleteOrganizationUser","deactivateOrganizationUser","activateOrganizationUser","OrganizationUserUpdateGroupsRequest","groupIds","UserGroupsComponent","userGroups","getOrganizationUserGroups","ug","putOrganizationUserGroups","PeopleComponent","userType","canResetPassword","orgUseResetPassword","orgHasKeys","orgResetPasswordPolicyEnabled","callingUserType","orgShareKey","postOrganizationKeys","getPolicyForOrganization","postOrganizationUserReinvite","postOrganizationUserConfirm","allowResetPassword","orgUser","callingUserHasPermission","groupsModalRef","bulkRemove","bulkRemoveModalRef","bulkDeactivate","bulkActivateOrDeactivate","bulkActivate","ref","bulkReinvite","postManyOrganizationUserReinvite","showBulkStatus","bulkConfirm","bulkConfirmModalRef","resetPassword","resetPasswordModalRef","successfullMessage","bulkStatusModalRef","keyedErrors","x","keyedFilteredUsers","hasOwnProperty","PolicyResponse","PolicyRequest","BasePolicy","display","BasePolicyComponent","FormControl","policyResponse","loadData","patchValue","buildRequestData","policiesEnabledMap","PolicyEditComponent","cdr","onSavedPolicy","policyType","factory","policyComponent","policyFormRef","getPolicy","Enabled","putPolicy","PolicyListService","addPolicies","getPolicies","PoliciesComponent","policyListService","policyIdFromEvents","orgPolicy","orgPolicies","op","editModalRef","OrganizationUpdateRequest","ApiKeyComponent","postKey","clientSecret","apiKey","keyType","PurgeVaultComponent","postPurgeCiphers","TaxInfoUpdateRequest","OrganizationTaxInfoUpdateRequest","TaxInfoComponent","onCountryChanged","taxInfo","taxId","line1","line2","city","postalCode","country","includeTaxId","pristine","getOrganizationTaxInfo","getTaxInfo","taxRates","getTaxRates","localTaxRate","rate","getTaxInfoRequest","submitTaxInfo","hasChanged","putOrganizationTaxInfo","putTaxInfo","changeCountry","CountBasedLocalizationKey","singular","plural","OrganizationContentSummaryItem","localizationKeyOptions","OrganizationContentSummary","totalItemCount","itemCountByType","DeleteOrganizationComponent","deleteOrganizationRequestType","organizationContentSummary","onSuccess","deleteOrganization","buildOrganizationContentSummary","organizationItems","deletedDate","getOrganizationItemCountByType","getOrganizationItemLocalizationKeysByType","items","AccountComponent","canUseApi","getOrganization","billingEmail","putOrganization","taxFormPromise","deleteModalRef","purgeVault","purgeModalRef","viewApiKey","apiKeyModalRef","postOrganizationApiKey","scope","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","rotateApiKey","rotateApiKeyModalRef","isRotation","postOrganizationRotateApiKey","PaymentMethodType","TransactionType","VerifyBankRequest","BitPayInvoiceRequest","AddCreditComponent","method","PayPal","onAdded","onCanceled","paymentMethodType","ppLoading","payPalConfig","ppButtonFormAction","ppButtonBusinessId","creditAmount","ppButtonCustomField","subject","returnUrl","ppButtonFormRef","BitPay","req","credit","amount","creditAmountNumber","postBitPayInvoice","bitPayUrl","formatAmount","floatAmount","parseFloat","toFixed","ElementRef","PaymentRequest","ThemeType","AbstractThemingService","lightInputColor","lightInputPlaceholderColor","darkInputColor","darkInputPlaceholderColor","PaymentComponent","themingService","showMethods","Card","hideBank","hidePaypal","hideCredit","destroy$","bank","routing_number","account_number","account_holder_name","account_holder_type","currency","btInstance","stripe","stripeElements","stripeCardNumberElement","stripeCardExpiryElement","stripeCardCvcElement","stripeScript","async","onload","Stripe","elements","setStripeElement","btScript","StripeElementStyle","base","fontFamily","fontSmoothing","StripeElementClasses","empty","BankAccount","Credit","setTheme","head","complete","removeChild","btStylesheet","changeMethod","braintree","dropin","authorization","container","paymentOptionPriority","paypal","buttonStyle","label","shape","tagline","createErr","console","createPaymentToken","reject","requestPaymentMethod","payload","nonce","catch","err","postSetupPayment","handleCardSetup","setupIntent","payment_method","createToken","handleStripeCardPayment","handleCardPayment","paymentIntent","classes","placeholder","mount","theme$","takeUntil","theme","effectiveTheme","Dark","AdjustPaymentComponent","onAdjusted","paymentComponent","paymentToken","taxInfoComponent","postAccountPayment","postOrganizationPayment","OrganizationBillingComponent","showAdjustPayment","showAddCredit","transactionType","billing","getOrganizationBilling","verifyBank","amount1","verifyAmount1","amount2","verifyAmount2","verifyBankPromise","postOrganizationVerifyBank","addCredit","paymentSourceInApp","closeAddCredit","changePayment","closePayment","balance","paymentSource","AppleInApp","GoogleInApp","invoices","transactions","OrganizationApiKeyType","OrganizationConnectionType","PlanType","BillingSyncConfigApi","billingSyncKey","BillingSyncConfigRequest","OrganizationConnectionRequest","BillingSyncKeyComponent","CloudBillingSync","existingConnectionId","createOrganizationConnection","updateOrganizationConnection","setParentConnection","deleteConnection","deleteOrganizationConnection","OrganizationApiKeyRequest","Default","ProductType","BillingSyncApiKeyComponent","lastSyncDate","showRotateScreen","BillingSync","keyRevisionDate","revisionDate","hasBillingToken","syncStatus","getSponsorshipSyncStatus","cancelRotate","rotateToken","dayDiff","date1","date2","diffTime","ImageSubscriptionHiddenComponent","OrganizationCreateRequest","OrganizationUpgradeRequest","ProviderOrganizationCreateRequest","clientOwnerEmail","organizationCreateRequest","OrganizationPlansComponent","showFree","showCancel","Free","productTypes","singleOrgPolicyBlock","discount","businessOwned","premiumAccessAddon","plans","getPlans","Enterprise","Teams","changedOwnedBusiness","Families","changedProduct","addValidators","selectedPlan","isAnnual","validPlans","canBeUsedByBusiness","legacyYear","familyPlan","FamiliesAnnually","basePrice","additionalStoragePriceMonthly","additionalStoragePricePerGb","seatPriceMonthly","seatPrice","additionalStorageTotal","hasAdditionalStorageOption","seatTotal","hasAdditionalSeatsOption","subTotal","hasPremiumAccessOption","premiumAccessOptionPrice","trialPeriodDays","taxComponent","taxRate","subtotal","taxCharges","freeTrial","selectedPlanInterval","selectablePlans","baseSeats","TeamsAnnually","changedCountry","userHasBlockingSingleOrgPolicy","shareKey","makeShareKey","collectionCt","createSelfHosted","createCloudHosted","updateOrganization","additionalStorageGb","planType","billingAddressCountry","billingAddressPostalCode","postOrganizationUpgrade","paymentIntentClientSecret","collectionName","tokenResult","taxIdNumber","billingAddressLine1","billingAddressLine2","billingAddressCity","billingAddressState","providerRequest","providerKey","getProviderKey","postProviderCreateOrganization","postOrganization","fd","FormData","postOrganizationLicense","ChangePlanComponent","onChanged","defaultUpgradePlan","defaultUpgradeProduct","OrganizationSubscriptionUpdateRequest","seatAdjustment","maxAutoscaleSeats","AdjustSubscription","limitSubscription","newSeatCount","currentSeatCount","newMaxSeats","postOrganizationUpdateSubscription","limitSubscriptionChanged","StorageRequest","AdjustStorageComponent","storageGbPrice","storageAdjustment","storageGbAdjustment","paymentFailed","postAccountStorage","postOrganizationStorage","DownloadLicenseComponent","onDownloaded","getOrganizationLicense","license","licenseString","UpdateLicenseComponent","onUpdated","updatePromise","postAccountLicense","postOrganizationLicenseUpdate","OrganizationSubscriptionComponent","adjustSeatsAdd","showAdjustSeats","showAdjustSeatAutoscale","adjustStorageAdd","showAdjustStorage","showUpdateLicense","showBillingSyncKey","showDownloadLicense","showChangePlan","userOrg","sub","getOrganizationSubscription","apiKeyResponse","getOrganizationApiKeyInformation","hasBillingSyncToken","getCloudCommunicationsEnabled","existingBillingSyncConnection","getOrganizationConnection","reinstate","reinstatePromise","postOrganizationReinstate","cancelPromise","postOrganizationCancel","changePlan","closeChangePlan","changed","downloadLicense","manageBillingSync","setupBillingSyncModalRef","closeDownloadLicense","updateLicense","closeUpdateLicense","updated","subscriptionAdjusted","adjustStorage","closeStorage","removeSponsorship","removeSponsorshipPromise","deleteRemoveSponsorship","manageBillingSyncSelfHosted","billingSyncKeyRef","billingSyncKeyViewContainerRef","connection","expiration","subscription","cancelled","cancelAtEndDate","upcomingInvoice","storageGb","storagePercentage","sponsoredSubscriptionItem","EnterpriseAnnually","EnterpriseMonthly","EnterpriseAnnually2019","EnterpriseMonthly2019","FamiliesAnnually2019","isSponsoredSubscription","SettingsComponent","access2fa","showBilling","UpdateTwoFactorDuoRequest","TwoFactorProviderRequest","TwoFactorBaseComponent","twoFactorProviderType","auth","authResponse","hashedSecret","verificationType","enable","enableFunction","disable","buildRequestModel","putTwoFactorOrganizationDisable","putTwoFactorDisable","requestClass","TwoFactorVerifyComponent","onAuthed","otp","apiCall","getTwoFactorRecover","getTwoFactorOrganizationDuo","getTwoFactorDuo","getTwoFactorEmail","getTwoFactorWebAuthn","getTwoFactorAuthenticator","getTwoFactorYubiKey","TwoFactorDuoComponent","processResponse","integrationKey","ikey","secretKey","skey","putTwoFactorOrganizationDuo","putTwoFactorDuo","DeviceVerificationRequest","unknownDeviceVerificationEnabled","UpdateTwoFactorAuthenticatorRequest","TwoFactorAuthenticatorComponent","qrScript","putTwoFactorAuthenticator","QRious","element","UpdateTwoFactorEmailRequest","TwoFactorEmailComponent","postTwoFactorEmailSetup","sentEmail","putTwoFactorEmail","TwoFactorRecoveryComponent","print","w","write","onafterprint","formatString","UpdateTwoFactorWebAuthnDeleteRequest","UpdateTwoFactorWebAuthnRequest","TwoFactorWebAuthnComponent","keyIdAvailable","keysConfiguredCount","webAuthnResponse","deviceResponse","putTwoFactorWebAuthn","removePromise","deleteTwoFactorWebAuthn","readKey","challengePromise","getTwoFactorWebAuthnChallenge","challenge","readDevice","webAuthnChallenge","log","resetWebAuthn","webAuthnListening","webAuthnError","listening","k","configured","migrated","UpdateTwoFactorYubioOtpRequest","TwoFactorYubiKeyComponent","nfc","key1","key2","key3","key4","key5","putTwoFactorYubiKey","disablePromise","existingKey","padRight","max","showPolicyWarning","deviceVerificationSettings","getDeviceVerificationSettings","isDeviceVerificationSectionEnabled","enableDeviceVerification","filterProvider","b","getTwoFactorProviders","p2","evaluatePolicies","openModal","authenticatorModalRef","updateStatus","yubikeyModalRef","duoModalRef","emailModalRef","webAuthnModalRef","recoveryModalRef","putDeviceVerificationSettings","TwoFactorSetupComponent","duoComp","getTwoFactorOrganizationProviders","CipherReportComponent","requiresPaid","hasLoaded","setCiphers","checkAccess","accessPremium","exposedPasswordMap","getAllCiphers","exposedPasswordCiphers","promises","exposedCount","canManageCipher","ExposedPasswordsReportComponent","manageableCiphers","services","cipherDocs","load2fa","inactive2faCiphers","docs","hasUris","domain","responseJson","json","service","serviceData","documentation","additionalDomain","InactiveTwoFactorReportComponent","ciphersWithPasswords","passwordUseMap","reusedPasswordCiphers","ReusedPasswordsReportComponent","ToolsComponent","unsecuredCiphers","UnsecuredWebsitesReportComponent","passwordStrengthMap","passwordStrengthCache","weakPasswordCiphers","isUserNameNotEmpty","getCacheKey","hasUserName","cacheKey","scoreKey","WeakPasswordsReportComponent","children","pathMatch","redirectTo","loadChildren","m","OrganizationImportExportModule","OrganizationsRoutingModule","PlanSponsorshipType","AcceptFamilySponsorshipComponent","register","OrganizationSponsorshipRedeemRequest","FamiliesForEnterpriseSetupComponent","badToken","showNewOrganization","_selectedFamilyOrganizationId","onOrganizationCreateSuccess","postPreValidateSponsorshipToken","existingFamilyOrganizations","selectedFamilyOrganizationId","planSponsorshipType","FamiliesForEnterprise","sponsoredOrganizationId","postRedeemSponsorship","BreachReportComponent","breachedAccounts","checkedUsername","ReportTypes","reports","exposedPasswords","requiresPremium","reusedPasswords","weakPasswords","unsecuredWebsites","inactive2fa","dataBreach","ReportCardComponent","report","hasPremium","bypassSecurityTrustHtml","click","ReportListComponent","ReportsComponent","ReportsRoutingModule","SendType","SendFileView","sizeName","SendTextView","hidden","SendAccessView","expirationDate","creatorIdentifier","SendFile","buildDomainModel","decryptObj","SendText","SendAccess","Text","File","model","SendAccessRequest","AccessComponent","sendType","passwordRequired","unavailable","hideEmail","maskedText","sendId","decKey","downloadData","getSendFileDownloadData","accessRequest","downloadMethod","copyText","toggleText","keyArray","passwordHash","pbkdf2","sendResponse","postSendAccess","sendAccess","makeSendKey","SendService","sendService","disableSend","expired","filteredSends","hasSearched","onSuccessfulLoad","applyTextSearch","removePassword","removePasswordWithServer","onSuccessfulRemovePassword","onSuccessfulDelete","link","getSendUrl","accessId","urlB64Key","clearSelections","selectedAll","selectType","selectedType","searchSends","SendView","notes","maxAccessCount","accessCount","deletionDate","BrowserPath","DateField","DatePreset","datePipe","onSavedSend","onDeletedSend","copyLink","disableHideEmail","emailVerified","alertShown","sendLinkBaseUrl","isSafari","isFirefox","setDates","loadSend","hasPassword","encryptSend","encSend","uploadPromise","copySuccess","copyLinkToClipboard","typeChanged","toggleOptions","sendData","togglePasswordVisible","datesChanged","datesForm","FormGroup","selectedDeletionDatePreset","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","expirationDatePresets","Never","Firefox","Safari","formattedDeletionDate","browserPath","now","miliseconds","setTime","safariTimePresetOptions","DeletionDate","ExpriationDate","nextWeek","setInitialFormValues","emitDates","valueChanges","onDeletionDatePresetSelect","clearExpiration","formattedExpirationDate","initialDeletionDate","toTimeString","initialExpirationDate","twentyFourHour","noon","midnight","ams","pms","h","hour","minutes","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","EffluxDatesComponent","ControlContainer","NgForm","SendComponent","addSend","editSend","sendAddEditModalRef","DeauthorizeSessionsComponent","postSecurityStamp","DeleteAccountComponent","deleteAccount","UpdateProfileRequest","culture","ProfileComponent","hidePasswordHint","profile","getProfile","putProfile","EmailTokenRequest","EmailRequest","ChangeEmailComponent","tokenSent","showTwoFactorEmailWarning","twoFactorProviders","newEmail","postEmail","reset","postEmailToken","showChangeEmail","deauthorizeSessions","deauthModalRef","CreateOrganizationComponent","orgPlansComponent","UpdateDomainsRequest","DomainRulesComponent","custom","global","getSettingsDomains","equivalentDomains","globalEquivalentDomains","domains","excluded","toggleExcluded","globalDomain","customize","excludedGlobalEquivalentDomains","d2","putSettingsDomains","indexTrackBy","EmergencyAccessAttachmentsComponent","EmergencyAddEditComponent","EmergencyAccessViewComponent","postEmergencyAccessView","viewAttachments","decCiphers","oldKeyBuffer","keyEncrypted","oldEncKey","cipherResponse","cipherData","getLocaleSortingFunction","EmergencyAccessStatusType","EmergencyAccessType","EmergencyAccessConfirmRequest","AttachmentResponse","PasswordHistoryResponse","lastUsedDate","CipherResponse","passwordHistory","EmergencyAccessGranteeDetailsResponse","granteeId","waitTimeDays","creationDate","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","EmergencyAccessViewResponse","EmergencyAccessInviteRequest","EmergencyAccessUpdateRequest","EmergencyAccessAddEditComponent","onSaved","View","emergencyAccessType","waitTimes","emergencyAccess","getEmergencyAccess","waitTime","putEmergencyAccess","postEmergencyAccessInvite","EmergencyAccessConfirmComponent","onConfirmed","EmergencyAccessPasswordRequest","EmergencyAccessTakeoverComponent","onDone","getEmergencyGrantorPolicies","takeoverResponse","postEmergencyAccessTakeover","postEmergencyAccessPassword","EmergencyAccessComponent","emergencyAccessStatusType","isOrganizationOwner","trustedContacts","getEmergencyAccessTrusted","grantedContacts","getEmergencyAccessGranted","details","contact","postEmergencyAccessReinvite","doConfirmation","deleteEmergencyAccess","removeGrantee","removeGrantor","requestAccess","postEmergencyAccessInitiate","RecoveryInitiated","approve","postEmergencyAccessApprove","RecoveryApproved","postEmergencyAccessReject","takeover","takeoverModalRef","debug","postEmergencyAccessConfirm","form","vaultTimeout","hours","CUSTOM_VALUE","customTimeInMinutes","MIN_CUSTOM_MINUTES","vaultTimeoutPolicy","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","vaultTimeouts","validatorChange","onChange","getVaultTimeout","onTouched","validate","policyError","exceedsMinimumTimout","minTimeoutError","registerOnValidatorChange","VaultTimeoutInputComponent","NG_VALIDATORS","PreferencesComponent","vaultTimeoutAction","isDev","localeOptions","supportedTranslationLocales","localeNames","themeOptions","Light","System","getVaultTimeoutAction","enableFavicons","enableGravatars","enableFullWidth","getEnableFullWidth","getLocale","startingLocale","getTheme","startingTheme","valid","setVaultTimeoutOptions","setEnableGravitars","setEnableFullWidth","updateConfiguredTheme","setLocale","vaultTimeoutActionChanged","newValue","SendFileApi","SendTextApi","SendRequest","fileLength","SendWithIdRequest","ChangePasswordComponent","rotateEncKey","rotateEncKeyClicked","cryptoKey","updateEmergencyAccesses","updateAllResetPasswordKeys","allowedStatuses","filteredAccesses","updateRequest","KdfRequest","ChangeKdfComponent","kdfOptions","recommendedKdfIterations","postAccountKdf","SecurityKeysComponent","showChangeKdf","viewUserApiKey","viewUserApiKeyModalRef","postUserApiKey","rotateUserApiKey","rotateUserApiKeyModalRef","postUserRotateApiKey","SecurityComponent","showChangePassword","SecurityRoutingModule","getHasPremiumPersonally","hasFamilySponsorshipAvailable","canManageSponsorships","hasPremiumFromOrg","getHasPremiumFromOrganization","getUserBillingHistory","hideSubscription","hasNoHistory","notAllowedValueAsync","valueGetter","caseInsensitive","notAllowedValue","controlValue","SponsoringOrgRowComponent","sponsoringOrg","isSelfHosted","sponsorshipRemoved","statusMessage","statusClass","locale$","setStatus","revokeSponsorship","revokeSponsorshipPromise","doRevokeSponsorship","resendEmail","resendEmailPromise","postResendSponsorshipOffer","deleteRevokeSponsorship","toDelete","validUntil","formatDate","SponsoredFamiliesComponent","availableSponsorshipOrgs","activeSponsorshipOrgs","sponsorshipForm","selectedSponsorshipOrgId","validators","sponsorshipEmail","asyncValidators","updateOn","postCreateSponsorship","sponsoredEmail","friendlyName","resetForm","forceReload","allOrgs","PaymentMethodComponent","getUserBillingPayment","PremiumComponent","premiumPrice","finalizePremium","postPremium","paymentResponse","SubscriptionComponent","UserBillingHistoryComponent","UserSubscriptionComponent","getUserSubscription","usingInAppPurchase","postReinstatePremium","postCancelPremium","SubscriptionRoutingModule","UsernameGenerationService","usernameGenerationService","comingFromAddEdit","onSelected","usernameOptions","avoidAmbiguous","usernameWebsite","passTypeOptions","usernameTypeOptions","desc","subaddressOptions","catchallOptions","forwardOptions","passwordOptionsResponse","ambiguous","subaddressEmail","subaddressType","catchallType","website","websiteOption","generatorOptions","getGeneratorOptions","regenerateWithoutButtonPress","regenerate","setGeneratorOptions","regeneratePassword","regenerateUsername","sliderChanged","savePasswordOptions","addHistory","sliderInput","normalizePasswordOptions","saveOptions","saveUsernameOptions","usernameGeneratingPromise","copyOptions","number","normalizeOptions","history","getHistory","SelectCopyDirective","onCopy","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","ColorPasswordPipe","generateTemplate","templateGenerator","passwordArray","colorizedPassword","isSpecial","PasswordGeneratorHistoryComponent","GeneratorComponent","findIndex","historyModalRef","lengthChanged","minNumberChanged","minSpecialChanged","flagName","flag","ImportExportModule","OssRoutingModule","useHash","paramsInheritanceStrategy","OrganizationManageModule","ScrollingModule","OrganizationUserModule","VerticalStepperModule","TrialInitiationModule","TitleCasePipe","CdkStepperModule","OssModule","ThemeBuilder","configuredTheme","systemTheme","updateSystemTheme","StateVersion","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","ThemingService","_theme","BehaviorSubject","monitorThemeChanges","getSystemTheme","monitorConfiguredThemeChanges","monitorSystemThemeChanges","getValue","documentElement","Nord","SolarizedDark","matchMedia","fromEvent","WINDOW","DOCUMENT","AbstractEncryptService","FileUploadService","NotificationsService","SettingsService","StateMigrationService","AbstractStorageService","AccountFactory","accountConstructor","args","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","createGlobal","createAccount","EnvironmentUrls","api","icons","notifications","webVault","keyConnector","EncryptionPair","DataEncryptionPair","TemporaryDataEncryption","AccountData","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","AccountProfile","environmentUrls","pinProtected","AccountTokens","tokens","WindowState","stateVersion","One","DeviceRequest","appId","getDevice","getDeviceString","pushToken","TokenRequest","device","alterIdentityTokenHeaders","headers","setTwoFactor","toIdentityToken","client_id","deviceName","twoFactorToken","twoFactorProvider","twoFactorRemember","ApiTokenRequest","startsWith","grant_type","client_secret","ApiKeyResponse","AttachmentUploadDataResponse","fileUploadType","cipherMiniResponse","BillingResponse","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","needsVerification","pdfUrl","paid","createdDate","refunded","partiallyRefunded","refundedAmount","BillingHistoryResponse","BillingPaymentResponse","BreachAccountResponse","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","SelectionReadOnlyResponse","CollectionResponse","CollectionDetailsResponse","CollectionGroupDetailsResponse","DeviceVerificationResponse","GlobalDomainResponse","DomainsResponse","EventResponse","GroupResponse","GroupDetailsResponse","IdentityCaptchaResponse","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","apiUseKeyConnector","IdentityTwoFactorResponse","twoFactorProviders2","prop","KeyConnectorUserKeyResponse","ListResponse","dr","SsoConfigApi","configType","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","view","OpenIdConnect","openId","Saml2","saml","idpAllowOutboundLogoutRequests","OrganizationSsoResponse","urls","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","OrganizationApiKeyInformationResponse","OrganizationAutoEnrollStatusResponse","OrganizationConnectionResponse","rawConfig","KeysResponse","OrganizationKeysResponse","PlanResponse","nameLocalizationKey","descriptionLocalizationKey","baseStorageGb","maxUsers","maxAdditionalSeats","maxAdditionalStorage","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","has2fa","hasApi","hasSso","hasResetPassword","upgradeSortOrder","displaySortOrder","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","OrganizationResponse","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","OrganizationSponsorshipSyncStatusResponse","SubscriptionResponse","storageName","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","trialEndDate","periodStartDate","periodEndDate","cancelledDate","BillingSubscriptionItemResponse","quantity","OrganizationSubscriptionResponse","OrganizationUserBulkPublicKeyResponse","OrganizationUserBulkResponse","OrganizationUserResponse","OrganizationUserUserDetailsResponse","twoFactorEnabled","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","ProfileOrganizationResponse","familySponsorshipLastSyncDateString","familySponsorshipValidUntilString","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","providerOrganizations","premiumPersonally","premiumFromOrganization","securityStamp","PaymentResponse","userProfile","PreloginResponse","ProviderOrganizationResponse","ProviderOrganizationOrganizationDetailsResponse","ProviderResponse","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","SendAccessResponse","SendFileDownloadDataResponse","SendResponse","SendFileUploadDataResponse","SsoPreValidateResponse","FolderResponse","SyncResponse","TaxInfoResponse","taxIdType","TaxRateResponse","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","TwoFactorWebAuthnResponse","KeyResponse","ChallengeResponse","attestation","authenticatorSelection","excludeCredentials","extensions","pubKeyCredParams","rp","TwoFactorYubiKeyResponse","UserKeyResponse","HtmlStorageLocation","hashStart","hashEnding","nativeFetch","getHibpBreach","throttleKey","propertyKey","descriptor","originalMethod","allThrottles","throttles","getThrottles","argsThrottleKey","queue","exec","onFinally","apply","val","AuthResult","LogInStrategy","captchaBypassToken","tokenRequest","startLogIn","clearSelectedProvider","postIdentityToken","processTwoFactorResponse","processCaptchaResponse","processTokenResponse","buildDeviceRequest","buildTwoFactor","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","Remember","saveAccountInformation","tokenResponse","accountInformation","decodeToken","addAccount","hasPremiumPersonally","setTwoFactorToken","createKeyPairForOldAccount","setProviders","postAccountKeys","ApiLogInStrategy","getKeyConnectorUrl","getAndSetKey","setApiKeyClientId","setApiKeyClientSecret","PasswordTokenRequest","PasswordLogInStrategy","localHashedPassword","SsoTokenRequest","code_verifier","redirect_uri","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","PreloginRequest","sequentialize","caches","getCache","argsCacheKey","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","lastUsedIndex","localData","lastLaunched","y","valueOf","getNextIndex","CipherBulkMoveRequest","CipherBulkRestoreRequest","CipherBulkShareRequest","CipherShareRequest","DomainMatchBlacklist","CipherService","settingsService","fileUploadService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","clearCache","clearDecryptedCiphersState","existingCipher","ph","passwordRevisionDate","hasFields","existingHiddenFields","hiddenFields","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encField","encryptField","fieldModel","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","hasKey","getAllDecryptedForGrouping","groupingId","getAllDecryptedForUrl","includeOtherTypes","defaultMatch","eqDomainsPromise","getEquivalentDomains","eqDomains","eqDomain","matchingDomains","getDefaultUriMatch","domainUrlHost","urlHost","RegExp","test","getCiphersOrganization","getLastUsedForUrl","autofillOnPageLoad","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","setLocalData","decryptedCipherCache","cached","updateLastLaunchedDate","saveNeverDomain","getNeverDomains","setNeverDomains","postCipherCreate","postCipher","putCipher","upsert","attachmentPromises","shareAttachmentWithServer","encCipher","putShareCipher","encCiphers","putShareCiphers","toCipherData","unencryptedFile","reader","FileReader","readAsArrayBuffer","evt","cData","onerror","filename","encFileName","dataEncKey","encData","encryptToBytes","fileSize","byteLength","adminRequest","uploadDataResponse","postCipherAttachment","uploadCipherAttachment","legacyServerAttachmentFileUpload","blob","Blob","Buffer","filepath","contentType","postCipherAttachmentAdminLegacy","postCipherAttachmentLegacy","putCipherCollections","setEncryptedCiphers","clearEncryptedCiphersState","putMoveCiphers","deleteManyCiphers","deleteAttachment","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","collator","compare","localeCompare","softDelete","setDeletedDate","putDeleteCipher","putDeleteManyCiphers","clearDeletedDate","putRestoreCipher","putRestoreManyCiphers","restores","attachmentView","attachmentResponse","postShareCipherAttachment","theProp","theObj","modelProp","loginUri","cardholderName","expMonth","expYear","firstName","middleName","lastName","address1","address2","address3","company","phone","ssn","passportNumber","licenseNumber","lastUsed","autofillOnPageLoadDefault","getAutoFillOnPageLoadDefault","clearSortedCiphers","EEFLongWordList","EncArrayBuffer","EncryptedObject","BaseEncryptedOrganizationKey","EncryptedOrganizationKey","ProviderEncryptedOrganizationKey","toData","CryptoService","encryptService","setCryptoMasterKey","storeKey","keyHash","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","providerOrgs","encOrgKeyData","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","keySuffix","inMemoryKey","getCryptoMasterKey","Auto","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","clearSecretKeyStore","storedKeyHash","getEncKeyHelper","getPublicKey","inMemoryPublicKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","getOrgKeys","decryptedOrganizationKeys","getDecryptedOrganizationKeys","getEncryptedOrganizationKeys","encOrgKey","fromData","decOrgKey","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","hasKeyInMemory","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","setLegacyEtmKey","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearPinProtectedKey","setEncryptedPinProtected","clearKeys","toggleKey","salt","protectedKeyCs","pinProtectedKey","getEncryptedPinProtected","randomBytes","keyPair","rsaGenerateKeyPair","stretchKey","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","getKeyForEncryption","buildEncKey","plainValue","encValue","aesEncrypt","macLen","mac","encBytes","Uint8Array","iv","encType","privateKeyValue","headerPieces","encPieces","alg","encString","decipher","aesDecryptToBytes","encryptionType","resolveLegacyKey","encBuf","ctBytes","ivBytes","macBytes","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","keyB64","getBiometricUnlock","getCryptoMasterKeyBiometric","macKey","macData","hmac","keyForEnc","computedMac","aesDecrypt","legacyKey","getLegacyEtmKey","minimumEntropy","entropyPerWord","numWords","hashArr","phrase","hashNumber","remainder","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","symmetricCryptoKey","EventData","EventRequest","EventExport","FileUploadType","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","Headers","toUTCString","searchParams","blobResponse","baseUrl","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","expiry","utfBlockId","blockIdList","xml","Version","month","day","Number","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","FolderData","SetKeyConnectorKeyRequest","KeyConnectorUserKeyRequest","NotificationType","NotificationResponse","contextId","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","GeneratedPasswordHistory","PasswordGeneratorPolicyOptions","defaultType","minLength","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","capitalize","includeNumber","inEffect","DefaultOptions","minNumber","minUppercase","minLowercase","minSpecial","wordSeparator","ResetPasswordPolicyOptions","ProviderUserStatusType","ProviderUserType","Provider","isProviderAdmin","ProviderAdmin","indexing","immediateSearchLocales","defaultSearchableMinLength","searchableMinLength","lunr","Pipeline","registerFunction","normalizeAccentsPipelineFunction","query","normalizeSearchQuery","time","builder","Builder","pipeline","boost","extractor","subTitle","uriExtractor","fieldExtractor","attachmentExtractor","build","timeEnd","results","isArray","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","toLocaleLowerCase","sendsMatched","lowPriorityMatched","joined","hasAttachments","hostname","protocolIndex","queryIndex","searchableFields","metadata","normalize","SendFileData","SendTextData","SendData","Send","containerService","getCryptoService","Keys","StorageLocation","ProviderData","State","globals","accounts","authenticatedAccounts","accountActivity","partialKeys","storageService","secureStorageService","memoryStorageService","stateMigrationService","stateFactory","useAccountCache","hasBeenInited","isRecoveredSession","accountDiskCache","needsMigration","migrate","setState","createGlobals","initAccountState","updateState","syncAccountFromDisk","storedActiveUser","activeUserId","pushAccounts","diskAccount","getAccountFromDisk","account","setAccountEnvironmentUrls","scaffoldNewAccountStorage","setLastActive","setActiveUser","clearDecryptedDataForActiveUser","clean","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getAccessToken","getTimeoutBasedStorageOptions","getAccount","setAccessToken","saveAccount","getAlwaysShowDock","getGlobals","defaultOnDiskOptions","alwaysShowDock","setAlwaysShowDock","saveGlobals","getApiKeyClientId","apiKeyClientId","getApiKeyClientSecret","apiKeyClientSecret","autoConfirmFingerPrints","autoFillOnPageLoadDefault","setAutoFillOnPageLoadDefault","getBiometricAwaitingAcceptance","biometricAwaitingAcceptance","setBiometricAwaitingAcceptance","getBiometricFingerprintValidated","biometricFingerprintValidated","setBiometricFingerprintValidated","getBiometricLocked","biometricLocked","setBiometricText","biometricUnlock","setBiometricUnlock","setHasPremiumPersonally","hasPremiumFromOrganization","getOrganizations","setHasPremiumFromOrganization","getClearClipboard","defaultOnDiskLocalOptions","clearClipboard","setClearClipboard","getCollapsedGroupings","collapsedGroupings","setCollapsedGroupings","getConvertAccountToKeyConnector","convertAccountToKeyConnector","setConvertAccountToKeyConnector","cryptoMasterKey","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","getDecodedToken","decodedToken","setDecodedToken","decrypted","getDecryptedCollections","setDecryptedCollections","getDecryptedPasswordGenerationHistory","setDecryptedPasswordGenerationHistory","getDecryptedPolicies","setDecryptedPolicies","decryptedSerialized","getDecryptedSends","setDecryptedSends","defaultUriMatch","setDefaultUriMatch","getDisableAddLoginNotification","disableAddLoginNotification","setDisableAddLoginNotification","getDisableAutoBiometricsPrompt","disableAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","getDisableAutoTotpCopy","disableAutoTotpCopy","setDisableAutoTotpCopy","getDisableBadgeCounter","disableBadgeCounter","setDisableBadgeCounter","getDisableChangedPasswordNotification","disableChangedPasswordNotification","setDisableChangedPasswordNotification","getDisableContextMenuItem","disableContextMenuItem","setDisableContextMenuItem","getDisableGa","disableGa","setDisableGa","getDontShowCardsCurrentTab","dontShowCardsCurrentTab","setDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","dontShowIdentitiesCurrentTab","setDontShowIdentitiesCurrentTab","setEmail","setEmailVerified","getEnableAlwaysOnTop","accountPreference","enableAlwaysOnTop","globalPreference","setEnableAlwaysOnTop","getEnableAutoFillOnPageLoad","enableAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","enableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","enableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","enableCloseToTray","setEnableCloseToTray","enableGravitars","getEnableMinimizeToTray","enableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","enableStartToTray","setEnableStartToTray","getEnableTray","enableTray","setEnableTray","defaultOnDiskMemoryOptions","encrypted","getEncryptedCollections","setEncryptedCollections","getEncryptedFolders","setEncryptedFolders","getEncryptedPasswordGenerationHistory","setEncryptedPasswordGenerationHistory","getEncryptedPolicies","setEncryptedPolicies","getEncryptedSends","setEncryptedSends","getEntityId","setEntityId","getEntityType","entityType","setEntityType","getEnvironmentUrls","getGlobalEnvironmentUrls","setEnvironmentUrls","setEquivalentDomains","getEventCollection","eventCollection","setEventCollection","getEverBeenUnlocked","everBeenUnlocked","getForcePasswordReset","setForcePasswordReset","getInstalledVersion","installedVersion","setInstalledVersion","getLastActive","lastSync","setLastSync","legacyEtmKey","getMainWindowSize","mainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","minimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","neverDomains","getNoAutoPromptBiometrics","noAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","noAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","openAtLogin","setOpenAtLogin","organizationInvitation","setOrganizations","getPasswordGenerationOptions","passwordGenerationOptions","setPasswordGenerationOptions","getUsernameGenerationOptions","usernameGenerationOptions","setUsernameGenerationOptions","setProtectedPin","publicKeySerialized","getRefreshToken","setRefreshToken","rememberedEmail","getSecurityStamp","setSecurityStamp","getSettings","setSettings","ssoOrganizationIdentifier","ssoState","setUsesKeyConnector","setVaultTimeout","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","htmlStorageLocation","Local","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deepClone","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","stateUpdater","updatedState","withPrototype","converter","originalResult","prototype","getOwnPropertyDescriptors","withPrototypeForArrayMembers","memberConstructor","memberConverter","withPrototypeForObjectValues","valuesConstructor","valuesConverter","entries","withPrototypeForMap","decoded","setTokens","clientIdClientSecret","setToken","setClientId","setClientSecret","getClientId","getClientSecret","getToken","clearTwoFactorToken","clearToken","storedToken","getTokenExpirationDate","exp","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","tokenNeedsRefresh","email_verified","getIssuer","iss","getIsExternal","amr","v1Keys","autoConfirmFingerprints","enableBiometric","encOrgKeys","encPrivate","lastActive","ssoIdentifier","stamp","usesConnector","v1KeyPrefixes","currentStateVersion","getCurrentStateVersion","Latest","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","Four","getAuthenticatedAccounts","migratedAccount","migrateAccountFrom4To5","setCurrentStateVersion","Five","clearV1Keys","clearingUserId","keyPrefix","defaultAccount","accountSettings","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","authenticationStatus","authenticatedUserIds","encryptedOrgKeys","newVersion","OrganizationData","SyncService","logoutCallback","syncInProgress","toJSON","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","getSync","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","syncUpsertFolder","notification","isEdit","localFolder","remoteFolder","syncDeleteFolder","syncUpsertCipher","shouldUpdate","localCipher","checkCollections","remoteCipher","getFullCipherDetails","syncDeleteCipher","syncUpsertSend","localSend","remoteSend","getSend","syncDeleteSend","getAccountRevisionDate","userNeedsMigration","setConvertAccountRequired","B32Chars","SteamChars","VerifyOTPRequest","OTP","wordCapitalize","wordIncludeNumber","forwardedService","forwardedAnonAddyDomain","DecryptParameters","subscribers","messageCallback","InjectionToken","MEMORY_STORAGE","SECURE_STORAGE","STATE_FACTORY","STATE_SERVICE_USE_CACHE","LOGOUT_CALLBACK","LOCKED_CALLBACK","LOCALES_DIRECTORY","SYSTEM_LANGUAGE","LOG_MAC_FAILURES","JslibServicesModule","useValue","LOCALE_ID","useFactory","deps","language","makeAndGetAppId","getAnonymousAppId","existingId","guid","logInStrategy","strategy","clearState","saveState","requiresCaptcha","callback","Unlocked","preloginResponse","postPrelogin","startSessionTimeout","clearSessionTimeout","sessionTimeout","Injector","_folders","_folderViews","updateObservables","updates","cId","foldersMap","decryptFolderPromises","decryptedFolders","noneFolder","postFolder","putFolder","deleteFolder","decCollections","decryptedCollections","collectionCopy","getNested","urlsSubject","setUrlsFromStorage","hasBaseUrl","getNotificationsUrl","notificationsUrl","getApiUrl","apiUrl","identityUrl","getEventsUrl","eventsUrl","envUrls","setUrls","formatUrl","getUrls","period","digits","keyB32","isOtpAuth","isSteamAuth","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","timeBytes","keyBytes","b32ToBytes","sign","offset","binary","fullCode","trunc","l","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","getPasswordGeneratorPolicyOptions","currentPolicy","useUpper","useLower","minNumbers","decryptHistory","currentHistory","matchesPrevious","unshift","newHistory","encryptHistory","userInputs","globalUserInputs","finalUserInputs","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","generateCatchall","generateSubaddress","generateForwarded","generateWord","word","zeroPad","atIndex","emailBeginning","emailEnding","subaddressString","randomString","catchallDomain","startString","forwardedSimpleLoginApiKey","generateSimpleLoginAlias","forwardedAnonAddyApiToken","generateAnonAddyAlias","forwardedFirefoxApiToken","generateFirefoxRelayAlias","charSet","requestInit","redirect","Authentication","note","alias","apiToken","websiteNote","Authorization","generated_for","full_address","customUserAgent","isWebClient","isDesktopClient","Accept","identityToken","getClientType","qsStringify","getCredentials","isJsonResponse","TwoFactorProviders2","HCaptcha_SiteKey","doAuthRefresh","postSetKeyConnectorKey","postIapCheck","postAccountRequestOTP","postAccountVerifyOTP","postConvertToKeyConnector","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","postImportCiphers","postImportOrganizationCiphers","putRestoreCipherAdmin","renewAttachmentUploadUrl","postAttachmentFile","deleteCollectionUser","deleteGroupUser","getPoliciesByInvitedUser","postImportDirectory","postPublicImportDirectory","rawId","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","organizationConnectionId","getOrganizationSso","postOrganizationSso","postOrganizationSeat","postProviderSetup","getProvider","putProvider","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","deleteProviderOrganization","getEvents","addEventParameters","getEventsProvider","postEventsCollect","authHeader","getActiveBearerToken","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","sponsoredOrgId","sponsoringOrganizationId","sponsoringOrgId","doRefreshToken","doApiTokenRefresh","deviceRequest","hasResponse","alterHeaders","requestUrl","tokenError","isTextResponse","Message","typeHeader","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","getSettingsKey","setSettingsKey","lockedCallback","loggedOutCallback","inited","checkOnInterval","startCheck","checkVaultTimeout","isViewOpen","shouldLock","executeTimeoutAction","allowSoftLock","currentAction","vaultTimeoutSeconds","getExport","format","getOrganizationExport","getEncryptedExport","getDecryptedExport","getPasswordProtectedExport","clearText","encKeyValidation","encText","jsonDoc","passwordProtected","encKeyValidation_DO_NOT_EDIT","getOrganizationEncryptedExport","getOrganizationDecryptedExport","prefix","extension","padNumber","getSeconds","decFolders","exportCiphers","buildCommonCipher","collectionPromises","decCol","cipherPromises","decCipher","collectionsMap","padCharacter","numString","login_uri","login_username","login_password","login_totp","connected","inactive","reconnectTimer","signalrConnection","off","withUrl","accessTokenFactory","skipNegotiation","transport","withHubProtocol","on","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","sync","reconnectFromActivity","disconnectFromInactivity","isAuthenticated","payloadUserId","UserId","myUserId","random","crypto","subtle","algorithm","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","n","okm","md","valueBytes","toByteString","update","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","hmacFast","bytes","getBytes","compareFast","rand","Uint32Array","putInt32","aesDecryptFastParameters","meta","encKeyByteString","macKeyByteString","encKeyB64","macKeyB64","aesDecryptFast","parameters","dataBuffer","finish","output","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","arr","getRandomValues","logMacFailures","plainBuf","encObj","fastParams","logMacFailed","uploadEvents","uploadImmediately","orgIds","clearEvents","decryptedPolicies","diskPolicies","minComplexity","requireUpper","requireLower","requireNumbers","requireSpecial","toLocaleUpperCase","resetPasswordPolicyOptions","policiesResponse","policyFilter","filteredPolicies","policySet","isExcemptFromPolicies","isExemptFromPolicies","fileData","ArrayBuffer","encryptFileData","parseFile","decSends","legacyServerSendFileUpload","loggedInUsingSso","requiredByOrganization","userIsNotUsingKeyConnector","keyConnectorRequest","handleKeyConnectorError","userKeyResponse","keyArr","pubKey","privKey","setPasswordRequest","alreadyHashed","validateInput","requestOTP","getByIdentifier","hasOrganizations","selectedTwoFactorProviderType","twoFactorProvidersData","supportsDuo","providerPriority","_value","setSelectedProvider","clearProviders","errors","controlErrors","keyError","MemoryStorageService","store","AccountSettings","Account","BroadcasterMessagingService","subscriber","arg","HtmlStorageService","localStorage","getItem","sessionStorage","setItem","removeItem","BlurClickDirective","blur","PasswordRepromptComponent","ClientType","WebPlatformUtilsService","browserCache","chrome","Web","isChrome","isEdge","isOpera","isVivaldi","isMacAppStore","rel","PublicKeyCredential","confirmText","cancelText","bodyIsHtml","iconClasses","bootstrapModal","removeAttribute","iconHtmlStr","heightAuto","buttonsStyling","iconHtml","titleText","showCancelButton","cancelButtonText","showConfirmButton","confirmButtonText","doc","clipboardData","setData","queryCommandSupported","textarea","position","copyEl","contains","execCommand","warn","readFromClipboard","authenticateBiometric","ContainerService","attachToWindow","attachToGlobal","bitwardenContainerService","InitService","notificationsService","eventLoggingService","ModalService","modalOpen","FileDownloadBuilder","_request","fileType","fileNameLower","endsWith","WebFileDownloadService","createObjectURL","ServicesModule","APP_INITIALIZER","initService","systemLanguage","localesDirectory","getLocalesJson","_locale","ReplaySubject","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","p3","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","filePath","localesResult","migrationStateFrom1To2","WildcardRoutingModule","ProviderAddOrganizationRequest","WebProviderService","addOrganizationToProvider","encryptedOrgKey","detachOrganizastion","AddOrganizationComponent","webProviderService","onAddedOrganization","ProviderGuard","ProvidersComponent","DisallowedPlanTypes","ClientsComponent","manageOrganizations","showAddExisting","pagedClientsCount","clients","candidateOrgs","allowedOrgsIds","addableOrganizations","pagedClients","addExistingOrganization","addModalRef","ProviderUserAcceptRequest","AcceptProviderComponent","providerUsersUserIdMap","providerUsersIdMap","ProviderUserBulkRequest","ProviderUserConfirmRequest","ProviderUserBulkConfirmRequest","BulkConfirmComponent","BulkRemoveComponent","ProviderUserInviteRequest","ProviderUserUpdateRequest","ServiceUser","ProvidersLayoutComponent","showManageTab","showSettingsTab","ProviderUpdateRequest","SetupProviderComponent","ProviderSetupRequest","SetupComponent","ProvidersRoutingModule","ProvidersModule","AppRoutingModule","DisableSendPolicy","DisableSendPolicyComponent","MasterPasswordPolicy","MasterPasswordPolicyComponent","showKeyConnectorInfo","passwordScores","PasswordGeneratorPolicy","PasswordGeneratorPolicyComponent","defaultTypes","PersonalOwnershipPolicy","PersonalOwnershipPolicyComponent","RequireSsoPolicy","RequireSsoPolicyComponent","singleOrgEnabled","ResetPasswordPolicy","ResetPasswordPolicyComponent","SendOptionsPolicy","SendOptionsPolicyComponent","SingleOrgPolicy","SingleOrgPolicyComponent","TwoFactorAuthenticationPolicy","TwoFactorAuthenticationPolicyComponent","toastrService","lastActivity","idleTimer","isIdle","lang","runOutsideAngular","onmousemove","recordActivity","onmousedown","ontouchstart","onclick","onscroll","onkeypress","setFullWidth","idleStateChanged","sanitize","SecurityContext","enableHtml","trustedHtml","timeOut","DisablePersonalVaultExportPolicy","DisablePersonalVaultExportPolicyComponent","MaximumVaultTimeoutPolicy","MaximumVaultTimeoutPolicyComponent","AppComponent","dirtyRequired","dirty","OrganizationSsoRequest","SsoConfigView","BaseCvaComponent","controlDir","internalControl","onValueChangesInternal","valueAccessor","showDescribedBy","controlId","helperText","hasValidator","onBlurInternal","InputCheckboxComponent","SelectComponent","InputStripSpacesDirective","onInput","A11yInvalidDirective","formControlDirective","statusChanges","InputTextReadOnlyComponent","showCopy","showLaunch","InputTextComponent","stripSpaces","transformValue","emitEvent","doStripSpaces","onValueChangeInternal","defaultSigningAlgorithm","ssoType","ssoTypeOptions","None","samlSigningAlgorithms","saml2SigningBehaviourOptions","IfIdpWantAuthnRequestsSigned","Always","saml2BindingTypeOptions","HttpRedirect","HttpPost","saml2NameIdFormatOptions","NotConfigured","Unspecified","EmailAddress","X509SubjectName","WindowsDomainQualifiedName","KerberosPrincipalName","EntityIdentifier","Persistent","Transient","connectRedirectOptions","RedirectGet","FormPost","showOpenIdCustomizations","haveTestedKeyConnector","openIdForm","samlForm","ssoConfigForm","newType","updateValueAndValidity","ssoSettings","populateForm","validateForm","validateKeyConnectorUrl","readOutErrors","fromView","markAsPending","invalidUrl","toggleOpenIdCustomizations","getErrorCount","acc","markAsDirty","markAsTouched","ssoConfigView","errorCount","errorCountText","div","innerText","existing","OrganizationsModule","AppModule","OverlayModule","BrowserAnimationsModule","enableProdMode","platformBrowser","bootstrapModule","preserveWhitespaces","CalloutComponent","useAlertRole","calloutStyle","enforcedPolicyMessage","getPasswordScoreAlertDisplay","UserVerificationComponent","disableRequestOTP","sentCode","processChanges","trigger","transition","opacity","animate","ApiActionDirective","appApiAction","captchaRequired","AutofocusDirective","condition","autofocus","InputVerbatimDirective","disableComplete","BitwardenToast","toastPackage","BitwardenToastGlobalConfig","DefaultNoComponentGlobalConfig","toastComponent","BitwardenToastModule","ngModule","TOAST_CONFIG","default","numberFormats","cardLength","blocks","Other","CreditCardNumberPipe","creditCardNumber","rules","matchingRule","chunks","total","JslibModule","forRoot","maxOpened","autoDismiss","closeButton","DynamicTreeNode","transformation","storedFolders","orgCiphers","oc","nestedFolders","getAllFoldersNested","storedCollections","folderCopy","getFolderNested","I18nPipe","SearchPipe","prop1","prop2","prop3","UserNamePipe","ValidationService","defaultErrorMessage","validationErrors","getAllMessages","ApiService","CollectionService","ExportService","FileDownloadService","FolderService","InternalFolderService","I18nService","KeyConnectorService","LogService","OrganizationService","PlatformUtilsService","PolicyService","UserVerificationService","CipherRepromptType","CipherType","EncryptionType","EventType","FieldType","KdfType","DEFAULT_KDF_TYPE","PBKDF2_SHA256","DEFAULT_KDF_ITERATIONS","SEND_KDF_ITERATIONS","LoginLinkedId","CardLinkedId","IdentityLinkedId","Permissions","PolicyType","SecureNoteType","UriMatchType","VerificationType","LinkedMetadata","_i18nKey","TreeNode","ServiceUtils","nodeTree","partIndex","delimiter","partName","nestedTraverse","newPartName","getTreeNodeObject","getDomain","isValid","nodeURL","Utils","isNode","process","release","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","binaryString","atob","fromB64ToArray","fromUrlB64ToB64","strUtf8","fromB64toUrlB64","fromBufferToB64","b64Str","encodedString","decodeURIComponent","escape","call","urlB64Str","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","uriString","getUrl","httpUrl","tldEndingRegex","getUrlObject","validIpAddress","urlDomain","pair","source","ipString","mobile","vendor","opera","hasProtocol","anchor","regexpEmojiPresentation","CardApi","FieldApi","IdentityApi","LoginApi","LoginUriApi","SecureNoteApi","AttachmentData","CardData","CipherData","CollectionData","FieldData","IdentityData","LoginData","LoginUriData","PasswordHistoryData","SecureNoteData","AttachmentView","Attachment","toAttachmentData","buildDataModel","toCardData","Cipher","decAttachment","decField","decPh","toLoginData","toSecureNoteData","toIdentityData","toFieldData","toPasswordHistoryData","Collection","Domain","dataObj","notEncList","objProp","notEncStringList","viewModel","mapProp","EncString","encryptedStringOrType","decryptedValue","Field","Folder","Identity","Login","toLoginUriData","LoginUri","MasterPasswordPolicyOptions","Password","SecureNote","SymmetricCryptoKey","jsonResult","CardExport","FieldExport","IdentityExport","LoginUriExport","LoginExport","toView","toDomain","SecureNoteExport","CipherExport","CipherWithIdExport","CollectionExport","CollectionWithIdExport","FolderExport","FolderWithIdExport","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","CollectionRequest","FolderRequest","BaseResponse","propertyName","exactName","otherCasePropertyName","ErrorResponse","identityResponse","errorModel","responseErrorModel","messages","lastSep","CardView","_brand","_number","_subTitle","repeat","formatYear","CipherView","linkedFieldValue","linkedFieldI18nKey","CollectionView","FieldView","showCount","FolderView","IdentityView","_firstName","_lastName","address","addressPart2","ItemView","CanLaunchWhitelist","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","LoginView","PasswordHistoryView","SecureNoteView","LogLevelType","ConsoleLogService","timersMap","Debug","Info","Warning","level","hrtime","elapsed","styles","primary","secondary","danger","hoverStyles","BadgeDirective","badgeType","hasHoverEffects","nodeName","buttonStyles","ButtonDirective","block","defaultIcon","defaultI18n","BitErrorSummary","nextId","BitErrorComponent","requiredLength","BitFormFieldComponent","ngAfterContentChecked","ariaDescribedBy","BitHintComponent","PrefixClasses","BitPrefixDirective","BitSuffixDirective","BadgeModule","BannerComponent","bannerType","BannerModule","ButtonModule","CalloutModule","InputModule","FormFieldModule","MenuModule","SubmitButtonModule","BitInputDirective","ngControl","hasPrefix","hasSuffix","_required","touched","MenuDividerComponent","MenuItemDirective","role","tabIndex","MenuTriggerForDirective","overlay","isOpen","hasPopup","defaultMenuConfig","panelClass","hasBackdrop","backdropClass","scrollStrategy","scrollStrategies","reposition","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","withLockedPosition","withFlexibleDimensions","withPush","toggleMenu","destroyMenu","openMenu","disposeAll","menu","overlayRef","templatePortal","TemplatePortal","attach","closedEventsSub","getClosedEvents","keyDownEventsSub","keydownEvents","keyManager","onKeydown","detachments","escKey","backdropClick","menuClosed","dispose","MenuComponent","FocusKeyManager","menuItems","withWrap","TemplateRef","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","chunkId","miniCssF","globalThis","Function","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","nc","onScriptComplete","prev","doneFns","parentNode","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}